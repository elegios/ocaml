[
  structure_item (tools/caml_tex.ml[18,1233+0]..[18,1233+34])
    Pstr_attribute "warning"
    [
      structure_item (tools/caml_tex.ml[18,1233+12]..[18,1233+33])
        Pstr_eval
        expression (tools/caml_tex.ml[18,1233+12]..[18,1233+33])
          Pexp_constant PConst_string("+a-4-6-40..42-44-48",(tools/caml_tex.ml[18,1233+13]..[18,1233+32]),None)
    ]
  structure_item (tools/caml_tex.ml[19,1268+0]..[19,1268+14])
    Pstr_open Fresh
    module_expr (tools/caml_tex.ml[19,1268+5]..[19,1268+14])
      Pmod_ident "StdLabels" (tools/caml_tex.ml[19,1268+5]..[19,1268+14])
  structure_item (tools/caml_tex.ml[20,1283+0]..[20,1283+8])
    Pstr_open Fresh
    module_expr (tools/caml_tex.ml[20,1283+5]..[20,1283+8])
      Pmod_ident "Str" (tools/caml_tex.ml[20,1283+5]..[20,1283+8])
  structure_item (tools/caml_tex.ml[22,1293+0]..[22,1293+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[22,1293+4]..[22,1293+14])
          Ppat_var "camlprefix" (tools/caml_tex.ml[22,1293+4]..[22,1293+14])
        expression (tools/caml_tex.ml[22,1293+17]..[22,1293+23])
          Pexp_constant PConst_string("caml",(tools/caml_tex.ml[22,1293+18]..[22,1293+22]),None)
    ]
  structure_item (tools/caml_tex.ml[24,1318+0]..[24,1318+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[24,1318+4]..[24,1318+16])
          Ppat_var "latex_escape" (tools/caml_tex.ml[24,1318+4]..[24,1318+16])
        expression (tools/caml_tex.ml[24,1318+17]..[24,1318+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[24,1318+17]..[24,1318+18])
            Ppat_var "s" (tools/caml_tex.ml[24,1318+17]..[24,1318+18])
          expression (tools/caml_tex.ml[24,1318+21]..[24,1318+51])
            Pexp_apply
            expression (tools/caml_tex.ml[24,1318+21]..[24,1318+34])
              Pexp_ident "String.concat" (tools/caml_tex.ml[24,1318+21]..[24,1318+34])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[24,1318+35]..[24,1318+37])
                  Pexp_constant PConst_string("",(tools/caml_tex.ml[24,1318+36]..[24,1318+36]),None)
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[24,1318+38]..[24,1318+51])
                  Pexp_construct "::" (tools/caml_tex.ml[24,1318+39]..[24,1318+51]) ghost
                  Some
                    expression (tools/caml_tex.ml[24,1318+39]..[24,1318+51]) ghost
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[24,1318+39]..[24,1318+42])
                          Pexp_constant PConst_string("$",(tools/caml_tex.ml[24,1318+40]..[24,1318+41]),None)
                        expression (tools/caml_tex.ml[24,1318+44]..[24,1318+51]) ghost
                          Pexp_construct "::" (tools/caml_tex.ml[24,1318+44]..[24,1318+51]) ghost
                          Some
                            expression (tools/caml_tex.ml[24,1318+44]..[24,1318+51]) ghost
                              Pexp_tuple
                              [
                                expression (tools/caml_tex.ml[24,1318+44]..[24,1318+45])
                                  Pexp_ident "s" (tools/caml_tex.ml[24,1318+44]..[24,1318+45])
                                expression (tools/caml_tex.ml[24,1318+47]..[24,1318+51]) ghost
                                  Pexp_construct "::" (tools/caml_tex.ml[24,1318+47]..[24,1318+51]) ghost
                                  Some
                                    expression (tools/caml_tex.ml[24,1318+47]..[24,1318+51]) ghost
                                      Pexp_tuple
                                      [
                                        expression (tools/caml_tex.ml[24,1318+47]..[24,1318+50])
                                          Pexp_constant PConst_string("$",(tools/caml_tex.ml[24,1318+48]..[24,1318+49]),None)
                                        expression (tools/caml_tex.ml[24,1318+50]..[24,1318+51]) ghost
                                          Pexp_construct "[]" (tools/caml_tex.ml[24,1318+50]..[24,1318+51]) ghost
                                          None
                                      ]
                              ]
                      ]
            ]
    ]
  structure_item (tools/caml_tex.ml[25,1370+0]..[25,1370+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[25,1370+4]..[25,1370+19])
          Ppat_var "toplevel_prompt" (tools/caml_tex.ml[25,1370+4]..[25,1370+19])
        expression (tools/caml_tex.ml[25,1370+21]..[25,1370+46])
          Pexp_apply
          expression (tools/caml_tex.ml[25,1370+41]..[25,1370+42])
            Pexp_ident "^" (tools/caml_tex.ml[25,1370+41]..[25,1370+42])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[25,1370+21]..[25,1370+40])
                Pexp_apply
                expression (tools/caml_tex.ml[25,1370+21]..[25,1370+33])
                  Pexp_ident "latex_escape" (tools/caml_tex.ml[25,1370+21]..[25,1370+33])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[25,1370+34]..[25,1370+40])
                      Pexp_constant PConst_string ("\\?",(tools/caml_tex.ml[25,1370+36]..[25,1370+38]),Some "")
                ]
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[25,1370+43]..[25,1370+46])
                Pexp_constant PConst_string(" ",(tools/caml_tex.ml[25,1370+44]..[25,1370+45]),None)
          ]
    ]
  structure_item (tools/caml_tex.ml[27,1418+0]..[27,1418+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[27,1418+4]..[27,1418+18])
          Ppat_var "camlbunderline" (tools/caml_tex.ml[27,1418+4]..[27,1418+18])
        expression (tools/caml_tex.ml[27,1418+21]..[27,1418+25])
          Pexp_constant PConst_string("<<",(tools/caml_tex.ml[27,1418+22]..[27,1418+24]),None)
    ]
  structure_item (tools/caml_tex.ml[28,1444+0]..[28,1444+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[28,1444+4]..[28,1444+18])
          Ppat_var "camleunderline" (tools/caml_tex.ml[28,1444+4]..[28,1444+18])
        expression (tools/caml_tex.ml[28,1444+21]..[28,1444+25])
          Pexp_constant PConst_string(">>",(tools/caml_tex.ml[28,1444+22]..[28,1444+24]),None)
    ]
  structure_item (tools/caml_tex.ml[32,1520+0]..[32,1520+24])
    Pstr_type Rec
    [
      type_declaration "env" (tools/caml_tex.ml[32,1520+5]..[32,1520+8]) (tools/caml_tex.ml[32,1520+0]..[32,1520+24])
        attribute "ocaml.doc"
          [
            structure_item (tools/caml_tex.ml[31,1472+0]..[31,1472+47])
              Pstr_eval
              expression (tools/caml_tex.ml[31,1472+0]..[31,1472+47])
                Pexp_constant PConst_string(" Restrict the number of latex environment ",(tools/caml_tex.ml[31,1472+0]..[31,1472+47]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (tools/caml_tex.ml[32,1520+11]..[32,1520+24])
                "Env" (tools/caml_tex.ml[32,1520+11]..[32,1520+14])
                [
                  core_type (tools/caml_tex.ml[32,1520+18]..[32,1520+24])
                    Ptyp_constr "string" (tools/caml_tex.ml[32,1520+18]..[32,1520+24])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (tools/caml_tex.ml[33,1545+0]..[33,1545+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[33,1545+4]..[33,1545+8])
          Ppat_var "main" (tools/caml_tex.ml[33,1545+4]..[33,1545+8])
        expression (tools/caml_tex.ml[33,1545+11]..[33,1545+24])
          Pexp_construct "Env" (tools/caml_tex.ml[33,1545+11]..[33,1545+14])
          Some
            expression (tools/caml_tex.ml[33,1545+15]..[33,1545+24])
              Pexp_constant PConst_string("example",(tools/caml_tex.ml[33,1545+16]..[33,1545+23]),None)
    ]
  structure_item (tools/caml_tex.ml[34,1570+0]..[34,1570+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[34,1570+4]..[34,1570+13])
          Ppat_var "input_env" (tools/caml_tex.ml[34,1570+4]..[34,1570+13])
        expression (tools/caml_tex.ml[34,1570+16]..[34,1570+27])
          Pexp_construct "Env" (tools/caml_tex.ml[34,1570+16]..[34,1570+19])
          Some
            expression (tools/caml_tex.ml[34,1570+20]..[34,1570+27])
              Pexp_constant PConst_string("input",(tools/caml_tex.ml[34,1570+21]..[34,1570+26]),None)
    ]
  structure_item (tools/caml_tex.ml[35,1598+0]..[35,1598+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[35,1598+4]..[35,1598+13])
          Ppat_var "ok_output" (tools/caml_tex.ml[35,1598+4]..[35,1598+13])
        expression (tools/caml_tex.ml[35,1598+16]..[35,1598+28])
          Pexp_construct "Env" (tools/caml_tex.ml[35,1598+16]..[35,1598+19])
          Some
            expression (tools/caml_tex.ml[35,1598+20]..[35,1598+28])
              Pexp_constant PConst_string("output",(tools/caml_tex.ml[35,1598+21]..[35,1598+27]),None)
    ]
  structure_item (tools/caml_tex.ml[36,1627+0]..[36,1627+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[36,1627+4]..[36,1627+9])
          Ppat_var "error" (tools/caml_tex.ml[36,1627+4]..[36,1627+9])
        expression (tools/caml_tex.ml[36,1627+12]..[36,1627+23])
          Pexp_construct "Env" (tools/caml_tex.ml[36,1627+12]..[36,1627+15])
          Some
            expression (tools/caml_tex.ml[36,1627+16]..[36,1627+23])
              Pexp_constant PConst_string("error",(tools/caml_tex.ml[36,1627+17]..[36,1627+22]),None)
    ]
  structure_item (tools/caml_tex.ml[37,1651+0]..[37,1651+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[37,1651+4]..[37,1651+11])
          Ppat_var "warning" (tools/caml_tex.ml[37,1651+4]..[37,1651+11])
        expression (tools/caml_tex.ml[37,1651+14]..[37,1651+24])
          Pexp_construct "Env" (tools/caml_tex.ml[37,1651+14]..[37,1651+17])
          Some
            expression (tools/caml_tex.ml[37,1651+18]..[37,1651+24])
              Pexp_constant PConst_string("warn",(tools/caml_tex.ml[37,1651+19]..[37,1651+23]),None)
    ]
  structure_item (tools/caml_tex.ml[38,1676+0]..[38,1676+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[38,1676+4]..[38,1676+14])
          Ppat_var "phrase_env" (tools/caml_tex.ml[38,1676+4]..[38,1676+14])
        expression (tools/caml_tex.ml[38,1676+17]..[38,1676+23])
          Pexp_construct "Env" (tools/caml_tex.ml[38,1676+17]..[38,1676+20])
          Some
            expression (tools/caml_tex.ml[38,1676+21]..[38,1676+23])
              Pexp_constant PConst_string("",(tools/caml_tex.ml[38,1676+22]..[38,1676+22]),None)
    ]
  structure_item (tools/caml_tex.ml[40,1701+0]..[43,1827+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[40,1701+4]..[40,1701+9])
          Ppat_var "start" (tools/caml_tex.ml[40,1701+4]..[40,1701+9])
        expression (tools/caml_tex.ml[40,1701+10]..[43,1827+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[40,1701+10]..[40,1701+13])
            Ppat_var "out" (tools/caml_tex.ml[40,1701+10]..[40,1701+13])
          expression (tools/caml_tex.ml[40,1701+14]..[43,1827+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (tools/caml_tex.ml[40,1701+14]..[40,1701+21])
              Ppat_construct "Env" (tools/caml_tex.ml[40,1701+15]..[40,1701+18])
              Some
                []
                pattern (tools/caml_tex.ml[40,1701+19]..[40,1701+20])
                  Ppat_var "s" (tools/caml_tex.ml[40,1701+19]..[40,1701+20])
            expression (tools/caml_tex.ml[40,1701+22]..[43,1827+25]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (tools/caml_tex.ml[40,1701+22]..[40,1701+26])
                Ppat_var "args" (tools/caml_tex.ml[40,1701+22]..[40,1701+26])
              expression (tools/caml_tex.ml[41,1730+2]..[43,1827+25])
                Pexp_sequence
                expression (tools/caml_tex.ml[41,1730+2]..[41,1730+49])
                  Pexp_apply
                  expression (tools/caml_tex.ml[41,1730+2]..[41,1730+16])
                    Pexp_ident "Format.fprintf" (tools/caml_tex.ml[41,1730+2]..[41,1730+16])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[41,1730+17]..[41,1730+20])
                        Pexp_ident "out" (tools/caml_tex.ml[41,1730+17]..[41,1730+20])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[41,1730+21]..[41,1730+36])
                        Pexp_constant PConst_string("\\begin{%s%s}",(tools/caml_tex.ml[41,1730+22]..[41,1730+35]),None)
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[41,1730+37]..[41,1730+47])
                        Pexp_ident "camlprefix" (tools/caml_tex.ml[41,1730+37]..[41,1730+47])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[41,1730+48]..[41,1730+49])
                        Pexp_ident "s" (tools/caml_tex.ml[41,1730+48]..[41,1730+49])
                  ]
                expression (tools/caml_tex.ml[42,1781+2]..[43,1827+25])
                  Pexp_sequence
                  expression (tools/caml_tex.ml[42,1781+2]..[42,1781+44])
                    Pexp_apply
                    expression (tools/caml_tex.ml[42,1781+2]..[42,1781+11])
                      Pexp_ident "List.iter" (tools/caml_tex.ml[42,1781+2]..[42,1781+11])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[42,1781+12]..[42,1781+39])
                          Pexp_apply
                          expression (tools/caml_tex.ml[42,1781+13]..[42,1781+27])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[42,1781+13]..[42,1781+27])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[42,1781+28]..[42,1781+31])
                                Pexp_ident "out" (tools/caml_tex.ml[42,1781+28]..[42,1781+31])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[42,1781+32]..[42,1781+38])
                                Pexp_constant PConst_string("{%s}",(tools/caml_tex.ml[42,1781+33]..[42,1781+37]),None)
                          ]
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[42,1781+40]..[42,1781+44])
                          Pexp_ident "args" (tools/caml_tex.ml[42,1781+40]..[42,1781+44])
                    ]
                  expression (tools/caml_tex.ml[43,1827+2]..[43,1827+25])
                    Pexp_apply
                    expression (tools/caml_tex.ml[43,1827+2]..[43,1827+16])
                      Pexp_ident "Format.fprintf" (tools/caml_tex.ml[43,1827+2]..[43,1827+16])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[43,1827+17]..[43,1827+20])
                          Pexp_ident "out" (tools/caml_tex.ml[43,1827+17]..[43,1827+20])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[43,1827+21]..[43,1827+25])
                          Pexp_constant PConst_string("\n",(tools/caml_tex.ml[43,1827+22]..[43,1827+24]),None)
                    ]
    ]
  structure_item (tools/caml_tex.ml[45,1854+0]..[47,1926+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[45,1854+4]..[45,1854+8])
          Ppat_var "stop" (tools/caml_tex.ml[45,1854+4]..[45,1854+8])
        expression (tools/caml_tex.ml[45,1854+9]..[47,1926+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[45,1854+9]..[45,1854+12])
            Ppat_var "out" (tools/caml_tex.ml[45,1854+9]..[45,1854+12])
          expression (tools/caml_tex.ml[45,1854+13]..[47,1926+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (tools/caml_tex.ml[45,1854+13]..[45,1854+20])
              Ppat_construct "Env" (tools/caml_tex.ml[45,1854+14]..[45,1854+17])
              Some
                []
                pattern (tools/caml_tex.ml[45,1854+18]..[45,1854+19])
                  Ppat_var "s" (tools/caml_tex.ml[45,1854+18]..[45,1854+19])
            expression (tools/caml_tex.ml[46,1877+2]..[47,1926+25])
              Pexp_sequence
              expression (tools/caml_tex.ml[46,1877+2]..[46,1877+47])
                Pexp_apply
                expression (tools/caml_tex.ml[46,1877+2]..[46,1877+16])
                  Pexp_ident "Format.fprintf" (tools/caml_tex.ml[46,1877+2]..[46,1877+16])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[46,1877+17]..[46,1877+20])
                      Pexp_ident "out" (tools/caml_tex.ml[46,1877+17]..[46,1877+20])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[46,1877+21]..[46,1877+34])
                      Pexp_constant PConst_string("\\end{%s%s}",(tools/caml_tex.ml[46,1877+22]..[46,1877+33]),None)
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[46,1877+35]..[46,1877+45])
                      Pexp_ident "camlprefix" (tools/caml_tex.ml[46,1877+35]..[46,1877+45])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[46,1877+46]..[46,1877+47])
                      Pexp_ident "s" (tools/caml_tex.ml[46,1877+46]..[46,1877+47])
                ]
              expression (tools/caml_tex.ml[47,1926+2]..[47,1926+25])
                Pexp_apply
                expression (tools/caml_tex.ml[47,1926+2]..[47,1926+16])
                  Pexp_ident "Format.fprintf" (tools/caml_tex.ml[47,1926+2]..[47,1926+16])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[47,1926+17]..[47,1926+20])
                      Pexp_ident "out" (tools/caml_tex.ml[47,1926+17]..[47,1926+20])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[47,1926+21]..[47,1926+25])
                      Pexp_constant PConst_string("\n",(tools/caml_tex.ml[47,1926+22]..[47,1926+24]),None)
                ]
    ]
  structure_item (tools/caml_tex.ml[49,1953+0]..[53,2115+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[49,1953+4]..[49,1953+12])
          Ppat_var "code_env" (tools/caml_tex.ml[49,1953+4]..[49,1953+12])
        expression (tools/caml_tex.ml[49,1953+13]..[53,2115+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[49,1953+13]..[49,1953+16])
            Ppat_var "env" (tools/caml_tex.ml[49,1953+13]..[49,1953+16])
          expression (tools/caml_tex.ml[49,1953+17]..[53,2115+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (tools/caml_tex.ml[49,1953+17]..[49,1953+20])
              Ppat_var "out" (tools/caml_tex.ml[49,1953+17]..[49,1953+20])
            expression (tools/caml_tex.ml[49,1953+21]..[53,2115+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (tools/caml_tex.ml[49,1953+21]..[49,1953+22])
                Ppat_var "s" (tools/caml_tex.ml[49,1953+21]..[49,1953+22])
              expression (tools/caml_tex.ml[50,1978+2]..[53,2115+22])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (tools/caml_tex.ml[50,1978+6]..[50,1978+9])
                      Ppat_var "sep" (tools/caml_tex.ml[50,1978+6]..[50,1978+9])
                    expression (tools/caml_tex.ml[50,1978+12]..[50,1978+63])
                      Pexp_ifthenelse
                      expression (tools/caml_tex.ml[50,1978+15]..[50,1978+45])
                        Pexp_apply
                        expression (tools/caml_tex.ml[50,1978+39]..[50,1978+40])
                          Pexp_ident "=" (tools/caml_tex.ml[50,1978+39]..[50,1978+40])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[50,1978+15]..[50,1978+38])
                              Pexp_apply
                              expression (tools/caml_tex.ml[50,1978+15]..[50,1978+38]) ghost
                                Pexp_ident "String.get" (tools/caml_tex.ml[50,1978+15]..[50,1978+38]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[50,1978+15]..[50,1978+16])
                                    Pexp_ident "s" (tools/caml_tex.ml[50,1978+15]..[50,1978+16])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[50,1978+18]..[50,1978+37])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[50,1978+34]..[50,1978+35])
                                      Pexp_ident "-" (tools/caml_tex.ml[50,1978+34]..[50,1978+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[50,1978+18]..[50,1978+33])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[50,1978+18]..[50,1978+31])
                                            Pexp_ident "String.length" (tools/caml_tex.ml[50,1978+18]..[50,1978+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[50,1978+32]..[50,1978+33])
                                                Pexp_ident "s" (tools/caml_tex.ml[50,1978+32]..[50,1978+33])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[50,1978+36]..[50,1978+37])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[50,1978+41]..[50,1978+45])
                              Pexp_constant PConst_char 0a
                        ]
                      expression (tools/caml_tex.ml[50,1978+51]..[50,1978+53])
                        Pexp_constant PConst_string("",(tools/caml_tex.ml[50,1978+52]..[50,1978+52]),None)
                      Some
                        expression (tools/caml_tex.ml[50,1978+59]..[50,1978+63])
                          Pexp_constant PConst_string("\n",(tools/caml_tex.ml[50,1978+60]..[50,1978+62]),None)
                ]
                expression (tools/caml_tex.ml[51,2045+2]..[53,2115+22])
                  Pexp_apply
                  expression (tools/caml_tex.ml[51,2045+2]..[51,2045+16])
                    Pexp_ident "Format.fprintf" (tools/caml_tex.ml[51,2045+2]..[51,2045+16])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[51,2045+17]..[51,2045+20])
                        Pexp_ident "out" (tools/caml_tex.ml[51,2045+17]..[51,2045+20])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[51,2045+21]..[51,2045+31])
                        Pexp_constant PConst_string("%a%s%s%a",(tools/caml_tex.ml[51,2045+22]..[51,2045+30]),None)
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[52,2077+4]..[52,2077+37])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (tools/caml_tex.ml[52,2077+9]..[52,2077+12])
                          Ppat_var "ppf" (tools/caml_tex.ml[52,2077+9]..[52,2077+12])
                        expression (tools/caml_tex.ml[52,2077+13]..[52,2077+36]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (tools/caml_tex.ml[52,2077+13]..[52,2077+16])
                            Ppat_var "env" (tools/caml_tex.ml[52,2077+13]..[52,2077+16])
                          expression (tools/caml_tex.ml[52,2077+20]..[52,2077+36])
                            Pexp_apply
                            expression (tools/caml_tex.ml[52,2077+20]..[52,2077+25])
                              Pexp_ident "start" (tools/caml_tex.ml[52,2077+20]..[52,2077+25])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[52,2077+26]..[52,2077+29])
                                  Pexp_ident "ppf" (tools/caml_tex.ml[52,2077+26]..[52,2077+29])
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[52,2077+30]..[52,2077+33])
                                  Pexp_ident "env" (tools/caml_tex.ml[52,2077+30]..[52,2077+33])
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[52,2077+34]..[52,2077+36])
                                  Pexp_construct "[]" (tools/caml_tex.ml[52,2077+34]..[52,2077+36])
                                  None
                            ]
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[53,2115+4]..[53,2115+7])
                        Pexp_ident "env" (tools/caml_tex.ml[53,2115+4]..[53,2115+7])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[53,2115+8]..[53,2115+9])
                        Pexp_ident "s" (tools/caml_tex.ml[53,2115+8]..[53,2115+9])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[53,2115+10]..[53,2115+13])
                        Pexp_ident "sep" (tools/caml_tex.ml[53,2115+10]..[53,2115+13])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[53,2115+14]..[53,2115+18])
                        Pexp_ident "stop" (tools/caml_tex.ml[53,2115+14]..[53,2115+18])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[53,2115+19]..[53,2115+22])
                        Pexp_ident "env" (tools/caml_tex.ml[53,2115+19]..[53,2115+22])
                  ]
    ]
  structure_item (tools/caml_tex.ml[56,2140+0]..[56,2140+51])
    Pstr_type Rec
    [
      type_declaration "example_mode" (tools/caml_tex.ml[56,2140+5]..[56,2140+17]) (tools/caml_tex.ml[56,2140+0]..[56,2140+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (tools/caml_tex.ml[56,2140+20]..[56,2140+28])
                "Toplevel" (tools/caml_tex.ml[56,2140+20]..[56,2140+28])
                []
                None
              (tools/caml_tex.ml[56,2140+29]..[56,2140+39])
                "Verbatim" (tools/caml_tex.ml[56,2140+31]..[56,2140+39])
                []
                None
              (tools/caml_tex.ml[56,2140+40]..[56,2140+51])
                "Signature" (tools/caml_tex.ml[56,2140+42]..[56,2140+51])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (tools/caml_tex.ml[57,2192+0]..[60,2277+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[57,2192+4]..[57,2192+18])
          Ppat_var "string_of_mode" (tools/caml_tex.ml[57,2192+4]..[57,2192+18])
        expression (tools/caml_tex.ml[57,2192+22]..[60,2277+28])
          Pexp_function
          [
            <case>
              pattern (tools/caml_tex.ml[58,2223+4]..[58,2223+12])
                Ppat_construct "Toplevel" (tools/caml_tex.ml[58,2223+4]..[58,2223+12])
                None
              expression (tools/caml_tex.ml[58,2223+16]..[58,2223+26])
                Pexp_constant PConst_string("toplevel",(tools/caml_tex.ml[58,2223+17]..[58,2223+25]),None)
            <case>
              pattern (tools/caml_tex.ml[59,2250+4]..[59,2250+12])
                Ppat_construct "Verbatim" (tools/caml_tex.ml[59,2250+4]..[59,2250+12])
                None
              expression (tools/caml_tex.ml[59,2250+16]..[59,2250+26])
                Pexp_constant PConst_string("verbatim",(tools/caml_tex.ml[59,2250+17]..[59,2250+25]),None)
            <case>
              pattern (tools/caml_tex.ml[60,2277+4]..[60,2277+13])
                Ppat_construct "Signature" (tools/caml_tex.ml[60,2277+4]..[60,2277+13])
                None
              expression (tools/caml_tex.ml[60,2277+17]..[60,2277+28])
                Pexp_constant PConst_string("signature",(tools/caml_tex.ml[60,2277+18]..[60,2277+27]),None)
          ]
    ]
  structure_item (tools/caml_tex.ml[63,2308+0]..[63,2308+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[63,2308+4]..[63,2308+11])
          Ppat_var "verbose" (tools/caml_tex.ml[63,2308+4]..[63,2308+11])
        expression (tools/caml_tex.ml[63,2308+14]..[63,2308+22])
          Pexp_apply
          expression (tools/caml_tex.ml[63,2308+14]..[63,2308+17])
            Pexp_ident "ref" (tools/caml_tex.ml[63,2308+14]..[63,2308+17])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[63,2308+18]..[63,2308+22])
                Pexp_construct "true" (tools/caml_tex.ml[63,2308+18]..[63,2308+22])
                None
          ]
    ]
  structure_item (tools/caml_tex.ml[64,2331+0]..[64,2331+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[64,2331+4]..[64,2331+11])
          Ppat_var "linelen" (tools/caml_tex.ml[64,2331+4]..[64,2331+11])
        expression (tools/caml_tex.ml[64,2331+14]..[64,2331+20])
          Pexp_apply
          expression (tools/caml_tex.ml[64,2331+14]..[64,2331+17])
            Pexp_ident "ref" (tools/caml_tex.ml[64,2331+14]..[64,2331+17])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[64,2331+18]..[64,2331+20])
                Pexp_constant PConst_int (72,None)
          ]
    ]
  structure_item (tools/caml_tex.ml[65,2352+0]..[65,2352+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[65,2352+4]..[65,2352+11])
          Ppat_var "outfile" (tools/caml_tex.ml[65,2352+4]..[65,2352+11])
        expression (tools/caml_tex.ml[65,2352+14]..[65,2352+20])
          Pexp_apply
          expression (tools/caml_tex.ml[65,2352+14]..[65,2352+17])
            Pexp_ident "ref" (tools/caml_tex.ml[65,2352+14]..[65,2352+17])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[65,2352+18]..[65,2352+20])
                Pexp_constant PConst_string("",(tools/caml_tex.ml[65,2352+19]..[65,2352+19]),None)
          ]
    ]
  structure_item (tools/caml_tex.ml[66,2373+0]..[66,2373+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[66,2373+4]..[66,2373+17])
          Ppat_var "cut_at_blanks" (tools/caml_tex.ml[66,2373+4]..[66,2373+17])
        expression (tools/caml_tex.ml[66,2373+20]..[66,2373+29])
          Pexp_apply
          expression (tools/caml_tex.ml[66,2373+20]..[66,2373+23])
            Pexp_ident "ref" (tools/caml_tex.ml[66,2373+20]..[66,2373+23])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[66,2373+24]..[66,2373+29])
                Pexp_construct "false" (tools/caml_tex.ml[66,2373+24]..[66,2373+29])
                None
          ]
    ]
  structure_item (tools/caml_tex.ml[67,2403+0]..[67,2403+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[67,2403+4]..[67,2403+9])
          Ppat_var "files" (tools/caml_tex.ml[67,2403+4]..[67,2403+9])
        expression (tools/caml_tex.ml[67,2403+12]..[67,2403+18])
          Pexp_apply
          expression (tools/caml_tex.ml[67,2403+12]..[67,2403+15])
            Pexp_ident "ref" (tools/caml_tex.ml[67,2403+12]..[67,2403+15])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[67,2403+16]..[67,2403+18])
                Pexp_construct "[]" (tools/caml_tex.ml[67,2403+16]..[67,2403+18])
                None
          ]
    ]
  structure_item (tools/caml_tex.ml[68,2422+0]..[68,2422+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[68,2422+4]..[68,2422+13])
          Ppat_var "repo_root" (tools/caml_tex.ml[68,2422+4]..[68,2422+13])
        expression (tools/caml_tex.ml[68,2422+16]..[68,2422+22])
          Pexp_apply
          expression (tools/caml_tex.ml[68,2422+16]..[68,2422+19])
            Pexp_ident "ref" (tools/caml_tex.ml[68,2422+16]..[68,2422+19])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[68,2422+20]..[68,2422+22])
                Pexp_constant PConst_string("",(tools/caml_tex.ml[68,2422+21]..[68,2422+21]),None)
          ]
    ]
  structure_item (tools/caml_tex.ml[70,2446+0]..[77,2614+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[70,2446+4]..[70,2446+8])
          Ppat_var "~!" (tools/caml_tex.ml[70,2446+4]..[70,2446+8])
        expression (tools/caml_tex.ml[71,2457+2]..[77,2614+10])
          Pexp_let Nonrec
          [
            <def>
              pattern (tools/caml_tex.ml[71,2457+6]..[71,2457+10])
                Ppat_var "memo" (tools/caml_tex.ml[71,2457+6]..[71,2457+10])
              expression (tools/caml_tex.ml[71,2457+13]..[71,2457+19])
                Pexp_apply
                expression (tools/caml_tex.ml[71,2457+13]..[71,2457+16])
                  Pexp_ident "ref" (tools/caml_tex.ml[71,2457+13]..[71,2457+16])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[71,2457+17]..[71,2457+19])
                      Pexp_construct "[]" (tools/caml_tex.ml[71,2457+17]..[71,2457+19])
                      None
                ]
          ]
          expression (tools/caml_tex.ml[72,2480+2]..[77,2614+10])
            Pexp_fun
            Nolabel
            None
            pattern (tools/caml_tex.ml[72,2480+6]..[72,2480+9])
              Ppat_var "key" (tools/caml_tex.ml[72,2480+6]..[72,2480+9])
            expression (tools/caml_tex.ml[73,2493+4]..[77,2614+10])
              Pexp_try
              expression (tools/caml_tex.ml[73,2493+8]..[73,2493+27])
                Pexp_apply
                expression (tools/caml_tex.ml[73,2493+8]..[73,2493+17])
                  Pexp_ident "List.assq" (tools/caml_tex.ml[73,2493+8]..[73,2493+17])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[73,2493+18]..[73,2493+21])
                      Pexp_ident "key" (tools/caml_tex.ml[73,2493+18]..[73,2493+21])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[73,2493+22]..[73,2493+27])
                      Pexp_apply
                      expression (tools/caml_tex.ml[73,2493+22]..[73,2493+23])
                        Pexp_ident "!" (tools/caml_tex.ml[73,2493+22]..[73,2493+23])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[73,2493+23]..[73,2493+27])
                            Pexp_ident "memo" (tools/caml_tex.ml[73,2493+23]..[73,2493+27])
                      ]
                ]
              [
                <case>
                  pattern (tools/caml_tex.ml[74,2521+9]..[74,2521+18])
                    Ppat_construct "Not_found" (tools/caml_tex.ml[74,2521+9]..[74,2521+18])
                    None
                  expression (tools/caml_tex.ml[75,2543+6]..[77,2614+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[75,2543+10]..[75,2543+14])
                          Ppat_var "data" (tools/caml_tex.ml[75,2543+10]..[75,2543+14])
                        expression (tools/caml_tex.ml[75,2543+17]..[75,2543+31])
                          Pexp_apply
                          expression (tools/caml_tex.ml[75,2543+17]..[75,2543+27])
                            Pexp_ident "Str.regexp" (tools/caml_tex.ml[75,2543+17]..[75,2543+27])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[75,2543+28]..[75,2543+31])
                                Pexp_ident "key" (tools/caml_tex.ml[75,2543+28]..[75,2543+31])
                          ]
                    ]
                    expression (tools/caml_tex.ml[76,2578+6]..[77,2614+10])
                      Pexp_sequence
                      expression (tools/caml_tex.ml[76,2578+6]..[76,2578+34])
                        Pexp_apply
                        expression (tools/caml_tex.ml[76,2578+11]..[76,2578+13])
                          Pexp_ident ":=" (tools/caml_tex.ml[76,2578+11]..[76,2578+13])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[76,2578+6]..[76,2578+10])
                              Pexp_ident "memo" (tools/caml_tex.ml[76,2578+6]..[76,2578+10])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[76,2578+14]..[76,2578+34])
                              Pexp_construct "::" (tools/caml_tex.ml[76,2578+26]..[76,2578+28])
                              Some
                                expression (tools/caml_tex.ml[76,2578+14]..[76,2578+34]) ghost
                                  Pexp_tuple
                                  [
                                    expression (tools/caml_tex.ml[76,2578+14]..[76,2578+25])
                                      Pexp_tuple
                                      [
                                        expression (tools/caml_tex.ml[76,2578+15]..[76,2578+18])
                                          Pexp_ident "key" (tools/caml_tex.ml[76,2578+15]..[76,2578+18])
                                        expression (tools/caml_tex.ml[76,2578+20]..[76,2578+24])
                                          Pexp_ident "data" (tools/caml_tex.ml[76,2578+20]..[76,2578+24])
                                      ]
                                    expression (tools/caml_tex.ml[76,2578+29]..[76,2578+34])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[76,2578+29]..[76,2578+30])
                                        Pexp_ident "!" (tools/caml_tex.ml[76,2578+29]..[76,2578+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[76,2578+30]..[76,2578+34])
                                            Pexp_ident "memo" (tools/caml_tex.ml[76,2578+30]..[76,2578+34])
                                      ]
                                  ]
                        ]
                      expression (tools/caml_tex.ml[77,2614+6]..[77,2614+10])
                        Pexp_ident "data" (tools/caml_tex.ml[77,2614+6]..[77,2614+10])
              ]
    ]
  structure_item (tools/caml_tex.ml[79,2626+0]..[79,2626+34])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (tools/caml_tex.ml[79,2626+0]..[79,2626+34])
          pext_name = "Phrase_parsing"
          pext_kind =
            Pext_decl
              [
                core_type (tools/caml_tex.ml[79,2626+28]..[79,2626+34])
                  Ptyp_constr "string" (tools/caml_tex.ml[79,2626+28]..[79,2626+34])
                  []
              ]
              None
  structure_item (tools/caml_tex.ml[81,2662+0]..[244,8034+3])
    Pstr_module
    "Toplevel" (tools/caml_tex.ml[81,2662+7]..[81,2662+15])
      module_expr (tools/caml_tex.ml[81,2662+18]..[244,8034+3])
        Pmod_structure
        [
          structure_item (tools/caml_tex.ml[82,2687+2]..[83,2751+44])
            Pstr_attribute "ocaml.text"
            [
              structure_item (tools/caml_tex.ml[82,2687+2]..[83,2751+44])
                Pstr_eval
                expression (tools/caml_tex.ml[82,2687+2]..[83,2751+44])
                  Pexp_constant PConst_string(" Initialize the toplevel loop, redirect stdout and stderr,\n      capture warnings and error messages ",(tools/caml_tex.ml[82,2687+2]..[83,2751+44]),None)
            ]
          structure_item (tools/caml_tex.ml[85,2797+2]..[93,3129+5])
            Pstr_type Rec
            [
              type_declaration "output" (tools/caml_tex.ml[85,2797+7]..[85,2797+13]) (tools/caml_tex.ml[85,2797+2]..[93,3129+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (tools/caml_tex.ml[87,2819+6]..[87,2819+21])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[87,2819+22]..[87,2819+47])
                              Pstr_eval
                              expression (tools/caml_tex.ml[87,2819+22]..[87,2819+47])
                                Pexp_constant PConst_string(" error message text ",(tools/caml_tex.ml[87,2819+22]..[87,2819+47]),None)
                          ]
                        Immutable
                        "error" (tools/caml_tex.ml[87,2819+6]..[87,2819+11])                        core_type (tools/caml_tex.ml[87,2819+14]..[87,2819+20])
                          Ptyp_constr "string" (tools/caml_tex.ml[87,2819+14]..[87,2819+20])
                          []
                      (tools/caml_tex.ml[88,2867+6]..[88,2867+29])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[88,2867+30]..[88,2867+58])
                              Pstr_eval
                              expression (tools/caml_tex.ml[88,2867+30]..[88,2867+58])
                                Pexp_constant PConst_string(" warning messages text ",(tools/caml_tex.ml[88,2867+30]..[88,2867+58]),None)
                          ]
                        Immutable
                        "warnings" (tools/caml_tex.ml[88,2867+6]..[88,2867+14])                        core_type (tools/caml_tex.ml[88,2867+17]..[88,2867+28])
                          Ptyp_constr "list" (tools/caml_tex.ml[88,2867+24]..[88,2867+28])
                          [
                            core_type (tools/caml_tex.ml[88,2867+17]..[88,2867+23])
                              Ptyp_constr "string" (tools/caml_tex.ml[88,2867+17]..[88,2867+23])
                              []
                          ]
                      (tools/caml_tex.ml[89,2926+6]..[89,2926+22])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[89,2926+23]..[89,2926+45])
                              Pstr_eval
                              expression (tools/caml_tex.ml[89,2926+23]..[89,2926+45])
                                Pexp_constant PConst_string(" toplevel output ",(tools/caml_tex.ml[89,2926+23]..[89,2926+45]),None)
                          ]
                        Immutable
                        "values" (tools/caml_tex.ml[89,2926+6]..[89,2926+12])                        core_type (tools/caml_tex.ml[89,2926+15]..[89,2926+21])
                          Ptyp_constr "string" (tools/caml_tex.ml[89,2926+15]..[89,2926+21])
                          []
                      (tools/caml_tex.ml[90,2972+6]..[90,2972+22])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[90,2972+23]..[90,2972+67])
                              Pstr_eval
                              expression (tools/caml_tex.ml[90,2972+23]..[90,2972+67])
                                Pexp_constant PConst_string(" output printed on the toplevel stdout ",(tools/caml_tex.ml[90,2972+23]..[90,2972+67]),None)
                          ]
                        Immutable
                        "stdout" (tools/caml_tex.ml[90,2972+6]..[90,2972+12])                        core_type (tools/caml_tex.ml[90,2972+15]..[90,2972+21])
                          Ptyp_constr "string" (tools/caml_tex.ml[90,2972+15]..[90,2972+21])
                          []
                      (tools/caml_tex.ml[91,3040+6]..[91,3040+35])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[92,3076+6]..[92,3076+52])
                              Pstr_eval
                              expression (tools/caml_tex.ml[92,3076+6]..[92,3076+52])
                                Pexp_constant PConst_string(" locations to underline in input phrases ",(tools/caml_tex.ml[92,3076+6]..[92,3076+52]),None)
                          ]
                        Immutable
                        "underlined" (tools/caml_tex.ml[91,3040+6]..[91,3040+16])                        core_type (tools/caml_tex.ml[91,3040+19]..[91,3040+35])
                          Ptyp_constr "list" (tools/caml_tex.ml[91,3040+31]..[91,3040+35])
                          [
                            core_type (tools/caml_tex.ml[91,3040+20]..[91,3040+29])
                              Ptyp_tuple
                              [
                                core_type (tools/caml_tex.ml[91,3040+20]..[91,3040+23])
                                  Ptyp_constr "int" (tools/caml_tex.ml[91,3040+20]..[91,3040+23])
                                  []
                                core_type (tools/caml_tex.ml[91,3040+26]..[91,3040+29])
                                  Ptyp_constr "int" (tools/caml_tex.ml[91,3040+26]..[91,3040+29])
                                  []
                              ]
                          ]
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[95,3136+2]..[96,3158+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[95,3136+6]..[95,3136+16])
                  Ppat_var "buffer_fmt" (tools/caml_tex.ml[95,3136+6]..[95,3136+16])
                expression (tools/caml_tex.ml[95,3136+17]..[96,3158+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[95,3136+17]..[95,3136+19])
                    Ppat_construct "()" (tools/caml_tex.ml[95,3136+17]..[95,3136+19])
                    None
                  expression (tools/caml_tex.ml[96,3158+4]..[96,3158+63])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[96,3158+8]..[96,3158+9])
                          Ppat_var "b" (tools/caml_tex.ml[96,3158+8]..[96,3158+9])
                        expression (tools/caml_tex.ml[96,3158+12]..[96,3158+28])
                          Pexp_apply
                          expression (tools/caml_tex.ml[96,3158+12]..[96,3158+25])
                            Pexp_ident "Buffer.create" (tools/caml_tex.ml[96,3158+12]..[96,3158+25])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[96,3158+26]..[96,3158+28])
                                Pexp_constant PConst_int (30,None)
                          ]
                    ]
                    expression (tools/caml_tex.ml[96,3158+32]..[96,3158+63])
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[96,3158+32]..[96,3158+33])
                          Pexp_ident "b" (tools/caml_tex.ml[96,3158+32]..[96,3158+33])
                        expression (tools/caml_tex.ml[96,3158+35]..[96,3158+63])
                          Pexp_apply
                          expression (tools/caml_tex.ml[96,3158+35]..[96,3158+61])
                            Pexp_ident "Format.formatter_of_buffer" (tools/caml_tex.ml[96,3158+35]..[96,3158+61])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[96,3158+62]..[96,3158+63])
                                Pexp_ident "b" (tools/caml_tex.ml[96,3158+62]..[96,3158+63])
                          ]
                      ]
            ]
          structure_item (tools/caml_tex.ml[98,3223+2]..[98,3223+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[98,3223+6]..[98,3223+15])
                  Ppat_var "error_fmt" (tools/caml_tex.ml[98,3223+6]..[98,3223+15])
                expression (tools/caml_tex.ml[98,3223+18]..[98,3223+31])
                  Pexp_apply
                  expression (tools/caml_tex.ml[98,3223+18]..[98,3223+28])
                    Pexp_ident "buffer_fmt" (tools/caml_tex.ml[98,3223+18]..[98,3223+28])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[98,3223+29]..[98,3223+31])
                        Pexp_construct "()" (tools/caml_tex.ml[98,3223+29]..[98,3223+31])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[99,3255+2]..[99,3255+33])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[99,3255+6]..[99,3255+17])
                  Ppat_var "warning_fmt" (tools/caml_tex.ml[99,3255+6]..[99,3255+17])
                expression (tools/caml_tex.ml[99,3255+20]..[99,3255+33])
                  Pexp_apply
                  expression (tools/caml_tex.ml[99,3255+20]..[99,3255+30])
                    Pexp_ident "buffer_fmt" (tools/caml_tex.ml[99,3255+20]..[99,3255+30])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[99,3255+31]..[99,3255+33])
                        Pexp_construct "()" (tools/caml_tex.ml[99,3255+31]..[99,3255+33])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[101,3290+2]..[101,3290+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[101,3290+6]..[101,3290+13])
                  Ppat_var "out_fmt" (tools/caml_tex.ml[101,3290+6]..[101,3290+13])
                expression (tools/caml_tex.ml[101,3290+16]..[101,3290+29])
                  Pexp_apply
                  expression (tools/caml_tex.ml[101,3290+16]..[101,3290+26])
                    Pexp_ident "buffer_fmt" (tools/caml_tex.ml[101,3290+16]..[101,3290+26])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[101,3290+27]..[101,3290+29])
                        Pexp_construct "()" (tools/caml_tex.ml[101,3290+27]..[101,3290+29])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[103,3321+2]..[107,3434+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[103,3321+6]..[103,3321+15])
                  Ppat_var "flush_fmt" (tools/caml_tex.ml[103,3321+6]..[103,3321+15])
                expression (tools/caml_tex.ml[103,3321+16]..[107,3434+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[103,3321+16]..[103,3321+23])
                    Ppat_tuple
                    [
                      pattern (tools/caml_tex.ml[103,3321+17]..[103,3321+18])
                        Ppat_var "b" (tools/caml_tex.ml[103,3321+17]..[103,3321+18])
                      pattern (tools/caml_tex.ml[103,3321+19]..[103,3321+22])
                        Ppat_var "fmt" (tools/caml_tex.ml[103,3321+19]..[103,3321+22])
                    ]
                  expression (tools/caml_tex.ml[104,3347+4]..[107,3434+5])
                    Pexp_sequence
                    expression (tools/caml_tex.ml[104,3347+4]..[104,3347+32])
                      Pexp_apply
                      expression (tools/caml_tex.ml[104,3347+4]..[104,3347+25])
                        Pexp_ident "Format.pp_print_flush" (tools/caml_tex.ml[104,3347+4]..[104,3347+25])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[104,3347+26]..[104,3347+29])
                            Pexp_ident "fmt" (tools/caml_tex.ml[104,3347+26]..[104,3347+29])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[104,3347+30]..[104,3347+32])
                            Pexp_construct "()" (tools/caml_tex.ml[104,3347+30]..[104,3347+32])
                            None
                      ]
                    expression (tools/caml_tex.ml[105,3381+4]..[107,3434+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[105,3381+8]..[105,3381+9])
                            Ppat_var "r" (tools/caml_tex.ml[105,3381+8]..[105,3381+9])
                          expression (tools/caml_tex.ml[105,3381+12]..[105,3381+29])
                            Pexp_apply
                            expression (tools/caml_tex.ml[105,3381+12]..[105,3381+27])
                              Pexp_ident "Buffer.contents" (tools/caml_tex.ml[105,3381+12]..[105,3381+27])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[105,3381+28]..[105,3381+29])
                                  Pexp_ident "b" (tools/caml_tex.ml[105,3381+28]..[105,3381+29])
                            ]
                      ]
                      expression (tools/caml_tex.ml[106,3414+4]..[107,3434+5])
                        Pexp_sequence
                        expression (tools/caml_tex.ml[106,3414+4]..[106,3414+18])
                          Pexp_apply
                          expression (tools/caml_tex.ml[106,3414+4]..[106,3414+16])
                            Pexp_ident "Buffer.reset" (tools/caml_tex.ml[106,3414+4]..[106,3414+16])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[106,3414+17]..[106,3414+18])
                                Pexp_ident "b" (tools/caml_tex.ml[106,3414+17]..[106,3414+18])
                          ]
                        expression (tools/caml_tex.ml[107,3434+4]..[107,3434+5])
                          Pexp_ident "r" (tools/caml_tex.ml[107,3434+4]..[107,3434+5])
            ]
          structure_item (tools/caml_tex.ml[110,3470+2]..[110,3470+56])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[109,3441+2]..[109,3441+28])
                        Pstr_eval
                        expression (tools/caml_tex.ml[109,3441+2]..[109,3441+28])
                          Pexp_constant PConst_string(" Redirect the stdout ",(tools/caml_tex.ml[109,3441+2]..[109,3441+28]),None)
                    ]
                pattern (tools/caml_tex.ml[110,3470+6]..[110,3470+27])
                  Ppat_tuple
                  [
                    pattern (tools/caml_tex.ml[110,3470+6]..[110,3470+16])
                      Ppat_var "stdout_out" (tools/caml_tex.ml[110,3470+6]..[110,3470+16])
                    pattern (tools/caml_tex.ml[110,3470+18]..[110,3470+27])
                      Ppat_var "stdout_in" (tools/caml_tex.ml[110,3470+18]..[110,3470+27])
                  ]
                expression (tools/caml_tex.ml[110,3470+30]..[110,3470+56])
                  Pexp_apply
                  expression (tools/caml_tex.ml[110,3470+30]..[110,3470+39])
                    Pexp_ident "Unix.pipe" (tools/caml_tex.ml[110,3470+30]..[110,3470+39])
                  [
                    <arg>
                    Labelled "cloexec"
                      expression (tools/caml_tex.ml[110,3470+49]..[110,3470+53])
                        Pexp_construct "true" (tools/caml_tex.ml[110,3470+49]..[110,3470+53])
                        None
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[110,3470+54]..[110,3470+56])
                        Pexp_construct "()" (tools/caml_tex.ml[110,3470+54]..[110,3470+56])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[111,3527+2]..[111,3527+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[111,3527+6]..[111,3527+8])
                  Ppat_construct "()" (tools/caml_tex.ml[111,3527+6]..[111,3527+8])
                  None
                expression (tools/caml_tex.ml[111,3527+11]..[111,3527+42])
                  Pexp_apply
                  expression (tools/caml_tex.ml[111,3527+11]..[111,3527+20])
                    Pexp_ident "Unix.dup2" (tools/caml_tex.ml[111,3527+11]..[111,3527+20])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[111,3527+21]..[111,3527+30])
                        Pexp_ident "stdout_in" (tools/caml_tex.ml[111,3527+21]..[111,3527+30])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[111,3527+31]..[111,3527+42])
                        Pexp_ident "Unix.stdout" (tools/caml_tex.ml[111,3527+31]..[111,3527+42])
                  ]
            ]
          structure_item (tools/caml_tex.ml[113,3571+2]..[113,3571+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[113,3571+6]..[113,3571+20])
                  Ppat_var "self_error_fmt" (tools/caml_tex.ml[113,3571+6]..[113,3571+20])
                expression (tools/caml_tex.ml[113,3571+23]..[113,3571+61])
                  Pexp_apply
                  expression (tools/caml_tex.ml[113,3571+23]..[113,3571+54])
                    Pexp_ident "Format.formatter_of_out_channel" (tools/caml_tex.ml[113,3571+23]..[113,3571+54])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[113,3571+55]..[113,3571+61])
                        Pexp_ident "stderr" (tools/caml_tex.ml[113,3571+55]..[113,3571+61])
                  ]
            ]
          structure_item (tools/caml_tex.ml[114,3633+2]..[114,3633+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[114,3633+6]..[114,3633+13])
                  Ppat_var "eprintf" (tools/caml_tex.ml[114,3633+6]..[114,3633+13])
                expression (tools/caml_tex.ml[114,3633+16]..[114,3633+30])
                  Pexp_ident "Format.eprintf" (tools/caml_tex.ml[114,3633+16]..[114,3633+30])
            ]
          structure_item (tools/caml_tex.ml[116,3665+2]..[132,4192+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[116,3665+6]..[116,3665+17])
                  Ppat_var "read_stdout" (tools/caml_tex.ml[116,3665+6]..[116,3665+17])
                expression (tools/caml_tex.ml[117,3685+4]..[132,4192+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (tools/caml_tex.ml[117,3685+8]..[117,3685+12])
                        Ppat_var "size" (tools/caml_tex.ml[117,3685+8]..[117,3685+12])
                      expression (tools/caml_tex.ml[117,3685+15]..[117,3685+17])
                        Pexp_constant PConst_int (50,None)
                  ]
                  expression (tools/caml_tex.ml[118,3706+4]..[132,4192+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[118,3706+8]..[118,3706+9])
                          Ppat_var "b" (tools/caml_tex.ml[118,3706+8]..[118,3706+9])
                        expression (tools/caml_tex.ml[118,3706+12]..[118,3706+29])
                          Pexp_apply
                          expression (tools/caml_tex.ml[118,3706+12]..[118,3706+24])
                            Pexp_ident "Bytes.create" (tools/caml_tex.ml[118,3706+12]..[118,3706+24])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[118,3706+25]..[118,3706+29])
                                Pexp_ident "size" (tools/caml_tex.ml[118,3706+25]..[118,3706+29])
                          ]
                    ]
                    expression (tools/caml_tex.ml[119,3739+4]..[132,4192+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[119,3739+8]..[119,3739+14])
                            Ppat_var "buffer" (tools/caml_tex.ml[119,3739+8]..[119,3739+14])
                          expression (tools/caml_tex.ml[119,3739+17]..[119,3739+34])
                            Pexp_apply
                            expression (tools/caml_tex.ml[119,3739+17]..[119,3739+30])
                              Pexp_ident "Buffer.create" (tools/caml_tex.ml[119,3739+17]..[119,3739+30])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[119,3739+31]..[119,3739+34])
                                  Pexp_constant PConst_int (100,None)
                            ]
                      ]
                      expression (tools/caml_tex.ml[120,3777+4]..[132,4192+7])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[120,3777+12]..[120,3777+32])
                              Ppat_var "read_toplevel_stdout" (tools/caml_tex.ml[120,3777+12]..[120,3777+32])
                            expression (tools/caml_tex.ml[120,3777+33]..[126,4031+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (tools/caml_tex.ml[120,3777+33]..[120,3777+35])
                                Ppat_construct "()" (tools/caml_tex.ml[120,3777+33]..[120,3777+35])
                                None
                              expression (tools/caml_tex.ml[121,3815+6]..[126,4031+16])
                                Pexp_match
                                expression (tools/caml_tex.ml[121,3815+12]..[121,3815+42])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[121,3815+12]..[121,3815+23])
                                    Pexp_ident "Unix.select" (tools/caml_tex.ml[121,3815+12]..[121,3815+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[121,3815+23]..[121,3815+35])
                                        Pexp_construct "::" (tools/caml_tex.ml[121,3815+24]..[121,3815+35]) ghost
                                        Some
                                          expression (tools/caml_tex.ml[121,3815+24]..[121,3815+35]) ghost
                                            Pexp_tuple
                                            [
                                              expression (tools/caml_tex.ml[121,3815+24]..[121,3815+34])
                                                Pexp_ident "stdout_out" (tools/caml_tex.ml[121,3815+24]..[121,3815+34])
                                              expression (tools/caml_tex.ml[121,3815+34]..[121,3815+35]) ghost
                                                Pexp_construct "[]" (tools/caml_tex.ml[121,3815+34]..[121,3815+35]) ghost
                                                None
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[121,3815+35]..[121,3815+37])
                                        Pexp_construct "[]" (tools/caml_tex.ml[121,3815+35]..[121,3815+37])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[121,3815+37]..[121,3815+39])
                                        Pexp_construct "[]" (tools/caml_tex.ml[121,3815+37]..[121,3815+39])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[121,3815+40]..[121,3815+42])
                                        Pexp_constant PConst_float (0.,None)
                                  ]
                                [
                                  <case>
                                    pattern (tools/caml_tex.ml[122,3863+8]..[122,3863+18])
                                      Ppat_tuple
                                      [
                                        pattern (tools/caml_tex.ml[122,3863+8]..[122,3863+12])
                                          Ppat_construct "::" (tools/caml_tex.ml[122,3863+9]..[122,3863+12]) ghost
                                          Some
                                            []
                                            pattern (tools/caml_tex.ml[122,3863+9]..[122,3863+12]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (tools/caml_tex.ml[122,3863+9]..[122,3863+11])
                                                  Ppat_var "_a" (tools/caml_tex.ml[122,3863+9]..[122,3863+11])
                                                pattern (tools/caml_tex.ml[122,3863+11]..[122,3863+12]) ghost
                                                  Ppat_construct "[]" (tools/caml_tex.ml[122,3863+11]..[122,3863+12]) ghost
                                                  None
                                              ]
                                        pattern (tools/caml_tex.ml[122,3863+14]..[122,3863+15])
                                          Ppat_any
                                        pattern (tools/caml_tex.ml[122,3863+17]..[122,3863+18])
                                          Ppat_any
                                      ]
                                    expression (tools/caml_tex.ml[123,3885+10]..[125,3980+50])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (tools/caml_tex.ml[123,3885+14]..[123,3885+15])
                                            Ppat_var "n" (tools/caml_tex.ml[123,3885+14]..[123,3885+15])
                                          expression (tools/caml_tex.ml[123,3885+18]..[123,3885+47])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[123,3885+18]..[123,3885+27])
                                              Pexp_ident "Unix.read" (tools/caml_tex.ml[123,3885+18]..[123,3885+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[123,3885+28]..[123,3885+38])
                                                  Pexp_ident "stdout_out" (tools/caml_tex.ml[123,3885+28]..[123,3885+38])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[123,3885+39]..[123,3885+40])
                                                  Pexp_ident "b" (tools/caml_tex.ml[123,3885+39]..[123,3885+40])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[123,3885+41]..[123,3885+42])
                                                  Pexp_constant PConst_int (0,None)
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[123,3885+43]..[123,3885+47])
                                                  Pexp_ident "size" (tools/caml_tex.ml[123,3885+43]..[123,3885+47])
                                            ]
                                      ]
                                      expression (tools/caml_tex.ml[124,3936+10]..[125,3980+50])
                                        Pexp_sequence
                                        expression (tools/caml_tex.ml[124,3936+10]..[124,3936+42])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[124,3936+10]..[124,3936+29])
                                            Pexp_ident "Buffer.add_subbytes" (tools/caml_tex.ml[124,3936+10]..[124,3936+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[124,3936+30]..[124,3936+36])
                                                Pexp_ident "buffer" (tools/caml_tex.ml[124,3936+30]..[124,3936+36])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[124,3936+37]..[124,3936+38])
                                                Pexp_ident "b" (tools/caml_tex.ml[124,3936+37]..[124,3936+38])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[124,3936+39]..[124,3936+40])
                                                Pexp_constant PConst_int (0,None)
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[124,3936+41]..[124,3936+42])
                                                Pexp_ident "n" (tools/caml_tex.ml[124,3936+41]..[124,3936+42])
                                          ]
                                        expression (tools/caml_tex.ml[125,3980+10]..[125,3980+50])
                                          Pexp_ifthenelse
                                          expression (tools/caml_tex.ml[125,3980+13]..[125,3980+21])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[125,3980+15]..[125,3980+16])
                                              Pexp_ident "=" (tools/caml_tex.ml[125,3980+15]..[125,3980+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[125,3980+13]..[125,3980+14])
                                                  Pexp_ident "n" (tools/caml_tex.ml[125,3980+13]..[125,3980+14])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[125,3980+17]..[125,3980+21])
                                                  Pexp_ident "size" (tools/caml_tex.ml[125,3980+17]..[125,3980+21])
                                            ]
                                          expression (tools/caml_tex.ml[125,3980+27]..[125,3980+50])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[125,3980+27]..[125,3980+47])
                                              Pexp_ident "read_toplevel_stdout" (tools/caml_tex.ml[125,3980+27]..[125,3980+47])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[125,3980+48]..[125,3980+50])
                                                  Pexp_construct "()" (tools/caml_tex.ml[125,3980+48]..[125,3980+50])
                                                  None
                                            ]
                                          None
                                  <case>
                                    pattern (tools/caml_tex.ml[126,4031+8]..[126,4031+9])
                                      Ppat_any
                                    expression (tools/caml_tex.ml[126,4031+14]..[126,4031+16])
                                      Pexp_construct "()" (tools/caml_tex.ml[126,4031+14]..[126,4031+16])
                                      None
                                ]
                        ]
                        expression (tools/caml_tex.ml[128,4055+4]..[132,4192+7])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (tools/caml_tex.ml[128,4055+8]..[128,4055+10])
                            Ppat_construct "()" (tools/caml_tex.ml[128,4055+8]..[128,4055+10])
                            None
                          expression (tools/caml_tex.ml[129,4069+6]..[132,4192+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[129,4069+10]..[129,4069+12])
                                  Ppat_construct "()" (tools/caml_tex.ml[129,4069+10]..[129,4069+12])
                                  None
                                expression (tools/caml_tex.ml[129,4069+15]..[129,4069+52])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[129,4069+15]..[129,4069+27])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[129,4069+15]..[129,4069+20])
                                      Pexp_ident "flush" (tools/caml_tex.ml[129,4069+15]..[129,4069+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[129,4069+21]..[129,4069+27])
                                          Pexp_ident "stdout" (tools/caml_tex.ml[129,4069+21]..[129,4069+27])
                                    ]
                                  expression (tools/caml_tex.ml[129,4069+29]..[129,4069+52])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[129,4069+29]..[129,4069+49])
                                      Pexp_ident "read_toplevel_stdout" (tools/caml_tex.ml[129,4069+29]..[129,4069+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[129,4069+50]..[129,4069+52])
                                          Pexp_construct "()" (tools/caml_tex.ml[129,4069+50]..[129,4069+52])
                                          None
                                    ]
                            ]
                            expression (tools/caml_tex.ml[130,4125+6]..[132,4192+7])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (tools/caml_tex.ml[130,4125+10]..[130,4125+11])
                                    Ppat_var "r" (tools/caml_tex.ml[130,4125+10]..[130,4125+11])
                                  expression (tools/caml_tex.ml[130,4125+14]..[130,4125+36])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[130,4125+14]..[130,4125+29])
                                      Pexp_ident "Buffer.contents" (tools/caml_tex.ml[130,4125+14]..[130,4125+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[130,4125+30]..[130,4125+36])
                                          Pexp_ident "buffer" (tools/caml_tex.ml[130,4125+30]..[130,4125+36])
                                    ]
                              ]
                              expression (tools/caml_tex.ml[131,4165+6]..[132,4192+7])
                                Pexp_sequence
                                expression (tools/caml_tex.ml[131,4165+6]..[131,4165+25])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[131,4165+6]..[131,4165+18])
                                    Pexp_ident "Buffer.reset" (tools/caml_tex.ml[131,4165+6]..[131,4165+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[131,4165+19]..[131,4165+25])
                                        Pexp_ident "buffer" (tools/caml_tex.ml[131,4165+19]..[131,4165+25])
                                  ]
                                expression (tools/caml_tex.ml[132,4192+6]..[132,4192+7])
                                  Pexp_ident "r" (tools/caml_tex.ml[132,4192+6]..[132,4192+7])
            ]
          structure_item (tools/caml_tex.ml[135,4245+2]..[135,4245+19])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[134,4201+2]..[134,4201+43])
                        Pstr_eval
                        expression (tools/caml_tex.ml[134,4201+2]..[134,4201+43])
                          Pexp_constant PConst_string(" Store character intervals directly ",(tools/caml_tex.ml[134,4201+2]..[134,4201+43]),None)
                    ]
                pattern (tools/caml_tex.ml[135,4245+6]..[135,4245+10])
                  Ppat_var "locs" (tools/caml_tex.ml[135,4245+6]..[135,4245+10])
                expression (tools/caml_tex.ml[135,4245+13]..[135,4245+19])
                  Pexp_apply
                  expression (tools/caml_tex.ml[135,4245+13]..[135,4245+16])
                    Pexp_ident "ref" (tools/caml_tex.ml[135,4245+13]..[135,4245+16])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[135,4245+17]..[135,4245+19])
                        Pexp_construct "[]" (tools/caml_tex.ml[135,4245+17]..[135,4245+19])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[136,4265+2]..[140,4420+43])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[136,4265+6]..[136,4265+18])
                  Ppat_var "register_loc" (tools/caml_tex.ml[136,4265+6]..[136,4265+18])
                expression (tools/caml_tex.ml[136,4265+19]..[140,4420+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[136,4265+19]..[136,4265+37])
                    Ppat_constraint
                    pattern (tools/caml_tex.ml[136,4265+20]..[136,4265+23])
                      Ppat_var "loc" (tools/caml_tex.ml[136,4265+20]..[136,4265+23])
                    core_type (tools/caml_tex.ml[136,4265+26]..[136,4265+36])
                      Ptyp_constr "Location.t" (tools/caml_tex.ml[136,4265+26]..[136,4265+36])
                      []
                  expression (tools/caml_tex.ml[137,4305+4]..[140,4420+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[137,4305+8]..[137,4305+17])
                          Ppat_var "startchar" (tools/caml_tex.ml[137,4305+8]..[137,4305+17])
                        expression (tools/caml_tex.ml[137,4305+20]..[137,4305+42])
                          Pexp_field
                          expression (tools/caml_tex.ml[137,4305+20]..[137,4305+33])
                            Pexp_field
                            expression (tools/caml_tex.ml[137,4305+20]..[137,4305+23])
                              Pexp_ident "loc" (tools/caml_tex.ml[137,4305+20]..[137,4305+23])
                            "loc_start" (tools/caml_tex.ml[137,4305+24]..[137,4305+33])
                          "pos_cnum" (tools/caml_tex.ml[137,4305+34]..[137,4305+42])
                    ]
                    expression (tools/caml_tex.ml[138,4351+4]..[140,4420+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[138,4351+8]..[138,4351+15])
                            Ppat_var "endchar" (tools/caml_tex.ml[138,4351+8]..[138,4351+15])
                          expression (tools/caml_tex.ml[138,4351+18]..[138,4351+38])
                            Pexp_field
                            expression (tools/caml_tex.ml[138,4351+18]..[138,4351+29])
                              Pexp_field
                              expression (tools/caml_tex.ml[138,4351+18]..[138,4351+21])
                                Pexp_ident "loc" (tools/caml_tex.ml[138,4351+18]..[138,4351+21])
                              "loc_end" (tools/caml_tex.ml[138,4351+22]..[138,4351+29])
                            "pos_cnum" (tools/caml_tex.ml[138,4351+30]..[138,4351+38])
                      ]
                      expression (tools/caml_tex.ml[139,4393+4]..[140,4420+43])
                        Pexp_ifthenelse
                        expression (tools/caml_tex.ml[139,4393+7]..[139,4393+21])
                          Pexp_apply
                          expression (tools/caml_tex.ml[139,4393+17]..[139,4393+19])
                            Pexp_ident ">=" (tools/caml_tex.ml[139,4393+17]..[139,4393+19])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[139,4393+7]..[139,4393+16])
                                Pexp_ident "startchar" (tools/caml_tex.ml[139,4393+7]..[139,4393+16])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[139,4393+20]..[139,4393+21])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (tools/caml_tex.ml[140,4420+6]..[140,4420+43])
                          Pexp_apply
                          expression (tools/caml_tex.ml[140,4420+11]..[140,4420+13])
                            Pexp_ident ":=" (tools/caml_tex.ml[140,4420+11]..[140,4420+13])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[140,4420+6]..[140,4420+10])
                                Pexp_ident "locs" (tools/caml_tex.ml[140,4420+6]..[140,4420+10])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[140,4420+14]..[140,4420+43])
                                Pexp_construct "::" (tools/caml_tex.ml[140,4420+35]..[140,4420+37])
                                Some
                                  expression (tools/caml_tex.ml[140,4420+14]..[140,4420+43]) ghost
                                    Pexp_tuple
                                    [
                                      expression (tools/caml_tex.ml[140,4420+14]..[140,4420+34])
                                        Pexp_tuple
                                        [
                                          expression (tools/caml_tex.ml[140,4420+15]..[140,4420+24])
                                            Pexp_ident "startchar" (tools/caml_tex.ml[140,4420+15]..[140,4420+24])
                                          expression (tools/caml_tex.ml[140,4420+26]..[140,4420+33])
                                            Pexp_ident "endchar" (tools/caml_tex.ml[140,4420+26]..[140,4420+33])
                                        ]
                                      expression (tools/caml_tex.ml[140,4420+38]..[140,4420+43])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[140,4420+38]..[140,4420+39])
                                          Pexp_ident "!" (tools/caml_tex.ml[140,4420+38]..[140,4420+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[140,4420+39]..[140,4420+43])
                                              Pexp_ident "locs" (tools/caml_tex.ml[140,4420+39]..[140,4420+43])
                                        ]
                                    ]
                          ]
                        None
            ]
          structure_item (tools/caml_tex.ml[143,4545+2]..[158,5229+5])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[142,4465+2]..[142,4465+79])
                        Pstr_eval
                        expression (tools/caml_tex.ml[142,4465+2]..[142,4465+79])
                          Pexp_constant PConst_string(" Record locations in the main error and suberrors without printing them ",(tools/caml_tex.ml[142,4465+2]..[142,4465+79]),None)
                    ]
                pattern (tools/caml_tex.ml[143,4545+6]..[143,4545+27])
                  Ppat_var "printer_register_locs" (tools/caml_tex.ml[143,4545+6]..[143,4545+27])
                expression (tools/caml_tex.ml[144,4575+4]..[158,5229+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (tools/caml_tex.ml[144,4575+8]..[144,4575+12])
                        Ppat_var "base" (tools/caml_tex.ml[144,4575+8]..[144,4575+12])
                      expression (tools/caml_tex.ml[144,4575+15]..[144,4575+42])
                        Pexp_ident "Location.batch_mode_printer" (tools/caml_tex.ml[144,4575+15]..[144,4575+42])
                  ]
                  expression (tools/caml_tex.ml[145,4621+4]..[158,5229+5])
                    Pexp_record
                    [
                      "Location.pp_main_loc" (tools/caml_tex.ml[145,4621+6]..[145,4621+26])
                        expression (tools/caml_tex.ml[145,4621+29]..[145,4621+64])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (tools/caml_tex.ml[145,4621+34]..[145,4621+35])
                            Ppat_any
                          expression (tools/caml_tex.ml[145,4621+36]..[145,4621+63]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (tools/caml_tex.ml[145,4621+36]..[145,4621+37])
                              Ppat_any
                            expression (tools/caml_tex.ml[145,4621+38]..[145,4621+63]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (tools/caml_tex.ml[145,4621+38]..[145,4621+39])
                                Ppat_any
                              expression (tools/caml_tex.ml[145,4621+40]..[145,4621+63]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (tools/caml_tex.ml[145,4621+40]..[145,4621+43])
                                  Ppat_var "loc" (tools/caml_tex.ml[145,4621+40]..[145,4621+43])
                                expression (tools/caml_tex.ml[145,4621+47]..[145,4621+63])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[145,4621+47]..[145,4621+59])
                                    Pexp_ident "register_loc" (tools/caml_tex.ml[145,4621+47]..[145,4621+59])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[145,4621+60]..[145,4621+63])
                                        Pexp_ident "loc" (tools/caml_tex.ml[145,4621+60]..[145,4621+63])
                                  ]
                      "pp_submsg_loc" (tools/caml_tex.ml[146,4687+6]..[146,4687+19])
                        expression (tools/caml_tex.ml[146,4687+22]..[146,4687+57])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (tools/caml_tex.ml[146,4687+27]..[146,4687+28])
                            Ppat_any
                          expression (tools/caml_tex.ml[146,4687+29]..[146,4687+56]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (tools/caml_tex.ml[146,4687+29]..[146,4687+30])
                              Ppat_any
                            expression (tools/caml_tex.ml[146,4687+31]..[146,4687+56]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (tools/caml_tex.ml[146,4687+31]..[146,4687+32])
                                Ppat_any
                              expression (tools/caml_tex.ml[146,4687+33]..[146,4687+56]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (tools/caml_tex.ml[146,4687+33]..[146,4687+36])
                                  Ppat_var "loc" (tools/caml_tex.ml[146,4687+33]..[146,4687+36])
                                expression (tools/caml_tex.ml[146,4687+40]..[146,4687+56])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[146,4687+40]..[146,4687+52])
                                    Pexp_ident "register_loc" (tools/caml_tex.ml[146,4687+40]..[146,4687+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[146,4687+53]..[146,4687+56])
                                        Pexp_ident "loc" (tools/caml_tex.ml[146,4687+53]..[146,4687+56])
                                  ]
                      "pp" (tools/caml_tex.ml[152,5015+6]..[152,5015+8])
                        expression (tools/caml_tex.ml[152,5015+11]..[152,5015+18])
                          Pexp_field
                          expression (tools/caml_tex.ml[152,5015+11]..[152,5015+15])
                            Pexp_ident "base" (tools/caml_tex.ml[152,5015+11]..[152,5015+15])
                          "pp" (tools/caml_tex.ml[152,5015+16]..[152,5015+18])
                      "pp_report_kind" (tools/caml_tex.ml[153,5035+6]..[153,5035+20])
                        expression (tools/caml_tex.ml[153,5035+23]..[153,5035+42])
                          Pexp_field
                          expression (tools/caml_tex.ml[153,5035+23]..[153,5035+27])
                            Pexp_ident "base" (tools/caml_tex.ml[153,5035+23]..[153,5035+27])
                          "pp_report_kind" (tools/caml_tex.ml[153,5035+28]..[153,5035+42])
                      "pp_main_txt" (tools/caml_tex.ml[154,5079+6]..[154,5079+17])
                        expression (tools/caml_tex.ml[154,5079+20]..[154,5079+36])
                          Pexp_field
                          expression (tools/caml_tex.ml[154,5079+20]..[154,5079+24])
                            Pexp_ident "base" (tools/caml_tex.ml[154,5079+20]..[154,5079+24])
                          "pp_main_txt" (tools/caml_tex.ml[154,5079+25]..[154,5079+36])
                      "pp_submsgs" (tools/caml_tex.ml[155,5117+6]..[155,5117+16])
                        expression (tools/caml_tex.ml[155,5117+19]..[155,5117+34])
                          Pexp_field
                          expression (tools/caml_tex.ml[155,5117+19]..[155,5117+23])
                            Pexp_ident "base" (tools/caml_tex.ml[155,5117+19]..[155,5117+23])
                          "pp_submsgs" (tools/caml_tex.ml[155,5117+24]..[155,5117+34])
                      "pp_submsg" (tools/caml_tex.ml[156,5153+6]..[156,5153+15])
                        expression (tools/caml_tex.ml[156,5153+18]..[156,5153+32])
                          Pexp_field
                          expression (tools/caml_tex.ml[156,5153+18]..[156,5153+22])
                            Pexp_ident "base" (tools/caml_tex.ml[156,5153+18]..[156,5153+22])
                          "pp_submsg" (tools/caml_tex.ml[156,5153+23]..[156,5153+32])
                      "pp_submsg_txt" (tools/caml_tex.ml[157,5187+6]..[157,5187+19])
                        expression (tools/caml_tex.ml[157,5187+22]..[157,5187+40])
                          Pexp_field
                          expression (tools/caml_tex.ml[157,5187+22]..[157,5187+26])
                            Pexp_ident "base" (tools/caml_tex.ml[157,5187+22]..[157,5187+26])
                          "pp_submsg_txt" (tools/caml_tex.ml[157,5187+27]..[157,5187+40])
                    ]
                    None
            ]
          structure_item (tools/caml_tex.ml[161,5286+2]..[161,5286+23])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[160,5236+2]..[160,5236+49])
                        Pstr_eval
                        expression (tools/caml_tex.ml[160,5236+2]..[160,5236+49])
                          Pexp_constant PConst_string(" Capture warnings and keep them in a list ",(tools/caml_tex.ml[160,5236+2]..[160,5236+49]),None)
                    ]
                pattern (tools/caml_tex.ml[161,5286+6]..[161,5286+14])
                  Ppat_var "warnings" (tools/caml_tex.ml[161,5286+6]..[161,5286+14])
                expression (tools/caml_tex.ml[161,5286+17]..[161,5286+23])
                  Pexp_apply
                  expression (tools/caml_tex.ml[161,5286+17]..[161,5286+20])
                    Pexp_ident "ref" (tools/caml_tex.ml[161,5286+17]..[161,5286+20])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[161,5286+21]..[161,5286+23])
                        Pexp_construct "[]" (tools/caml_tex.ml[161,5286+21]..[161,5286+23])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[162,5310+2]..[173,5732+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[162,5310+6]..[162,5310+20])
                  Ppat_var "report_printer" (tools/caml_tex.ml[162,5310+6]..[162,5310+20])
                expression (tools/caml_tex.ml[164,5374+4]..[173,5732+37])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (tools/caml_tex.ml[164,5374+8]..[164,5374+10])
                        Ppat_var "pp" (tools/caml_tex.ml[164,5374+8]..[164,5374+10])
                      expression (tools/caml_tex.ml[164,5374+11]..[171,5674+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (tools/caml_tex.ml[164,5374+11]..[164,5374+15])
                          Ppat_var "self" (tools/caml_tex.ml[164,5374+11]..[164,5374+15])
                        expression (tools/caml_tex.ml[164,5374+16]..[171,5674+50]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (tools/caml_tex.ml[164,5374+16]..[164,5374+19])
                            Ppat_var "ppf" (tools/caml_tex.ml[164,5374+16]..[164,5374+19])
                          expression (tools/caml_tex.ml[164,5374+20]..[171,5674+50]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (tools/caml_tex.ml[164,5374+20]..[164,5374+26])
                              Ppat_var "report" (tools/caml_tex.ml[164,5374+20]..[164,5374+26])
                            expression (tools/caml_tex.ml[165,5403+6]..[171,5674+50])
                              Pexp_match
                              expression (tools/caml_tex.ml[165,5403+12]..[165,5403+32])
                                Pexp_field
                                expression (tools/caml_tex.ml[165,5403+12]..[165,5403+18])
                                  Pexp_ident "report" (tools/caml_tex.ml[165,5403+12]..[165,5403+18])
                                "Location.kind" (tools/caml_tex.ml[165,5403+19]..[165,5403+32])
                              [
                                <case>
                                  pattern (tools/caml_tex.ml[166,5441+8]..[166,5441+70])
                                    Ppat_or
                                    pattern (tools/caml_tex.ml[166,5441+8]..[166,5441+33])
                                      Ppat_construct "Location.Report_warning" (tools/caml_tex.ml[166,5441+8]..[166,5441+31])
                                      Some
                                        []
                                        pattern (tools/caml_tex.ml[166,5441+32]..[166,5441+33])
                                          Ppat_any
                                    pattern (tools/caml_tex.ml[166,5441+36]..[166,5441+70])
                                      Ppat_construct "Location.Report_warning_as_error" (tools/caml_tex.ml[166,5441+36]..[166,5441+68])
                                      Some
                                        []
                                        pattern (tools/caml_tex.ml[166,5441+69]..[166,5441+70])
                                          Ppat_any
                                  expression (tools/caml_tex.ml[167,5515+10]..[169,5624+36])
                                    Pexp_sequence
                                    expression (tools/caml_tex.ml[167,5515+10]..[167,5515+64])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[167,5515+10]..[167,5515+34])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[167,5515+10]..[167,5515+31])
                                          Pexp_ident "printer_register_locs" (tools/caml_tex.ml[167,5515+10]..[167,5515+31])
                                        "pp" (tools/caml_tex.ml[167,5515+32]..[167,5515+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[167,5515+35]..[167,5515+39])
                                            Pexp_ident "self" (tools/caml_tex.ml[167,5515+35]..[167,5515+39])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[167,5515+40]..[167,5515+57])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[167,5515+41]..[167,5515+44])
                                              Pexp_ident "snd" (tools/caml_tex.ml[167,5515+41]..[167,5515+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[167,5515+45]..[167,5515+56])
                                                  Pexp_ident "warning_fmt" (tools/caml_tex.ml[167,5515+45]..[167,5515+56])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[167,5515+58]..[167,5515+64])
                                            Pexp_ident "report" (tools/caml_tex.ml[167,5515+58]..[167,5515+64])
                                      ]
                                    expression (tools/caml_tex.ml[168,5581+10]..[169,5624+36])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (tools/caml_tex.ml[168,5581+14]..[168,5581+15])
                                            Ppat_var "w" (tools/caml_tex.ml[168,5581+14]..[168,5581+15])
                                          expression (tools/caml_tex.ml[168,5581+18]..[168,5581+39])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[168,5581+18]..[168,5581+27])
                                              Pexp_ident "flush_fmt" (tools/caml_tex.ml[168,5581+18]..[168,5581+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[168,5581+28]..[168,5581+39])
                                                  Pexp_ident "warning_fmt" (tools/caml_tex.ml[168,5581+28]..[168,5581+39])
                                            ]
                                      ]
                                      expression (tools/caml_tex.ml[169,5624+10]..[169,5624+36])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[169,5624+19]..[169,5624+21])
                                          Pexp_ident ":=" (tools/caml_tex.ml[169,5624+19]..[169,5624+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[169,5624+10]..[169,5624+18])
                                              Pexp_ident "warnings" (tools/caml_tex.ml[169,5624+10]..[169,5624+18])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[169,5624+22]..[169,5624+36])
                                              Pexp_construct "::" (tools/caml_tex.ml[169,5624+24]..[169,5624+26])
                                              Some
                                                expression (tools/caml_tex.ml[169,5624+22]..[169,5624+36]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (tools/caml_tex.ml[169,5624+22]..[169,5624+23])
                                                      Pexp_ident "w" (tools/caml_tex.ml[169,5624+22]..[169,5624+23])
                                                    expression (tools/caml_tex.ml[169,5624+27]..[169,5624+36])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[169,5624+27]..[169,5624+28])
                                                        Pexp_ident "!" (tools/caml_tex.ml[169,5624+27]..[169,5624+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[169,5624+28]..[169,5624+36])
                                                            Pexp_ident "warnings" (tools/caml_tex.ml[169,5624+28]..[169,5624+36])
                                                      ]
                                                  ]
                                        ]
                                <case>
                                  pattern (tools/caml_tex.ml[170,5661+8]..[170,5661+9])
                                    Ppat_any
                                  expression (tools/caml_tex.ml[171,5674+10]..[171,5674+50])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[171,5674+10]..[171,5674+34])
                                      Pexp_field
                                      expression (tools/caml_tex.ml[171,5674+10]..[171,5674+31])
                                        Pexp_ident "printer_register_locs" (tools/caml_tex.ml[171,5674+10]..[171,5674+31])
                                      "pp" (tools/caml_tex.ml[171,5674+32]..[171,5674+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[171,5674+35]..[171,5674+39])
                                          Pexp_ident "self" (tools/caml_tex.ml[171,5674+35]..[171,5674+39])
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[171,5674+40]..[171,5674+43])
                                          Pexp_ident "ppf" (tools/caml_tex.ml[171,5674+40]..[171,5674+43])
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[171,5674+44]..[171,5674+50])
                                          Pexp_ident "report" (tools/caml_tex.ml[171,5674+44]..[171,5674+50])
                                    ]
                              ]
                  ]
                  expression (tools/caml_tex.ml[173,5732+4]..[173,5732+37])
                    Pexp_record
                    [
                      "pp" (tools/caml_tex.ml[173,5732+33]..[173,5732+35]) ghost
                        expression (tools/caml_tex.ml[173,5732+33]..[173,5732+35])
                          Pexp_ident "pp" (tools/caml_tex.ml[173,5732+33]..[173,5732+35])
                    ]
                    Some
                      expression (tools/caml_tex.ml[173,5732+6]..[173,5732+27])
                        Pexp_ident "printer_register_locs" (tools/caml_tex.ml[173,5732+6]..[173,5732+27])
            ]
          structure_item (tools/caml_tex.ml[175,5771+2]..[178,5895+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[175,5771+6]..[175,5771+11])
                  Ppat_var "fatal" (tools/caml_tex.ml[175,5771+6]..[175,5771+11])
                expression (tools/caml_tex.ml[175,5771+12]..[178,5895+49]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[175,5771+12]..[175,5771+14])
                    Ppat_var "ic" (tools/caml_tex.ml[175,5771+12]..[175,5771+14])
                  expression (tools/caml_tex.ml[175,5771+15]..[178,5895+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[175,5771+15]..[175,5771+17])
                      Ppat_var "oc" (tools/caml_tex.ml[175,5771+15]..[175,5771+17])
                    expression (tools/caml_tex.ml[175,5771+18]..[178,5895+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[175,5771+18]..[175,5771+21])
                        Ppat_var "fmt" (tools/caml_tex.ml[175,5771+18]..[175,5771+21])
                      expression (tools/caml_tex.ml[176,5795+4]..[178,5895+49])
                        Pexp_apply
                        expression (tools/caml_tex.ml[176,5795+4]..[176,5795+19])
                          Pexp_ident "Format.kfprintf" (tools/caml_tex.ml[176,5795+4]..[176,5795+19])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[177,5815+6]..[177,5815+79])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (tools/caml_tex.ml[177,5815+11]..[177,5815+14])
                                Ppat_var "ppf" (tools/caml_tex.ml[177,5815+11]..[177,5815+14])
                              expression (tools/caml_tex.ml[177,5815+18]..[177,5815+78])
                                Pexp_sequence
                                expression (tools/caml_tex.ml[177,5815+18]..[177,5815+43])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[177,5815+18]..[177,5815+32])
                                    Pexp_ident "Format.fprintf" (tools/caml_tex.ml[177,5815+18]..[177,5815+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[177,5815+33]..[177,5815+36])
                                        Pexp_ident "ppf" (tools/caml_tex.ml[177,5815+33]..[177,5815+36])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[177,5815+37]..[177,5815+43])
                                        Pexp_constant PConst_string("@]@.",(tools/caml_tex.ml[177,5815+38]..[177,5815+42]),None)
                                  ]
                                expression (tools/caml_tex.ml[177,5815+45]..[177,5815+78])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[177,5815+45]..[177,5815+56])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[177,5815+45]..[177,5815+53])
                                      Pexp_ident "close_in" (tools/caml_tex.ml[177,5815+45]..[177,5815+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[177,5815+54]..[177,5815+56])
                                          Pexp_ident "ic" (tools/caml_tex.ml[177,5815+54]..[177,5815+56])
                                    ]
                                  expression (tools/caml_tex.ml[177,5815+58]..[177,5815+78])
                                    Pexp_sequence
                                    expression (tools/caml_tex.ml[177,5815+58]..[177,5815+70])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[177,5815+58]..[177,5815+67])
                                        Pexp_ident "close_out" (tools/caml_tex.ml[177,5815+58]..[177,5815+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[177,5815+68]..[177,5815+70])
                                            Pexp_ident "oc" (tools/caml_tex.ml[177,5815+68]..[177,5815+70])
                                      ]
                                    expression (tools/caml_tex.ml[177,5815+72]..[177,5815+78])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[177,5815+72]..[177,5815+76])
                                        Pexp_ident "exit" (tools/caml_tex.ml[177,5815+72]..[177,5815+76])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[177,5815+77]..[177,5815+78])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[178,5895+6]..[178,5895+20])
                              Pexp_ident "self_error_fmt" (tools/caml_tex.ml[178,5895+6]..[178,5895+20])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[178,5895+21]..[178,5895+49])
                              Pexp_apply
                              expression (tools/caml_tex.ml[178,5895+42]..[178,5895+44])
                                Pexp_ident "^^" (tools/caml_tex.ml[178,5895+42]..[178,5895+44])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[178,5895+22]..[178,5895+41])
                                    Pexp_constant PConst_string("@[<hov 2>  Error ",(tools/caml_tex.ml[178,5895+23]..[178,5895+40]),None)
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[178,5895+45]..[178,5895+48])
                                    Pexp_ident "fmt" (tools/caml_tex.ml[178,5895+45]..[178,5895+48])
                              ]
                        ]
            ]
          structure_item (tools/caml_tex.ml[180,5946+2]..[190,6295+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[180,5946+6]..[180,5946+10])
                  Ppat_var "init" (tools/caml_tex.ml[180,5946+6]..[180,5946+10])
                expression (tools/caml_tex.ml[180,5946+11]..[190,6295+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[180,5946+11]..[180,5946+13])
                    Ppat_construct "()" (tools/caml_tex.ml[180,5946+11]..[180,5946+13])
                    None
                  expression (tools/caml_tex.ml[181,5962+4]..[190,6295+61])
                    Pexp_sequence
                    expression (tools/caml_tex.ml[181,5962+4]..[181,5962+57])
                      Pexp_apply
                      expression (tools/caml_tex.ml[181,5962+28]..[181,5962+30])
                        Pexp_ident ":=" (tools/caml_tex.ml[181,5962+28]..[181,5962+30])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[181,5962+4]..[181,5962+27])
                            Pexp_ident "Location.report_printer" (tools/caml_tex.ml[181,5962+4]..[181,5962+27])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[181,5962+31]..[181,5962+57])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (tools/caml_tex.ml[181,5962+36]..[181,5962+38])
                              Ppat_construct "()" (tools/caml_tex.ml[181,5962+36]..[181,5962+38])
                              None
                            expression (tools/caml_tex.ml[181,5962+42]..[181,5962+56])
                              Pexp_ident "report_printer" (tools/caml_tex.ml[181,5962+42]..[181,5962+56])
                      ]
                    expression (tools/caml_tex.ml[182,6021+4]..[190,6295+61])
                      Pexp_sequence
                      expression (tools/caml_tex.ml[182,6021+4]..[182,6021+42])
                        Pexp_apply
                        expression (tools/caml_tex.ml[182,6021+18]..[182,6021+20])
                          Pexp_ident ":=" (tools/caml_tex.ml[182,6021+18]..[182,6021+20])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[182,6021+4]..[182,6021+17])
                              Pexp_ident "Clflags.color" (tools/caml_tex.ml[182,6021+4]..[182,6021+17])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[182,6021+21]..[182,6021+42])
                              Pexp_construct "Some" (tools/caml_tex.ml[182,6021+21]..[182,6021+25])
                              Some
                                expression (tools/caml_tex.ml[182,6021+26]..[182,6021+42])
                                  Pexp_construct "Misc.Color.Never" (tools/caml_tex.ml[182,6021+26]..[182,6021+42])
                                  None
                        ]
                      expression (tools/caml_tex.ml[183,6065+4]..[190,6295+61])
                        Pexp_sequence
                        expression (tools/caml_tex.ml[183,6065+4]..[183,6065+34])
                          Pexp_apply
                          expression (tools/caml_tex.ml[183,6065+27]..[183,6065+29])
                            Pexp_ident ":=" (tools/caml_tex.ml[183,6065+27]..[183,6065+29])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[183,6065+4]..[183,6065+26])
                                Pexp_ident "Clflags.no_std_include" (tools/caml_tex.ml[183,6065+4]..[183,6065+26])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[183,6065+30]..[183,6065+34])
                                Pexp_construct "true" (tools/caml_tex.ml[183,6065+30]..[183,6065+34])
                                None
                          ]
                        expression (tools/caml_tex.ml[184,6101+4]..[190,6295+61])
                          Pexp_sequence
                          expression (tools/caml_tex.ml[184,6101+4]..[184,6101+70])
                            Pexp_apply
                            expression (tools/caml_tex.ml[184,6101+30]..[184,6101+32])
                              Pexp_ident ":=" (tools/caml_tex.ml[184,6101+30]..[184,6101+32])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[184,6101+4]..[184,6101+29])
                                  Pexp_ident "Compenv.last_include_dirs" (tools/caml_tex.ml[184,6101+4]..[184,6101+29])
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[184,6101+33]..[184,6101+70])
                                  Pexp_construct "::" (tools/caml_tex.ml[184,6101+34]..[184,6101+70]) ghost
                                  Some
                                    expression (tools/caml_tex.ml[184,6101+34]..[184,6101+70]) ghost
                                      Pexp_tuple
                                      [
                                        expression (tools/caml_tex.ml[184,6101+34]..[184,6101+69])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[184,6101+34]..[184,6101+49])
                                            Pexp_ident "Filename.concat" (tools/caml_tex.ml[184,6101+34]..[184,6101+49])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[184,6101+50]..[184,6101+60])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[184,6101+50]..[184,6101+51])
                                                  Pexp_ident "!" (tools/caml_tex.ml[184,6101+50]..[184,6101+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[184,6101+51]..[184,6101+60])
                                                      Pexp_ident "repo_root" (tools/caml_tex.ml[184,6101+51]..[184,6101+60])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[184,6101+61]..[184,6101+69])
                                                Pexp_constant PConst_string("stdlib",(tools/caml_tex.ml[184,6101+62]..[184,6101+68]),None)
                                          ]
                                        expression (tools/caml_tex.ml[184,6101+69]..[184,6101+70]) ghost
                                          Pexp_construct "[]" (tools/caml_tex.ml[184,6101+69]..[184,6101+70]) ghost
                                          None
                                      ]
                            ]
                          expression (tools/caml_tex.ml[185,6173+4]..[190,6295+61])
                            Pexp_sequence
                            expression (tools/caml_tex.ml[185,6173+4]..[185,6173+25])
                              Pexp_apply
                              expression (tools/caml_tex.ml[185,6173+4]..[185,6173+22])
                                Pexp_ident "Compmisc.init_path" (tools/caml_tex.ml[185,6173+4]..[185,6173+22])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[185,6173+23]..[185,6173+25])
                                    Pexp_construct "()" (tools/caml_tex.ml[185,6173+23]..[185,6173+25])
                                    None
                              ]
                            expression (tools/caml_tex.ml[186,6200+4]..[190,6295+61])
                              Pexp_try
                              expression (tools/caml_tex.ml[187,6208+6]..[188,6250+30])
                                Pexp_sequence
                                expression (tools/caml_tex.ml[187,6208+6]..[187,6208+40])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[187,6208+6]..[187,6208+37])
                                    Pexp_ident "Toploop.initialize_toplevel_env" (tools/caml_tex.ml[187,6208+6]..[187,6208+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[187,6208+38]..[187,6208+40])
                                        Pexp_construct "()" (tools/caml_tex.ml[187,6208+38]..[187,6208+40])
                                        None
                                  ]
                                expression (tools/caml_tex.ml[188,6250+6]..[188,6250+30])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[188,6250+22]..[188,6250+24])
                                    Pexp_ident ":=" (tools/caml_tex.ml[188,6250+22]..[188,6250+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[188,6250+6]..[188,6250+21])
                                        Pexp_ident "Sys.interactive" (tools/caml_tex.ml[188,6250+6]..[188,6250+21])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[188,6250+25]..[188,6250+30])
                                        Pexp_construct "false" (tools/caml_tex.ml[188,6250+25]..[188,6250+30])
                                        None
                                  ]
                              [
                                <case>
                                  pattern (tools/caml_tex.ml[189,6281+9]..[189,6281+10])
                                    Ppat_any
                                  expression (tools/caml_tex.ml[190,6295+6]..[190,6295+61])
                                    Pexp_sequence
                                    expression (tools/caml_tex.ml[190,6295+7]..[190,6295+52])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[190,6295+7]..[190,6295+14])
                                        Pexp_ident "eprintf" (tools/caml_tex.ml[190,6295+7]..[190,6295+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[190,6295+15]..[190,6295+41])
                                            Pexp_constant PConst_string("Invalid repo root: %s?%!",(tools/caml_tex.ml[190,6295+16]..[190,6295+40]),None)
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[190,6295+42]..[190,6295+52])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[190,6295+42]..[190,6295+43])
                                              Pexp_ident "!" (tools/caml_tex.ml[190,6295+42]..[190,6295+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[190,6295+43]..[190,6295+52])
                                                  Pexp_ident "repo_root" (tools/caml_tex.ml[190,6295+43]..[190,6295+52])
                                            ]
                                      ]
                                    expression (tools/caml_tex.ml[190,6295+54]..[190,6295+60])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[190,6295+54]..[190,6295+58])
                                        Pexp_ident "exit" (tools/caml_tex.ml[190,6295+54]..[190,6295+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[190,6295+59]..[190,6295+60])
                                            Pexp_constant PConst_int (2,None)
                                      ]
                              ]
            ]
          structure_item (tools/caml_tex.ml[192,6358+2]..[202,6711+9])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[192,6358+6]..[192,6358+10])
                  Ppat_var "exec" (tools/caml_tex.ml[192,6358+6]..[192,6358+10])
                expression (tools/caml_tex.ml[192,6358+11]..[202,6711+9]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[192,6358+11]..[192,6358+18])
                    Ppat_tuple
                    [
                      pattern (tools/caml_tex.ml[192,6358+12]..[192,6358+13])
                        Ppat_any
                      pattern (tools/caml_tex.ml[192,6358+14]..[192,6358+17])
                        Ppat_var "ppf" (tools/caml_tex.ml[192,6358+14]..[192,6358+17])
                    ]
                  expression (tools/caml_tex.ml[192,6358+19]..[202,6711+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[192,6358+19]..[192,6358+20])
                      Ppat_var "p" (tools/caml_tex.ml[192,6358+19]..[192,6358+20])
                    expression (tools/caml_tex.ml[193,6381+4]..[202,6711+9])
                      Pexp_try
                      expression (tools/caml_tex.ml[194,6389+6]..[194,6389+49])
                        Pexp_apply
                        expression (tools/caml_tex.ml[194,6389+13]..[194,6389+15])
                          Pexp_ident "@@" (tools/caml_tex.ml[194,6389+13]..[194,6389+15])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[194,6389+6]..[194,6389+12])
                              Pexp_ident "ignore" (tools/caml_tex.ml[194,6389+6]..[194,6389+12])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[194,6389+16]..[194,6389+49])
                              Pexp_apply
                              expression (tools/caml_tex.ml[194,6389+16]..[194,6389+38])
                                Pexp_ident "Toploop.execute_phrase" (tools/caml_tex.ml[194,6389+16]..[194,6389+38])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[194,6389+39]..[194,6389+43])
                                    Pexp_construct "true" (tools/caml_tex.ml[194,6389+39]..[194,6389+43])
                                    None
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[194,6389+44]..[194,6389+47])
                                    Pexp_ident "ppf" (tools/caml_tex.ml[194,6389+44]..[194,6389+47])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[194,6389+48]..[194,6389+49])
                                    Pexp_ident "p" (tools/caml_tex.ml[194,6389+48]..[194,6389+49])
                              ]
                        ]
                      [
                        <case>
                          pattern (tools/caml_tex.ml[195,6439+9]..[195,6439+12])
                            Ppat_var "exn" (tools/caml_tex.ml[195,6439+9]..[195,6439+12])
                          expression (tools/caml_tex.ml[196,6455+6]..[202,6711+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[196,6455+10]..[196,6455+12])
                                  Ppat_var "bt" (tools/caml_tex.ml[196,6455+10]..[196,6455+12])
                                expression (tools/caml_tex.ml[196,6455+15]..[196,6455+44])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[196,6455+15]..[196,6455+41])
                                    Pexp_ident "Printexc.get_raw_backtrace" (tools/caml_tex.ml[196,6455+15]..[196,6455+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[196,6455+42]..[196,6455+44])
                                        Pexp_construct "()" (tools/caml_tex.ml[196,6455+42]..[196,6455+44])
                                        None
                                  ]
                            ]
                            expression (tools/caml_tex.ml[197,6503+6]..[202,6711+9])
                              Pexp_try
                              expression (tools/caml_tex.ml[197,6503+16]..[197,6503+61])
                                Pexp_apply
                                expression (tools/caml_tex.ml[197,6503+16]..[197,6503+41])
                                  Pexp_ident "Location.report_exception" (tools/caml_tex.ml[197,6503+16]..[197,6503+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[197,6503+42]..[197,6503+57])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[197,6503+43]..[197,6503+46])
                                        Pexp_ident "snd" (tools/caml_tex.ml[197,6503+43]..[197,6503+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[197,6503+47]..[197,6503+56])
                                            Pexp_ident "error_fmt" (tools/caml_tex.ml[197,6503+47]..[197,6503+56])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[197,6503+58]..[197,6503+61])
                                      Pexp_ident "exn" (tools/caml_tex.ml[197,6503+58]..[197,6503+61])
                                ]
                              [
                                <case>
                                  pattern (tools/caml_tex.ml[198,6565+11]..[198,6565+12])
                                    Ppat_any
                                  expression (tools/caml_tex.ml[199,6581+8]..[201,6663+47])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[199,6581+8]..[199,6581+15])
                                      Pexp_ident "eprintf" (tools/caml_tex.ml[199,6581+8]..[199,6581+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[199,6581+16]..[199,6581+46])
                                          Pexp_constant PConst_string("Uncaught exception: %s\n%s\n",(tools/caml_tex.ml[199,6581+17]..[199,6581+45]),None)
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[200,6628+10]..[200,6628+34])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[200,6628+11]..[200,6628+29])
                                            Pexp_ident "Printexc.to_string" (tools/caml_tex.ml[200,6628+11]..[200,6628+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[200,6628+30]..[200,6628+33])
                                                Pexp_ident "exn" (tools/caml_tex.ml[200,6628+30]..[200,6628+33])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[201,6663+10]..[201,6663+47])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[201,6663+11]..[201,6663+43])
                                            Pexp_ident "Printexc.raw_backtrace_to_string" (tools/caml_tex.ml[201,6663+11]..[201,6663+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[201,6663+44]..[201,6663+46])
                                                Pexp_ident "bt" (tools/caml_tex.ml[201,6663+44]..[201,6663+46])
                                          ]
                                    ]
                              ]
                      ]
            ]
          structure_item (tools/caml_tex.ml[204,6722+2]..[221,7310+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[204,6722+6]..[204,6722+11])
                  Ppat_var "parse" (tools/caml_tex.ml[204,6722+6]..[204,6722+11])
                expression (tools/caml_tex.ml[204,6722+12]..[221,7310+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[204,6722+12]..[204,6722+17])
                    Ppat_var "fname" (tools/caml_tex.ml[204,6722+12]..[204,6722+17])
                  expression (tools/caml_tex.ml[204,6722+18]..[221,7310+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[204,6722+18]..[204,6722+22])
                      Ppat_var "mode" (tools/caml_tex.ml[204,6722+18]..[204,6722+22])
                    expression (tools/caml_tex.ml[204,6722+23]..[221,7310+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[204,6722+23]..[204,6722+24])
                        Ppat_var "s" (tools/caml_tex.ml[204,6722+23]..[204,6722+24])
                      expression (tools/caml_tex.ml[205,6749+4]..[221,7310+32])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[205,6749+8]..[205,6749+11])
                              Ppat_var "lex" (tools/caml_tex.ml[205,6749+8]..[205,6749+11])
                            expression (tools/caml_tex.ml[205,6749+14]..[205,6749+34])
                              Pexp_apply
                              expression (tools/caml_tex.ml[205,6749+14]..[205,6749+32])
                                Pexp_ident "Lexing.from_string" (tools/caml_tex.ml[205,6749+14]..[205,6749+32])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[205,6749+33]..[205,6749+34])
                                    Pexp_ident "s" (tools/caml_tex.ml[205,6749+33]..[205,6749+34])
                              ]
                        ]
                        expression (tools/caml_tex.ml[206,6787+4]..[221,7310+32])
                          Pexp_sequence
                          expression (tools/caml_tex.ml[206,6787+4]..[206,6787+27])
                            Pexp_apply
                            expression (tools/caml_tex.ml[206,6787+4]..[206,6787+17])
                              Pexp_ident "Location.init" (tools/caml_tex.ml[206,6787+4]..[206,6787+17])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[206,6787+18]..[206,6787+21])
                                  Pexp_ident "lex" (tools/caml_tex.ml[206,6787+18]..[206,6787+21])
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[206,6787+22]..[206,6787+27])
                                  Pexp_ident "fname" (tools/caml_tex.ml[206,6787+22]..[206,6787+27])
                            ]
                          expression (tools/caml_tex.ml[207,6816+4]..[221,7310+32])
                            Pexp_sequence
                            expression (tools/caml_tex.ml[207,6816+4]..[207,6816+32])
                              Pexp_apply
                              expression (tools/caml_tex.ml[207,6816+24]..[207,6816+26])
                                Pexp_ident ":=" (tools/caml_tex.ml[207,6816+24]..[207,6816+26])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[207,6816+4]..[207,6816+23])
                                    Pexp_ident "Location.input_name" (tools/caml_tex.ml[207,6816+4]..[207,6816+23])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[207,6816+27]..[207,6816+32])
                                    Pexp_ident "fname" (tools/caml_tex.ml[207,6816+27]..[207,6816+32])
                              ]
                            expression (tools/caml_tex.ml[208,6850+4]..[221,7310+32])
                              Pexp_sequence
                              expression (tools/caml_tex.ml[208,6850+4]..[208,6850+37])
                                Pexp_apply
                                expression (tools/caml_tex.ml[208,6850+26]..[208,6850+28])
                                  Pexp_ident ":=" (tools/caml_tex.ml[208,6850+26]..[208,6850+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[208,6850+4]..[208,6850+25])
                                      Pexp_ident "Location.input_lexbuf" (tools/caml_tex.ml[208,6850+4]..[208,6850+25])
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[208,6850+29]..[208,6850+37])
                                      Pexp_construct "Some" (tools/caml_tex.ml[208,6850+29]..[208,6850+33])
                                      Some
                                        expression (tools/caml_tex.ml[208,6850+34]..[208,6850+37])
                                          Pexp_ident "lex" (tools/caml_tex.ml[208,6850+34]..[208,6850+37])
                                ]
                              expression (tools/caml_tex.ml[209,6889+4]..[221,7310+32])
                                Pexp_try
                                expression (tools/caml_tex.ml[210,6897+6]..[218,7235+22])
                                  Pexp_match
                                  expression (tools/caml_tex.ml[210,6897+12]..[210,6897+16])
                                    Pexp_ident "mode" (tools/caml_tex.ml[210,6897+12]..[210,6897+16])
                                  [
                                    <case>
                                      pattern (tools/caml_tex.ml[211,6919+8]..[211,6919+16])
                                        Ppat_construct "Toplevel" (tools/caml_tex.ml[211,6919+8]..[211,6919+16])
                                        None
                                      expression (tools/caml_tex.ml[211,6919+20]..[211,6919+45])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[211,6919+20]..[211,6919+41])
                                          Pexp_ident "Parse.toplevel_phrase" (tools/caml_tex.ml[211,6919+20]..[211,6919+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[211,6919+42]..[211,6919+45])
                                              Pexp_ident "lex" (tools/caml_tex.ml[211,6919+42]..[211,6919+45])
                                        ]
                                    <case>
                                      pattern (tools/caml_tex.ml[212,6965+8]..[212,6965+16])
                                        Ppat_construct "Verbatim" (tools/caml_tex.ml[212,6965+8]..[212,6965+16])
                                        None
                                      expression (tools/caml_tex.ml[212,6965+20]..[212,6965+55])
                                        Pexp_construct "Ptop_def" (tools/caml_tex.ml[212,6965+20]..[212,6965+28])
                                        Some
                                          expression (tools/caml_tex.ml[212,6965+29]..[212,6965+55])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[212,6965+30]..[212,6965+50])
                                              Pexp_ident "Parse.implementation" (tools/caml_tex.ml[212,6965+30]..[212,6965+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[212,6965+51]..[212,6965+54])
                                                  Pexp_ident "lex" (tools/caml_tex.ml[212,6965+51]..[212,6965+54])
                                            ]
                                    <case>
                                      pattern (tools/caml_tex.ml[213,7021+8]..[213,7021+17])
                                        Ppat_construct "Signature" (tools/caml_tex.ml[213,7021+8]..[213,7021+17])
                                        None
                                      expression (tools/caml_tex.ml[214,7042+10]..[218,7235+22])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (tools/caml_tex.ml[214,7042+14]..[214,7042+18])
                                              Ppat_var "sign" (tools/caml_tex.ml[214,7042+14]..[214,7042+18])
                                            expression (tools/caml_tex.ml[214,7042+21]..[214,7042+40])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[214,7042+21]..[214,7042+36])
                                                Pexp_ident "Parse.interface" (tools/caml_tex.ml[214,7042+21]..[214,7042+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[214,7042+37]..[214,7042+40])
                                                    Pexp_ident "lex" (tools/caml_tex.ml[214,7042+37]..[214,7042+40])
                                              ]
                                        ]
                                        expression (tools/caml_tex.ml[215,7086+10]..[218,7235+22])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (tools/caml_tex.ml[215,7086+14]..[215,7086+18])
                                                Ppat_var "name" (tools/caml_tex.ml[215,7086+14]..[215,7086+18])
                                              expression (tools/caml_tex.ml[215,7086+21]..[215,7086+44])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[215,7086+21]..[215,7086+37])
                                                  Pexp_ident "Location.mknoloc" (tools/caml_tex.ml[215,7086+21]..[215,7086+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[215,7086+38]..[215,7086+44])
                                                      Pexp_constant PConst_string("wrap",(tools/caml_tex.ml[215,7086+39]..[215,7086+43]),None)
                                                ]
                                          ]
                                          expression (tools/caml_tex.ml[216,7134+10]..[218,7235+22])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (tools/caml_tex.ml[216,7134+14]..[216,7134+17])
                                                  Ppat_var "str" (tools/caml_tex.ml[216,7134+14]..[216,7134+17])
                                                expression (tools/caml_tex.ml[217,7154+12]..[217,7154+77])
                                                  Pexp_open Fresh
                                                  module_expr (tools/caml_tex.ml[217,7154+12]..[217,7154+22])
                                                    Pmod_ident "Ast_helper" (tools/caml_tex.ml[217,7154+12]..[217,7154+22])
                                                  expression (tools/caml_tex.ml[217,7154+23]..[217,7154+77])
                                                    Pexp_construct "::" (tools/caml_tex.ml[217,7154+24]..[217,7154+77]) ghost
                                                    Some
                                                      expression (tools/caml_tex.ml[217,7154+24]..[217,7154+77]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (tools/caml_tex.ml[217,7154+24]..[217,7154+76])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[217,7154+36]..[217,7154+38])
                                                              Pexp_ident "@@" (tools/caml_tex.ml[217,7154+36]..[217,7154+38])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[217,7154+24]..[217,7154+35])
                                                                  Pexp_ident "Str.modtype" (tools/caml_tex.ml[217,7154+24]..[217,7154+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[217,7154+39]..[217,7154+76])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[217,7154+39]..[217,7154+45])
                                                                    Pexp_ident "Mtd.mk" (tools/caml_tex.ml[217,7154+39]..[217,7154+45])
                                                                  [
                                                                    <arg>
                                                                    Labelled "typ"
                                                                      expression (tools/caml_tex.ml[217,7154+51]..[217,7154+71])
Pexp_apply
expression (tools/caml_tex.ml[217,7154+52]..[217,7154+65])
  Pexp_ident "Mty.signature" (tools/caml_tex.ml[217,7154+52]..[217,7154+65])
[
  <arg>
  Nolabel
    expression (tools/caml_tex.ml[217,7154+66]..[217,7154+70])
      Pexp_ident "sign" (tools/caml_tex.ml[217,7154+66]..[217,7154+70])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[217,7154+72]..[217,7154+76])
Pexp_ident "name" (tools/caml_tex.ml[217,7154+72]..[217,7154+76])
                                                                  ]
                                                            ]
                                                          expression (tools/caml_tex.ml[217,7154+76]..[217,7154+77]) ghost
                                                            Pexp_construct "[]" (tools/caml_tex.ml[217,7154+76]..[217,7154+77]) ghost
                                                            None
                                                        ]
                                            ]
                                            expression (tools/caml_tex.ml[218,7235+10]..[218,7235+22])
                                              Pexp_construct "Ptop_def" (tools/caml_tex.ml[218,7235+10]..[218,7235+18])
                                              Some
                                                expression (tools/caml_tex.ml[218,7235+19]..[218,7235+22])
                                                  Pexp_ident "str" (tools/caml_tex.ml[218,7235+19]..[218,7235+22])
                                  ]
                                [
                                  <case>
                                    pattern (tools/caml_tex.ml[220,7267+6]..[220,7267+39])
                                      Ppat_or
                                      pattern (tools/caml_tex.ml[220,7267+6]..[220,7267+19])
                                        Ppat_construct "Lexer.Error" (tools/caml_tex.ml[220,7267+6]..[220,7267+17])
                                        Some
                                          []
                                          pattern (tools/caml_tex.ml[220,7267+18]..[220,7267+19])
                                            Ppat_any
                                      pattern (tools/caml_tex.ml[220,7267+22]..[220,7267+39])
                                        Ppat_construct "Syntaxerr.Error" (tools/caml_tex.ml[220,7267+22]..[220,7267+37])
                                        Some
                                          []
                                          pattern (tools/caml_tex.ml[220,7267+38]..[220,7267+39])
                                            Ppat_any
                                    expression (tools/caml_tex.ml[221,7310+8]..[221,7310+32])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[221,7310+8]..[221,7310+13])
                                        Pexp_ident "raise" (tools/caml_tex.ml[221,7310+8]..[221,7310+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[221,7310+14]..[221,7310+32])
                                            Pexp_construct "Phrase_parsing" (tools/caml_tex.ml[221,7310+15]..[221,7310+29])
                                            Some
                                              expression (tools/caml_tex.ml[221,7310+30]..[221,7310+31])
                                                Pexp_ident "s" (tools/caml_tex.ml[221,7310+30]..[221,7310+31])
                                      ]
                                ]
            ]
          structure_item (tools/caml_tex.ml[223,7344+2]..[223,7344+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[223,7344+6]..[223,7344+10])
                  Ppat_var "take" (tools/caml_tex.ml[223,7344+6]..[223,7344+10])
                expression (tools/caml_tex.ml[223,7344+11]..[223,7344+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[223,7344+11]..[223,7344+12])
                    Ppat_var "x" (tools/caml_tex.ml[223,7344+11]..[223,7344+12])
                  expression (tools/caml_tex.ml[223,7344+15]..[223,7344+39])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[223,7344+19]..[223,7344+20])
                          Ppat_var "r" (tools/caml_tex.ml[223,7344+19]..[223,7344+20])
                        expression (tools/caml_tex.ml[223,7344+23]..[223,7344+25])
                          Pexp_apply
                          expression (tools/caml_tex.ml[223,7344+23]..[223,7344+24])
                            Pexp_ident "!" (tools/caml_tex.ml[223,7344+23]..[223,7344+24])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[223,7344+24]..[223,7344+25])
                                Pexp_ident "x" (tools/caml_tex.ml[223,7344+24]..[223,7344+25])
                          ]
                    ]
                    expression (tools/caml_tex.ml[223,7344+29]..[223,7344+39])
                      Pexp_sequence
                      expression (tools/caml_tex.ml[223,7344+29]..[223,7344+36])
                        Pexp_apply
                        expression (tools/caml_tex.ml[223,7344+31]..[223,7344+33])
                          Pexp_ident ":=" (tools/caml_tex.ml[223,7344+31]..[223,7344+33])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[223,7344+29]..[223,7344+30])
                              Pexp_ident "x" (tools/caml_tex.ml[223,7344+29]..[223,7344+30])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[223,7344+34]..[223,7344+36])
                              Pexp_construct "[]" (tools/caml_tex.ml[223,7344+34]..[223,7344+36])
                              None
                        ]
                      expression (tools/caml_tex.ml[223,7344+38]..[223,7344+39])
                        Pexp_ident "r" (tools/caml_tex.ml[223,7344+38]..[223,7344+39])
            ]
          structure_item (tools/caml_tex.ml[225,7385+2]..[234,7747+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[225,7385+6]..[225,7385+17])
                  Ppat_var "read_output" (tools/caml_tex.ml[225,7385+6]..[225,7385+17])
                expression (tools/caml_tex.ml[225,7385+18]..[234,7747+51]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[225,7385+18]..[225,7385+20])
                    Ppat_construct "()" (tools/caml_tex.ml[225,7385+18]..[225,7385+20])
                    None
                  expression (tools/caml_tex.ml[226,7409+4]..[234,7747+51])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[226,7409+8]..[226,7409+16])
                          Ppat_var "warnings" (tools/caml_tex.ml[226,7409+8]..[226,7409+16])
                        expression (tools/caml_tex.ml[226,7409+19]..[226,7409+32])
                          Pexp_apply
                          expression (tools/caml_tex.ml[226,7409+19]..[226,7409+23])
                            Pexp_ident "take" (tools/caml_tex.ml[226,7409+19]..[226,7409+23])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[226,7409+24]..[226,7409+32])
                                Pexp_ident "warnings" (tools/caml_tex.ml[226,7409+24]..[226,7409+32])
                          ]
                    ]
                    expression (tools/caml_tex.ml[227,7445+4]..[234,7747+51])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[227,7445+8]..[227,7445+13])
                            Ppat_var "error" (tools/caml_tex.ml[227,7445+8]..[227,7445+13])
                          expression (tools/caml_tex.ml[227,7445+16]..[227,7445+35])
                            Pexp_apply
                            expression (tools/caml_tex.ml[227,7445+16]..[227,7445+25])
                              Pexp_ident "flush_fmt" (tools/caml_tex.ml[227,7445+16]..[227,7445+25])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[227,7445+26]..[227,7445+35])
                                  Pexp_ident "error_fmt" (tools/caml_tex.ml[227,7445+26]..[227,7445+35])
                            ]
                      ]
                      expression (tools/caml_tex.ml[228,7484+4]..[234,7747+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[228,7484+8]..[228,7484+14])
                              Ppat_var "values" (tools/caml_tex.ml[228,7484+8]..[228,7484+14])
                            expression (tools/caml_tex.ml[229,7501+6]..[229,7501+63])
                              Pexp_apply
                              expression (tools/caml_tex.ml[229,7501+43]..[229,7501+45])
                                Pexp_ident "@@" (tools/caml_tex.ml[229,7501+43]..[229,7501+45])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[229,7501+6]..[229,7501+42])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[229,7501+6]..[229,7501+19])
                                      Pexp_ident "replace_first" (tools/caml_tex.ml[229,7501+6]..[229,7501+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[229,7501+20]..[229,7501+39])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[229,7501+20]..[229,7501+22])
                                            Pexp_ident "~!" (tools/caml_tex.ml[229,7501+20]..[229,7501+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[229,7501+22]..[229,7501+39])
                                                Pexp_constant PConst_string ("^#\\( *\\*\\)* *",(tools/caml_tex.ml[229,7501+24]..[229,7501+37]),Some "")
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[229,7501+40]..[229,7501+42])
                                          Pexp_constant PConst_string("",(tools/caml_tex.ml[229,7501+41]..[229,7501+41]),None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[229,7501+46]..[229,7501+63])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[229,7501+46]..[229,7501+55])
                                      Pexp_ident "flush_fmt" (tools/caml_tex.ml[229,7501+46]..[229,7501+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[229,7501+56]..[229,7501+63])
                                          Pexp_ident "out_fmt" (tools/caml_tex.ml[229,7501+56]..[229,7501+63])
                                    ]
                              ]
                        ]
                        expression (tools/caml_tex.ml[232,7678+4]..[234,7747+51])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (tools/caml_tex.ml[232,7678+8]..[232,7678+18])
                                Ppat_var "underlined" (tools/caml_tex.ml[232,7678+8]..[232,7678+18])
                              expression (tools/caml_tex.ml[232,7678+21]..[232,7678+30])
                                Pexp_apply
                                expression (tools/caml_tex.ml[232,7678+21]..[232,7678+25])
                                  Pexp_ident "take" (tools/caml_tex.ml[232,7678+21]..[232,7678+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[232,7678+26]..[232,7678+30])
                                      Pexp_ident "locs" (tools/caml_tex.ml[232,7678+26]..[232,7678+30])
                                ]
                          ]
                          expression (tools/caml_tex.ml[233,7712+4]..[234,7747+51])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[233,7712+8]..[233,7712+14])
                                  Ppat_var "stdout" (tools/caml_tex.ml[233,7712+8]..[233,7712+14])
                                expression (tools/caml_tex.ml[233,7712+17]..[233,7712+31])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[233,7712+17]..[233,7712+28])
                                    Pexp_ident "read_stdout" (tools/caml_tex.ml[233,7712+17]..[233,7712+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[233,7712+29]..[233,7712+31])
                                        Pexp_construct "()" (tools/caml_tex.ml[233,7712+29]..[233,7712+31])
                                        None
                                  ]
                            ]
                            expression (tools/caml_tex.ml[234,7747+4]..[234,7747+51])
                              Pexp_record
                              [
                                "values" (tools/caml_tex.ml[234,7747+6]..[234,7747+12]) ghost
                                  expression (tools/caml_tex.ml[234,7747+6]..[234,7747+12])
                                    Pexp_ident "values" (tools/caml_tex.ml[234,7747+6]..[234,7747+12])
                                "warnings" (tools/caml_tex.ml[234,7747+14]..[234,7747+22]) ghost
                                  expression (tools/caml_tex.ml[234,7747+14]..[234,7747+22])
                                    Pexp_ident "warnings" (tools/caml_tex.ml[234,7747+14]..[234,7747+22])
                                "error" (tools/caml_tex.ml[234,7747+24]..[234,7747+29]) ghost
                                  expression (tools/caml_tex.ml[234,7747+24]..[234,7747+29])
                                    Pexp_ident "error" (tools/caml_tex.ml[234,7747+24]..[234,7747+29])
                                "stdout" (tools/caml_tex.ml[234,7747+31]..[234,7747+37]) ghost
                                  expression (tools/caml_tex.ml[234,7747+31]..[234,7747+37])
                                    Pexp_ident "stdout" (tools/caml_tex.ml[234,7747+31]..[234,7747+37])
                                "underlined" (tools/caml_tex.ml[234,7747+39]..[234,7747+49]) ghost
                                  expression (tools/caml_tex.ml[234,7747+39]..[234,7747+49])
                                    Pexp_ident "underlined" (tools/caml_tex.ml[234,7747+39]..[234,7747+49])
                              ]
                              None
            ]
          structure_item (tools/caml_tex.ml[237,7854+2]..[242,8014+18])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[236,7800+2]..[236,7800+53])
                        Pstr_eval
                        expression (tools/caml_tex.ml[236,7800+2]..[236,7800+53])
                          Pexp_constant PConst_string(" exec and ignore all output from the toplevel ",(tools/caml_tex.ml[236,7800+2]..[236,7800+53]),None)
                    ]
                pattern (tools/caml_tex.ml[237,7854+6]..[237,7854+10])
                  Ppat_var "eval" (tools/caml_tex.ml[237,7854+6]..[237,7854+10])
                expression (tools/caml_tex.ml[237,7854+11]..[242,8014+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[237,7854+11]..[237,7854+12])
                    Ppat_var "b" (tools/caml_tex.ml[237,7854+11]..[237,7854+12])
                  expression (tools/caml_tex.ml[238,7869+4]..[242,8014+18])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[238,7869+8]..[238,7869+9])
                          Ppat_var "s" (tools/caml_tex.ml[238,7869+8]..[238,7869+9])
                        expression (tools/caml_tex.ml[238,7869+12]..[238,7869+29])
                          Pexp_apply
                          expression (tools/caml_tex.ml[238,7869+12]..[238,7869+27])
                            Pexp_ident "Buffer.contents" (tools/caml_tex.ml[238,7869+12]..[238,7869+27])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[238,7869+28]..[238,7869+29])
                                Pexp_ident "b" (tools/caml_tex.ml[238,7869+28]..[238,7869+29])
                          ]
                    ]
                    expression (tools/caml_tex.ml[239,7902+4]..[242,8014+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[239,7902+8]..[239,7902+11])
                            Ppat_var "ast" (tools/caml_tex.ml[239,7902+8]..[239,7902+11])
                          expression (tools/caml_tex.ml[239,7902+14]..[239,7902+58])
                            Pexp_apply
                            expression (tools/caml_tex.ml[239,7902+14]..[239,7902+35])
                              Pexp_ident "Parse.toplevel_phrase" (tools/caml_tex.ml[239,7902+14]..[239,7902+35])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[239,7902+36]..[239,7902+58])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[239,7902+37]..[239,7902+55])
                                    Pexp_ident "Lexing.from_string" (tools/caml_tex.ml[239,7902+37]..[239,7902+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[239,7902+56]..[239,7902+57])
                                        Pexp_ident "s" (tools/caml_tex.ml[239,7902+56]..[239,7902+57])
                                  ]
                            ]
                      ]
                      expression (tools/caml_tex.ml[240,7964+4]..[242,8014+18])
                        Pexp_sequence
                        expression (tools/caml_tex.ml[240,7964+4]..[240,7964+20])
                          Pexp_apply
                          expression (tools/caml_tex.ml[240,7964+4]..[240,7964+8])
                            Pexp_ident "exec" (tools/caml_tex.ml[240,7964+4]..[240,7964+8])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[240,7964+9]..[240,7964+16])
                                Pexp_ident "out_fmt" (tools/caml_tex.ml[240,7964+9]..[240,7964+16])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[240,7964+17]..[240,7964+20])
                                Pexp_ident "ast" (tools/caml_tex.ml[240,7964+17]..[240,7964+20])
                          ]
                        expression (tools/caml_tex.ml[241,7986+4]..[242,8014+18])
                          Pexp_sequence
                          expression (tools/caml_tex.ml[241,7986+4]..[241,7986+26])
                            Pexp_apply
                            expression (tools/caml_tex.ml[241,7986+4]..[241,7986+10])
                              Pexp_ident "ignore" (tools/caml_tex.ml[241,7986+4]..[241,7986+10])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[241,7986+11]..[241,7986+26])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[241,7986+12]..[241,7986+23])
                                    Pexp_ident "read_output" (tools/caml_tex.ml[241,7986+12]..[241,7986+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[241,7986+23]..[241,7986+25])
                                        Pexp_construct "()" (tools/caml_tex.ml[241,7986+23]..[241,7986+25])
                                        None
                                  ]
                            ]
                          expression (tools/caml_tex.ml[242,8014+4]..[242,8014+18])
                            Pexp_apply
                            expression (tools/caml_tex.ml[242,8014+4]..[242,8014+16])
                              Pexp_ident "Buffer.reset" (tools/caml_tex.ml[242,8014+4]..[242,8014+16])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[242,8014+17]..[242,8014+18])
                                  Pexp_ident "b" (tools/caml_tex.ml[242,8014+17]..[242,8014+18])
                            ]
            ]
        ]
  structure_item (tools/caml_tex.ml[246,8039+0]..[255,8457+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[246,8039+4]..[246,8039+6])
          Ppat_construct "()" (tools/caml_tex.ml[246,8039+4]..[246,8039+6])
          None
        expression (tools/caml_tex.ml[247,8048+2]..[255,8457+18])
          Pexp_sequence
          expression (tools/caml_tex.ml[247,8048+2]..[254,8439+16])
            Pexp_apply
            expression (tools/caml_tex.ml[247,8048+2]..[247,8048+11])
              Pexp_ident "Arg.parse" (tools/caml_tex.ml[247,8048+2]..[247,8048+11])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[247,8048+12]..[252,8389+13])
                  Pexp_construct "::" (tools/caml_tex.ml[247,8048+13]..[252,8389+13]) ghost
                  Some
                    expression (tools/caml_tex.ml[247,8048+13]..[252,8389+13]) ghost
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[247,8048+13]..[247,8048+65])
                          Pexp_tuple
                          [
                            expression (tools/caml_tex.ml[247,8048+13]..[247,8048+17])
                              Pexp_constant PConst_string("-n",(tools/caml_tex.ml[247,8048+14]..[247,8048+16]),None)
                            expression (tools/caml_tex.ml[247,8048+19]..[247,8048+50])
                              Pexp_construct "Arg.Int" (tools/caml_tex.ml[247,8048+19]..[247,8048+26])
                              Some
                                expression (tools/caml_tex.ml[247,8048+27]..[247,8048+50])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (tools/caml_tex.ml[247,8048+32]..[247,8048+33])
                                    Ppat_var "n" (tools/caml_tex.ml[247,8048+32]..[247,8048+33])
                                  expression (tools/caml_tex.ml[247,8048+37]..[247,8048+49])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[247,8048+45]..[247,8048+47])
                                      Pexp_ident ":=" (tools/caml_tex.ml[247,8048+45]..[247,8048+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[247,8048+37]..[247,8048+44])
                                          Pexp_ident "linelen" (tools/caml_tex.ml[247,8048+37]..[247,8048+44])
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[247,8048+48]..[247,8048+49])
                                          Pexp_ident "n" (tools/caml_tex.ml[247,8048+48]..[247,8048+49])
                                    ]
                            expression (tools/caml_tex.ml[247,8048+52]..[247,8048+65])
                              Pexp_constant PConst_string("line length",(tools/caml_tex.ml[247,8048+53]..[247,8048+64]),None)
                          ]
                        expression (tools/caml_tex.ml[248,8115+13]..[252,8389+13]) ghost
                          Pexp_construct "::" (tools/caml_tex.ml[248,8115+13]..[252,8389+13]) ghost
                          Some
                            expression (tools/caml_tex.ml[248,8115+13]..[252,8389+13]) ghost
                              Pexp_tuple
                              [
                                expression (tools/caml_tex.ml[248,8115+13]..[248,8115+63])
                                  Pexp_tuple
                                  [
                                    expression (tools/caml_tex.ml[248,8115+13]..[248,8115+17])
                                      Pexp_constant PConst_string("-o",(tools/caml_tex.ml[248,8115+14]..[248,8115+16]),None)
                                    expression (tools/caml_tex.ml[248,8115+19]..[248,8115+53])
                                      Pexp_construct "Arg.String" (tools/caml_tex.ml[248,8115+19]..[248,8115+29])
                                      Some
                                        expression (tools/caml_tex.ml[248,8115+30]..[248,8115+53])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (tools/caml_tex.ml[248,8115+35]..[248,8115+36])
                                            Ppat_var "s" (tools/caml_tex.ml[248,8115+35]..[248,8115+36])
                                          expression (tools/caml_tex.ml[248,8115+40]..[248,8115+52])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[248,8115+48]..[248,8115+50])
                                              Pexp_ident ":=" (tools/caml_tex.ml[248,8115+48]..[248,8115+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[248,8115+40]..[248,8115+47])
                                                  Pexp_ident "outfile" (tools/caml_tex.ml[248,8115+40]..[248,8115+47])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[248,8115+51]..[248,8115+52])
                                                  Pexp_ident "s" (tools/caml_tex.ml[248,8115+51]..[248,8115+52])
                                            ]
                                    expression (tools/caml_tex.ml[248,8115+55]..[248,8115+63])
                                      Pexp_constant PConst_string("output",(tools/caml_tex.ml[248,8115+56]..[248,8115+62]),None)
                                  ]
                                expression (tools/caml_tex.ml[249,8180+13]..[252,8389+13]) ghost
                                  Pexp_construct "::" (tools/caml_tex.ml[249,8180+13]..[252,8389+13]) ghost
                                  Some
                                    expression (tools/caml_tex.ml[249,8180+13]..[252,8389+13]) ghost
                                      Pexp_tuple
                                      [
                                        expression (tools/caml_tex.ml[249,8180+13]..[249,8180+68])
                                          Pexp_tuple
                                          [
                                            expression (tools/caml_tex.ml[249,8180+13]..[249,8180+25])
                                              Pexp_constant PConst_string("-repo-root",(tools/caml_tex.ml[249,8180+14]..[249,8180+24]),None)
                                            expression (tools/caml_tex.ml[249,8180+27]..[249,8180+55])
                                              Pexp_construct "Arg.String" (tools/caml_tex.ml[249,8180+27]..[249,8180+37])
                                              Some
                                                expression (tools/caml_tex.ml[249,8180+38]..[249,8180+55])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[249,8180+39]..[249,8180+43])
                                                    Pexp_ident ":=" (tools/caml_tex.ml[249,8180+39]..[249,8180+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[249,8180+44]..[249,8180+53])
                                                        Pexp_ident "repo_root" (tools/caml_tex.ml[249,8180+44]..[249,8180+53])
                                                  ]
                                            expression (tools/caml_tex.ml[249,8180+57]..[249,8180+68])
                                              Pexp_constant PConst_string("repo root",(tools/caml_tex.ml[249,8180+58]..[249,8180+67]),None)
                                          ]
                                        expression (tools/caml_tex.ml[250,8250+13]..[252,8389+13]) ghost
                                          Pexp_construct "::" (tools/caml_tex.ml[250,8250+13]..[252,8389+13]) ghost
                                          Some
                                            expression (tools/caml_tex.ml[250,8250+13]..[252,8389+13]) ghost
                                              Pexp_tuple
                                              [
                                                expression (tools/caml_tex.ml[250,8250+13]..[250,8250+57])
                                                  Pexp_tuple
                                                  [
                                                    expression (tools/caml_tex.ml[250,8250+13]..[250,8250+17])
                                                      Pexp_constant PConst_string("-w",(tools/caml_tex.ml[250,8250+14]..[250,8250+16]),None)
                                                    expression (tools/caml_tex.ml[250,8250+19]..[250,8250+40])
                                                      Pexp_construct "Arg.Set" (tools/caml_tex.ml[250,8250+19]..[250,8250+26])
                                                      Some
                                                        expression (tools/caml_tex.ml[250,8250+27]..[250,8250+40])
                                                          Pexp_ident "cut_at_blanks" (tools/caml_tex.ml[250,8250+27]..[250,8250+40])
                                                    expression (tools/caml_tex.ml[250,8250+42]..[250,8250+57])
                                                      Pexp_constant PConst_string("cut at blanks",(tools/caml_tex.ml[250,8250+43]..[250,8250+56]),None)
                                                  ]
                                                expression (tools/caml_tex.ml[251,8309+13]..[252,8389+13]) ghost
                                                  Pexp_construct "::" (tools/caml_tex.ml[251,8309+13]..[252,8389+13]) ghost
                                                  Some
                                                    expression (tools/caml_tex.ml[251,8309+13]..[252,8389+13]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (tools/caml_tex.ml[251,8309+13]..[251,8309+79])
                                                          Pexp_tuple
                                                          [
                                                            expression (tools/caml_tex.ml[251,8309+13]..[251,8309+17])
                                                              Pexp_constant PConst_string("-v",(tools/caml_tex.ml[251,8309+14]..[251,8309+16]),None)
                                                            expression (tools/caml_tex.ml[251,8309+19]..[251,8309+52])
                                                              Pexp_construct "Arg.Bool" (tools/caml_tex.ml[251,8309+19]..[251,8309+27])
                                                              Some
                                                                expression (tools/caml_tex.ml[251,8309+28]..[251,8309+52])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (tools/caml_tex.ml[251,8309+33]..[251,8309+34])
                                                                    Ppat_var "b" (tools/caml_tex.ml[251,8309+33]..[251,8309+34])
                                                                  expression (tools/caml_tex.ml[251,8309+38]..[251,8309+50])
                                                                    Pexp_apply
                                                                    expression (tools/caml_tex.ml[251,8309+46]..[251,8309+48])
                                                                      Pexp_ident ":=" (tools/caml_tex.ml[251,8309+46]..[251,8309+48])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[251,8309+38]..[251,8309+45])
  Pexp_ident "verbose" (tools/caml_tex.ml[251,8309+38]..[251,8309+45])
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[251,8309+49]..[251,8309+50])
  Pexp_ident "b" (tools/caml_tex.ml[251,8309+49]..[251,8309+50])
                                                                    ]
                                                            expression (tools/caml_tex.ml[251,8309+54]..[251,8309+79])
                                                              Pexp_constant PConst_string("output result on stderr",(tools/caml_tex.ml[251,8309+55]..[251,8309+78]),None)
                                                          ]
                                                        expression (tools/caml_tex.ml[252,8389+12]..[252,8389+13]) ghost
                                                          Pexp_construct "[]" (tools/caml_tex.ml[252,8389+12]..[252,8389+13]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[253,8403+4]..[253,8403+35])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[253,8403+9]..[253,8403+10])
                    Ppat_var "s" (tools/caml_tex.ml[253,8403+9]..[253,8403+10])
                  expression (tools/caml_tex.ml[253,8403+14]..[253,8403+34])
                    Pexp_apply
                    expression (tools/caml_tex.ml[253,8403+20]..[253,8403+22])
                      Pexp_ident ":=" (tools/caml_tex.ml[253,8403+20]..[253,8403+22])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[253,8403+14]..[253,8403+19])
                          Pexp_ident "files" (tools/caml_tex.ml[253,8403+14]..[253,8403+19])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[253,8403+23]..[253,8403+34])
                          Pexp_construct "::" (tools/caml_tex.ml[253,8403+25]..[253,8403+27])
                          Some
                            expression (tools/caml_tex.ml[253,8403+23]..[253,8403+34]) ghost
                              Pexp_tuple
                              [
                                expression (tools/caml_tex.ml[253,8403+23]..[253,8403+24])
                                  Pexp_ident "s" (tools/caml_tex.ml[253,8403+23]..[253,8403+24])
                                expression (tools/caml_tex.ml[253,8403+28]..[253,8403+34])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[253,8403+28]..[253,8403+29])
                                    Pexp_ident "!" (tools/caml_tex.ml[253,8403+28]..[253,8403+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[253,8403+29]..[253,8403+34])
                                        Pexp_ident "files" (tools/caml_tex.ml[253,8403+29]..[253,8403+34])
                                  ]
                              ]
                    ]
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[254,8439+4]..[254,8439+16])
                  Pexp_constant PConst_string("caml-tex: ",(tools/caml_tex.ml[254,8439+5]..[254,8439+15]),None)
            ]
          expression (tools/caml_tex.ml[255,8457+2]..[255,8457+18])
            Pexp_apply
            expression (tools/caml_tex.ml[255,8457+2]..[255,8457+15])
              Pexp_ident "Toplevel.init" (tools/caml_tex.ml[255,8457+2]..[255,8457+15])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[255,8457+16]..[255,8457+18])
                  Pexp_construct "()" (tools/caml_tex.ml[255,8457+16]..[255,8457+18])
                  None
            ]
    ]
  structure_item (tools/caml_tex.ml[261,8670+0]..[402,12957+3])
    Pstr_module
    "Output" (tools/caml_tex.ml[261,8670+7]..[261,8670+13])
      attribute "ocaml.doc"
        [
          structure_item (tools/caml_tex.ml[258,8478+0]..[260,8615+54])
            Pstr_eval
            expression (tools/caml_tex.ml[258,8478+0]..[260,8615+54])
              Pexp_constant PConst_string(" The Output module deals with the analysis and classification\n    of the interpreter output and the parsing of status-related options\n    or annotations for the caml_example environment ",(tools/caml_tex.ml[258,8478+0]..[260,8615+54]),None)
        ]
      module_expr (tools/caml_tex.ml[261,8670+16]..[402,12957+3])
        Pmod_structure
        [
          structure_item (tools/caml_tex.ml[264,8729+2]..[267,8775+11])
            Pstr_type Rec
            [
              type_declaration "status" (tools/caml_tex.ml[264,8729+7]..[264,8729+13]) (tools/caml_tex.ml[264,8729+2]..[267,8775+11])
                attribute "ocaml.doc"
                  [
                    structure_item (tools/caml_tex.ml[263,8694+2]..[263,8694+34])
                      Pstr_eval
                      expression (tools/caml_tex.ml[263,8694+2]..[263,8694+34])
                        Pexp_constant PConst_string(" Interpreter output status ",(tools/caml_tex.ml[263,8694+2]..[263,8694+34]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (tools/caml_tex.ml[265,8745+4]..[265,8745+8])
                        "Ok" (tools/caml_tex.ml[265,8745+6]..[265,8745+8])
                        []
                        None
                      (tools/caml_tex.ml[266,8754+4]..[266,8754+20])
                        "Warning" (tools/caml_tex.ml[266,8754+6]..[266,8754+13])
                        [
                          core_type (tools/caml_tex.ml[266,8754+17]..[266,8754+20])
                            Ptyp_constr "int" (tools/caml_tex.ml[266,8754+17]..[266,8754+20])
                            []
                        ]
                        None
                      (tools/caml_tex.ml[267,8775+4]..[267,8775+11])
                        "Error" (tools/caml_tex.ml[267,8775+6]..[267,8775+11])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[269,8788+2]..[271,8874+12])
            Pstr_type Rec
            [
              type_declaration "kind" (tools/caml_tex.ml[269,8788+7]..[269,8788+11]) (tools/caml_tex.ml[269,8788+2]..[271,8874+12])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (tools/caml_tex.ml[270,8802+4]..[270,8802+16])
                        "Annotation" (tools/caml_tex.ml[270,8802+6]..[270,8802+16])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[270,8802+17]..[270,8802+71])
                              Pstr_eval
                              expression (tools/caml_tex.ml[270,8802+17]..[270,8802+71])
                                Pexp_constant PConst_string(" Local annotation: [ [@@expect (*annotation*) ] ]",(tools/caml_tex.ml[270,8802+17]..[270,8802+71]),None)
                          ]
                        []
                        None
                      (tools/caml_tex.ml[271,8874+4]..[271,8874+12])
                        "Option" (tools/caml_tex.ml[271,8874+6]..[271,8874+12])
                        attribute "ocaml.doc"
                          [
                            structure_item (tools/caml_tex.ml[271,8874+13]..[274,8994+39])
                              Pstr_eval
                              expression (tools/caml_tex.ml[271,8874+13]..[274,8994+39])
                                Pexp_constant PConst_string(" Global environment option:\n                 [\\begin{caml_example}[option[=value]]\n                 ...\n                 \\end{caml_example}] ",(tools/caml_tex.ml[271,8874+13]..[274,8994+39]),None)
                          ]
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[277,9070+2]..[280,9179+52])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[276,9035+2]..[276,9035+34])
                        Pstr_eval
                        expression (tools/caml_tex.ml[276,9035+2]..[276,9035+34])
                          Pexp_constant PConst_string(" Pretty printer for status ",(tools/caml_tex.ml[276,9035+2]..[276,9035+34]),None)
                    ]
                pattern (tools/caml_tex.ml[277,9070+6]..[277,9070+15])
                  Ppat_var "pp_status" (tools/caml_tex.ml[277,9070+6]..[277,9070+15])
                expression (tools/caml_tex.ml[277,9070+16]..[280,9179+52]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[277,9070+16]..[277,9070+19])
                    Ppat_var "ppf" (tools/caml_tex.ml[277,9070+16]..[277,9070+19])
                  expression (tools/caml_tex.ml[277,9070+22]..[280,9179+52])
                    Pexp_function
                    [
                      <case>
                        pattern (tools/caml_tex.ml[278,9101+6]..[278,9101+11])
                          Ppat_construct "Error" (tools/caml_tex.ml[278,9101+6]..[278,9101+11])
                          None
                        expression (tools/caml_tex.ml[278,9101+15]..[278,9101+41])
                          Pexp_apply
                          expression (tools/caml_tex.ml[278,9101+15]..[278,9101+29])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[278,9101+15]..[278,9101+29])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[278,9101+30]..[278,9101+33])
                                Pexp_ident "ppf" (tools/caml_tex.ml[278,9101+30]..[278,9101+33])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[278,9101+34]..[278,9101+41])
                                Pexp_constant PConst_string("error",(tools/caml_tex.ml[278,9101+35]..[278,9101+40]),None)
                          ]
                      <case>
                        pattern (tools/caml_tex.ml[279,9143+6]..[279,9143+8])
                          Ppat_construct "Ok" (tools/caml_tex.ml[279,9143+6]..[279,9143+8])
                          None
                        expression (tools/caml_tex.ml[279,9143+12]..[279,9143+35])
                          Pexp_apply
                          expression (tools/caml_tex.ml[279,9143+12]..[279,9143+26])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[279,9143+12]..[279,9143+26])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[279,9143+27]..[279,9143+30])
                                Pexp_ident "ppf" (tools/caml_tex.ml[279,9143+27]..[279,9143+30])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[279,9143+31]..[279,9143+35])
                                Pexp_constant PConst_string("ok",(tools/caml_tex.ml[279,9143+32]..[279,9143+34]),None)
                          ]
                      <case>
                        pattern (tools/caml_tex.ml[280,9179+6]..[280,9179+15])
                          Ppat_construct "Warning" (tools/caml_tex.ml[280,9179+6]..[280,9179+13])
                          Some
                            []
                            pattern (tools/caml_tex.ml[280,9179+14]..[280,9179+15])
                              Ppat_var "n" (tools/caml_tex.ml[280,9179+14]..[280,9179+15])
                        expression (tools/caml_tex.ml[280,9179+19]..[280,9179+52])
                          Pexp_apply
                          expression (tools/caml_tex.ml[280,9179+19]..[280,9179+33])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[280,9179+19]..[280,9179+33])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[280,9179+34]..[280,9179+37])
                                Pexp_ident "ppf" (tools/caml_tex.ml[280,9179+34]..[280,9179+37])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[280,9179+38]..[280,9179+50])
                                Pexp_constant PConst_string("warning %d",(tools/caml_tex.ml[280,9179+39]..[280,9179+49]),None)
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[280,9179+51]..[280,9179+52])
                                Pexp_ident "n" (tools/caml_tex.ml[280,9179+51]..[280,9179+52])
                          ]
                    ]
            ]
          structure_item (tools/caml_tex.ml[283,9307+2]..[286,9424+54])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[282,9233+2]..[282,9233+73])
                        Pstr_eval
                        expression (tools/caml_tex.ml[282,9233+2]..[282,9233+73])
                          Pexp_constant PConst_string(" Pretty printer for status preceded with an undefined determinant ",(tools/caml_tex.ml[282,9233+2]..[282,9233+73]),None)
                    ]
                pattern (tools/caml_tex.ml[283,9307+6]..[283,9307+17])
                  Ppat_var "pp_a_status" (tools/caml_tex.ml[283,9307+6]..[283,9307+17])
                expression (tools/caml_tex.ml[283,9307+18]..[286,9424+54]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[283,9307+18]..[283,9307+21])
                    Ppat_var "ppf" (tools/caml_tex.ml[283,9307+18]..[283,9307+21])
                  expression (tools/caml_tex.ml[283,9307+24]..[286,9424+54])
                    Pexp_function
                    [
                      <case>
                        pattern (tools/caml_tex.ml[284,9340+6]..[284,9340+11])
                          Ppat_construct "Error" (tools/caml_tex.ml[284,9340+6]..[284,9340+11])
                          None
                        expression (tools/caml_tex.ml[284,9340+15]..[284,9340+44])
                          Pexp_apply
                          expression (tools/caml_tex.ml[284,9340+15]..[284,9340+29])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[284,9340+15]..[284,9340+29])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[284,9340+30]..[284,9340+33])
                                Pexp_ident "ppf" (tools/caml_tex.ml[284,9340+30]..[284,9340+33])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[284,9340+34]..[284,9340+44])
                                Pexp_constant PConst_string("an error",(tools/caml_tex.ml[284,9340+35]..[284,9340+43]),None)
                          ]
                      <case>
                        pattern (tools/caml_tex.ml[285,9385+6]..[285,9385+8])
                          Ppat_construct "Ok" (tools/caml_tex.ml[285,9385+6]..[285,9385+8])
                          None
                        expression (tools/caml_tex.ml[285,9385+12]..[285,9385+38])
                          Pexp_apply
                          expression (tools/caml_tex.ml[285,9385+12]..[285,9385+26])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[285,9385+12]..[285,9385+26])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[285,9385+27]..[285,9385+30])
                                Pexp_ident "ppf" (tools/caml_tex.ml[285,9385+27]..[285,9385+30])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[285,9385+31]..[285,9385+38])
                                Pexp_constant PConst_string("an ok",(tools/caml_tex.ml[285,9385+32]..[285,9385+37]),None)
                          ]
                      <case>
                        pattern (tools/caml_tex.ml[286,9424+6]..[286,9424+15])
                          Ppat_construct "Warning" (tools/caml_tex.ml[286,9424+6]..[286,9424+13])
                          Some
                            []
                            pattern (tools/caml_tex.ml[286,9424+14]..[286,9424+15])
                              Ppat_var "n" (tools/caml_tex.ml[286,9424+14]..[286,9424+15])
                        expression (tools/caml_tex.ml[286,9424+19]..[286,9424+54])
                          Pexp_apply
                          expression (tools/caml_tex.ml[286,9424+19]..[286,9424+33])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[286,9424+19]..[286,9424+33])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[286,9424+34]..[286,9424+37])
                                Pexp_ident "ppf" (tools/caml_tex.ml[286,9424+34]..[286,9424+37])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[286,9424+38]..[286,9424+52])
                                Pexp_constant PConst_string("a warning %d",(tools/caml_tex.ml[286,9424+39]..[286,9424+51]),None)
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[286,9424+53]..[286,9424+54])
                                Pexp_ident "n" (tools/caml_tex.ml[286,9424+53]..[286,9424+54])
                          ]
                    ]
            ]
          structure_item (tools/caml_tex.ml[289,9520+2]..[292,9589+21])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[288,9480+2]..[288,9480+39])
                        Pstr_eval
                        expression (tools/caml_tex.ml[288,9480+2]..[288,9480+39])
                          Pexp_constant PConst_string(" {1 Related latex environment } ",(tools/caml_tex.ml[288,9480+2]..[288,9480+39]),None)
                    ]
                pattern (tools/caml_tex.ml[289,9520+6]..[289,9520+9])
                  Ppat_var "env" (tools/caml_tex.ml[289,9520+6]..[289,9520+9])
                expression (tools/caml_tex.ml[289,9520+12]..[292,9589+21])
                  Pexp_function
                  [
                    <case>
                      pattern (tools/caml_tex.ml[290,9541+6]..[290,9541+11])
                        Ppat_construct "Error" (tools/caml_tex.ml[290,9541+6]..[290,9541+11])
                        None
                      expression (tools/caml_tex.ml[290,9541+15]..[290,9541+20])
                        Pexp_ident "error" (tools/caml_tex.ml[290,9541+15]..[290,9541+20])
                    <case>
                      pattern (tools/caml_tex.ml[291,9562+6]..[291,9562+15])
                        Ppat_construct "Warning" (tools/caml_tex.ml[291,9562+6]..[291,9562+13])
                        Some
                          []
                          pattern (tools/caml_tex.ml[291,9562+14]..[291,9562+15])
                            Ppat_any
                      expression (tools/caml_tex.ml[291,9562+19]..[291,9562+26])
                        Pexp_ident "warning" (tools/caml_tex.ml[291,9562+19]..[291,9562+26])
                    <case>
                      pattern (tools/caml_tex.ml[292,9589+6]..[292,9589+8])
                        Ppat_construct "Ok" (tools/caml_tex.ml[292,9589+6]..[292,9589+8])
                        None
                      expression (tools/caml_tex.ml[292,9589+12]..[292,9589+21])
                        Pexp_ident "ok_output" (tools/caml_tex.ml[292,9589+12]..[292,9589+21])
                  ]
            ]
          structure_item (tools/caml_tex.ml[295,9637+2]..[295,9637+42])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (tools/caml_tex.ml[295,9637+2]..[295,9637+42])
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[294,9612+2]..[294,9612+24])
                        Pstr_eval
                        expression (tools/caml_tex.ml[294,9612+2]..[294,9612+24])
                          Pexp_constant PConst_string(" {1 Exceptions } ",(tools/caml_tex.ml[294,9612+2]..[294,9612+24]),None)
                    ]
                  pext_name = "Parsing_error"
                  pext_kind =
                    Pext_decl
                      [
                        core_type (tools/caml_tex.ml[295,9637+29]..[295,9637+33])
                          Ptyp_constr "kind" (tools/caml_tex.ml[295,9637+29]..[295,9637+33])
                          []
                        core_type (tools/caml_tex.ml[295,9637+36]..[295,9637+42])
                          Ptyp_constr "string" (tools/caml_tex.ml[295,9637+36]..[295,9637+42])
                          []
                      ]
                      None
          structure_item (tools/caml_tex.ml[297,9681+2]..[303,9794+5])
            Pstr_type Rec
            [
              type_declaration "source" (tools/caml_tex.ml[297,9681+7]..[297,9681+13]) (tools/caml_tex.ml[297,9681+2]..[303,9794+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (tools/caml_tex.ml[299,9703+6]..[299,9703+20])
                        Immutable
                        "file" (tools/caml_tex.ml[299,9703+6]..[299,9703+10])                        core_type (tools/caml_tex.ml[299,9703+13]..[299,9703+19])
                          Ptyp_constr "string" (tools/caml_tex.ml[299,9703+13]..[299,9703+19])
                          []
                      (tools/caml_tex.ml[300,9724+6]..[300,9724+24])
                        Immutable
                        "lines" (tools/caml_tex.ml[300,9724+6]..[300,9724+11])                        core_type (tools/caml_tex.ml[300,9724+14]..[300,9724+23])
                          Ptyp_tuple
                          [
                            core_type (tools/caml_tex.ml[300,9724+14]..[300,9724+17])
                              Ptyp_constr "int" (tools/caml_tex.ml[300,9724+14]..[300,9724+17])
                              []
                            core_type (tools/caml_tex.ml[300,9724+20]..[300,9724+23])
                              Ptyp_constr "int" (tools/caml_tex.ml[300,9724+20]..[300,9724+23])
                              []
                          ]
                      (tools/caml_tex.ml[301,9749+6]..[301,9749+22])
                        Immutable
                        "phrase" (tools/caml_tex.ml[301,9749+6]..[301,9749+12])                        core_type (tools/caml_tex.ml[301,9749+15]..[301,9749+21])
                          Ptyp_constr "string" (tools/caml_tex.ml[301,9749+15]..[301,9749+21])
                          []
                      (tools/caml_tex.ml[302,9772+6]..[302,9772+21])
                        Immutable
                        "output" (tools/caml_tex.ml[302,9772+6]..[302,9772+12])                        core_type (tools/caml_tex.ml[302,9772+15]..[302,9772+21])
                          Ptyp_constr "string" (tools/caml_tex.ml[302,9772+15]..[302,9772+21])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[304,9800+2]..[304,9800+77])
            Pstr_type Rec
            [
              type_declaration "unexpected_report" (tools/caml_tex.ml[304,9800+7]..[304,9800+24]) (tools/caml_tex.ml[304,9800+2]..[304,9800+77])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (tools/caml_tex.ml[304,9800+28]..[304,9800+44])
                        Immutable
                        "source" (tools/caml_tex.ml[304,9800+28]..[304,9800+34])                        core_type (tools/caml_tex.ml[304,9800+37]..[304,9800+43])
                          Ptyp_constr "source" (tools/caml_tex.ml[304,9800+37]..[304,9800+43])
                          []
                      (tools/caml_tex.ml[304,9800+45]..[304,9800+63])
                        Immutable
                        "expected" (tools/caml_tex.ml[304,9800+45]..[304,9800+53])                        core_type (tools/caml_tex.ml[304,9800+56]..[304,9800+62])
                          Ptyp_constr "status" (tools/caml_tex.ml[304,9800+56]..[304,9800+62])
                          []
                      (tools/caml_tex.ml[304,9800+64]..[304,9800+76])
                        Immutable
                        "got" (tools/caml_tex.ml[304,9800+64]..[304,9800+67])                        core_type (tools/caml_tex.ml[304,9800+70]..[304,9800+76])
                          Ptyp_constr "status" (tools/caml_tex.ml[304,9800+70]..[304,9800+76])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[305,9878+2]..[305,9878+50])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (tools/caml_tex.ml[305,9878+2]..[305,9878+50])
                  pext_name = "Unexpected_status"
                  pext_kind =
                    Pext_decl
                      [
                        core_type (tools/caml_tex.ml[305,9878+33]..[305,9878+50])
                          Ptyp_constr "unexpected_report" (tools/caml_tex.ml[305,9878+33]..[305,9878+50])
                          []
                      ]
                      None
          structure_item (tools/caml_tex.ml[307,9930+2]..[309,10071+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[307,9930+6]..[307,9930+18])
                  Ppat_var "print_source" (tools/caml_tex.ml[307,9930+6]..[307,9930+18])
                expression (tools/caml_tex.ml[307,9930+19]..[309,10071+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[307,9930+19]..[307,9930+22])
                    Ppat_var "ppf" (tools/caml_tex.ml[307,9930+19]..[307,9930+22])
                  expression (tools/caml_tex.ml[307,9930+23]..[309,10071+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[307,9930+23]..[307,9930+68])
                      Ppat_record Closed
                      [
                        "file" (tools/caml_tex.ml[307,9930+24]..[307,9930+28]) ghost
                          pattern (tools/caml_tex.ml[307,9930+24]..[307,9930+28])
                            Ppat_var "file" (tools/caml_tex.ml[307,9930+24]..[307,9930+28])
                        "lines" (tools/caml_tex.ml[307,9930+30]..[307,9930+35])
                          pattern (tools/caml_tex.ml[307,9930+38]..[307,9930+51])
                            Ppat_tuple
                            [
                              pattern (tools/caml_tex.ml[307,9930+39]..[307,9930+44])
                                Ppat_var "start" (tools/caml_tex.ml[307,9930+39]..[307,9930+44])
                              pattern (tools/caml_tex.ml[307,9930+46]..[307,9930+50])
                                Ppat_var "stop" (tools/caml_tex.ml[307,9930+46]..[307,9930+50])
                            ]
                        "phrase" (tools/caml_tex.ml[307,9930+53]..[307,9930+59]) ghost
                          pattern (tools/caml_tex.ml[307,9930+53]..[307,9930+59])
                            Ppat_var "phrase" (tools/caml_tex.ml[307,9930+53]..[307,9930+59])
                        "output" (tools/caml_tex.ml[307,9930+61]..[307,9930+67]) ghost
                          pattern (tools/caml_tex.ml[307,9930+61]..[307,9930+67])
                            Ppat_var "output" (tools/caml_tex.ml[307,9930+61]..[307,9930+67])
                      ]
                    expression (tools/caml_tex.ml[308,10001+4]..[309,10071+35])
                      Pexp_apply
                      expression (tools/caml_tex.ml[308,10001+4]..[308,10001+18])
                        Pexp_ident "Format.fprintf" (tools/caml_tex.ml[308,10001+4]..[308,10001+18])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[308,10001+19]..[308,10001+22])
                            Pexp_ident "ppf" (tools/caml_tex.ml[308,10001+19]..[308,10001+22])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[308,10001+23]..[308,10001+69])
                            Pexp_constant PConst_string("%s, lines %d to %d:\n\"\n%s\n\"\n\"\n%s\n\".",(tools/caml_tex.ml[308,10001+24]..[308,10001+68]),None)
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[309,10071+6]..[309,10071+10])
                            Pexp_ident "file" (tools/caml_tex.ml[309,10071+6]..[309,10071+10])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[309,10071+11]..[309,10071+16])
                            Pexp_ident "start" (tools/caml_tex.ml[309,10071+11]..[309,10071+16])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[309,10071+17]..[309,10071+21])
                            Pexp_ident "stop" (tools/caml_tex.ml[309,10071+17]..[309,10071+21])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[309,10071+22]..[309,10071+28])
                            Pexp_ident "phrase" (tools/caml_tex.ml[309,10071+22]..[309,10071+28])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[309,10071+29]..[309,10071+35])
                            Pexp_ident "output" (tools/caml_tex.ml[309,10071+29]..[309,10071+35])
                      ]
            ]
          structure_item (tools/caml_tex.ml[311,10108+2]..[332,10871+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[311,10108+6]..[311,10108+22])
                  Ppat_var "print_unexpected" (tools/caml_tex.ml[311,10108+6]..[311,10108+22])
                expression (tools/caml_tex.ml[311,10108+23]..[332,10871+16]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[311,10108+23]..[311,10108+46])
                    Ppat_record Closed
                    [
                      "source" (tools/caml_tex.ml[311,10108+24]..[311,10108+30]) ghost
                        pattern (tools/caml_tex.ml[311,10108+24]..[311,10108+30])
                          Ppat_var "source" (tools/caml_tex.ml[311,10108+24]..[311,10108+30])
                      "expected" (tools/caml_tex.ml[311,10108+32]..[311,10108+40]) ghost
                        pattern (tools/caml_tex.ml[311,10108+32]..[311,10108+40])
                          Ppat_var "expected" (tools/caml_tex.ml[311,10108+32]..[311,10108+40])
                      "got" (tools/caml_tex.ml[311,10108+42]..[311,10108+45]) ghost
                        pattern (tools/caml_tex.ml[311,10108+42]..[311,10108+45])
                          Ppat_var "got" (tools/caml_tex.ml[311,10108+42]..[311,10108+45])
                    ]
                  expression (tools/caml_tex.ml[312,10157+4]..[332,10871+16])
                    Pexp_sequence
                    expression (tools/caml_tex.ml[312,10157+4]..[331,10848+21])
                      Pexp_ifthenelse
                      expression (tools/caml_tex.ml[312,10157+7]..[312,10157+20])
                        Pexp_apply
                        expression (tools/caml_tex.ml[312,10157+16]..[312,10157+17])
                          Pexp_ident "=" (tools/caml_tex.ml[312,10157+16]..[312,10157+17])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[312,10157+7]..[312,10157+15])
                              Pexp_ident "expected" (tools/caml_tex.ml[312,10157+7]..[312,10157+15])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[312,10157+18]..[312,10157+20])
                              Pexp_construct "Ok" (tools/caml_tex.ml[312,10157+18]..[312,10157+20])
                              None
                        ]
                      expression (tools/caml_tex.ml[313,10183+6]..[320,10453+21])
                        Pexp_apply
                        expression (tools/caml_tex.ml[313,10183+6]..[313,10183+22])
                          Pexp_ident "Toplevel.eprintf" (tools/caml_tex.ml[313,10183+6]..[313,10183+22])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[314,10206+8]..[316,10307+71])
                              Pexp_constant PConst_string("Error when evaluating a caml_example environment in %a\nUnexpected %a status.\nIf %a status was expected, add an [@@expect %a] annotation.\n",(tools/caml_tex.ml[314,10206+9]..[316,10307+70]),None)
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[317,10379+8]..[317,10379+20])
                              Pexp_ident "print_source" (tools/caml_tex.ml[317,10379+8]..[317,10379+20])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[317,10379+21]..[317,10379+27])
                              Pexp_ident "source" (tools/caml_tex.ml[317,10379+21]..[317,10379+27])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[318,10407+8]..[318,10407+17])
                              Pexp_ident "pp_status" (tools/caml_tex.ml[318,10407+8]..[318,10407+17])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[318,10407+18]..[318,10407+21])
                              Pexp_ident "got" (tools/caml_tex.ml[318,10407+18]..[318,10407+21])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[319,10429+8]..[319,10429+19])
                              Pexp_ident "pp_a_status" (tools/caml_tex.ml[319,10429+8]..[319,10429+19])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[319,10429+20]..[319,10429+23])
                              Pexp_ident "got" (tools/caml_tex.ml[319,10429+20]..[319,10429+23])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[320,10453+8]..[320,10453+17])
                              Pexp_ident "pp_status" (tools/caml_tex.ml[320,10453+8]..[320,10453+17])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[320,10453+18]..[320,10453+21])
                              Pexp_ident "got" (tools/caml_tex.ml[320,10453+18]..[320,10453+21])
                        ]
                      Some
                        expression (tools/caml_tex.ml[322,10484+6]..[331,10848+21])
                          Pexp_apply
                          expression (tools/caml_tex.ml[322,10484+6]..[322,10484+22])
                            Pexp_ident "Toplevel.eprintf" (tools/caml_tex.ml[322,10484+6]..[322,10484+22])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[323,10507+8]..[326,10718+26])
                                Pexp_constant PConst_string("Error when evaluating a guarded caml_example environment in %a\nUnexpected %a status, %a status was expected.\nIf %a status was in fact expected, change the status annotation to [@@expect %a].\n",(tools/caml_tex.ml[323,10507+9]..[326,10718+25]),None)
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[327,10745+8]..[327,10745+20])
                                Pexp_ident "print_source" (tools/caml_tex.ml[327,10745+8]..[327,10745+20])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[327,10745+21]..[327,10745+27])
                                Pexp_ident "source" (tools/caml_tex.ml[327,10745+21]..[327,10745+27])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[328,10773+8]..[328,10773+17])
                                Pexp_ident "pp_status" (tools/caml_tex.ml[328,10773+8]..[328,10773+17])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[328,10773+18]..[328,10773+21])
                                Pexp_ident "got" (tools/caml_tex.ml[328,10773+18]..[328,10773+21])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[329,10795+8]..[329,10795+19])
                                Pexp_ident "pp_a_status" (tools/caml_tex.ml[329,10795+8]..[329,10795+19])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[329,10795+20]..[329,10795+28])
                                Pexp_ident "expected" (tools/caml_tex.ml[329,10795+20]..[329,10795+28])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[330,10824+8]..[330,10824+19])
                                Pexp_ident "pp_a_status" (tools/caml_tex.ml[330,10824+8]..[330,10824+19])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[330,10824+20]..[330,10824+23])
                                Pexp_ident "got" (tools/caml_tex.ml[330,10824+20]..[330,10824+23])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[331,10848+8]..[331,10848+17])
                                Pexp_ident "pp_status" (tools/caml_tex.ml[331,10848+8]..[331,10848+17])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[331,10848+18]..[331,10848+21])
                                Pexp_ident "got" (tools/caml_tex.ml[331,10848+18]..[331,10848+21])
                          ]
                    expression (tools/caml_tex.ml[332,10871+4]..[332,10871+16])
                      Pexp_apply
                      expression (tools/caml_tex.ml[332,10871+4]..[332,10871+9])
                        Pexp_ident "flush" (tools/caml_tex.ml[332,10871+4]..[332,10871+9])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[332,10871+10]..[332,10871+16])
                            Pexp_ident "stderr" (tools/caml_tex.ml[332,10871+10]..[332,10871+16])
                      ]
            ]
          structure_item (tools/caml_tex.ml[334,10889+2]..[345,11328+67])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[334,10889+6]..[334,10889+25])
                  Ppat_var "print_parsing_error" (tools/caml_tex.ml[334,10889+6]..[334,10889+25])
                expression (tools/caml_tex.ml[334,10889+26]..[345,11328+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[334,10889+26]..[334,10889+27])
                    Ppat_var "k" (tools/caml_tex.ml[334,10889+26]..[334,10889+27])
                  expression (tools/caml_tex.ml[334,10889+28]..[345,11328+67]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[334,10889+28]..[334,10889+29])
                      Ppat_var "s" (tools/caml_tex.ml[334,10889+28]..[334,10889+29])
                    expression (tools/caml_tex.ml[335,10921+4]..[345,11328+67])
                      Pexp_match
                      expression (tools/caml_tex.ml[335,10921+10]..[335,10921+11])
                        Pexp_ident "k" (tools/caml_tex.ml[335,10921+10]..[335,10921+11])
                      [
                        <case>
                          pattern (tools/caml_tex.ml[336,10938+6]..[336,10938+12])
                            Ppat_construct "Option" (tools/caml_tex.ml[336,10938+6]..[336,10938+12])
                            None
                          expression (tools/caml_tex.ml[337,10954+8]..[340,11106+34])
                            Pexp_apply
                            expression (tools/caml_tex.ml[337,10954+8]..[337,10954+24])
                              Pexp_ident "Toplevel.eprintf" (tools/caml_tex.ml[337,10954+8]..[337,10954+24])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[338,10979+10]..[340,11106+32])
                                  Pexp_constant PConst_string("Unknown caml_example option: [%s].\nSupported options are \"ok\",\"error\", or \"warning=n\" (with n a warning number).\n",(tools/caml_tex.ml[338,10979+11]..[340,11106+31]),None)
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[340,11106+33]..[340,11106+34])
                                  Pexp_ident "s" (tools/caml_tex.ml[340,11106+33]..[340,11106+34])
                            ]
                        <case>
                          pattern (tools/caml_tex.ml[341,11141+6]..[341,11141+16])
                            Ppat_construct "Annotation" (tools/caml_tex.ml[341,11141+6]..[341,11141+16])
                            None
                          expression (tools/caml_tex.ml[342,11161+8]..[345,11328+67])
                            Pexp_apply
                            expression (tools/caml_tex.ml[342,11161+8]..[342,11161+24])
                              Pexp_ident "Toplevel.eprintf" (tools/caml_tex.ml[342,11161+8]..[342,11161+24])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[343,11186+10]..[345,11328+65])
                                  Pexp_constant PConst_string("Unknown caml_example phrase annotation: [@@expect %s].\nSupported annotations are [@@expect ok], [@@expect error],\nand [@@expect warning n] (with n a warning number).\n",(tools/caml_tex.ml[343,11186+11]..[345,11328+64]),None)
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[345,11328+66]..[345,11328+67])
                                  Pexp_ident "s" (tools/caml_tex.ml[345,11328+66]..[345,11328+67])
                            ]
                      ]
            ]
          structure_item (tools/caml_tex.ml[348,11426+2]..[350,11472+21])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[347,11397+2]..[347,11397+28])
                        Pstr_eval
                        expression (tools/caml_tex.ml[347,11397+2]..[347,11397+28])
                          Pexp_constant PConst_string(" {1 Output analysis} ",(tools/caml_tex.ml[347,11397+2]..[347,11397+28]),None)
                    ]
                pattern (tools/caml_tex.ml[348,11426+6]..[348,11426+17])
                  Ppat_var "catch_error" (tools/caml_tex.ml[348,11426+6]..[348,11426+17])
                expression (tools/caml_tex.ml[348,11426+20]..[350,11472+21])
                  Pexp_function
                  [
                    <case>
                      pattern (tools/caml_tex.ml[349,11455+6]..[349,11455+8])
                        Ppat_constant PConst_string("",(tools/caml_tex.ml[349,11455+7]..[349,11455+7]),None)
                      expression (tools/caml_tex.ml[349,11455+12]..[349,11455+16])
                        Pexp_construct "None" (tools/caml_tex.ml[349,11455+12]..[349,11455+16])
                        None
                    <case>
                      pattern (tools/caml_tex.ml[350,11472+6]..[350,11472+7])
                        Ppat_any
                      expression (tools/caml_tex.ml[350,11472+11]..[350,11472+21])
                        Pexp_construct "Some" (tools/caml_tex.ml[350,11472+11]..[350,11472+15])
                        Some
                          expression (tools/caml_tex.ml[350,11472+16]..[350,11472+21])
                            Pexp_construct "Error" (tools/caml_tex.ml[350,11472+16]..[350,11472+21])
                            None
                  ]
            ]
          structure_item (tools/caml_tex.ml[352,11495+2]..[357,11688+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[352,11495+6]..[352,11495+19])
                  Ppat_var "catch_warning" (tools/caml_tex.ml[352,11495+6]..[352,11495+19])
                expression (tools/caml_tex.ml[353,11517+4]..[357,11688+15])
                  Pexp_function
                  [
                    <case>
                      pattern (tools/caml_tex.ml[354,11530+6]..[354,11530+8])
                        Ppat_construct "[]" (tools/caml_tex.ml[354,11530+6]..[354,11530+8])
                        None
                      expression (tools/caml_tex.ml[354,11530+12]..[354,11530+16])
                        Pexp_construct "None" (tools/caml_tex.ml[354,11530+12]..[354,11530+16])
                        None
                    <case>
                      pattern (tools/caml_tex.ml[355,11547+6]..[355,11547+12])
                        Ppat_construct "::" (tools/caml_tex.ml[355,11547+8]..[355,11547+10])
                        Some
                          []
                          pattern (tools/caml_tex.ml[355,11547+6]..[355,11547+12]) ghost
                            Ppat_tuple
                            [
                              pattern (tools/caml_tex.ml[355,11547+6]..[355,11547+7])
                                Ppat_var "s" (tools/caml_tex.ml[355,11547+6]..[355,11547+7])
                              pattern (tools/caml_tex.ml[355,11547+11]..[355,11547+12])
                                Ppat_any
                            ]
                      <when>
                        expression (tools/caml_tex.ml[355,11547+18]..[355,11547+77])
                          Pexp_apply
                          expression (tools/caml_tex.ml[355,11547+18]..[355,11547+30])
                            Pexp_ident "string_match" (tools/caml_tex.ml[355,11547+18]..[355,11547+30])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[355,11547+31]..[355,11547+73])
                                Pexp_apply
                                expression (tools/caml_tex.ml[355,11547+31]..[355,11547+33])
                                  Pexp_ident "~!" (tools/caml_tex.ml[355,11547+31]..[355,11547+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[355,11547+33]..[355,11547+73])
                                      Pexp_constant PConst_string ("Warning \\([0-9]+\\)\\( \\[[a-z-]+\\]\\)?:",(tools/caml_tex.ml[355,11547+35]..[355,11547+71]),Some "")
                                ]
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[355,11547+74]..[355,11547+75])
                                Pexp_ident "s" (tools/caml_tex.ml[355,11547+74]..[355,11547+75])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[355,11547+76]..[355,11547+77])
                                Pexp_constant PConst_int (0,None)
                          ]
                      expression (tools/caml_tex.ml[356,11628+8]..[356,11628+59])
                        Pexp_construct "Some" (tools/caml_tex.ml[356,11628+8]..[356,11628+12])
                        Some
                          expression (tools/caml_tex.ml[356,11628+13]..[356,11628+59])
                            Pexp_construct "Warning" (tools/caml_tex.ml[356,11628+14]..[356,11628+21])
                            Some
                              expression (tools/caml_tex.ml[356,11628+22]..[356,11628+58])
                                Pexp_apply
                                expression (tools/caml_tex.ml[356,11628+37]..[356,11628+39])
                                  Pexp_ident "@@" (tools/caml_tex.ml[356,11628+37]..[356,11628+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[356,11628+23]..[356,11628+36])
                                      Pexp_ident "int_of_string" (tools/caml_tex.ml[356,11628+23]..[356,11628+36])
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[356,11628+40]..[356,11628+57])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[356,11628+40]..[356,11628+53])
                                        Pexp_ident "matched_group" (tools/caml_tex.ml[356,11628+40]..[356,11628+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[356,11628+54]..[356,11628+55])
                                            Pexp_constant PConst_int (1,None)
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[356,11628+56]..[356,11628+57])
                                            Pexp_ident "s" (tools/caml_tex.ml[356,11628+56]..[356,11628+57])
                                      ]
                                ]
                    <case>
                      pattern (tools/caml_tex.ml[357,11688+6]..[357,11688+7])
                        Ppat_any
                      expression (tools/caml_tex.ml[357,11688+11]..[357,11688+15])
                        Pexp_construct "None" (tools/caml_tex.ml[357,11688+11]..[357,11688+15])
                        None
                  ]
            ]
          structure_item (tools/caml_tex.ml[359,11705+2]..[363,11819+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[359,11705+6]..[359,11705+12])
                  Ppat_var "status" (tools/caml_tex.ml[359,11705+6]..[359,11705+12])
                expression (tools/caml_tex.ml[359,11705+13]..[363,11819+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[359,11705+13]..[359,11705+15])
                    Ppat_var "ws" (tools/caml_tex.ml[359,11705+13]..[359,11705+15])
                  expression (tools/caml_tex.ml[359,11705+16]..[363,11819+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[359,11705+16]..[359,11705+18])
                      Ppat_var "es" (tools/caml_tex.ml[359,11705+16]..[359,11705+18])
                    expression (tools/caml_tex.ml[360,11726+4]..[363,11819+22])
                      Pexp_match
                      expression (tools/caml_tex.ml[360,11726+10]..[360,11726+42])
                        Pexp_tuple
                        [
                          expression (tools/caml_tex.ml[360,11726+10]..[360,11726+26])
                            Pexp_apply
                            expression (tools/caml_tex.ml[360,11726+10]..[360,11726+23])
                              Pexp_ident "catch_warning" (tools/caml_tex.ml[360,11726+10]..[360,11726+23])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[360,11726+24]..[360,11726+26])
                                  Pexp_ident "ws" (tools/caml_tex.ml[360,11726+24]..[360,11726+26])
                            ]
                          expression (tools/caml_tex.ml[360,11726+28]..[360,11726+42])
                            Pexp_apply
                            expression (tools/caml_tex.ml[360,11726+28]..[360,11726+39])
                              Pexp_ident "catch_error" (tools/caml_tex.ml[360,11726+28]..[360,11726+39])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[360,11726+40]..[360,11726+42])
                                  Pexp_ident "es" (tools/caml_tex.ml[360,11726+40]..[360,11726+42])
                            ]
                        ]
                      [
                        <case>
                          pattern (tools/caml_tex.ml[361,11774+6]..[361,11774+15])
                            Ppat_tuple
                            [
                              pattern (tools/caml_tex.ml[361,11774+6]..[361,11774+12])
                                Ppat_construct "Some" (tools/caml_tex.ml[361,11774+6]..[361,11774+10])
                                Some
                                  []
                                  pattern (tools/caml_tex.ml[361,11774+11]..[361,11774+12])
                                    Ppat_var "w" (tools/caml_tex.ml[361,11774+11]..[361,11774+12])
                              pattern (tools/caml_tex.ml[361,11774+14]..[361,11774+15])
                                Ppat_any
                            ]
                          expression (tools/caml_tex.ml[361,11774+19]..[361,11774+20])
                            Pexp_ident "w" (tools/caml_tex.ml[361,11774+19]..[361,11774+20])
                        <case>
                          pattern (tools/caml_tex.ml[362,11795+6]..[362,11795+18])
                            Ppat_tuple
                            [
                              pattern (tools/caml_tex.ml[362,11795+6]..[362,11795+10])
                                Ppat_construct "None" (tools/caml_tex.ml[362,11795+6]..[362,11795+10])
                                None
                              pattern (tools/caml_tex.ml[362,11795+12]..[362,11795+18])
                                Ppat_construct "Some" (tools/caml_tex.ml[362,11795+12]..[362,11795+16])
                                Some
                                  []
                                  pattern (tools/caml_tex.ml[362,11795+17]..[362,11795+18])
                                    Ppat_var "e" (tools/caml_tex.ml[362,11795+17]..[362,11795+18])
                            ]
                          expression (tools/caml_tex.ml[362,11795+22]..[362,11795+23])
                            Pexp_ident "e" (tools/caml_tex.ml[362,11795+22]..[362,11795+23])
                        <case>
                          pattern (tools/caml_tex.ml[363,11819+6]..[363,11819+16])
                            Ppat_tuple
                            [
                              pattern (tools/caml_tex.ml[363,11819+6]..[363,11819+10])
                                Ppat_construct "None" (tools/caml_tex.ml[363,11819+6]..[363,11819+10])
                                None
                              pattern (tools/caml_tex.ml[363,11819+12]..[363,11819+16])
                                Ppat_construct "None" (tools/caml_tex.ml[363,11819+12]..[363,11819+16])
                                None
                            ]
                          expression (tools/caml_tex.ml[363,11819+20]..[363,11819+22])
                            Pexp_construct "Ok" (tools/caml_tex.ml[363,11819+20]..[363,11819+22])
                            None
                      ]
            ]
          structure_item (tools/caml_tex.ml[365,11843+2]..[365,11843+42])
            Pstr_attribute "ocaml.text"
            [
              structure_item (tools/caml_tex.ml[365,11843+2]..[365,11843+42])
                Pstr_eval
                expression (tools/caml_tex.ml[365,11843+2]..[365,11843+42])
                  Pexp_constant PConst_string(" {1 Parsing caml_example options } ",(tools/caml_tex.ml[365,11843+2]..[365,11843+42]),None)
            ]
          structure_item (tools/caml_tex.ml[368,11947+2]..[372,12092+10])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[367,11887+2]..[367,11887+59])
                        Pstr_eval
                        expression (tools/caml_tex.ml[367,11887+2]..[367,11887+59])
                          Pexp_constant PConst_string(" Parse [warning=n] options for caml_example options ",(tools/caml_tex.ml[367,11887+2]..[367,11887+59]),None)
                    ]
                pattern (tools/caml_tex.ml[368,11947+6]..[368,11947+19])
                  Ppat_var "parse_warning" (tools/caml_tex.ml[368,11947+6]..[368,11947+19])
                expression (tools/caml_tex.ml[368,11947+20]..[372,12092+10]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[368,11947+20]..[368,11947+21])
                    Ppat_var "s" (tools/caml_tex.ml[368,11947+20]..[368,11947+21])
                  expression (tools/caml_tex.ml[369,11971+4]..[372,12092+10])
                    Pexp_ifthenelse
                    expression (tools/caml_tex.ml[369,11971+7]..[369,11971+48])
                      Pexp_apply
                      expression (tools/caml_tex.ml[369,11971+7]..[369,11971+19])
                        Pexp_ident "string_match" (tools/caml_tex.ml[369,11971+7]..[369,11971+19])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[369,11971+20]..[369,11971+44])
                            Pexp_apply
                            expression (tools/caml_tex.ml[369,11971+20]..[369,11971+22])
                              Pexp_ident "~!" (tools/caml_tex.ml[369,11971+20]..[369,11971+22])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[369,11971+22]..[369,11971+44])
                                  Pexp_constant PConst_string ("warning=\\([0-9]+\\)",(tools/caml_tex.ml[369,11971+24]..[369,11971+42]),Some "")
                            ]
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[369,11971+45]..[369,11971+46])
                            Pexp_ident "s" (tools/caml_tex.ml[369,11971+45]..[369,11971+46])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[369,11971+47]..[369,11971+48])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (tools/caml_tex.ml[370,12025+6]..[370,12025+57])
                      Pexp_construct "Some" (tools/caml_tex.ml[370,12025+6]..[370,12025+10])
                      Some
                        expression (tools/caml_tex.ml[370,12025+11]..[370,12025+57])
                          Pexp_construct "Warning" (tools/caml_tex.ml[370,12025+12]..[370,12025+19])
                          Some
                            expression (tools/caml_tex.ml[370,12025+20]..[370,12025+56])
                              Pexp_apply
                              expression (tools/caml_tex.ml[370,12025+35]..[370,12025+37])
                                Pexp_ident "@@" (tools/caml_tex.ml[370,12025+35]..[370,12025+37])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[370,12025+21]..[370,12025+34])
                                    Pexp_ident "int_of_string" (tools/caml_tex.ml[370,12025+21]..[370,12025+34])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[370,12025+38]..[370,12025+55])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[370,12025+38]..[370,12025+51])
                                      Pexp_ident "matched_group" (tools/caml_tex.ml[370,12025+38]..[370,12025+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[370,12025+52]..[370,12025+53])
                                          Pexp_constant PConst_int (1,None)
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[370,12025+54]..[370,12025+55])
                                          Pexp_ident "s" (tools/caml_tex.ml[370,12025+54]..[370,12025+55])
                                    ]
                              ]
                    Some
                      expression (tools/caml_tex.ml[372,12092+6]..[372,12092+10])
                        Pexp_construct "None" (tools/caml_tex.ml[372,12092+6]..[372,12092+10])
                        None
            ]
          structure_item (tools/caml_tex.ml[375,12143+2]..[379,12294+10])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[374,12104+2]..[374,12104+38])
                        Pstr_eval
                        expression (tools/caml_tex.ml[374,12104+2]..[374,12104+38])
                          Pexp_constant PConst_string(" Parse [warning n] annotations ",(tools/caml_tex.ml[374,12104+2]..[374,12104+38]),None)
                    ]
                pattern (tools/caml_tex.ml[375,12143+6]..[375,12143+25])
                  Ppat_var "parse_local_warning" (tools/caml_tex.ml[375,12143+6]..[375,12143+25])
                expression (tools/caml_tex.ml[375,12143+26]..[379,12294+10]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[375,12143+26]..[375,12143+27])
                    Ppat_var "s" (tools/caml_tex.ml[375,12143+26]..[375,12143+27])
                  expression (tools/caml_tex.ml[376,12173+4]..[379,12294+10])
                    Pexp_ifthenelse
                    expression (tools/caml_tex.ml[376,12173+7]..[376,12173+48])
                      Pexp_apply
                      expression (tools/caml_tex.ml[376,12173+7]..[376,12173+19])
                        Pexp_ident "string_match" (tools/caml_tex.ml[376,12173+7]..[376,12173+19])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[376,12173+20]..[376,12173+44])
                            Pexp_apply
                            expression (tools/caml_tex.ml[376,12173+20]..[376,12173+22])
                              Pexp_ident "~!" (tools/caml_tex.ml[376,12173+20]..[376,12173+22])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[376,12173+22]..[376,12173+44])
                                  Pexp_constant PConst_string ("warning \\([0-9]+\\)",(tools/caml_tex.ml[376,12173+24]..[376,12173+42]),Some "")
                            ]
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[376,12173+45]..[376,12173+46])
                            Pexp_ident "s" (tools/caml_tex.ml[376,12173+45]..[376,12173+46])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[376,12173+47]..[376,12173+48])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (tools/caml_tex.ml[377,12227+6]..[377,12227+57])
                      Pexp_construct "Some" (tools/caml_tex.ml[377,12227+6]..[377,12227+10])
                      Some
                        expression (tools/caml_tex.ml[377,12227+11]..[377,12227+57])
                          Pexp_construct "Warning" (tools/caml_tex.ml[377,12227+12]..[377,12227+19])
                          Some
                            expression (tools/caml_tex.ml[377,12227+20]..[377,12227+56])
                              Pexp_apply
                              expression (tools/caml_tex.ml[377,12227+35]..[377,12227+37])
                                Pexp_ident "@@" (tools/caml_tex.ml[377,12227+35]..[377,12227+37])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[377,12227+21]..[377,12227+34])
                                    Pexp_ident "int_of_string" (tools/caml_tex.ml[377,12227+21]..[377,12227+34])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[377,12227+38]..[377,12227+55])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[377,12227+38]..[377,12227+51])
                                      Pexp_ident "matched_group" (tools/caml_tex.ml[377,12227+38]..[377,12227+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[377,12227+52]..[377,12227+53])
                                          Pexp_constant PConst_int (1,None)
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[377,12227+54]..[377,12227+55])
                                          Pexp_ident "s" (tools/caml_tex.ml[377,12227+54]..[377,12227+55])
                                    ]
                              ]
                    Some
                      expression (tools/caml_tex.ml[379,12294+6]..[379,12294+10])
                        Pexp_construct "None" (tools/caml_tex.ml[379,12294+6]..[379,12294+10])
                        None
            ]
          structure_item (tools/caml_tex.ml[381,12306+2]..[382,12328+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[381,12306+6]..[381,12306+17])
                  Ppat_var "parse_error" (tools/caml_tex.ml[381,12306+6]..[381,12306+17])
                expression (tools/caml_tex.ml[381,12306+18]..[382,12328+42]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[381,12306+18]..[381,12306+19])
                    Ppat_var "s" (tools/caml_tex.ml[381,12306+18]..[381,12306+19])
                  expression (tools/caml_tex.ml[382,12328+4]..[382,12328+42])
                    Pexp_ifthenelse
                    expression (tools/caml_tex.ml[382,12328+7]..[382,12328+16])
                      Pexp_apply
                      expression (tools/caml_tex.ml[382,12328+8]..[382,12328+9])
                        Pexp_ident "=" (tools/caml_tex.ml[382,12328+8]..[382,12328+9])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[382,12328+7]..[382,12328+8])
                            Pexp_ident "s" (tools/caml_tex.ml[382,12328+7]..[382,12328+8])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[382,12328+9]..[382,12328+16])
                            Pexp_constant PConst_string("error",(tools/caml_tex.ml[382,12328+10]..[382,12328+15]),None)
                      ]
                    expression (tools/caml_tex.ml[382,12328+22]..[382,12328+32])
                      Pexp_construct "Some" (tools/caml_tex.ml[382,12328+22]..[382,12328+26])
                      Some
                        expression (tools/caml_tex.ml[382,12328+27]..[382,12328+32])
                          Pexp_construct "Error" (tools/caml_tex.ml[382,12328+27]..[382,12328+32])
                          None
                    Some
                      expression (tools/caml_tex.ml[382,12328+38]..[382,12328+42])
                        Pexp_construct "None" (tools/caml_tex.ml[382,12328+38]..[382,12328+42])
                        None
            ]
          structure_item (tools/caml_tex.ml[384,12372+2]..[385,12391+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[384,12372+6]..[384,12372+14])
                  Ppat_var "parse_ok" (tools/caml_tex.ml[384,12372+6]..[384,12372+14])
                expression (tools/caml_tex.ml[384,12372+15]..[385,12391+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[384,12372+15]..[384,12372+16])
                    Ppat_var "s" (tools/caml_tex.ml[384,12372+15]..[384,12372+16])
                  expression (tools/caml_tex.ml[385,12391+4]..[385,12391+38])
                    Pexp_ifthenelse
                    expression (tools/caml_tex.ml[385,12391+7]..[385,12391+15])
                      Pexp_apply
                      expression (tools/caml_tex.ml[385,12391+9]..[385,12391+10])
                        Pexp_ident "=" (tools/caml_tex.ml[385,12391+9]..[385,12391+10])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[385,12391+7]..[385,12391+8])
                            Pexp_ident "s" (tools/caml_tex.ml[385,12391+7]..[385,12391+8])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[385,12391+11]..[385,12391+15])
                            Pexp_constant PConst_string("ok",(tools/caml_tex.ml[385,12391+12]..[385,12391+14]),None)
                      ]
                    expression (tools/caml_tex.ml[385,12391+21]..[385,12391+28])
                      Pexp_construct "Some" (tools/caml_tex.ml[385,12391+21]..[385,12391+25])
                      Some
                        expression (tools/caml_tex.ml[385,12391+26]..[385,12391+28])
                          Pexp_construct "Ok" (tools/caml_tex.ml[385,12391+26]..[385,12391+28])
                          None
                    Some
                      expression (tools/caml_tex.ml[385,12391+34]..[385,12391+38])
                        Pexp_construct "None" (tools/caml_tex.ml[385,12391+34]..[385,12391+38])
                        None
            ]
          structure_item (tools/caml_tex.ml[388,12490+2]..[392,12600+52])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[387,12431+2]..[387,12431+58])
                        Pstr_eval
                        expression (tools/caml_tex.ml[387,12431+2]..[387,12431+58])
                          Pexp_constant PConst_string(" Parse the environment-wide expected status output ",(tools/caml_tex.ml[387,12431+2]..[387,12431+58]),None)
                    ]
                pattern (tools/caml_tex.ml[388,12490+6]..[388,12490+14])
                  Ppat_var "expected" (tools/caml_tex.ml[388,12490+6]..[388,12490+14])
                expression (tools/caml_tex.ml[388,12490+15]..[392,12600+52]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[388,12490+15]..[388,12490+16])
                    Ppat_var "s" (tools/caml_tex.ml[388,12490+15]..[388,12490+16])
                  expression (tools/caml_tex.ml[389,12509+4]..[392,12600+52])
                    Pexp_match
                    expression (tools/caml_tex.ml[389,12509+10]..[389,12509+40])
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[389,12509+10]..[389,12509+25])
                          Pexp_apply
                          expression (tools/caml_tex.ml[389,12509+10]..[389,12509+23])
                            Pexp_ident "parse_warning" (tools/caml_tex.ml[389,12509+10]..[389,12509+23])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[389,12509+24]..[389,12509+25])
                                Pexp_ident "s" (tools/caml_tex.ml[389,12509+24]..[389,12509+25])
                          ]
                        expression (tools/caml_tex.ml[389,12509+27]..[389,12509+40])
                          Pexp_apply
                          expression (tools/caml_tex.ml[389,12509+27]..[389,12509+38])
                            Pexp_ident "parse_error" (tools/caml_tex.ml[389,12509+27]..[389,12509+38])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[389,12509+39]..[389,12509+40])
                                Pexp_ident "s" (tools/caml_tex.ml[389,12509+39]..[389,12509+40])
                          ]
                      ]
                    [
                      <case>
                        pattern (tools/caml_tex.ml[390,12555+6]..[390,12555+15])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[390,12555+6]..[390,12555+12])
                              Ppat_construct "Some" (tools/caml_tex.ml[390,12555+6]..[390,12555+10])
                              Some
                                []
                                pattern (tools/caml_tex.ml[390,12555+11]..[390,12555+12])
                                  Ppat_var "w" (tools/caml_tex.ml[390,12555+11]..[390,12555+12])
                            pattern (tools/caml_tex.ml[390,12555+14]..[390,12555+15])
                              Ppat_any
                          ]
                        expression (tools/caml_tex.ml[390,12555+19]..[390,12555+20])
                          Pexp_ident "w" (tools/caml_tex.ml[390,12555+19]..[390,12555+20])
                      <case>
                        pattern (tools/caml_tex.ml[391,12576+6]..[391,12576+18])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[391,12576+6]..[391,12576+10])
                              Ppat_construct "None" (tools/caml_tex.ml[391,12576+6]..[391,12576+10])
                              None
                            pattern (tools/caml_tex.ml[391,12576+12]..[391,12576+18])
                              Ppat_construct "Some" (tools/caml_tex.ml[391,12576+12]..[391,12576+16])
                              Some
                                []
                                pattern (tools/caml_tex.ml[391,12576+17]..[391,12576+18])
                                  Ppat_var "e" (tools/caml_tex.ml[391,12576+17]..[391,12576+18])
                          ]
                        expression (tools/caml_tex.ml[391,12576+22]..[391,12576+23])
                          Pexp_ident "e" (tools/caml_tex.ml[391,12576+22]..[391,12576+23])
                      <case>
                        pattern (tools/caml_tex.ml[392,12600+6]..[392,12600+16])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[392,12600+6]..[392,12600+10])
                              Ppat_construct "None" (tools/caml_tex.ml[392,12600+6]..[392,12600+10])
                              None
                            pattern (tools/caml_tex.ml[392,12600+12]..[392,12600+16])
                              Ppat_construct "None" (tools/caml_tex.ml[392,12600+12]..[392,12600+16])
                              None
                          ]
                        expression (tools/caml_tex.ml[392,12600+20]..[392,12600+52])
                          Pexp_apply
                          expression (tools/caml_tex.ml[392,12600+20]..[392,12600+25])
                            Pexp_ident "raise" (tools/caml_tex.ml[392,12600+20]..[392,12600+25])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[392,12600+26]..[392,12600+52])
                                Pexp_construct "Parsing_error" (tools/caml_tex.ml[392,12600+27]..[392,12600+40])
                                Some
                                  expression (tools/caml_tex.ml[392,12600+41]..[392,12600+51])
                                    Pexp_tuple
                                    [
                                      expression (tools/caml_tex.ml[392,12600+42]..[392,12600+48])
                                        Pexp_construct "Option" (tools/caml_tex.ml[392,12600+42]..[392,12600+48])
                                        None
                                      expression (tools/caml_tex.ml[392,12600+49]..[392,12600+50])
                                        Pexp_ident "s" (tools/caml_tex.ml[392,12600+49]..[392,12600+50])
                                    ]
                          ]
                    ]
            ]
          structure_item (tools/caml_tex.ml[395,12721+2]..[400,12893+62])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[394,12654+2]..[394,12654+66])
                        Pstr_eval
                        expression (tools/caml_tex.ml[394,12654+2]..[394,12654+66])
                          Pexp_constant PConst_string(" Parse the local (i.e. phrase-wide) expected status output ",(tools/caml_tex.ml[394,12654+2]..[394,12654+66]),None)
                    ]
                pattern (tools/caml_tex.ml[395,12721+6]..[395,12721+20])
                  Ppat_var "local_expected" (tools/caml_tex.ml[395,12721+6]..[395,12721+20])
                expression (tools/caml_tex.ml[395,12721+21]..[400,12893+62]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[395,12721+21]..[395,12721+22])
                    Ppat_var "s" (tools/caml_tex.ml[395,12721+21]..[395,12721+22])
                  expression (tools/caml_tex.ml[396,12746+4]..[400,12893+62])
                    Pexp_match
                    expression (tools/caml_tex.ml[396,12746+10]..[396,12746+58])
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[396,12746+10]..[396,12746+31])
                          Pexp_apply
                          expression (tools/caml_tex.ml[396,12746+10]..[396,12746+29])
                            Pexp_ident "parse_local_warning" (tools/caml_tex.ml[396,12746+10]..[396,12746+29])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[396,12746+30]..[396,12746+31])
                                Pexp_ident "s" (tools/caml_tex.ml[396,12746+30]..[396,12746+31])
                          ]
                        expression (tools/caml_tex.ml[396,12746+33]..[396,12746+46])
                          Pexp_apply
                          expression (tools/caml_tex.ml[396,12746+33]..[396,12746+44])
                            Pexp_ident "parse_error" (tools/caml_tex.ml[396,12746+33]..[396,12746+44])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[396,12746+45]..[396,12746+46])
                                Pexp_ident "s" (tools/caml_tex.ml[396,12746+45]..[396,12746+46])
                          ]
                        expression (tools/caml_tex.ml[396,12746+48]..[396,12746+58])
                          Pexp_apply
                          expression (tools/caml_tex.ml[396,12746+48]..[396,12746+56])
                            Pexp_ident "parse_ok" (tools/caml_tex.ml[396,12746+48]..[396,12746+56])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[396,12746+57]..[396,12746+58])
                                Pexp_ident "s" (tools/caml_tex.ml[396,12746+57]..[396,12746+58])
                          ]
                      ]
                    [
                      <case>
                        pattern (tools/caml_tex.ml[397,12810+6]..[397,12810+18])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[397,12810+6]..[397,12810+12])
                              Ppat_construct "Some" (tools/caml_tex.ml[397,12810+6]..[397,12810+10])
                              Some
                                []
                                pattern (tools/caml_tex.ml[397,12810+11]..[397,12810+12])
                                  Ppat_var "w" (tools/caml_tex.ml[397,12810+11]..[397,12810+12])
                            pattern (tools/caml_tex.ml[397,12810+14]..[397,12810+15])
                              Ppat_any
                            pattern (tools/caml_tex.ml[397,12810+17]..[397,12810+18])
                              Ppat_any
                          ]
                        expression (tools/caml_tex.ml[397,12810+22]..[397,12810+23])
                          Pexp_ident "w" (tools/caml_tex.ml[397,12810+22]..[397,12810+23])
                      <case>
                        pattern (tools/caml_tex.ml[398,12834+6]..[398,12834+21])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[398,12834+6]..[398,12834+10])
                              Ppat_construct "None" (tools/caml_tex.ml[398,12834+6]..[398,12834+10])
                              None
                            pattern (tools/caml_tex.ml[398,12834+12]..[398,12834+18])
                              Ppat_construct "Some" (tools/caml_tex.ml[398,12834+12]..[398,12834+16])
                              Some
                                []
                                pattern (tools/caml_tex.ml[398,12834+17]..[398,12834+18])
                                  Ppat_var "e" (tools/caml_tex.ml[398,12834+17]..[398,12834+18])
                            pattern (tools/caml_tex.ml[398,12834+20]..[398,12834+21])
                              Ppat_any
                          ]
                        expression (tools/caml_tex.ml[398,12834+25]..[398,12834+26])
                          Pexp_ident "e" (tools/caml_tex.ml[398,12834+25]..[398,12834+26])
                      <case>
                        pattern (tools/caml_tex.ml[399,12861+6]..[399,12861+25])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[399,12861+6]..[399,12861+10])
                              Ppat_construct "None" (tools/caml_tex.ml[399,12861+6]..[399,12861+10])
                              None
                            pattern (tools/caml_tex.ml[399,12861+12]..[399,12861+16])
                              Ppat_construct "None" (tools/caml_tex.ml[399,12861+12]..[399,12861+16])
                              None
                            pattern (tools/caml_tex.ml[399,12861+18]..[399,12861+25])
                              Ppat_construct "Some" (tools/caml_tex.ml[399,12861+18]..[399,12861+22])
                              Some
                                []
                                pattern (tools/caml_tex.ml[399,12861+23]..[399,12861+25])
                                  Ppat_var "ok" (tools/caml_tex.ml[399,12861+23]..[399,12861+25])
                          ]
                        expression (tools/caml_tex.ml[399,12861+29]..[399,12861+31])
                          Pexp_ident "ok" (tools/caml_tex.ml[399,12861+29]..[399,12861+31])
                      <case>
                        pattern (tools/caml_tex.ml[400,12893+6]..[400,12893+22])
                          Ppat_tuple
                          [
                            pattern (tools/caml_tex.ml[400,12893+6]..[400,12893+10])
                              Ppat_construct "None" (tools/caml_tex.ml[400,12893+6]..[400,12893+10])
                              None
                            pattern (tools/caml_tex.ml[400,12893+12]..[400,12893+16])
                              Ppat_construct "None" (tools/caml_tex.ml[400,12893+12]..[400,12893+16])
                              None
                            pattern (tools/caml_tex.ml[400,12893+18]..[400,12893+22])
                              Ppat_construct "None" (tools/caml_tex.ml[400,12893+18]..[400,12893+22])
                              None
                          ]
                        expression (tools/caml_tex.ml[400,12893+26]..[400,12893+62])
                          Pexp_apply
                          expression (tools/caml_tex.ml[400,12893+26]..[400,12893+31])
                            Pexp_ident "raise" (tools/caml_tex.ml[400,12893+26]..[400,12893+31])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[400,12893+32]..[400,12893+62])
                                Pexp_construct "Parsing_error" (tools/caml_tex.ml[400,12893+33]..[400,12893+46])
                                Some
                                  expression (tools/caml_tex.ml[400,12893+47]..[400,12893+61])
                                    Pexp_tuple
                                    [
                                      expression (tools/caml_tex.ml[400,12893+48]..[400,12893+58])
                                        Pexp_construct "Annotation" (tools/caml_tex.ml[400,12893+48]..[400,12893+58])
                                        None
                                      expression (tools/caml_tex.ml[400,12893+59]..[400,12893+60])
                                        Pexp_ident "s" (tools/caml_tex.ml[400,12893+59]..[400,12893+60])
                                    ]
                          ]
                    ]
            ]
        ]
  structure_item (tools/caml_tex.ml[404,12962+0]..[497,16373+3])
    Pstr_module
    "Text_transform" (tools/caml_tex.ml[404,12962+7]..[404,12962+21])
      module_expr (tools/caml_tex.ml[404,12962+24]..[497,16373+3])
        Pmod_structure
        [
          structure_item (tools/caml_tex.ml[406,12994+2]..[408,13024+14])
            Pstr_type Rec
            [
              type_declaration "kind" (tools/caml_tex.ml[406,12994+7]..[406,12994+11]) (tools/caml_tex.ml[406,12994+2]..[408,13024+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (tools/caml_tex.ml[407,13008+4]..[407,13008+15])
                        "Underline" (tools/caml_tex.ml[407,13008+6]..[407,13008+15])
                        []
                        None
                      (tools/caml_tex.ml[408,13024+4]..[408,13024+14])
                        "Ellipsis" (tools/caml_tex.ml[408,13024+6]..[408,13024+14])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[410,13040+2]..[410,13040+50])
            Pstr_type Rec
            [
              type_declaration "t" (tools/caml_tex.ml[410,13040+7]..[410,13040+8]) (tools/caml_tex.ml[410,13040+2]..[410,13040+50])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (tools/caml_tex.ml[410,13040+13]..[410,13040+25])
                        Immutable
                        "kind" (tools/caml_tex.ml[410,13040+13]..[410,13040+17])                        core_type (tools/caml_tex.ml[410,13040+20]..[410,13040+24])
                          Ptyp_constr "kind" (tools/caml_tex.ml[410,13040+20]..[410,13040+24])
                          []
                      (tools/caml_tex.ml[410,13040+26]..[410,13040+38])
                        Immutable
                        "start" (tools/caml_tex.ml[410,13040+26]..[410,13040+31])                        core_type (tools/caml_tex.ml[410,13040+34]..[410,13040+37])
                          Ptyp_constr "int" (tools/caml_tex.ml[410,13040+34]..[410,13040+37])
                          []
                      (tools/caml_tex.ml[410,13040+39]..[410,13040+49])
                        Immutable
                        "stop" (tools/caml_tex.ml[410,13040+39]..[410,13040+43])                        core_type (tools/caml_tex.ml[410,13040+46]..[410,13040+49])
                          Ptyp_constr "int" (tools/caml_tex.ml[410,13040+46]..[410,13040+49])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[411,13091+2]..[417,13207+7])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (tools/caml_tex.ml[411,13091+2]..[417,13207+7])
                  pext_name = "Intersection"
                  pext_kind =
                    Pext_decl
                      [
                        (tools/caml_tex.ml[413,13127+8]..[413,13127+19])
                          Immutable
                          "line" (tools/caml_tex.ml[413,13127+8]..[413,13127+12])                          core_type (tools/caml_tex.ml[413,13127+15]..[413,13127+18])
                            Ptyp_constr "int" (tools/caml_tex.ml[413,13127+15]..[413,13127+18])
                            []
                        (tools/caml_tex.ml[414,13147+8]..[414,13147+22])
                          Immutable
                          "file" (tools/caml_tex.ml[414,13147+8]..[414,13147+12])                          core_type (tools/caml_tex.ml[414,13147+15]..[414,13147+21])
                            Ptyp_constr "string" (tools/caml_tex.ml[414,13147+15]..[414,13147+21])
                            []
                        (tools/caml_tex.ml[415,13170+8]..[415,13170+17])
                          Immutable
                          "left" (tools/caml_tex.ml[415,13170+8]..[415,13170+12])                          core_type (tools/caml_tex.ml[415,13170+15]..[415,13170+16])
                            Ptyp_constr "t" (tools/caml_tex.ml[415,13170+15]..[415,13170+16])
                            []
                        (tools/caml_tex.ml[416,13188+8]..[416,13188+18])
                          Immutable
                          "right" (tools/caml_tex.ml[416,13188+8]..[416,13188+13])                          core_type (tools/caml_tex.ml[416,13188+16]..[416,13188+17])
                            Ptyp_constr "t" (tools/caml_tex.ml[416,13188+16]..[416,13188+17])
                            []
                      ]
                      None
          structure_item (tools/caml_tex.ml[419,13216+2]..[421,13290+47])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[419,13216+6]..[419,13216+8])
                  Ppat_var "pp" (tools/caml_tex.ml[419,13216+6]..[419,13216+8])
                expression (tools/caml_tex.ml[419,13216+9]..[421,13290+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[419,13216+9]..[419,13216+12])
                    Ppat_var "ppf" (tools/caml_tex.ml[419,13216+9]..[419,13216+12])
                  expression (tools/caml_tex.ml[419,13216+15]..[421,13290+47])
                    Pexp_function
                    [
                      <case>
                        pattern (tools/caml_tex.ml[420,13240+6]..[420,13240+15])
                          Ppat_construct "Underline" (tools/caml_tex.ml[420,13240+6]..[420,13240+15])
                          None
                        expression (tools/caml_tex.ml[420,13240+19]..[420,13240+49])
                          Pexp_apply
                          expression (tools/caml_tex.ml[420,13240+19]..[420,13240+33])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[420,13240+19]..[420,13240+33])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[420,13240+34]..[420,13240+37])
                                Pexp_ident "ppf" (tools/caml_tex.ml[420,13240+34]..[420,13240+37])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[420,13240+38]..[420,13240+49])
                                Pexp_constant PConst_string("underline",(tools/caml_tex.ml[420,13240+39]..[420,13240+48]),None)
                          ]
                      <case>
                        pattern (tools/caml_tex.ml[421,13290+6]..[421,13290+14])
                          Ppat_construct "Ellipsis" (tools/caml_tex.ml[421,13290+6]..[421,13290+14])
                          None
                        expression (tools/caml_tex.ml[421,13290+18]..[421,13290+47])
                          Pexp_apply
                          expression (tools/caml_tex.ml[421,13290+18]..[421,13290+32])
                            Pexp_ident "Format.fprintf" (tools/caml_tex.ml[421,13290+18]..[421,13290+32])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[421,13290+33]..[421,13290+36])
                                Pexp_ident "ppf" (tools/caml_tex.ml[421,13290+33]..[421,13290+36])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[421,13290+37]..[421,13290+47])
                                Pexp_constant PConst_string("ellipsis",(tools/caml_tex.ml[421,13290+38]..[421,13290+46]),None)
                          ]
                    ]
            ]
          structure_item (tools/caml_tex.ml[423,13339+2]..[423,13339+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[423,13339+6]..[423,13339+15])
                  Ppat_var "underline" (tools/caml_tex.ml[423,13339+6]..[423,13339+15])
                expression (tools/caml_tex.ml[423,13339+16]..[423,13339+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[423,13339+16]..[423,13339+21])
                    Ppat_var "start" (tools/caml_tex.ml[423,13339+16]..[423,13339+21])
                  expression (tools/caml_tex.ml[423,13339+22]..[423,13339+61]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[423,13339+22]..[423,13339+26])
                      Ppat_var "stop" (tools/caml_tex.ml[423,13339+22]..[423,13339+26])
                    expression (tools/caml_tex.ml[423,13339+29]..[423,13339+61])
                      Pexp_record
                      [
                        "kind" (tools/caml_tex.ml[423,13339+31]..[423,13339+35])
                          expression (tools/caml_tex.ml[423,13339+38]..[423,13339+47])
                            Pexp_construct "Underline" (tools/caml_tex.ml[423,13339+38]..[423,13339+47])
                            None
                        "start" (tools/caml_tex.ml[423,13339+49]..[423,13339+54]) ghost
                          expression (tools/caml_tex.ml[423,13339+49]..[423,13339+54])
                            Pexp_ident "start" (tools/caml_tex.ml[423,13339+49]..[423,13339+54])
                        "stop" (tools/caml_tex.ml[423,13339+56]..[423,13339+60]) ghost
                          expression (tools/caml_tex.ml[423,13339+56]..[423,13339+60])
                            Pexp_ident "stop" (tools/caml_tex.ml[423,13339+56]..[423,13339+60])
                      ]
                      None
            ]
          structure_item (tools/caml_tex.ml[424,13401+2]..[424,13401+60])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[424,13401+6]..[424,13401+14])
                  Ppat_var "ellipsis" (tools/caml_tex.ml[424,13401+6]..[424,13401+14])
                expression (tools/caml_tex.ml[424,13401+15]..[424,13401+60]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[424,13401+15]..[424,13401+20])
                    Ppat_var "start" (tools/caml_tex.ml[424,13401+15]..[424,13401+20])
                  expression (tools/caml_tex.ml[424,13401+21]..[424,13401+60]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[424,13401+21]..[424,13401+25])
                      Ppat_var "stop" (tools/caml_tex.ml[424,13401+21]..[424,13401+25])
                    expression (tools/caml_tex.ml[424,13401+28]..[424,13401+60])
                      Pexp_record
                      [
                        "kind" (tools/caml_tex.ml[424,13401+30]..[424,13401+34])
                          expression (tools/caml_tex.ml[424,13401+37]..[424,13401+45])
                            Pexp_construct "Ellipsis" (tools/caml_tex.ml[424,13401+37]..[424,13401+45])
                            None
                        "start" (tools/caml_tex.ml[424,13401+47]..[424,13401+52]) ghost
                          expression (tools/caml_tex.ml[424,13401+47]..[424,13401+52])
                            Pexp_ident "start" (tools/caml_tex.ml[424,13401+47]..[424,13401+52])
                        "stop" (tools/caml_tex.ml[424,13401+54]..[424,13401+58]) ghost
                          expression (tools/caml_tex.ml[424,13401+54]..[424,13401+58])
                            Pexp_ident "stop" (tools/caml_tex.ml[424,13401+54]..[424,13401+58])
                      ]
                      None
            ]
          structure_item (tools/caml_tex.ml[426,13463+2]..[428,13495+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[426,13463+6]..[426,13463+21])
                  Ppat_var "escape_specials" (tools/caml_tex.ml[426,13463+6]..[426,13463+21])
                expression (tools/caml_tex.ml[426,13463+22]..[428,13495+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[426,13463+22]..[426,13463+23])
                    Ppat_var "s" (tools/caml_tex.ml[426,13463+22]..[426,13463+23])
                  expression (tools/caml_tex.ml[427,13489+4]..[428,13495+48])
                    Pexp_apply
                    expression (tools/caml_tex.ml[428,13495+4]..[428,13495+6])
                      Pexp_ident "|>" (tools/caml_tex.ml[428,13495+4]..[428,13495+6])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[427,13489+4]..[427,13489+5])
                          Pexp_ident "s" (tools/caml_tex.ml[427,13489+4]..[427,13489+5])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[428,13495+7]..[428,13495+48])
                          Pexp_apply
                          expression (tools/caml_tex.ml[428,13495+7]..[428,13495+21])
                            Pexp_ident "global_replace" (tools/caml_tex.ml[428,13495+7]..[428,13495+21])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[428,13495+22]..[428,13495+30])
                                Pexp_apply
                                expression (tools/caml_tex.ml[428,13495+22]..[428,13495+24])
                                  Pexp_ident "~!" (tools/caml_tex.ml[428,13495+22]..[428,13495+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[428,13495+24]..[428,13495+30])
                                      Pexp_constant PConst_string ("\\$",(tools/caml_tex.ml[428,13495+26]..[428,13495+28]),Some "")
                                ]
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[428,13495+31]..[428,13495+48])
                                Pexp_constant PConst_string ("$\\textdollar$",(tools/caml_tex.ml[428,13495+33]..[428,13495+46]),Some "")
                          ]
                    ]
            ]
          structure_item (tools/caml_tex.ml[430,13545+2]..[443,14173+57])
            Pstr_value Rec
            [
              <def>
                pattern (tools/caml_tex.ml[430,13545+10]..[430,13545+25])
                  Ppat_var "apply_transform" (tools/caml_tex.ml[430,13545+10]..[430,13545+25])
                expression (tools/caml_tex.ml[430,13545+26]..[443,14173+57]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[430,13545+26]..[430,13545+31])
                    Ppat_var "input" (tools/caml_tex.ml[430,13545+26]..[430,13545+31])
                  expression (tools/caml_tex.ml[430,13545+32]..[443,14173+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[430,13545+32]..[430,13545+56])
                      Ppat_tuple
                      [
                        pattern (tools/caml_tex.ml[430,13545+33]..[430,13545+36])
                          Ppat_var "pos" (tools/caml_tex.ml[430,13545+33]..[430,13545+36])
                        pattern (tools/caml_tex.ml[430,13545+37]..[430,13545+51])
                          Ppat_var "underline_stop" (tools/caml_tex.ml[430,13545+37]..[430,13545+51])
                        pattern (tools/caml_tex.ml[430,13545+52]..[430,13545+55])
                          Ppat_var "out" (tools/caml_tex.ml[430,13545+52]..[430,13545+55])
                      ]
                    expression (tools/caml_tex.ml[430,13545+57]..[443,14173+57]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[430,13545+57]..[430,13545+58])
                        Ppat_var "t" (tools/caml_tex.ml[430,13545+57]..[430,13545+58])
                      expression (tools/caml_tex.ml[431,13606+4]..[443,14173+57])
                        Pexp_ifthenelse
                        expression (tools/caml_tex.ml[431,13606+7]..[431,13606+33])
                          Pexp_apply
                          expression (tools/caml_tex.ml[431,13606+11]..[431,13606+13])
                            Pexp_ident ">=" (tools/caml_tex.ml[431,13606+11]..[431,13606+13])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[431,13606+7]..[431,13606+10])
                                Pexp_ident "pos" (tools/caml_tex.ml[431,13606+7]..[431,13606+10])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[431,13606+14]..[431,13606+33])
                                Pexp_apply
                                expression (tools/caml_tex.ml[431,13606+14]..[431,13606+27])
                                  Pexp_ident "String.length" (tools/caml_tex.ml[431,13606+14]..[431,13606+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[431,13606+28]..[431,13606+33])
                                      Pexp_ident "input" (tools/caml_tex.ml[431,13606+28]..[431,13606+33])
                                ]
                          ]
                        expression (tools/caml_tex.ml[431,13606+39]..[431,13606+63])
                          Pexp_tuple
                          [
                            expression (tools/caml_tex.ml[431,13606+39]..[431,13606+42])
                              Pexp_ident "pos" (tools/caml_tex.ml[431,13606+39]..[431,13606+42])
                            expression (tools/caml_tex.ml[431,13606+44]..[431,13606+58])
                              Pexp_ident "underline_stop" (tools/caml_tex.ml[431,13606+44]..[431,13606+58])
                            expression (tools/caml_tex.ml[431,13606+60]..[431,13606+63])
                              Pexp_ident "out" (tools/caml_tex.ml[431,13606+60]..[431,13606+63])
                          ]
                        Some
                          expression (tools/caml_tex.ml[432,13670+9]..[443,14173+57])
                            Pexp_match
                            expression (tools/caml_tex.ml[432,13670+15]..[432,13670+29])
                              Pexp_ident "underline_stop" (tools/caml_tex.ml[432,13670+15]..[432,13670+29])
                            [
                              <case>
                                pattern (tools/caml_tex.ml[433,13705+8]..[433,13705+17])
                                  Ppat_construct "Some" (tools/caml_tex.ml[433,13705+8]..[433,13705+12])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[433,13705+13]..[433,13705+17])
                                      Ppat_var "stop" (tools/caml_tex.ml[433,13705+13]..[433,13705+17])
                                <when>
                                  expression (tools/caml_tex.ml[433,13705+23]..[433,13705+38])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[433,13705+28]..[433,13705+30])
                                      Pexp_ident "<=" (tools/caml_tex.ml[433,13705+28]..[433,13705+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[433,13705+23]..[433,13705+27])
                                          Pexp_ident "stop" (tools/caml_tex.ml[433,13705+23]..[433,13705+27])
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[433,13705+31]..[433,13705+38])
                                          Pexp_field
                                          expression (tools/caml_tex.ml[433,13705+31]..[433,13705+32])
                                            Pexp_ident "t" (tools/caml_tex.ml[433,13705+31]..[433,13705+32])
                                          "start" (tools/caml_tex.ml[433,13705+33]..[433,13705+38])
                                    ]
                                expression (tools/caml_tex.ml[434,13747+10]..[436,13877+49])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (tools/caml_tex.ml[434,13747+14]..[434,13747+15])
                                        Ppat_var "f" (tools/caml_tex.ml[434,13747+14]..[434,13747+15])
                                      expression (tools/caml_tex.ml[434,13747+18]..[434,13747+75])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[434,13747+18]..[434,13747+33])
                                          Pexp_ident "escape_specials" (tools/caml_tex.ml[434,13747+18]..[434,13747+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[434,13747+34]..[434,13747+75])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[434,13747+35]..[434,13747+45])
                                                Pexp_ident "String.sub" (tools/caml_tex.ml[434,13747+35]..[434,13747+45])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[434,13747+46]..[434,13747+51])
                                                    Pexp_ident "input" (tools/caml_tex.ml[434,13747+46]..[434,13747+51])
                                                <arg>
                                                Labelled "pos"
                                                  expression (tools/caml_tex.ml[434,13747+53]..[434,13747+56])
                                                    Pexp_ident "pos" (tools/caml_tex.ml[434,13747+53]..[434,13747+56])
                                                <arg>
                                                Labelled "len"
                                                  expression (tools/caml_tex.ml[434,13747+62]..[434,13747+74])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[434,13747+68]..[434,13747+69])
                                                      Pexp_ident "-" (tools/caml_tex.ml[434,13747+68]..[434,13747+69])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[434,13747+63]..[434,13747+67])
                                                          Pexp_ident "stop" (tools/caml_tex.ml[434,13747+63]..[434,13747+67])
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[434,13747+70]..[434,13747+73])
                                                          Pexp_ident "pos" (tools/caml_tex.ml[434,13747+70]..[434,13747+73])
                                                    ]
                                              ]
                                        ]
                                  ]
                                  expression (tools/caml_tex.ml[435,13826+10]..[436,13877+49])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (tools/caml_tex.ml[435,13826+14]..[435,13826+17])
                                          Ppat_var "out" (tools/caml_tex.ml[435,13826+14]..[435,13826+17])
                                        expression (tools/caml_tex.ml[435,13826+21]..[435,13826+47])
                                          Pexp_construct "::" (tools/caml_tex.ml[435,13826+36]..[435,13826+38])
                                          Some
                                            expression (tools/caml_tex.ml[435,13826+21]..[435,13826+47]) ghost
                                              Pexp_tuple
                                              [
                                                expression (tools/caml_tex.ml[435,13826+21]..[435,13826+35])
                                                  Pexp_ident "camleunderline" (tools/caml_tex.ml[435,13826+21]..[435,13826+35])
                                                expression (tools/caml_tex.ml[435,13826+39]..[435,13826+47])
                                                  Pexp_construct "::" (tools/caml_tex.ml[435,13826+41]..[435,13826+43])
                                                  Some
                                                    expression (tools/caml_tex.ml[435,13826+39]..[435,13826+47]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (tools/caml_tex.ml[435,13826+39]..[435,13826+40])
                                                          Pexp_ident "f" (tools/caml_tex.ml[435,13826+39]..[435,13826+40])
                                                        expression (tools/caml_tex.ml[435,13826+44]..[435,13826+47])
                                                          Pexp_ident "out" (tools/caml_tex.ml[435,13826+44]..[435,13826+47])
                                                      ]
                                              ]
                                    ]
                                    expression (tools/caml_tex.ml[436,13877+10]..[436,13877+49])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[436,13877+10]..[436,13877+25])
                                        Pexp_ident "apply_transform" (tools/caml_tex.ml[436,13877+10]..[436,13877+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[436,13877+26]..[436,13877+31])
                                            Pexp_ident "input" (tools/caml_tex.ml[436,13877+26]..[436,13877+31])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[436,13877+32]..[436,13877+47])
                                            Pexp_tuple
                                            [
                                              expression (tools/caml_tex.ml[436,13877+33]..[436,13877+37])
                                                Pexp_ident "stop" (tools/caml_tex.ml[436,13877+33]..[436,13877+37])
                                              expression (tools/caml_tex.ml[436,13877+38]..[436,13877+42])
                                                Pexp_construct "None" (tools/caml_tex.ml[436,13877+38]..[436,13877+42])
                                                None
                                              expression (tools/caml_tex.ml[436,13877+43]..[436,13877+46])
                                                Pexp_ident "out" (tools/caml_tex.ml[436,13877+43]..[436,13877+46])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[436,13877+48]..[436,13877+49])
                                            Pexp_ident "t" (tools/caml_tex.ml[436,13877+48]..[436,13877+49])
                                      ]
                              <case>
                                pattern (tools/caml_tex.ml[437,13927+8]..[437,13927+9])
                                  Ppat_any
                                expression (tools/caml_tex.ml[438,13940+10]..[443,14173+57])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (tools/caml_tex.ml[438,13940+14]..[438,13940+17])
                                        Ppat_var "out" (tools/caml_tex.ml[438,13940+14]..[438,13940+17])
                                      expression (tools/caml_tex.ml[439,13960+12]..[439,13960+77])
                                        Pexp_construct "::" (tools/caml_tex.ml[439,13960+72]..[439,13960+74])
                                        Some
                                          expression (tools/caml_tex.ml[439,13960+12]..[439,13960+77]) ghost
                                            Pexp_tuple
                                            [
                                              expression (tools/caml_tex.ml[439,13960+12]..[439,13960+72])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[439,13960+12]..[439,13960+27])
                                                  Pexp_ident "escape_specials" (tools/caml_tex.ml[439,13960+12]..[439,13960+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[439,13960+28]..[439,13960+72])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[439,13960+29]..[439,13960+39])
                                                        Pexp_ident "String.sub" (tools/caml_tex.ml[439,13960+29]..[439,13960+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[439,13960+40]..[439,13960+45])
                                                            Pexp_ident "input" (tools/caml_tex.ml[439,13960+40]..[439,13960+45])
                                                        <arg>
                                                        Labelled "pos"
                                                          expression (tools/caml_tex.ml[439,13960+47]..[439,13960+50])
                                                            Pexp_ident "pos" (tools/caml_tex.ml[439,13960+47]..[439,13960+50])
                                                        <arg>
                                                        Labelled "len"
                                                          expression (tools/caml_tex.ml[439,13960+56]..[439,13960+71])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[439,13960+65]..[439,13960+66])
                                                              Pexp_ident "-" (tools/caml_tex.ml[439,13960+65]..[439,13960+66])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[439,13960+57]..[439,13960+64])
                                                                  Pexp_field
                                                                  expression (tools/caml_tex.ml[439,13960+57]..[439,13960+58])
                                                                    Pexp_ident "t" (tools/caml_tex.ml[439,13960+57]..[439,13960+58])
                                                                  "start" (tools/caml_tex.ml[439,13960+59]..[439,13960+64])
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[439,13960+67]..[439,13960+70])
                                                                  Pexp_ident "pos" (tools/caml_tex.ml[439,13960+67]..[439,13960+70])
                                                            ]
                                                      ]
                                                ]
                                              expression (tools/caml_tex.ml[439,13960+74]..[439,13960+77])
                                                Pexp_ident "out" (tools/caml_tex.ml[439,13960+74]..[439,13960+77])
                                            ]
                                  ]
                                  expression (tools/caml_tex.ml[440,14041+10]..[443,14173+57])
                                    Pexp_match
                                    expression (tools/caml_tex.ml[440,14041+16]..[440,14041+22])
                                      Pexp_field
                                      expression (tools/caml_tex.ml[440,14041+16]..[440,14041+17])
                                        Pexp_ident "t" (tools/caml_tex.ml[440,14041+16]..[440,14041+17])
                                      "kind" (tools/caml_tex.ml[440,14041+18]..[440,14041+22])
                                    [
                                      <case>
                                        pattern (tools/caml_tex.ml[441,14069+12]..[441,14069+20])
                                          Ppat_construct "Ellipsis" (tools/caml_tex.ml[441,14069+12]..[441,14069+20])
                                          None
                                        expression (tools/caml_tex.ml[441,14069+24]..[441,14069+78])
                                          Pexp_tuple
                                          [
                                            expression (tools/caml_tex.ml[441,14069+24]..[441,14069+30])
                                              Pexp_field
                                              expression (tools/caml_tex.ml[441,14069+24]..[441,14069+25])
                                                Pexp_ident "t" (tools/caml_tex.ml[441,14069+24]..[441,14069+25])
                                              "stop" (tools/caml_tex.ml[441,14069+26]..[441,14069+30])
                                            expression (tools/caml_tex.ml[441,14069+32]..[441,14069+46])
                                              Pexp_ident "underline_stop" (tools/caml_tex.ml[441,14069+32]..[441,14069+46])
                                            expression (tools/caml_tex.ml[441,14069+48]..[441,14069+78])
                                              Pexp_construct "::" (tools/caml_tex.ml[441,14069+72]..[441,14069+74])
                                              Some
                                                expression (tools/caml_tex.ml[441,14069+48]..[441,14069+78]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (tools/caml_tex.ml[441,14069+48]..[441,14069+71])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[441,14069+48]..[441,14069+60])
                                                        Pexp_ident "latex_escape" (tools/caml_tex.ml[441,14069+48]..[441,14069+60])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[441,14069+61]..[441,14069+71])
                                                            Pexp_constant PConst_string ("\\ldots",(tools/caml_tex.ml[441,14069+63]..[441,14069+69]),Some "")
                                                      ]
                                                    expression (tools/caml_tex.ml[441,14069+75]..[441,14069+78])
                                                      Pexp_ident "out" (tools/caml_tex.ml[441,14069+75]..[441,14069+78])
                                                  ]
                                          ]
                                      <case>
                                        pattern (tools/caml_tex.ml[442,14148+12]..[442,14148+21])
                                          Ppat_construct "Underline" (tools/caml_tex.ml[442,14148+12]..[442,14148+21])
                                          None
                                        expression (tools/caml_tex.ml[443,14173+14]..[443,14173+57])
                                          Pexp_tuple
                                          [
                                            expression (tools/caml_tex.ml[443,14173+14]..[443,14173+21])
                                              Pexp_field
                                              expression (tools/caml_tex.ml[443,14173+14]..[443,14173+15])
                                                Pexp_ident "t" (tools/caml_tex.ml[443,14173+14]..[443,14173+15])
                                              "start" (tools/caml_tex.ml[443,14173+16]..[443,14173+21])
                                            expression (tools/caml_tex.ml[443,14173+23]..[443,14173+34])
                                              Pexp_construct "Some" (tools/caml_tex.ml[443,14173+23]..[443,14173+27])
                                              Some
                                                expression (tools/caml_tex.ml[443,14173+28]..[443,14173+34])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[443,14173+28]..[443,14173+29])
                                                    Pexp_ident "t" (tools/caml_tex.ml[443,14173+28]..[443,14173+29])
                                                  "stop" (tools/caml_tex.ml[443,14173+30]..[443,14173+34])
                                            expression (tools/caml_tex.ml[443,14173+36]..[443,14173+57])
                                              Pexp_construct "::" (tools/caml_tex.ml[443,14173+51]..[443,14173+53])
                                              Some
                                                expression (tools/caml_tex.ml[443,14173+36]..[443,14173+57]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (tools/caml_tex.ml[443,14173+36]..[443,14173+50])
                                                      Pexp_ident "camlbunderline" (tools/caml_tex.ml[443,14173+36]..[443,14173+50])
                                                    expression (tools/caml_tex.ml[443,14173+54]..[443,14173+57])
                                                      Pexp_ident "out" (tools/caml_tex.ml[443,14173+54]..[443,14173+57])
                                                  ]
                                          ]
                                    ]
                            ]
            ]
          structure_item (tools/caml_tex.ml[448,14428+2]..[448,14428+43])
            Pstr_type Rec
            [
              type_declaration "partition" (tools/caml_tex.ml[448,14428+7]..[448,14428+16]) (tools/caml_tex.ml[448,14428+2]..[448,14428+43])
                attribute "ocaml.doc"
                  [
                    structure_item (tools/caml_tex.ml[445,14232+2]..[447,14385+42])
                      Pstr_eval
                      expression (tools/caml_tex.ml[445,14232+2]..[447,14385+42])
                        Pexp_constant PConst_string(" Check that all ellipsis are strictly nested inside underline transform\n      and that otherwise no transform starts before the end of the previous\n      transform in a list of transforms ",(tools/caml_tex.ml[445,14232+2]..[447,14385+42]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (tools/caml_tex.ml[448,14428+19]..[448,14428+34])
                        "U" (tools/caml_tex.ml[448,14428+19]..[448,14428+20])
                        [
                          core_type (tools/caml_tex.ml[448,14428+24]..[448,14428+25])
                            Ptyp_constr "t" (tools/caml_tex.ml[448,14428+24]..[448,14428+25])
                            []
                          core_type (tools/caml_tex.ml[448,14428+28]..[448,14428+34])
                            Ptyp_constr "list" (tools/caml_tex.ml[448,14428+30]..[448,14428+34])
                            [
                              core_type (tools/caml_tex.ml[448,14428+28]..[448,14428+29])
                                Ptyp_constr "t" (tools/caml_tex.ml[448,14428+28]..[448,14428+29])
                                []
                            ]
                        ]
                        None
                      (tools/caml_tex.ml[448,14428+35]..[448,14428+43])
                        "E" (tools/caml_tex.ml[448,14428+37]..[448,14428+38])
                        [
                          core_type (tools/caml_tex.ml[448,14428+42]..[448,14428+43])
                            Ptyp_constr "t" (tools/caml_tex.ml[448,14428+42]..[448,14428+43])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (tools/caml_tex.ml[449,14472+2]..[474,15423+13])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[449,14472+6]..[449,14472+21])
                  Ppat_var "check_partition" (tools/caml_tex.ml[449,14472+6]..[449,14472+21])
                expression (tools/caml_tex.ml[449,14472+22]..[474,15423+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[449,14472+22]..[449,14472+26])
                    Ppat_var "line" (tools/caml_tex.ml[449,14472+22]..[449,14472+26])
                  expression (tools/caml_tex.ml[449,14472+27]..[474,15423+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[449,14472+27]..[449,14472+31])
                      Ppat_var "file" (tools/caml_tex.ml[449,14472+27]..[449,14472+31])
                    expression (tools/caml_tex.ml[449,14472+32]..[474,15423+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[449,14472+32]..[449,14472+33])
                        Ppat_var "l" (tools/caml_tex.ml[449,14472+32]..[449,14472+33])
                      expression (tools/caml_tex.ml[450,14508+4]..[474,15423+13])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[450,14508+8]..[450,14508+12])
                              Ppat_var "init" (tools/caml_tex.ml[450,14508+8]..[450,14508+12])
                            expression (tools/caml_tex.ml[450,14508+15]..[450,14508+27])
                              Pexp_apply
                              expression (tools/caml_tex.ml[450,14508+15]..[450,14508+23])
                                Pexp_ident "ellipsis" (tools/caml_tex.ml[450,14508+15]..[450,14508+23])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[450,14508+24]..[450,14508+25])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[450,14508+26]..[450,14508+27])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                        expression (tools/caml_tex.ml[451,14539+4]..[474,15423+13])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (tools/caml_tex.ml[451,14539+12]..[451,14539+21])
                                Ppat_var "partition" (tools/caml_tex.ml[451,14539+12]..[451,14539+21])
                              expression (tools/caml_tex.ml[451,14539+24]..[454,14648+59])
                                Pexp_function
                                [
                                  <case>
                                    pattern (tools/caml_tex.ml[452,14572+8]..[452,14572+10])
                                      Ppat_construct "[]" (tools/caml_tex.ml[452,14572+8]..[452,14572+10])
                                      None
                                    expression (tools/caml_tex.ml[452,14572+14]..[452,14572+16])
                                      Pexp_construct "[]" (tools/caml_tex.ml[452,14572+14]..[452,14572+16])
                                      None
                                  <case>
                                    pattern (tools/caml_tex.ml[453,14589+8]..[453,14589+38])
                                      Ppat_construct "::" (tools/caml_tex.ml[453,14589+34]..[453,14589+36])
                                      Some
                                        []
                                        pattern (tools/caml_tex.ml[453,14589+8]..[453,14589+38]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (tools/caml_tex.ml[453,14589+8]..[453,14589+33])
                                              Ppat_alias "t" (tools/caml_tex.ml[453,14589+32]..[453,14589+33])
                                              pattern (tools/caml_tex.ml[453,14589+8]..[453,14589+28])
                                                Ppat_record Open
                                                [
                                                  "kind" (tools/caml_tex.ml[453,14589+9]..[453,14589+13])
                                                    pattern (tools/caml_tex.ml[453,14589+14]..[453,14589+23])
                                                      Ppat_construct "Underline" (tools/caml_tex.ml[453,14589+14]..[453,14589+23])
                                                      None
                                                ]
                                            pattern (tools/caml_tex.ml[453,14589+37]..[453,14589+38])
                                              Ppat_var "q" (tools/caml_tex.ml[453,14589+37]..[453,14589+38])
                                          ]
                                    expression (tools/caml_tex.ml[453,14589+42]..[453,14589+58])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[453,14589+42]..[453,14589+51])
                                        Pexp_ident "underline" (tools/caml_tex.ml[453,14589+42]..[453,14589+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[453,14589+52]..[453,14589+53])
                                            Pexp_ident "t" (tools/caml_tex.ml[453,14589+52]..[453,14589+53])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[453,14589+54]..[453,14589+56])
                                            Pexp_construct "[]" (tools/caml_tex.ml[453,14589+54]..[453,14589+56])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[453,14589+57]..[453,14589+58])
                                            Pexp_ident "q" (tools/caml_tex.ml[453,14589+57]..[453,14589+58])
                                      ]
                                  <case>
                                    pattern (tools/caml_tex.ml[454,14648+8]..[454,14648+37])
                                      Ppat_construct "::" (tools/caml_tex.ml[454,14648+33]..[454,14648+35])
                                      Some
                                        []
                                        pattern (tools/caml_tex.ml[454,14648+8]..[454,14648+37]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (tools/caml_tex.ml[454,14648+8]..[454,14648+32])
                                              Ppat_alias "t" (tools/caml_tex.ml[454,14648+31]..[454,14648+32])
                                              pattern (tools/caml_tex.ml[454,14648+8]..[454,14648+27])
                                                Ppat_record Open
                                                [
                                                  "kind" (tools/caml_tex.ml[454,14648+9]..[454,14648+13])
                                                    pattern (tools/caml_tex.ml[454,14648+14]..[454,14648+22])
                                                      Ppat_construct "Ellipsis" (tools/caml_tex.ml[454,14648+14]..[454,14648+22])
                                                      None
                                                ]
                                            pattern (tools/caml_tex.ml[454,14648+36]..[454,14648+37])
                                              Ppat_var "q" (tools/caml_tex.ml[454,14648+36]..[454,14648+37])
                                          ]
                                    expression (tools/caml_tex.ml[454,14648+41]..[454,14648+59])
                                      Pexp_construct "::" (tools/caml_tex.ml[454,14648+45]..[454,14648+47])
                                      Some
                                        expression (tools/caml_tex.ml[454,14648+41]..[454,14648+59]) ghost
                                          Pexp_tuple
                                          [
                                            expression (tools/caml_tex.ml[454,14648+41]..[454,14648+44])
                                              Pexp_construct "E" (tools/caml_tex.ml[454,14648+41]..[454,14648+42])
                                              Some
                                                expression (tools/caml_tex.ml[454,14648+43]..[454,14648+44])
                                                  Pexp_ident "t" (tools/caml_tex.ml[454,14648+43]..[454,14648+44])
                                            expression (tools/caml_tex.ml[454,14648+48]..[454,14648+59])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[454,14648+48]..[454,14648+57])
                                                Pexp_ident "partition" (tools/caml_tex.ml[454,14648+48]..[454,14648+57])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[454,14648+58]..[454,14648+59])
                                                    Pexp_ident "q" (tools/caml_tex.ml[454,14648+58]..[454,14648+59])
                                              ]
                                          ]
                                ]
                            <def>
                              pattern (tools/caml_tex.ml[455,14708+8]..[455,14708+17])
                                Ppat_var "underline" (tools/caml_tex.ml[455,14708+8]..[455,14708+17])
                              expression (tools/caml_tex.ml[455,14708+18]..[460,14934+39]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (tools/caml_tex.ml[455,14708+18]..[455,14708+19])
                                  Ppat_var "u" (tools/caml_tex.ml[455,14708+18]..[455,14708+19])
                                expression (tools/caml_tex.ml[455,14708+20]..[460,14934+39]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (tools/caml_tex.ml[455,14708+20]..[455,14708+21])
                                    Ppat_var "n" (tools/caml_tex.ml[455,14708+20]..[455,14708+21])
                                  expression (tools/caml_tex.ml[455,14708+24]..[460,14934+39])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (tools/caml_tex.ml[456,14741+8]..[456,14741+10])
                                          Ppat_construct "[]" (tools/caml_tex.ml[456,14741+8]..[456,14741+10])
                                          None
                                        expression (tools/caml_tex.ml[456,14741+14]..[456,14741+34])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[456,14741+14]..[456,14741+27])
                                            Pexp_ident "end_underline" (tools/caml_tex.ml[456,14741+14]..[456,14741+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[456,14741+28]..[456,14741+29])
                                                Pexp_ident "u" (tools/caml_tex.ml[456,14741+28]..[456,14741+29])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[456,14741+30]..[456,14741+31])
                                                Pexp_ident "n" (tools/caml_tex.ml[456,14741+30]..[456,14741+31])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[456,14741+32]..[456,14741+34])
                                                Pexp_construct "[]" (tools/caml_tex.ml[456,14741+32]..[456,14741+34])
                                                None
                                          ]
                                      <case>
                                        pattern (tools/caml_tex.ml[457,14776+8]..[457,14776+38])
                                          Ppat_alias "q" (tools/caml_tex.ml[457,14776+37]..[457,14776+38])
                                          pattern (tools/caml_tex.ml[457,14776+8]..[457,14776+33])
                                            Ppat_construct "::" (tools/caml_tex.ml[457,14776+29]..[457,14776+31])
                                            Some
                                              []
                                              pattern (tools/caml_tex.ml[457,14776+8]..[457,14776+33]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (tools/caml_tex.ml[457,14776+8]..[457,14776+28])
                                                    Ppat_record Open
                                                    [
                                                      "kind" (tools/caml_tex.ml[457,14776+9]..[457,14776+13])
                                                        pattern (tools/caml_tex.ml[457,14776+14]..[457,14776+23])
                                                          Ppat_construct "Underline" (tools/caml_tex.ml[457,14776+14]..[457,14776+23])
                                                          None
                                                    ]
                                                  pattern (tools/caml_tex.ml[457,14776+32]..[457,14776+33])
                                                    Ppat_any
                                                ]
                                        expression (tools/caml_tex.ml[457,14776+42]..[457,14776+61])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[457,14776+42]..[457,14776+55])
                                            Pexp_ident "end_underline" (tools/caml_tex.ml[457,14776+42]..[457,14776+55])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[457,14776+56]..[457,14776+57])
                                                Pexp_ident "u" (tools/caml_tex.ml[457,14776+56]..[457,14776+57])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[457,14776+58]..[457,14776+59])
                                                Pexp_ident "n" (tools/caml_tex.ml[457,14776+58]..[457,14776+59])
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[457,14776+60]..[457,14776+61])
                                                Pexp_ident "q" (tools/caml_tex.ml[457,14776+60]..[457,14776+61])
                                          ]
                                      <case>
                                        pattern (tools/caml_tex.ml[458,14838+8]..[458,14838+37])
                                          Ppat_construct "::" (tools/caml_tex.ml[458,14838+33]..[458,14838+35])
                                          Some
                                            []
                                            pattern (tools/caml_tex.ml[458,14838+8]..[458,14838+37]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (tools/caml_tex.ml[458,14838+8]..[458,14838+32])
                                                  Ppat_alias "t" (tools/caml_tex.ml[458,14838+31]..[458,14838+32])
                                                  pattern (tools/caml_tex.ml[458,14838+8]..[458,14838+27])
                                                    Ppat_record Open
                                                    [
                                                      "kind" (tools/caml_tex.ml[458,14838+9]..[458,14838+13])
                                                        pattern (tools/caml_tex.ml[458,14838+14]..[458,14838+22])
                                                          Ppat_construct "Ellipsis" (tools/caml_tex.ml[458,14838+14]..[458,14838+22])
                                                          None
                                                    ]
                                                pattern (tools/caml_tex.ml[458,14838+36]..[458,14838+37])
                                                  Ppat_var "q" (tools/caml_tex.ml[458,14838+36]..[458,14838+37])
                                              ]
                                        expression (tools/caml_tex.ml[459,14879+10]..[460,14934+39])
                                          Pexp_ifthenelse
                                          expression (tools/caml_tex.ml[459,14879+13]..[459,14879+28])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[459,14879+20]..[459,14879+21])
                                              Pexp_ident "<" (tools/caml_tex.ml[459,14879+20]..[459,14879+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[459,14879+13]..[459,14879+19])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[459,14879+13]..[459,14879+14])
                                                    Pexp_ident "t" (tools/caml_tex.ml[459,14879+13]..[459,14879+14])
                                                  "stop" (tools/caml_tex.ml[459,14879+15]..[459,14879+19])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[459,14879+22]..[459,14879+28])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[459,14879+22]..[459,14879+23])
                                                    Pexp_ident "u" (tools/caml_tex.ml[459,14879+22]..[459,14879+23])
                                                  "stop" (tools/caml_tex.ml[459,14879+24]..[459,14879+28])
                                            ]
                                          expression (tools/caml_tex.ml[459,14879+34]..[459,14879+54])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[459,14879+34]..[459,14879+43])
                                              Pexp_ident "underline" (tools/caml_tex.ml[459,14879+34]..[459,14879+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[459,14879+44]..[459,14879+45])
                                                  Pexp_ident "u" (tools/caml_tex.ml[459,14879+44]..[459,14879+45])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[459,14879+46]..[459,14879+52])
                                                  Pexp_construct "::" (tools/caml_tex.ml[459,14879+48]..[459,14879+50])
                                                  Some
                                                    expression (tools/caml_tex.ml[459,14879+47]..[459,14879+51]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (tools/caml_tex.ml[459,14879+47]..[459,14879+48])
                                                          Pexp_ident "t" (tools/caml_tex.ml[459,14879+47]..[459,14879+48])
                                                        expression (tools/caml_tex.ml[459,14879+50]..[459,14879+51])
                                                          Pexp_ident "n" (tools/caml_tex.ml[459,14879+50]..[459,14879+51])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[459,14879+53]..[459,14879+54])
                                                  Pexp_ident "q" (tools/caml_tex.ml[459,14879+53]..[459,14879+54])
                                            ]
                                          Some
                                            expression (tools/caml_tex.ml[460,14934+15]..[460,14934+39])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[460,14934+15]..[460,14934+28])
                                                Pexp_ident "end_underline" (tools/caml_tex.ml[460,14934+15]..[460,14934+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[460,14934+29]..[460,14934+30])
                                                    Pexp_ident "u" (tools/caml_tex.ml[460,14934+29]..[460,14934+30])
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[460,14934+31]..[460,14934+32])
                                                    Pexp_ident "n" (tools/caml_tex.ml[460,14934+31]..[460,14934+32])
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[460,14934+33]..[460,14934+39])
                                                    Pexp_construct "::" (tools/caml_tex.ml[460,14934+35]..[460,14934+37])
                                                    Some
                                                      expression (tools/caml_tex.ml[460,14934+34]..[460,14934+38]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (tools/caml_tex.ml[460,14934+34]..[460,14934+35])
                                                            Pexp_ident "t" (tools/caml_tex.ml[460,14934+34]..[460,14934+35])
                                                          expression (tools/caml_tex.ml[460,14934+37]..[460,14934+38])
                                                            Pexp_ident "q" (tools/caml_tex.ml[460,14934+37]..[460,14934+38])
                                                        ]
                                              ]
                                    ]
                            <def>
                              pattern (tools/caml_tex.ml[461,14974+8]..[461,14974+21])
                                Ppat_var "end_underline" (tools/caml_tex.ml[461,14974+8]..[461,14974+21])
                              expression (tools/caml_tex.ml[461,14974+22]..[461,14974+60]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (tools/caml_tex.ml[461,14974+22]..[461,14974+23])
                                  Ppat_var "u" (tools/caml_tex.ml[461,14974+22]..[461,14974+23])
                                expression (tools/caml_tex.ml[461,14974+24]..[461,14974+60]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (tools/caml_tex.ml[461,14974+24]..[461,14974+25])
                                    Ppat_var "n" (tools/caml_tex.ml[461,14974+24]..[461,14974+25])
                                  expression (tools/caml_tex.ml[461,14974+26]..[461,14974+60]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (tools/caml_tex.ml[461,14974+26]..[461,14974+27])
                                      Ppat_var "l" (tools/caml_tex.ml[461,14974+26]..[461,14974+27])
                                    expression (tools/caml_tex.ml[461,14974+30]..[461,14974+60])
                                      Pexp_construct "::" (tools/caml_tex.ml[461,14974+46]..[461,14974+48])
                                      Some
                                        expression (tools/caml_tex.ml[461,14974+30]..[461,14974+60]) ghost
                                          Pexp_tuple
                                          [
                                            expression (tools/caml_tex.ml[461,14974+30]..[461,14974+45])
                                              Pexp_construct "U" (tools/caml_tex.ml[461,14974+30]..[461,14974+31])
                                              Some
                                                expression (tools/caml_tex.ml[461,14974+31]..[461,14974+45])
                                                  Pexp_tuple
                                                  [
                                                    expression (tools/caml_tex.ml[461,14974+32]..[461,14974+33])
                                                      Pexp_ident "u" (tools/caml_tex.ml[461,14974+32]..[461,14974+33])
                                                    expression (tools/caml_tex.ml[461,14974+34]..[461,14974+44])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[461,14974+34]..[461,14974+42])
                                                        Pexp_ident "List.rev" (tools/caml_tex.ml[461,14974+34]..[461,14974+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[461,14974+43]..[461,14974+44])
                                                            Pexp_ident "n" (tools/caml_tex.ml[461,14974+43]..[461,14974+44])
                                                      ]
                                                  ]
                                            expression (tools/caml_tex.ml[461,14974+49]..[461,14974+60])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[461,14974+49]..[461,14974+58])
                                                Pexp_ident "partition" (tools/caml_tex.ml[461,14974+49]..[461,14974+58])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[461,14974+59]..[461,14974+60])
                                                    Pexp_ident "l" (tools/caml_tex.ml[461,14974+59]..[461,14974+60])
                                              ]
                                          ]
                          ]
                          expression (tools/caml_tex.ml[462,15038+4]..[474,15423+13])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[462,15038+8]..[462,15038+17])
                                  Ppat_var "check_elt" (tools/caml_tex.ml[462,15038+8]..[462,15038+17])
                                expression (tools/caml_tex.ml[462,15038+18]..[466,15175+9]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (tools/caml_tex.ml[462,15038+18]..[462,15038+22])
                                    Ppat_var "last" (tools/caml_tex.ml[462,15038+18]..[462,15038+22])
                                  expression (tools/caml_tex.ml[462,15038+23]..[466,15175+9]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (tools/caml_tex.ml[462,15038+23]..[462,15038+24])
                                      Ppat_var "t" (tools/caml_tex.ml[462,15038+23]..[462,15038+24])
                                    expression (tools/caml_tex.ml[463,15065+6]..[466,15175+9])
                                      Pexp_ifthenelse
                                      expression (tools/caml_tex.ml[463,15065+9]..[463,15065+28])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[463,15065+17]..[463,15065+18])
                                          Pexp_ident "<" (tools/caml_tex.ml[463,15065+17]..[463,15065+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[463,15065+9]..[463,15065+16])
                                              Pexp_field
                                              expression (tools/caml_tex.ml[463,15065+9]..[463,15065+10])
                                                Pexp_ident "t" (tools/caml_tex.ml[463,15065+9]..[463,15065+10])
                                              "start" (tools/caml_tex.ml[463,15065+11]..[463,15065+16])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[463,15065+19]..[463,15065+28])
                                              Pexp_field
                                              expression (tools/caml_tex.ml[463,15065+19]..[463,15065+23])
                                                Pexp_ident "last" (tools/caml_tex.ml[463,15065+19]..[463,15065+23])
                                              "stop" (tools/caml_tex.ml[463,15065+24]..[463,15065+28])
                                        ]
                                      expression (tools/caml_tex.ml[464,15099+8]..[464,15099+64])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[464,15099+8]..[464,15099+13])
                                          Pexp_ident "raise" (tools/caml_tex.ml[464,15099+8]..[464,15099+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[464,15099+14]..[464,15099+64])
                                              Pexp_construct "Intersection" (tools/caml_tex.ml[464,15099+15]..[464,15099+27])
                                              Some
                                                expression (tools/caml_tex.ml[464,15099+28]..[464,15099+63])
                                                  Pexp_record
                                                  [
                                                    "line" (tools/caml_tex.ml[464,15099+29]..[464,15099+33]) ghost
                                                      expression (tools/caml_tex.ml[464,15099+29]..[464,15099+33])
                                                        Pexp_ident "line" (tools/caml_tex.ml[464,15099+29]..[464,15099+33])
                                                    "file" (tools/caml_tex.ml[464,15099+34]..[464,15099+38]) ghost
                                                      expression (tools/caml_tex.ml[464,15099+34]..[464,15099+38])
                                                        Pexp_ident "file" (tools/caml_tex.ml[464,15099+34]..[464,15099+38])
                                                    "left" (tools/caml_tex.ml[464,15099+40]..[464,15099+44])
                                                      expression (tools/caml_tex.ml[464,15099+47]..[464,15099+51])
                                                        Pexp_ident "last" (tools/caml_tex.ml[464,15099+47]..[464,15099+51])
                                                    "right" (tools/caml_tex.ml[464,15099+53]..[464,15099+58])
                                                      expression (tools/caml_tex.ml[464,15099+61]..[464,15099+62])
                                                        Pexp_ident "t" (tools/caml_tex.ml[464,15099+61]..[464,15099+62])
                                                  ]
                                                  None
                                        ]
                                      Some
                                        expression (tools/caml_tex.ml[466,15175+8]..[466,15175+9])
                                          Pexp_ident "t" (tools/caml_tex.ml[466,15175+8]..[466,15175+9])
                            ]
                            expression (tools/caml_tex.ml[467,15188+4]..[474,15423+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (tools/caml_tex.ml[467,15188+8]..[467,15188+13])
                                    Ppat_var "check" (tools/caml_tex.ml[467,15188+8]..[467,15188+13])
                                  expression (tools/caml_tex.ml[467,15188+14]..[472,15360+11]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (tools/caml_tex.ml[467,15188+14]..[467,15188+17])
                                      Ppat_var "acc" (tools/caml_tex.ml[467,15188+14]..[467,15188+17])
                                    expression (tools/caml_tex.ml[467,15188+20]..[472,15360+11])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (tools/caml_tex.ml[468,15217+8]..[468,15217+11])
                                            Ppat_construct "E" (tools/caml_tex.ml[468,15217+8]..[468,15217+9])
                                            Some
                                              []
                                              pattern (tools/caml_tex.ml[468,15217+10]..[468,15217+11])
                                                Ppat_var "t" (tools/caml_tex.ml[468,15217+10]..[468,15217+11])
                                          expression (tools/caml_tex.ml[468,15217+15]..[468,15217+30])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[468,15217+15]..[468,15217+24])
                                              Pexp_ident "check_elt" (tools/caml_tex.ml[468,15217+15]..[468,15217+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[468,15217+25]..[468,15217+28])
                                                  Pexp_ident "acc" (tools/caml_tex.ml[468,15217+25]..[468,15217+28])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[468,15217+29]..[468,15217+30])
                                                  Pexp_ident "t" (tools/caml_tex.ml[468,15217+29]..[468,15217+30])
                                            ]
                                        <case>
                                          pattern (tools/caml_tex.ml[469,15248+8]..[469,15248+14])
                                            Ppat_construct "U" (tools/caml_tex.ml[469,15248+8]..[469,15248+9])
                                            Some
                                              []
                                              pattern (tools/caml_tex.ml[469,15248+9]..[469,15248+14])
                                                Ppat_tuple
                                                [
                                                  pattern (tools/caml_tex.ml[469,15248+10]..[469,15248+11])
                                                    Ppat_var "u" (tools/caml_tex.ml[469,15248+10]..[469,15248+11])
                                                  pattern (tools/caml_tex.ml[469,15248+12]..[469,15248+13])
                                                    Ppat_var "n" (tools/caml_tex.ml[469,15248+12]..[469,15248+13])
                                                ]
                                          expression (tools/caml_tex.ml[470,15266+10]..[472,15360+11])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (tools/caml_tex.ml[470,15266+14]..[470,15266+15])
                                                  Ppat_any
                                                expression (tools/caml_tex.ml[470,15266+18]..[470,15266+33])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[470,15266+18]..[470,15266+27])
                                                    Pexp_ident "check_elt" (tools/caml_tex.ml[470,15266+18]..[470,15266+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[470,15266+28]..[470,15266+31])
                                                        Pexp_ident "acc" (tools/caml_tex.ml[470,15266+28]..[470,15266+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[470,15266+32]..[470,15266+33])
                                                        Pexp_ident "u" (tools/caml_tex.ml[470,15266+32]..[470,15266+33])
                                                  ]
                                            ]
                                            expression (tools/caml_tex.ml[471,15303+10]..[472,15360+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (tools/caml_tex.ml[471,15303+14]..[471,15303+15])
                                                    Ppat_any
                                                  expression (tools/caml_tex.ml[471,15303+18]..[471,15303+53])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[471,15303+18]..[471,15303+32])
                                                      Pexp_ident "List.fold_left" (tools/caml_tex.ml[471,15303+18]..[471,15303+32])
                                                    [
                                                      <arg>
                                                      Labelled "f"
                                                        expression (tools/caml_tex.ml[471,15303+36]..[471,15303+45])
                                                          Pexp_ident "check_elt" (tools/caml_tex.ml[471,15303+36]..[471,15303+45])
                                                      <arg>
                                                      Labelled "init"
                                                        expression (tools/caml_tex.ml[471,15303+47]..[471,15303+51])
                                                          Pexp_ident "init" (tools/caml_tex.ml[471,15303+47]..[471,15303+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[471,15303+52]..[471,15303+53])
                                                          Pexp_ident "n" (tools/caml_tex.ml[471,15303+52]..[471,15303+53])
                                                    ]
                                              ]
                                              expression (tools/caml_tex.ml[472,15360+10]..[472,15360+11])
                                                Pexp_ident "u" (tools/caml_tex.ml[472,15360+10]..[472,15360+11])
                                      ]
                              ]
                              expression (tools/caml_tex.ml[473,15375+4]..[474,15423+13])
                                Pexp_apply
                                expression (tools/caml_tex.ml[474,15423+4]..[474,15423+6])
                                  Pexp_ident "|>" (tools/caml_tex.ml[474,15423+4]..[474,15423+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[473,15375+4]..[473,15375+47])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[473,15375+4]..[473,15375+18])
                                        Pexp_ident "List.fold_left" (tools/caml_tex.ml[473,15375+4]..[473,15375+18])
                                      [
                                        <arg>
                                        Labelled "f"
                                          expression (tools/caml_tex.ml[473,15375+22]..[473,15375+27])
                                            Pexp_ident "check" (tools/caml_tex.ml[473,15375+22]..[473,15375+27])
                                        <arg>
                                        Labelled "init"
                                          expression (tools/caml_tex.ml[473,15375+29]..[473,15375+33])
                                            Pexp_ident "init" (tools/caml_tex.ml[473,15375+29]..[473,15375+33])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[473,15375+34]..[473,15375+47])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[473,15375+35]..[473,15375+44])
                                              Pexp_ident "partition" (tools/caml_tex.ml[473,15375+35]..[473,15375+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[473,15375+45]..[473,15375+46])
                                                  Pexp_ident "l" (tools/caml_tex.ml[473,15375+45]..[473,15375+46])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[474,15423+7]..[474,15423+13])
                                      Pexp_ident "ignore" (tools/caml_tex.ml[474,15423+7]..[474,15423+13])
                                ]
            ]
          structure_item (tools/caml_tex.ml[476,15438+2]..[496,16338+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[476,15438+6]..[476,15438+11])
                  Ppat_var "apply" (tools/caml_tex.ml[476,15438+6]..[476,15438+11])
                expression (tools/caml_tex.ml[476,15438+12]..[496,16338+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[476,15438+12]..[476,15438+14])
                    Ppat_var "ts" (tools/caml_tex.ml[476,15438+12]..[476,15438+14])
                  expression (tools/caml_tex.ml[476,15438+15]..[496,16338+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[476,15438+15]..[476,15438+19])
                      Ppat_var "file" (tools/caml_tex.ml[476,15438+15]..[476,15438+19])
                    expression (tools/caml_tex.ml[476,15438+20]..[496,16338+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[476,15438+20]..[476,15438+24])
                        Ppat_var "line" (tools/caml_tex.ml[476,15438+20]..[476,15438+24])
                      expression (tools/caml_tex.ml[476,15438+25]..[496,16338+34]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (tools/caml_tex.ml[476,15438+25]..[476,15438+26])
                          Ppat_var "s" (tools/caml_tex.ml[476,15438+25]..[476,15438+26])
                        expression (tools/caml_tex.ml[482,15747+4]..[496,16338+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (tools/caml_tex.ml[482,15747+8]..[482,15747+10])
                                Ppat_var "ts" (tools/caml_tex.ml[482,15747+8]..[482,15747+10])
                              expression (tools/caml_tex.ml[482,15747+13]..[482,15747+38])
                                Pexp_apply
                                expression (tools/caml_tex.ml[482,15747+13]..[482,15747+27])
                                  Pexp_ident "List.sort_uniq" (tools/caml_tex.ml[482,15747+13]..[482,15747+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[482,15747+28]..[482,15747+35])
                                      Pexp_ident "compare" (tools/caml_tex.ml[482,15747+28]..[482,15747+35])
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[482,15747+36]..[482,15747+38])
                                      Pexp_ident "ts" (tools/caml_tex.ml[482,15747+36]..[482,15747+38])
                                ]
                          ]
                          expression (tools/caml_tex.ml[483,15789+4]..[496,16338+34])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[483,15789+8]..[483,15789+10])
                                  Ppat_var "ts" (tools/caml_tex.ml[483,15789+8]..[483,15789+10])
                                expression (tools/caml_tex.ml[483,15789+13]..[483,15789+62])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[483,15789+13]..[483,15789+22])
                                    Pexp_ident "List.sort" (tools/caml_tex.ml[483,15789+13]..[483,15789+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[483,15789+23]..[483,15789+59])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (tools/caml_tex.ml[483,15789+28]..[483,15789+29])
                                          Ppat_var "x" (tools/caml_tex.ml[483,15789+28]..[483,15789+29])
                                        expression (tools/caml_tex.ml[483,15789+30]..[483,15789+58]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (tools/caml_tex.ml[483,15789+30]..[483,15789+31])
                                            Ppat_var "y" (tools/caml_tex.ml[483,15789+30]..[483,15789+31])
                                          expression (tools/caml_tex.ml[483,15789+35]..[483,15789+58])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[483,15789+35]..[483,15789+42])
                                              Pexp_ident "compare" (tools/caml_tex.ml[483,15789+35]..[483,15789+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[483,15789+43]..[483,15789+50])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[483,15789+43]..[483,15789+44])
                                                    Pexp_ident "x" (tools/caml_tex.ml[483,15789+43]..[483,15789+44])
                                                  "start" (tools/caml_tex.ml[483,15789+45]..[483,15789+50])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[483,15789+51]..[483,15789+58])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[483,15789+51]..[483,15789+52])
                                                    Pexp_ident "y" (tools/caml_tex.ml[483,15789+51]..[483,15789+52])
                                                  "start" (tools/caml_tex.ml[483,15789+53]..[483,15789+58])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[483,15789+60]..[483,15789+62])
                                        Pexp_ident "ts" (tools/caml_tex.ml[483,15789+60]..[483,15789+62])
                                  ]
                            ]
                            expression (tools/caml_tex.ml[484,15855+4]..[496,16338+34])
                              Pexp_sequence
                              expression (tools/caml_tex.ml[484,15855+4]..[484,15855+32])
                                Pexp_apply
                                expression (tools/caml_tex.ml[484,15855+4]..[484,15855+19])
                                  Pexp_ident "check_partition" (tools/caml_tex.ml[484,15855+4]..[484,15855+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[484,15855+20]..[484,15855+24])
                                      Pexp_ident "line" (tools/caml_tex.ml[484,15855+20]..[484,15855+24])
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[484,15855+25]..[484,15855+29])
                                      Pexp_ident "file" (tools/caml_tex.ml[484,15855+25]..[484,15855+29])
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[484,15855+30]..[484,15855+32])
                                      Pexp_ident "ts" (tools/caml_tex.ml[484,15855+30]..[484,15855+32])
                                ]
                              expression (tools/caml_tex.ml[485,15889+4]..[496,16338+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (tools/caml_tex.ml[485,15889+8]..[485,15889+27])
                                      Ppat_tuple
                                      [
                                        pattern (tools/caml_tex.ml[485,15889+8]..[485,15889+12])
                                          Ppat_var "last" (tools/caml_tex.ml[485,15889+8]..[485,15889+12])
                                        pattern (tools/caml_tex.ml[485,15889+14]..[485,15889+23])
                                          Ppat_var "underline" (tools/caml_tex.ml[485,15889+14]..[485,15889+23])
                                        pattern (tools/caml_tex.ml[485,15889+25]..[485,15889+27])
                                          Ppat_var "ls" (tools/caml_tex.ml[485,15889+25]..[485,15889+27])
                                      ]
                                    expression (tools/caml_tex.ml[486,15919+6]..[486,15919+64])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[486,15919+6]..[486,15919+20])
                                        Pexp_ident "List.fold_left" (tools/caml_tex.ml[486,15919+6]..[486,15919+20])
                                      [
                                        <arg>
                                        Labelled "f"
                                          expression (tools/caml_tex.ml[486,15919+24]..[486,15919+43])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[486,15919+25]..[486,15919+40])
                                              Pexp_ident "apply_transform" (tools/caml_tex.ml[486,15919+25]..[486,15919+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[486,15919+41]..[486,15919+42])
                                                  Pexp_ident "s" (tools/caml_tex.ml[486,15919+41]..[486,15919+42])
                                            ]
                                        <arg>
                                        Labelled "init"
                                          expression (tools/caml_tex.ml[486,15919+50]..[486,15919+61])
                                            Pexp_tuple
                                            [
                                              expression (tools/caml_tex.ml[486,15919+51]..[486,15919+52])
                                                Pexp_constant PConst_int (0,None)
                                              expression (tools/caml_tex.ml[486,15919+53]..[486,15919+57])
                                                Pexp_construct "None" (tools/caml_tex.ml[486,15919+53]..[486,15919+57])
                                                None
                                              expression (tools/caml_tex.ml[486,15919+58]..[486,15919+60])
                                                Pexp_construct "[]" (tools/caml_tex.ml[486,15919+58]..[486,15919+60])
                                                None
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[486,15919+62]..[486,15919+64])
                                            Pexp_ident "ts" (tools/caml_tex.ml[486,15919+62]..[486,15919+64])
                                      ]
                                ]
                                expression (tools/caml_tex.ml[487,15987+4]..[496,16338+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (tools/caml_tex.ml[487,15987+8]..[487,15987+16])
                                        Ppat_tuple
                                        [
                                          pattern (tools/caml_tex.ml[487,15987+8]..[487,15987+12])
                                            Ppat_var "last" (tools/caml_tex.ml[487,15987+8]..[487,15987+12])
                                          pattern (tools/caml_tex.ml[487,15987+14]..[487,15987+16])
                                            Ppat_var "ls" (tools/caml_tex.ml[487,15987+14]..[487,15987+16])
                                        ]
                                      expression (tools/caml_tex.ml[487,15987+19]..[491,16154+41])
                                        Pexp_match
                                        expression (tools/caml_tex.ml[487,15987+25]..[487,15987+34])
                                          Pexp_ident "underline" (tools/caml_tex.ml[487,15987+25]..[487,15987+34])
                                        [
                                          <case>
                                            pattern (tools/caml_tex.ml[488,16027+8]..[488,16027+12])
                                              Ppat_construct "None" (tools/caml_tex.ml[488,16027+8]..[488,16027+12])
                                              None
                                            expression (tools/caml_tex.ml[488,16027+16]..[488,16027+24])
                                              Pexp_tuple
                                              [
                                                expression (tools/caml_tex.ml[488,16027+16]..[488,16027+20])
                                                  Pexp_ident "last" (tools/caml_tex.ml[488,16027+16]..[488,16027+20])
                                                expression (tools/caml_tex.ml[488,16027+22]..[488,16027+24])
                                                  Pexp_ident "ls" (tools/caml_tex.ml[488,16027+22]..[488,16027+24])
                                              ]
                                          <case>
                                            pattern (tools/caml_tex.ml[489,16052+8]..[489,16052+17])
                                              Ppat_construct "Some" (tools/caml_tex.ml[489,16052+8]..[489,16052+12])
                                              Some
                                                []
                                                pattern (tools/caml_tex.ml[489,16052+13]..[489,16052+17])
                                                  Ppat_var "stop" (tools/caml_tex.ml[489,16052+13]..[489,16052+17])
                                            expression (tools/caml_tex.ml[490,16073+10]..[491,16154+41])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (tools/caml_tex.ml[490,16073+14]..[490,16073+15])
                                                    Ppat_var "f" (tools/caml_tex.ml[490,16073+14]..[490,16073+15])
                                                  expression (tools/caml_tex.ml[490,16073+18]..[490,16073+77])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[490,16073+18]..[490,16073+33])
                                                      Pexp_ident "escape_specials" (tools/caml_tex.ml[490,16073+18]..[490,16073+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[490,16073+34]..[490,16073+77])
                                                          Pexp_apply
                                                          expression (tools/caml_tex.ml[490,16073+35]..[490,16073+45])
                                                            Pexp_ident "String.sub" (tools/caml_tex.ml[490,16073+35]..[490,16073+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (tools/caml_tex.ml[490,16073+46]..[490,16073+47])
                                                                Pexp_ident "s" (tools/caml_tex.ml[490,16073+46]..[490,16073+47])
                                                            <arg>
                                                            Labelled "pos"
                                                              expression (tools/caml_tex.ml[490,16073+53]..[490,16073+57])
                                                                Pexp_ident "last" (tools/caml_tex.ml[490,16073+53]..[490,16073+57])
                                                            <arg>
                                                            Labelled "len"
                                                              expression (tools/caml_tex.ml[490,16073+63]..[490,16073+76])
                                                                Pexp_apply
                                                                expression (tools/caml_tex.ml[490,16073+69]..[490,16073+70])
                                                                  Pexp_ident "-" (tools/caml_tex.ml[490,16073+69]..[490,16073+70])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[490,16073+64]..[490,16073+68])
                                                                      Pexp_ident "stop" (tools/caml_tex.ml[490,16073+64]..[490,16073+68])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[490,16073+71]..[490,16073+75])
                                                                      Pexp_ident "last" (tools/caml_tex.ml[490,16073+71]..[490,16073+75])
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                              expression (tools/caml_tex.ml[491,16154+10]..[491,16154+41])
                                                Pexp_tuple
                                                [
                                                  expression (tools/caml_tex.ml[491,16154+10]..[491,16154+14])
                                                    Pexp_ident "stop" (tools/caml_tex.ml[491,16154+10]..[491,16154+14])
                                                  expression (tools/caml_tex.ml[491,16154+16]..[491,16154+41])
                                                    Pexp_construct "::" (tools/caml_tex.ml[491,16154+31]..[491,16154+33])
                                                    Some
                                                      expression (tools/caml_tex.ml[491,16154+16]..[491,16154+41]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (tools/caml_tex.ml[491,16154+16]..[491,16154+30])
                                                            Pexp_ident "camleunderline" (tools/caml_tex.ml[491,16154+16]..[491,16154+30])
                                                          expression (tools/caml_tex.ml[491,16154+34]..[491,16154+41])
                                                            Pexp_construct "::" (tools/caml_tex.ml[491,16154+36]..[491,16154+38])
                                                            Some
                                                              expression (tools/caml_tex.ml[491,16154+34]..[491,16154+41]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (tools/caml_tex.ml[491,16154+34]..[491,16154+35])
                                                                    Pexp_ident "f" (tools/caml_tex.ml[491,16154+34]..[491,16154+35])
                                                                  expression (tools/caml_tex.ml[491,16154+39]..[491,16154+41])
                                                                    Pexp_ident "ls" (tools/caml_tex.ml[491,16154+39]..[491,16154+41])
                                                                ]
                                                        ]
                                                ]
                                        ]
                                  ]
                                  expression (tools/caml_tex.ml[492,16199+4]..[496,16338+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (tools/caml_tex.ml[492,16199+8]..[492,16199+10])
                                          Ppat_var "ls" (tools/caml_tex.ml[492,16199+8]..[492,16199+10])
                                        expression (tools/caml_tex.ml[493,16212+6]..[495,16276+58])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (tools/caml_tex.ml[493,16212+10]..[493,16212+11])
                                                Ppat_var "n" (tools/caml_tex.ml[493,16212+10]..[493,16212+11])
                                              expression (tools/caml_tex.ml[493,16212+14]..[493,16212+29])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[493,16212+14]..[493,16212+27])
                                                  Pexp_ident "String.length" (tools/caml_tex.ml[493,16212+14]..[493,16212+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[493,16212+28]..[493,16212+29])
                                                      Pexp_ident "s" (tools/caml_tex.ml[493,16212+28]..[493,16212+29])
                                                ]
                                          ]
                                          expression (tools/caml_tex.ml[494,16245+6]..[495,16276+58])
                                            Pexp_ifthenelse
                                            expression (tools/caml_tex.ml[494,16245+9]..[494,16245+17])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[494,16245+14]..[494,16245+15])
                                                Pexp_ident "=" (tools/caml_tex.ml[494,16245+14]..[494,16245+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[494,16245+9]..[494,16245+13])
                                                    Pexp_ident "last" (tools/caml_tex.ml[494,16245+9]..[494,16245+13])
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[494,16245+16]..[494,16245+17])
                                                    Pexp_ident "n" (tools/caml_tex.ml[494,16245+16]..[494,16245+17])
                                              ]
                                            expression (tools/caml_tex.ml[494,16245+23]..[494,16245+25])
                                              Pexp_ident "ls" (tools/caml_tex.ml[494,16245+23]..[494,16245+25])
                                            Some
                                              expression (tools/caml_tex.ml[495,16276+8]..[495,16276+58])
                                                Pexp_construct "::" (tools/caml_tex.ml[495,16276+53]..[495,16276+55])
                                                Some
                                                  expression (tools/caml_tex.ml[495,16276+8]..[495,16276+58]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (tools/caml_tex.ml[495,16276+8]..[495,16276+52])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[495,16276+8]..[495,16276+23])
                                                          Pexp_ident "escape_specials" (tools/caml_tex.ml[495,16276+8]..[495,16276+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[495,16276+24]..[495,16276+52])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[495,16276+25]..[495,16276+35])
                                                                Pexp_ident "String.sub" (tools/caml_tex.ml[495,16276+25]..[495,16276+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[495,16276+36]..[495,16276+37])
                                                                    Pexp_ident "s" (tools/caml_tex.ml[495,16276+36]..[495,16276+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[495,16276+38]..[495,16276+42])
                                                                    Pexp_ident "last" (tools/caml_tex.ml[495,16276+38]..[495,16276+42])
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[495,16276+43]..[495,16276+51])
                                                                    Pexp_apply
                                                                    expression (tools/caml_tex.ml[495,16276+45]..[495,16276+46])
                                                                      Pexp_ident "-" (tools/caml_tex.ml[495,16276+45]..[495,16276+46])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[495,16276+44]..[495,16276+45])
  Pexp_ident "n" (tools/caml_tex.ml[495,16276+44]..[495,16276+45])
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[495,16276+46]..[495,16276+50])
  Pexp_ident "last" (tools/caml_tex.ml[495,16276+46]..[495,16276+50])
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (tools/caml_tex.ml[495,16276+56]..[495,16276+58])
                                                        Pexp_ident "ls" (tools/caml_tex.ml[495,16276+56]..[495,16276+58])
                                                    ]
                                    ]
                                    expression (tools/caml_tex.ml[496,16338+4]..[496,16338+34])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[496,16338+4]..[496,16338+17])
                                        Pexp_ident "String.concat" (tools/caml_tex.ml[496,16338+4]..[496,16338+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[496,16338+18]..[496,16338+20])
                                            Pexp_constant PConst_string("",(tools/caml_tex.ml[496,16338+19]..[496,16338+19]),None)
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[496,16338+21]..[496,16338+34])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[496,16338+22]..[496,16338+30])
                                              Pexp_ident "List.rev" (tools/caml_tex.ml[496,16338+22]..[496,16338+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[496,16338+31]..[496,16338+33])
                                                  Pexp_ident "ls" (tools/caml_tex.ml[496,16338+31]..[496,16338+33])
                                            ]
                                      ]
            ]
        ]
  structure_item (tools/caml_tex.ml[500,16379+0]..[500,16379+50])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (tools/caml_tex.ml[500,16379+0]..[500,16379+50])
          pext_name = "Missing_double_semicolon"
          pext_kind =
            Pext_decl
              [
                core_type (tools/caml_tex.ml[500,16379+38]..[500,16379+44])
                  Ptyp_constr "string" (tools/caml_tex.ml[500,16379+38]..[500,16379+44])
                  []
                core_type (tools/caml_tex.ml[500,16379+47]..[500,16379+50])
                  Ptyp_constr "int" (tools/caml_tex.ml[500,16379+47]..[500,16379+50])
                  []
              ]
              None
  structure_item (tools/caml_tex.ml[502,16431+0]..[502,16431+38])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (tools/caml_tex.ml[502,16431+0]..[502,16431+38])
          pext_name = "Missing_mode"
          pext_kind =
            Pext_decl
              [
                core_type (tools/caml_tex.ml[502,16431+26]..[502,16431+32])
                  Ptyp_constr "string" (tools/caml_tex.ml[502,16431+26]..[502,16431+32])
                  []
                core_type (tools/caml_tex.ml[502,16431+35]..[502,16431+38])
                  Ptyp_constr "int" (tools/caml_tex.ml[502,16431+35]..[502,16431+38])
                  []
              ]
              None
  structure_item (tools/caml_tex.ml[504,16471+0]..[505,16494+49])
    Pstr_type Rec
    [
      type_declaration "incompatibility" (tools/caml_tex.ml[504,16471+5]..[504,16471+20]) (tools/caml_tex.ml[504,16471+0]..[505,16494+49])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (tools/caml_tex.ml[505,16494+2]..[505,16494+49])
                "Signature_with_visible_answer" (tools/caml_tex.ml[505,16494+4]..[505,16494+33])
                [
                  core_type (tools/caml_tex.ml[505,16494+37]..[505,16494+43])
                    Ptyp_constr "string" (tools/caml_tex.ml[505,16494+37]..[505,16494+43])
                    []
                  core_type (tools/caml_tex.ml[505,16494+46]..[505,16494+49])
                    Ptyp_constr "int" (tools/caml_tex.ml[505,16494+46]..[505,16494+49])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (tools/caml_tex.ml[506,16544+0]..[506,16544+49])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (tools/caml_tex.ml[506,16544+0]..[506,16544+49])
          pext_name = "Incompatible_options"
          pext_kind =
            Pext_decl
              [
                core_type (tools/caml_tex.ml[506,16544+34]..[506,16544+49])
                  Ptyp_constr "incompatibility" (tools/caml_tex.ml[506,16544+34]..[506,16544+49])
                  []
              ]
              None
  structure_item (tools/caml_tex.ml[509,16596+0]..[574,19106+3])
    Pstr_module
    "Ellipsis" (tools/caml_tex.ml[509,16596+7]..[509,16596+15])
      module_expr (tools/caml_tex.ml[509,16596+18]..[574,19106+3])
        Pmod_structure
        [
          structure_item (tools/caml_tex.ml[510,16621+2]..[514,16774+66])
            Pstr_attribute "ocaml.text"
            [
              structure_item (tools/caml_tex.ml[510,16621+2]..[514,16774+66])
                Pstr_eval
                expression (tools/caml_tex.ml[510,16621+2]..[514,16774+66])
                  Pexp_constant PConst_string(" This module implements the extraction of ellipsis locations\n      from phrases.\n\n      An ellipsis is either an [[@ellipsis]] attribute, or a pair\n      of [[@@@ellipsis.start]...[@@@ellipsis.stop]] attributes. ",(tools/caml_tex.ml[510,16621+2]..[514,16774+66]),None)
            ]
          structure_item (tools/caml_tex.ml[516,16842+2]..[516,16842+74])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (tools/caml_tex.ml[516,16842+2]..[516,16842+74])
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[517,16917+2]..[518,16987+51])
                        Pstr_eval
                        expression (tools/caml_tex.ml[517,16917+2]..[518,16987+51])
                          Pexp_constant PConst_string(" raised when an [[@@@ellipsis.start]] or [[@@@ellipsis.stop]] is\n      not paired with another ellipsis attribute ",(tools/caml_tex.ml[517,16917+2]..[518,16987+51]),None)
                    ]
                  pext_name = "Unmatched_ellipsis"
                  pext_kind =
                    Pext_decl
                      [
                        (tools/caml_tex.ml[516,16842+35]..[516,16842+49])
                          Immutable
                          "kind" (tools/caml_tex.ml[516,16842+35]..[516,16842+39])                          core_type (tools/caml_tex.ml[516,16842+42]..[516,16842+48])
                            Ptyp_constr "string" (tools/caml_tex.ml[516,16842+42]..[516,16842+48])
                            []
                        (tools/caml_tex.ml[516,16842+50]..[516,16842+62])
                          Immutable
                          "start" (tools/caml_tex.ml[516,16842+50]..[516,16842+55])                          core_type (tools/caml_tex.ml[516,16842+58]..[516,16842+61])
                            Ptyp_constr "int" (tools/caml_tex.ml[516,16842+58]..[516,16842+61])
                            []
                        (tools/caml_tex.ml[516,16842+63]..[516,16842+73])
                          Immutable
                          "stop" (tools/caml_tex.ml[516,16842+63]..[516,16842+67])                          core_type (tools/caml_tex.ml[516,16842+70]..[516,16842+73])
                            Ptyp_constr "int" (tools/caml_tex.ml[516,16842+70]..[516,16842+73])
                            []
                      ]
                      None
          structure_item (tools/caml_tex.ml[520,17040+2]..[520,17040+59])
            Pstr_exception
            type_exception
              ptyext_constructor =
                extension_constructor (tools/caml_tex.ml[520,17040+2]..[520,17040+59])
                  attribute "ocaml.doc"
                    [
                      structure_item (tools/caml_tex.ml[521,17100+2]..[521,17100+59])
                        Pstr_eval
                        expression (tools/caml_tex.ml[521,17100+2]..[521,17100+59])
                          Pexp_constant PConst_string(" raised by [[@@@ellipsis.start][@@@ellipsis.start]] ",(tools/caml_tex.ml[521,17100+2]..[521,17100+59]),None)
                    ]
                  pext_name = "Nested_ellipses"
                  pext_kind =
                    Pext_decl
                      [
                        (tools/caml_tex.ml[520,17040+32]..[520,17040+45])
                          Immutable
                          "first" (tools/caml_tex.ml[520,17040+32]..[520,17040+37])                          core_type (tools/caml_tex.ml[520,17040+40]..[520,17040+43])
                            Ptyp_constr "int" (tools/caml_tex.ml[520,17040+40]..[520,17040+43])
                            []
                        (tools/caml_tex.ml[520,17040+46]..[520,17040+58])
                          Immutable
                          "second" (tools/caml_tex.ml[520,17040+46]..[520,17040+52])                          core_type (tools/caml_tex.ml[520,17040+55]..[520,17040+58])
                            Ptyp_constr "int" (tools/caml_tex.ml[520,17040+55]..[520,17040+58])
                            []
                      ]
                      None
          structure_item (tools/caml_tex.ml[523,17161+2]..[568,18971+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[523,17161+6]..[523,17161+13])
                  Ppat_var "extract" (tools/caml_tex.ml[523,17161+6]..[523,17161+13])
                expression (tools/caml_tex.ml[523,17161+14]..[568,18971+15]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (tools/caml_tex.ml[523,17161+14]..[523,17161+15])
                    Ppat_var "f" (tools/caml_tex.ml[523,17161+14]..[523,17161+15])
                  expression (tools/caml_tex.ml[523,17161+16]..[568,18971+15]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (tools/caml_tex.ml[523,17161+16]..[523,17161+17])
                      Ppat_var "x" (tools/caml_tex.ml[523,17161+16]..[523,17161+17])
                    expression (tools/caml_tex.ml[524,17181+4]..[568,18971+15])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[524,17181+8]..[524,17181+18])
                            Ppat_var "transforms" (tools/caml_tex.ml[524,17181+8]..[524,17181+18])
                          expression (tools/caml_tex.ml[524,17181+21]..[524,17181+27])
                            Pexp_apply
                            expression (tools/caml_tex.ml[524,17181+21]..[524,17181+24])
                              Pexp_ident "ref" (tools/caml_tex.ml[524,17181+21]..[524,17181+24])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[524,17181+25]..[524,17181+27])
                                  Pexp_construct "[]" (tools/caml_tex.ml[524,17181+25]..[524,17181+27])
                                  None
                            ]
                      ]
                      expression (tools/caml_tex.ml[525,17212+4]..[568,18971+15])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[525,17212+8]..[525,17212+16])
                              Ppat_var "last_loc" (tools/caml_tex.ml[525,17212+8]..[525,17212+16])
                            expression (tools/caml_tex.ml[525,17212+19]..[525,17212+36])
                              Pexp_apply
                              expression (tools/caml_tex.ml[525,17212+19]..[525,17212+22])
                                Pexp_ident "ref" (tools/caml_tex.ml[525,17212+19]..[525,17212+22])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[525,17212+23]..[525,17212+36])
                                    Pexp_ident "Location.none" (tools/caml_tex.ml[525,17212+23]..[525,17212+36])
                              ]
                        ]
                        expression (tools/caml_tex.ml[526,17252+4]..[568,18971+15])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (tools/caml_tex.ml[526,17252+8]..[526,17252+17])
                                Ppat_var "left_mark" (tools/caml_tex.ml[526,17252+8]..[526,17252+17])
                              expression (tools/caml_tex.ml[526,17252+20]..[526,17252+28])
                                Pexp_apply
                                expression (tools/caml_tex.ml[526,17252+20]..[526,17252+23])
                                  Pexp_ident "ref" (tools/caml_tex.ml[526,17252+20]..[526,17252+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[526,17252+24]..[526,17252+28])
                                      Pexp_construct "None" (tools/caml_tex.ml[526,17252+24]..[526,17252+28])
                                      None
                                ]
                          ]
                          expression (tools/caml_tex.ml[527,17328+4]..[568,18971+15])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (tools/caml_tex.ml[527,17328+8]..[527,17328+16])
                                  Ppat_var "location" (tools/caml_tex.ml[527,17328+8]..[527,17328+16])
                                expression (tools/caml_tex.ml[527,17328+17]..[530,17493+21]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (tools/caml_tex.ml[527,17328+17]..[527,17328+22])
                                    Ppat_var "_this" (tools/caml_tex.ml[527,17328+17]..[527,17328+22])
                                  expression (tools/caml_tex.ml[527,17328+23]..[530,17493+21]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (tools/caml_tex.ml[527,17328+23]..[527,17328+26])
                                      Ppat_var "loc" (tools/caml_tex.ml[527,17328+23]..[527,17328+26])
                                    expression (tools/caml_tex.ml[530,17493+6]..[530,17493+21])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[530,17493+15]..[530,17493+17])
                                        Pexp_ident ":=" (tools/caml_tex.ml[530,17493+15]..[530,17493+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[530,17493+6]..[530,17493+14])
                                            Pexp_ident "last_loc" (tools/caml_tex.ml[530,17493+6]..[530,17493+14])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[530,17493+18]..[530,17493+21])
                                            Pexp_ident "loc" (tools/caml_tex.ml[530,17493+18]..[530,17493+21])
                                      ]
                            ]
                            expression (tools/caml_tex.ml[531,17518+4]..[568,18971+15])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (tools/caml_tex.ml[531,17518+8]..[531,17518+17])
                                    Ppat_var "attribute" (tools/caml_tex.ml[531,17518+8]..[531,17518+17])
                                  expression (tools/caml_tex.ml[531,17518+18]..[560,18738+15]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (tools/caml_tex.ml[531,17518+18]..[531,17518+23])
                                      Ppat_var "_this" (tools/caml_tex.ml[531,17518+18]..[531,17518+23])
                                    expression (tools/caml_tex.ml[531,17518+24]..[560,18738+15]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (tools/caml_tex.ml[531,17518+24]..[531,17518+28])
                                        Ppat_var "attr" (tools/caml_tex.ml[531,17518+24]..[531,17518+28])
                                      expression (tools/caml_tex.ml[532,17549+6]..[560,18738+15])
                                        Pexp_letmodule "L" (tools/caml_tex.ml[532,17549+17]..[532,17549+18])
                                        module_expr (tools/caml_tex.ml[532,17549+21]..[532,17549+29])
                                          Pmod_ident "Location" (tools/caml_tex.ml[532,17549+21]..[532,17549+29])
                                        expression (tools/caml_tex.ml[533,17582+6]..[560,18738+15])
                                          Pexp_letmodule "P" (tools/caml_tex.ml[533,17582+17]..[533,17582+18])
                                          module_expr (tools/caml_tex.ml[533,17582+21]..[533,17582+30])
                                            Pmod_ident "Parsetree" (tools/caml_tex.ml[533,17582+21]..[533,17582+30])
                                          expression (tools/caml_tex.ml[534,17616+6]..[560,18738+15])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (tools/caml_tex.ml[534,17616+10]..[534,17616+14])
                                                  Ppat_var "name" (tools/caml_tex.ml[534,17616+10]..[534,17616+14])
                                                expression (tools/caml_tex.ml[534,17616+17]..[534,17616+39])
                                                  Pexp_field
                                                  expression (tools/caml_tex.ml[534,17616+17]..[534,17616+33])
                                                    Pexp_field
                                                    expression (tools/caml_tex.ml[534,17616+17]..[534,17616+21])
                                                      Pexp_ident "attr" (tools/caml_tex.ml[534,17616+17]..[534,17616+21])
                                                    "P.attr_name" (tools/caml_tex.ml[534,17616+22]..[534,17616+33])
                                                  "L.txt" (tools/caml_tex.ml[534,17616+34]..[534,17616+39])
                                            ]
                                            expression (tools/caml_tex.ml[535,17659+6]..[560,18738+15])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (tools/caml_tex.ml[535,17659+10]..[535,17659+13])
                                                    Ppat_var "loc" (tools/caml_tex.ml[535,17659+10]..[535,17659+13])
                                                  expression (tools/caml_tex.ml[535,17659+16]..[535,17659+25])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[535,17659+16]..[535,17659+17])
                                                      Pexp_ident "!" (tools/caml_tex.ml[535,17659+16]..[535,17659+17])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[535,17659+17]..[535,17659+25])
                                                          Pexp_ident "last_loc" (tools/caml_tex.ml[535,17659+17]..[535,17659+25])
                                                    ]
                                              ]
                                              expression (tools/caml_tex.ml[536,17688+6]..[560,18738+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (tools/caml_tex.ml[536,17688+10]..[536,17688+15])
                                                      Ppat_var "start" (tools/caml_tex.ml[536,17688+10]..[536,17688+15])
                                                    expression (tools/caml_tex.ml[536,17688+18]..[536,17688+49])
                                                      Pexp_field
                                                      expression (tools/caml_tex.ml[536,17688+18]..[536,17688+33])
                                                        Pexp_field
                                                        expression (tools/caml_tex.ml[536,17688+18]..[536,17688+21])
                                                          Pexp_ident "loc" (tools/caml_tex.ml[536,17688+18]..[536,17688+21])
                                                        "L.loc_start" (tools/caml_tex.ml[536,17688+22]..[536,17688+33])
                                                      "Lexing.pos_cnum" (tools/caml_tex.ml[536,17688+34]..[536,17688+49])
                                                ]
                                                expression (tools/caml_tex.ml[537,17741+6]..[560,18738+15])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (tools/caml_tex.ml[537,17741+10]..[537,17741+20])
                                                        Ppat_var "attr_start" (tools/caml_tex.ml[537,17741+10]..[537,17741+20])
                                                      expression (tools/caml_tex.ml[537,17741+23]..[537,17741+66])
                                                        Pexp_field
                                                        expression (tools/caml_tex.ml[537,17741+23]..[537,17741+50])
                                                          Pexp_field
                                                          expression (tools/caml_tex.ml[537,17741+23]..[537,17741+38])
                                                            Pexp_field
                                                            expression (tools/caml_tex.ml[537,17741+23]..[537,17741+27])
                                                              Pexp_ident "attr" (tools/caml_tex.ml[537,17741+23]..[537,17741+27])
                                                            "P.attr_loc" (tools/caml_tex.ml[537,17741+28]..[537,17741+38])
                                                          "L.loc_start" (tools/caml_tex.ml[537,17741+39]..[537,17741+50])
                                                        "Lexing.pos_cnum" (tools/caml_tex.ml[537,17741+51]..[537,17741+66])
                                                  ]
                                                  expression (tools/caml_tex.ml[538,17811+6]..[560,18738+15])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (tools/caml_tex.ml[538,17811+10]..[538,17811+19])
                                                          Ppat_var "attr_stop" (tools/caml_tex.ml[538,17811+10]..[538,17811+19])
                                                        expression (tools/caml_tex.ml[538,17811+22]..[538,17811+63])
                                                          Pexp_field
                                                          expression (tools/caml_tex.ml[538,17811+22]..[538,17811+47])
                                                            Pexp_field
                                                            expression (tools/caml_tex.ml[538,17811+22]..[538,17811+37])
                                                              Pexp_field
                                                              expression (tools/caml_tex.ml[538,17811+22]..[538,17811+26])
                                                                Pexp_ident "attr" (tools/caml_tex.ml[538,17811+22]..[538,17811+26])
                                                              "P.attr_loc" (tools/caml_tex.ml[538,17811+27]..[538,17811+37])
                                                            "L.loc_end" (tools/caml_tex.ml[538,17811+38]..[538,17811+47])
                                                          "Lexing.pos_cnum" (tools/caml_tex.ml[538,17811+48]..[538,17811+63])
                                                    ]
                                                    expression (tools/caml_tex.ml[539,17878+6]..[560,18738+15])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (tools/caml_tex.ml[539,17878+10]..[539,17878+14])
                                                            Ppat_var "stop" (tools/caml_tex.ml[539,17878+10]..[539,17878+14])
                                                          expression (tools/caml_tex.ml[539,17878+17]..[539,17878+60])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[539,17878+17]..[539,17878+20])
                                                              Pexp_ident "max" (tools/caml_tex.ml[539,17878+17]..[539,17878+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[539,17878+21]..[539,17878+50])
                                                                  Pexp_field
                                                                  expression (tools/caml_tex.ml[539,17878+21]..[539,17878+34])
                                                                    Pexp_field
                                                                    expression (tools/caml_tex.ml[539,17878+21]..[539,17878+24])
                                                                      Pexp_ident "loc" (tools/caml_tex.ml[539,17878+21]..[539,17878+24])
                                                                    "L.loc_end" (tools/caml_tex.ml[539,17878+25]..[539,17878+34])
                                                                  "Lexing.pos_cnum" (tools/caml_tex.ml[539,17878+35]..[539,17878+50])
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[539,17878+51]..[539,17878+60])
                                                                  Pexp_ident "attr_stop" (tools/caml_tex.ml[539,17878+51]..[539,17878+60])
                                                            ]
                                                      ]
                                                      expression (tools/caml_tex.ml[540,17943+6]..[560,18738+15])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (tools/caml_tex.ml[540,17943+10]..[540,17943+22])
                                                              Ppat_var "check_nested" (tools/caml_tex.ml[540,17943+10]..[540,17943+22])
                                                            expression (tools/caml_tex.ml[540,17943+23]..[542,18072+20]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (tools/caml_tex.ml[540,17943+23]..[540,17943+25])
                                                                Ppat_construct "()" (tools/caml_tex.ml[540,17943+23]..[540,17943+25])
                                                                None
                                                              expression (tools/caml_tex.ml[540,17943+28]..[542,18072+20])
                                                                Pexp_match
                                                                expression (tools/caml_tex.ml[540,17943+34]..[540,17943+44])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[540,17943+34]..[540,17943+35])
                                                                    Pexp_ident "!" (tools/caml_tex.ml[540,17943+34]..[540,17943+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[540,17943+35]..[540,17943+44])
Pexp_ident "left_mark" (tools/caml_tex.ml[540,17943+35]..[540,17943+44])
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (tools/caml_tex.ml[541,17993+10]..[541,17993+24])
                                                                      Ppat_construct "Some" (tools/caml_tex.ml[541,17993+10]..[541,17993+14])
                                                                      Some
[]
pattern (tools/caml_tex.ml[541,17993+15]..[541,17993+24])
  Ppat_tuple
  [
    pattern (tools/caml_tex.ml[541,17993+16]..[541,17993+21])
      Ppat_var "first" (tools/caml_tex.ml[541,17993+16]..[541,17993+21])
    pattern (tools/caml_tex.ml[541,17993+22]..[541,17993+23])
      Ppat_any
  ]
                                                                    expression (tools/caml_tex.ml[541,17993+28]..[541,17993+78])
                                                                      Pexp_apply
                                                                      expression (tools/caml_tex.ml[541,17993+28]..[541,17993+33])
Pexp_ident "raise" (tools/caml_tex.ml[541,17993+28]..[541,17993+33])
                                                                      [
<arg>
Nolabel
  expression (tools/caml_tex.ml[541,17993+34]..[541,17993+78])
    Pexp_construct "Nested_ellipses" (tools/caml_tex.ml[541,17993+35]..[541,17993+50])
    Some
      expression (tools/caml_tex.ml[541,17993+51]..[541,17993+77])
        Pexp_record
        [
          "first" (tools/caml_tex.ml[541,17993+52]..[541,17993+57]) ghost
            expression (tools/caml_tex.ml[541,17993+52]..[541,17993+57])
              Pexp_ident "first" (tools/caml_tex.ml[541,17993+52]..[541,17993+57])
          "second" (tools/caml_tex.ml[541,17993+59]..[541,17993+65])
            expression (tools/caml_tex.ml[541,17993+66]..[541,17993+76])
              Pexp_ident "attr_start" (tools/caml_tex.ml[541,17993+66]..[541,17993+76])
        ]
        None
                                                                      ]
                                                                  <case>
                                                                    pattern (tools/caml_tex.ml[542,18072+10]..[542,18072+14])
                                                                      Ppat_construct "None" (tools/caml_tex.ml[542,18072+10]..[542,18072+14])
                                                                      None
                                                                    expression (tools/caml_tex.ml[542,18072+18]..[542,18072+20])
                                                                      Pexp_construct "()" (tools/caml_tex.ml[542,18072+18]..[542,18072+20])
                                                                      None
                                                                ]
                                                        ]
                                                        expression (tools/caml_tex.ml[543,18096+6]..[560,18738+15])
                                                          Pexp_match
                                                          expression (tools/caml_tex.ml[543,18096+12]..[543,18096+16])
                                                            Pexp_ident "name" (tools/caml_tex.ml[543,18096+12]..[543,18096+16])
                                                          [
                                                            <case>
                                                              pattern (tools/caml_tex.ml[544,18118+8]..[544,18118+18])
                                                                Ppat_constant PConst_string("ellipsis",(tools/caml_tex.ml[544,18118+9]..[544,18118+17]),None)
                                                              expression (tools/caml_tex.ml[545,18140+10]..[548,18248+26])
                                                                Pexp_sequence
                                                                expression (tools/caml_tex.ml[545,18140+10]..[545,18140+25])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[545,18140+10]..[545,18140+22])
                                                                    Pexp_ident "check_nested" (tools/caml_tex.ml[545,18140+10]..[545,18140+22])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[545,18140+23]..[545,18140+25])
Pexp_construct "()" (tools/caml_tex.ml[545,18140+23]..[545,18140+25])
None
                                                                  ]
                                                                expression (tools/caml_tex.ml[546,18167+10]..[548,18248+26])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[546,18167+21]..[546,18167+23])
                                                                    Pexp_ident ":=" (tools/caml_tex.ml[546,18167+21]..[546,18167+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[546,18167+10]..[546,18167+20])
Pexp_ident "transforms" (tools/caml_tex.ml[546,18167+10]..[546,18167+20])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[547,18191+12]..[548,18248+26])
Pexp_construct "::" (tools/caml_tex.ml[548,18248+12]..[548,18248+14])
Some
  expression (tools/caml_tex.ml[547,18191+12]..[548,18248+26]) ghost
    Pexp_tuple
    [
      expression (tools/caml_tex.ml[547,18191+12]..[547,18191+56])
        Pexp_record
        [
          "Text_transform.kind" (tools/caml_tex.ml[547,18191+13]..[547,18191+32])
            expression (tools/caml_tex.ml[547,18191+33]..[547,18191+41])
              Pexp_construct "Ellipsis" (tools/caml_tex.ml[547,18191+33]..[547,18191+41])
              None
          "start" (tools/caml_tex.ml[547,18191+43]..[547,18191+48]) ghost
            expression (tools/caml_tex.ml[547,18191+43]..[547,18191+48])
              Pexp_ident "start" (tools/caml_tex.ml[547,18191+43]..[547,18191+48])
          "stop" (tools/caml_tex.ml[547,18191+50]..[547,18191+54]) ghost
            expression (tools/caml_tex.ml[547,18191+50]..[547,18191+54])
              Pexp_ident "stop" (tools/caml_tex.ml[547,18191+50]..[547,18191+54])
        ]
        None
      expression (tools/caml_tex.ml[548,18248+15]..[548,18248+26])
        Pexp_apply
        expression (tools/caml_tex.ml[548,18248+15]..[548,18248+16])
          Pexp_ident "!" (tools/caml_tex.ml[548,18248+15]..[548,18248+16])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[548,18248+16]..[548,18248+26])
              Pexp_ident "transforms" (tools/caml_tex.ml[548,18248+16]..[548,18248+26])
        ]
    ]
                                                                  ]
                                                            <case>
                                                              pattern (tools/caml_tex.ml[549,18275+8]..[549,18275+24])
                                                                Ppat_constant PConst_string("ellipsis.start",(tools/caml_tex.ml[549,18275+9]..[549,18275+23]),None)
                                                              expression (tools/caml_tex.ml[550,18303+10]..[551,18330+41])
                                                                Pexp_sequence
                                                                expression (tools/caml_tex.ml[550,18303+10]..[550,18303+25])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[550,18303+10]..[550,18303+22])
                                                                    Pexp_ident "check_nested" (tools/caml_tex.ml[550,18303+10]..[550,18303+22])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[550,18303+23]..[550,18303+25])
Pexp_construct "()" (tools/caml_tex.ml[550,18303+23]..[550,18303+25])
None
                                                                  ]
                                                                expression (tools/caml_tex.ml[551,18330+10]..[551,18330+41])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[551,18330+20]..[551,18330+22])
                                                                    Pexp_ident ":=" (tools/caml_tex.ml[551,18330+20]..[551,18330+22])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[551,18330+10]..[551,18330+19])
Pexp_ident "left_mark" (tools/caml_tex.ml[551,18330+10]..[551,18330+19])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[551,18330+23]..[551,18330+41])
Pexp_construct "Some" (tools/caml_tex.ml[551,18330+23]..[551,18330+27])
Some
  expression (tools/caml_tex.ml[551,18330+28]..[551,18330+41])
    Pexp_tuple
    [
      expression (tools/caml_tex.ml[551,18330+29]..[551,18330+34])
        Pexp_ident "start" (tools/caml_tex.ml[551,18330+29]..[551,18330+34])
      expression (tools/caml_tex.ml[551,18330+36]..[551,18330+40])
        Pexp_ident "stop" (tools/caml_tex.ml[551,18330+36]..[551,18330+40])
    ]
                                                                  ]
                                                            <case>
                                                              pattern (tools/caml_tex.ml[552,18372+8]..[552,18372+23])
                                                                Ppat_constant PConst_string("ellipsis.stop",(tools/caml_tex.ml[552,18372+9]..[552,18372+22]),None)
                                                              expression (tools/caml_tex.ml[553,18399+10]..[559,18724+13])
                                                                Pexp_match
                                                                expression (tools/caml_tex.ml[553,18399+22]..[553,18399+32])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[553,18399+22]..[553,18399+23])
                                                                    Pexp_ident "!" (tools/caml_tex.ml[553,18399+22]..[553,18399+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[553,18399+23]..[553,18399+32])
Pexp_ident "left_mark" (tools/caml_tex.ml[553,18399+23]..[553,18399+32])
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (tools/caml_tex.ml[554,18437+12]..[554,18437+16])
                                                                      Ppat_construct "None" (tools/caml_tex.ml[554,18437+12]..[554,18437+16])
                                                                      None
                                                                    expression (tools/caml_tex.ml[554,18437+20]..[554,18437+74])
                                                                      Pexp_apply
                                                                      expression (tools/caml_tex.ml[554,18437+20]..[554,18437+25])
Pexp_ident "raise" (tools/caml_tex.ml[554,18437+20]..[554,18437+25])
                                                                      [
<arg>
Nolabel
  expression (tools/caml_tex.ml[554,18437+26]..[554,18437+74])
    Pexp_construct "Unmatched_ellipsis" (tools/caml_tex.ml[554,18437+27]..[554,18437+45])
    Some
      expression (tools/caml_tex.ml[554,18437+46]..[554,18437+73])
        Pexp_record
        [
          "kind" (tools/caml_tex.ml[554,18437+47]..[554,18437+51])
            expression (tools/caml_tex.ml[554,18437+52]..[554,18437+59])
              Pexp_constant PConst_string("right",(tools/caml_tex.ml[554,18437+53]..[554,18437+58]),None)
          "start" (tools/caml_tex.ml[554,18437+61]..[554,18437+66]) ghost
            expression (tools/caml_tex.ml[554,18437+61]..[554,18437+66])
              Pexp_ident "start" (tools/caml_tex.ml[554,18437+61]..[554,18437+66])
          "stop" (tools/caml_tex.ml[554,18437+68]..[554,18437+72]) ghost
            expression (tools/caml_tex.ml[554,18437+68]..[554,18437+72])
              Pexp_ident "stop" (tools/caml_tex.ml[554,18437+68]..[554,18437+72])
        ]
        None
                                                                      ]
                                                                  <case>
                                                                    pattern (tools/caml_tex.ml[555,18512+12]..[555,18512+33])
                                                                      Ppat_construct "Some" (tools/caml_tex.ml[555,18512+12]..[555,18512+16])
                                                                      Some
[]
pattern (tools/caml_tex.ml[555,18512+17]..[555,18512+33])
  Ppat_tuple
  [
    pattern (tools/caml_tex.ml[555,18512+18]..[555,18512+24])
      Ppat_var "start'" (tools/caml_tex.ml[555,18512+18]..[555,18512+24])
    pattern (tools/caml_tex.ml[555,18512+26]..[555,18512+31])
      Ppat_var "stop'" (tools/caml_tex.ml[555,18512+26]..[555,18512+31])
  ]
                                                                    expression (tools/caml_tex.ml[556,18549+14]..[558,18692+31])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (tools/caml_tex.ml[556,18549+18]..[556,18549+29])
    Ppat_tuple
    [
      pattern (tools/caml_tex.ml[556,18549+18]..[556,18549+23])
        Ppat_var "start" (tools/caml_tex.ml[556,18549+18]..[556,18549+23])
      pattern (tools/caml_tex.ml[556,18549+25]..[556,18549+29])
        Ppat_var "stop" (tools/caml_tex.ml[556,18549+25]..[556,18549+29])
    ]
  expression (tools/caml_tex.ml[556,18549+32]..[556,18549+64])
    Pexp_tuple
    [
      expression (tools/caml_tex.ml[556,18549+32]..[556,18549+48])
        Pexp_apply
        expression (tools/caml_tex.ml[556,18549+32]..[556,18549+35])
          Pexp_ident "min" (tools/caml_tex.ml[556,18549+32]..[556,18549+35])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[556,18549+36]..[556,18549+41])
              Pexp_ident "start" (tools/caml_tex.ml[556,18549+36]..[556,18549+41])
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[556,18549+42]..[556,18549+48])
              Pexp_ident "start'" (tools/caml_tex.ml[556,18549+42]..[556,18549+48])
        ]
      expression (tools/caml_tex.ml[556,18549+50]..[556,18549+64])
        Pexp_apply
        expression (tools/caml_tex.ml[556,18549+50]..[556,18549+53])
          Pexp_ident "max" (tools/caml_tex.ml[556,18549+50]..[556,18549+53])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[556,18549+54]..[556,18549+58])
              Pexp_ident "stop" (tools/caml_tex.ml[556,18549+54]..[556,18549+58])
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[556,18549+59]..[556,18549+64])
              Pexp_ident "stop'" (tools/caml_tex.ml[556,18549+59]..[556,18549+64])
        ]
    ]
                                                                      ]
                                                                      expression (tools/caml_tex.ml[557,18617+14]..[558,18692+31])
Pexp_sequence
expression (tools/caml_tex.ml[557,18617+14]..[557,18617+73])
  Pexp_apply
  expression (tools/caml_tex.ml[557,18617+25]..[557,18617+27])
    Pexp_ident ":=" (tools/caml_tex.ml[557,18617+25]..[557,18617+27])
  [
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[557,18617+14]..[557,18617+24])
        Pexp_ident "transforms" (tools/caml_tex.ml[557,18617+14]..[557,18617+24])
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[557,18617+28]..[557,18617+73])
        Pexp_construct "::" (tools/caml_tex.ml[557,18617+59]..[557,18617+61])
        Some
          expression (tools/caml_tex.ml[557,18617+28]..[557,18617+73]) ghost
            Pexp_tuple
            [
              expression (tools/caml_tex.ml[557,18617+28]..[557,18617+58])
                Pexp_record
                [
                  "kind" (tools/caml_tex.ml[557,18617+29]..[557,18617+33])
                    expression (tools/caml_tex.ml[557,18617+34]..[557,18617+42])
                      Pexp_construct "Ellipsis" (tools/caml_tex.ml[557,18617+34]..[557,18617+42])
                      None
                  "start" (tools/caml_tex.ml[557,18617+44]..[557,18617+49]) ghost
                    expression (tools/caml_tex.ml[557,18617+44]..[557,18617+49])
                      Pexp_ident "start" (tools/caml_tex.ml[557,18617+44]..[557,18617+49])
                  "stop" (tools/caml_tex.ml[557,18617+52]..[557,18617+56]) ghost
                    expression (tools/caml_tex.ml[557,18617+52]..[557,18617+56])
                      Pexp_ident "stop" (tools/caml_tex.ml[557,18617+52]..[557,18617+56])
                ]
                None
              expression (tools/caml_tex.ml[557,18617+62]..[557,18617+73])
                Pexp_apply
                expression (tools/caml_tex.ml[557,18617+62]..[557,18617+63])
                  Pexp_ident "!" (tools/caml_tex.ml[557,18617+62]..[557,18617+63])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[557,18617+63]..[557,18617+73])
                      Pexp_ident "transforms" (tools/caml_tex.ml[557,18617+63]..[557,18617+73])
                ]
            ]
  ]
expression (tools/caml_tex.ml[558,18692+14]..[558,18692+31])
  Pexp_apply
  expression (tools/caml_tex.ml[558,18692+24]..[558,18692+26])
    Pexp_ident ":=" (tools/caml_tex.ml[558,18692+24]..[558,18692+26])
  [
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[558,18692+14]..[558,18692+23])
        Pexp_ident "left_mark" (tools/caml_tex.ml[558,18692+14]..[558,18692+23])
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[558,18692+27]..[558,18692+31])
        Pexp_construct "None" (tools/caml_tex.ml[558,18692+27]..[558,18692+31])
        None
  ]
                                                                ]
                                                            <case>
                                                              pattern (tools/caml_tex.ml[560,18738+8]..[560,18738+9])
                                                                Ppat_any
                                                              expression (tools/caml_tex.ml[560,18738+13]..[560,18738+15])
                                                                Pexp_construct "()" (tools/caml_tex.ml[560,18738+13]..[560,18738+15])
                                                                None
                                                          ]
                              ]
                              expression (tools/caml_tex.ml[562,18761+4]..[568,18971+15])
                                Pexp_sequence
                                expression (tools/caml_tex.ml[562,18761+4]..[562,18761+64])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[562,18761+4]..[562,18761+5])
                                    Pexp_ident "f" (tools/caml_tex.ml[562,18761+4]..[562,18761+5])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[562,18761+6]..[562,18761+62])
                                        Pexp_record
                                        [
                                          "location" (tools/caml_tex.ml[562,18761+42]..[562,18761+50]) ghost
                                            expression (tools/caml_tex.ml[562,18761+42]..[562,18761+50])
                                              Pexp_ident "location" (tools/caml_tex.ml[562,18761+42]..[562,18761+50])
                                          "attribute" (tools/caml_tex.ml[562,18761+52]..[562,18761+61]) ghost
                                            expression (tools/caml_tex.ml[562,18761+52]..[562,18761+61])
                                              Pexp_ident "attribute" (tools/caml_tex.ml[562,18761+52]..[562,18761+61])
                                        ]
                                        Some
                                          expression (tools/caml_tex.ml[562,18761+7]..[562,18761+36])
                                            Pexp_ident "Ast_iterator.default_iterator" (tools/caml_tex.ml[562,18761+7]..[562,18761+36])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[562,18761+63]..[562,18761+64])
                                        Pexp_ident "x" (tools/caml_tex.ml[562,18761+63]..[562,18761+64])
                                  ]
                                expression (tools/caml_tex.ml[563,18827+4]..[568,18971+15])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[563,18827+4]..[567,18964+5])
                                    Pexp_match
                                    expression (tools/caml_tex.ml[563,18827+11]..[563,18827+21])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[563,18827+11]..[563,18827+12])
                                        Pexp_ident "!" (tools/caml_tex.ml[563,18827+11]..[563,18827+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[563,18827+12]..[563,18827+21])
                                            Pexp_ident "left_mark" (tools/caml_tex.ml[563,18827+12]..[563,18827+21])
                                      ]
                                    [
                                      <case>
                                        pattern (tools/caml_tex.ml[564,18854+7]..[564,18854+11])
                                          Ppat_construct "None" (tools/caml_tex.ml[564,18854+7]..[564,18854+11])
                                          None
                                        expression (tools/caml_tex.ml[564,18854+15]..[564,18854+17])
                                          Pexp_construct "()" (tools/caml_tex.ml[564,18854+15]..[564,18854+17])
                                          None
                                      <case>
                                        pattern (tools/caml_tex.ml[565,18872+7]..[565,18872+24])
                                          Ppat_construct "Some" (tools/caml_tex.ml[565,18872+7]..[565,18872+11])
                                          Some
                                            []
                                            pattern (tools/caml_tex.ml[565,18872+12]..[565,18872+24])
                                              Ppat_tuple
                                              [
                                                pattern (tools/caml_tex.ml[565,18872+13]..[565,18872+18])
                                                  Ppat_var "start" (tools/caml_tex.ml[565,18872+13]..[565,18872+18])
                                                pattern (tools/caml_tex.ml[565,18872+19]..[565,18872+23])
                                                  Ppat_var "stop" (tools/caml_tex.ml[565,18872+19]..[565,18872+23])
                                              ]
                                        expression (tools/caml_tex.ml[566,18900+9]..[566,18900+63])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[566,18900+9]..[566,18900+14])
                                            Pexp_ident "raise" (tools/caml_tex.ml[566,18900+9]..[566,18900+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[566,18900+15]..[566,18900+63])
                                                Pexp_construct "Unmatched_ellipsis" (tools/caml_tex.ml[566,18900+16]..[566,18900+34])
                                                Some
                                                  expression (tools/caml_tex.ml[566,18900+35]..[566,18900+62])
                                                    Pexp_record
                                                    [
                                                      "kind" (tools/caml_tex.ml[566,18900+36]..[566,18900+40])
                                                        expression (tools/caml_tex.ml[566,18900+41]..[566,18900+47])
                                                          Pexp_constant PConst_string("left",(tools/caml_tex.ml[566,18900+42]..[566,18900+46]),None)
                                                      "start" (tools/caml_tex.ml[566,18900+49]..[566,18900+54]) ghost
                                                        expression (tools/caml_tex.ml[566,18900+49]..[566,18900+54])
                                                          Pexp_ident "start" (tools/caml_tex.ml[566,18900+49]..[566,18900+54])
                                                      "stop" (tools/caml_tex.ml[566,18900+56]..[566,18900+60]) ghost
                                                        expression (tools/caml_tex.ml[566,18900+56]..[566,18900+60])
                                                          Pexp_ident "stop" (tools/caml_tex.ml[566,18900+56]..[566,18900+60])
                                                    ]
                                                    None
                                          ]
                                    ]
                                  expression (tools/caml_tex.ml[568,18971+4]..[568,18971+15])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[568,18971+4]..[568,18971+5])
                                      Pexp_ident "!" (tools/caml_tex.ml[568,18971+4]..[568,18971+5])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[568,18971+5]..[568,18971+15])
                                          Pexp_ident "transforms" (tools/caml_tex.ml[568,18971+5]..[568,18971+15])
                                    ]
            ]
          structure_item (tools/caml_tex.ml[570,18988+2]..[572,19082+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[570,18988+6]..[570,18988+10])
                  Ppat_var "find" (tools/caml_tex.ml[570,18988+6]..[570,18988+10])
                expression (tools/caml_tex.ml[570,18988+13]..[572,19082+22])
                  Pexp_function
                  [
                    <case>
                      pattern (tools/caml_tex.ml[571,19010+6]..[571,19010+28])
                        Ppat_construct "Parsetree.Ptop_def" (tools/caml_tex.ml[571,19010+6]..[571,19010+24])
                        Some
                          []
                          pattern (tools/caml_tex.ml[571,19010+25]..[571,19010+28])
                            Ppat_var "ast" (tools/caml_tex.ml[571,19010+25]..[571,19010+28])
                      expression (tools/caml_tex.ml[571,19010+32]..[571,19010+71])
                        Pexp_apply
                        expression (tools/caml_tex.ml[571,19010+32]..[571,19010+39])
                          Pexp_ident "extract" (tools/caml_tex.ml[571,19010+32]..[571,19010+39])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[571,19010+40]..[571,19010+67])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (tools/caml_tex.ml[571,19010+45]..[571,19010+47])
                                Ppat_var "it" (tools/caml_tex.ml[571,19010+45]..[571,19010+47])
                              expression (tools/caml_tex.ml[571,19010+51]..[571,19010+66])
                                Pexp_apply
                                expression (tools/caml_tex.ml[571,19010+51]..[571,19010+63])
                                  Pexp_field
                                  expression (tools/caml_tex.ml[571,19010+51]..[571,19010+53])
                                    Pexp_ident "it" (tools/caml_tex.ml[571,19010+51]..[571,19010+53])
                                  "structure" (tools/caml_tex.ml[571,19010+54]..[571,19010+63])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[571,19010+64]..[571,19010+66])
                                      Pexp_ident "it" (tools/caml_tex.ml[571,19010+64]..[571,19010+66])
                                ]
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[571,19010+68]..[571,19010+71])
                              Pexp_ident "ast" (tools/caml_tex.ml[571,19010+68]..[571,19010+71])
                        ]
                    <case>
                      pattern (tools/caml_tex.ml[572,19082+6]..[572,19082+16])
                        Ppat_construct "Ptop_dir" (tools/caml_tex.ml[572,19082+6]..[572,19082+14])
                        Some
                          []
                          pattern (tools/caml_tex.ml[572,19082+15]..[572,19082+16])
                            Ppat_any
                      expression (tools/caml_tex.ml[572,19082+20]..[572,19082+22])
                        Pexp_construct "[]" (tools/caml_tex.ml[572,19082+20]..[572,19082+22])
                        None
                  ]
            ]
        ]
  structure_item (tools/caml_tex.ml[576,19111+0]..[581,19272+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[576,19111+4]..[576,19111+16])
          Ppat_var "format_input" (tools/caml_tex.ml[576,19111+4]..[576,19111+16])
        expression (tools/caml_tex.ml[576,19111+17]..[581,19272+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[576,19111+17]..[576,19111+21])
            Ppat_var "mode" (tools/caml_tex.ml[576,19111+17]..[576,19111+21])
          expression (tools/caml_tex.ml[576,19111+22]..[581,19272+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (tools/caml_tex.ml[576,19111+22]..[576,19111+23])
              Ppat_var "s" (tools/caml_tex.ml[576,19111+22]..[576,19111+23])
            expression (tools/caml_tex.ml[576,19111+27]..[581,19272+68])
              Pexp_match
              expression (tools/caml_tex.ml[576,19111+33]..[576,19111+37])
                Pexp_ident "mode" (tools/caml_tex.ml[576,19111+33]..[576,19111+37])
              [
                <case>
                  pattern (tools/caml_tex.ml[577,19154+4]..[577,19154+24])
                    Ppat_or
                    pattern (tools/caml_tex.ml[577,19154+4]..[577,19154+12])
                      Ppat_construct "Verbatim" (tools/caml_tex.ml[577,19154+4]..[577,19154+12])
                      None
                    pattern (tools/caml_tex.ml[577,19154+15]..[577,19154+24])
                      Ppat_construct "Signature" (tools/caml_tex.ml[577,19154+15]..[577,19154+24])
                      None
                  expression (tools/caml_tex.ml[577,19154+28]..[577,19154+29])
                    Pexp_ident "s" (tools/caml_tex.ml[577,19154+28]..[577,19154+29])
                <case>
                  pattern (tools/caml_tex.ml[578,19184+4]..[578,19184+12])
                    Ppat_construct "Toplevel" (tools/caml_tex.ml[578,19184+4]..[578,19184+12])
                    None
                  expression (tools/caml_tex.ml[579,19200+6]..[581,19272+68])
                    Pexp_match
                    expression (tools/caml_tex.ml[579,19200+12]..[579,19200+39])
                      Pexp_apply
                      expression (tools/caml_tex.ml[579,19200+12]..[579,19200+32])
                        Pexp_ident "String.split_on_char" (tools/caml_tex.ml[579,19200+12]..[579,19200+32])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[579,19200+33]..[579,19200+37])
                            Pexp_constant PConst_char 0a
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[579,19200+38]..[579,19200+39])
                            Pexp_ident "s" (tools/caml_tex.ml[579,19200+38]..[579,19200+39])
                      ]
                    [
                      <case>
                        pattern (tools/caml_tex.ml[580,19245+8]..[580,19245+10])
                          Ppat_construct "[]" (tools/caml_tex.ml[580,19245+8]..[580,19245+10])
                          None
                        expression (tools/caml_tex.ml[580,19245+14]..[580,19245+26])
                          Pexp_assert
                          expression (tools/caml_tex.ml[580,19245+21]..[580,19245+26])
                            Pexp_construct "false" (tools/caml_tex.ml[580,19245+21]..[580,19245+26])
                            None
                      <case>
                        pattern (tools/caml_tex.ml[581,19272+8]..[581,19272+14])
                          Ppat_construct "::" (tools/caml_tex.ml[581,19272+10]..[581,19272+12])
                          Some
                            []
                            pattern (tools/caml_tex.ml[581,19272+8]..[581,19272+14]) ghost
                              Ppat_tuple
                              [
                                pattern (tools/caml_tex.ml[581,19272+8]..[581,19272+9])
                                  Ppat_var "a" (tools/caml_tex.ml[581,19272+8]..[581,19272+9])
                                pattern (tools/caml_tex.ml[581,19272+13]..[581,19272+14])
                                  Ppat_var "q" (tools/caml_tex.ml[581,19272+13]..[581,19272+14])
                              ]
                        expression (tools/caml_tex.ml[581,19272+18]..[581,19272+68])
                          Pexp_apply
                          expression (tools/caml_tex.ml[581,19272+18]..[581,19272+31])
                            Pexp_ident "String.concat" (tools/caml_tex.ml[581,19272+18]..[581,19272+31])
                          [
                            <arg>
                            Labelled "sep"
                              expression (tools/caml_tex.ml[581,19272+37]..[581,19272+43])
                                Pexp_constant PConst_string("\n  ",(tools/caml_tex.ml[581,19272+38]..[581,19272+42]),None)
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[581,19272+44]..[581,19272+68])
                                Pexp_construct "::" (tools/caml_tex.ml[581,19272+64]..[581,19272+66])
                                Some
                                  expression (tools/caml_tex.ml[581,19272+45]..[581,19272+67]) ghost
                                    Pexp_tuple
                                    [
                                      expression (tools/caml_tex.ml[581,19272+45]..[581,19272+64])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[581,19272+61]..[581,19272+62])
                                          Pexp_ident "^" (tools/caml_tex.ml[581,19272+61]..[581,19272+62])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[581,19272+46]..[581,19272+61])
                                              Pexp_ident "toplevel_prompt" (tools/caml_tex.ml[581,19272+46]..[581,19272+61])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[581,19272+62]..[581,19272+63])
                                              Pexp_ident "a" (tools/caml_tex.ml[581,19272+62]..[581,19272+63])
                                        ]
                                      expression (tools/caml_tex.ml[581,19272+66]..[581,19272+67])
                                        Pexp_ident "q" (tools/caml_tex.ml[581,19272+66]..[581,19272+67])
                                    ]
                          ]
                    ]
              ]
    ]
  structure_item (tools/caml_tex.ml[583,19342+0]..[774,27292+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[583,19342+4]..[583,19342+16])
          Ppat_var "process_file" (tools/caml_tex.ml[583,19342+4]..[583,19342+16])
        expression (tools/caml_tex.ml[583,19342+17]..[774,27292+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (tools/caml_tex.ml[583,19342+17]..[583,19342+21])
            Ppat_var "file" (tools/caml_tex.ml[583,19342+17]..[583,19342+21])
          expression (tools/caml_tex.ml[584,19366+2]..[774,27292+20])
            Pexp_let Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[584,19366+6]..[584,19366+8])
                  Ppat_var "ic" (tools/caml_tex.ml[584,19366+6]..[584,19366+8])
                expression (tools/caml_tex.ml[584,19366+11]..[584,19366+71])
                  Pexp_try
                  expression (tools/caml_tex.ml[584,19366+15]..[584,19366+27])
                    Pexp_apply
                    expression (tools/caml_tex.ml[584,19366+15]..[584,19366+22])
                      Pexp_ident "open_in" (tools/caml_tex.ml[584,19366+15]..[584,19366+22])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[584,19366+23]..[584,19366+27])
                          Pexp_ident "file" (tools/caml_tex.ml[584,19366+23]..[584,19366+27])
                    ]
                  [
                    <case>
                      pattern (tools/caml_tex.ml[584,19366+33]..[584,19366+34])
                        Ppat_any
                      expression (tools/caml_tex.ml[584,19366+38]..[584,19366+71])
                        Pexp_apply
                        expression (tools/caml_tex.ml[584,19366+38]..[584,19366+46])
                          Pexp_ident "failwith" (tools/caml_tex.ml[584,19366+38]..[584,19366+46])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[584,19366+47]..[584,19366+71])
                              Pexp_constant PConst_string("Cannot read input file",(tools/caml_tex.ml[584,19366+48]..[584,19366+70]),None)
                        ]
                  ]
            ]
            expression (tools/caml_tex.ml[585,19441+2]..[774,27292+20])
              Pexp_let Nonrec
              [
                <def>
                  pattern (tools/caml_tex.ml[585,19441+6]..[585,19441+18])
                    Ppat_var "phrase_start" (tools/caml_tex.ml[585,19441+6]..[585,19441+18])
                  expression (tools/caml_tex.ml[585,19441+21]..[585,19441+26])
                    Pexp_apply
                    expression (tools/caml_tex.ml[585,19441+21]..[585,19441+24])
                      Pexp_ident "ref" (tools/caml_tex.ml[585,19441+21]..[585,19441+24])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[585,19441+25]..[585,19441+26])
                          Pexp_constant PConst_int (1,None)
                    ]
                <def>
                  pattern (tools/caml_tex.ml[585,19441+31]..[585,19441+42])
                    Ppat_var "phrase_stop" (tools/caml_tex.ml[585,19441+31]..[585,19441+42])
                  expression (tools/caml_tex.ml[585,19441+45]..[585,19441+50])
                    Pexp_apply
                    expression (tools/caml_tex.ml[585,19441+45]..[585,19441+48])
                      Pexp_ident "ref" (tools/caml_tex.ml[585,19441+45]..[585,19441+48])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[585,19441+49]..[585,19441+50])
                          Pexp_constant PConst_int (1,None)
                    ]
              ]
              expression (tools/caml_tex.ml[586,19495+2]..[774,27292+20])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (tools/caml_tex.ml[586,19495+6]..[586,19495+23])
                      Ppat_var "incr_phrase_start" (tools/caml_tex.ml[586,19495+6]..[586,19495+23])
                    expression (tools/caml_tex.ml[586,19495+24]..[588,19547+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[586,19495+24]..[586,19495+26])
                        Ppat_construct "()" (tools/caml_tex.ml[586,19495+24]..[586,19495+26])
                        None
                      expression (tools/caml_tex.ml[587,19524+4]..[588,19547+32])
                        Pexp_sequence
                        expression (tools/caml_tex.ml[587,19524+4]..[587,19524+21])
                          Pexp_apply
                          expression (tools/caml_tex.ml[587,19524+4]..[587,19524+8])
                            Pexp_ident "incr" (tools/caml_tex.ml[587,19524+4]..[587,19524+8])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[587,19524+9]..[587,19524+21])
                                Pexp_ident "phrase_start" (tools/caml_tex.ml[587,19524+9]..[587,19524+21])
                          ]
                        expression (tools/caml_tex.ml[588,19547+4]..[588,19547+32])
                          Pexp_apply
                          expression (tools/caml_tex.ml[588,19547+16]..[588,19547+18])
                            Pexp_ident ":=" (tools/caml_tex.ml[588,19547+16]..[588,19547+18])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[588,19547+4]..[588,19547+15])
                                Pexp_ident "phrase_stop" (tools/caml_tex.ml[588,19547+4]..[588,19547+15])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[588,19547+19]..[588,19547+32])
                                Pexp_apply
                                expression (tools/caml_tex.ml[588,19547+19]..[588,19547+20])
                                  Pexp_ident "!" (tools/caml_tex.ml[588,19547+19]..[588,19547+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[588,19547+20]..[588,19547+32])
                                      Pexp_ident "phrase_start" (tools/caml_tex.ml[588,19547+20]..[588,19547+32])
                                ]
                          ]
                ]
                expression (tools/caml_tex.ml[589,19583+2]..[774,27292+20])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (tools/caml_tex.ml[589,19583+6]..[589,19583+8])
                        Ppat_var "oc" (tools/caml_tex.ml[589,19583+6]..[589,19583+8])
                      expression (tools/caml_tex.ml[590,19594+4]..[597,19833+48])
                        Pexp_try
                        expression (tools/caml_tex.ml[590,19594+8]..[596,19810+22])
                          Pexp_ifthenelse
                          expression (tools/caml_tex.ml[590,19594+11]..[590,19594+25])
                            Pexp_apply
                            expression (tools/caml_tex.ml[590,19594+20]..[590,19594+21])
                              Pexp_ident "=" (tools/caml_tex.ml[590,19594+20]..[590,19594+21])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[590,19594+11]..[590,19594+19])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[590,19594+11]..[590,19594+12])
                                    Pexp_ident "!" (tools/caml_tex.ml[590,19594+11]..[590,19594+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[590,19594+12]..[590,19594+19])
                                        Pexp_ident "outfile" (tools/caml_tex.ml[590,19594+12]..[590,19594+19])
                                  ]
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[590,19594+22]..[590,19594+25])
                                  Pexp_constant PConst_string("-",(tools/caml_tex.ml[590,19594+23]..[590,19594+24]),None)
                            ]
                          expression (tools/caml_tex.ml[591,19625+6]..[591,19625+12])
                            Pexp_ident "stdout" (tools/caml_tex.ml[591,19625+6]..[591,19625+12])
                          Some
                            expression (tools/caml_tex.ml[592,19638+9]..[596,19810+22])
                              Pexp_ifthenelse
                              expression (tools/caml_tex.ml[592,19638+12]..[592,19638+25])
                                Pexp_apply
                                expression (tools/caml_tex.ml[592,19638+21]..[592,19638+22])
                                  Pexp_ident "=" (tools/caml_tex.ml[592,19638+21]..[592,19638+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[592,19638+12]..[592,19638+20])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[592,19638+12]..[592,19638+13])
                                        Pexp_ident "!" (tools/caml_tex.ml[592,19638+12]..[592,19638+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[592,19638+13]..[592,19638+20])
                                            Pexp_ident "outfile" (tools/caml_tex.ml[592,19638+13]..[592,19638+20])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[592,19638+23]..[592,19638+25])
                                      Pexp_constant PConst_string("",(tools/caml_tex.ml[592,19638+24]..[592,19638+24]),None)
                                ]
                              expression (tools/caml_tex.ml[593,19669+6]..[593,19669+62])
                                Pexp_apply
                                expression (tools/caml_tex.ml[593,19669+6]..[593,19669+14])
                                  Pexp_ident "open_out" (tools/caml_tex.ml[593,19669+6]..[593,19669+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[593,19669+15]..[593,19669+62])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[593,19669+50]..[593,19669+51])
                                        Pexp_ident "^" (tools/caml_tex.ml[593,19669+50]..[593,19669+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[593,19669+16]..[593,19669+49])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[593,19669+16]..[593,19669+29])
                                              Pexp_ident "replace_first" (tools/caml_tex.ml[593,19669+16]..[593,19669+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[593,19669+30]..[593,19669+41])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[593,19669+30]..[593,19669+32])
                                                    Pexp_ident "~!" (tools/caml_tex.ml[593,19669+30]..[593,19669+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[593,19669+32]..[593,19669+41])
                                                        Pexp_constant PConst_string("\\.tex$",(tools/caml_tex.ml[593,19669+33]..[593,19669+40]),None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[593,19669+42]..[593,19669+44])
                                                  Pexp_constant PConst_string("",(tools/caml_tex.ml[593,19669+43]..[593,19669+43]),None)
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[593,19669+45]..[593,19669+49])
                                                  Pexp_ident "file" (tools/caml_tex.ml[593,19669+45]..[593,19669+49])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[593,19669+52]..[593,19669+61])
                                            Pexp_constant PConst_string(".ml.tex",(tools/caml_tex.ml[593,19669+53]..[593,19669+60]),None)
                                      ]
                                ]
                              Some
                                expression (tools/caml_tex.ml[595,19741+6]..[596,19810+22])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[595,19741+6]..[595,19741+18])
                                    Pexp_ident "open_out_gen" (tools/caml_tex.ml[595,19741+6]..[595,19741+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[595,19741+19]..[595,19741+68])
                                        Pexp_construct "::" (tools/caml_tex.ml[595,19741+20]..[595,19741+68]) ghost
                                        Some
                                          expression (tools/caml_tex.ml[595,19741+20]..[595,19741+68]) ghost
                                            Pexp_tuple
                                            [
                                              expression (tools/caml_tex.ml[595,19741+20]..[595,19741+31])
                                                Pexp_construct "Open_wronly" (tools/caml_tex.ml[595,19741+20]..[595,19741+31])
                                                None
                                              expression (tools/caml_tex.ml[595,19741+33]..[595,19741+68]) ghost
                                                Pexp_construct "::" (tools/caml_tex.ml[595,19741+33]..[595,19741+68]) ghost
                                                Some
                                                  expression (tools/caml_tex.ml[595,19741+33]..[595,19741+68]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (tools/caml_tex.ml[595,19741+33]..[595,19741+43])
                                                        Pexp_construct "Open_creat" (tools/caml_tex.ml[595,19741+33]..[595,19741+43])
                                                        None
                                                      expression (tools/caml_tex.ml[595,19741+45]..[595,19741+68]) ghost
                                                        Pexp_construct "::" (tools/caml_tex.ml[595,19741+45]..[595,19741+68]) ghost
                                                        Some
                                                          expression (tools/caml_tex.ml[595,19741+45]..[595,19741+68]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (tools/caml_tex.ml[595,19741+45]..[595,19741+56])
                                                                Pexp_construct "Open_append" (tools/caml_tex.ml[595,19741+45]..[595,19741+56])
                                                                None
                                                              expression (tools/caml_tex.ml[595,19741+58]..[595,19741+68]) ghost
                                                                Pexp_construct "::" (tools/caml_tex.ml[595,19741+58]..[595,19741+68]) ghost
                                                                Some
                                                                  expression (tools/caml_tex.ml[595,19741+58]..[595,19741+68]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (tools/caml_tex.ml[595,19741+58]..[595,19741+67])
Pexp_construct "Open_text" (tools/caml_tex.ml[595,19741+58]..[595,19741+67])
None
                                                                      expression (tools/caml_tex.ml[595,19741+67]..[595,19741+68]) ghost
Pexp_construct "[]" (tools/caml_tex.ml[595,19741+67]..[595,19741+68]) ghost
None
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[596,19810+8]..[596,19810+13])
                                        Pexp_constant PConst_int (0x666,None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[596,19810+14]..[596,19810+22])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[596,19810+14]..[596,19810+15])
                                          Pexp_ident "!" (tools/caml_tex.ml[596,19810+14]..[596,19810+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[596,19810+15]..[596,19810+22])
                                              Pexp_ident "outfile" (tools/caml_tex.ml[596,19810+15]..[596,19810+22])
                                        ]
                                  ]
                        [
                          <case>
                            pattern (tools/caml_tex.ml[597,19833+9]..[597,19833+10])
                              Ppat_any
                            expression (tools/caml_tex.ml[597,19833+14]..[597,19833+48])
                              Pexp_apply
                              expression (tools/caml_tex.ml[597,19833+14]..[597,19833+22])
                                Pexp_ident "failwith" (tools/caml_tex.ml[597,19833+14]..[597,19833+22])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[597,19833+23]..[597,19833+48])
                                    Pexp_constant PConst_string("Cannot open output file",(tools/caml_tex.ml[597,19833+24]..[597,19833+47]),None)
                              ]
                        ]
                  ]
                  expression (tools/caml_tex.ml[598,19885+2]..[774,27292+20])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (tools/caml_tex.ml[598,19885+6]..[598,19885+13])
                          Ppat_var "tex_fmt" (tools/caml_tex.ml[598,19885+6]..[598,19885+13])
                        expression (tools/caml_tex.ml[598,19885+16]..[598,19885+50])
                          Pexp_apply
                          expression (tools/caml_tex.ml[598,19885+16]..[598,19885+47])
                            Pexp_ident "Format.formatter_of_out_channel" (tools/caml_tex.ml[598,19885+16]..[598,19885+47])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[598,19885+48]..[598,19885+50])
                                Pexp_ident "oc" (tools/caml_tex.ml[598,19885+48]..[598,19885+50])
                          ]
                    ]
                    expression (tools/caml_tex.ml[599,19939+2]..[774,27292+20])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (tools/caml_tex.ml[599,19939+6]..[599,19939+11])
                            Ppat_var "fatal" (tools/caml_tex.ml[599,19939+6]..[599,19939+11])
                          expression (tools/caml_tex.ml[599,19939+12]..[599,19939+38]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (tools/caml_tex.ml[599,19939+12]..[599,19939+13])
                              Ppat_var "x" (tools/caml_tex.ml[599,19939+12]..[599,19939+13])
                            expression (tools/caml_tex.ml[599,19939+16]..[599,19939+38])
                              Pexp_apply
                              expression (tools/caml_tex.ml[599,19939+16]..[599,19939+30])
                                Pexp_ident "Toplevel.fatal" (tools/caml_tex.ml[599,19939+16]..[599,19939+30])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[599,19939+31]..[599,19939+33])
                                    Pexp_ident "ic" (tools/caml_tex.ml[599,19939+31]..[599,19939+33])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[599,19939+34]..[599,19939+36])
                                    Pexp_ident "oc" (tools/caml_tex.ml[599,19939+34]..[599,19939+36])
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[599,19939+37]..[599,19939+38])
                                    Pexp_ident "x" (tools/caml_tex.ml[599,19939+37]..[599,19939+38])
                              ]
                      ]
                      expression (tools/caml_tex.ml[600,19981+2]..[774,27292+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (tools/caml_tex.ml[600,19981+6]..[600,19981+15])
                              Ppat_var "re_spaces" (tools/caml_tex.ml[600,19981+6]..[600,19981+15])
                            expression (tools/caml_tex.ml[600,19981+18]..[600,19981+26])
                              Pexp_constant PConst_string("[ \t]*",(tools/caml_tex.ml[600,19981+19]..[600,19981+25]),None)
                        ]
                        expression (tools/caml_tex.ml[601,20011+2]..[774,27292+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (tools/caml_tex.ml[601,20011+6]..[601,20011+14])
                                Ppat_var "re_start" (tools/caml_tex.ml[601,20011+6]..[601,20011+14])
                              expression (tools/caml_tex.ml[601,20011+17]..[606,20200+5])
                                Pexp_apply
                                expression (tools/caml_tex.ml[601,20011+17]..[601,20011+19])
                                  Pexp_ident "~!" (tools/caml_tex.ml[601,20011+17]..[601,20011+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (tools/caml_tex.ml[601,20011+19]..[606,20200+5])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[602,20032+39]..[602,20032+40])
                                        Pexp_ident "^" (tools/caml_tex.ml[602,20032+39]..[602,20032+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[602,20032+6]..[602,20032+38])
                                            Pexp_constant PConst_string ("\\\\begin{caml_example\\(\\*?\\)}",(tools/caml_tex.ml[602,20032+8]..[602,20032+36]),Some "")
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[602,20032+41]..[605,20188+11])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[603,20083+6]..[603,20083+7])
                                              Pexp_ident "^" (tools/caml_tex.ml[603,20083+6]..[603,20083+7])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[602,20032+41]..[602,20032+50])
                                                  Pexp_ident "re_spaces" (tools/caml_tex.ml[602,20032+41]..[602,20032+50])
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[603,20083+8]..[605,20188+11])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[603,20083+53]..[603,20083+54])
                                                    Pexp_ident "^" (tools/caml_tex.ml[603,20083+53]..[603,20083+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[603,20083+8]..[603,20083+52])
                                                        Pexp_constant PConst_string ("\\({toplevel}\\|{verbatim}\\|{signature}\\)?",(tools/caml_tex.ml[603,20083+10]..[603,20083+50]),Some "")
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[603,20083+55]..[605,20188+11])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[604,20148+6]..[604,20148+7])
                                                          Pexp_ident "^" (tools/caml_tex.ml[604,20148+6]..[604,20148+7])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[603,20083+55]..[603,20083+64])
                                                              Pexp_ident "re_spaces" (tools/caml_tex.ml[603,20083+55]..[603,20083+64])
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[604,20148+8]..[605,20188+11])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[604,20148+28]..[604,20148+29])
                                                                Pexp_ident "^" (tools/caml_tex.ml[604,20148+28]..[604,20148+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[604,20148+8]..[604,20148+27])
                                                                    Pexp_constant PConst_string ("\\(\\[\\(.*\\)\\]\\)?",(tools/caml_tex.ml[604,20148+10]..[604,20148+25]),Some "")
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[604,20148+30]..[605,20188+11])
                                                                    Pexp_apply
                                                                    expression (tools/caml_tex.ml[605,20188+6]..[605,20188+7])
                                                                      Pexp_ident "^" (tools/caml_tex.ml[605,20188+6]..[605,20188+7])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[604,20148+30]..[604,20148+39])
  Pexp_ident "re_spaces" (tools/caml_tex.ml[604,20148+30]..[604,20148+39])
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[605,20188+8]..[605,20188+11])
  Pexp_constant PConst_string("$",(tools/caml_tex.ml[605,20188+9]..[605,20188+10]),None)
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                          expression (tools/caml_tex.ml[607,20209+2]..[774,27292+20])
                            Pexp_try
                            expression (tools/caml_tex.ml[607,20209+6]..[731,25192+6])
                              Pexp_while
                              expression (tools/caml_tex.ml[607,20209+12]..[607,20209+16])
                                Pexp_construct "true" (tools/caml_tex.ml[607,20209+12]..[607,20209+16])
                                None
                              expression (tools/caml_tex.ml[608,20229+4]..[730,25184+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (tools/caml_tex.ml[608,20229+8]..[608,20229+13])
                                      Ppat_var "input" (tools/caml_tex.ml[608,20229+8]..[608,20229+13])
                                    expression (tools/caml_tex.ml[608,20229+16]..[608,20229+35])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[608,20229+16]..[608,20229+19])
                                        Pexp_ident "ref" (tools/caml_tex.ml[608,20229+16]..[608,20229+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[608,20229+20]..[608,20229+35])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[608,20229+21]..[608,20229+31])
                                              Pexp_ident "input_line" (tools/caml_tex.ml[608,20229+21]..[608,20229+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[608,20229+32]..[608,20229+34])
                                                  Pexp_ident "ic" (tools/caml_tex.ml[608,20229+32]..[608,20229+34])
                                            ]
                                      ]
                                ]
                                expression (tools/caml_tex.ml[609,20268+4]..[730,25184+7])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[609,20268+4]..[609,20268+23])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[609,20268+4]..[609,20268+21])
                                      Pexp_ident "incr_phrase_start" (tools/caml_tex.ml[609,20268+4]..[609,20268+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[609,20268+21]..[609,20268+23])
                                          Pexp_construct "()" (tools/caml_tex.ml[609,20268+21]..[609,20268+23])
                                          None
                                    ]
                                  expression (tools/caml_tex.ml[610,20293+4]..[730,25184+7])
                                    Pexp_ifthenelse
                                    expression (tools/caml_tex.ml[610,20293+7]..[610,20293+37])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[610,20293+7]..[610,20293+19])
                                        Pexp_ident "string_match" (tools/caml_tex.ml[610,20293+7]..[610,20293+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[610,20293+20]..[610,20293+28])
                                            Pexp_ident "re_start" (tools/caml_tex.ml[610,20293+20]..[610,20293+28])
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[610,20293+29]..[610,20293+35])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[610,20293+29]..[610,20293+30])
                                              Pexp_ident "!" (tools/caml_tex.ml[610,20293+29]..[610,20293+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[610,20293+30]..[610,20293+35])
                                                  Pexp_ident "input" (tools/caml_tex.ml[610,20293+30]..[610,20293+35])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[610,20293+36]..[610,20293+37])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    expression (tools/caml_tex.ml[611,20331+9]..[712,24509+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (tools/caml_tex.ml[612,20346+10]..[612,20346+21])
                                            Ppat_var "omit_answer" (tools/caml_tex.ml[612,20346+10]..[612,20346+21])
                                          expression (tools/caml_tex.ml[612,20346+24]..[612,20346+52])
                                            Pexp_apply
                                            expression (tools/caml_tex.ml[612,20346+47]..[612,20346+48])
                                              Pexp_ident "=" (tools/caml_tex.ml[612,20346+47]..[612,20346+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[612,20346+24]..[612,20346+46])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[612,20346+24]..[612,20346+37])
                                                    Pexp_ident "matched_group" (tools/caml_tex.ml[612,20346+24]..[612,20346+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[612,20346+38]..[612,20346+39])
                                                        Pexp_constant PConst_int (1,None)
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[612,20346+40]..[612,20346+46])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[612,20346+40]..[612,20346+41])
                                                          Pexp_ident "!" (tools/caml_tex.ml[612,20346+40]..[612,20346+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[612,20346+41]..[612,20346+46])
                                                              Pexp_ident "input" (tools/caml_tex.ml[612,20346+41]..[612,20346+46])
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (tools/caml_tex.ml[612,20346+49]..[612,20346+52])
                                                  Pexp_constant PConst_string("*",(tools/caml_tex.ml[612,20346+50]..[612,20346+51]),None)
                                            ]
                                      ]
                                      expression (tools/caml_tex.ml[613,20402+6]..[711,24436+72])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (tools/caml_tex.ml[613,20402+10]..[613,20402+14])
                                              Ppat_var "mode" (tools/caml_tex.ml[613,20402+10]..[613,20402+14])
                                            expression (tools/caml_tex.ml[614,20419+8]..[619,20642+27])
                                              Pexp_match
                                              expression (tools/caml_tex.ml[614,20419+14]..[614,20419+36])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[614,20419+14]..[614,20419+27])
                                                  Pexp_ident "matched_group" (tools/caml_tex.ml[614,20419+14]..[614,20419+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[614,20419+28]..[614,20419+29])
                                                      Pexp_constant PConst_int (2,None)
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[614,20419+30]..[614,20419+36])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[614,20419+30]..[614,20419+31])
                                                        Pexp_ident "!" (tools/caml_tex.ml[614,20419+30]..[614,20419+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[614,20419+31]..[614,20419+36])
                                                            Pexp_ident "input" (tools/caml_tex.ml[614,20419+31]..[614,20419+36])
                                                      ]
                                                ]
                                              [
                                                <case>
                                                  pattern (tools/caml_tex.ml[615,20461+10]..[615,20461+29])
                                                    Ppat_exception
                                                    pattern (tools/caml_tex.ml[615,20461+20]..[615,20461+29])
                                                      Ppat_construct "Not_found" (tools/caml_tex.ml[615,20461+20]..[615,20461+29])
                                                      None
                                                  expression (tools/caml_tex.ml[615,20461+33]..[615,20461+73])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[615,20461+33]..[615,20461+38])
                                                      Pexp_ident "raise" (tools/caml_tex.ml[615,20461+33]..[615,20461+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[615,20461+39]..[615,20461+73])
                                                          Pexp_construct "Missing_mode" (tools/caml_tex.ml[615,20461+40]..[615,20461+52])
                                                          Some
                                                            expression (tools/caml_tex.ml[615,20461+52]..[615,20461+72])
                                                              Pexp_tuple
                                                              [
                                                                expression (tools/caml_tex.ml[615,20461+53]..[615,20461+57])
                                                                  Pexp_ident "file" (tools/caml_tex.ml[615,20461+53]..[615,20461+57])
                                                                expression (tools/caml_tex.ml[615,20461+59]..[615,20461+71])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[615,20461+59]..[615,20461+60])
                                                                    Pexp_ident "!" (tools/caml_tex.ml[615,20461+59]..[615,20461+60])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[615,20461+60]..[615,20461+71])
Pexp_ident "phrase_stop" (tools/caml_tex.ml[615,20461+60]..[615,20461+71])
                                                                  ]
                                                              ]
                                                    ]
                                                <case>
                                                  pattern (tools/caml_tex.ml[616,20535+10]..[616,20535+22])
                                                    Ppat_constant PConst_string("{toplevel}",(tools/caml_tex.ml[616,20535+11]..[616,20535+21]),None)
                                                  expression (tools/caml_tex.ml[616,20535+26]..[616,20535+34])
                                                    Pexp_construct "Toplevel" (tools/caml_tex.ml[616,20535+26]..[616,20535+34])
                                                    None
                                                <case>
                                                  pattern (tools/caml_tex.ml[617,20570+10]..[617,20570+22])
                                                    Ppat_constant PConst_string("{verbatim}",(tools/caml_tex.ml[617,20570+11]..[617,20570+21]),None)
                                                  expression (tools/caml_tex.ml[617,20570+26]..[617,20570+34])
                                                    Pexp_construct "Verbatim" (tools/caml_tex.ml[617,20570+26]..[617,20570+34])
                                                    None
                                                <case>
                                                  pattern (tools/caml_tex.ml[618,20605+10]..[618,20605+23])
                                                    Ppat_constant PConst_string("{signature}",(tools/caml_tex.ml[618,20605+11]..[618,20605+22]),None)
                                                  expression (tools/caml_tex.ml[618,20605+27]..[618,20605+36])
                                                    Pexp_construct "Signature" (tools/caml_tex.ml[618,20605+27]..[618,20605+36])
                                                    None
                                                <case>
                                                  pattern (tools/caml_tex.ml[619,20642+10]..[619,20642+11])
                                                    Ppat_any
                                                  expression (tools/caml_tex.ml[619,20642+15]..[619,20642+27])
                                                    Pexp_assert
                                                    expression (tools/caml_tex.ml[619,20642+22]..[619,20642+27])
                                                      Pexp_construct "false" (tools/caml_tex.ml[619,20642+22]..[619,20642+27])
                                                      None
                                              ]
                                        ]
                                        expression (tools/caml_tex.ml[620,20673+6]..[711,24436+72])
                                          Pexp_sequence
                                          expression (tools/caml_tex.ml[620,20673+6]..[623,20826+11])
                                            Pexp_ifthenelse
                                            expression (tools/caml_tex.ml[620,20673+9]..[620,20673+44])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[620,20673+26]..[620,20673+28])
                                                Pexp_ident "&&" (tools/caml_tex.ml[620,20673+26]..[620,20673+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[620,20673+9]..[620,20673+25])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[620,20673+14]..[620,20673+15])
                                                      Pexp_ident "=" (tools/caml_tex.ml[620,20673+14]..[620,20673+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[620,20673+9]..[620,20673+13])
                                                          Pexp_ident "mode" (tools/caml_tex.ml[620,20673+9]..[620,20673+13])
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[620,20673+16]..[620,20673+25])
                                                          Pexp_construct "Signature" (tools/caml_tex.ml[620,20673+16]..[620,20673+25])
                                                          None
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[620,20673+29]..[620,20673+44])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[620,20673+29]..[620,20673+32])
                                                      Pexp_ident "not" (tools/caml_tex.ml[620,20673+29]..[620,20673+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[620,20673+33]..[620,20673+44])
                                                          Pexp_ident "omit_answer" (tools/caml_tex.ml[620,20673+33]..[620,20673+44])
                                                    ]
                                              ]
                                            expression (tools/caml_tex.ml[620,20673+50]..[623,20826+11])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[620,20673+50]..[620,20673+55])
                                                Pexp_ident "raise" (tools/caml_tex.ml[620,20673+50]..[620,20673+55])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[621,20729+10]..[623,20826+11])
                                                    Pexp_construct "Incompatible_options" (tools/caml_tex.ml[621,20729+11]..[621,20729+31])
                                                    Some
                                                      expression (tools/caml_tex.ml[621,20729+31]..[622,20762+63])
                                                        Pexp_construct "Signature_with_visible_answer" (tools/caml_tex.ml[622,20762+14]..[622,20762+43])
                                                        Some
                                                          expression (tools/caml_tex.ml[622,20762+43]..[622,20762+62])
                                                            Pexp_tuple
                                                            [
                                                              expression (tools/caml_tex.ml[622,20762+44]..[622,20762+48])
                                                                Pexp_ident "file" (tools/caml_tex.ml[622,20762+44]..[622,20762+48])
                                                              expression (tools/caml_tex.ml[622,20762+49]..[622,20762+61])
                                                                Pexp_apply
                                                                expression (tools/caml_tex.ml[622,20762+49]..[622,20762+50])
                                                                  Pexp_ident "!" (tools/caml_tex.ml[622,20762+49]..[622,20762+50])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[622,20762+50]..[622,20762+61])
                                                                      Pexp_ident "phrase_stop" (tools/caml_tex.ml[622,20762+50]..[622,20762+61])
                                                                ]
                                                            ]
                                              ]
                                            None
                                          expression (tools/caml_tex.ml[624,20839+6]..[711,24436+72])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (tools/caml_tex.ml[624,20839+10]..[624,20839+23])
                                                  Ppat_var "explicit_stop" (tools/caml_tex.ml[624,20839+10]..[624,20839+23])
                                                expression (tools/caml_tex.ml[624,20839+26]..[626,20921+26])
                                                  Pexp_match
                                                  expression (tools/caml_tex.ml[624,20839+32]..[624,20839+36])
                                                    Pexp_ident "mode" (tools/caml_tex.ml[624,20839+32]..[624,20839+36])
                                                  [
                                                    <case>
                                                      pattern (tools/caml_tex.ml[625,20881+10]..[625,20881+30])
                                                        Ppat_or
                                                        pattern (tools/caml_tex.ml[625,20881+10]..[625,20881+18])
                                                          Ppat_construct "Verbatim" (tools/caml_tex.ml[625,20881+10]..[625,20881+18])
                                                          None
                                                        pattern (tools/caml_tex.ml[625,20881+21]..[625,20881+30])
                                                          Ppat_construct "Signature" (tools/caml_tex.ml[625,20881+21]..[625,20881+30])
                                                          None
                                                      expression (tools/caml_tex.ml[625,20881+34]..[625,20881+39])
                                                        Pexp_construct "false" (tools/caml_tex.ml[625,20881+34]..[625,20881+39])
                                                        None
                                                    <case>
                                                      pattern (tools/caml_tex.ml[626,20921+10]..[626,20921+18])
                                                        Ppat_construct "Toplevel" (tools/caml_tex.ml[626,20921+10]..[626,20921+18])
                                                        None
                                                      expression (tools/caml_tex.ml[626,20921+22]..[626,20921+26])
                                                        Pexp_construct "true" (tools/caml_tex.ml[626,20921+22]..[626,20921+26])
                                                        None
                                                  ]
                                            ]
                                            expression (tools/caml_tex.ml[627,20951+6]..[711,24436+72])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (tools/caml_tex.ml[627,20951+10]..[627,20951+25])
                                                    Ppat_var "global_expected" (tools/caml_tex.ml[627,20951+10]..[627,20951+25])
                                                  expression (tools/caml_tex.ml[627,20951+28]..[628,21025+35])
                                                    Pexp_try
                                                    expression (tools/caml_tex.ml[627,20951+32]..[627,20951+73])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[627,20951+48]..[627,20951+50])
                                                        Pexp_ident "@@" (tools/caml_tex.ml[627,20951+48]..[627,20951+50])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[627,20951+32]..[627,20951+47])
                                                            Pexp_ident "Output.expected" (tools/caml_tex.ml[627,20951+32]..[627,20951+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[627,20951+51]..[627,20951+73])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[627,20951+51]..[627,20951+64])
                                                              Pexp_ident "matched_group" (tools/caml_tex.ml[627,20951+51]..[627,20951+64])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[627,20951+65]..[627,20951+66])
                                                                  Pexp_constant PConst_int (4,None)
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[627,20951+67]..[627,20951+73])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[627,20951+67]..[627,20951+68])
                                                                    Pexp_ident "!" (tools/caml_tex.ml[627,20951+67]..[627,20951+68])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[627,20951+68]..[627,20951+73])
Pexp_ident "input" (tools/caml_tex.ml[627,20951+68]..[627,20951+73])
                                                                  ]
                                                            ]
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (tools/caml_tex.ml[628,21025+13]..[628,21025+22])
                                                          Ppat_construct "Not_found" (tools/caml_tex.ml[628,21025+13]..[628,21025+22])
                                                          None
                                                        expression (tools/caml_tex.ml[628,21025+26]..[628,21025+35])
                                                          Pexp_construct "Output.Ok" (tools/caml_tex.ml[628,21025+26]..[628,21025+35])
                                                          None
                                                    ]
                                              ]
                                              expression (tools/caml_tex.ml[629,21064+6]..[711,24436+72])
                                                Pexp_sequence
                                                expression (tools/caml_tex.ml[629,21064+6]..[629,21064+46])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[629,21064+6]..[629,21064+11])
                                                    Pexp_ident "start" (tools/caml_tex.ml[629,21064+6]..[629,21064+11])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[629,21064+12]..[629,21064+19])
                                                        Pexp_ident "tex_fmt" (tools/caml_tex.ml[629,21064+12]..[629,21064+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[629,21064+20]..[629,21064+24])
                                                        Pexp_ident "main" (tools/caml_tex.ml[629,21064+20]..[629,21064+24])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[629,21064+25]..[629,21064+46])
                                                        Pexp_construct "::" (tools/caml_tex.ml[629,21064+26]..[629,21064+46]) ghost
                                                        Some
                                                          expression (tools/caml_tex.ml[629,21064+26]..[629,21064+46]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (tools/caml_tex.ml[629,21064+26]..[629,21064+45])
                                                                Pexp_apply
                                                                expression (tools/caml_tex.ml[629,21064+26]..[629,21064+40])
                                                                  Pexp_ident "string_of_mode" (tools/caml_tex.ml[629,21064+26]..[629,21064+40])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[629,21064+41]..[629,21064+45])
                                                                      Pexp_ident "mode" (tools/caml_tex.ml[629,21064+41]..[629,21064+45])
                                                                ]
                                                              expression (tools/caml_tex.ml[629,21064+45]..[629,21064+46]) ghost
                                                                Pexp_construct "[]" (tools/caml_tex.ml[629,21064+45]..[629,21064+46]) ghost
                                                                None
                                                            ]
                                                  ]
                                                expression (tools/caml_tex.ml[630,21112+6]..[711,24436+72])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (tools/caml_tex.ml[630,21112+10]..[630,21112+15])
                                                        Ppat_var "first" (tools/caml_tex.ml[630,21112+10]..[630,21112+15])
                                                      expression (tools/caml_tex.ml[630,21112+18]..[630,21112+26])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[630,21112+18]..[630,21112+21])
                                                          Pexp_ident "ref" (tools/caml_tex.ml[630,21112+18]..[630,21112+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[630,21112+22]..[630,21112+26])
                                                              Pexp_construct "true" (tools/caml_tex.ml[630,21112+22]..[630,21112+26])
                                                              None
                                                        ]
                                                  ]
                                                  expression (tools/caml_tex.ml[631,21142+6]..[711,24436+72])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (tools/caml_tex.ml[631,21142+10]..[631,21142+21])
                                                          Ppat_var "read_phrase" (tools/caml_tex.ml[631,21142+10]..[631,21142+21])
                                                        expression (tools/caml_tex.ml[631,21142+22]..[671,22731+15]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (tools/caml_tex.ml[631,21142+22]..[631,21142+24])
                                                            Ppat_construct "()" (tools/caml_tex.ml[631,21142+22]..[631,21142+24])
                                                            None
                                                          expression (tools/caml_tex.ml[632,21169+8]..[671,22731+15])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (tools/caml_tex.ml[632,21169+12]..[632,21169+18])
                                                                  Ppat_var "phrase" (tools/caml_tex.ml[632,21169+12]..[632,21169+18])
                                                                expression (tools/caml_tex.ml[632,21169+21]..[632,21169+38])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[632,21169+21]..[632,21169+34])
                                                                    Pexp_ident "Buffer.create" (tools/caml_tex.ml[632,21169+21]..[632,21169+34])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[632,21169+35]..[632,21169+38])
Pexp_constant PConst_int (256,None)
                                                                  ]
                                                            ]
                                                            expression (tools/caml_tex.ml[633,21211+8]..[671,22731+15])
                                                              Pexp_let Rec
                                                              [
                                                                <def>
                                                                  pattern (tools/caml_tex.ml[633,21211+16]..[633,21211+20])
                                                                    Ppat_var "read" (tools/caml_tex.ml[633,21211+16]..[633,21211+20])
                                                                  expression (tools/caml_tex.ml[633,21211+21]..[670,22714+13]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (tools/caml_tex.ml[633,21211+21]..[633,21211+23])
                                                                      Ppat_construct "()" (tools/caml_tex.ml[633,21211+21]..[633,21211+23])
                                                                      None
                                                                    expression (tools/caml_tex.ml[634,21237+10]..[670,22714+13])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (tools/caml_tex.ml[634,21237+14]..[634,21237+19])
    Ppat_var "input" (tools/caml_tex.ml[634,21237+14]..[634,21237+19])
  expression (tools/caml_tex.ml[634,21237+22]..[634,21237+53])
    Pexp_sequence
    expression (tools/caml_tex.ml[634,21237+22]..[634,21237+38])
      Pexp_apply
      expression (tools/caml_tex.ml[634,21237+22]..[634,21237+26])
        Pexp_ident "incr" (tools/caml_tex.ml[634,21237+22]..[634,21237+26])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[634,21237+27]..[634,21237+38])
            Pexp_ident "phrase_stop" (tools/caml_tex.ml[634,21237+27]..[634,21237+38])
      ]
    expression (tools/caml_tex.ml[634,21237+40]..[634,21237+53])
      Pexp_apply
      expression (tools/caml_tex.ml[634,21237+40]..[634,21237+50])
        Pexp_ident "input_line" (tools/caml_tex.ml[634,21237+40]..[634,21237+50])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[634,21237+51]..[634,21237+53])
            Pexp_ident "ic" (tools/caml_tex.ml[634,21237+51]..[634,21237+53])
      ]
                                                                      ]
                                                                      expression (tools/caml_tex.ml[635,21294+10]..[670,22714+13])
Pexp_let Nonrec
[
  <def>
    pattern (tools/caml_tex.ml[635,21294+14]..[635,21294+27])
      Ppat_var "implicit_stop" (tools/caml_tex.ml[635,21294+14]..[635,21294+27])
    expression (tools/caml_tex.ml[636,21324+12]..[647,21720+22])
      Pexp_ifthenelse
      expression (tools/caml_tex.ml[636,21324+15]..[637,21389+23])
        Pexp_apply
        expression (tools/caml_tex.ml[636,21324+15]..[636,21324+27])
          Pexp_ident "string_match" (tools/caml_tex.ml[636,21324+15]..[636,21324+27])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[636,21324+28]..[636,21324+64])
              Pexp_apply
              expression (tools/caml_tex.ml[636,21324+28]..[636,21324+30])
                Pexp_ident "~!" (tools/caml_tex.ml[636,21324+28]..[636,21324+30])
              [
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[636,21324+30]..[636,21324+64])
                    Pexp_constant PConst_string("\\\\end{caml_example\\*?}[ \t]*$",(tools/caml_tex.ml[636,21324+31]..[636,21324+63]),None)
              ]
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[637,21389+16]..[637,21389+21])
              Pexp_ident "input" (tools/caml_tex.ml[637,21389+16]..[637,21389+21])
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[637,21389+22]..[637,21389+23])
              Pexp_constant PConst_int (0,None)
        ]
      expression (tools/caml_tex.ml[639,21430+14]..[646,21702+17])
        Pexp_ifthenelse
        expression (tools/caml_tex.ml[640,21450+19]..[640,21450+51])
          Pexp_apply
          expression (tools/caml_tex.ml[640,21450+32]..[640,21450+33])
            Pexp_ident "=" (tools/caml_tex.ml[640,21450+32]..[640,21450+33])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[640,21450+19]..[640,21450+31])
                Pexp_apply
                expression (tools/caml_tex.ml[640,21450+19]..[640,21450+20])
                  Pexp_ident "!" (tools/caml_tex.ml[640,21450+19]..[640,21450+20])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[640,21450+20]..[640,21450+31])
                      Pexp_ident "phrase_stop" (tools/caml_tex.ml[640,21450+20]..[640,21450+31])
                ]
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[640,21450+34]..[640,21450+51])
                Pexp_apply
                expression (tools/caml_tex.ml[640,21450+36]..[640,21450+37])
                  Pexp_ident "+" (tools/caml_tex.ml[640,21450+36]..[640,21450+37])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[640,21450+34]..[640,21450+35])
                      Pexp_constant PConst_int (1,None)
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[640,21450+38]..[640,21450+51])
                      Pexp_apply
                      expression (tools/caml_tex.ml[640,21450+38]..[640,21450+39])
                        Pexp_ident "!" (tools/caml_tex.ml[640,21450+38]..[640,21450+39])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[640,21450+39]..[640,21450+51])
                            Pexp_ident "phrase_start" (tools/caml_tex.ml[640,21450+39]..[640,21450+51])
                      ]
                ]
          ]
        expression (tools/caml_tex.ml[641,21507+18]..[641,21507+35])
          Pexp_apply
          expression (tools/caml_tex.ml[641,21507+18]..[641,21507+23])
            Pexp_ident "raise" (tools/caml_tex.ml[641,21507+18]..[641,21507+23])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[641,21507+24]..[641,21507+35])
                Pexp_construct "End_of_file" (tools/caml_tex.ml[641,21507+24]..[641,21507+35])
                None
          ]
        Some
          expression (tools/caml_tex.ml[642,21543+21]..[645,21679+22])
            Pexp_ifthenelse
            expression (tools/caml_tex.ml[642,21543+24]..[642,21543+37])
              Pexp_ident "explicit_stop" (tools/caml_tex.ml[642,21543+24]..[642,21543+37])
            expression (tools/caml_tex.ml[643,21586+18]..[643,21586+71])
              Pexp_apply
              expression (tools/caml_tex.ml[643,21586+24]..[643,21586+26])
                Pexp_ident "@@" (tools/caml_tex.ml[643,21586+24]..[643,21586+26])
              [
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[643,21586+18]..[643,21586+23])
                    Pexp_ident "raise" (tools/caml_tex.ml[643,21586+18]..[643,21586+23])
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[643,21586+27]..[643,21586+71])
                    Pexp_construct "Missing_double_semicolon" (tools/caml_tex.ml[643,21586+27]..[643,21586+51])
                    Some
                      expression (tools/caml_tex.ml[643,21586+52]..[643,21586+71])
                        Pexp_tuple
                        [
                          expression (tools/caml_tex.ml[643,21586+53]..[643,21586+57])
                            Pexp_ident "file" (tools/caml_tex.ml[643,21586+53]..[643,21586+57])
                          expression (tools/caml_tex.ml[643,21586+58]..[643,21586+70])
                            Pexp_apply
                            expression (tools/caml_tex.ml[643,21586+58]..[643,21586+59])
                              Pexp_ident "!" (tools/caml_tex.ml[643,21586+58]..[643,21586+59])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[643,21586+59]..[643,21586+70])
                                  Pexp_ident "phrase_stop" (tools/caml_tex.ml[643,21586+59]..[643,21586+70])
                            ]
                        ]
              ]
            Some
              expression (tools/caml_tex.ml[645,21679+18]..[645,21679+22])
                Pexp_construct "true" (tools/caml_tex.ml[645,21679+18]..[645,21679+22])
                None
      Some
        expression (tools/caml_tex.ml[647,21720+17]..[647,21720+22])
          Pexp_construct "false" (tools/caml_tex.ml[647,21720+17]..[647,21720+22])
          None
]
expression (tools/caml_tex.ml[648,21746+10]..[670,22714+13])
  Pexp_sequence
  expression (tools/caml_tex.ml[648,21746+10]..[648,21746+70])
    Pexp_ifthenelse
    expression (tools/caml_tex.ml[648,21746+13]..[648,21746+37])
      Pexp_apply
      expression (tools/caml_tex.ml[648,21746+34]..[648,21746+35])
        Pexp_ident ">" (tools/caml_tex.ml[648,21746+34]..[648,21746+35])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[648,21746+13]..[648,21746+33])
            Pexp_apply
            expression (tools/caml_tex.ml[648,21746+13]..[648,21746+26])
              Pexp_ident "Buffer.length" (tools/caml_tex.ml[648,21746+13]..[648,21746+26])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[648,21746+27]..[648,21746+33])
                  Pexp_ident "phrase" (tools/caml_tex.ml[648,21746+27]..[648,21746+33])
            ]
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[648,21746+36]..[648,21746+37])
            Pexp_constant PConst_int (0,None)
      ]
    expression (tools/caml_tex.ml[648,21746+43]..[648,21746+70])
      Pexp_apply
      expression (tools/caml_tex.ml[648,21746+43]..[648,21746+58])
        Pexp_ident "Buffer.add_char" (tools/caml_tex.ml[648,21746+43]..[648,21746+58])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[648,21746+59]..[648,21746+65])
            Pexp_ident "phrase" (tools/caml_tex.ml[648,21746+59]..[648,21746+65])
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[648,21746+66]..[648,21746+70])
            Pexp_constant PConst_char 0a
      ]
    None
  expression (tools/caml_tex.ml[649,21818+10]..[670,22714+13])
    Pexp_let Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[649,21818+14]..[649,21818+18])
          Ppat_var "stop" (tools/caml_tex.ml[649,21818+14]..[649,21818+18])
        expression (tools/caml_tex.ml[650,21839+12]..[652,21905+67])
          Pexp_apply
          expression (tools/caml_tex.ml[650,21839+26]..[650,21839+28])
            Pexp_ident "||" (tools/caml_tex.ml[650,21839+26]..[650,21839+28])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[650,21839+12]..[650,21839+25])
                Pexp_ident "implicit_stop" (tools/caml_tex.ml[650,21839+12]..[650,21839+25])
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[651,21868+12]..[652,21905+67])
                Pexp_apply
                expression (tools/caml_tex.ml[652,21905+14]..[652,21905+16])
                  Pexp_ident "&&" (tools/caml_tex.ml[652,21905+14]..[652,21905+16])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[651,21868+14]..[651,21868+36])
                      Pexp_apply
                      expression (tools/caml_tex.ml[651,21868+14]..[651,21868+17])
                        Pexp_ident "not" (tools/caml_tex.ml[651,21868+14]..[651,21868+17])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[651,21868+18]..[651,21868+36])
                            Pexp_apply
                            expression (tools/caml_tex.ml[651,21868+24]..[651,21868+25])
                              Pexp_ident "=" (tools/caml_tex.ml[651,21868+24]..[651,21868+25])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[651,21868+19]..[651,21868+23])
                                  Pexp_ident "mode" (tools/caml_tex.ml[651,21868+19]..[651,21868+23])
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[651,21868+26]..[651,21868+35])
                                  Pexp_construct "Signature" (tools/caml_tex.ml[651,21868+26]..[651,21868+35])
                                  None
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[652,21905+17]..[652,21905+65])
                      Pexp_apply
                      expression (tools/caml_tex.ml[652,21905+17]..[652,21905+29])
                        Pexp_ident "string_match" (tools/caml_tex.ml[652,21905+17]..[652,21905+29])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[652,21905+30]..[652,21905+57])
                            Pexp_apply
                            expression (tools/caml_tex.ml[652,21905+30]..[652,21905+32])
                              Pexp_ident "~!" (tools/caml_tex.ml[652,21905+30]..[652,21905+32])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[652,21905+32]..[652,21905+57])
                                  Pexp_constant PConst_string("\\(.*\\)[ \t]*;;[ \t]*$",(tools/caml_tex.ml[652,21905+33]..[652,21905+56]),None)
                            ]
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[652,21905+58]..[652,21905+63])
                            Pexp_ident "input" (tools/caml_tex.ml[652,21905+58]..[652,21905+63])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[652,21905+64]..[652,21905+65])
                            Pexp_constant PConst_int (0,None)
                      ]
                ]
          ]
    ]
    expression (tools/caml_tex.ml[654,21986+10]..[670,22714+13])
      Pexp_ifthenelse
      expression (tools/caml_tex.ml[654,21986+13]..[654,21986+21])
        Pexp_apply
        expression (tools/caml_tex.ml[654,21986+13]..[654,21986+16])
          Pexp_ident "not" (tools/caml_tex.ml[654,21986+13]..[654,21986+16])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[654,21986+17]..[654,21986+21])
              Pexp_ident "stop" (tools/caml_tex.ml[654,21986+17]..[654,21986+21])
        ]
      expression (tools/caml_tex.ml[654,21986+27]..[656,22067+11])
        Pexp_sequence
        expression (tools/caml_tex.ml[655,22015+12]..[655,22015+42])
          Pexp_apply
          expression (tools/caml_tex.ml[655,22015+12]..[655,22015+29])
            Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[655,22015+12]..[655,22015+29])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[655,22015+30]..[655,22015+36])
                Pexp_ident "phrase" (tools/caml_tex.ml[655,22015+30]..[655,22015+36])
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[655,22015+37]..[655,22015+42])
                Pexp_ident "input" (tools/caml_tex.ml[655,22015+37]..[655,22015+42])
          ]
        expression (tools/caml_tex.ml[655,22015+44]..[655,22015+51])
          Pexp_apply
          expression (tools/caml_tex.ml[655,22015+44]..[655,22015+48])
            Pexp_ident "read" (tools/caml_tex.ml[655,22015+44]..[655,22015+48])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[655,22015+49]..[655,22015+51])
                Pexp_construct "()" (tools/caml_tex.ml[655,22015+49]..[655,22015+51])
                None
          ]
      Some
        expression (tools/caml_tex.ml[657,22079+15]..[670,22714+13])
          Pexp_sequence
          expression (tools/caml_tex.ml[658,22100+12]..[658,22100+28])
            Pexp_apply
            expression (tools/caml_tex.ml[658,22100+12]..[658,22100+16])
              Pexp_ident "decr" (tools/caml_tex.ml[658,22100+12]..[658,22100+16])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[658,22100+17]..[658,22100+28])
                  Pexp_ident "phrase_stop" (tools/caml_tex.ml[658,22100+17]..[658,22100+28])
            ]
          expression (tools/caml_tex.ml[659,22130+12]..[669,22654+59])
            Pexp_let Nonrec
            [
              <def>
                pattern (tools/caml_tex.ml[659,22130+16]..[659,22130+26])
                  Ppat_var "last_input" (tools/caml_tex.ml[659,22130+16]..[659,22130+26])
                expression (tools/caml_tex.ml[660,22159+14]..[660,22159+65])
                  Pexp_ifthenelse
                  expression (tools/caml_tex.ml[660,22159+17]..[660,22159+30])
                    Pexp_ident "implicit_stop" (tools/caml_tex.ml[660,22159+17]..[660,22159+30])
                  expression (tools/caml_tex.ml[660,22159+36]..[660,22159+38])
                    Pexp_constant PConst_string("",(tools/caml_tex.ml[660,22159+37]..[660,22159+37]),None)
                  Some
                    expression (tools/caml_tex.ml[660,22159+44]..[660,22159+65])
                      Pexp_apply
                      expression (tools/caml_tex.ml[660,22159+44]..[660,22159+57])
                        Pexp_ident "matched_group" (tools/caml_tex.ml[660,22159+44]..[660,22159+57])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[660,22159+58]..[660,22159+59])
                            Pexp_constant PConst_int (1,None)
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[660,22159+60]..[660,22159+65])
                            Pexp_ident "input" (tools/caml_tex.ml[660,22159+60]..[660,22159+65])
                      ]
            ]
            expression (tools/caml_tex.ml[661,22228+12]..[669,22654+59])
              Pexp_let Nonrec
              [
                <def>
                  pattern (tools/caml_tex.ml[661,22228+16]..[661,22228+24])
                    Ppat_var "expected" (tools/caml_tex.ml[661,22228+16]..[661,22228+24])
                  expression (tools/caml_tex.ml[662,22255+14]..[666,22499+70])
                    Pexp_ifthenelse
                    expression (tools/caml_tex.ml[662,22255+17]..[662,22255+74])
                      Pexp_apply
                      expression (tools/caml_tex.ml[662,22255+17]..[662,22255+29])
                        Pexp_ident "string_match" (tools/caml_tex.ml[662,22255+17]..[662,22255+29])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[662,22255+30]..[662,22255+61])
                            Pexp_apply
                            expression (tools/caml_tex.ml[662,22255+30]..[662,22255+32])
                              Pexp_ident "~!" (tools/caml_tex.ml[662,22255+30]..[662,22255+32])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[662,22255+32]..[662,22255+61])
                                  Pexp_constant PConst_string ("\\(.*\\)\\[@@expect \\(.*\\)\\]",(tools/caml_tex.ml[662,22255+34]..[662,22255+59]),Some "")
                            ]
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[662,22255+62]..[662,22255+72])
                            Pexp_ident "last_input" (tools/caml_tex.ml[662,22255+62]..[662,22255+72])
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[662,22255+73]..[662,22255+74])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (tools/caml_tex.ml[663,22335+16]..[664,22408+71])
                      Pexp_sequence
                      expression (tools/caml_tex.ml[663,22335+18]..[663,22335+71])
                        Pexp_apply
                        expression (tools/caml_tex.ml[663,22335+18]..[663,22335+35])
                          Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[663,22335+18]..[663,22335+35])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[663,22335+36]..[663,22335+42])
                              Pexp_ident "phrase" (tools/caml_tex.ml[663,22335+36]..[663,22335+42])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[663,22335+43]..[663,22335+71])
                              Pexp_apply
                              expression (tools/caml_tex.ml[663,22335+44]..[663,22335+57])
                                Pexp_ident "matched_group" (tools/caml_tex.ml[663,22335+44]..[663,22335+57])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[663,22335+58]..[663,22335+59])
                                    Pexp_constant PConst_int (1,None)
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[663,22335+60]..[663,22335+70])
                                    Pexp_ident "last_input" (tools/caml_tex.ml[663,22335+60]..[663,22335+70])
                              ]
                        ]
                      expression (tools/caml_tex.ml[664,22408+18]..[664,22408+69])
                        Pexp_apply
                        expression (tools/caml_tex.ml[664,22408+40]..[664,22408+42])
                          Pexp_ident "@@" (tools/caml_tex.ml[664,22408+40]..[664,22408+42])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[664,22408+18]..[664,22408+39])
                              Pexp_ident "Output.local_expected" (tools/caml_tex.ml[664,22408+18]..[664,22408+39])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[664,22408+43]..[664,22408+69])
                              Pexp_apply
                              expression (tools/caml_tex.ml[664,22408+43]..[664,22408+56])
                                Pexp_ident "matched_group" (tools/caml_tex.ml[664,22408+43]..[664,22408+56])
                              [
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[664,22408+57]..[664,22408+58])
                                    Pexp_constant PConst_int (2,None)
                                <arg>
                                Nolabel
                                  expression (tools/caml_tex.ml[664,22408+59]..[664,22408+69])
                                    Pexp_ident "last_input" (tools/caml_tex.ml[664,22408+59]..[664,22408+69])
                              ]
                        ]
                    Some
                      expression (tools/caml_tex.ml[666,22499+16]..[666,22499+70])
                        Pexp_sequence
                        expression (tools/caml_tex.ml[666,22499+17]..[666,22499+52])
                          Pexp_apply
                          expression (tools/caml_tex.ml[666,22499+17]..[666,22499+34])
                            Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[666,22499+17]..[666,22499+34])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[666,22499+35]..[666,22499+41])
                                Pexp_ident "phrase" (tools/caml_tex.ml[666,22499+35]..[666,22499+41])
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[666,22499+42]..[666,22499+52])
                                Pexp_ident "last_input" (tools/caml_tex.ml[666,22499+42]..[666,22499+52])
                          ]
                        expression (tools/caml_tex.ml[666,22499+54]..[666,22499+69])
                          Pexp_ident "global_expected" (tools/caml_tex.ml[666,22499+54]..[666,22499+69])
              ]
              expression (tools/caml_tex.ml[668,22585+12]..[669,22654+59])
                Pexp_sequence
                expression (tools/caml_tex.ml[668,22585+12]..[668,22585+67])
                  Pexp_ifthenelse
                  expression (tools/caml_tex.ml[668,22585+15]..[668,22585+32])
                    Pexp_apply
                    expression (tools/caml_tex.ml[668,22585+15]..[668,22585+18])
                      Pexp_ident "not" (tools/caml_tex.ml[668,22585+15]..[668,22585+18])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[668,22585+19]..[668,22585+32])
                          Pexp_ident "implicit_stop" (tools/caml_tex.ml[668,22585+19]..[668,22585+32])
                    ]
                  expression (tools/caml_tex.ml[668,22585+38]..[668,22585+67])
                    Pexp_apply
                    expression (tools/caml_tex.ml[668,22585+38]..[668,22585+55])
                      Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[668,22585+38]..[668,22585+55])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[668,22585+56]..[668,22585+62])
                          Pexp_ident "phrase" (tools/caml_tex.ml[668,22585+56]..[668,22585+62])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[668,22585+63]..[668,22585+67])
                          Pexp_constant PConst_string(";;",(tools/caml_tex.ml[668,22585+64]..[668,22585+66]),None)
                    ]
                  None
                expression (tools/caml_tex.ml[669,22654+12]..[669,22654+59])
                  Pexp_tuple
                  [
                    expression (tools/caml_tex.ml[669,22654+12]..[669,22654+25])
                      Pexp_ident "implicit_stop" (tools/caml_tex.ml[669,22654+12]..[669,22654+25])
                    expression (tools/caml_tex.ml[669,22654+27]..[669,22654+49])
                      Pexp_apply
                      expression (tools/caml_tex.ml[669,22654+27]..[669,22654+42])
                        Pexp_ident "Buffer.contents" (tools/caml_tex.ml[669,22654+27]..[669,22654+42])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[669,22654+43]..[669,22654+49])
                            Pexp_ident "phrase" (tools/caml_tex.ml[669,22654+43]..[669,22654+49])
                      ]
                    expression (tools/caml_tex.ml[669,22654+51]..[669,22654+59])
                      Pexp_ident "expected" (tools/caml_tex.ml[669,22654+51]..[669,22654+59])
                  ]
                                                              ]
                                                              expression (tools/caml_tex.ml[671,22731+8]..[671,22731+15])
                                                                Pexp_apply
                                                                expression (tools/caml_tex.ml[671,22731+8]..[671,22731+12])
                                                                  Pexp_ident "read" (tools/caml_tex.ml[671,22731+8]..[671,22731+12])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[671,22731+13]..[671,22731+15])
                                                                      Pexp_construct "()" (tools/caml_tex.ml[671,22731+13]..[671,22731+15])
                                                                      None
                                                                ]
                                                    ]
                                                    expression (tools/caml_tex.ml[673,22756+6]..[711,24436+72])
                                                      Pexp_try
                                                      expression (tools/caml_tex.ml[673,22756+10]..[710,24425+10])
                                                        Pexp_while
                                                        expression (tools/caml_tex.ml[673,22756+16]..[673,22756+20])
                                                          Pexp_construct "true" (tools/caml_tex.ml[673,22756+16]..[673,22756+20])
                                                          None
                                                        expression (tools/caml_tex.ml[674,22780+8]..[709,24377+47])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (tools/caml_tex.ml[674,22780+12]..[674,22780+43])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (tools/caml_tex.ml[674,22780+12]..[674,22780+25])
                                                                    Ppat_var "implicit_stop" (tools/caml_tex.ml[674,22780+12]..[674,22780+25])
                                                                  pattern (tools/caml_tex.ml[674,22780+27]..[674,22780+33])
                                                                    Ppat_var "phrase" (tools/caml_tex.ml[674,22780+27]..[674,22780+33])
                                                                  pattern (tools/caml_tex.ml[674,22780+35]..[674,22780+43])
                                                                    Ppat_var "expected" (tools/caml_tex.ml[674,22780+35]..[674,22780+43])
                                                                ]
                                                              expression (tools/caml_tex.ml[674,22780+46]..[674,22780+60])
                                                                Pexp_apply
                                                                expression (tools/caml_tex.ml[674,22780+46]..[674,22780+57])
                                                                  Pexp_ident "read_phrase" (tools/caml_tex.ml[674,22780+46]..[674,22780+57])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (tools/caml_tex.ml[674,22780+58]..[674,22780+60])
                                                                      Pexp_construct "()" (tools/caml_tex.ml[674,22780+58]..[674,22780+60])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (tools/caml_tex.ml[675,22844+8]..[709,24377+47])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (tools/caml_tex.ml[675,22844+12]..[675,22844+15])
                                                                  Ppat_var "ast" (tools/caml_tex.ml[675,22844+12]..[675,22844+15])
                                                                expression (tools/caml_tex.ml[675,22844+18]..[675,22844+49])
                                                                  Pexp_apply
                                                                  expression (tools/caml_tex.ml[675,22844+18]..[675,22844+32])
                                                                    Pexp_ident "Toplevel.parse" (tools/caml_tex.ml[675,22844+18]..[675,22844+32])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[675,22844+33]..[675,22844+37])
Pexp_ident "file" (tools/caml_tex.ml[675,22844+33]..[675,22844+37])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[675,22844+38]..[675,22844+42])
Pexp_ident "mode" (tools/caml_tex.ml[675,22844+38]..[675,22844+42])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (tools/caml_tex.ml[675,22844+43]..[675,22844+49])
Pexp_ident "phrase" (tools/caml_tex.ml[675,22844+43]..[675,22844+49])
                                                                  ]
                                                            ]
                                                            expression (tools/caml_tex.ml[676,22897+8]..[709,24377+47])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (tools/caml_tex.ml[676,22897+12]..[676,22897+20])
                                                                    Ppat_var "ellipses" (tools/caml_tex.ml[676,22897+12]..[676,22897+20])
                                                                  expression (tools/caml_tex.ml[676,22897+23]..[676,22897+40])
                                                                    Pexp_apply
                                                                    expression (tools/caml_tex.ml[676,22897+23]..[676,22897+36])
                                                                      Pexp_ident "Ellipsis.find" (tools/caml_tex.ml[676,22897+23]..[676,22897+36])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[676,22897+37]..[676,22897+40])
  Pexp_ident "ast" (tools/caml_tex.ml[676,22897+37]..[676,22897+40])
                                                                    ]
                                                              ]
                                                              expression (tools/caml_tex.ml[677,22941+8]..[709,24377+47])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (tools/caml_tex.ml[677,22941+12]..[677,22941+14])
                                                                      Ppat_construct "()" (tools/caml_tex.ml[677,22941+12]..[677,22941+14])
                                                                      None
                                                                    expression (tools/caml_tex.ml[677,22941+17]..[677,22941+44])
                                                                      Pexp_apply
                                                                      expression (tools/caml_tex.ml[677,22941+17]..[677,22941+40])
Pexp_open Fresh
module_expr (tools/caml_tex.ml[677,22941+17]..[677,22941+25])
  Pmod_ident "Toplevel" (tools/caml_tex.ml[677,22941+17]..[677,22941+25])
expression (tools/caml_tex.ml[677,22941+27]..[677,22941+39])
  Pexp_apply
  expression (tools/caml_tex.ml[677,22941+27]..[677,22941+31])
    Pexp_ident "exec" (tools/caml_tex.ml[677,22941+27]..[677,22941+31])
  [
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[677,22941+32]..[677,22941+39])
        Pexp_ident "out_fmt" (tools/caml_tex.ml[677,22941+32]..[677,22941+39])
  ]
                                                                      [
<arg>
Nolabel
  expression (tools/caml_tex.ml[677,22941+41]..[677,22941+44])
    Pexp_ident "ast" (tools/caml_tex.ml[677,22941+41]..[677,22941+44])
                                                                      ]
                                                                ]
                                                                expression (tools/caml_tex.ml[678,22989+8]..[709,24377+47])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (tools/caml_tex.ml[678,22989+12]..[678,22989+15])
Ppat_var "out" (tools/caml_tex.ml[678,22989+12]..[678,22989+15])
                                                                      expression (tools/caml_tex.ml[678,22989+18]..[678,22989+41])
Pexp_apply
expression (tools/caml_tex.ml[678,22989+18]..[678,22989+38])
  Pexp_ident "Toplevel.read_output" (tools/caml_tex.ml[678,22989+18]..[678,22989+38])
[
  <arg>
  Nolabel
    expression (tools/caml_tex.ml[678,22989+39]..[678,22989+41])
      Pexp_construct "()" (tools/caml_tex.ml[678,22989+39]..[678,22989+41])
      None
]
                                                                  ]
                                                                  expression (tools/caml_tex.ml[679,23034+8]..[709,24377+47])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (tools/caml_tex.ml[679,23034+12]..[679,23034+22])
  Ppat_var "error_msgs" (tools/caml_tex.ml[679,23034+12]..[679,23034+22])
expression (tools/caml_tex.ml[679,23034+25]..[679,23034+70])
  Pexp_apply
  expression (tools/caml_tex.ml[679,23034+25]..[679,23034+38])
    Pexp_ident "String.concat" (tools/caml_tex.ml[679,23034+25]..[679,23034+38])
  [
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[679,23034+39]..[679,23034+41])
        Pexp_constant PConst_string("",(tools/caml_tex.ml[679,23034+40]..[679,23034+40]),None)
    <arg>
    Nolabel
      expression (tools/caml_tex.ml[679,23034+42]..[679,23034+70])
        Pexp_apply
        expression (tools/caml_tex.ml[679,23034+56]..[679,23034+57])
          Pexp_ident "@" (tools/caml_tex.ml[679,23034+56]..[679,23034+57])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[679,23034+43]..[679,23034+55])
              Pexp_field
              expression (tools/caml_tex.ml[679,23034+43]..[679,23034+46])
                Pexp_ident "out" (tools/caml_tex.ml[679,23034+43]..[679,23034+46])
              "warnings" (tools/caml_tex.ml[679,23034+47]..[679,23034+55])
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[679,23034+58]..[679,23034+69])
              Pexp_construct "::" (tools/caml_tex.ml[679,23034+59]..[679,23034+69]) ghost
              Some
                expression (tools/caml_tex.ml[679,23034+59]..[679,23034+69]) ghost
                  Pexp_tuple
                  [
                    expression (tools/caml_tex.ml[679,23034+59]..[679,23034+68])
                      Pexp_field
                      expression (tools/caml_tex.ml[679,23034+59]..[679,23034+62])
                        Pexp_ident "out" (tools/caml_tex.ml[679,23034+59]..[679,23034+62])
                      "error" (tools/caml_tex.ml[679,23034+63]..[679,23034+68])
                    expression (tools/caml_tex.ml[679,23034+68]..[679,23034+69]) ghost
                      Pexp_construct "[]" (tools/caml_tex.ml[679,23034+68]..[679,23034+69]) ghost
                      None
                  ]
        ]
  ]
                                                                    ]
                                                                    expression (tools/caml_tex.ml[680,23108+8]..[709,24377+47])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (tools/caml_tex.ml[680,23108+12]..[680,23108+18])
    Ppat_var "output" (tools/caml_tex.ml[680,23108+12]..[680,23108+18])
  expression (tools/caml_tex.ml[680,23108+21]..[680,23108+74])
    Pexp_apply
    expression (tools/caml_tex.ml[680,23108+21]..[680,23108+34])
      Pexp_ident "String.concat" (tools/caml_tex.ml[680,23108+21]..[680,23108+34])
    [
      <arg>
      Nolabel
        expression (tools/caml_tex.ml[680,23108+35]..[680,23108+37])
          Pexp_constant PConst_string("",(tools/caml_tex.ml[680,23108+36]..[680,23108+36]),None)
      <arg>
      Nolabel
        expression (tools/caml_tex.ml[680,23108+38]..[680,23108+74])
          Pexp_construct "::" (tools/caml_tex.ml[680,23108+39]..[680,23108+74]) ghost
          Some
            expression (tools/caml_tex.ml[680,23108+39]..[680,23108+74]) ghost
              Pexp_tuple
              [
                expression (tools/caml_tex.ml[680,23108+39]..[680,23108+49])
                  Pexp_ident "error_msgs" (tools/caml_tex.ml[680,23108+39]..[680,23108+49])
                expression (tools/caml_tex.ml[680,23108+51]..[680,23108+74]) ghost
                  Pexp_construct "::" (tools/caml_tex.ml[680,23108+51]..[680,23108+74]) ghost
                  Some
                    expression (tools/caml_tex.ml[680,23108+51]..[680,23108+74]) ghost
                      Pexp_tuple
                      [
                        expression (tools/caml_tex.ml[680,23108+51]..[680,23108+61])
                          Pexp_field
                          expression (tools/caml_tex.ml[680,23108+51]..[680,23108+54])
                            Pexp_ident "out" (tools/caml_tex.ml[680,23108+51]..[680,23108+54])
                          "stdout" (tools/caml_tex.ml[680,23108+55]..[680,23108+61])
                        expression (tools/caml_tex.ml[680,23108+63]..[680,23108+74]) ghost
                          Pexp_construct "::" (tools/caml_tex.ml[680,23108+63]..[680,23108+74]) ghost
                          Some
                            expression (tools/caml_tex.ml[680,23108+63]..[680,23108+74]) ghost
                              Pexp_tuple
                              [
                                expression (tools/caml_tex.ml[680,23108+63]..[680,23108+73])
                                  Pexp_field
                                  expression (tools/caml_tex.ml[680,23108+63]..[680,23108+66])
                                    Pexp_ident "out" (tools/caml_tex.ml[680,23108+63]..[680,23108+66])
                                  "values" (tools/caml_tex.ml[680,23108+67]..[680,23108+73])
                                expression (tools/caml_tex.ml[680,23108+73]..[680,23108+74]) ghost
                                  Pexp_construct "[]" (tools/caml_tex.ml[680,23108+73]..[680,23108+74]) ghost
                                  None
                              ]
                      ]
              ]
    ]
                                                                      ]
                                                                      expression (tools/caml_tex.ml[681,23186+8]..[709,24377+47])
Pexp_let Nonrec
[
  <def>
    pattern (tools/caml_tex.ml[681,23186+12]..[681,23186+18])
      Ppat_var "status" (tools/caml_tex.ml[681,23186+12]..[681,23186+18])
    expression (tools/caml_tex.ml[681,23186+21]..[681,23186+57])
      Pexp_apply
      expression (tools/caml_tex.ml[681,23186+21]..[681,23186+34])
        Pexp_ident "Output.status" (tools/caml_tex.ml[681,23186+21]..[681,23186+34])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[681,23186+35]..[681,23186+47])
            Pexp_field
            expression (tools/caml_tex.ml[681,23186+35]..[681,23186+38])
              Pexp_ident "out" (tools/caml_tex.ml[681,23186+35]..[681,23186+38])
            "warnings" (tools/caml_tex.ml[681,23186+39]..[681,23186+47])
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[681,23186+48]..[681,23186+57])
            Pexp_field
            expression (tools/caml_tex.ml[681,23186+48]..[681,23186+51])
              Pexp_ident "out" (tools/caml_tex.ml[681,23186+48]..[681,23186+51])
            "error" (tools/caml_tex.ml[681,23186+52]..[681,23186+57])
      ]
]
expression (tools/caml_tex.ml[682,23247+8]..[709,24377+47])
  Pexp_sequence
  expression (tools/caml_tex.ml[682,23247+8]..[691,23552+63])
    Pexp_ifthenelse
    expression (tools/caml_tex.ml[682,23247+11]..[682,23247+29])
      Pexp_apply
      expression (tools/caml_tex.ml[682,23247+18]..[682,23247+20])
        Pexp_ident "<>" (tools/caml_tex.ml[682,23247+18]..[682,23247+20])
      [
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[682,23247+11]..[682,23247+17])
            Pexp_ident "status" (tools/caml_tex.ml[682,23247+11]..[682,23247+17])
        <arg>
        Nolabel
          expression (tools/caml_tex.ml[682,23247+21]..[682,23247+29])
            Pexp_ident "expected" (tools/caml_tex.ml[682,23247+21]..[682,23247+29])
      ]
    expression (tools/caml_tex.ml[682,23247+35]..[690,23491+60])
      Pexp_let Nonrec
      [
        <def>
          pattern (tools/caml_tex.ml[683,23284+14]..[683,23284+20])
            Ppat_var "source" (tools/caml_tex.ml[683,23284+14]..[683,23284+20])
          expression (tools/caml_tex.ml[683,23284+23]..[688,23432+13])
            Pexp_open Fresh
            module_expr (tools/caml_tex.ml[683,23284+23]..[683,23284+29])
              Pmod_ident "Output" (tools/caml_tex.ml[683,23284+23]..[683,23284+29])
            expression (tools/caml_tex.ml[683,23284+30]..[688,23432+13])
              Pexp_record
              [
                "file" (tools/caml_tex.ml[684,23316+14]..[684,23316+18]) ghost
                  expression (tools/caml_tex.ml[684,23316+14]..[684,23316+18])
                    Pexp_ident "file" (tools/caml_tex.ml[684,23316+14]..[684,23316+18])
                "lines" (tools/caml_tex.ml[685,23336+14]..[685,23336+19])
                  expression (tools/caml_tex.ml[685,23336+22]..[685,23336+51])
                    Pexp_tuple
                    [
                      expression (tools/caml_tex.ml[685,23336+23]..[685,23336+36])
                        Pexp_apply
                        expression (tools/caml_tex.ml[685,23336+23]..[685,23336+24])
                          Pexp_ident "!" (tools/caml_tex.ml[685,23336+23]..[685,23336+24])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[685,23336+24]..[685,23336+36])
                              Pexp_ident "phrase_start" (tools/caml_tex.ml[685,23336+24]..[685,23336+36])
                        ]
                      expression (tools/caml_tex.ml[685,23336+38]..[685,23336+50])
                        Pexp_apply
                        expression (tools/caml_tex.ml[685,23336+38]..[685,23336+39])
                          Pexp_ident "!" (tools/caml_tex.ml[685,23336+38]..[685,23336+39])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[685,23336+39]..[685,23336+50])
                              Pexp_ident "phrase_stop" (tools/caml_tex.ml[685,23336+39]..[685,23336+50])
                        ]
                    ]
                "phrase" (tools/caml_tex.ml[686,23389+14]..[686,23389+20]) ghost
                  expression (tools/caml_tex.ml[686,23389+14]..[686,23389+20])
                    Pexp_ident "phrase" (tools/caml_tex.ml[686,23389+14]..[686,23389+20])
                "output" (tools/caml_tex.ml[687,23411+14]..[687,23411+20]) ghost
                  expression (tools/caml_tex.ml[687,23411+14]..[687,23411+20])
                    Pexp_ident "output" (tools/caml_tex.ml[687,23411+14]..[687,23411+20])
              ]
              None
      ]
      expression (tools/caml_tex.ml[689,23449+10]..[690,23491+58])
        Pexp_apply
        expression (tools/caml_tex.ml[689,23449+10]..[689,23449+15])
          Pexp_ident "raise" (tools/caml_tex.ml[689,23449+10]..[689,23449+15])
        [
          <arg>
          Nolabel
            expression (tools/caml_tex.ml[689,23449+16]..[690,23491+58])
              Pexp_construct "Output.Unexpected_status" (tools/caml_tex.ml[689,23449+17]..[689,23449+41])
              Some
                expression (tools/caml_tex.ml[690,23491+19]..[690,23491+56])
                  Pexp_record
                  [
                    "Output.got" (tools/caml_tex.ml[690,23491+20]..[690,23491+30])
                      expression (tools/caml_tex.ml[690,23491+31]..[690,23491+37])
                        Pexp_ident "status" (tools/caml_tex.ml[690,23491+31]..[690,23491+37])
                    "expected" (tools/caml_tex.ml[690,23491+39]..[690,23491+47]) ghost
                      expression (tools/caml_tex.ml[690,23491+39]..[690,23491+47])
                        Pexp_ident "expected" (tools/caml_tex.ml[690,23491+39]..[690,23491+47])
                    "source" (tools/caml_tex.ml[690,23491+49]..[690,23491+55]) ghost
                      expression (tools/caml_tex.ml[690,23491+49]..[690,23491+55])
                        Pexp_ident "source" (tools/caml_tex.ml[690,23491+49]..[690,23491+55])
                  ]
                  None
        ]
    Some
      expression (tools/caml_tex.ml[691,23552+13]..[691,23552+63])
        Pexp_sequence
        expression (tools/caml_tex.ml[691,23552+15]..[691,23552+31])
          Pexp_apply
          expression (tools/caml_tex.ml[691,23552+15]..[691,23552+19])
            Pexp_ident "incr" (tools/caml_tex.ml[691,23552+15]..[691,23552+19])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[691,23552+20]..[691,23552+31])
                Pexp_ident "phrase_stop" (tools/caml_tex.ml[691,23552+20]..[691,23552+31])
          ]
        expression (tools/caml_tex.ml[691,23552+33]..[691,23552+61])
          Pexp_apply
          expression (tools/caml_tex.ml[691,23552+46]..[691,23552+48])
            Pexp_ident ":=" (tools/caml_tex.ml[691,23552+46]..[691,23552+48])
          [
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[691,23552+33]..[691,23552+45])
                Pexp_ident "phrase_start" (tools/caml_tex.ml[691,23552+33]..[691,23552+45])
            <arg>
            Nolabel
              expression (tools/caml_tex.ml[691,23552+49]..[691,23552+61])
                Pexp_apply
                expression (tools/caml_tex.ml[691,23552+49]..[691,23552+50])
                  Pexp_ident "!" (tools/caml_tex.ml[691,23552+49]..[691,23552+50])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[691,23552+50]..[691,23552+61])
                      Pexp_ident "phrase_stop" (tools/caml_tex.ml[691,23552+50]..[691,23552+61])
                ]
          ]
  expression (tools/caml_tex.ml[692,23617+8]..[709,24377+47])
    Pexp_let Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[692,23617+12]..[692,23617+18])
          Ppat_var "phrase" (tools/caml_tex.ml[692,23617+12]..[692,23617+18])
        expression (tools/caml_tex.ml[693,23638+10]..[697,23815+36])
          Pexp_let Nonrec
          [
            <def>
              pattern (tools/caml_tex.ml[693,23638+14]..[693,23638+23])
                Ppat_var "underline" (tools/caml_tex.ml[693,23638+14]..[693,23638+23])
              expression (tools/caml_tex.ml[694,23664+12]..[695,23729+28])
                Pexp_apply
                expression (tools/caml_tex.ml[694,23664+12]..[694,23664+20])
                  Pexp_ident "List.map" (tools/caml_tex.ml[694,23664+12]..[694,23664+20])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[694,23664+21]..[694,23664+64])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (tools/caml_tex.ml[694,23664+26]..[694,23664+31])
                        Ppat_tuple
                        [
                          pattern (tools/caml_tex.ml[694,23664+27]..[694,23664+28])
                            Ppat_var "x" (tools/caml_tex.ml[694,23664+27]..[694,23664+28])
                          pattern (tools/caml_tex.ml[694,23664+29]..[694,23664+30])
                            Ppat_var "y" (tools/caml_tex.ml[694,23664+29]..[694,23664+30])
                        ]
                      expression (tools/caml_tex.ml[694,23664+35]..[694,23664+63])
                        Pexp_apply
                        expression (tools/caml_tex.ml[694,23664+35]..[694,23664+59])
                          Pexp_ident "Text_transform.underline" (tools/caml_tex.ml[694,23664+35]..[694,23664+59])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[694,23664+60]..[694,23664+61])
                              Pexp_ident "x" (tools/caml_tex.ml[694,23664+60]..[694,23664+61])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[694,23664+62]..[694,23664+63])
                              Pexp_ident "y" (tools/caml_tex.ml[694,23664+62]..[694,23664+63])
                        ]
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[695,23729+14]..[695,23729+28])
                      Pexp_field
                      expression (tools/caml_tex.ml[695,23729+14]..[695,23729+17])
                        Pexp_ident "out" (tools/caml_tex.ml[695,23729+14]..[695,23729+17])
                      "underlined" (tools/caml_tex.ml[695,23729+18]..[695,23729+28])
                ]
          ]
          expression (tools/caml_tex.ml[696,23761+10]..[697,23815+36])
            Pexp_apply
            expression (tools/caml_tex.ml[696,23761+10]..[696,23761+30])
              Pexp_ident "Text_transform.apply" (tools/caml_tex.ml[696,23761+10]..[696,23761+30])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[696,23761+31]..[696,23761+53])
                  Pexp_apply
                  expression (tools/caml_tex.ml[696,23761+42]..[696,23761+43])
                    Pexp_ident "@" (tools/caml_tex.ml[696,23761+42]..[696,23761+43])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[696,23761+32]..[696,23761+41])
                        Pexp_ident "underline" (tools/caml_tex.ml[696,23761+32]..[696,23761+41])
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[696,23761+44]..[696,23761+52])
                        Pexp_ident "ellipses" (tools/caml_tex.ml[696,23761+44]..[696,23761+52])
                  ]
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[697,23815+12]..[697,23815+16])
                  Pexp_ident "file" (tools/caml_tex.ml[697,23815+12]..[697,23815+16])
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[697,23815+17]..[697,23815+29])
                  Pexp_apply
                  expression (tools/caml_tex.ml[697,23815+17]..[697,23815+18])
                    Pexp_ident "!" (tools/caml_tex.ml[697,23815+17]..[697,23815+18])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[697,23815+18]..[697,23815+29])
                        Pexp_ident "phrase_stop" (tools/caml_tex.ml[697,23815+18]..[697,23815+29])
                  ]
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[697,23815+30]..[697,23815+36])
                  Pexp_ident "phrase" (tools/caml_tex.ml[697,23815+30]..[697,23815+36])
            ]
    ]
    expression (tools/caml_tex.ml[699,23930+8]..[709,24377+47])
      Pexp_let Nonrec
      [
        <def>
          pattern (tools/caml_tex.ml[699,23930+12]..[699,23930+18])
            Ppat_var "output" (tools/caml_tex.ml[699,23930+12]..[699,23930+18])
          expression (tools/caml_tex.ml[699,23930+21]..[699,23930+58])
            Pexp_apply
            expression (tools/caml_tex.ml[699,23930+21]..[699,23930+51])
              Pexp_ident "Text_transform.escape_specials" (tools/caml_tex.ml[699,23930+21]..[699,23930+51])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[699,23930+52]..[699,23930+58])
                  Pexp_ident "output" (tools/caml_tex.ml[699,23930+52]..[699,23930+58])
            ]
      ]
      expression (tools/caml_tex.ml[700,23992+8]..[709,24377+47])
        Pexp_let Nonrec
        [
          <def>
            pattern (tools/caml_tex.ml[700,23992+12]..[700,23992+18])
              Ppat_var "phrase" (tools/caml_tex.ml[700,23992+12]..[700,23992+18])
            expression (tools/caml_tex.ml[700,23992+21]..[700,23992+45])
              Pexp_apply
              expression (tools/caml_tex.ml[700,23992+21]..[700,23992+33])
                Pexp_ident "format_input" (tools/caml_tex.ml[700,23992+21]..[700,23992+33])
              [
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[700,23992+34]..[700,23992+38])
                    Pexp_ident "mode" (tools/caml_tex.ml[700,23992+34]..[700,23992+38])
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[700,23992+39]..[700,23992+45])
                    Pexp_ident "phrase" (tools/caml_tex.ml[700,23992+39]..[700,23992+45])
              ]
        ]
        expression (tools/caml_tex.ml[701,24041+8]..[709,24377+47])
          Pexp_let Nonrec
          [
            <def>
              pattern (tools/caml_tex.ml[701,24041+12]..[701,24041+24])
                Ppat_var "final_output" (tools/caml_tex.ml[701,24041+12]..[701,24041+24])
              expression (tools/caml_tex.ml[701,24041+27]..[701,24041+69])
                Pexp_ifthenelse
                expression (tools/caml_tex.ml[701,24041+30]..[701,24041+41])
                  Pexp_ident "omit_answer" (tools/caml_tex.ml[701,24041+30]..[701,24041+41])
                expression (tools/caml_tex.ml[701,24041+47]..[701,24041+57])
                  Pexp_ident "error_msgs" (tools/caml_tex.ml[701,24041+47]..[701,24041+57])
                Some
                  expression (tools/caml_tex.ml[701,24041+63]..[701,24041+69])
                    Pexp_ident "output" (tools/caml_tex.ml[701,24041+63]..[701,24041+69])
          ]
          expression (tools/caml_tex.ml[702,24114+8]..[709,24377+47])
            Pexp_sequence
            expression (tools/caml_tex.ml[702,24114+8]..[702,24114+35])
              Pexp_apply
              expression (tools/caml_tex.ml[702,24114+8]..[702,24114+13])
                Pexp_ident "start" (tools/caml_tex.ml[702,24114+8]..[702,24114+13])
              [
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[702,24114+14]..[702,24114+21])
                    Pexp_ident "tex_fmt" (tools/caml_tex.ml[702,24114+14]..[702,24114+21])
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[702,24114+22]..[702,24114+32])
                    Pexp_ident "phrase_env" (tools/caml_tex.ml[702,24114+22]..[702,24114+32])
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[702,24114+33]..[702,24114+35])
                    Pexp_construct "[]" (tools/caml_tex.ml[702,24114+33]..[702,24114+35])
                    None
              ]
            expression (tools/caml_tex.ml[703,24151+8]..[709,24377+47])
              Pexp_sequence
              expression (tools/caml_tex.ml[703,24151+8]..[703,24151+41])
                Pexp_apply
                expression (tools/caml_tex.ml[703,24151+8]..[703,24151+16])
                  Pexp_ident "code_env" (tools/caml_tex.ml[703,24151+8]..[703,24151+16])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[703,24151+17]..[703,24151+26])
                      Pexp_ident "input_env" (tools/caml_tex.ml[703,24151+17]..[703,24151+26])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[703,24151+27]..[703,24151+34])
                      Pexp_ident "tex_fmt" (tools/caml_tex.ml[703,24151+27]..[703,24151+34])
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[703,24151+35]..[703,24151+41])
                      Pexp_ident "phrase" (tools/caml_tex.ml[703,24151+35]..[703,24151+41])
                ]
              expression (tools/caml_tex.ml[704,24194+8]..[709,24377+47])
                Pexp_sequence
                expression (tools/caml_tex.ml[704,24194+8]..[705,24241+59])
                  Pexp_ifthenelse
                  expression (tools/caml_tex.ml[704,24194+11]..[704,24194+41])
                    Pexp_apply
                    expression (tools/caml_tex.ml[704,24194+38]..[704,24194+39])
                      Pexp_ident ">" (tools/caml_tex.ml[704,24194+38]..[704,24194+39])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[704,24194+11]..[704,24194+37])
                          Pexp_apply
                          expression (tools/caml_tex.ml[704,24194+11]..[704,24194+24])
                            Pexp_ident "String.length" (tools/caml_tex.ml[704,24194+11]..[704,24194+24])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[704,24194+25]..[704,24194+37])
                                Pexp_ident "final_output" (tools/caml_tex.ml[704,24194+25]..[704,24194+37])
                          ]
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[704,24194+40]..[704,24194+41])
                          Pexp_constant PConst_int (0,None)
                    ]
                  expression (tools/caml_tex.ml[705,24241+10]..[705,24241+59])
                    Pexp_apply
                    expression (tools/caml_tex.ml[705,24241+10]..[705,24241+18])
                      Pexp_ident "code_env" (tools/caml_tex.ml[705,24241+10]..[705,24241+18])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[705,24241+19]..[705,24241+38])
                          Pexp_apply
                          expression (tools/caml_tex.ml[705,24241+20]..[705,24241+30])
                            Pexp_ident "Output.env" (tools/caml_tex.ml[705,24241+20]..[705,24241+30])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[705,24241+31]..[705,24241+37])
                                Pexp_ident "status" (tools/caml_tex.ml[705,24241+31]..[705,24241+37])
                          ]
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[705,24241+39]..[705,24241+46])
                          Pexp_ident "tex_fmt" (tools/caml_tex.ml[705,24241+39]..[705,24241+46])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[705,24241+47]..[705,24241+59])
                          Pexp_ident "final_output" (tools/caml_tex.ml[705,24241+47]..[705,24241+59])
                    ]
                  None
                expression (tools/caml_tex.ml[706,24302+8]..[709,24377+47])
                  Pexp_sequence
                  expression (tools/caml_tex.ml[706,24302+8]..[706,24302+31])
                    Pexp_apply
                    expression (tools/caml_tex.ml[706,24302+8]..[706,24302+12])
                      Pexp_ident "stop" (tools/caml_tex.ml[706,24302+8]..[706,24302+12])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[706,24302+13]..[706,24302+20])
                          Pexp_ident "tex_fmt" (tools/caml_tex.ml[706,24302+13]..[706,24302+20])
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[706,24302+21]..[706,24302+31])
                          Pexp_ident "phrase_env" (tools/caml_tex.ml[706,24302+21]..[706,24302+31])
                    ]
                  expression (tools/caml_tex.ml[707,24335+8]..[709,24377+47])
                    Pexp_sequence
                    expression (tools/caml_tex.ml[707,24335+8]..[707,24335+16])
                      Pexp_apply
                      expression (tools/caml_tex.ml[707,24335+8]..[707,24335+13])
                        Pexp_ident "flush" (tools/caml_tex.ml[707,24335+8]..[707,24335+13])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[707,24335+14]..[707,24335+16])
                            Pexp_ident "oc" (tools/caml_tex.ml[707,24335+14]..[707,24335+16])
                      ]
                    expression (tools/caml_tex.ml[708,24353+8]..[709,24377+47])
                      Pexp_sequence
                      expression (tools/caml_tex.ml[708,24353+8]..[708,24353+22])
                        Pexp_apply
                        expression (tools/caml_tex.ml[708,24353+14]..[708,24353+16])
                          Pexp_ident ":=" (tools/caml_tex.ml[708,24353+14]..[708,24353+16])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[708,24353+8]..[708,24353+13])
                              Pexp_ident "first" (tools/caml_tex.ml[708,24353+8]..[708,24353+13])
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[708,24353+17]..[708,24353+22])
                              Pexp_construct "false" (tools/caml_tex.ml[708,24353+17]..[708,24353+22])
                              None
                        ]
                      expression (tools/caml_tex.ml[709,24377+8]..[709,24377+47])
                        Pexp_ifthenelse
                        expression (tools/caml_tex.ml[709,24377+11]..[709,24377+24])
                          Pexp_ident "implicit_stop" (tools/caml_tex.ml[709,24377+11]..[709,24377+24])
                        expression (tools/caml_tex.ml[709,24377+30]..[709,24377+47])
                          Pexp_apply
                          expression (tools/caml_tex.ml[709,24377+30]..[709,24377+35])
                            Pexp_ident "raise" (tools/caml_tex.ml[709,24377+30]..[709,24377+35])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[709,24377+36]..[709,24377+47])
                                Pexp_construct "End_of_file" (tools/caml_tex.ml[709,24377+36]..[709,24377+47])
                                None
                          ]
                        None
                                                      [
                                                        <case>
                                                          pattern (tools/caml_tex.ml[711,24436+11]..[711,24436+22])
                                                            Ppat_construct "End_of_file" (tools/caml_tex.ml[711,24436+11]..[711,24436+22])
                                                            None
                                                          expression (tools/caml_tex.ml[711,24436+26]..[711,24436+72])
                                                            Pexp_sequence
                                                            expression (tools/caml_tex.ml[711,24436+26]..[711,24436+53])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[711,24436+38]..[711,24436+40])
                                                                Pexp_ident ":=" (tools/caml_tex.ml[711,24436+38]..[711,24436+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[711,24436+26]..[711,24436+38])
                                                                    Pexp_ident "phrase_start" (tools/caml_tex.ml[711,24436+26]..[711,24436+38])
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[711,24436+41]..[711,24436+53])
                                                                    Pexp_apply
                                                                    expression (tools/caml_tex.ml[711,24436+41]..[711,24436+42])
                                                                      Pexp_ident "!" (tools/caml_tex.ml[711,24436+41]..[711,24436+42])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (tools/caml_tex.ml[711,24436+42]..[711,24436+53])
  Pexp_ident "phrase_stop" (tools/caml_tex.ml[711,24436+42]..[711,24436+53])
                                                                    ]
                                                              ]
                                                            expression (tools/caml_tex.ml[711,24436+55]..[711,24436+72])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[711,24436+55]..[711,24436+59])
                                                                Pexp_ident "stop" (tools/caml_tex.ml[711,24436+55]..[711,24436+59])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[711,24436+60]..[711,24436+67])
                                                                    Pexp_ident "tex_fmt" (tools/caml_tex.ml[711,24436+60]..[711,24436+67])
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[711,24436+68]..[711,24436+72])
                                                                    Pexp_ident "main" (tools/caml_tex.ml[711,24436+68]..[711,24436+72])
                                                              ]
                                                      ]
                                    Some
                                      expression (tools/caml_tex.ml[713,24517+9]..[730,25184+7])
                                        Pexp_ifthenelse
                                        expression (tools/caml_tex.ml[713,24517+12]..[713,24517+65])
                                          Pexp_apply
                                          expression (tools/caml_tex.ml[713,24517+12]..[713,24517+24])
                                            Pexp_ident "string_match" (tools/caml_tex.ml[713,24517+12]..[713,24517+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[713,24517+25]..[713,24517+56])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[713,24517+25]..[713,24517+27])
                                                  Pexp_ident "~!" (tools/caml_tex.ml[713,24517+25]..[713,24517+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[713,24517+27]..[713,24517+56])
                                                      Pexp_constant PConst_string("\\\\begin{caml_eval}[ \t]*$",(tools/caml_tex.ml[713,24517+28]..[713,24517+55]),None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[713,24517+57]..[713,24517+63])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[713,24517+57]..[713,24517+58])
                                                  Pexp_ident "!" (tools/caml_tex.ml[713,24517+57]..[713,24517+58])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[713,24517+58]..[713,24517+63])
                                                      Pexp_ident "input" (tools/caml_tex.ml[713,24517+58]..[713,24517+63])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (tools/caml_tex.ml[713,24517+64]..[713,24517+65])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (tools/caml_tex.ml[714,24583+9]..[727,25082+7])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (tools/caml_tex.ml[715,24598+10]..[715,24598+21])
                                                Ppat_var "eval_buffer" (tools/caml_tex.ml[715,24598+10]..[715,24598+21])
                                              expression (tools/caml_tex.ml[715,24598+24]..[715,24598+41])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[715,24598+24]..[715,24598+37])
                                                  Pexp_ident "Buffer.create" (tools/caml_tex.ml[715,24598+24]..[715,24598+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[715,24598+38]..[715,24598+41])
                                                      Pexp_constant PConst_int (256,None)
                                                ]
                                          ]
                                          expression (tools/caml_tex.ml[716,24643+6]..[726,25006+75])
                                            Pexp_sequence
                                            expression (tools/caml_tex.ml[716,24643+6]..[724,24950+10])
                                              Pexp_while
                                              expression (tools/caml_tex.ml[716,24643+12]..[717,24679+65])
                                                Pexp_sequence
                                                expression (tools/caml_tex.ml[716,24643+12]..[716,24643+34])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[716,24643+18]..[716,24643+20])
                                                    Pexp_ident ":=" (tools/caml_tex.ml[716,24643+18]..[716,24643+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[716,24643+12]..[716,24643+17])
                                                        Pexp_ident "input" (tools/caml_tex.ml[716,24643+12]..[716,24643+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[716,24643+21]..[716,24643+34])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[716,24643+21]..[716,24643+31])
                                                          Pexp_ident "input_line" (tools/caml_tex.ml[716,24643+21]..[716,24643+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[716,24643+32]..[716,24643+34])
                                                              Pexp_ident "ic" (tools/caml_tex.ml[716,24643+32]..[716,24643+34])
                                                        ]
                                                  ]
                                                expression (tools/caml_tex.ml[717,24679+8]..[717,24679+65])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[717,24679+8]..[717,24679+11])
                                                    Pexp_ident "not" (tools/caml_tex.ml[717,24679+8]..[717,24679+11])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[717,24679+12]..[717,24679+65])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[717,24679+13]..[717,24679+25])
                                                          Pexp_ident "string_match" (tools/caml_tex.ml[717,24679+13]..[717,24679+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[717,24679+26]..[717,24679+55])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[717,24679+26]..[717,24679+28])
                                                                Pexp_ident "~!" (tools/caml_tex.ml[717,24679+26]..[717,24679+28])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[717,24679+28]..[717,24679+55])
                                                                    Pexp_constant PConst_string("\\\\end{caml_eval}[ \t]*$",(tools/caml_tex.ml[717,24679+29]..[717,24679+54]),None)
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[717,24679+56]..[717,24679+62])
                                                              Pexp_apply
                                                              expression (tools/caml_tex.ml[717,24679+56]..[717,24679+57])
                                                                Pexp_ident "!" (tools/caml_tex.ml[717,24679+56]..[717,24679+57])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (tools/caml_tex.ml[717,24679+57]..[717,24679+62])
                                                                    Pexp_ident "input" (tools/caml_tex.ml[717,24679+57]..[717,24679+62])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[717,24679+63]..[717,24679+64])
                                                              Pexp_constant PConst_int (0,None)
                                                        ]
                                                  ]
                                              expression (tools/caml_tex.ml[719,24754+8]..[723,24938+11])
                                                Pexp_sequence
                                                expression (tools/caml_tex.ml[719,24754+8]..[719,24754+44])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[719,24754+8]..[719,24754+25])
                                                    Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[719,24754+8]..[719,24754+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[719,24754+26]..[719,24754+37])
                                                        Pexp_ident "eval_buffer" (tools/caml_tex.ml[719,24754+26]..[719,24754+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[719,24754+38]..[719,24754+44])
                                                        Pexp_apply
                                                        expression (tools/caml_tex.ml[719,24754+38]..[719,24754+39])
                                                          Pexp_ident "!" (tools/caml_tex.ml[719,24754+38]..[719,24754+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (tools/caml_tex.ml[719,24754+39]..[719,24754+44])
                                                              Pexp_ident "input" (tools/caml_tex.ml[719,24754+39]..[719,24754+44])
                                                        ]
                                                  ]
                                                expression (tools/caml_tex.ml[720,24800+8]..[723,24938+11])
                                                  Pexp_sequence
                                                  expression (tools/caml_tex.ml[720,24800+8]..[720,24800+40])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[720,24800+8]..[720,24800+23])
                                                      Pexp_ident "Buffer.add_char" (tools/caml_tex.ml[720,24800+8]..[720,24800+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[720,24800+24]..[720,24800+35])
                                                          Pexp_ident "eval_buffer" (tools/caml_tex.ml[720,24800+24]..[720,24800+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[720,24800+36]..[720,24800+40])
                                                          Pexp_constant PConst_char 0a
                                                    ]
                                                  expression (tools/caml_tex.ml[721,24842+8]..[723,24938+11])
                                                    Pexp_ifthenelse
                                                    expression (tools/caml_tex.ml[721,24842+11]..[721,24842+48])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[721,24842+11]..[721,24842+23])
                                                        Pexp_ident "string_match" (tools/caml_tex.ml[721,24842+11]..[721,24842+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[721,24842+24]..[721,24842+39])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[721,24842+24]..[721,24842+26])
                                                              Pexp_ident "~!" (tools/caml_tex.ml[721,24842+24]..[721,24842+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[721,24842+26]..[721,24842+39])
                                                                  Pexp_constant PConst_string(".*;;[ \t]*$",(tools/caml_tex.ml[721,24842+27]..[721,24842+38]),None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[721,24842+40]..[721,24842+46])
                                                            Pexp_apply
                                                            expression (tools/caml_tex.ml[721,24842+40]..[721,24842+41])
                                                              Pexp_ident "!" (tools/caml_tex.ml[721,24842+40]..[721,24842+41])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (tools/caml_tex.ml[721,24842+41]..[721,24842+46])
                                                                  Pexp_ident "input" (tools/caml_tex.ml[721,24842+41]..[721,24842+46])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[721,24842+47]..[721,24842+48])
                                                            Pexp_constant PConst_int (0,None)
                                                      ]
                                                    expression (tools/caml_tex.ml[721,24842+54]..[723,24938+11])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[722,24902+10]..[722,24902+23])
                                                        Pexp_ident "Toplevel.eval" (tools/caml_tex.ml[722,24902+10]..[722,24902+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[722,24902+24]..[722,24902+35])
                                                            Pexp_ident "eval_buffer" (tools/caml_tex.ml[722,24902+24]..[722,24902+35])
                                                      ]
                                                    None
                                            expression (tools/caml_tex.ml[725,24962+6]..[726,25006+75])
                                              Pexp_ifthenelse
                                              expression (tools/caml_tex.ml[725,24962+9]..[725,24962+38])
                                                Pexp_apply
                                                expression (tools/caml_tex.ml[725,24962+35]..[725,24962+36])
                                                  Pexp_ident ">" (tools/caml_tex.ml[725,24962+35]..[725,24962+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[725,24962+9]..[725,24962+34])
                                                      Pexp_apply
                                                      expression (tools/caml_tex.ml[725,24962+9]..[725,24962+22])
                                                        Pexp_ident "Buffer.length" (tools/caml_tex.ml[725,24962+9]..[725,24962+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (tools/caml_tex.ml[725,24962+23]..[725,24962+34])
                                                            Pexp_ident "eval_buffer" (tools/caml_tex.ml[725,24962+23]..[725,24962+34])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (tools/caml_tex.ml[725,24962+37]..[725,24962+38])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (tools/caml_tex.ml[726,25006+8]..[726,25006+75])
                                                Pexp_sequence
                                                expression (tools/caml_tex.ml[726,25006+10]..[726,25006+46])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[726,25006+10]..[726,25006+27])
                                                    Pexp_ident "Buffer.add_string" (tools/caml_tex.ml[726,25006+10]..[726,25006+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[726,25006+28]..[726,25006+39])
                                                        Pexp_ident "eval_buffer" (tools/caml_tex.ml[726,25006+28]..[726,25006+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[726,25006+40]..[726,25006+46])
                                                        Pexp_constant PConst_string(";;\n",(tools/caml_tex.ml[726,25006+41]..[726,25006+45]),None)
                                                  ]
                                                expression (tools/caml_tex.ml[726,25006+48]..[726,25006+73])
                                                  Pexp_apply
                                                  expression (tools/caml_tex.ml[726,25006+48]..[726,25006+61])
                                                    Pexp_ident "Toplevel.eval" (tools/caml_tex.ml[726,25006+48]..[726,25006+61])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (tools/caml_tex.ml[726,25006+62]..[726,25006+73])
                                                        Pexp_ident "eval_buffer" (tools/caml_tex.ml[726,25006+62]..[726,25006+73])
                                                  ]
                                              None
                                        Some
                                          expression (tools/caml_tex.ml[727,25082+13]..[730,25184+7])
                                            Pexp_sequence
                                            expression (tools/caml_tex.ml[728,25101+6]..[728,25101+42])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[728,25101+6]..[728,25101+20])
                                                Pexp_ident "Format.fprintf" (tools/caml_tex.ml[728,25101+6]..[728,25101+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[728,25101+21]..[728,25101+28])
                                                    Pexp_ident "tex_fmt" (tools/caml_tex.ml[728,25101+21]..[728,25101+28])
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[728,25101+29]..[728,25101+35])
                                                    Pexp_constant PConst_string("%s\n",(tools/caml_tex.ml[728,25101+30]..[728,25101+34]),None)
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[728,25101+36]..[728,25101+42])
                                                    Pexp_apply
                                                    expression (tools/caml_tex.ml[728,25101+36]..[728,25101+37])
                                                      Pexp_ident "!" (tools/caml_tex.ml[728,25101+36]..[728,25101+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (tools/caml_tex.ml[728,25101+37]..[728,25101+42])
                                                          Pexp_ident "input" (tools/caml_tex.ml[728,25101+37]..[728,25101+42])
                                                    ]
                                              ]
                                            expression (tools/caml_tex.ml[729,25145+6]..[729,25145+38])
                                              Pexp_apply
                                              expression (tools/caml_tex.ml[729,25145+6]..[729,25145+27])
                                                Pexp_ident "Format.pp_print_flush" (tools/caml_tex.ml[729,25145+6]..[729,25145+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[729,25145+28]..[729,25145+35])
                                                    Pexp_ident "tex_fmt" (tools/caml_tex.ml[729,25145+28]..[729,25145+35])
                                                <arg>
                                                Nolabel
                                                  expression (tools/caml_tex.ml[729,25145+36]..[729,25145+38])
                                                    Pexp_construct "()" (tools/caml_tex.ml[729,25145+36]..[729,25145+38])
                                                    None
                                              ]
                            [
                              <case>
                                pattern (tools/caml_tex.ml[732,25204+4]..[732,25204+15])
                                  Ppat_construct "End_of_file" (tools/caml_tex.ml[732,25204+4]..[732,25204+15])
                                  None
                                expression (tools/caml_tex.ml[732,25204+19]..[732,25204+44])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[732,25204+19]..[732,25204+30])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[732,25204+19]..[732,25204+27])
                                      Pexp_ident "close_in" (tools/caml_tex.ml[732,25204+19]..[732,25204+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[732,25204+28]..[732,25204+30])
                                          Pexp_ident "ic" (tools/caml_tex.ml[732,25204+28]..[732,25204+30])
                                    ]
                                  expression (tools/caml_tex.ml[732,25204+32]..[732,25204+44])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[732,25204+32]..[732,25204+41])
                                      Pexp_ident "close_out" (tools/caml_tex.ml[732,25204+32]..[732,25204+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[732,25204+42]..[732,25204+44])
                                          Pexp_ident "oc" (tools/caml_tex.ml[732,25204+42]..[732,25204+44])
                                    ]
                              <case>
                                pattern (tools/caml_tex.ml[733,25249+4]..[733,25249+30])
                                  Ppat_construct "Output.Unexpected_status" (tools/caml_tex.ml[733,25249+4]..[733,25249+28])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[733,25249+29]..[733,25249+30])
                                      Ppat_var "r" (tools/caml_tex.ml[733,25249+29]..[733,25249+30])
                                expression (tools/caml_tex.ml[734,25283+10]..[734,25283+74])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[734,25283+12]..[734,25283+37])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[734,25283+12]..[734,25283+35])
                                      Pexp_ident "Output.print_unexpected" (tools/caml_tex.ml[734,25283+12]..[734,25283+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[734,25283+36]..[734,25283+37])
                                          Pexp_ident "r" (tools/caml_tex.ml[734,25283+36]..[734,25283+37])
                                    ]
                                  expression (tools/caml_tex.ml[734,25283+39]..[734,25283+72])
                                    Pexp_sequence
                                    expression (tools/caml_tex.ml[734,25283+39]..[734,25283+50])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[734,25283+39]..[734,25283+47])
                                        Pexp_ident "close_in" (tools/caml_tex.ml[734,25283+39]..[734,25283+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[734,25283+48]..[734,25283+50])
                                            Pexp_ident "ic" (tools/caml_tex.ml[734,25283+48]..[734,25283+50])
                                      ]
                                    expression (tools/caml_tex.ml[734,25283+52]..[734,25283+72])
                                      Pexp_sequence
                                      expression (tools/caml_tex.ml[734,25283+52]..[734,25283+64])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[734,25283+52]..[734,25283+61])
                                          Pexp_ident "close_out" (tools/caml_tex.ml[734,25283+52]..[734,25283+61])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[734,25283+62]..[734,25283+64])
                                              Pexp_ident "oc" (tools/caml_tex.ml[734,25283+62]..[734,25283+64])
                                        ]
                                      expression (tools/caml_tex.ml[734,25283+66]..[734,25283+72])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[734,25283+66]..[734,25283+70])
                                          Pexp_ident "exit" (tools/caml_tex.ml[734,25283+66]..[734,25283+70])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[734,25283+71]..[734,25283+72])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                              <case>
                                pattern (tools/caml_tex.ml[735,25358+4]..[735,25358+30])
                                  Ppat_construct "Output.Parsing_error" (tools/caml_tex.ml[735,25358+4]..[735,25358+24])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[735,25358+25]..[735,25358+30])
                                      Ppat_tuple
                                      [
                                        pattern (tools/caml_tex.ml[735,25358+26]..[735,25358+27])
                                          Ppat_var "k" (tools/caml_tex.ml[735,25358+26]..[735,25358+27])
                                        pattern (tools/caml_tex.ml[735,25358+28]..[735,25358+29])
                                          Ppat_var "s" (tools/caml_tex.ml[735,25358+28]..[735,25358+29])
                                      ]
                                expression (tools/caml_tex.ml[736,25392+6]..[737,25432+43])
                                  Pexp_sequence
                                  expression (tools/caml_tex.ml[736,25392+8]..[736,25392+38])
                                    Pexp_apply
                                    expression (tools/caml_tex.ml[736,25392+8]..[736,25392+34])
                                      Pexp_ident "Output.print_parsing_error" (tools/caml_tex.ml[736,25392+8]..[736,25392+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[736,25392+35]..[736,25392+36])
                                          Pexp_ident "k" (tools/caml_tex.ml[736,25392+35]..[736,25392+36])
                                      <arg>
                                      Nolabel
                                        expression (tools/caml_tex.ml[736,25392+37]..[736,25392+38])
                                          Pexp_ident "s" (tools/caml_tex.ml[736,25392+37]..[736,25392+38])
                                    ]
                                  expression (tools/caml_tex.ml[737,25432+8]..[737,25432+41])
                                    Pexp_sequence
                                    expression (tools/caml_tex.ml[737,25432+8]..[737,25432+19])
                                      Pexp_apply
                                      expression (tools/caml_tex.ml[737,25432+8]..[737,25432+16])
                                        Pexp_ident "close_in" (tools/caml_tex.ml[737,25432+8]..[737,25432+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (tools/caml_tex.ml[737,25432+17]..[737,25432+19])
                                            Pexp_ident "ic" (tools/caml_tex.ml[737,25432+17]..[737,25432+19])
                                      ]
                                    expression (tools/caml_tex.ml[737,25432+21]..[737,25432+41])
                                      Pexp_sequence
                                      expression (tools/caml_tex.ml[737,25432+21]..[737,25432+33])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[737,25432+21]..[737,25432+30])
                                          Pexp_ident "close_out" (tools/caml_tex.ml[737,25432+21]..[737,25432+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[737,25432+31]..[737,25432+33])
                                              Pexp_ident "oc" (tools/caml_tex.ml[737,25432+31]..[737,25432+33])
                                        ]
                                      expression (tools/caml_tex.ml[737,25432+35]..[737,25432+41])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[737,25432+35]..[737,25432+39])
                                          Pexp_ident "exit" (tools/caml_tex.ml[737,25432+35]..[737,25432+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[737,25432+40]..[737,25432+41])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                              <case>
                                pattern (tools/caml_tex.ml[738,25476+4]..[738,25476+20])
                                  Ppat_construct "Phrase_parsing" (tools/caml_tex.ml[738,25476+4]..[738,25476+18])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[738,25476+19]..[738,25476+20])
                                      Ppat_var "s" (tools/caml_tex.ml[738,25476+19]..[738,25476+20])
                                expression (tools/caml_tex.ml[738,25476+24]..[738,25476+72])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[738,25476+24]..[738,25476+29])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[738,25476+24]..[738,25476+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[738,25476+30]..[738,25476+70])
                                        Pexp_constant PConst_string("when parsing the following phrase:@ %s",(tools/caml_tex.ml[738,25476+31]..[738,25476+69]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[738,25476+71]..[738,25476+72])
                                        Pexp_ident "s" (tools/caml_tex.ml[738,25476+71]..[738,25476+72])
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[739,25549+4]..[739,25549+48])
                                  Ppat_construct "Missing_double_semicolon" (tools/caml_tex.ml[739,25549+4]..[739,25549+28])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[739,25549+29]..[739,25549+48])
                                      Ppat_tuple
                                      [
                                        pattern (tools/caml_tex.ml[739,25549+30]..[739,25549+34])
                                          Ppat_var "file" (tools/caml_tex.ml[739,25549+30]..[739,25549+34])
                                        pattern (tools/caml_tex.ml[739,25549+36]..[739,25549+47])
                                          Ppat_var "line_number" (tools/caml_tex.ml[739,25549+36]..[739,25549+47])
                                      ]
                                expression (tools/caml_tex.ml[740,25601+6]..[742,25675+56])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[740,25601+6]..[740,25601+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[740,25601+6]..[740,25601+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[741,25613+8]..[742,25675+35])
                                        Pexp_constant PConst_string("when evaluating a caml_example environment in %s:@;missing \";;\" at line %d",(tools/caml_tex.ml[741,25613+9]..[742,25675+34]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[742,25675+36]..[742,25675+40])
                                        Pexp_ident "file" (tools/caml_tex.ml[742,25675+36]..[742,25675+40])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[742,25675+41]..[742,25675+56])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[742,25675+53]..[742,25675+54])
                                          Pexp_ident "-" (tools/caml_tex.ml[742,25675+53]..[742,25675+54])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[742,25675+42]..[742,25675+53])
                                              Pexp_ident "line_number" (tools/caml_tex.ml[742,25675+42]..[742,25675+53])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[742,25675+54]..[742,25675+55])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[743,25732+4]..[743,25732+36])
                                  Ppat_construct "Missing_mode" (tools/caml_tex.ml[743,25732+4]..[743,25732+16])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[743,25732+17]..[743,25732+36])
                                      Ppat_tuple
                                      [
                                        pattern (tools/caml_tex.ml[743,25732+18]..[743,25732+22])
                                          Ppat_var "file" (tools/caml_tex.ml[743,25732+18]..[743,25732+22])
                                        pattern (tools/caml_tex.ml[743,25732+24]..[743,25732+35])
                                          Ppat_var "line_number" (tools/caml_tex.ml[743,25732+24]..[743,25732+35])
                                      ]
                                expression (tools/caml_tex.ml[744,25772+6]..[747,25935+30])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[744,25772+6]..[744,25772+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[744,25772+6]..[744,25772+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[744,25772+12]..[746,25885+49])
                                        Pexp_constant PConst_string("when parsing a caml_example environment in %s:@;missing mode argument at line %d,@ available modes {toplevel,verbatim}",(tools/caml_tex.ml[744,25772+13]..[746,25885+48]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[747,25935+10]..[747,25935+14])
                                        Pexp_ident "file" (tools/caml_tex.ml[747,25935+10]..[747,25935+14])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[747,25935+15]..[747,25935+30])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[747,25935+27]..[747,25935+28])
                                          Pexp_ident "-" (tools/caml_tex.ml[747,25935+27]..[747,25935+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[747,25935+16]..[747,25935+27])
                                              Pexp_ident "line_number" (tools/caml_tex.ml[747,25935+16]..[747,25935+27])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[747,25935+28]..[747,25935+29])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[748,25966+4]..[748,25966+74])
                                  Ppat_construct "Incompatible_options" (tools/caml_tex.ml[748,25966+4]..[748,25966+24])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[748,25966+25]..[748,25966+74])
                                      Ppat_construct "Signature_with_visible_answer" (tools/caml_tex.ml[748,25966+25]..[748,25966+54])
                                      Some
                                        []
                                        pattern (tools/caml_tex.ml[748,25966+55]..[748,25966+74])
                                          Ppat_tuple
                                          [
                                            pattern (tools/caml_tex.ml[748,25966+56]..[748,25966+60])
                                              Ppat_var "file" (tools/caml_tex.ml[748,25966+56]..[748,25966+60])
                                            pattern (tools/caml_tex.ml[748,25966+62]..[748,25966+73])
                                              Ppat_var "line_number" (tools/caml_tex.ml[748,25966+62]..[748,25966+73])
                                          ]
                                expression (tools/caml_tex.ml[749,26044+6]..[754,26262+30])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[749,26044+6]..[749,26044+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[749,26044+6]..[749,26044+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[750,26056+10]..[753,26215+46])
                                        Pexp_constant PConst_string("when parsing a caml_example environment in@ %s, line %d:@,the signature mode is only compatible with \"caml_example*\"@ Hint: did you forget to add \"*\"?",(tools/caml_tex.ml[750,26056+11]..[753,26215+45]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[754,26262+10]..[754,26262+14])
                                        Pexp_ident "file" (tools/caml_tex.ml[754,26262+10]..[754,26262+14])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[754,26262+15]..[754,26262+30])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[754,26262+27]..[754,26262+28])
                                          Pexp_ident "-" (tools/caml_tex.ml[754,26262+27]..[754,26262+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[754,26262+16]..[754,26262+27])
                                              Pexp_ident "line_number" (tools/caml_tex.ml[754,26262+16]..[754,26262+27])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[754,26262+28]..[754,26262+29])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[755,26294+4]..[755,26294+54])
                                  Ppat_construct "Text_transform.Intersection" (tools/caml_tex.ml[755,26294+4]..[755,26294+31])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[755,26294+32]..[755,26294+54])
                                      Ppat_record Closed
                                      [
                                        "line" (tools/caml_tex.ml[755,26294+33]..[755,26294+37]) ghost
                                          pattern (tools/caml_tex.ml[755,26294+33]..[755,26294+37])
                                            Ppat_var "line" (tools/caml_tex.ml[755,26294+33]..[755,26294+37])
                                        "file" (tools/caml_tex.ml[755,26294+38]..[755,26294+42]) ghost
                                          pattern (tools/caml_tex.ml[755,26294+38]..[755,26294+42])
                                            Ppat_var "file" (tools/caml_tex.ml[755,26294+38]..[755,26294+42])
                                        "left" (tools/caml_tex.ml[755,26294+43]..[755,26294+47]) ghost
                                          pattern (tools/caml_tex.ml[755,26294+43]..[755,26294+47])
                                            Ppat_var "left" (tools/caml_tex.ml[755,26294+43]..[755,26294+47])
                                        "right" (tools/caml_tex.ml[755,26294+48]..[755,26294+53]) ghost
                                          pattern (tools/caml_tex.ml[755,26294+48]..[755,26294+53])
                                            Ppat_var "right" (tools/caml_tex.ml[755,26294+48]..[755,26294+53])
                                      ]
                                expression (tools/caml_tex.ml[756,26352+6]..[765,26798+59])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[756,26352+6]..[756,26352+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[756,26352+6]..[756,26352+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[757,26364+8]..[762,26642+76])
                                        Pexp_constant PConst_string("when evaluating a caml_example environment in %s, line %d:@ Textual transforms must be well-separated.@ The \"%a\" transform spanned the interval %d-%d,@ intersecting with another \"%a\" transform @ on the %d-%d interval.@ Hind: did you try to elide a code fragment which raised a warning?",(tools/caml_tex.ml[757,26364+9]..[762,26642+75]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[763,26719+8]..[763,26719+12])
                                        Pexp_ident "file" (tools/caml_tex.ml[763,26719+8]..[763,26719+12])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[763,26719+13]..[763,26719+21])
                                        Pexp_apply
                                        expression (tools/caml_tex.ml[763,26719+18]..[763,26719+19])
                                          Pexp_ident "-" (tools/caml_tex.ml[763,26719+18]..[763,26719+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[763,26719+14]..[763,26719+18])
                                              Pexp_ident "line" (tools/caml_tex.ml[763,26719+14]..[763,26719+18])
                                          <arg>
                                          Nolabel
                                            expression (tools/caml_tex.ml[763,26719+19]..[763,26719+20])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[764,26741+8]..[764,26741+25])
                                        Pexp_ident "Text_transform.pp" (tools/caml_tex.ml[764,26741+8]..[764,26741+25])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[764,26741+26]..[764,26741+35])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[764,26741+26]..[764,26741+30])
                                          Pexp_ident "left" (tools/caml_tex.ml[764,26741+26]..[764,26741+30])
                                        "kind" (tools/caml_tex.ml[764,26741+31]..[764,26741+35])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[764,26741+36]..[764,26741+46])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[764,26741+36]..[764,26741+40])
                                          Pexp_ident "left" (tools/caml_tex.ml[764,26741+36]..[764,26741+40])
                                        "start" (tools/caml_tex.ml[764,26741+41]..[764,26741+46])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[764,26741+47]..[764,26741+56])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[764,26741+47]..[764,26741+51])
                                          Pexp_ident "left" (tools/caml_tex.ml[764,26741+47]..[764,26741+51])
                                        "stop" (tools/caml_tex.ml[764,26741+52]..[764,26741+56])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[765,26798+8]..[765,26798+25])
                                        Pexp_ident "Text_transform.pp" (tools/caml_tex.ml[765,26798+8]..[765,26798+25])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[765,26798+26]..[765,26798+36])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[765,26798+26]..[765,26798+31])
                                          Pexp_ident "right" (tools/caml_tex.ml[765,26798+26]..[765,26798+31])
                                        "kind" (tools/caml_tex.ml[765,26798+32]..[765,26798+36])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[765,26798+37]..[765,26798+48])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[765,26798+37]..[765,26798+42])
                                          Pexp_ident "right" (tools/caml_tex.ml[765,26798+37]..[765,26798+42])
                                        "start" (tools/caml_tex.ml[765,26798+43]..[765,26798+48])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[765,26798+49]..[765,26798+59])
                                        Pexp_field
                                        expression (tools/caml_tex.ml[765,26798+49]..[765,26798+54])
                                          Pexp_ident "right" (tools/caml_tex.ml[765,26798+49]..[765,26798+54])
                                        "stop" (tools/caml_tex.ml[765,26798+55]..[765,26798+59])
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[766,26858+4]..[766,26858+49])
                                  Ppat_construct "Ellipsis.Unmatched_ellipsis" (tools/caml_tex.ml[766,26858+4]..[766,26858+31])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[766,26858+32]..[766,26858+49])
                                      Ppat_record Closed
                                      [
                                        "kind" (tools/caml_tex.ml[766,26858+33]..[766,26858+37]) ghost
                                          pattern (tools/caml_tex.ml[766,26858+33]..[766,26858+37])
                                            Ppat_var "kind" (tools/caml_tex.ml[766,26858+33]..[766,26858+37])
                                        "start" (tools/caml_tex.ml[766,26858+38]..[766,26858+43]) ghost
                                          pattern (tools/caml_tex.ml[766,26858+38]..[766,26858+43])
                                            Ppat_var "start" (tools/caml_tex.ml[766,26858+38]..[766,26858+43])
                                        "stop" (tools/caml_tex.ml[766,26858+44]..[766,26858+48]) ghost
                                          pattern (tools/caml_tex.ml[766,26858+44]..[766,26858+48])
                                            Ppat_var "stop" (tools/caml_tex.ml[766,26858+44]..[766,26858+48])
                                      ]
                                expression (tools/caml_tex.ml[767,26911+6]..[769,27029+23])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[767,26911+6]..[767,26911+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[767,26911+6]..[767,26911+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[767,26911+12]..[768,26971+57])
                                        Pexp_constant PConst_string("when evaluating a caml_example environment,@ the %s mark at position %d-%d was unmatched",(tools/caml_tex.ml[767,26911+13]..[768,26971+56]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[769,27029+8]..[769,27029+12])
                                        Pexp_ident "kind" (tools/caml_tex.ml[769,27029+8]..[769,27029+12])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[769,27029+13]..[769,27029+18])
                                        Pexp_ident "start" (tools/caml_tex.ml[769,27029+13]..[769,27029+18])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[769,27029+19]..[769,27029+23])
                                        Pexp_ident "stop" (tools/caml_tex.ml[769,27029+19]..[769,27029+23])
                                  ]
                              <case>
                                pattern (tools/caml_tex.ml[770,27053+4]..[770,27053+43])
                                  Ppat_construct "Ellipsis.Nested_ellipses" (tools/caml_tex.ml[770,27053+4]..[770,27053+28])
                                  Some
                                    []
                                    pattern (tools/caml_tex.ml[770,27053+29]..[770,27053+43])
                                      Ppat_record Closed
                                      [
                                        "first" (tools/caml_tex.ml[770,27053+30]..[770,27053+35]) ghost
                                          pattern (tools/caml_tex.ml[770,27053+30]..[770,27053+35])
                                            Ppat_var "first" (tools/caml_tex.ml[770,27053+30]..[770,27053+35])
                                        "second" (tools/caml_tex.ml[770,27053+36]..[770,27053+42]) ghost
                                          pattern (tools/caml_tex.ml[770,27053+36]..[770,27053+42])
                                            Ppat_var "second" (tools/caml_tex.ml[770,27053+36]..[770,27053+42])
                                      ]
                                expression (tools/caml_tex.ml[771,27100+6]..[774,27292+20])
                                  Pexp_apply
                                  expression (tools/caml_tex.ml[771,27100+6]..[771,27100+11])
                                    Pexp_ident "fatal" (tools/caml_tex.ml[771,27100+6]..[771,27100+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[771,27100+12]..[773,27232+59])
                                        Pexp_constant PConst_string("when evaluating a caml_example environment,@ there were two nested ellipsis attribute.@ The first one started at position %d,@ the second one at %d",(tools/caml_tex.ml[771,27100+13]..[773,27232+58]),None)
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[774,27292+8]..[774,27292+13])
                                        Pexp_ident "first" (tools/caml_tex.ml[774,27292+8]..[774,27292+13])
                                    <arg>
                                    Nolabel
                                      expression (tools/caml_tex.ml[774,27292+14]..[774,27292+20])
                                        Pexp_ident "second" (tools/caml_tex.ml[774,27292+14]..[774,27292+20])
                                  ]
                            ]
    ]
  structure_item (tools/caml_tex.ml[776,27314+0]..[781,27466+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (tools/caml_tex.ml[776,27314+4]..[776,27314+5])
          Ppat_any
        expression (tools/caml_tex.ml[777,27322+2]..[781,27466+43])
          Pexp_sequence
          expression (tools/caml_tex.ml[777,27322+2]..[780,27459+5])
            Pexp_ifthenelse
            expression (tools/caml_tex.ml[777,27322+5]..[777,27322+38])
              Pexp_apply
              expression (tools/caml_tex.ml[777,27322+21]..[777,27322+23])
                Pexp_ident "&&" (tools/caml_tex.ml[777,27322+21]..[777,27322+23])
              [
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[777,27322+5]..[777,27322+20])
                    Pexp_apply
                    expression (tools/caml_tex.ml[777,27322+14]..[777,27322+16])
                      Pexp_ident "<>" (tools/caml_tex.ml[777,27322+14]..[777,27322+16])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[777,27322+5]..[777,27322+13])
                          Pexp_apply
                          expression (tools/caml_tex.ml[777,27322+5]..[777,27322+6])
                            Pexp_ident "!" (tools/caml_tex.ml[777,27322+5]..[777,27322+6])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[777,27322+6]..[777,27322+13])
                                Pexp_ident "outfile" (tools/caml_tex.ml[777,27322+6]..[777,27322+13])
                          ]
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[777,27322+17]..[777,27322+20])
                          Pexp_constant PConst_string("-",(tools/caml_tex.ml[777,27322+18]..[777,27322+19]),None)
                    ]
                <arg>
                Nolabel
                  expression (tools/caml_tex.ml[777,27322+24]..[777,27322+38])
                    Pexp_apply
                    expression (tools/caml_tex.ml[777,27322+33]..[777,27322+35])
                      Pexp_ident "<>" (tools/caml_tex.ml[777,27322+33]..[777,27322+35])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[777,27322+24]..[777,27322+32])
                          Pexp_apply
                          expression (tools/caml_tex.ml[777,27322+24]..[777,27322+25])
                            Pexp_ident "!" (tools/caml_tex.ml[777,27322+24]..[777,27322+25])
                          [
                            <arg>
                            Nolabel
                              expression (tools/caml_tex.ml[777,27322+25]..[777,27322+32])
                                Pexp_ident "outfile" (tools/caml_tex.ml[777,27322+25]..[777,27322+32])
                          ]
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[777,27322+36]..[777,27322+38])
                          Pexp_constant PConst_string("",(tools/caml_tex.ml[777,27322+37]..[777,27322+37]),None)
                    ]
              ]
            expression (tools/caml_tex.ml[777,27322+44]..[780,27459+5])
              Pexp_try
              expression (tools/caml_tex.ml[778,27372+8]..[778,27372+37])
                Pexp_apply
                expression (tools/caml_tex.ml[778,27372+8]..[778,27372+17])
                  Pexp_ident "close_out" (tools/caml_tex.ml[778,27372+8]..[778,27372+17])
                [
                  <arg>
                  Nolabel
                    expression (tools/caml_tex.ml[778,27372+18]..[778,27372+37])
                      Pexp_apply
                      expression (tools/caml_tex.ml[778,27372+19]..[778,27372+27])
                        Pexp_ident "open_out" (tools/caml_tex.ml[778,27372+19]..[778,27372+27])
                      [
                        <arg>
                        Nolabel
                          expression (tools/caml_tex.ml[778,27372+28]..[778,27372+36])
                            Pexp_apply
                            expression (tools/caml_tex.ml[778,27372+28]..[778,27372+29])
                              Pexp_ident "!" (tools/caml_tex.ml[778,27372+28]..[778,27372+29])
                            [
                              <arg>
                              Nolabel
                                expression (tools/caml_tex.ml[778,27372+29]..[778,27372+36])
                                  Pexp_ident "outfile" (tools/caml_tex.ml[778,27372+29]..[778,27372+36])
                            ]
                      ]
                ]
              [
                <case>
                  pattern (tools/caml_tex.ml[779,27410+9]..[779,27410+10])
                    Ppat_any
                  expression (tools/caml_tex.ml[779,27410+14]..[779,27410+48])
                    Pexp_apply
                    expression (tools/caml_tex.ml[779,27410+14]..[779,27410+22])
                      Pexp_ident "failwith" (tools/caml_tex.ml[779,27410+14]..[779,27410+22])
                    [
                      <arg>
                      Nolabel
                        expression (tools/caml_tex.ml[779,27410+23]..[779,27410+48])
                          Pexp_constant PConst_string("Cannot open output file",(tools/caml_tex.ml[779,27410+24]..[779,27410+47]),None)
                    ]
              ]
            None
          expression (tools/caml_tex.ml[781,27466+2]..[781,27466+42])
            Pexp_apply
            expression (tools/caml_tex.ml[781,27466+2]..[781,27466+11])
              Pexp_ident "List.iter" (tools/caml_tex.ml[781,27466+2]..[781,27466+11])
            [
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[781,27466+12]..[781,27466+24])
                  Pexp_ident "process_file" (tools/caml_tex.ml[781,27466+12]..[781,27466+24])
              <arg>
              Nolabel
                expression (tools/caml_tex.ml[781,27466+25]..[781,27466+42])
                  Pexp_apply
                  expression (tools/caml_tex.ml[781,27466+26]..[781,27466+34])
                    Pexp_ident "List.rev" (tools/caml_tex.ml[781,27466+26]..[781,27466+34])
                  [
                    <arg>
                    Nolabel
                      expression (tools/caml_tex.ml[781,27466+35]..[781,27466+41])
                        Pexp_apply
                        expression (tools/caml_tex.ml[781,27466+35]..[781,27466+36])
                          Pexp_ident "!" (tools/caml_tex.ml[781,27466+35]..[781,27466+36])
                        [
                          <arg>
                          Nolabel
                            expression (tools/caml_tex.ml[781,27466+36]..[781,27466+41])
                              Pexp_ident "files" (tools/caml_tex.ml[781,27466+36]..[781,27466+41])
                        ]
                  ]
            ]
    ]
]

