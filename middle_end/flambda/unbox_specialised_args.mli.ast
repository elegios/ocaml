[
  signature_item (middle_end/flambda/unbox_specialised_args.mli[17,1156+0]..[37,2006+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (middle_end/flambda/unbox_specialised_args.mli[17,1156+0]..[37,2006+2])
        Pstr_eval
        expression (middle_end/flambda/unbox_specialised_args.mli[17,1156+0]..[37,2006+2])
          Pexp_constant PConst_string(" When approximations of specialised arguments indicate that they are\n    closures or blocks, add more specialised arguments corresponding to\n    the projections from such blocks (with definitions of such projections\n    lifted out), such that the original specialised arguments may later be\n    eliminated.\n\n    This in particular enables elimination of closure allocations in\n    examples such as:\n\n      let rec map f = function\n        | [] -> []\n        | a::l -> let r = f a in r :: map f l\n\n      let g x =\n        map (fun y -> x + y) [1; 2; 3; 4]\n\n    Here, the specialised version of [map] initially has a specialised\n    argument [f]; and upon inlining there will be a projection of [x] from\n    the closure of [f].  This pass adds a new specialised argument to carry\n    that projection, at which point the closure of [f] is redundant.\n",(middle_end/flambda/unbox_specialised_args.mli[17,1156+0]..[37,2006+2]),None)
    ]
  signature_item (middle_end/flambda/unbox_specialised_args.mli[39,2010+0]..[50,2434+52])
    Psig_value
    value_description "rewrite_set_of_closures" (middle_end/flambda/unbox_specialised_args.mli[39,2010+4]..[39,2010+27]) (middle_end/flambda/unbox_specialised_args.mli[39,2010+0]..[50,2434+52])
      core_type (middle_end/flambda/unbox_specialised_args.mli[40,2038+5]..[50,2434+52])
        Ptyp_arrow
        Labelled "env"
        core_type (middle_end/flambda/unbox_specialised_args.mli[40,2038+9]..[40,2038+38])
          Ptyp_constr "Inline_and_simplify_aux.Env.t" (middle_end/flambda/unbox_specialised_args.mli[40,2038+9]..[40,2038+38])
          []
        core_type (middle_end/flambda/unbox_specialised_args.mli[42,2136+5]..[50,2434+52])
          Ptyp_arrow
          Labelled "duplicate_function"
          core_type (middle_end/flambda/unbox_specialised_args.mli[43,2162+7]..[48,2342+45])
            Ptyp_arrow
            Labelled "env"
            core_type (middle_end/flambda/unbox_specialised_args.mli[43,2162+11]..[43,2162+40])
              Ptyp_constr "Inline_and_simplify_aux.Env.t" (middle_end/flambda/unbox_specialised_args.mli[43,2162+11]..[43,2162+40])
              []
            core_type (middle_end/flambda/unbox_specialised_args.mli[44,2203+7]..[48,2342+45])
              Ptyp_arrow
              Labelled "set_of_closures"
              core_type (middle_end/flambda/unbox_specialised_args.mli[44,2203+23]..[44,2203+46])
                Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/unbox_specialised_args.mli[44,2203+23]..[44,2203+46])
                []
              core_type (middle_end/flambda/unbox_specialised_args.mli[45,2250+7]..[48,2342+45])
                Ptyp_arrow
                Labelled "fun_var"
                core_type (middle_end/flambda/unbox_specialised_args.mli[45,2250+15]..[45,2250+25])
                  Ptyp_constr "Variable.t" (middle_end/flambda/unbox_specialised_args.mli[45,2250+15]..[45,2250+25])
                  []
                core_type (middle_end/flambda/unbox_specialised_args.mli[46,2276+7]..[48,2342+45])
                  Ptyp_arrow
                  Labelled "new_fun_var"
                  core_type (middle_end/flambda/unbox_specialised_args.mli[46,2276+19]..[46,2276+29])
                    Ptyp_constr "Variable.t" (middle_end/flambda/unbox_specialised_args.mli[46,2276+19]..[46,2276+29])
                    []
                  core_type (middle_end/flambda/unbox_specialised_args.mli[47,2306+7]..[48,2342+45])
                    Ptyp_tuple
                    [
                      core_type (middle_end/flambda/unbox_specialised_args.mli[47,2306+7]..[47,2306+35])
                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/unbox_specialised_args.mli[47,2306+7]..[47,2306+35])
                        []
                      core_type (middle_end/flambda/unbox_specialised_args.mli[48,2342+8]..[48,2342+45])
                        Ptyp_constr "Variable.Map.t" (middle_end/flambda/unbox_specialised_args.mli[48,2342+31]..[48,2342+45])
                        [
                          core_type (middle_end/flambda/unbox_specialised_args.mli[48,2342+8]..[48,2342+30])
                            Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/unbox_specialised_args.mli[48,2342+8]..[48,2342+30])
                            []
                        ]
                    ]
          core_type (middle_end/flambda/unbox_specialised_args.mli[49,2389+5]..[50,2434+52])
            Ptyp_arrow
            Labelled "set_of_closures"
            core_type (middle_end/flambda/unbox_specialised_args.mli[49,2389+21]..[49,2389+44])
              Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/unbox_specialised_args.mli[49,2389+21]..[49,2389+44])
              []
            core_type (middle_end/flambda/unbox_specialised_args.mli[50,2434+5]..[50,2434+52])
              Ptyp_constr "option" (middle_end/flambda/unbox_specialised_args.mli[50,2434+46]..[50,2434+52])
              [
                core_type (middle_end/flambda/unbox_specialised_args.mli[50,2434+6]..[50,2434+44])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/unbox_specialised_args.mli[50,2434+6]..[50,2434+18])
                      Ptyp_constr "Flambda.expr" (middle_end/flambda/unbox_specialised_args.mli[50,2434+6]..[50,2434+18])
                      []
                    core_type (middle_end/flambda/unbox_specialised_args.mli[50,2434+21]..[50,2434+44])
                      Ptyp_constr "Inlining_cost.Benefit.t" (middle_end/flambda/unbox_specialised_args.mli[50,2434+21]..[50,2434+44])
                      []
                  ]
              ]
      []
]

