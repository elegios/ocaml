[
  structure_item (typing/typedecl_unboxed.ml[17,1156+0]..[17,1156+10])
    Pstr_open Fresh
    module_expr (typing/typedecl_unboxed.ml[17,1156+5]..[17,1156+10])
      Pmod_ident "Types" (typing/typedecl_unboxed.ml[17,1156+5]..[17,1156+10])
  structure_item (typing/typedecl_unboxed.ml[21,1294+0]..[39,2049+16])
    Pstr_value Rec
    [
      <def>
        pattern (typing/typedecl_unboxed.ml[21,1294+8]..[21,1294+39])
          Ppat_var "get_unboxed_type_representation" (typing/typedecl_unboxed.ml[21,1294+8]..[21,1294+39])
        expression (typing/typedecl_unboxed.ml[21,1294+40]..[39,2049+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl_unboxed.ml[21,1294+40]..[21,1294+43])
            Ppat_var "env" (typing/typedecl_unboxed.ml[21,1294+40]..[21,1294+43])
          expression (typing/typedecl_unboxed.ml[21,1294+44]..[39,2049+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl_unboxed.ml[21,1294+44]..[21,1294+46])
              Ppat_var "ty" (typing/typedecl_unboxed.ml[21,1294+44]..[21,1294+46])
            expression (typing/typedecl_unboxed.ml[21,1294+47]..[39,2049+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/typedecl_unboxed.ml[21,1294+47]..[21,1294+51])
                Ppat_var "fuel" (typing/typedecl_unboxed.ml[21,1294+47]..[21,1294+51])
              expression (typing/typedecl_unboxed.ml[22,1348+2]..[39,2049+16])
                Pexp_ifthenelse
                expression (typing/typedecl_unboxed.ml[22,1348+5]..[22,1348+13])
                  Pexp_apply
                  expression (typing/typedecl_unboxed.ml[22,1348+10]..[22,1348+11])
                    Pexp_ident "<" (typing/typedecl_unboxed.ml[22,1348+10]..[22,1348+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/typedecl_unboxed.ml[22,1348+5]..[22,1348+9])
                        Pexp_ident "fuel" (typing/typedecl_unboxed.ml[22,1348+5]..[22,1348+9])
                    <arg>
                    Nolabel
                      expression (typing/typedecl_unboxed.ml[22,1348+12]..[22,1348+13])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (typing/typedecl_unboxed.ml[22,1348+19]..[22,1348+23])
                  Pexp_construct "None" (typing/typedecl_unboxed.ml[22,1348+19]..[22,1348+23])
                  None
                Some
                  expression (typing/typedecl_unboxed.ml[23,1377+2]..[39,2049+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/typedecl_unboxed.ml[23,1377+6]..[23,1377+8])
                          Ppat_var "ty" (typing/typedecl_unboxed.ml[23,1377+6]..[23,1377+8])
                        expression (typing/typedecl_unboxed.ml[23,1377+11]..[23,1377+39])
                          Pexp_apply
                          expression (typing/typedecl_unboxed.ml[23,1377+11]..[23,1377+32])
                            Pexp_ident "Ctype.expand_head_opt" (typing/typedecl_unboxed.ml[23,1377+11]..[23,1377+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/typedecl_unboxed.ml[23,1377+33]..[23,1377+36])
                                Pexp_ident "env" (typing/typedecl_unboxed.ml[23,1377+33]..[23,1377+36])
                            <arg>
                            Nolabel
                              expression (typing/typedecl_unboxed.ml[23,1377+37]..[23,1377+39])
                                Pexp_ident "ty" (typing/typedecl_unboxed.ml[23,1377+37]..[23,1377+39])
                          ]
                    ]
                    expression (typing/typedecl_unboxed.ml[24,1420+2]..[39,2049+16])
                      Pexp_match
                      expression (typing/typedecl_unboxed.ml[24,1420+8]..[24,1420+19])
                        Pexp_apply
                        expression (typing/typedecl_unboxed.ml[24,1420+8]..[24,1420+16])
                          Pexp_ident "get_desc" (typing/typedecl_unboxed.ml[24,1420+8]..[24,1420+16])
                        [
                          <arg>
                          Nolabel
                            expression (typing/typedecl_unboxed.ml[24,1420+17]..[24,1420+19])
                              Pexp_ident "ty" (typing/typedecl_unboxed.ml[24,1420+17]..[24,1420+19])
                        ]
                      [
                        <case>
                          pattern (typing/typedecl_unboxed.ml[25,1445+4]..[25,1445+24])
                            Ppat_construct "Tconstr" (typing/typedecl_unboxed.ml[25,1445+4]..[25,1445+11])
                            Some
                              []
                              pattern (typing/typedecl_unboxed.ml[25,1445+12]..[25,1445+24])
                                Ppat_tuple
                                [
                                  pattern (typing/typedecl_unboxed.ml[25,1445+13]..[25,1445+14])
                                    Ppat_var "p" (typing/typedecl_unboxed.ml[25,1445+13]..[25,1445+14])
                                  pattern (typing/typedecl_unboxed.ml[25,1445+16]..[25,1445+20])
                                    Ppat_var "args" (typing/typedecl_unboxed.ml[25,1445+16]..[25,1445+20])
                                  pattern (typing/typedecl_unboxed.ml[25,1445+22]..[25,1445+23])
                                    Ppat_any
                                ]
                          expression (typing/typedecl_unboxed.ml[26,1473+4]..[38,2041+7])
                            Pexp_match
                            expression (typing/typedecl_unboxed.ml[26,1473+16]..[26,1473+35])
                              Pexp_apply
                              expression (typing/typedecl_unboxed.ml[26,1473+16]..[26,1473+29])
                                Pexp_ident "Env.find_type" (typing/typedecl_unboxed.ml[26,1473+16]..[26,1473+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/typedecl_unboxed.ml[26,1473+30]..[26,1473+31])
                                    Pexp_ident "p" (typing/typedecl_unboxed.ml[26,1473+30]..[26,1473+31])
                                <arg>
                                Nolabel
                                  expression (typing/typedecl_unboxed.ml[26,1473+32]..[26,1473+35])
                                    Pexp_ident "env" (typing/typedecl_unboxed.ml[26,1473+32]..[26,1473+35])
                              ]
                            [
                              <case>
                                pattern (typing/typedecl_unboxed.ml[27,1514+6]..[27,1514+25])
                                  Ppat_exception
                                  pattern (typing/typedecl_unboxed.ml[27,1514+16]..[27,1514+25])
                                    Ppat_construct "Not_found" (typing/typedecl_unboxed.ml[27,1514+16]..[27,1514+25])
                                    None
                                expression (typing/typedecl_unboxed.ml[27,1514+29]..[27,1514+36])
                                  Pexp_construct "Some" (typing/typedecl_unboxed.ml[27,1514+29]..[27,1514+33])
                                  Some
                                    expression (typing/typedecl_unboxed.ml[27,1514+34]..[27,1514+36])
                                      Pexp_ident "ty" (typing/typedecl_unboxed.ml[27,1514+34]..[27,1514+36])
                              <case>
                                pattern (typing/typedecl_unboxed.ml[28,1551+6]..[32,1794+40])
                                  Ppat_record Closed
                                  [
                                    "type_params" (typing/typedecl_unboxed.ml[28,1551+7]..[28,1551+18]) ghost
                                      pattern (typing/typedecl_unboxed.ml[28,1551+7]..[28,1551+18])
                                        Ppat_var "type_params" (typing/typedecl_unboxed.ml[28,1551+7]..[28,1551+18])
                                    "type_kind" (typing/typedecl_unboxed.ml[28,1551+20]..[28,1551+29])
                                      pattern (typing/typedecl_unboxed.ml[29,1583+9]..[32,1794+39])
                                        Ppat_or
                                        pattern (typing/typedecl_unboxed.ml[29,1583+9]..[30,1645+74])
                                          Ppat_or
                                          pattern (typing/typedecl_unboxed.ml[29,1583+9]..[29,1583+61])
                                            Ppat_construct "Type_record" (typing/typedecl_unboxed.ml[29,1583+9]..[29,1583+20])
                                            Some
                                              []
                                              pattern (typing/typedecl_unboxed.ml[29,1583+21]..[29,1583+61])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl_unboxed.ml[29,1583+22]..[29,1583+42])
                                                    Ppat_construct "::" (typing/typedecl_unboxed.ml[29,1583+23]..[29,1583+42]) ghost
                                                    Some
                                                      []
                                                      pattern (typing/typedecl_unboxed.ml[29,1583+23]..[29,1583+42]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typedecl_unboxed.ml[29,1583+23]..[29,1583+41])
                                                            Ppat_record Open
                                                            [
                                                              "ld_type" (typing/typedecl_unboxed.ml[29,1583+24]..[29,1583+31])
                                                                pattern (typing/typedecl_unboxed.ml[29,1583+34]..[29,1583+37])
                                                                  Ppat_var "ty2" (typing/typedecl_unboxed.ml[29,1583+34]..[29,1583+37])
                                                            ]
                                                          pattern (typing/typedecl_unboxed.ml[29,1583+41]..[29,1583+42]) ghost
                                                            Ppat_construct "[]" (typing/typedecl_unboxed.ml[29,1583+41]..[29,1583+42]) ghost
                                                            None
                                                        ]
                                                  pattern (typing/typedecl_unboxed.ml[29,1583+44]..[29,1583+60])
                                                    Ppat_construct "Record_unboxed" (typing/typedecl_unboxed.ml[29,1583+44]..[29,1583+58])
                                                    Some
                                                      []
                                                      pattern (typing/typedecl_unboxed.ml[29,1583+59]..[29,1583+60])
                                                        Ppat_any
                                                ]
                                          pattern (typing/typedecl_unboxed.ml[30,1645+9]..[30,1645+74])
                                            Ppat_construct "Type_variant" (typing/typedecl_unboxed.ml[30,1645+9]..[30,1645+21])
                                            Some
                                              []
                                              pattern (typing/typedecl_unboxed.ml[30,1645+22]..[30,1645+74])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/typedecl_unboxed.ml[30,1645+23]..[30,1645+56])
                                                    Ppat_construct "::" (typing/typedecl_unboxed.ml[30,1645+24]..[30,1645+56]) ghost
                                                    Some
                                                      []
                                                      pattern (typing/typedecl_unboxed.ml[30,1645+24]..[30,1645+56]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/typedecl_unboxed.ml[30,1645+24]..[30,1645+55])
                                                            Ppat_record Open
                                                            [
                                                              "cd_args" (typing/typedecl_unboxed.ml[30,1645+25]..[30,1645+32])
                                                                pattern (typing/typedecl_unboxed.ml[30,1645+35]..[30,1645+51])
                                                                  Ppat_construct "Cstr_tuple" (typing/typedecl_unboxed.ml[30,1645+35]..[30,1645+45])
                                                                  Some
                                                                    []
                                                                    pattern (typing/typedecl_unboxed.ml[30,1645+46]..[30,1645+51])
                                                                      Ppat_construct "::" (typing/typedecl_unboxed.ml[30,1645+47]..[30,1645+51]) ghost
                                                                      Some
[]
pattern (typing/typedecl_unboxed.ml[30,1645+47]..[30,1645+51]) ghost
  Ppat_tuple
  [
    pattern (typing/typedecl_unboxed.ml[30,1645+47]..[30,1645+50])
      Ppat_var "ty2" (typing/typedecl_unboxed.ml[30,1645+47]..[30,1645+50])
    pattern (typing/typedecl_unboxed.ml[30,1645+50]..[30,1645+51]) ghost
      Ppat_construct "[]" (typing/typedecl_unboxed.ml[30,1645+50]..[30,1645+51]) ghost
      None
  ]
                                                            ]
                                                          pattern (typing/typedecl_unboxed.ml[30,1645+55]..[30,1645+56]) ghost
                                                            Ppat_construct "[]" (typing/typedecl_unboxed.ml[30,1645+55]..[30,1645+56]) ghost
                                                            None
                                                        ]
                                                  pattern (typing/typedecl_unboxed.ml[30,1645+58]..[30,1645+73])
                                                    Ppat_construct "Variant_unboxed" (typing/typedecl_unboxed.ml[30,1645+58]..[30,1645+73])
                                                    None
                                                ]
                                        pattern (typing/typedecl_unboxed.ml[31,1720+9]..[32,1794+39])
                                          Ppat_construct "Type_variant" (typing/typedecl_unboxed.ml[31,1720+9]..[31,1720+21])
                                          Some
                                            []
                                            pattern (typing/typedecl_unboxed.ml[31,1720+22]..[32,1794+39])
                                              Ppat_tuple
                                              [
                                                pattern (typing/typedecl_unboxed.ml[31,1720+23]..[31,1720+72])
                                                  Ppat_construct "::" (typing/typedecl_unboxed.ml[31,1720+24]..[31,1720+72]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/typedecl_unboxed.ml[31,1720+24]..[31,1720+72]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/typedecl_unboxed.ml[31,1720+24]..[31,1720+71])
                                                          Ppat_record Open
                                                          [
                                                            "cd_args" (typing/typedecl_unboxed.ml[31,1720+25]..[31,1720+32])
                                                              pattern (typing/typedecl_unboxed.ml[31,1720+35]..[31,1720+67])
                                                                Ppat_construct "Cstr_record" (typing/typedecl_unboxed.ml[31,1720+35]..[31,1720+46])
                                                                Some
                                                                  []
                                                                  pattern (typing/typedecl_unboxed.ml[31,1720+47]..[31,1720+67])
                                                                    Ppat_construct "::" (typing/typedecl_unboxed.ml[31,1720+48]..[31,1720+67]) ghost
                                                                    Some
                                                                      []
                                                                      pattern (typing/typedecl_unboxed.ml[31,1720+48]..[31,1720+67]) ghost
Ppat_tuple
[
  pattern (typing/typedecl_unboxed.ml[31,1720+48]..[31,1720+66])
    Ppat_record Open
    [
      "ld_type" (typing/typedecl_unboxed.ml[31,1720+49]..[31,1720+56])
        pattern (typing/typedecl_unboxed.ml[31,1720+59]..[31,1720+62])
          Ppat_var "ty2" (typing/typedecl_unboxed.ml[31,1720+59]..[31,1720+62])
    ]
  pattern (typing/typedecl_unboxed.ml[31,1720+66]..[31,1720+67]) ghost
    Ppat_construct "[]" (typing/typedecl_unboxed.ml[31,1720+66]..[31,1720+67]) ghost
    None
]
                                                          ]
                                                        pattern (typing/typedecl_unboxed.ml[31,1720+71]..[31,1720+72]) ghost
                                                          Ppat_construct "[]" (typing/typedecl_unboxed.ml[31,1720+71]..[31,1720+72]) ghost
                                                          None
                                                      ]
                                                pattern (typing/typedecl_unboxed.ml[32,1794+23]..[32,1794+38])
                                                  Ppat_construct "Variant_unboxed" (typing/typedecl_unboxed.ml[32,1794+23]..[32,1794+38])
                                                  None
                                              ]
                                  ]
                                expression (typing/typedecl_unboxed.ml[34,1844+8]..[36,1962+59])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/typedecl_unboxed.ml[34,1844+12]..[34,1844+15])
                                        Ppat_var "ty2" (typing/typedecl_unboxed.ml[34,1844+12]..[34,1844+15])
                                      expression (typing/typedecl_unboxed.ml[34,1844+18]..[34,1844+70])
                                        Pexp_match
                                        expression (typing/typedecl_unboxed.ml[34,1844+24]..[34,1844+36])
                                          Pexp_apply
                                          expression (typing/typedecl_unboxed.ml[34,1844+24]..[34,1844+32])
                                            Pexp_ident "get_desc" (typing/typedecl_unboxed.ml[34,1844+24]..[34,1844+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[34,1844+33]..[34,1844+36])
                                                Pexp_ident "ty2" (typing/typedecl_unboxed.ml[34,1844+33]..[34,1844+36])
                                          ]
                                        [
                                          <case>
                                            pattern (typing/typedecl_unboxed.ml[34,1844+42]..[34,1844+54])
                                              Ppat_construct "Tpoly" (typing/typedecl_unboxed.ml[34,1844+42]..[34,1844+47])
                                              Some
                                                []
                                                pattern (typing/typedecl_unboxed.ml[34,1844+48]..[34,1844+54])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/typedecl_unboxed.ml[34,1844+49]..[34,1844+50])
                                                      Ppat_var "t" (typing/typedecl_unboxed.ml[34,1844+49]..[34,1844+50])
                                                    pattern (typing/typedecl_unboxed.ml[34,1844+52]..[34,1844+53])
                                                      Ppat_any
                                                  ]
                                            expression (typing/typedecl_unboxed.ml[34,1844+58]..[34,1844+59])
                                              Pexp_ident "t" (typing/typedecl_unboxed.ml[34,1844+58]..[34,1844+59])
                                          <case>
                                            pattern (typing/typedecl_unboxed.ml[34,1844+62]..[34,1844+63])
                                              Ppat_any
                                            expression (typing/typedecl_unboxed.ml[34,1844+67]..[34,1844+70])
                                              Pexp_ident "ty2" (typing/typedecl_unboxed.ml[34,1844+67]..[34,1844+70])
                                        ]
                                  ]
                                  expression (typing/typedecl_unboxed.ml[35,1918+8]..[36,1962+59])
                                    Pexp_apply
                                    expression (typing/typedecl_unboxed.ml[35,1918+8]..[35,1918+39])
                                      Pexp_ident "get_unboxed_type_representation" (typing/typedecl_unboxed.ml[35,1918+8]..[35,1918+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl_unboxed.ml[35,1918+40]..[35,1918+43])
                                          Pexp_ident "env" (typing/typedecl_unboxed.ml[35,1918+40]..[35,1918+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl_unboxed.ml[36,1962+10]..[36,1962+48])
                                          Pexp_apply
                                          expression (typing/typedecl_unboxed.ml[36,1962+11]..[36,1962+22])
                                            Pexp_ident "Ctype.apply" (typing/typedecl_unboxed.ml[36,1962+11]..[36,1962+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+23]..[36,1962+26])
                                                Pexp_ident "env" (typing/typedecl_unboxed.ml[36,1962+23]..[36,1962+26])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+27]..[36,1962+38])
                                                Pexp_ident "type_params" (typing/typedecl_unboxed.ml[36,1962+27]..[36,1962+38])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+39]..[36,1962+42])
                                                Pexp_ident "ty2" (typing/typedecl_unboxed.ml[36,1962+39]..[36,1962+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+43]..[36,1962+47])
                                                Pexp_ident "args" (typing/typedecl_unboxed.ml[36,1962+43]..[36,1962+47])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/typedecl_unboxed.ml[36,1962+49]..[36,1962+59])
                                          Pexp_apply
                                          expression (typing/typedecl_unboxed.ml[36,1962+55]..[36,1962+56])
                                            Pexp_ident "-" (typing/typedecl_unboxed.ml[36,1962+55]..[36,1962+56])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+50]..[36,1962+54])
                                                Pexp_ident "fuel" (typing/typedecl_unboxed.ml[36,1962+50]..[36,1962+54])
                                            <arg>
                                            Nolabel
                                              expression (typing/typedecl_unboxed.ml[36,1962+57]..[36,1962+58])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              <case>
                                pattern (typing/typedecl_unboxed.ml[37,2022+6]..[37,2022+7])
                                  Ppat_any
                                expression (typing/typedecl_unboxed.ml[37,2022+11]..[37,2022+18])
                                  Pexp_construct "Some" (typing/typedecl_unboxed.ml[37,2022+11]..[37,2022+15])
                                  Some
                                    expression (typing/typedecl_unboxed.ml[37,2022+16]..[37,2022+18])
                                      Pexp_ident "ty" (typing/typedecl_unboxed.ml[37,2022+16]..[37,2022+18])
                            ]
                        <case>
                          pattern (typing/typedecl_unboxed.ml[39,2049+4]..[39,2049+5])
                            Ppat_any
                          expression (typing/typedecl_unboxed.ml[39,2049+9]..[39,2049+16])
                            Pexp_construct "Some" (typing/typedecl_unboxed.ml[39,2049+9]..[39,2049+13])
                            Some
                              expression (typing/typedecl_unboxed.ml[39,2049+14]..[39,2049+16])
                                Pexp_ident "ty" (typing/typedecl_unboxed.ml[39,2049+14]..[39,2049+16])
                      ]
    ]
  structure_item (typing/typedecl_unboxed.ml[41,2067+0]..[43,2155+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/typedecl_unboxed.ml[41,2067+4]..[41,2067+35])
          Ppat_var "get_unboxed_type_representation" (typing/typedecl_unboxed.ml[41,2067+4]..[41,2067+35])
        expression (typing/typedecl_unboxed.ml[41,2067+36]..[43,2155+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/typedecl_unboxed.ml[41,2067+36]..[41,2067+39])
            Ppat_var "env" (typing/typedecl_unboxed.ml[41,2067+36]..[41,2067+39])
          expression (typing/typedecl_unboxed.ml[41,2067+40]..[43,2155+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/typedecl_unboxed.ml[41,2067+40]..[41,2067+42])
              Ppat_var "ty" (typing/typedecl_unboxed.ml[41,2067+40]..[41,2067+42])
            expression (typing/typedecl_unboxed.ml[43,2155+2]..[43,2155+44])
              Pexp_apply
              expression (typing/typedecl_unboxed.ml[43,2155+2]..[43,2155+33])
                Pexp_ident "get_unboxed_type_representation" (typing/typedecl_unboxed.ml[43,2155+2]..[43,2155+33])
              [
                <arg>
                Nolabel
                  expression (typing/typedecl_unboxed.ml[43,2155+34]..[43,2155+37])
                    Pexp_ident "env" (typing/typedecl_unboxed.ml[43,2155+34]..[43,2155+37])
                <arg>
                Nolabel
                  expression (typing/typedecl_unboxed.ml[43,2155+38]..[43,2155+40])
                    Pexp_ident "ty" (typing/typedecl_unboxed.ml[43,2155+38]..[43,2155+40])
                <arg>
                Nolabel
                  expression (typing/typedecl_unboxed.ml[43,2155+41]..[43,2155+44])
                    Pexp_constant PConst_int (100,None)
              ]
    ]
]

