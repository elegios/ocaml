[
  signature_item (middle_end/flambda/lift_let_to_initialize_symbol.mli[17,1156+0]..[17,1156+39])
    Psig_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/lift_let_to_initialize_symbol.mli[17,1156+18]..[17,1156+38])
        Pstr_eval
        expression (middle_end/flambda/lift_let_to_initialize_symbol.mli[17,1156+18]..[17,1156+38])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42",(middle_end/flambda/lift_let_to_initialize_symbol.mli[17,1156+19]..[17,1156+37]),None)
    ]
  signature_item (middle_end/flambda/lift_let_to_initialize_symbol.mli[35,2003+0]..[38,2070+20])
    Psig_value
    value_description "lift" (middle_end/flambda/lift_let_to_initialize_symbol.mli[35,2003+4]..[35,2003+8]) (middle_end/flambda/lift_let_to_initialize_symbol.mli[35,2003+0]..[38,2070+20])
      attribute "ocaml.doc"
        [
          structure_item (middle_end/flambda/lift_let_to_initialize_symbol.mli[19,1197+0]..[34,2000+2])
            Pstr_eval
            expression (middle_end/flambda/lift_let_to_initialize_symbol.mli[19,1197+0]..[34,2000+2])
              Pexp_constant PConst_string(" Lift toplevel [Let]-expressions to Flambda [program] constructions such\n    that the results of evaluation of such expressions may be accessed\n    directly, through symbols, rather than through closures.  The\n    [Let]-expressions typically come from the compilation of modules (using\n    the bytecode strategy) in [Translmod].\n\n    This means of compilation supersedes the old \"transl_store_\" methodology\n    for native code.\n\n    An [Initialize_symbol] construction generated by this pass may be\n    subsequently rewritten to [Let_symbol] if it is discovered that the\n    initializer is in fact constant.  (See [Initialize_symbol_to_let_symbol].)\n\n    The [program] constructions generated by this pass will be joined by\n    others that arise from the lifting of constants (see [Lift_constants]).\n",(middle_end/flambda/lift_let_to_initialize_symbol.mli[19,1197+0]..[34,2000+2]),None)
        ]
      core_type (middle_end/flambda/lift_let_to_initialize_symbol.mli[36,2012+5]..[38,2070+20])
        Ptyp_arrow
        Labelled "backend"
        core_type (middle_end/flambda/lift_let_to_initialize_symbol.mli[36,2012+13]..[36,2012+36])
          Ptyp_package "Backend_intf.S" (middle_end/flambda/lift_let_to_initialize_symbol.mli[36,2012+21]..[36,2012+35])
          []
        core_type (middle_end/flambda/lift_let_to_initialize_symbol.mli[37,2049+5]..[38,2070+20])
          Ptyp_arrow
          Nolabel
          core_type (middle_end/flambda/lift_let_to_initialize_symbol.mli[37,2049+5]..[37,2049+20])
            Ptyp_constr "Flambda.program" (middle_end/flambda/lift_let_to_initialize_symbol.mli[37,2049+5]..[37,2049+20])
            []
          core_type (middle_end/flambda/lift_let_to_initialize_symbol.mli[38,2070+5]..[38,2070+20])
            Ptyp_constr "Flambda.program" (middle_end/flambda/lift_let_to_initialize_symbol.mli[38,2070+5]..[38,2070+20])
            []
      []
]

