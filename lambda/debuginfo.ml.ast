[
  structure_item (lambda/debuginfo.ml[16,1079+0]..[16,1079+37])
    Pstr_open Override
    module_expr (lambda/debuginfo.ml[16,1079+6]..[16,1079+37])
      Pmod_ident "Int_replace_polymorphic_compare" (lambda/debuginfo.ml[16,1079+6]..[16,1079+37])
  structure_item (lambda/debuginfo.ml[17,1117+0]..[17,1117+11])
    Pstr_open Fresh
    module_expr (lambda/debuginfo.ml[17,1117+5]..[17,1117+11])
      Pmod_ident "Lexing" (lambda/debuginfo.ml[17,1117+5]..[17,1117+11])
  structure_item (lambda/debuginfo.ml[18,1129+0]..[18,1129+13])
    Pstr_open Fresh
    module_expr (lambda/debuginfo.ml[18,1129+5]..[18,1129+13])
      Pmod_ident "Location" (lambda/debuginfo.ml[18,1129+5]..[18,1129+13])
  structure_item (lambda/debuginfo.ml[20,1144+0]..[98,3144+3])
    Pstr_module
    "Scoped_location" (lambda/debuginfo.ml[20,1144+7]..[20,1144+22])
      module_expr (lambda/debuginfo.ml[20,1144+25]..[98,3144+3])
        Pmod_structure
        [
          structure_item (lambda/debuginfo.ml[21,1176+2]..[26,1303+26])
            Pstr_type Rec
            [
              type_declaration "scope_item" (lambda/debuginfo.ml[21,1176+7]..[21,1176+17]) (lambda/debuginfo.ml[21,1176+2]..[26,1303+26])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lambda/debuginfo.ml[22,1196+4]..[22,1196+27])
                        "Sc_anonymous_function" (lambda/debuginfo.ml[22,1196+6]..[22,1196+27])
                        []
                        None
                      (lambda/debuginfo.ml[23,1224+4]..[23,1224+25])
                        "Sc_value_definition" (lambda/debuginfo.ml[23,1224+6]..[23,1224+25])
                        []
                        None
                      (lambda/debuginfo.ml[24,1250+4]..[24,1250+26])
                        "Sc_module_definition" (lambda/debuginfo.ml[24,1250+6]..[24,1250+26])
                        []
                        None
                      (lambda/debuginfo.ml[25,1277+4]..[25,1277+25])
                        "Sc_class_definition" (lambda/debuginfo.ml[25,1277+6]..[25,1277+25])
                        []
                        None
                      (lambda/debuginfo.ml[26,1303+4]..[26,1303+26])
                        "Sc_method_definition" (lambda/debuginfo.ml[26,1303+6]..[26,1303+26])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lambda/debuginfo.ml[28,1331+2]..[30,1359+62])
            Pstr_type Rec
            [
              type_declaration "scopes" (lambda/debuginfo.ml[28,1331+7]..[28,1331+13]) (lambda/debuginfo.ml[28,1331+2]..[30,1359+62])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lambda/debuginfo.ml[29,1347+4]..[29,1347+11])
                        "Empty" (lambda/debuginfo.ml[29,1347+6]..[29,1347+11])
                        []
                        None
                      (lambda/debuginfo.ml[30,1359+4]..[30,1359+62])
                        "Cons" (lambda/debuginfo.ml[30,1359+6]..[30,1359+10])
                        [
                          (lambda/debuginfo.ml[30,1359+15]..[30,1359+32])
                            Immutable
                            "item" (lambda/debuginfo.ml[30,1359+15]..[30,1359+19])                            core_type (lambda/debuginfo.ml[30,1359+21]..[30,1359+31])
                              Ptyp_constr "scope_item" (lambda/debuginfo.ml[30,1359+21]..[30,1359+31])
                              []
                          (lambda/debuginfo.ml[30,1359+33]..[30,1359+45])
                            Immutable
                            "str" (lambda/debuginfo.ml[30,1359+33]..[30,1359+36])                            core_type (lambda/debuginfo.ml[30,1359+38]..[30,1359+44])
                              Ptyp_constr "string" (lambda/debuginfo.ml[30,1359+38]..[30,1359+44])
                              []
                          (lambda/debuginfo.ml[30,1359+46]..[30,1359+61])
                            Immutable
                            "str_fun" (lambda/debuginfo.ml[30,1359+46]..[30,1359+53])                            core_type (lambda/debuginfo.ml[30,1359+55]..[30,1359+61])
                              Ptyp_constr "string" (lambda/debuginfo.ml[30,1359+55]..[30,1359+61])
                              []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lambda/debuginfo.ml[32,1423+2]..[34,1471+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[32,1423+6]..[32,1423+13])
                  Ppat_var "str_fun" (lambda/debuginfo.ml[32,1423+6]..[32,1423+13])
                expression (lambda/debuginfo.ml[32,1423+16]..[34,1471+25])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/debuginfo.ml[33,1448+6]..[33,1448+11])
                        Ppat_construct "Empty" (lambda/debuginfo.ml[33,1448+6]..[33,1448+11])
                        None
                      expression (lambda/debuginfo.ml[33,1448+15]..[33,1448+22])
                        Pexp_constant PConst_string("(fun)",(lambda/debuginfo.ml[33,1448+16]..[33,1448+21]),None)
                    <case>
                      pattern (lambda/debuginfo.ml[34,1471+6]..[34,1471+12])
                        Ppat_construct "Cons" (lambda/debuginfo.ml[34,1471+6]..[34,1471+10])
                        Some
                          []
                          pattern (lambda/debuginfo.ml[34,1471+11]..[34,1471+12])
                            Ppat_var "r" (lambda/debuginfo.ml[34,1471+11]..[34,1471+12])
                      expression (lambda/debuginfo.ml[34,1471+16]..[34,1471+25])
                        Pexp_field
                        expression (lambda/debuginfo.ml[34,1471+16]..[34,1471+17])
                          Pexp_ident "r" (lambda/debuginfo.ml[34,1471+16]..[34,1471+17])
                        "str_fun" (lambda/debuginfo.ml[34,1471+18]..[34,1471+25])
                  ]
            ]
          structure_item (lambda/debuginfo.ml[36,1498+2]..[37,1520+46])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[36,1498+6]..[36,1498+10])
                  Ppat_var "cons" (lambda/debuginfo.ml[36,1498+6]..[36,1498+10])
                expression (lambda/debuginfo.ml[36,1498+11]..[37,1520+46]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/debuginfo.ml[36,1498+11]..[36,1498+15])
                    Ppat_var "item" (lambda/debuginfo.ml[36,1498+11]..[36,1498+15])
                  expression (lambda/debuginfo.ml[36,1498+16]..[37,1520+46]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[36,1498+16]..[36,1498+19])
                      Ppat_var "str" (lambda/debuginfo.ml[36,1498+16]..[36,1498+19])
                    expression (lambda/debuginfo.ml[37,1520+4]..[37,1520+46])
                      Pexp_construct "Cons" (lambda/debuginfo.ml[37,1520+4]..[37,1520+8])
                      Some
                        expression (lambda/debuginfo.ml[37,1520+9]..[37,1520+46])
                          Pexp_record
                          [
                            "item" (lambda/debuginfo.ml[37,1520+10]..[37,1520+14]) ghost
                              expression (lambda/debuginfo.ml[37,1520+10]..[37,1520+14])
                                Pexp_ident "item" (lambda/debuginfo.ml[37,1520+10]..[37,1520+14])
                            "str" (lambda/debuginfo.ml[37,1520+16]..[37,1520+19]) ghost
                              expression (lambda/debuginfo.ml[37,1520+16]..[37,1520+19])
                                Pexp_ident "str" (lambda/debuginfo.ml[37,1520+16]..[37,1520+19])
                            "str_fun" (lambda/debuginfo.ml[37,1520+21]..[37,1520+28])
                              expression (lambda/debuginfo.ml[37,1520+31]..[37,1520+45])
                                Pexp_apply
                                expression (lambda/debuginfo.ml[37,1520+35]..[37,1520+36])
                                  Pexp_ident "^" (lambda/debuginfo.ml[37,1520+35]..[37,1520+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[37,1520+31]..[37,1520+34])
                                      Pexp_ident "str" (lambda/debuginfo.ml[37,1520+31]..[37,1520+34])
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[37,1520+37]..[37,1520+45])
                                      Pexp_constant PConst_string(".(fun)",(lambda/debuginfo.ml[37,1520+38]..[37,1520+44]),None)
                                ]
                          ]
                          None
            ]
          structure_item (lambda/debuginfo.ml[39,1568+2]..[39,1568+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[39,1568+6]..[39,1568+18])
                  Ppat_var "empty_scopes" (lambda/debuginfo.ml[39,1568+6]..[39,1568+18])
                expression (lambda/debuginfo.ml[39,1568+21]..[39,1568+26])
                  Pexp_construct "Empty" (lambda/debuginfo.ml[39,1568+21]..[39,1568+26])
                  None
            ]
          structure_item (lambda/debuginfo.ml[41,1596+2]..[46,1737+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[41,1596+6]..[41,1596+28])
                  Ppat_var "add_parens_if_symbolic" (lambda/debuginfo.ml[41,1596+6]..[41,1596+28])
                expression (lambda/debuginfo.ml[41,1596+31]..[46,1737+27])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/debuginfo.ml[42,1636+6]..[42,1636+8])
                        Ppat_constant PConst_string("",(lambda/debuginfo.ml[42,1636+7]..[42,1636+7]),None)
                      expression (lambda/debuginfo.ml[42,1636+12]..[42,1636+14])
                        Pexp_constant PConst_string("",(lambda/debuginfo.ml[42,1636+13]..[42,1636+13]),None)
                    <case>
                      pattern (lambda/debuginfo.ml[43,1651+6]..[43,1651+7])
                        Ppat_var "s" (lambda/debuginfo.ml[43,1651+6]..[43,1651+7])
                      expression (lambda/debuginfo.ml[44,1662+7]..[46,1737+27])
                        Pexp_match
                        expression (lambda/debuginfo.ml[44,1662+13]..[44,1662+18])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[44,1662+13]..[44,1662+18]) ghost
                            Pexp_ident "String.get" (lambda/debuginfo.ml[44,1662+13]..[44,1662+18]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[44,1662+13]..[44,1662+14])
                                Pexp_ident "s" (lambda/debuginfo.ml[44,1662+13]..[44,1662+14])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[44,1662+16]..[44,1662+17])
                                Pexp_constant PConst_int (0,None)
                          ]
                        [
                          <case>
                            pattern (lambda/debuginfo.ml[45,1686+9]..[45,1686+45])
                              Ppat_or
                              pattern (lambda/debuginfo.ml[45,1686+9]..[45,1686+34])
                                Ppat_or
                                pattern (lambda/debuginfo.ml[45,1686+9]..[45,1686+28])
                                  Ppat_or
                                  pattern (lambda/debuginfo.ml[45,1686+9]..[45,1686+17])
                                    Ppat_interval PConst_char 61..PConst_char 7a
                                  pattern (lambda/debuginfo.ml[45,1686+20]..[45,1686+28])
                                    Ppat_interval PConst_char 41..PConst_char 5a
                                pattern (lambda/debuginfo.ml[45,1686+31]..[45,1686+34])
                                  Ppat_constant PConst_char 5f
                              pattern (lambda/debuginfo.ml[45,1686+37]..[45,1686+45])
                                Ppat_interval PConst_char 30..PConst_char 39
                            expression (lambda/debuginfo.ml[45,1686+49]..[45,1686+50])
                              Pexp_ident "s" (lambda/debuginfo.ml[45,1686+49]..[45,1686+50])
                          <case>
                            pattern (lambda/debuginfo.ml[46,1737+9]..[46,1737+10])
                              Ppat_any
                            expression (lambda/debuginfo.ml[46,1737+14]..[46,1737+27])
                              Pexp_apply
                              expression (lambda/debuginfo.ml[46,1737+18]..[46,1737+19])
                                Pexp_ident "^" (lambda/debuginfo.ml[46,1737+18]..[46,1737+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/debuginfo.ml[46,1737+14]..[46,1737+17])
                                    Pexp_constant PConst_string("(",(lambda/debuginfo.ml[46,1737+15]..[46,1737+16]),None)
                                <arg>
                                Nolabel
                                  expression (lambda/debuginfo.ml[46,1737+20]..[46,1737+27])
                                    Pexp_apply
                                    expression (lambda/debuginfo.ml[46,1737+22]..[46,1737+23])
                                      Pexp_ident "^" (lambda/debuginfo.ml[46,1737+22]..[46,1737+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/debuginfo.ml[46,1737+20]..[46,1737+21])
                                          Pexp_ident "s" (lambda/debuginfo.ml[46,1737+20]..[46,1737+21])
                                      <arg>
                                      Nolabel
                                        expression (lambda/debuginfo.ml[46,1737+24]..[46,1737+27])
                                          Pexp_constant PConst_string(")",(lambda/debuginfo.ml[46,1737+25]..[46,1737+26]),None)
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (lambda/debuginfo.ml[48,1766+2]..[52,1879+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[48,1766+6]..[48,1766+9])
                  Ppat_var "dot" (lambda/debuginfo.ml[48,1766+6]..[48,1766+9])
                expression (lambda/debuginfo.ml[48,1766+10]..[52,1879+36]) ghost
                  Pexp_fun
                  Optional "sep"
                  Some
                    expression (lambda/debuginfo.ml[48,1766+18]..[48,1766+21])
                      Pexp_constant PConst_string(".",(lambda/debuginfo.ml[48,1766+19]..[48,1766+20]),None)
                  pattern (lambda/debuginfo.ml[48,1766+12]..[48,1766+15])
                    Ppat_var "sep" (lambda/debuginfo.ml[48,1766+12]..[48,1766+15])
                  expression (lambda/debuginfo.ml[48,1766+23]..[52,1879+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[48,1766+23]..[48,1766+29])
                      Ppat_var "scopes" (lambda/debuginfo.ml[48,1766+23]..[48,1766+29])
                    expression (lambda/debuginfo.ml[48,1766+30]..[52,1879+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/debuginfo.ml[48,1766+30]..[48,1766+31])
                        Ppat_var "s" (lambda/debuginfo.ml[48,1766+30]..[48,1766+31])
                      expression (lambda/debuginfo.ml[49,1800+4]..[52,1879+36])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/debuginfo.ml[49,1800+8]..[49,1800+9])
                              Ppat_var "s" (lambda/debuginfo.ml[49,1800+8]..[49,1800+9])
                            expression (lambda/debuginfo.ml[49,1800+12]..[49,1800+36])
                              Pexp_apply
                              expression (lambda/debuginfo.ml[49,1800+12]..[49,1800+34])
                                Pexp_ident "add_parens_if_symbolic" (lambda/debuginfo.ml[49,1800+12]..[49,1800+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/debuginfo.ml[49,1800+35]..[49,1800+36])
                                    Pexp_ident "s" (lambda/debuginfo.ml[49,1800+35]..[49,1800+36])
                              ]
                        ]
                        expression (lambda/debuginfo.ml[50,1840+4]..[52,1879+36])
                          Pexp_match
                          expression (lambda/debuginfo.ml[50,1840+10]..[50,1840+16])
                            Pexp_ident "scopes" (lambda/debuginfo.ml[50,1840+10]..[50,1840+16])
                          [
                            <case>
                              pattern (lambda/debuginfo.ml[51,1862+6]..[51,1862+11])
                                Ppat_construct "Empty" (lambda/debuginfo.ml[51,1862+6]..[51,1862+11])
                                None
                              expression (lambda/debuginfo.ml[51,1862+15]..[51,1862+16])
                                Pexp_ident "s" (lambda/debuginfo.ml[51,1862+15]..[51,1862+16])
                            <case>
                              pattern (lambda/debuginfo.ml[52,1879+6]..[52,1879+19])
                                Ppat_construct "Cons" (lambda/debuginfo.ml[52,1879+6]..[52,1879+10])
                                Some
                                  []
                                  pattern (lambda/debuginfo.ml[52,1879+11]..[52,1879+19])
                                    Ppat_record Open
                                    [
                                      "str" (lambda/debuginfo.ml[52,1879+12]..[52,1879+15]) ghost
                                        pattern (lambda/debuginfo.ml[52,1879+12]..[52,1879+15])
                                          Ppat_var "str" (lambda/debuginfo.ml[52,1879+12]..[52,1879+15])
                                    ]
                              expression (lambda/debuginfo.ml[52,1879+23]..[52,1879+36])
                                Pexp_apply
                                expression (lambda/debuginfo.ml[52,1879+27]..[52,1879+28])
                                  Pexp_ident "^" (lambda/debuginfo.ml[52,1879+27]..[52,1879+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[52,1879+23]..[52,1879+26])
                                      Pexp_ident "str" (lambda/debuginfo.ml[52,1879+23]..[52,1879+26])
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[52,1879+29]..[52,1879+36])
                                      Pexp_apply
                                      expression (lambda/debuginfo.ml[52,1879+33]..[52,1879+34])
                                        Pexp_ident "^" (lambda/debuginfo.ml[52,1879+33]..[52,1879+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/debuginfo.ml[52,1879+29]..[52,1879+32])
                                            Pexp_ident "sep" (lambda/debuginfo.ml[52,1879+29]..[52,1879+32])
                                        <arg>
                                        Nolabel
                                          expression (lambda/debuginfo.ml[52,1879+35]..[52,1879+36])
                                            Pexp_ident "s" (lambda/debuginfo.ml[52,1879+35]..[52,1879+36])
                                      ]
                                ]
                          ]
            ]
          structure_item (lambda/debuginfo.ml[54,1917+2]..[56,1990+59])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[54,1917+6]..[54,1917+30])
                  Ppat_var "enter_anonymous_function" (lambda/debuginfo.ml[54,1917+6]..[54,1917+30])
                expression (lambda/debuginfo.ml[54,1917+31]..[56,1990+59]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[54,1917+32]..[54,1917+38])
                    Ppat_var "scopes" (lambda/debuginfo.ml[54,1917+32]..[54,1917+38])
                  expression (lambda/debuginfo.ml[55,1958+4]..[56,1990+59])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/debuginfo.ml[55,1958+8]..[55,1958+11])
                          Ppat_var "str" (lambda/debuginfo.ml[55,1958+8]..[55,1958+11])
                        expression (lambda/debuginfo.ml[55,1958+14]..[55,1958+28])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[55,1958+14]..[55,1958+21])
                            Pexp_ident "str_fun" (lambda/debuginfo.ml[55,1958+14]..[55,1958+21])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[55,1958+22]..[55,1958+28])
                                Pexp_ident "scopes" (lambda/debuginfo.ml[55,1958+22]..[55,1958+28])
                          ]
                    ]
                    expression (lambda/debuginfo.ml[56,1990+4]..[56,1990+59])
                      Pexp_construct "Cons" (lambda/debuginfo.ml[56,1990+4]..[56,1990+8])
                      Some
                        expression (lambda/debuginfo.ml[56,1990+9]..[56,1990+59])
                          Pexp_record
                          [
                            "item" (lambda/debuginfo.ml[56,1990+10]..[56,1990+14])
                              expression (lambda/debuginfo.ml[56,1990+17]..[56,1990+38])
                                Pexp_construct "Sc_anonymous_function" (lambda/debuginfo.ml[56,1990+17]..[56,1990+38])
                                None
                            "str" (lambda/debuginfo.ml[56,1990+40]..[56,1990+43]) ghost
                              expression (lambda/debuginfo.ml[56,1990+40]..[56,1990+43])
                                Pexp_ident "str" (lambda/debuginfo.ml[56,1990+40]..[56,1990+43])
                            "str_fun" (lambda/debuginfo.ml[56,1990+45]..[56,1990+52])
                              expression (lambda/debuginfo.ml[56,1990+55]..[56,1990+58])
                                Pexp_ident "str" (lambda/debuginfo.ml[56,1990+55]..[56,1990+58])
                          ]
                          None
            ]
          structure_item (lambda/debuginfo.ml[58,2051+2]..[59,2093+57])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[58,2051+6]..[58,2051+28])
                  Ppat_var "enter_value_definition" (lambda/debuginfo.ml[58,2051+6]..[58,2051+28])
                expression (lambda/debuginfo.ml[58,2051+29]..[59,2093+57]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[58,2051+30]..[58,2051+36])
                    Ppat_var "scopes" (lambda/debuginfo.ml[58,2051+30]..[58,2051+36])
                  expression (lambda/debuginfo.ml[58,2051+37]..[59,2093+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[58,2051+37]..[58,2051+39])
                      Ppat_var "id" (lambda/debuginfo.ml[58,2051+37]..[58,2051+39])
                    expression (lambda/debuginfo.ml[59,2093+4]..[59,2093+57])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[59,2093+4]..[59,2093+8])
                        Pexp_ident "cons" (lambda/debuginfo.ml[59,2093+4]..[59,2093+8])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[59,2093+9]..[59,2093+28])
                            Pexp_construct "Sc_value_definition" (lambda/debuginfo.ml[59,2093+9]..[59,2093+28])
                            None
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[59,2093+29]..[59,2093+57])
                            Pexp_apply
                            expression (lambda/debuginfo.ml[59,2093+30]..[59,2093+33])
                              Pexp_ident "dot" (lambda/debuginfo.ml[59,2093+30]..[59,2093+33])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[59,2093+34]..[59,2093+40])
                                  Pexp_ident "scopes" (lambda/debuginfo.ml[59,2093+34]..[59,2093+40])
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[59,2093+41]..[59,2093+56])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[59,2093+42]..[59,2093+52])
                                    Pexp_ident "Ident.name" (lambda/debuginfo.ml[59,2093+42]..[59,2093+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[59,2093+53]..[59,2093+55])
                                        Pexp_ident "id" (lambda/debuginfo.ml[59,2093+53]..[59,2093+55])
                                  ]
                            ]
                      ]
            ]
          structure_item (lambda/debuginfo.ml[61,2152+2]..[62,2195+58])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[61,2152+6]..[61,2152+29])
                  Ppat_var "enter_module_definition" (lambda/debuginfo.ml[61,2152+6]..[61,2152+29])
                expression (lambda/debuginfo.ml[61,2152+30]..[62,2195+58]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[61,2152+31]..[61,2152+37])
                    Ppat_var "scopes" (lambda/debuginfo.ml[61,2152+31]..[61,2152+37])
                  expression (lambda/debuginfo.ml[61,2152+38]..[62,2195+58]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[61,2152+38]..[61,2152+40])
                      Ppat_var "id" (lambda/debuginfo.ml[61,2152+38]..[61,2152+40])
                    expression (lambda/debuginfo.ml[62,2195+4]..[62,2195+58])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[62,2195+4]..[62,2195+8])
                        Pexp_ident "cons" (lambda/debuginfo.ml[62,2195+4]..[62,2195+8])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[62,2195+9]..[62,2195+29])
                            Pexp_construct "Sc_module_definition" (lambda/debuginfo.ml[62,2195+9]..[62,2195+29])
                            None
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[62,2195+30]..[62,2195+58])
                            Pexp_apply
                            expression (lambda/debuginfo.ml[62,2195+31]..[62,2195+34])
                              Pexp_ident "dot" (lambda/debuginfo.ml[62,2195+31]..[62,2195+34])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[62,2195+35]..[62,2195+41])
                                  Pexp_ident "scopes" (lambda/debuginfo.ml[62,2195+35]..[62,2195+41])
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[62,2195+42]..[62,2195+57])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[62,2195+43]..[62,2195+53])
                                    Pexp_ident "Ident.name" (lambda/debuginfo.ml[62,2195+43]..[62,2195+53])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[62,2195+54]..[62,2195+56])
                                        Pexp_ident "id" (lambda/debuginfo.ml[62,2195+54]..[62,2195+56])
                                  ]
                            ]
                      ]
            ]
          structure_item (lambda/debuginfo.ml[64,2255+2]..[65,2297+57])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[64,2255+6]..[64,2255+28])
                  Ppat_var "enter_class_definition" (lambda/debuginfo.ml[64,2255+6]..[64,2255+28])
                expression (lambda/debuginfo.ml[64,2255+29]..[65,2297+57]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[64,2255+30]..[64,2255+36])
                    Ppat_var "scopes" (lambda/debuginfo.ml[64,2255+30]..[64,2255+36])
                  expression (lambda/debuginfo.ml[64,2255+37]..[65,2297+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[64,2255+37]..[64,2255+39])
                      Ppat_var "id" (lambda/debuginfo.ml[64,2255+37]..[64,2255+39])
                    expression (lambda/debuginfo.ml[65,2297+4]..[65,2297+57])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[65,2297+4]..[65,2297+8])
                        Pexp_ident "cons" (lambda/debuginfo.ml[65,2297+4]..[65,2297+8])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[65,2297+9]..[65,2297+28])
                            Pexp_construct "Sc_class_definition" (lambda/debuginfo.ml[65,2297+9]..[65,2297+28])
                            None
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[65,2297+29]..[65,2297+57])
                            Pexp_apply
                            expression (lambda/debuginfo.ml[65,2297+30]..[65,2297+33])
                              Pexp_ident "dot" (lambda/debuginfo.ml[65,2297+30]..[65,2297+33])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[65,2297+34]..[65,2297+40])
                                  Pexp_ident "scopes" (lambda/debuginfo.ml[65,2297+34]..[65,2297+40])
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[65,2297+41]..[65,2297+56])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[65,2297+42]..[65,2297+52])
                                    Pexp_ident "Ident.name" (lambda/debuginfo.ml[65,2297+42]..[65,2297+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[65,2297+53]..[65,2297+55])
                                        Pexp_ident "id" (lambda/debuginfo.ml[65,2297+53]..[65,2297+55])
                                  ]
                            ]
                      ]
            ]
          structure_item (lambda/debuginfo.ml[67,2356+2]..[73,2558+33])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[67,2356+6]..[67,2356+29])
                  Ppat_var "enter_method_definition" (lambda/debuginfo.ml[67,2356+6]..[67,2356+29])
                expression (lambda/debuginfo.ml[67,2356+30]..[73,2558+33]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[67,2356+31]..[67,2356+37])
                    Ppat_var "scopes" (lambda/debuginfo.ml[67,2356+31]..[67,2356+37])
                  expression (lambda/debuginfo.ml[67,2356+38]..[73,2558+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[67,2356+38]..[67,2356+58])
                      Ppat_constraint
                      pattern (lambda/debuginfo.ml[67,2356+39]..[67,2356+40])
                        Ppat_var "s" (lambda/debuginfo.ml[67,2356+39]..[67,2356+40])
                      core_type (lambda/debuginfo.ml[67,2356+43]..[67,2356+57])
                        Ptyp_constr "Asttypes.label" (lambda/debuginfo.ml[67,2356+43]..[67,2356+57])
                        []
                    expression (lambda/debuginfo.ml[68,2417+4]..[73,2558+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/debuginfo.ml[68,2417+8]..[68,2417+11])
                            Ppat_var "str" (lambda/debuginfo.ml[68,2417+8]..[68,2417+11])
                          expression (lambda/debuginfo.ml[69,2431+6]..[71,2525+25])
                            Pexp_match
                            expression (lambda/debuginfo.ml[69,2431+12]..[69,2431+18])
                              Pexp_ident "scopes" (lambda/debuginfo.ml[69,2431+12]..[69,2431+18])
                            [
                              <case>
                                pattern (lambda/debuginfo.ml[70,2455+8]..[70,2455+44])
                                  Ppat_construct "Cons" (lambda/debuginfo.ml[70,2455+8]..[70,2455+12])
                                  Some
                                    []
                                    pattern (lambda/debuginfo.ml[70,2455+13]..[70,2455+44])
                                      Ppat_record Open
                                      [
                                        "item" (lambda/debuginfo.ml[70,2455+14]..[70,2455+18])
                                          pattern (lambda/debuginfo.ml[70,2455+21]..[70,2455+40])
                                            Ppat_construct "Sc_class_definition" (lambda/debuginfo.ml[70,2455+21]..[70,2455+40])
                                            None
                                      ]
                                expression (lambda/debuginfo.ml[70,2455+48]..[70,2455+69])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[70,2455+48]..[70,2455+51])
                                    Pexp_ident "dot" (lambda/debuginfo.ml[70,2455+48]..[70,2455+51])
                                  [
                                    <arg>
                                    Labelled "sep"
                                      expression (lambda/debuginfo.ml[70,2455+57]..[70,2455+60])
                                        Pexp_constant PConst_string("#",(lambda/debuginfo.ml[70,2455+58]..[70,2455+59]),None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[70,2455+61]..[70,2455+67])
                                        Pexp_ident "scopes" (lambda/debuginfo.ml[70,2455+61]..[70,2455+67])
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[70,2455+68]..[70,2455+69])
                                        Pexp_ident "s" (lambda/debuginfo.ml[70,2455+68]..[70,2455+69])
                                  ]
                              <case>
                                pattern (lambda/debuginfo.ml[71,2525+8]..[71,2525+9])
                                  Ppat_any
                                expression (lambda/debuginfo.ml[71,2525+13]..[71,2525+25])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[71,2525+13]..[71,2525+16])
                                    Pexp_ident "dot" (lambda/debuginfo.ml[71,2525+13]..[71,2525+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[71,2525+17]..[71,2525+23])
                                        Pexp_ident "scopes" (lambda/debuginfo.ml[71,2525+17]..[71,2525+23])
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[71,2525+24]..[71,2525+25])
                                        Pexp_ident "s" (lambda/debuginfo.ml[71,2525+24]..[71,2525+25])
                                  ]
                            ]
                      ]
                      expression (lambda/debuginfo.ml[73,2558+4]..[73,2558+33])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[73,2558+4]..[73,2558+8])
                          Pexp_ident "cons" (lambda/debuginfo.ml[73,2558+4]..[73,2558+8])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[73,2558+9]..[73,2558+29])
                              Pexp_construct "Sc_method_definition" (lambda/debuginfo.ml[73,2558+9]..[73,2558+29])
                              None
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[73,2558+30]..[73,2558+33])
                              Pexp_ident "str" (lambda/debuginfo.ml[73,2558+30]..[73,2558+33])
                        ]
            ]
          structure_item (lambda/debuginfo.ml[75,2593+2]..[77,2654+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[75,2593+6]..[75,2593+22])
                  Ppat_var "string_of_scopes" (lambda/debuginfo.ml[75,2593+6]..[75,2593+22])
                expression (lambda/debuginfo.ml[75,2593+25]..[77,2654+26])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/debuginfo.ml[76,2627+6]..[76,2627+11])
                        Ppat_construct "Empty" (lambda/debuginfo.ml[76,2627+6]..[76,2627+11])
                        None
                      expression (lambda/debuginfo.ml[76,2627+15]..[76,2627+26])
                        Pexp_constant PConst_string("<unknown>",(lambda/debuginfo.ml[76,2627+16]..[76,2627+25]),None)
                    <case>
                      pattern (lambda/debuginfo.ml[77,2654+6]..[77,2654+19])
                        Ppat_construct "Cons" (lambda/debuginfo.ml[77,2654+6]..[77,2654+10])
                        Some
                          []
                          pattern (lambda/debuginfo.ml[77,2654+11]..[77,2654+19])
                            Ppat_record Open
                            [
                              "str" (lambda/debuginfo.ml[77,2654+12]..[77,2654+15]) ghost
                                pattern (lambda/debuginfo.ml[77,2654+12]..[77,2654+15])
                                  Ppat_var "str" (lambda/debuginfo.ml[77,2654+12]..[77,2654+15])
                            ]
                      expression (lambda/debuginfo.ml[77,2654+23]..[77,2654+26])
                        Pexp_ident "str" (lambda/debuginfo.ml[77,2654+23]..[77,2654+26])
                  ]
            ]
          structure_item (lambda/debuginfo.ml[79,2682+2]..[83,2758+28])
            Pstr_type Rec
            [
              type_declaration "t" (lambda/debuginfo.ml[79,2682+7]..[79,2682+8]) (lambda/debuginfo.ml[79,2682+2]..[83,2758+28])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lambda/debuginfo.ml[80,2693+4]..[80,2693+17])
                        "Loc_unknown" (lambda/debuginfo.ml[80,2693+6]..[80,2693+17])
                        []
                        None
                      (lambda/debuginfo.ml[81,2711+4]..[83,2758+28])
                        "Loc_known" (lambda/debuginfo.ml[81,2711+6]..[81,2711+15])
                        [
                          (lambda/debuginfo.ml[82,2730+10]..[82,2730+27])
                            Immutable
                            "loc" (lambda/debuginfo.ml[82,2730+10]..[82,2730+13])                            core_type (lambda/debuginfo.ml[82,2730+16]..[82,2730+26])
                              Ptyp_constr "Location.t" (lambda/debuginfo.ml[82,2730+16]..[82,2730+26])
                              []
                          (lambda/debuginfo.ml[83,2758+10]..[83,2758+26])
                            Immutable
                            "scopes" (lambda/debuginfo.ml[83,2758+10]..[83,2758+16])                            core_type (lambda/debuginfo.ml[83,2758+19]..[83,2758+25])
                              Ptyp_constr "scopes" (lambda/debuginfo.ml[83,2758+19]..[83,2758+25])
                              []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lambda/debuginfo.ml[85,2788+2]..[89,2880+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[85,2788+6]..[85,2788+17])
                  Ppat_var "of_location" (lambda/debuginfo.ml[85,2788+6]..[85,2788+17])
                expression (lambda/debuginfo.ml[85,2788+18]..[89,2880+31]) ghost
                  Pexp_fun
                  Labelled "scopes"
                  None
                  pattern (lambda/debuginfo.ml[85,2788+19]..[85,2788+25])
                    Ppat_var "scopes" (lambda/debuginfo.ml[85,2788+19]..[85,2788+25])
                  expression (lambda/debuginfo.ml[85,2788+26]..[89,2880+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[85,2788+26]..[85,2788+29])
                      Ppat_var "loc" (lambda/debuginfo.ml[85,2788+26]..[85,2788+29])
                    expression (lambda/debuginfo.ml[86,2820+4]..[89,2880+31])
                      Pexp_ifthenelse
                      expression (lambda/debuginfo.ml[86,2820+7]..[86,2820+27])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[86,2820+7]..[86,2820+23])
                          Pexp_ident "Location.is_none" (lambda/debuginfo.ml[86,2820+7]..[86,2820+23])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[86,2820+24]..[86,2820+27])
                              Pexp_ident "loc" (lambda/debuginfo.ml[86,2820+24]..[86,2820+27])
                        ]
                      expression (lambda/debuginfo.ml[87,2853+6]..[87,2853+17])
                        Pexp_construct "Loc_unknown" (lambda/debuginfo.ml[87,2853+6]..[87,2853+17])
                        None
                      Some
                        expression (lambda/debuginfo.ml[89,2880+6]..[89,2880+31])
                          Pexp_construct "Loc_known" (lambda/debuginfo.ml[89,2880+6]..[89,2880+15])
                          Some
                            expression (lambda/debuginfo.ml[89,2880+16]..[89,2880+31])
                              Pexp_record
                              [
                                "loc" (lambda/debuginfo.ml[89,2880+18]..[89,2880+21]) ghost
                                  expression (lambda/debuginfo.ml[89,2880+18]..[89,2880+21])
                                    Pexp_ident "loc" (lambda/debuginfo.ml[89,2880+18]..[89,2880+21])
                                "scopes" (lambda/debuginfo.ml[89,2880+23]..[89,2880+29]) ghost
                                  expression (lambda/debuginfo.ml[89,2880+23]..[89,2880+29])
                                    Pexp_ident "scopes" (lambda/debuginfo.ml[89,2880+23]..[89,2880+29])
                              ]
                              None
            ]
          structure_item (lambda/debuginfo.ml[91,2913+2]..[93,2977+33])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[91,2913+6]..[91,2913+17])
                  Ppat_var "to_location" (lambda/debuginfo.ml[91,2913+6]..[91,2913+17])
                expression (lambda/debuginfo.ml[91,2913+20]..[93,2977+33])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/debuginfo.ml[92,2942+6]..[92,2942+17])
                        Ppat_construct "Loc_unknown" (lambda/debuginfo.ml[92,2942+6]..[92,2942+17])
                        None
                      expression (lambda/debuginfo.ml[92,2942+21]..[92,2942+34])
                        Pexp_ident "Location.none" (lambda/debuginfo.ml[92,2942+21]..[92,2942+34])
                    <case>
                      pattern (lambda/debuginfo.ml[93,2977+6]..[93,2977+26])
                        Ppat_construct "Loc_known" (lambda/debuginfo.ml[93,2977+6]..[93,2977+15])
                        Some
                          []
                          pattern (lambda/debuginfo.ml[93,2977+16]..[93,2977+26])
                            Ppat_record Open
                            [
                              "loc" (lambda/debuginfo.ml[93,2977+18]..[93,2977+21]) ghost
                                pattern (lambda/debuginfo.ml[93,2977+18]..[93,2977+21])
                                  Ppat_var "loc" (lambda/debuginfo.ml[93,2977+18]..[93,2977+21])
                            ]
                      expression (lambda/debuginfo.ml[93,2977+30]..[93,2977+33])
                        Pexp_ident "loc" (lambda/debuginfo.ml[93,2977+30]..[93,2977+33])
                  ]
            ]
          structure_item (lambda/debuginfo.ml[95,3012+2]..[97,3081+62])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/debuginfo.ml[95,3012+6]..[95,3012+31])
                  Ppat_var "string_of_scoped_location" (lambda/debuginfo.ml[95,3012+6]..[95,3012+31])
                expression (lambda/debuginfo.ml[95,3012+34]..[97,3081+62])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/debuginfo.ml[96,3055+6]..[96,3055+17])
                        Ppat_construct "Loc_unknown" (lambda/debuginfo.ml[96,3055+6]..[96,3055+17])
                        None
                      expression (lambda/debuginfo.ml[96,3055+21]..[96,3055+25])
                        Pexp_constant PConst_string("??",(lambda/debuginfo.ml[96,3055+22]..[96,3055+24]),None)
                    <case>
                      pattern (lambda/debuginfo.ml[97,3081+6]..[97,3081+35])
                        Ppat_construct "Loc_known" (lambda/debuginfo.ml[97,3081+6]..[97,3081+15])
                        Some
                          []
                          pattern (lambda/debuginfo.ml[97,3081+16]..[97,3081+35])
                            Ppat_record Closed
                            [
                              "loc" (lambda/debuginfo.ml[97,3081+18]..[97,3081+21])
                                pattern (lambda/debuginfo.ml[97,3081+24]..[97,3081+25])
                                  Ppat_any
                              "scopes" (lambda/debuginfo.ml[97,3081+27]..[97,3081+33]) ghost
                                pattern (lambda/debuginfo.ml[97,3081+27]..[97,3081+33])
                                  Ppat_var "scopes" (lambda/debuginfo.ml[97,3081+27]..[97,3081+33])
                            ]
                      expression (lambda/debuginfo.ml[97,3081+39]..[97,3081+62])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[97,3081+39]..[97,3081+55])
                          Pexp_ident "string_of_scopes" (lambda/debuginfo.ml[97,3081+39]..[97,3081+55])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[97,3081+56]..[97,3081+62])
                              Pexp_ident "scopes" (lambda/debuginfo.ml[97,3081+56]..[97,3081+62])
                        ]
                  ]
            ]
        ]
  structure_item (lambda/debuginfo.ml[100,3149+0]..[109,3361+1])
    Pstr_type Rec
    [
      type_declaration "item" (lambda/debuginfo.ml[100,3149+5]..[100,3149+9]) (lambda/debuginfo.ml[100,3149+0]..[109,3361+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/debuginfo.ml[101,3163+2]..[101,3163+21])
                Immutable
                "dinfo_file" (lambda/debuginfo.ml[101,3163+2]..[101,3163+12])                core_type (lambda/debuginfo.ml[101,3163+14]..[101,3163+20])
                  Ptyp_constr "string" (lambda/debuginfo.ml[101,3163+14]..[101,3163+20])
                  []
              (lambda/debuginfo.ml[102,3185+2]..[102,3185+18])
                Immutable
                "dinfo_line" (lambda/debuginfo.ml[102,3185+2]..[102,3185+12])                core_type (lambda/debuginfo.ml[102,3185+14]..[102,3185+17])
                  Ptyp_constr "int" (lambda/debuginfo.ml[102,3185+14]..[102,3185+17])
                  []
              (lambda/debuginfo.ml[103,3204+2]..[103,3204+24])
                Immutable
                "dinfo_char_start" (lambda/debuginfo.ml[103,3204+2]..[103,3204+18])                core_type (lambda/debuginfo.ml[103,3204+20]..[103,3204+23])
                  Ptyp_constr "int" (lambda/debuginfo.ml[103,3204+20]..[103,3204+23])
                  []
              (lambda/debuginfo.ml[104,3229+2]..[104,3229+22])
                Immutable
                "dinfo_char_end" (lambda/debuginfo.ml[104,3229+2]..[104,3229+16])                core_type (lambda/debuginfo.ml[104,3229+18]..[104,3229+21])
                  Ptyp_constr "int" (lambda/debuginfo.ml[104,3229+18]..[104,3229+21])
                  []
              (lambda/debuginfo.ml[105,3252+2]..[105,3252+23])
                Immutable
                "dinfo_start_bol" (lambda/debuginfo.ml[105,3252+2]..[105,3252+17])                core_type (lambda/debuginfo.ml[105,3252+19]..[105,3252+22])
                  Ptyp_constr "int" (lambda/debuginfo.ml[105,3252+19]..[105,3252+22])
                  []
              (lambda/debuginfo.ml[106,3276+2]..[106,3276+21])
                Immutable
                "dinfo_end_bol" (lambda/debuginfo.ml[106,3276+2]..[106,3276+15])                core_type (lambda/debuginfo.ml[106,3276+17]..[106,3276+20])
                  Ptyp_constr "int" (lambda/debuginfo.ml[106,3276+17]..[106,3276+20])
                  []
              (lambda/debuginfo.ml[107,3298+2]..[107,3298+22])
                Immutable
                "dinfo_end_line" (lambda/debuginfo.ml[107,3298+2]..[107,3298+16])                core_type (lambda/debuginfo.ml[107,3298+18]..[107,3298+21])
                  Ptyp_constr "int" (lambda/debuginfo.ml[107,3298+18]..[107,3298+21])
                  []
              (lambda/debuginfo.ml[108,3321+2]..[108,3321+39])
                Immutable
                "dinfo_scopes" (lambda/debuginfo.ml[108,3321+2]..[108,3321+14])                core_type (lambda/debuginfo.ml[108,3321+16]..[108,3321+38])
                  Ptyp_constr "Scoped_location.scopes" (lambda/debuginfo.ml[108,3321+16]..[108,3321+38])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/debuginfo.ml[111,3364+0]..[111,3364+18])
    Pstr_type Rec
    [
      type_declaration "t" (lambda/debuginfo.ml[111,3364+5]..[111,3364+6]) (lambda/debuginfo.ml[111,3364+0]..[111,3364+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/debuginfo.ml[111,3364+9]..[111,3364+18])
              Ptyp_constr "list" (lambda/debuginfo.ml[111,3364+14]..[111,3364+18])
              [
                core_type (lambda/debuginfo.ml[111,3364+9]..[111,3364+13])
                  Ptyp_constr "item" (lambda/debuginfo.ml[111,3364+9]..[111,3364+13])
                  []
              ]
    ]
  structure_item (lambda/debuginfo.ml[113,3384+0]..[115,3433+19])
    Pstr_type Rec
    [
      type_declaration "alloc_dbginfo_item" (lambda/debuginfo.ml[113,3384+5]..[113,3384+23]) (lambda/debuginfo.ml[113,3384+0]..[115,3433+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/debuginfo.ml[114,3410+4]..[114,3410+22])
                Immutable
                "alloc_words" (lambda/debuginfo.ml[114,3410+4]..[114,3410+15])                core_type (lambda/debuginfo.ml[114,3410+18]..[114,3410+21])
                  Ptyp_constr "int" (lambda/debuginfo.ml[114,3410+18]..[114,3410+21])
                  []
              (lambda/debuginfo.ml[115,3433+4]..[115,3433+17])
                Immutable
                "alloc_dbg" (lambda/debuginfo.ml[115,3433+4]..[115,3433+13])                core_type (lambda/debuginfo.ml[115,3433+16]..[115,3433+17])
                  Ptyp_constr "t" (lambda/debuginfo.ml[115,3433+16]..[115,3433+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/debuginfo.ml[116,3453+0]..[116,3453+44])
    Pstr_type Rec
    [
      type_declaration "alloc_dbginfo" (lambda/debuginfo.ml[116,3453+5]..[116,3453+18]) (lambda/debuginfo.ml[116,3453+0]..[116,3453+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/debuginfo.ml[116,3453+21]..[116,3453+44])
              Ptyp_constr "list" (lambda/debuginfo.ml[116,3453+40]..[116,3453+44])
              [
                core_type (lambda/debuginfo.ml[116,3453+21]..[116,3453+39])
                  Ptyp_constr "alloc_dbginfo_item" (lambda/debuginfo.ml[116,3453+21]..[116,3453+39])
                  []
              ]
    ]
  structure_item (lambda/debuginfo.ml[118,3499+0]..[118,3499+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[118,3499+4]..[118,3499+8])
          Ppat_var "none" (lambda/debuginfo.ml[118,3499+4]..[118,3499+8])
        expression (lambda/debuginfo.ml[118,3499+11]..[118,3499+13])
          Pexp_construct "[]" (lambda/debuginfo.ml[118,3499+11]..[118,3499+13])
          None
    ]
  structure_item (lambda/debuginfo.ml[120,3514+0]..[122,3552+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[120,3514+4]..[120,3514+11])
          Ppat_var "is_none" (lambda/debuginfo.ml[120,3514+4]..[120,3514+11])
        expression (lambda/debuginfo.ml[120,3514+14]..[122,3552+19])
          Pexp_function
          [
            <case>
              pattern (lambda/debuginfo.ml[121,3537+4]..[121,3537+6])
                Ppat_construct "[]" (lambda/debuginfo.ml[121,3537+4]..[121,3537+6])
                None
              expression (lambda/debuginfo.ml[121,3537+10]..[121,3537+14])
                Pexp_construct "true" (lambda/debuginfo.ml[121,3537+10]..[121,3537+14])
                None
            <case>
              pattern (lambda/debuginfo.ml[122,3552+4]..[122,3552+10])
                Ppat_construct "::" (lambda/debuginfo.ml[122,3552+6]..[122,3552+8])
                Some
                  []
                  pattern (lambda/debuginfo.ml[122,3552+4]..[122,3552+10]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/debuginfo.ml[122,3552+4]..[122,3552+5])
                        Ppat_any
                      pattern (lambda/debuginfo.ml[122,3552+9]..[122,3552+10])
                        Ppat_any
                    ]
              expression (lambda/debuginfo.ml[122,3552+14]..[122,3552+19])
                Pexp_construct "false" (lambda/debuginfo.ml[122,3552+14]..[122,3552+19])
                None
          ]
    ]
  structure_item (lambda/debuginfo.ml[124,3573+0]..[135,3816+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[124,3573+4]..[124,3573+13])
          Ppat_var "to_string" (lambda/debuginfo.ml[124,3573+4]..[124,3573+13])
        expression (lambda/debuginfo.ml[124,3573+14]..[135,3816+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/debuginfo.ml[124,3573+14]..[124,3573+17])
            Ppat_var "dbg" (lambda/debuginfo.ml[124,3573+14]..[124,3573+17])
          expression (lambda/debuginfo.ml[125,3593+2]..[135,3816+39])
            Pexp_match
            expression (lambda/debuginfo.ml[125,3593+8]..[125,3593+11])
              Pexp_ident "dbg" (lambda/debuginfo.ml[125,3593+8]..[125,3593+11])
            [
              <case>
                pattern (lambda/debuginfo.ml[126,3610+4]..[126,3610+6])
                  Ppat_construct "[]" (lambda/debuginfo.ml[126,3610+4]..[126,3610+6])
                  None
                expression (lambda/debuginfo.ml[126,3610+10]..[126,3610+12])
                  Pexp_constant PConst_string("",(lambda/debuginfo.ml[126,3610+11]..[126,3610+11]),None)
              <case>
                pattern (lambda/debuginfo.ml[127,3623+4]..[127,3623+6])
                  Ppat_var "ds" (lambda/debuginfo.ml[127,3623+4]..[127,3623+6])
                expression (lambda/debuginfo.ml[128,3633+4]..[135,3816+39])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/debuginfo.ml[128,3633+8]..[128,3633+13])
                        Ppat_var "items" (lambda/debuginfo.ml[128,3633+8]..[128,3633+13])
                      expression (lambda/debuginfo.ml[129,3649+6]..[133,3798+10])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[129,3649+6]..[129,3649+14])
                          Pexp_ident "List.map" (lambda/debuginfo.ml[129,3649+6]..[129,3649+14])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[130,3664+8]..[132,3722+75])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/debuginfo.ml[130,3664+13]..[130,3664+14])
                                Ppat_var "d" (lambda/debuginfo.ml[130,3664+13]..[130,3664+14])
                              expression (lambda/debuginfo.ml[131,3682+11]..[132,3722+74])
                                Pexp_apply
                                expression (lambda/debuginfo.ml[131,3682+11]..[131,3682+25])
                                  Pexp_ident "Printf.sprintf" (lambda/debuginfo.ml[131,3682+11]..[131,3682+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[131,3682+26]..[131,3682+39])
                                      Pexp_constant PConst_string("%s:%d,%d-%d",(lambda/debuginfo.ml[131,3682+27]..[131,3682+38]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[132,3722+13]..[132,3722+25])
                                      Pexp_field
                                      expression (lambda/debuginfo.ml[132,3722+13]..[132,3722+14])
                                        Pexp_ident "d" (lambda/debuginfo.ml[132,3722+13]..[132,3722+14])
                                      "dinfo_file" (lambda/debuginfo.ml[132,3722+15]..[132,3722+25])
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[132,3722+26]..[132,3722+38])
                                      Pexp_field
                                      expression (lambda/debuginfo.ml[132,3722+26]..[132,3722+27])
                                        Pexp_ident "d" (lambda/debuginfo.ml[132,3722+26]..[132,3722+27])
                                      "dinfo_line" (lambda/debuginfo.ml[132,3722+28]..[132,3722+38])
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[132,3722+39]..[132,3722+57])
                                      Pexp_field
                                      expression (lambda/debuginfo.ml[132,3722+39]..[132,3722+40])
                                        Pexp_ident "d" (lambda/debuginfo.ml[132,3722+39]..[132,3722+40])
                                      "dinfo_char_start" (lambda/debuginfo.ml[132,3722+41]..[132,3722+57])
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[132,3722+58]..[132,3722+74])
                                      Pexp_field
                                      expression (lambda/debuginfo.ml[132,3722+58]..[132,3722+59])
                                        Pexp_ident "d" (lambda/debuginfo.ml[132,3722+58]..[132,3722+59])
                                      "dinfo_char_end" (lambda/debuginfo.ml[132,3722+60]..[132,3722+74])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[133,3798+8]..[133,3798+10])
                              Pexp_ident "ds" (lambda/debuginfo.ml[133,3798+8]..[133,3798+10])
                        ]
                  ]
                  expression (lambda/debuginfo.ml[135,3816+4]..[135,3816+39])
                    Pexp_apply
                    expression (lambda/debuginfo.ml[135,3816+8]..[135,3816+9])
                      Pexp_ident "^" (lambda/debuginfo.ml[135,3816+8]..[135,3816+9])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/debuginfo.ml[135,3816+4]..[135,3816+7])
                          Pexp_constant PConst_string("{",(lambda/debuginfo.ml[135,3816+5]..[135,3816+6]),None)
                      <arg>
                      Nolabel
                        expression (lambda/debuginfo.ml[135,3816+10]..[135,3816+39])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[135,3816+34]..[135,3816+35])
                            Pexp_ident "^" (lambda/debuginfo.ml[135,3816+34]..[135,3816+35])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[135,3816+10]..[135,3816+33])
                                Pexp_apply
                                expression (lambda/debuginfo.ml[135,3816+10]..[135,3816+23])
                                  Pexp_ident "String.concat" (lambda/debuginfo.ml[135,3816+10]..[135,3816+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[135,3816+24]..[135,3816+27])
                                      Pexp_constant PConst_string(";",(lambda/debuginfo.ml[135,3816+25]..[135,3816+26]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/debuginfo.ml[135,3816+28]..[135,3816+33])
                                      Pexp_ident "items" (lambda/debuginfo.ml[135,3816+28]..[135,3816+33])
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[135,3816+36]..[135,3816+39])
                                Pexp_constant PConst_string("}",(lambda/debuginfo.ml[135,3816+37]..[135,3816+38]),None)
                          ]
                    ]
            ]
    ]
  structure_item (lambda/debuginfo.ml[137,3857+0]..[155,4569+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[137,3857+4]..[137,3857+22])
          Ppat_var "item_from_location" (lambda/debuginfo.ml[137,3857+4]..[137,3857+22])
        expression (lambda/debuginfo.ml[137,3857+23]..[155,4569+3]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/debuginfo.ml[137,3857+24]..[137,3857+30])
            Ppat_var "scopes" (lambda/debuginfo.ml[137,3857+24]..[137,3857+30])
          expression (lambda/debuginfo.ml[137,3857+31]..[155,4569+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/debuginfo.ml[137,3857+31]..[137,3857+34])
              Ppat_var "loc" (lambda/debuginfo.ml[137,3857+31]..[137,3857+34])
            expression (lambda/debuginfo.ml[138,3894+2]..[155,4569+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/debuginfo.ml[138,3894+6]..[138,3894+18])
                    Ppat_var "valid_endpos" (lambda/debuginfo.ml[138,3894+6]..[138,3894+18])
                  expression (lambda/debuginfo.ml[139,3915+4]..[139,3915+62])
                    Pexp_apply
                    expression (lambda/debuginfo.ml[139,3915+4]..[139,3915+16])
                      Pexp_ident "String.equal" (lambda/debuginfo.ml[139,3915+4]..[139,3915+16])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/debuginfo.ml[139,3915+17]..[139,3915+38])
                          Pexp_field
                          expression (lambda/debuginfo.ml[139,3915+17]..[139,3915+28])
                            Pexp_field
                            expression (lambda/debuginfo.ml[139,3915+17]..[139,3915+20])
                              Pexp_ident "loc" (lambda/debuginfo.ml[139,3915+17]..[139,3915+20])
                            "loc_end" (lambda/debuginfo.ml[139,3915+21]..[139,3915+28])
                          "pos_fname" (lambda/debuginfo.ml[139,3915+29]..[139,3915+38])
                      <arg>
                      Nolabel
                        expression (lambda/debuginfo.ml[139,3915+39]..[139,3915+62])
                          Pexp_field
                          expression (lambda/debuginfo.ml[139,3915+39]..[139,3915+52])
                            Pexp_field
                            expression (lambda/debuginfo.ml[139,3915+39]..[139,3915+42])
                              Pexp_ident "loc" (lambda/debuginfo.ml[139,3915+39]..[139,3915+42])
                            "loc_start" (lambda/debuginfo.ml[139,3915+43]..[139,3915+52])
                          "pos_fname" (lambda/debuginfo.ml[139,3915+53]..[139,3915+62])
                    ]
              ]
              expression (lambda/debuginfo.ml[140,3981+2]..[155,4569+3])
                Pexp_record
                [
                  "dinfo_file" (lambda/debuginfo.ml[140,3981+4]..[140,3981+14])
                    expression (lambda/debuginfo.ml[140,3981+17]..[140,3981+40])
                      Pexp_field
                      expression (lambda/debuginfo.ml[140,3981+17]..[140,3981+30])
                        Pexp_field
                        expression (lambda/debuginfo.ml[140,3981+17]..[140,3981+20])
                          Pexp_ident "loc" (lambda/debuginfo.ml[140,3981+17]..[140,3981+20])
                        "loc_start" (lambda/debuginfo.ml[140,3981+21]..[140,3981+30])
                      "pos_fname" (lambda/debuginfo.ml[140,3981+31]..[140,3981+40])
                  "dinfo_line" (lambda/debuginfo.ml[141,4023+4]..[141,4023+14])
                    expression (lambda/debuginfo.ml[141,4023+17]..[141,4023+39])
                      Pexp_field
                      expression (lambda/debuginfo.ml[141,4023+17]..[141,4023+30])
                        Pexp_field
                        expression (lambda/debuginfo.ml[141,4023+17]..[141,4023+20])
                          Pexp_ident "loc" (lambda/debuginfo.ml[141,4023+17]..[141,4023+20])
                        "loc_start" (lambda/debuginfo.ml[141,4023+21]..[141,4023+30])
                      "pos_lnum" (lambda/debuginfo.ml[141,4023+31]..[141,4023+39])
                  "dinfo_char_start" (lambda/debuginfo.ml[142,4064+4]..[142,4064+20])
                    expression (lambda/debuginfo.ml[142,4064+23]..[142,4064+69])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[142,4064+46]..[142,4064+47])
                        Pexp_ident "-" (lambda/debuginfo.ml[142,4064+46]..[142,4064+47])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[142,4064+23]..[142,4064+45])
                            Pexp_field
                            expression (lambda/debuginfo.ml[142,4064+23]..[142,4064+36])
                              Pexp_field
                              expression (lambda/debuginfo.ml[142,4064+23]..[142,4064+26])
                                Pexp_ident "loc" (lambda/debuginfo.ml[142,4064+23]..[142,4064+26])
                              "loc_start" (lambda/debuginfo.ml[142,4064+27]..[142,4064+36])
                            "pos_cnum" (lambda/debuginfo.ml[142,4064+37]..[142,4064+45])
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[142,4064+48]..[142,4064+69])
                            Pexp_field
                            expression (lambda/debuginfo.ml[142,4064+48]..[142,4064+61])
                              Pexp_field
                              expression (lambda/debuginfo.ml[142,4064+48]..[142,4064+51])
                                Pexp_ident "loc" (lambda/debuginfo.ml[142,4064+48]..[142,4064+51])
                              "loc_start" (lambda/debuginfo.ml[142,4064+52]..[142,4064+61])
                            "pos_bol" (lambda/debuginfo.ml[142,4064+62]..[142,4064+69])
                      ]
                  "dinfo_char_end" (lambda/debuginfo.ml[143,4135+4]..[143,4135+18])
                    expression (lambda/debuginfo.ml[144,4156+6]..[146,4234+57])
                      Pexp_ifthenelse
                      expression (lambda/debuginfo.ml[144,4156+9]..[144,4156+21])
                        Pexp_ident "valid_endpos" (lambda/debuginfo.ml[144,4156+9]..[144,4156+21])
                      expression (lambda/debuginfo.ml[145,4178+11]..[145,4178+55])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[145,4178+32]..[145,4178+33])
                          Pexp_ident "-" (lambda/debuginfo.ml[145,4178+32]..[145,4178+33])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[145,4178+11]..[145,4178+31])
                              Pexp_field
                              expression (lambda/debuginfo.ml[145,4178+11]..[145,4178+22])
                                Pexp_field
                                expression (lambda/debuginfo.ml[145,4178+11]..[145,4178+14])
                                  Pexp_ident "loc" (lambda/debuginfo.ml[145,4178+11]..[145,4178+14])
                                "loc_end" (lambda/debuginfo.ml[145,4178+15]..[145,4178+22])
                              "pos_cnum" (lambda/debuginfo.ml[145,4178+23]..[145,4178+31])
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[145,4178+34]..[145,4178+55])
                              Pexp_field
                              expression (lambda/debuginfo.ml[145,4178+34]..[145,4178+47])
                                Pexp_field
                                expression (lambda/debuginfo.ml[145,4178+34]..[145,4178+37])
                                  Pexp_ident "loc" (lambda/debuginfo.ml[145,4178+34]..[145,4178+37])
                                "loc_start" (lambda/debuginfo.ml[145,4178+38]..[145,4178+47])
                              "pos_bol" (lambda/debuginfo.ml[145,4178+48]..[145,4178+55])
                        ]
                      Some
                        expression (lambda/debuginfo.ml[146,4234+11]..[146,4234+57])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[146,4234+34]..[146,4234+35])
                            Pexp_ident "-" (lambda/debuginfo.ml[146,4234+34]..[146,4234+35])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[146,4234+11]..[146,4234+33])
                                Pexp_field
                                expression (lambda/debuginfo.ml[146,4234+11]..[146,4234+24])
                                  Pexp_field
                                  expression (lambda/debuginfo.ml[146,4234+11]..[146,4234+14])
                                    Pexp_ident "loc" (lambda/debuginfo.ml[146,4234+11]..[146,4234+14])
                                  "loc_start" (lambda/debuginfo.ml[146,4234+15]..[146,4234+24])
                                "pos_cnum" (lambda/debuginfo.ml[146,4234+25]..[146,4234+33])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[146,4234+36]..[146,4234+57])
                                Pexp_field
                                expression (lambda/debuginfo.ml[146,4234+36]..[146,4234+49])
                                  Pexp_field
                                  expression (lambda/debuginfo.ml[146,4234+36]..[146,4234+39])
                                    Pexp_ident "loc" (lambda/debuginfo.ml[146,4234+36]..[146,4234+39])
                                  "loc_start" (lambda/debuginfo.ml[146,4234+40]..[146,4234+49])
                                "pos_bol" (lambda/debuginfo.ml[146,4234+50]..[146,4234+57])
                          ]
                  "dinfo_start_bol" (lambda/debuginfo.ml[147,4293+4]..[147,4293+19])
                    expression (lambda/debuginfo.ml[147,4293+22]..[147,4293+43])
                      Pexp_field
                      expression (lambda/debuginfo.ml[147,4293+22]..[147,4293+35])
                        Pexp_field
                        expression (lambda/debuginfo.ml[147,4293+22]..[147,4293+25])
                          Pexp_ident "loc" (lambda/debuginfo.ml[147,4293+22]..[147,4293+25])
                        "loc_start" (lambda/debuginfo.ml[147,4293+26]..[147,4293+35])
                      "pos_bol" (lambda/debuginfo.ml[147,4293+36]..[147,4293+43])
                  "dinfo_end_bol" (lambda/debuginfo.ml[148,4338+4]..[148,4338+17])
                    expression (lambda/debuginfo.ml[149,4358+6]..[150,4405+32])
                      Pexp_ifthenelse
                      expression (lambda/debuginfo.ml[149,4358+9]..[149,4358+21])
                        Pexp_ident "valid_endpos" (lambda/debuginfo.ml[149,4358+9]..[149,4358+21])
                      expression (lambda/debuginfo.ml[149,4358+27]..[149,4358+46])
                        Pexp_field
                        expression (lambda/debuginfo.ml[149,4358+27]..[149,4358+38])
                          Pexp_field
                          expression (lambda/debuginfo.ml[149,4358+27]..[149,4358+30])
                            Pexp_ident "loc" (lambda/debuginfo.ml[149,4358+27]..[149,4358+30])
                          "loc_end" (lambda/debuginfo.ml[149,4358+31]..[149,4358+38])
                        "pos_bol" (lambda/debuginfo.ml[149,4358+39]..[149,4358+46])
                      Some
                        expression (lambda/debuginfo.ml[150,4405+11]..[150,4405+32])
                          Pexp_field
                          expression (lambda/debuginfo.ml[150,4405+11]..[150,4405+24])
                            Pexp_field
                            expression (lambda/debuginfo.ml[150,4405+11]..[150,4405+14])
                              Pexp_ident "loc" (lambda/debuginfo.ml[150,4405+11]..[150,4405+14])
                            "loc_start" (lambda/debuginfo.ml[150,4405+15]..[150,4405+24])
                          "pos_bol" (lambda/debuginfo.ml[150,4405+25]..[150,4405+32])
                  "dinfo_end_line" (lambda/debuginfo.ml[151,4439+4]..[151,4439+18])
                    expression (lambda/debuginfo.ml[152,4460+6]..[153,4508+33])
                      Pexp_ifthenelse
                      expression (lambda/debuginfo.ml[152,4460+9]..[152,4460+21])
                        Pexp_ident "valid_endpos" (lambda/debuginfo.ml[152,4460+9]..[152,4460+21])
                      expression (lambda/debuginfo.ml[152,4460+27]..[152,4460+47])
                        Pexp_field
                        expression (lambda/debuginfo.ml[152,4460+27]..[152,4460+38])
                          Pexp_field
                          expression (lambda/debuginfo.ml[152,4460+27]..[152,4460+30])
                            Pexp_ident "loc" (lambda/debuginfo.ml[152,4460+27]..[152,4460+30])
                          "loc_end" (lambda/debuginfo.ml[152,4460+31]..[152,4460+38])
                        "pos_lnum" (lambda/debuginfo.ml[152,4460+39]..[152,4460+47])
                      Some
                        expression (lambda/debuginfo.ml[153,4508+11]..[153,4508+33])
                          Pexp_field
                          expression (lambda/debuginfo.ml[153,4508+11]..[153,4508+24])
                            Pexp_field
                            expression (lambda/debuginfo.ml[153,4508+11]..[153,4508+14])
                              Pexp_ident "loc" (lambda/debuginfo.ml[153,4508+11]..[153,4508+14])
                            "loc_start" (lambda/debuginfo.ml[153,4508+15]..[153,4508+24])
                          "pos_lnum" (lambda/debuginfo.ml[153,4508+25]..[153,4508+33])
                  "dinfo_scopes" (lambda/debuginfo.ml[154,4543+4]..[154,4543+16])
                    expression (lambda/debuginfo.ml[154,4543+19]..[154,4543+25])
                      Pexp_ident "scopes" (lambda/debuginfo.ml[154,4543+19]..[154,4543+25])
                ]
                None
    ]
  structure_item (lambda/debuginfo.ml[157,4574+0]..[161,4729+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[157,4574+4]..[157,4574+17])
          Ppat_var "from_location" (lambda/debuginfo.ml[157,4574+4]..[157,4574+17])
        expression (lambda/debuginfo.ml[157,4574+20]..[161,4729+36])
          Pexp_function
          [
            <case>
              pattern (lambda/debuginfo.ml[158,4603+4]..[158,4603+31])
                Ppat_construct "Scoped_location.Loc_unknown" (lambda/debuginfo.ml[158,4603+4]..[158,4603+31])
                None
              expression (lambda/debuginfo.ml[158,4603+35]..[158,4603+37])
                Pexp_construct "[]" (lambda/debuginfo.ml[158,4603+35]..[158,4603+37])
                None
            <case>
              pattern (lambda/debuginfo.ml[159,4641+4]..[159,4641+43])
                Ppat_construct "Scoped_location.Loc_known" (lambda/debuginfo.ml[159,4641+4]..[159,4641+29])
                Some
                  []
                  pattern (lambda/debuginfo.ml[159,4641+30]..[159,4641+43])
                    Ppat_record Closed
                    [
                      "scopes" (lambda/debuginfo.ml[159,4641+31]..[159,4641+37]) ghost
                        pattern (lambda/debuginfo.ml[159,4641+31]..[159,4641+37])
                          Ppat_var "scopes" (lambda/debuginfo.ml[159,4641+31]..[159,4641+37])
                      "loc" (lambda/debuginfo.ml[159,4641+39]..[159,4641+42]) ghost
                        pattern (lambda/debuginfo.ml[159,4641+39]..[159,4641+42])
                          Ppat_var "loc" (lambda/debuginfo.ml[159,4641+39]..[159,4641+42])
                    ]
              expression (lambda/debuginfo.ml[160,4688+4]..[161,4729+36])
                Pexp_sequence
                expression (lambda/debuginfo.ml[160,4688+4]..[160,4688+39])
                  Pexp_assert
                  expression (lambda/debuginfo.ml[160,4688+11]..[160,4688+39])
                    Pexp_apply
                    expression (lambda/debuginfo.ml[160,4688+12]..[160,4688+15])
                      Pexp_ident "not" (lambda/debuginfo.ml[160,4688+12]..[160,4688+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/debuginfo.ml[160,4688+16]..[160,4688+38])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[160,4688+17]..[160,4688+33])
                            Pexp_ident "Location.is_none" (lambda/debuginfo.ml[160,4688+17]..[160,4688+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[160,4688+34]..[160,4688+37])
                                Pexp_ident "loc" (lambda/debuginfo.ml[160,4688+34]..[160,4688+37])
                          ]
                    ]
                expression (lambda/debuginfo.ml[161,4729+4]..[161,4729+36])
                  Pexp_construct "::" (lambda/debuginfo.ml[161,4729+5]..[161,4729+36]) ghost
                  Some
                    expression (lambda/debuginfo.ml[161,4729+5]..[161,4729+36]) ghost
                      Pexp_tuple
                      [
                        expression (lambda/debuginfo.ml[161,4729+5]..[161,4729+35])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[161,4729+5]..[161,4729+23])
                            Pexp_ident "item_from_location" (lambda/debuginfo.ml[161,4729+5]..[161,4729+23])
                          [
                            <arg>
                            Labelled "scopes"
                              expression (lambda/debuginfo.ml[161,4729+25]..[161,4729+31])
                                Pexp_ident "scopes" (lambda/debuginfo.ml[161,4729+25]..[161,4729+31])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[161,4729+32]..[161,4729+35])
                                Pexp_ident "loc" (lambda/debuginfo.ml[161,4729+32]..[161,4729+35])
                          ]
                        expression (lambda/debuginfo.ml[161,4729+35]..[161,4729+36]) ghost
                          Pexp_construct "[]" (lambda/debuginfo.ml[161,4729+35]..[161,4729+36]) ghost
                          None
                      ]
          ]
    ]
  structure_item (lambda/debuginfo.ml[163,4767+0]..[178,5218+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[163,4767+4]..[163,4767+15])
          Ppat_var "to_location" (lambda/debuginfo.ml[163,4767+4]..[163,4767+15])
        expression (lambda/debuginfo.ml[163,4767+18]..[178,5218+46])
          Pexp_function
          [
            <case>
              pattern (lambda/debuginfo.ml[164,4794+4]..[164,4794+6])
                Ppat_construct "[]" (lambda/debuginfo.ml[164,4794+4]..[164,4794+6])
                None
              expression (lambda/debuginfo.ml[164,4794+10]..[164,4794+23])
                Pexp_ident "Location.none" (lambda/debuginfo.ml[164,4794+10]..[164,4794+23])
            <case>
              pattern (lambda/debuginfo.ml[165,4818+4]..[165,4818+10])
                Ppat_construct "::" (lambda/debuginfo.ml[165,4818+6]..[165,4818+8])
                Some
                  []
                  pattern (lambda/debuginfo.ml[165,4818+4]..[165,4818+10]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/debuginfo.ml[165,4818+4]..[165,4818+5])
                        Ppat_var "d" (lambda/debuginfo.ml[165,4818+4]..[165,4818+5])
                      pattern (lambda/debuginfo.ml[165,4818+9]..[165,4818+10])
                        Ppat_any
                    ]
              expression (lambda/debuginfo.ml[166,4832+4]..[178,5218+46])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/debuginfo.ml[166,4832+8]..[166,4832+17])
                      Ppat_var "loc_start" (lambda/debuginfo.ml[166,4832+8]..[166,4832+17])
                    expression (lambda/debuginfo.ml[167,4852+6]..[171,5015+7])
                      Pexp_record
                      [
                        "pos_fname" (lambda/debuginfo.ml[167,4852+8]..[167,4852+17])
                          expression (lambda/debuginfo.ml[167,4852+20]..[167,4852+32])
                            Pexp_field
                            expression (lambda/debuginfo.ml[167,4852+20]..[167,4852+21])
                              Pexp_ident "d" (lambda/debuginfo.ml[167,4852+20]..[167,4852+21])
                            "dinfo_file" (lambda/debuginfo.ml[167,4852+22]..[167,4852+32])
                        "pos_lnum" (lambda/debuginfo.ml[168,4886+8]..[168,4886+16])
                          expression (lambda/debuginfo.ml[168,4886+19]..[168,4886+31])
                            Pexp_field
                            expression (lambda/debuginfo.ml[168,4886+19]..[168,4886+20])
                              Pexp_ident "d" (lambda/debuginfo.ml[168,4886+19]..[168,4886+20])
                            "dinfo_line" (lambda/debuginfo.ml[168,4886+21]..[168,4886+31])
                        "pos_bol" (lambda/debuginfo.ml[169,4919+8]..[169,4919+15])
                          expression (lambda/debuginfo.ml[169,4919+18]..[169,4919+35])
                            Pexp_field
                            expression (lambda/debuginfo.ml[169,4919+18]..[169,4919+19])
                              Pexp_ident "d" (lambda/debuginfo.ml[169,4919+18]..[169,4919+19])
                            "dinfo_start_bol" (lambda/debuginfo.ml[169,4919+20]..[169,4919+35])
                        "pos_cnum" (lambda/debuginfo.ml[170,4956+8]..[170,4956+16])
                          expression (lambda/debuginfo.ml[170,4956+19]..[170,4956+57])
                            Pexp_apply
                            expression (lambda/debuginfo.ml[170,4956+37]..[170,4956+38])
                              Pexp_ident "+" (lambda/debuginfo.ml[170,4956+37]..[170,4956+38])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[170,4956+19]..[170,4956+36])
                                  Pexp_field
                                  expression (lambda/debuginfo.ml[170,4956+19]..[170,4956+20])
                                    Pexp_ident "d" (lambda/debuginfo.ml[170,4956+19]..[170,4956+20])
                                  "dinfo_start_bol" (lambda/debuginfo.ml[170,4956+21]..[170,4956+36])
                              <arg>
                              Nolabel
                                expression (lambda/debuginfo.ml[170,4956+39]..[170,4956+57])
                                  Pexp_field
                                  expression (lambda/debuginfo.ml[170,4956+39]..[170,4956+40])
                                    Pexp_ident "d" (lambda/debuginfo.ml[170,4956+39]..[170,4956+40])
                                  "dinfo_char_start" (lambda/debuginfo.ml[170,4956+41]..[170,4956+57])
                            ]
                      ]
                      None
                ]
                expression (lambda/debuginfo.ml[172,5026+4]..[178,5218+46])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/debuginfo.ml[172,5026+8]..[172,5026+15])
                        Ppat_var "loc_end" (lambda/debuginfo.ml[172,5026+8]..[172,5026+15])
                      expression (lambda/debuginfo.ml[173,5044+6]..[177,5207+7])
                        Pexp_record
                        [
                          "pos_fname" (lambda/debuginfo.ml[173,5044+8]..[173,5044+17])
                            expression (lambda/debuginfo.ml[173,5044+20]..[173,5044+32])
                              Pexp_field
                              expression (lambda/debuginfo.ml[173,5044+20]..[173,5044+21])
                                Pexp_ident "d" (lambda/debuginfo.ml[173,5044+20]..[173,5044+21])
                              "dinfo_file" (lambda/debuginfo.ml[173,5044+22]..[173,5044+32])
                          "pos_lnum" (lambda/debuginfo.ml[174,5078+8]..[174,5078+16])
                            expression (lambda/debuginfo.ml[174,5078+19]..[174,5078+35])
                              Pexp_field
                              expression (lambda/debuginfo.ml[174,5078+19]..[174,5078+20])
                                Pexp_ident "d" (lambda/debuginfo.ml[174,5078+19]..[174,5078+20])
                              "dinfo_end_line" (lambda/debuginfo.ml[174,5078+21]..[174,5078+35])
                          "pos_bol" (lambda/debuginfo.ml[175,5115+8]..[175,5115+15])
                            expression (lambda/debuginfo.ml[175,5115+18]..[175,5115+33])
                              Pexp_field
                              expression (lambda/debuginfo.ml[175,5115+18]..[175,5115+19])
                                Pexp_ident "d" (lambda/debuginfo.ml[175,5115+18]..[175,5115+19])
                              "dinfo_end_bol" (lambda/debuginfo.ml[175,5115+20]..[175,5115+33])
                          "pos_cnum" (lambda/debuginfo.ml[176,5150+8]..[176,5150+16])
                            expression (lambda/debuginfo.ml[176,5150+19]..[176,5150+55])
                              Pexp_apply
                              expression (lambda/debuginfo.ml[176,5150+37]..[176,5150+38])
                                Pexp_ident "+" (lambda/debuginfo.ml[176,5150+37]..[176,5150+38])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/debuginfo.ml[176,5150+19]..[176,5150+36])
                                    Pexp_field
                                    expression (lambda/debuginfo.ml[176,5150+19]..[176,5150+20])
                                      Pexp_ident "d" (lambda/debuginfo.ml[176,5150+19]..[176,5150+20])
                                    "dinfo_start_bol" (lambda/debuginfo.ml[176,5150+21]..[176,5150+36])
                                <arg>
                                Nolabel
                                  expression (lambda/debuginfo.ml[176,5150+39]..[176,5150+55])
                                    Pexp_field
                                    expression (lambda/debuginfo.ml[176,5150+39]..[176,5150+40])
                                      Pexp_ident "d" (lambda/debuginfo.ml[176,5150+39]..[176,5150+40])
                                    "dinfo_char_end" (lambda/debuginfo.ml[176,5150+41]..[176,5150+55])
                              ]
                        ]
                        None
                  ]
                  expression (lambda/debuginfo.ml[178,5218+4]..[178,5218+46])
                    Pexp_record
                    [
                      "loc_ghost" (lambda/debuginfo.ml[178,5218+6]..[178,5218+15])
                        expression (lambda/debuginfo.ml[178,5218+18]..[178,5218+23])
                          Pexp_construct "false" (lambda/debuginfo.ml[178,5218+18]..[178,5218+23])
                          None
                      "loc_start" (lambda/debuginfo.ml[178,5218+25]..[178,5218+34]) ghost
                        expression (lambda/debuginfo.ml[178,5218+25]..[178,5218+34])
                          Pexp_ident "loc_start" (lambda/debuginfo.ml[178,5218+25]..[178,5218+34])
                      "loc_end" (lambda/debuginfo.ml[178,5218+36]..[178,5218+43]) ghost
                        expression (lambda/debuginfo.ml[178,5218+36]..[178,5218+43])
                          Pexp_ident "loc_end" (lambda/debuginfo.ml[178,5218+36]..[178,5218+43])
                    ]
                    None
          ]
    ]
  structure_item (lambda/debuginfo.ml[180,5266+0]..[181,5289+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[180,5266+4]..[180,5266+10])
          Ppat_var "inline" (lambda/debuginfo.ml[180,5266+4]..[180,5266+10])
        expression (lambda/debuginfo.ml[180,5266+11]..[181,5289+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/debuginfo.ml[180,5266+11]..[180,5266+15])
            Ppat_var "dbg1" (lambda/debuginfo.ml[180,5266+11]..[180,5266+15])
          expression (lambda/debuginfo.ml[180,5266+16]..[181,5289+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/debuginfo.ml[180,5266+16]..[180,5266+20])
              Ppat_var "dbg2" (lambda/debuginfo.ml[180,5266+16]..[180,5266+20])
            expression (lambda/debuginfo.ml[181,5289+2]..[181,5289+13])
              Pexp_apply
              expression (lambda/debuginfo.ml[181,5289+7]..[181,5289+8])
                Pexp_ident "@" (lambda/debuginfo.ml[181,5289+7]..[181,5289+8])
              [
                <arg>
                Nolabel
                  expression (lambda/debuginfo.ml[181,5289+2]..[181,5289+6])
                    Pexp_ident "dbg1" (lambda/debuginfo.ml[181,5289+2]..[181,5289+6])
                <arg>
                Nolabel
                  expression (lambda/debuginfo.ml[181,5289+9]..[181,5289+13])
                    Pexp_ident "dbg2" (lambda/debuginfo.ml[181,5289+9]..[181,5289+13])
              ]
    ]
  structure_item (lambda/debuginfo.ml[188,5631+0]..[211,6439+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[188,5631+4]..[188,5631+11])
          Ppat_var "compare" (lambda/debuginfo.ml[188,5631+4]..[188,5631+11])
        expression (lambda/debuginfo.ml[188,5631+12]..[211,6439+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/debuginfo.ml[188,5631+12]..[188,5631+16])
            Ppat_var "dbg1" (lambda/debuginfo.ml[188,5631+12]..[188,5631+16])
          expression (lambda/debuginfo.ml[188,5631+17]..[211,6439+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/debuginfo.ml[188,5631+17]..[188,5631+21])
              Ppat_var "dbg2" (lambda/debuginfo.ml[188,5631+17]..[188,5631+21])
            expression (lambda/debuginfo.ml[189,5655+2]..[211,6439+38])
              Pexp_let Rec
              [
                <def>
                  pattern (lambda/debuginfo.ml[189,5655+10]..[189,5655+14])
                    Ppat_var "loop" (lambda/debuginfo.ml[189,5655+10]..[189,5655+14])
                  expression (lambda/debuginfo.ml[189,5655+15]..[209,6415+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[189,5655+15]..[189,5655+18])
                      Ppat_var "ds1" (lambda/debuginfo.ml[189,5655+15]..[189,5655+18])
                    expression (lambda/debuginfo.ml[189,5655+19]..[209,6415+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/debuginfo.ml[189,5655+19]..[189,5655+22])
                        Ppat_var "ds2" (lambda/debuginfo.ml[189,5655+19]..[189,5655+22])
                      expression (lambda/debuginfo.ml[190,5680+4]..[209,6415+18])
                        Pexp_match
                        expression (lambda/debuginfo.ml[190,5680+10]..[190,5680+18])
                          Pexp_tuple
                          [
                            expression (lambda/debuginfo.ml[190,5680+10]..[190,5680+13])
                              Pexp_ident "ds1" (lambda/debuginfo.ml[190,5680+10]..[190,5680+13])
                            expression (lambda/debuginfo.ml[190,5680+15]..[190,5680+18])
                              Pexp_ident "ds2" (lambda/debuginfo.ml[190,5680+15]..[190,5680+18])
                          ]
                        [
                          <case>
                            pattern (lambda/debuginfo.ml[191,5704+6]..[191,5704+12])
                              Ppat_tuple
                              [
                                pattern (lambda/debuginfo.ml[191,5704+6]..[191,5704+8])
                                  Ppat_construct "[]" (lambda/debuginfo.ml[191,5704+6]..[191,5704+8])
                                  None
                                pattern (lambda/debuginfo.ml[191,5704+10]..[191,5704+12])
                                  Ppat_construct "[]" (lambda/debuginfo.ml[191,5704+10]..[191,5704+12])
                                  None
                              ]
                            expression (lambda/debuginfo.ml[191,5704+16]..[191,5704+17])
                              Pexp_constant PConst_int (0,None)
                          <case>
                            pattern (lambda/debuginfo.ml[192,5722+6]..[192,5722+16])
                              Ppat_tuple
                              [
                                pattern (lambda/debuginfo.ml[192,5722+6]..[192,5722+12])
                                  Ppat_construct "::" (lambda/debuginfo.ml[192,5722+8]..[192,5722+10])
                                  Some
                                    []
                                    pattern (lambda/debuginfo.ml[192,5722+6]..[192,5722+12]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/debuginfo.ml[192,5722+6]..[192,5722+7])
                                          Ppat_any
                                        pattern (lambda/debuginfo.ml[192,5722+11]..[192,5722+12])
                                          Ppat_any
                                      ]
                                pattern (lambda/debuginfo.ml[192,5722+14]..[192,5722+16])
                                  Ppat_construct "[]" (lambda/debuginfo.ml[192,5722+14]..[192,5722+16])
                                  None
                              ]
                            expression (lambda/debuginfo.ml[192,5722+20]..[192,5722+21])
                              Pexp_constant PConst_int (1,None)
                          <case>
                            pattern (lambda/debuginfo.ml[193,5744+6]..[193,5744+16])
                              Ppat_tuple
                              [
                                pattern (lambda/debuginfo.ml[193,5744+6]..[193,5744+8])
                                  Ppat_construct "[]" (lambda/debuginfo.ml[193,5744+6]..[193,5744+8])
                                  None
                                pattern (lambda/debuginfo.ml[193,5744+10]..[193,5744+16])
                                  Ppat_construct "::" (lambda/debuginfo.ml[193,5744+12]..[193,5744+14])
                                  Some
                                    []
                                    pattern (lambda/debuginfo.ml[193,5744+10]..[193,5744+16]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/debuginfo.ml[193,5744+10]..[193,5744+11])
                                          Ppat_any
                                        pattern (lambda/debuginfo.ml[193,5744+15]..[193,5744+16])
                                          Ppat_any
                                      ]
                              ]
                            expression (lambda/debuginfo.ml[193,5744+20]..[193,5744+22])
                              Pexp_constant PConst_int (-1,None)
                          <case>
                            pattern (lambda/debuginfo.ml[194,5767+6]..[194,5767+26])
                              Ppat_tuple
                              [
                                pattern (lambda/debuginfo.ml[194,5767+6]..[194,5767+15])
                                  Ppat_construct "::" (lambda/debuginfo.ml[194,5767+9]..[194,5767+11])
                                  Some
                                    []
                                    pattern (lambda/debuginfo.ml[194,5767+6]..[194,5767+15]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/debuginfo.ml[194,5767+6]..[194,5767+8])
                                          Ppat_var "d1" (lambda/debuginfo.ml[194,5767+6]..[194,5767+8])
                                        pattern (lambda/debuginfo.ml[194,5767+12]..[194,5767+15])
                                          Ppat_var "ds1" (lambda/debuginfo.ml[194,5767+12]..[194,5767+15])
                                      ]
                                pattern (lambda/debuginfo.ml[194,5767+17]..[194,5767+26])
                                  Ppat_construct "::" (lambda/debuginfo.ml[194,5767+20]..[194,5767+22])
                                  Some
                                    []
                                    pattern (lambda/debuginfo.ml[194,5767+17]..[194,5767+26]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/debuginfo.ml[194,5767+17]..[194,5767+19])
                                          Ppat_var "d2" (lambda/debuginfo.ml[194,5767+17]..[194,5767+19])
                                        pattern (lambda/debuginfo.ml[194,5767+23]..[194,5767+26])
                                          Ppat_var "ds2" (lambda/debuginfo.ml[194,5767+23]..[194,5767+26])
                                      ]
                              ]
                            expression (lambda/debuginfo.ml[195,5797+6]..[209,6415+18])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/debuginfo.ml[195,5797+10]..[195,5797+11])
                                    Ppat_var "c" (lambda/debuginfo.ml[195,5797+10]..[195,5797+11])
                                  expression (lambda/debuginfo.ml[195,5797+14]..[195,5797+56])
                                    Pexp_apply
                                    expression (lambda/debuginfo.ml[195,5797+14]..[195,5797+28])
                                      Pexp_ident "String.compare" (lambda/debuginfo.ml[195,5797+14]..[195,5797+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/debuginfo.ml[195,5797+29]..[195,5797+42])
                                          Pexp_field
                                          expression (lambda/debuginfo.ml[195,5797+29]..[195,5797+31])
                                            Pexp_ident "d1" (lambda/debuginfo.ml[195,5797+29]..[195,5797+31])
                                          "dinfo_file" (lambda/debuginfo.ml[195,5797+32]..[195,5797+42])
                                      <arg>
                                      Nolabel
                                        expression (lambda/debuginfo.ml[195,5797+43]..[195,5797+56])
                                          Pexp_field
                                          expression (lambda/debuginfo.ml[195,5797+43]..[195,5797+45])
                                            Pexp_ident "d2" (lambda/debuginfo.ml[195,5797+43]..[195,5797+45])
                                          "dinfo_file" (lambda/debuginfo.ml[195,5797+46]..[195,5797+56])
                                    ]
                              ]
                              expression (lambda/debuginfo.ml[196,5857+6]..[209,6415+18])
                                Pexp_ifthenelse
                                expression (lambda/debuginfo.ml[196,5857+9]..[196,5857+15])
                                  Pexp_apply
                                  expression (lambda/debuginfo.ml[196,5857+11]..[196,5857+13])
                                    Pexp_ident "<>" (lambda/debuginfo.ml[196,5857+11]..[196,5857+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[196,5857+9]..[196,5857+10])
                                        Pexp_ident "c" (lambda/debuginfo.ml[196,5857+9]..[196,5857+10])
                                    <arg>
                                    Nolabel
                                      expression (lambda/debuginfo.ml[196,5857+14]..[196,5857+15])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (lambda/debuginfo.ml[196,5857+21]..[196,5857+22])
                                  Pexp_ident "c" (lambda/debuginfo.ml[196,5857+21]..[196,5857+22])
                                Some
                                  expression (lambda/debuginfo.ml[197,5885+6]..[209,6415+18])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/debuginfo.ml[197,5885+10]..[197,5885+11])
                                          Ppat_var "c" (lambda/debuginfo.ml[197,5885+10]..[197,5885+11])
                                        expression (lambda/debuginfo.ml[197,5885+14]..[197,5885+49])
                                          Pexp_apply
                                          expression (lambda/debuginfo.ml[197,5885+14]..[197,5885+21])
                                            Pexp_ident "compare" (lambda/debuginfo.ml[197,5885+14]..[197,5885+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/debuginfo.ml[197,5885+22]..[197,5885+35])
                                                Pexp_field
                                                expression (lambda/debuginfo.ml[197,5885+22]..[197,5885+24])
                                                  Pexp_ident "d1" (lambda/debuginfo.ml[197,5885+22]..[197,5885+24])
                                                "dinfo_line" (lambda/debuginfo.ml[197,5885+25]..[197,5885+35])
                                            <arg>
                                            Nolabel
                                              expression (lambda/debuginfo.ml[197,5885+36]..[197,5885+49])
                                                Pexp_field
                                                expression (lambda/debuginfo.ml[197,5885+36]..[197,5885+38])
                                                  Pexp_ident "d2" (lambda/debuginfo.ml[197,5885+36]..[197,5885+38])
                                                "dinfo_line" (lambda/debuginfo.ml[197,5885+39]..[197,5885+49])
                                          ]
                                    ]
                                    expression (lambda/debuginfo.ml[198,5938+6]..[209,6415+18])
                                      Pexp_ifthenelse
                                      expression (lambda/debuginfo.ml[198,5938+9]..[198,5938+15])
                                        Pexp_apply
                                        expression (lambda/debuginfo.ml[198,5938+11]..[198,5938+13])
                                          Pexp_ident "<>" (lambda/debuginfo.ml[198,5938+11]..[198,5938+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/debuginfo.ml[198,5938+9]..[198,5938+10])
                                              Pexp_ident "c" (lambda/debuginfo.ml[198,5938+9]..[198,5938+10])
                                          <arg>
                                          Nolabel
                                            expression (lambda/debuginfo.ml[198,5938+14]..[198,5938+15])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (lambda/debuginfo.ml[198,5938+21]..[198,5938+22])
                                        Pexp_ident "c" (lambda/debuginfo.ml[198,5938+21]..[198,5938+22])
                                      Some
                                        expression (lambda/debuginfo.ml[199,5966+6]..[209,6415+18])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/debuginfo.ml[199,5966+10]..[199,5966+11])
                                                Ppat_var "c" (lambda/debuginfo.ml[199,5966+10]..[199,5966+11])
                                              expression (lambda/debuginfo.ml[199,5966+14]..[199,5966+57])
                                                Pexp_apply
                                                expression (lambda/debuginfo.ml[199,5966+14]..[199,5966+21])
                                                  Pexp_ident "compare" (lambda/debuginfo.ml[199,5966+14]..[199,5966+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/debuginfo.ml[199,5966+22]..[199,5966+39])
                                                      Pexp_field
                                                      expression (lambda/debuginfo.ml[199,5966+22]..[199,5966+24])
                                                        Pexp_ident "d1" (lambda/debuginfo.ml[199,5966+22]..[199,5966+24])
                                                      "dinfo_char_end" (lambda/debuginfo.ml[199,5966+25]..[199,5966+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/debuginfo.ml[199,5966+40]..[199,5966+57])
                                                      Pexp_field
                                                      expression (lambda/debuginfo.ml[199,5966+40]..[199,5966+42])
                                                        Pexp_ident "d2" (lambda/debuginfo.ml[199,5966+40]..[199,5966+42])
                                                      "dinfo_char_end" (lambda/debuginfo.ml[199,5966+43]..[199,5966+57])
                                                ]
                                          ]
                                          expression (lambda/debuginfo.ml[200,6027+6]..[209,6415+18])
                                            Pexp_ifthenelse
                                            expression (lambda/debuginfo.ml[200,6027+9]..[200,6027+15])
                                              Pexp_apply
                                              expression (lambda/debuginfo.ml[200,6027+11]..[200,6027+13])
                                                Pexp_ident "<>" (lambda/debuginfo.ml[200,6027+11]..[200,6027+13])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/debuginfo.ml[200,6027+9]..[200,6027+10])
                                                    Pexp_ident "c" (lambda/debuginfo.ml[200,6027+9]..[200,6027+10])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/debuginfo.ml[200,6027+14]..[200,6027+15])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                            expression (lambda/debuginfo.ml[200,6027+21]..[200,6027+22])
                                              Pexp_ident "c" (lambda/debuginfo.ml[200,6027+21]..[200,6027+22])
                                            Some
                                              expression (lambda/debuginfo.ml[201,6055+6]..[209,6415+18])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/debuginfo.ml[201,6055+10]..[201,6055+11])
                                                      Ppat_var "c" (lambda/debuginfo.ml[201,6055+10]..[201,6055+11])
                                                    expression (lambda/debuginfo.ml[201,6055+14]..[201,6055+61])
                                                      Pexp_apply
                                                      expression (lambda/debuginfo.ml[201,6055+14]..[201,6055+21])
                                                        Pexp_ident "compare" (lambda/debuginfo.ml[201,6055+14]..[201,6055+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/debuginfo.ml[201,6055+22]..[201,6055+41])
                                                            Pexp_field
                                                            expression (lambda/debuginfo.ml[201,6055+22]..[201,6055+24])
                                                              Pexp_ident "d1" (lambda/debuginfo.ml[201,6055+22]..[201,6055+24])
                                                            "dinfo_char_start" (lambda/debuginfo.ml[201,6055+25]..[201,6055+41])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/debuginfo.ml[201,6055+42]..[201,6055+61])
                                                            Pexp_field
                                                            expression (lambda/debuginfo.ml[201,6055+42]..[201,6055+44])
                                                              Pexp_ident "d2" (lambda/debuginfo.ml[201,6055+42]..[201,6055+44])
                                                            "dinfo_char_start" (lambda/debuginfo.ml[201,6055+45]..[201,6055+61])
                                                      ]
                                                ]
                                                expression (lambda/debuginfo.ml[202,6120+6]..[209,6415+18])
                                                  Pexp_ifthenelse
                                                  expression (lambda/debuginfo.ml[202,6120+9]..[202,6120+15])
                                                    Pexp_apply
                                                    expression (lambda/debuginfo.ml[202,6120+11]..[202,6120+13])
                                                      Pexp_ident "<>" (lambda/debuginfo.ml[202,6120+11]..[202,6120+13])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/debuginfo.ml[202,6120+9]..[202,6120+10])
                                                          Pexp_ident "c" (lambda/debuginfo.ml[202,6120+9]..[202,6120+10])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/debuginfo.ml[202,6120+14]..[202,6120+15])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                                  expression (lambda/debuginfo.ml[202,6120+21]..[202,6120+22])
                                                    Pexp_ident "c" (lambda/debuginfo.ml[202,6120+21]..[202,6120+22])
                                                  Some
                                                    expression (lambda/debuginfo.ml[203,6148+6]..[209,6415+18])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lambda/debuginfo.ml[203,6148+10]..[203,6148+11])
                                                            Ppat_var "c" (lambda/debuginfo.ml[203,6148+10]..[203,6148+11])
                                                          expression (lambda/debuginfo.ml[203,6148+14]..[203,6148+59])
                                                            Pexp_apply
                                                            expression (lambda/debuginfo.ml[203,6148+14]..[203,6148+21])
                                                              Pexp_ident "compare" (lambda/debuginfo.ml[203,6148+14]..[203,6148+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/debuginfo.ml[203,6148+22]..[203,6148+40])
                                                                  Pexp_field
                                                                  expression (lambda/debuginfo.ml[203,6148+22]..[203,6148+24])
                                                                    Pexp_ident "d1" (lambda/debuginfo.ml[203,6148+22]..[203,6148+24])
                                                                  "dinfo_start_bol" (lambda/debuginfo.ml[203,6148+25]..[203,6148+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/debuginfo.ml[203,6148+41]..[203,6148+59])
                                                                  Pexp_field
                                                                  expression (lambda/debuginfo.ml[203,6148+41]..[203,6148+43])
                                                                    Pexp_ident "d2" (lambda/debuginfo.ml[203,6148+41]..[203,6148+43])
                                                                  "dinfo_start_bol" (lambda/debuginfo.ml[203,6148+44]..[203,6148+59])
                                                            ]
                                                      ]
                                                      expression (lambda/debuginfo.ml[204,6211+6]..[209,6415+18])
                                                        Pexp_ifthenelse
                                                        expression (lambda/debuginfo.ml[204,6211+9]..[204,6211+15])
                                                          Pexp_apply
                                                          expression (lambda/debuginfo.ml[204,6211+11]..[204,6211+13])
                                                            Pexp_ident "<>" (lambda/debuginfo.ml[204,6211+11]..[204,6211+13])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/debuginfo.ml[204,6211+9]..[204,6211+10])
                                                                Pexp_ident "c" (lambda/debuginfo.ml[204,6211+9]..[204,6211+10])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/debuginfo.ml[204,6211+14]..[204,6211+15])
                                                                Pexp_constant PConst_int (0,None)
                                                          ]
                                                        expression (lambda/debuginfo.ml[204,6211+21]..[204,6211+22])
                                                          Pexp_ident "c" (lambda/debuginfo.ml[204,6211+21]..[204,6211+22])
                                                        Some
                                                          expression (lambda/debuginfo.ml[205,6239+6]..[209,6415+18])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lambda/debuginfo.ml[205,6239+10]..[205,6239+11])
                                                                  Ppat_var "c" (lambda/debuginfo.ml[205,6239+10]..[205,6239+11])
                                                                expression (lambda/debuginfo.ml[205,6239+14]..[205,6239+55])
                                                                  Pexp_apply
                                                                  expression (lambda/debuginfo.ml[205,6239+14]..[205,6239+21])
                                                                    Pexp_ident "compare" (lambda/debuginfo.ml[205,6239+14]..[205,6239+21])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/debuginfo.ml[205,6239+22]..[205,6239+38])
Pexp_field
expression (lambda/debuginfo.ml[205,6239+22]..[205,6239+24])
  Pexp_ident "d1" (lambda/debuginfo.ml[205,6239+22]..[205,6239+24])
"dinfo_end_bol" (lambda/debuginfo.ml[205,6239+25]..[205,6239+38])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/debuginfo.ml[205,6239+39]..[205,6239+55])
Pexp_field
expression (lambda/debuginfo.ml[205,6239+39]..[205,6239+41])
  Pexp_ident "d2" (lambda/debuginfo.ml[205,6239+39]..[205,6239+41])
"dinfo_end_bol" (lambda/debuginfo.ml[205,6239+42]..[205,6239+55])
                                                                  ]
                                                            ]
                                                            expression (lambda/debuginfo.ml[206,6298+6]..[209,6415+18])
                                                              Pexp_ifthenelse
                                                              expression (lambda/debuginfo.ml[206,6298+9]..[206,6298+15])
                                                                Pexp_apply
                                                                expression (lambda/debuginfo.ml[206,6298+11]..[206,6298+13])
                                                                  Pexp_ident "<>" (lambda/debuginfo.ml[206,6298+11]..[206,6298+13])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/debuginfo.ml[206,6298+9]..[206,6298+10])
                                                                      Pexp_ident "c" (lambda/debuginfo.ml[206,6298+9]..[206,6298+10])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/debuginfo.ml[206,6298+14]..[206,6298+15])
                                                                      Pexp_constant PConst_int (0,None)
                                                                ]
                                                              expression (lambda/debuginfo.ml[206,6298+21]..[206,6298+22])
                                                                Pexp_ident "c" (lambda/debuginfo.ml[206,6298+21]..[206,6298+22])
                                                              Some
                                                                expression (lambda/debuginfo.ml[207,6326+6]..[209,6415+18])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (lambda/debuginfo.ml[207,6326+10]..[207,6326+11])
Ppat_var "c" (lambda/debuginfo.ml[207,6326+10]..[207,6326+11])
                                                                      expression (lambda/debuginfo.ml[207,6326+14]..[207,6326+57])
Pexp_apply
expression (lambda/debuginfo.ml[207,6326+14]..[207,6326+21])
  Pexp_ident "compare" (lambda/debuginfo.ml[207,6326+14]..[207,6326+21])
[
  <arg>
  Nolabel
    expression (lambda/debuginfo.ml[207,6326+22]..[207,6326+39])
      Pexp_field
      expression (lambda/debuginfo.ml[207,6326+22]..[207,6326+24])
        Pexp_ident "d1" (lambda/debuginfo.ml[207,6326+22]..[207,6326+24])
      "dinfo_end_line" (lambda/debuginfo.ml[207,6326+25]..[207,6326+39])
  <arg>
  Nolabel
    expression (lambda/debuginfo.ml[207,6326+40]..[207,6326+57])
      Pexp_field
      expression (lambda/debuginfo.ml[207,6326+40]..[207,6326+42])
        Pexp_ident "d2" (lambda/debuginfo.ml[207,6326+40]..[207,6326+42])
      "dinfo_end_line" (lambda/debuginfo.ml[207,6326+43]..[207,6326+57])
]
                                                                  ]
                                                                  expression (lambda/debuginfo.ml[208,6387+6]..[209,6415+18])
                                                                    Pexp_ifthenelse
                                                                    expression (lambda/debuginfo.ml[208,6387+9]..[208,6387+15])
                                                                      Pexp_apply
                                                                      expression (lambda/debuginfo.ml[208,6387+11]..[208,6387+13])
Pexp_ident "<>" (lambda/debuginfo.ml[208,6387+11]..[208,6387+13])
                                                                      [
<arg>
Nolabel
  expression (lambda/debuginfo.ml[208,6387+9]..[208,6387+10])
    Pexp_ident "c" (lambda/debuginfo.ml[208,6387+9]..[208,6387+10])
<arg>
Nolabel
  expression (lambda/debuginfo.ml[208,6387+14]..[208,6387+15])
    Pexp_constant PConst_int (0,None)
                                                                      ]
                                                                    expression (lambda/debuginfo.ml[208,6387+21]..[208,6387+22])
                                                                      Pexp_ident "c" (lambda/debuginfo.ml[208,6387+21]..[208,6387+22])
                                                                    Some
                                                                      expression (lambda/debuginfo.ml[209,6415+6]..[209,6415+18])
Pexp_apply
expression (lambda/debuginfo.ml[209,6415+6]..[209,6415+10])
  Pexp_ident "loop" (lambda/debuginfo.ml[209,6415+6]..[209,6415+10])
[
  <arg>
  Nolabel
    expression (lambda/debuginfo.ml[209,6415+11]..[209,6415+14])
      Pexp_ident "ds1" (lambda/debuginfo.ml[209,6415+11]..[209,6415+14])
  <arg>
  Nolabel
    expression (lambda/debuginfo.ml[209,6415+15]..[209,6415+18])
      Pexp_ident "ds2" (lambda/debuginfo.ml[209,6415+15]..[209,6415+18])
]
                        ]
              ]
              expression (lambda/debuginfo.ml[211,6439+2]..[211,6439+38])
                Pexp_apply
                expression (lambda/debuginfo.ml[211,6439+2]..[211,6439+6])
                  Pexp_ident "loop" (lambda/debuginfo.ml[211,6439+2]..[211,6439+6])
                [
                  <arg>
                  Nolabel
                    expression (lambda/debuginfo.ml[211,6439+7]..[211,6439+22])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[211,6439+8]..[211,6439+16])
                        Pexp_ident "List.rev" (lambda/debuginfo.ml[211,6439+8]..[211,6439+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[211,6439+17]..[211,6439+21])
                            Pexp_ident "dbg1" (lambda/debuginfo.ml[211,6439+17]..[211,6439+21])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/debuginfo.ml[211,6439+23]..[211,6439+38])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[211,6439+24]..[211,6439+32])
                        Pexp_ident "List.rev" (lambda/debuginfo.ml[211,6439+24]..[211,6439+32])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[211,6439+33]..[211,6439+37])
                            Pexp_ident "dbg2" (lambda/debuginfo.ml[211,6439+33]..[211,6439+37])
                      ]
                ]
    ]
  structure_item (lambda/debuginfo.ml[213,6479+0]..[214,6492+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/debuginfo.ml[213,6479+4]..[213,6479+8])
          Ppat_var "hash" (lambda/debuginfo.ml[213,6479+4]..[213,6479+8])
        expression (lambda/debuginfo.ml[213,6479+9]..[214,6492+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/debuginfo.ml[213,6479+9]..[213,6479+10])
            Ppat_var "t" (lambda/debuginfo.ml[213,6479+9]..[213,6479+10])
          expression (lambda/debuginfo.ml[214,6492+2]..[214,6492+65])
            Pexp_apply
            expression (lambda/debuginfo.ml[214,6492+2]..[214,6492+16])
              Pexp_ident "List.fold_left" (lambda/debuginfo.ml[214,6492+2]..[214,6492+16])
            [
              <arg>
              Nolabel
                expression (lambda/debuginfo.ml[214,6492+17]..[214,6492+61])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/debuginfo.ml[214,6492+22]..[214,6492+26])
                    Ppat_var "hash" (lambda/debuginfo.ml[214,6492+22]..[214,6492+26])
                  expression (lambda/debuginfo.ml[214,6492+27]..[214,6492+60]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[214,6492+27]..[214,6492+31])
                      Ppat_var "item" (lambda/debuginfo.ml[214,6492+27]..[214,6492+31])
                    expression (lambda/debuginfo.ml[214,6492+35]..[214,6492+60])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[214,6492+35]..[214,6492+47])
                        Pexp_ident "Hashtbl.hash" (lambda/debuginfo.ml[214,6492+35]..[214,6492+47])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[214,6492+48]..[214,6492+60])
                            Pexp_tuple
                            [
                              expression (lambda/debuginfo.ml[214,6492+49]..[214,6492+53])
                                Pexp_ident "hash" (lambda/debuginfo.ml[214,6492+49]..[214,6492+53])
                              expression (lambda/debuginfo.ml[214,6492+55]..[214,6492+59])
                                Pexp_ident "item" (lambda/debuginfo.ml[214,6492+55]..[214,6492+59])
                            ]
                      ]
              <arg>
              Nolabel
                expression (lambda/debuginfo.ml[214,6492+62]..[214,6492+63])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (lambda/debuginfo.ml[214,6492+64]..[214,6492+65])
                  Pexp_ident "t" (lambda/debuginfo.ml[214,6492+64]..[214,6492+65])
            ]
    ]
  structure_item (lambda/debuginfo.ml[216,6559+0]..[231,6970+23])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/debuginfo.ml[216,6559+8]..[216,6559+21])
          Ppat_var "print_compact" (lambda/debuginfo.ml[216,6559+8]..[216,6559+21])
        expression (lambda/debuginfo.ml[216,6559+22]..[231,6970+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/debuginfo.ml[216,6559+22]..[216,6559+25])
            Ppat_var "ppf" (lambda/debuginfo.ml[216,6559+22]..[216,6559+25])
          expression (lambda/debuginfo.ml[216,6559+26]..[231,6970+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/debuginfo.ml[216,6559+26]..[216,6559+27])
              Ppat_var "t" (lambda/debuginfo.ml[216,6559+26]..[216,6559+27])
            expression (lambda/debuginfo.ml[217,6589+2]..[231,6970+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/debuginfo.ml[217,6589+6]..[217,6589+16])
                    Ppat_var "print_item" (lambda/debuginfo.ml[217,6589+6]..[217,6589+16])
                  expression (lambda/debuginfo.ml[217,6589+17]..[223,6835+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/debuginfo.ml[217,6589+17]..[217,6589+21])
                      Ppat_var "item" (lambda/debuginfo.ml[217,6589+17]..[217,6589+21])
                    expression (lambda/debuginfo.ml[218,6613+4]..[223,6835+7])
                      Pexp_sequence
                      expression (lambda/debuginfo.ml[218,6613+4]..[220,6690+21])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[218,6613+4]..[218,6613+18])
                          Pexp_ident "Format.fprintf" (lambda/debuginfo.ml[218,6613+4]..[218,6613+18])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[218,6613+19]..[218,6613+22])
                              Pexp_ident "ppf" (lambda/debuginfo.ml[218,6613+19]..[218,6613+22])
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[218,6613+23]..[218,6613+30])
                              Pexp_constant PConst_string("%a:%i",(lambda/debuginfo.ml[218,6613+24]..[218,6613+29]),None)
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[219,6644+6]..[219,6644+29])
                              Pexp_ident "Location.print_filename" (lambda/debuginfo.ml[219,6644+6]..[219,6644+29])
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[219,6644+30]..[219,6644+45])
                              Pexp_field
                              expression (lambda/debuginfo.ml[219,6644+30]..[219,6644+34])
                                Pexp_ident "item" (lambda/debuginfo.ml[219,6644+30]..[219,6644+34])
                              "dinfo_file" (lambda/debuginfo.ml[219,6644+35]..[219,6644+45])
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[220,6690+6]..[220,6690+21])
                              Pexp_field
                              expression (lambda/debuginfo.ml[220,6690+6]..[220,6690+10])
                                Pexp_ident "item" (lambda/debuginfo.ml[220,6690+6]..[220,6690+10])
                              "dinfo_line" (lambda/debuginfo.ml[220,6690+11]..[220,6690+21])
                        ]
                      expression (lambda/debuginfo.ml[221,6713+4]..[223,6835+7])
                        Pexp_ifthenelse
                        expression (lambda/debuginfo.ml[221,6713+7]..[221,6713+33])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[221,6713+29]..[221,6713+31])
                            Pexp_ident ">=" (lambda/debuginfo.ml[221,6713+29]..[221,6713+31])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[221,6713+7]..[221,6713+28])
                                Pexp_field
                                expression (lambda/debuginfo.ml[221,6713+7]..[221,6713+11])
                                  Pexp_ident "item" (lambda/debuginfo.ml[221,6713+7]..[221,6713+11])
                                "dinfo_char_start" (lambda/debuginfo.ml[221,6713+12]..[221,6713+28])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[221,6713+32]..[221,6713+33])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (lambda/debuginfo.ml[221,6713+39]..[223,6835+7])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[222,6758+6]..[222,6758+20])
                            Pexp_ident "Format.fprintf" (lambda/debuginfo.ml[222,6758+6]..[222,6758+20])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[222,6758+21]..[222,6758+24])
                                Pexp_ident "ppf" (lambda/debuginfo.ml[222,6758+21]..[222,6758+24])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[222,6758+25]..[222,6758+34])
                                Pexp_constant PConst_string(",%i--%i",(lambda/debuginfo.ml[222,6758+26]..[222,6758+33]),None)
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[222,6758+35]..[222,6758+56])
                                Pexp_field
                                expression (lambda/debuginfo.ml[222,6758+35]..[222,6758+39])
                                  Pexp_ident "item" (lambda/debuginfo.ml[222,6758+35]..[222,6758+39])
                                "dinfo_char_start" (lambda/debuginfo.ml[222,6758+40]..[222,6758+56])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[222,6758+57]..[222,6758+76])
                                Pexp_field
                                expression (lambda/debuginfo.ml[222,6758+57]..[222,6758+61])
                                  Pexp_ident "item" (lambda/debuginfo.ml[222,6758+57]..[222,6758+61])
                                "dinfo_char_end" (lambda/debuginfo.ml[222,6758+62]..[222,6758+76])
                          ]
                        None
              ]
              expression (lambda/debuginfo.ml[225,6848+2]..[231,6970+23])
                Pexp_match
                expression (lambda/debuginfo.ml[225,6848+8]..[225,6848+9])
                  Pexp_ident "t" (lambda/debuginfo.ml[225,6848+8]..[225,6848+9])
                [
                  <case>
                    pattern (lambda/debuginfo.ml[226,6863+4]..[226,6863+6])
                      Ppat_construct "[]" (lambda/debuginfo.ml[226,6863+4]..[226,6863+6])
                      None
                    expression (lambda/debuginfo.ml[226,6863+10]..[226,6863+12])
                      Pexp_construct "()" (lambda/debuginfo.ml[226,6863+10]..[226,6863+12])
                      None
                  <case>
                    pattern (lambda/debuginfo.ml[227,6876+4]..[227,6876+10])
                      Ppat_construct "::" (lambda/debuginfo.ml[227,6876+5]..[227,6876+10]) ghost
                      Some
                        []
                        pattern (lambda/debuginfo.ml[227,6876+5]..[227,6876+10]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/debuginfo.ml[227,6876+5]..[227,6876+9])
                              Ppat_var "item" (lambda/debuginfo.ml[227,6876+5]..[227,6876+9])
                            pattern (lambda/debuginfo.ml[227,6876+9]..[227,6876+10]) ghost
                              Ppat_construct "[]" (lambda/debuginfo.ml[227,6876+9]..[227,6876+10]) ghost
                              None
                          ]
                    expression (lambda/debuginfo.ml[227,6876+14]..[227,6876+29])
                      Pexp_apply
                      expression (lambda/debuginfo.ml[227,6876+14]..[227,6876+24])
                        Pexp_ident "print_item" (lambda/debuginfo.ml[227,6876+14]..[227,6876+24])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/debuginfo.ml[227,6876+25]..[227,6876+29])
                            Pexp_ident "item" (lambda/debuginfo.ml[227,6876+25]..[227,6876+29])
                      ]
                  <case>
                    pattern (lambda/debuginfo.ml[228,6906+4]..[228,6906+11])
                      Ppat_construct "::" (lambda/debuginfo.ml[228,6906+8]..[228,6906+10])
                      Some
                        []
                        pattern (lambda/debuginfo.ml[228,6906+4]..[228,6906+11]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/debuginfo.ml[228,6906+4]..[228,6906+8])
                              Ppat_var "item" (lambda/debuginfo.ml[228,6906+4]..[228,6906+8])
                            pattern (lambda/debuginfo.ml[228,6906+10]..[228,6906+11])
                              Ppat_var "t" (lambda/debuginfo.ml[228,6906+10]..[228,6906+11])
                          ]
                    expression (lambda/debuginfo.ml[229,6921+4]..[231,6970+23])
                      Pexp_sequence
                      expression (lambda/debuginfo.ml[229,6921+4]..[229,6921+19])
                        Pexp_apply
                        expression (lambda/debuginfo.ml[229,6921+4]..[229,6921+14])
                          Pexp_ident "print_item" (lambda/debuginfo.ml[229,6921+4]..[229,6921+14])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/debuginfo.ml[229,6921+15]..[229,6921+19])
                              Pexp_ident "item" (lambda/debuginfo.ml[229,6921+15]..[229,6921+19])
                        ]
                      expression (lambda/debuginfo.ml[230,6942+4]..[231,6970+23])
                        Pexp_sequence
                        expression (lambda/debuginfo.ml[230,6942+4]..[230,6942+26])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[230,6942+4]..[230,6942+18])
                            Pexp_ident "Format.fprintf" (lambda/debuginfo.ml[230,6942+4]..[230,6942+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[230,6942+19]..[230,6942+22])
                                Pexp_ident "ppf" (lambda/debuginfo.ml[230,6942+19]..[230,6942+22])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[230,6942+23]..[230,6942+26])
                                Pexp_constant PConst_string(";",(lambda/debuginfo.ml[230,6942+24]..[230,6942+25]),None)
                          ]
                        expression (lambda/debuginfo.ml[231,6970+4]..[231,6970+23])
                          Pexp_apply
                          expression (lambda/debuginfo.ml[231,6970+4]..[231,6970+17])
                            Pexp_ident "print_compact" (lambda/debuginfo.ml[231,6970+4]..[231,6970+17])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[231,6970+18]..[231,6970+21])
                                Pexp_ident "ppf" (lambda/debuginfo.ml[231,6970+18]..[231,6970+21])
                            <arg>
                            Nolabel
                              expression (lambda/debuginfo.ml[231,6970+22]..[231,6970+23])
                                Pexp_ident "t" (lambda/debuginfo.ml[231,6970+22]..[231,6970+23])
                          ]
                ]
    ]
]

