[
  structure_item (stdlib/arg.ml[16,1079+0]..[16,1079+17])
    Pstr_type Rec
    [
      type_declaration "key" (stdlib/arg.ml[16,1079+5]..[16,1079+8]) (stdlib/arg.ml[16,1079+0]..[16,1079+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/arg.ml[16,1079+11]..[16,1079+17])
              Ptyp_constr "string" (stdlib/arg.ml[16,1079+11]..[16,1079+17])
              []
    ]
  structure_item (stdlib/arg.ml[17,1097+0]..[17,1097+17])
    Pstr_type Rec
    [
      type_declaration "doc" (stdlib/arg.ml[17,1097+5]..[17,1097+8]) (stdlib/arg.ml[17,1097+0]..[17,1097+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/arg.ml[17,1097+11]..[17,1097+17])
              Ptyp_constr "string" (stdlib/arg.ml[17,1097+11]..[17,1097+17])
              []
    ]
  structure_item (stdlib/arg.ml[18,1115+0]..[18,1115+23])
    Pstr_type Rec
    [
      type_declaration "usage_msg" (stdlib/arg.ml[18,1115+5]..[18,1115+14]) (stdlib/arg.ml[18,1115+0]..[18,1115+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/arg.ml[18,1115+17]..[18,1115+23])
              Ptyp_constr "string" (stdlib/arg.ml[18,1115+17]..[18,1115+23])
              []
    ]
  structure_item (stdlib/arg.ml[19,1139+0]..[19,1139+32])
    Pstr_type Rec
    [
      type_declaration "anon_fun" (stdlib/arg.ml[19,1139+5]..[19,1139+13]) (stdlib/arg.ml[19,1139+0]..[19,1139+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/arg.ml[19,1139+17]..[19,1139+31])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/arg.ml[19,1139+17]..[19,1139+23])
                Ptyp_constr "string" (stdlib/arg.ml[19,1139+17]..[19,1139+23])
                []
              core_type (stdlib/arg.ml[19,1139+27]..[19,1139+31])
                Ptyp_constr "unit" (stdlib/arg.ml[19,1139+27]..[19,1139+31])
                []
    ]
  structure_item (stdlib/arg.ml[21,1173+0]..[42,2572+38])
    Pstr_type Rec
    [
      type_declaration "spec" (stdlib/arg.ml[21,1173+5]..[21,1173+9]) (stdlib/arg.ml[21,1173+0]..[42,2572+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/arg.ml[22,1185+2]..[22,1185+26])
                "Unit" (stdlib/arg.ml[22,1185+4]..[22,1185+8])
                [
                  core_type (stdlib/arg.ml[22,1185+13]..[22,1185+25])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[22,1185+13]..[22,1185+17])
                      Ptyp_constr "unit" (stdlib/arg.ml[22,1185+13]..[22,1185+17])
                      []
                    core_type (stdlib/arg.ml[22,1185+21]..[22,1185+25])
                      Ptyp_constr "unit" (stdlib/arg.ml[22,1185+21]..[22,1185+25])
                      []
                ]
                None
              (stdlib/arg.ml[23,1259+2]..[23,1259+26])
                "Bool" (stdlib/arg.ml[23,1259+4]..[23,1259+8])
                [
                  core_type (stdlib/arg.ml[23,1259+13]..[23,1259+25])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[23,1259+13]..[23,1259+17])
                      Ptyp_constr "bool" (stdlib/arg.ml[23,1259+13]..[23,1259+17])
                      []
                    core_type (stdlib/arg.ml[23,1259+21]..[23,1259+25])
                      Ptyp_constr "unit" (stdlib/arg.ml[23,1259+21]..[23,1259+25])
                      []
                ]
                None
              (stdlib/arg.ml[24,1335+2]..[24,1335+19])
                "Set" (stdlib/arg.ml[24,1335+4]..[24,1335+7])
                [
                  core_type (stdlib/arg.ml[24,1335+11]..[24,1335+19])
                    Ptyp_constr "ref" (stdlib/arg.ml[24,1335+16]..[24,1335+19])
                    [
                      core_type (stdlib/arg.ml[24,1335+11]..[24,1335+15])
                        Ptyp_constr "bool" (stdlib/arg.ml[24,1335+11]..[24,1335+15])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[25,1398+2]..[25,1398+21])
                "Clear" (stdlib/arg.ml[25,1398+4]..[25,1398+9])
                [
                  core_type (stdlib/arg.ml[25,1398+13]..[25,1398+21])
                    Ptyp_constr "ref" (stdlib/arg.ml[25,1398+18]..[25,1398+21])
                    [
                      core_type (stdlib/arg.ml[25,1398+13]..[25,1398+17])
                        Ptyp_constr "bool" (stdlib/arg.ml[25,1398+13]..[25,1398+17])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[26,1462+2]..[26,1462+30])
                "String" (stdlib/arg.ml[26,1462+4]..[26,1462+10])
                [
                  core_type (stdlib/arg.ml[26,1462+15]..[26,1462+29])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[26,1462+15]..[26,1462+21])
                      Ptyp_constr "string" (stdlib/arg.ml[26,1462+15]..[26,1462+21])
                      []
                    core_type (stdlib/arg.ml[26,1462+25]..[26,1462+29])
                      Ptyp_constr "unit" (stdlib/arg.ml[26,1462+25]..[26,1462+29])
                      []
                ]
                None
              (stdlib/arg.ml[27,1540+2]..[27,1540+28])
                "Set_string" (stdlib/arg.ml[27,1540+4]..[27,1540+14])
                [
                  core_type (stdlib/arg.ml[27,1540+18]..[27,1540+28])
                    Ptyp_constr "ref" (stdlib/arg.ml[27,1540+25]..[27,1540+28])
                    [
                      core_type (stdlib/arg.ml[27,1540+18]..[27,1540+24])
                        Ptyp_constr "string" (stdlib/arg.ml[27,1540+18]..[27,1540+24])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[28,1618+2]..[28,1618+24])
                "Int" (stdlib/arg.ml[28,1618+4]..[28,1618+7])
                [
                  core_type (stdlib/arg.ml[28,1618+12]..[28,1618+23])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[28,1618+12]..[28,1618+15])
                      Ptyp_constr "int" (stdlib/arg.ml[28,1618+12]..[28,1618+15])
                      []
                    core_type (stdlib/arg.ml[28,1618+19]..[28,1618+23])
                      Ptyp_constr "unit" (stdlib/arg.ml[28,1618+19]..[28,1618+23])
                      []
                ]
                None
              (stdlib/arg.ml[29,1694+2]..[29,1694+22])
                "Set_int" (stdlib/arg.ml[29,1694+4]..[29,1694+11])
                [
                  core_type (stdlib/arg.ml[29,1694+15]..[29,1694+22])
                    Ptyp_constr "ref" (stdlib/arg.ml[29,1694+19]..[29,1694+22])
                    [
                      core_type (stdlib/arg.ml[29,1694+15]..[29,1694+18])
                        Ptyp_constr "int" (stdlib/arg.ml[29,1694+15]..[29,1694+18])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[30,1769+2]..[30,1769+28])
                "Float" (stdlib/arg.ml[30,1769+4]..[30,1769+9])
                [
                  core_type (stdlib/arg.ml[30,1769+14]..[30,1769+27])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[30,1769+14]..[30,1769+19])
                      Ptyp_constr "float" (stdlib/arg.ml[30,1769+14]..[30,1769+19])
                      []
                    core_type (stdlib/arg.ml[30,1769+23]..[30,1769+27])
                      Ptyp_constr "unit" (stdlib/arg.ml[30,1769+23]..[30,1769+27])
                      []
                ]
                None
              (stdlib/arg.ml[31,1846+2]..[31,1846+26])
                "Set_float" (stdlib/arg.ml[31,1846+4]..[31,1846+13])
                [
                  core_type (stdlib/arg.ml[31,1846+17]..[31,1846+26])
                    Ptyp_constr "ref" (stdlib/arg.ml[31,1846+23]..[31,1846+26])
                    [
                      core_type (stdlib/arg.ml[31,1846+17]..[31,1846+22])
                        Ptyp_constr "float" (stdlib/arg.ml[31,1846+17]..[31,1846+22])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[32,1923+2]..[32,1923+22])
                "Tuple" (stdlib/arg.ml[32,1923+4]..[32,1923+9])
                [
                  core_type (stdlib/arg.ml[32,1923+13]..[32,1923+22])
                    Ptyp_constr "list" (stdlib/arg.ml[32,1923+18]..[32,1923+22])
                    [
                      core_type (stdlib/arg.ml[32,1923+13]..[32,1923+17])
                        Ptyp_constr "spec" (stdlib/arg.ml[32,1923+13]..[32,1923+17])
                        []
                    ]
                ]
                None
              (stdlib/arg.ml[34,2044+2]..[34,2044+44])
                "Symbol" (stdlib/arg.ml[34,2044+4]..[34,2044+10])
                [
                  core_type (stdlib/arg.ml[34,2044+14]..[34,2044+25])
                    Ptyp_constr "list" (stdlib/arg.ml[34,2044+21]..[34,2044+25])
                    [
                      core_type (stdlib/arg.ml[34,2044+14]..[34,2044+20])
                        Ptyp_constr "string" (stdlib/arg.ml[34,2044+14]..[34,2044+20])
                        []
                    ]
                  core_type (stdlib/arg.ml[34,2044+29]..[34,2044+43])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[34,2044+29]..[34,2044+35])
                      Ptyp_constr "string" (stdlib/arg.ml[34,2044+29]..[34,2044+35])
                      []
                    core_type (stdlib/arg.ml[34,2044+39]..[34,2044+43])
                      Ptyp_constr "unit" (stdlib/arg.ml[34,2044+39]..[34,2044+43])
                      []
                ]
                None
              (stdlib/arg.ml[37,2235+2]..[37,2235+28])
                "Rest" (stdlib/arg.ml[37,2235+4]..[37,2235+8])
                [
                  core_type (stdlib/arg.ml[37,2235+13]..[37,2235+27])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[37,2235+13]..[37,2235+19])
                      Ptyp_constr "string" (stdlib/arg.ml[37,2235+13]..[37,2235+19])
                      []
                    core_type (stdlib/arg.ml[37,2235+23]..[37,2235+27])
                      Ptyp_constr "unit" (stdlib/arg.ml[37,2235+23]..[37,2235+27])
                      []
                ]
                None
              (stdlib/arg.ml[39,2384+2]..[39,2384+37])
                "Rest_all" (stdlib/arg.ml[39,2384+4]..[39,2384+12])
                [
                  core_type (stdlib/arg.ml[39,2384+17]..[39,2384+36])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[39,2384+17]..[39,2384+28])
                      Ptyp_constr "list" (stdlib/arg.ml[39,2384+24]..[39,2384+28])
                      [
                        core_type (stdlib/arg.ml[39,2384+17]..[39,2384+23])
                          Ptyp_constr "string" (stdlib/arg.ml[39,2384+17]..[39,2384+23])
                          []
                      ]
                    core_type (stdlib/arg.ml[39,2384+32]..[39,2384+36])
                      Ptyp_constr "unit" (stdlib/arg.ml[39,2384+32]..[39,2384+36])
                      []
                ]
                None
              (stdlib/arg.ml[42,2572+2]..[42,2572+38])
                "Expand" (stdlib/arg.ml[42,2572+4]..[42,2572+10])
                [
                  core_type (stdlib/arg.ml[42,2572+15]..[42,2572+37])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/arg.ml[42,2572+15]..[42,2572+21])
                      Ptyp_constr "string" (stdlib/arg.ml[42,2572+15]..[42,2572+21])
                      []
                    core_type (stdlib/arg.ml[42,2572+25]..[42,2572+37])
                      Ptyp_constr "array" (stdlib/arg.ml[42,2572+32]..[42,2572+37])
                      [
                        core_type (stdlib/arg.ml[42,2572+25]..[42,2572+31])
                          Ptyp_constr "string" (stdlib/arg.ml[42,2572+25]..[42,2572+31])
                          []
                      ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/arg.ml[50,3090+0]..[50,3090+23])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/arg.ml[50,3090+0]..[50,3090+23])
          pext_name = "Bad"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/arg.ml[50,3090+17]..[50,3090+23])
                  Ptyp_constr "string" (stdlib/arg.ml[50,3090+17]..[50,3090+23])
                  []
              ]
              None
  structure_item (stdlib/arg.ml[51,3114+0]..[51,3114+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/arg.ml[51,3114+0]..[51,3114+24])
          pext_name = "Help"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/arg.ml[51,3114+18]..[51,3114+24])
                  Ptyp_constr "string" (stdlib/arg.ml[51,3114+18]..[51,3114+24])
                  []
              ]
              None
  structure_item (stdlib/arg.ml[53,3140+0]..[57,3267+21])
    Pstr_type Rec
    [
      type_declaration "error" (stdlib/arg.ml[53,3140+5]..[53,3140+10]) (stdlib/arg.ml[53,3140+0]..[57,3267+21])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/arg.ml[54,3153+2]..[54,3153+21])
                "Unknown" (stdlib/arg.ml[54,3153+4]..[54,3153+11])
                [
                  core_type (stdlib/arg.ml[54,3153+15]..[54,3153+21])
                    Ptyp_constr "string" (stdlib/arg.ml[54,3153+15]..[54,3153+21])
                    []
                ]
                None
              (stdlib/arg.ml[55,3175+2]..[55,3175+37])
                "Wrong" (stdlib/arg.ml[55,3175+4]..[55,3175+9])
                [
                  core_type (stdlib/arg.ml[55,3175+13]..[55,3175+19])
                    Ptyp_constr "string" (stdlib/arg.ml[55,3175+13]..[55,3175+19])
                    []
                  core_type (stdlib/arg.ml[55,3175+22]..[55,3175+28])
                    Ptyp_constr "string" (stdlib/arg.ml[55,3175+22]..[55,3175+28])
                    []
                  core_type (stdlib/arg.ml[55,3175+31]..[55,3175+37])
                    Ptyp_constr "string" (stdlib/arg.ml[55,3175+31]..[55,3175+37])
                    []
                ]
                None
              (stdlib/arg.ml[56,3245+2]..[56,3245+21])
                "Missing" (stdlib/arg.ml[56,3245+4]..[56,3245+11])
                [
                  core_type (stdlib/arg.ml[56,3245+15]..[56,3245+21])
                    Ptyp_constr "string" (stdlib/arg.ml[56,3245+15]..[56,3245+21])
                    []
                ]
                None
              (stdlib/arg.ml[57,3267+2]..[57,3267+21])
                "Message" (stdlib/arg.ml[57,3267+4]..[57,3267+11])
                [
                  core_type (stdlib/arg.ml[57,3267+15]..[57,3267+21])
                    Ptyp_constr "string" (stdlib/arg.ml[57,3267+15]..[57,3267+21])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/arg.ml[59,3290+0]..[59,3290+23])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/arg.ml[59,3290+0]..[59,3290+23])
          pext_name = "Stop"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/arg.ml[59,3290+18]..[59,3290+23])
                  Ptyp_constr "error" (stdlib/arg.ml[59,3290+18]..[59,3290+23])
                  []
              ]
              None
  structure_item (stdlib/arg.ml[61,3337+0]..[61,3337+11])
    Pstr_open Fresh
    module_expr (stdlib/arg.ml[61,3337+5]..[61,3337+11])
      Pmod_ident "Printf" (stdlib/arg.ml[61,3337+5]..[61,3337+11])
  structure_item (stdlib/arg.ml[63,3350+0]..[67,3451+24])
    Pstr_value Rec
    [
      <def>
        pattern (stdlib/arg.ml[63,3350+8]..[63,3350+14])
          Ppat_var "assoc3" (stdlib/arg.ml[63,3350+8]..[63,3350+14])
        expression (stdlib/arg.ml[63,3350+15]..[67,3451+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[63,3350+15]..[63,3350+16])
            Ppat_var "x" (stdlib/arg.ml[63,3350+15]..[63,3350+16])
          expression (stdlib/arg.ml[63,3350+17]..[67,3451+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[63,3350+17]..[63,3350+18])
              Ppat_var "l" (stdlib/arg.ml[63,3350+17]..[63,3350+18])
            expression (stdlib/arg.ml[64,3371+2]..[67,3451+24])
              Pexp_match
              expression (stdlib/arg.ml[64,3371+8]..[64,3371+9])
                Pexp_ident "l" (stdlib/arg.ml[64,3371+8]..[64,3371+9])
              [
                <case>
                  pattern (stdlib/arg.ml[65,3386+4]..[65,3386+6])
                    Ppat_construct "[]" (stdlib/arg.ml[65,3386+4]..[65,3386+6])
                    None
                  expression (stdlib/arg.ml[65,3386+10]..[65,3386+25])
                    Pexp_apply
                    expression (stdlib/arg.ml[65,3386+10]..[65,3386+15])
                      Pexp_ident "raise" (stdlib/arg.ml[65,3386+10]..[65,3386+15])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[65,3386+16]..[65,3386+25])
                          Pexp_construct "Not_found" (stdlib/arg.ml[65,3386+16]..[65,3386+25])
                          None
                    ]
                <case>
                  pattern (stdlib/arg.ml[66,3412+4]..[66,3412+20])
                    Ppat_construct "::" (stdlib/arg.ml[66,3412+16]..[66,3412+18])
                    Some
                      []
                      pattern (stdlib/arg.ml[66,3412+4]..[66,3412+20]) ghost
                        Ppat_tuple
                        [
                          pattern (stdlib/arg.ml[66,3412+4]..[66,3412+15])
                            Ppat_tuple
                            [
                              pattern (stdlib/arg.ml[66,3412+5]..[66,3412+7])
                                Ppat_var "y1" (stdlib/arg.ml[66,3412+5]..[66,3412+7])
                              pattern (stdlib/arg.ml[66,3412+9]..[66,3412+11])
                                Ppat_var "y2" (stdlib/arg.ml[66,3412+9]..[66,3412+11])
                              pattern (stdlib/arg.ml[66,3412+13]..[66,3412+14])
                                Ppat_any
                            ]
                          pattern (stdlib/arg.ml[66,3412+19]..[66,3412+20])
                            Ppat_any
                        ]
                  <when>
                    expression (stdlib/arg.ml[66,3412+26]..[66,3412+32])
                      Pexp_apply
                      expression (stdlib/arg.ml[66,3412+29]..[66,3412+30])
                        Pexp_ident "=" (stdlib/arg.ml[66,3412+29]..[66,3412+30])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[66,3412+26]..[66,3412+28])
                            Pexp_ident "y1" (stdlib/arg.ml[66,3412+26]..[66,3412+28])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[66,3412+31]..[66,3412+32])
                            Pexp_ident "x" (stdlib/arg.ml[66,3412+31]..[66,3412+32])
                      ]
                  expression (stdlib/arg.ml[66,3412+36]..[66,3412+38])
                    Pexp_ident "y2" (stdlib/arg.ml[66,3412+36]..[66,3412+38])
                <case>
                  pattern (stdlib/arg.ml[67,3451+4]..[67,3451+10])
                    Ppat_construct "::" (stdlib/arg.ml[67,3451+6]..[67,3451+8])
                    Some
                      []
                      pattern (stdlib/arg.ml[67,3451+4]..[67,3451+10]) ghost
                        Ppat_tuple
                        [
                          pattern (stdlib/arg.ml[67,3451+4]..[67,3451+5])
                            Ppat_any
                          pattern (stdlib/arg.ml[67,3451+9]..[67,3451+10])
                            Ppat_var "t" (stdlib/arg.ml[67,3451+9]..[67,3451+10])
                        ]
                  expression (stdlib/arg.ml[67,3451+14]..[67,3451+24])
                    Pexp_apply
                    expression (stdlib/arg.ml[67,3451+14]..[67,3451+20])
                      Pexp_ident "assoc3" (stdlib/arg.ml[67,3451+14]..[67,3451+20])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[67,3451+21]..[67,3451+22])
                          Pexp_ident "x" (stdlib/arg.ml[67,3451+21]..[67,3451+22])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[67,3451+23]..[67,3451+24])
                          Pexp_ident "t" (stdlib/arg.ml[67,3451+23]..[67,3451+24])
                    ]
              ]
    ]
  structure_item (stdlib/arg.ml[70,3478+0]..[73,3555+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[70,3478+4]..[70,3478+9])
          Ppat_var "split" (stdlib/arg.ml[70,3478+4]..[70,3478+9])
        expression (stdlib/arg.ml[70,3478+10]..[73,3555+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[70,3478+10]..[70,3478+11])
            Ppat_var "s" (stdlib/arg.ml[70,3478+10]..[70,3478+11])
          expression (stdlib/arg.ml[71,3492+2]..[73,3555+50])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/arg.ml[71,3492+6]..[71,3492+7])
                  Ppat_var "i" (stdlib/arg.ml[71,3492+6]..[71,3492+7])
                expression (stdlib/arg.ml[71,3492+10]..[71,3492+28])
                  Pexp_apply
                  expression (stdlib/arg.ml[71,3492+10]..[71,3492+22])
                    Pexp_ident "String.index" (stdlib/arg.ml[71,3492+10]..[71,3492+22])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[71,3492+23]..[71,3492+24])
                        Pexp_ident "s" (stdlib/arg.ml[71,3492+23]..[71,3492+24])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[71,3492+25]..[71,3492+28])
                        Pexp_constant PConst_char 3d
                  ]
            ]
            expression (stdlib/arg.ml[72,3524+2]..[73,3555+50])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/arg.ml[72,3524+6]..[72,3524+9])
                    Ppat_var "len" (stdlib/arg.ml[72,3524+6]..[72,3524+9])
                  expression (stdlib/arg.ml[72,3524+12]..[72,3524+27])
                    Pexp_apply
                    expression (stdlib/arg.ml[72,3524+12]..[72,3524+25])
                      Pexp_ident "String.length" (stdlib/arg.ml[72,3524+12]..[72,3524+25])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[72,3524+26]..[72,3524+27])
                          Pexp_ident "s" (stdlib/arg.ml[72,3524+26]..[72,3524+27])
                    ]
              ]
              expression (stdlib/arg.ml[73,3555+2]..[73,3555+50])
                Pexp_tuple
                [
                  expression (stdlib/arg.ml[73,3555+2]..[73,3555+18])
                    Pexp_apply
                    expression (stdlib/arg.ml[73,3555+2]..[73,3555+12])
                      Pexp_ident "String.sub" (stdlib/arg.ml[73,3555+2]..[73,3555+12])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+13]..[73,3555+14])
                          Pexp_ident "s" (stdlib/arg.ml[73,3555+13]..[73,3555+14])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+15]..[73,3555+16])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+17]..[73,3555+18])
                          Pexp_ident "i" (stdlib/arg.ml[73,3555+17]..[73,3555+18])
                    ]
                  expression (stdlib/arg.ml[73,3555+20]..[73,3555+50])
                    Pexp_apply
                    expression (stdlib/arg.ml[73,3555+20]..[73,3555+30])
                      Pexp_ident "String.sub" (stdlib/arg.ml[73,3555+20]..[73,3555+30])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+31]..[73,3555+32])
                          Pexp_ident "s" (stdlib/arg.ml[73,3555+31]..[73,3555+32])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+33]..[73,3555+38])
                          Pexp_apply
                          expression (stdlib/arg.ml[73,3555+35]..[73,3555+36])
                            Pexp_ident "+" (stdlib/arg.ml[73,3555+35]..[73,3555+36])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[73,3555+34]..[73,3555+35])
                                Pexp_ident "i" (stdlib/arg.ml[73,3555+34]..[73,3555+35])
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[73,3555+36]..[73,3555+37])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[73,3555+39]..[73,3555+50])
                          Pexp_apply
                          expression (stdlib/arg.ml[73,3555+43]..[73,3555+44])
                            Pexp_ident "-" (stdlib/arg.ml[73,3555+43]..[73,3555+44])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[73,3555+40]..[73,3555+43])
                                Pexp_ident "len" (stdlib/arg.ml[73,3555+40]..[73,3555+43])
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[73,3555+44]..[73,3555+49])
                                Pexp_apply
                                expression (stdlib/arg.ml[73,3555+46]..[73,3555+47])
                                  Pexp_ident "+" (stdlib/arg.ml[73,3555+46]..[73,3555+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[73,3555+45]..[73,3555+46])
                                      Pexp_ident "i" (stdlib/arg.ml[73,3555+45]..[73,3555+46])
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[73,3555+47]..[73,3555+48])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                    ]
                ]
    ]
  structure_item (stdlib/arg.ml[76,3608+0]..[79,3681+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[76,3608+4]..[76,3608+16])
          Ppat_var "make_symlist" (stdlib/arg.ml[76,3608+4]..[76,3608+16])
        expression (stdlib/arg.ml[76,3608+17]..[79,3681+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[76,3608+17]..[76,3608+23])
            Ppat_var "prefix" (stdlib/arg.ml[76,3608+17]..[76,3608+23])
          expression (stdlib/arg.ml[76,3608+24]..[79,3681+77]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[76,3608+24]..[76,3608+27])
              Ppat_var "sep" (stdlib/arg.ml[76,3608+24]..[76,3608+27])
            expression (stdlib/arg.ml[76,3608+28]..[79,3681+77]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[76,3608+28]..[76,3608+34])
                Ppat_var "suffix" (stdlib/arg.ml[76,3608+28]..[76,3608+34])
              expression (stdlib/arg.ml[76,3608+35]..[79,3681+77]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/arg.ml[76,3608+35]..[76,3608+36])
                  Ppat_var "l" (stdlib/arg.ml[76,3608+35]..[76,3608+36])
                expression (stdlib/arg.ml[77,3647+2]..[79,3681+77])
                  Pexp_match
                  expression (stdlib/arg.ml[77,3647+8]..[77,3647+9])
                    Pexp_ident "l" (stdlib/arg.ml[77,3647+8]..[77,3647+9])
                  [
                    <case>
                      pattern (stdlib/arg.ml[78,3662+4]..[78,3662+6])
                        Ppat_construct "[]" (stdlib/arg.ml[78,3662+4]..[78,3662+6])
                        None
                      expression (stdlib/arg.ml[78,3662+10]..[78,3662+18])
                        Pexp_constant PConst_string("<none>",(stdlib/arg.ml[78,3662+11]..[78,3662+17]),None)
                    <case>
                      pattern (stdlib/arg.ml[79,3681+4]..[79,3681+8])
                        Ppat_construct "::" (stdlib/arg.ml[79,3681+5]..[79,3681+7])
                        Some
                          []
                          pattern (stdlib/arg.ml[79,3681+4]..[79,3681+8]) ghost
                            Ppat_tuple
                            [
                              pattern (stdlib/arg.ml[79,3681+4]..[79,3681+5])
                                Ppat_var "h" (stdlib/arg.ml[79,3681+4]..[79,3681+5])
                              pattern (stdlib/arg.ml[79,3681+7]..[79,3681+8])
                                Ppat_var "t" (stdlib/arg.ml[79,3681+7]..[79,3681+8])
                            ]
                      expression (stdlib/arg.ml[79,3681+12]..[79,3681+77])
                        Pexp_apply
                        expression (stdlib/arg.ml[79,3681+69]..[79,3681+70])
                          Pexp_ident "^" (stdlib/arg.ml[79,3681+69]..[79,3681+70])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[79,3681+12]..[79,3681+68])
                              Pexp_apply
                              expression (stdlib/arg.ml[79,3681+13]..[79,3681+27])
                                Pexp_ident "List.fold_left" (stdlib/arg.ml[79,3681+13]..[79,3681+27])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[79,3681+28]..[79,3681+52])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (stdlib/arg.ml[79,3681+33]..[79,3681+34])
                                      Ppat_var "x" (stdlib/arg.ml[79,3681+33]..[79,3681+34])
                                    expression (stdlib/arg.ml[79,3681+35]..[79,3681+51]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (stdlib/arg.ml[79,3681+35]..[79,3681+36])
                                        Ppat_var "y" (stdlib/arg.ml[79,3681+35]..[79,3681+36])
                                      expression (stdlib/arg.ml[79,3681+40]..[79,3681+51])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[79,3681+42]..[79,3681+43])
                                          Pexp_ident "^" (stdlib/arg.ml[79,3681+42]..[79,3681+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[79,3681+40]..[79,3681+41])
                                              Pexp_ident "x" (stdlib/arg.ml[79,3681+40]..[79,3681+41])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[79,3681+44]..[79,3681+51])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[79,3681+48]..[79,3681+49])
                                                Pexp_ident "^" (stdlib/arg.ml[79,3681+48]..[79,3681+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[79,3681+44]..[79,3681+47])
                                                    Pexp_ident "sep" (stdlib/arg.ml[79,3681+44]..[79,3681+47])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[79,3681+50]..[79,3681+51])
                                                    Pexp_ident "y" (stdlib/arg.ml[79,3681+50]..[79,3681+51])
                                              ]
                                        ]
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[79,3681+53]..[79,3681+65])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[79,3681+61]..[79,3681+62])
                                      Pexp_ident "^" (stdlib/arg.ml[79,3681+61]..[79,3681+62])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[79,3681+54]..[79,3681+60])
                                          Pexp_ident "prefix" (stdlib/arg.ml[79,3681+54]..[79,3681+60])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[79,3681+63]..[79,3681+64])
                                          Pexp_ident "h" (stdlib/arg.ml[79,3681+63]..[79,3681+64])
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[79,3681+66]..[79,3681+67])
                                    Pexp_ident "t" (stdlib/arg.ml[79,3681+66]..[79,3681+67])
                              ]
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[79,3681+71]..[79,3681+77])
                              Pexp_ident "suffix" (stdlib/arg.ml[79,3681+71]..[79,3681+77])
                        ]
                  ]
    ]
  structure_item (stdlib/arg.ml[82,3761+0]..[88,3956+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[82,3761+4]..[82,3761+14])
          Ppat_var "print_spec" (stdlib/arg.ml[82,3761+4]..[82,3761+14])
        expression (stdlib/arg.ml[82,3761+15]..[88,3956+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[82,3761+15]..[82,3761+18])
            Ppat_var "buf" (stdlib/arg.ml[82,3761+15]..[82,3761+18])
          expression (stdlib/arg.ml[82,3761+19]..[88,3956+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[82,3761+19]..[82,3761+35])
              Ppat_tuple
              [
                pattern (stdlib/arg.ml[82,3761+20]..[82,3761+23])
                  Ppat_var "key" (stdlib/arg.ml[82,3761+20]..[82,3761+23])
                pattern (stdlib/arg.ml[82,3761+25]..[82,3761+29])
                  Ppat_var "spec" (stdlib/arg.ml[82,3761+25]..[82,3761+29])
                pattern (stdlib/arg.ml[82,3761+31]..[82,3761+34])
                  Ppat_var "doc" (stdlib/arg.ml[82,3761+31]..[82,3761+34])
              ]
            expression (stdlib/arg.ml[83,3799+2]..[88,3956+39])
              Pexp_ifthenelse
              expression (stdlib/arg.ml[83,3799+5]..[83,3799+26])
                Pexp_apply
                expression (stdlib/arg.ml[83,3799+23]..[83,3799+24])
                  Pexp_ident ">" (stdlib/arg.ml[83,3799+23]..[83,3799+24])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[83,3799+5]..[83,3799+22])
                      Pexp_apply
                      expression (stdlib/arg.ml[83,3799+5]..[83,3799+18])
                        Pexp_ident "String.length" (stdlib/arg.ml[83,3799+5]..[83,3799+18])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[83,3799+19]..[83,3799+22])
                            Pexp_ident "doc" (stdlib/arg.ml[83,3799+19]..[83,3799+22])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[83,3799+25]..[83,3799+26])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (stdlib/arg.ml[84,3831+4]..[88,3956+39])
                Pexp_match
                expression (stdlib/arg.ml[84,3831+10]..[84,3831+14])
                  Pexp_ident "spec" (stdlib/arg.ml[84,3831+10]..[84,3831+14])
                [
                  <case>
                    pattern (stdlib/arg.ml[85,3851+6]..[85,3851+19])
                      Ppat_construct "Symbol" (stdlib/arg.ml[85,3851+6]..[85,3851+12])
                      Some
                        []
                        pattern (stdlib/arg.ml[85,3851+13]..[85,3851+19])
                          Ppat_tuple
                          [
                            pattern (stdlib/arg.ml[85,3851+14]..[85,3851+15])
                              Ppat_var "l" (stdlib/arg.ml[85,3851+14]..[85,3851+15])
                            pattern (stdlib/arg.ml[85,3851+17]..[85,3851+18])
                              Ppat_any
                          ]
                    expression (stdlib/arg.ml[86,3874+8]..[86,3874+70])
                      Pexp_apply
                      expression (stdlib/arg.ml[86,3874+8]..[86,3874+15])
                        Pexp_ident "bprintf" (stdlib/arg.ml[86,3874+8]..[86,3874+15])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[86,3874+16]..[86,3874+19])
                            Pexp_ident "buf" (stdlib/arg.ml[86,3874+16]..[86,3874+19])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[86,3874+20]..[86,3874+33])
                            Pexp_constant PConst_string("  %s %s%s\n",(stdlib/arg.ml[86,3874+21]..[86,3874+32]),None)
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[86,3874+34]..[86,3874+37])
                            Pexp_ident "key" (stdlib/arg.ml[86,3874+34]..[86,3874+37])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[86,3874+38]..[86,3874+66])
                            Pexp_apply
                            expression (stdlib/arg.ml[86,3874+39]..[86,3874+51])
                              Pexp_ident "make_symlist" (stdlib/arg.ml[86,3874+39]..[86,3874+51])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[86,3874+52]..[86,3874+55])
                                  Pexp_constant PConst_string("{",(stdlib/arg.ml[86,3874+53]..[86,3874+54]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[86,3874+56]..[86,3874+59])
                                  Pexp_constant PConst_string("|",(stdlib/arg.ml[86,3874+57]..[86,3874+58]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[86,3874+60]..[86,3874+63])
                                  Pexp_constant PConst_string("}",(stdlib/arg.ml[86,3874+61]..[86,3874+62]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[86,3874+64]..[86,3874+65])
                                  Pexp_ident "l" (stdlib/arg.ml[86,3874+64]..[86,3874+65])
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[86,3874+67]..[86,3874+70])
                            Pexp_ident "doc" (stdlib/arg.ml[86,3874+67]..[86,3874+70])
                      ]
                  <case>
                    pattern (stdlib/arg.ml[87,3945+6]..[87,3945+7])
                      Ppat_any
                    expression (stdlib/arg.ml[88,3956+8]..[88,3956+39])
                      Pexp_apply
                      expression (stdlib/arg.ml[88,3956+8]..[88,3956+15])
                        Pexp_ident "bprintf" (stdlib/arg.ml[88,3956+8]..[88,3956+15])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[88,3956+16]..[88,3956+19])
                            Pexp_ident "buf" (stdlib/arg.ml[88,3956+16]..[88,3956+19])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[88,3956+20]..[88,3956+31])
                            Pexp_constant PConst_string("  %s %s\n",(stdlib/arg.ml[88,3956+21]..[88,3956+30]),None)
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[88,3956+32]..[88,3956+35])
                            Pexp_ident "key" (stdlib/arg.ml[88,3956+32]..[88,3956+35])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[88,3956+36]..[88,3956+39])
                            Pexp_ident "doc" (stdlib/arg.ml[88,3956+36]..[88,3956+39])
                      ]
                ]
              None
    ]
  structure_item (stdlib/arg.ml[91,3998+0]..[91,3998+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[91,3998+4]..[91,3998+15])
          Ppat_var "help_action" (stdlib/arg.ml[91,3998+4]..[91,3998+15])
        expression (stdlib/arg.ml[91,3998+16]..[91,3998+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[91,3998+16]..[91,3998+18])
            Ppat_construct "()" (stdlib/arg.ml[91,3998+16]..[91,3998+18])
            None
          expression (stdlib/arg.ml[91,3998+21]..[91,3998+51])
            Pexp_apply
            expression (stdlib/arg.ml[91,3998+21]..[91,3998+26])
              Pexp_ident "raise" (stdlib/arg.ml[91,3998+21]..[91,3998+26])
            [
              <arg>
              Nolabel
                expression (stdlib/arg.ml[91,3998+27]..[91,3998+51])
                  Pexp_construct "Stop" (stdlib/arg.ml[91,3998+28]..[91,3998+32])
                  Some
                    expression (stdlib/arg.ml[91,3998+33]..[91,3998+50])
                      Pexp_construct "Unknown" (stdlib/arg.ml[91,3998+34]..[91,3998+41])
                      Some
                        expression (stdlib/arg.ml[91,3998+42]..[91,3998+49])
                          Pexp_constant PConst_string("-help",(stdlib/arg.ml[91,3998+43]..[91,3998+48]),None)
            ]
    ]
  structure_item (stdlib/arg.ml[93,4051+0]..[103,4388+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[93,4051+4]..[93,4051+12])
          Ppat_var "add_help" (stdlib/arg.ml[93,4051+4]..[93,4051+12])
        expression (stdlib/arg.ml[93,4051+13]..[103,4388+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[93,4051+13]..[93,4051+21])
            Ppat_var "speclist" (stdlib/arg.ml[93,4051+13]..[93,4051+21])
          expression (stdlib/arg.ml[94,4075+2]..[103,4388+26])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/arg.ml[94,4075+6]..[94,4075+10])
                  Ppat_var "add1" (stdlib/arg.ml[94,4075+6]..[94,4075+10])
                expression (stdlib/arg.ml[95,4088+4]..[97,4155+72])
                  Pexp_try
                  expression (stdlib/arg.ml[95,4088+8]..[95,4088+44])
                    Pexp_sequence
                    expression (stdlib/arg.ml[95,4088+8]..[95,4088+40])
                      Pexp_apply
                      expression (stdlib/arg.ml[95,4088+8]..[95,4088+14])
                        Pexp_ident "ignore" (stdlib/arg.ml[95,4088+8]..[95,4088+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[95,4088+15]..[95,4088+40])
                            Pexp_apply
                            expression (stdlib/arg.ml[95,4088+16]..[95,4088+22])
                              Pexp_ident "assoc3" (stdlib/arg.ml[95,4088+16]..[95,4088+22])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[95,4088+23]..[95,4088+30])
                                  Pexp_constant PConst_string("-help",(stdlib/arg.ml[95,4088+24]..[95,4088+29]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[95,4088+31]..[95,4088+39])
                                  Pexp_ident "speclist" (stdlib/arg.ml[95,4088+31]..[95,4088+39])
                            ]
                      ]
                    expression (stdlib/arg.ml[95,4088+42]..[95,4088+44])
                      Pexp_construct "[]" (stdlib/arg.ml[95,4088+42]..[95,4088+44])
                      None
                  [
                    <case>
                      pattern (stdlib/arg.ml[96,4133+9]..[96,4133+18])
                        Ppat_construct "Not_found" (stdlib/arg.ml[96,4133+9]..[96,4133+18])
                        None
                      expression (stdlib/arg.ml[97,4155+12]..[97,4155+72])
                        Pexp_construct "::" (stdlib/arg.ml[97,4155+13]..[97,4155+72]) ghost
                        Some
                          expression (stdlib/arg.ml[97,4155+13]..[97,4155+72]) ghost
                            Pexp_tuple
                            [
                              expression (stdlib/arg.ml[97,4155+13]..[97,4155+71])
                                Pexp_tuple
                                [
                                  expression (stdlib/arg.ml[97,4155+13]..[97,4155+20])
                                    Pexp_constant PConst_string("-help",(stdlib/arg.ml[97,4155+14]..[97,4155+19]),None)
                                  expression (stdlib/arg.ml[97,4155+22]..[97,4155+38])
                                    Pexp_construct "Unit" (stdlib/arg.ml[97,4155+22]..[97,4155+26])
                                    Some
                                      expression (stdlib/arg.ml[97,4155+27]..[97,4155+38])
                                        Pexp_ident "help_action" (stdlib/arg.ml[97,4155+27]..[97,4155+38])
                                  expression (stdlib/arg.ml[97,4155+40]..[97,4155+71])
                                    Pexp_constant PConst_string(" Display this list of options",(stdlib/arg.ml[97,4155+41]..[97,4155+70]),None)
                                ]
                              expression (stdlib/arg.ml[97,4155+71]..[97,4155+72]) ghost
                                Pexp_construct "[]" (stdlib/arg.ml[97,4155+71]..[97,4155+72]) ghost
                                None
                            ]
                  ]
              <def>
                pattern (stdlib/arg.ml[98,4228+6]..[98,4228+10])
                  Ppat_var "add2" (stdlib/arg.ml[98,4228+6]..[98,4228+10])
                expression (stdlib/arg.ml[99,4241+4]..[101,4309+73])
                  Pexp_try
                  expression (stdlib/arg.ml[99,4241+8]..[99,4241+45])
                    Pexp_sequence
                    expression (stdlib/arg.ml[99,4241+8]..[99,4241+41])
                      Pexp_apply
                      expression (stdlib/arg.ml[99,4241+8]..[99,4241+14])
                        Pexp_ident "ignore" (stdlib/arg.ml[99,4241+8]..[99,4241+14])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[99,4241+15]..[99,4241+41])
                            Pexp_apply
                            expression (stdlib/arg.ml[99,4241+16]..[99,4241+22])
                              Pexp_ident "assoc3" (stdlib/arg.ml[99,4241+16]..[99,4241+22])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[99,4241+23]..[99,4241+31])
                                  Pexp_constant PConst_string("--help",(stdlib/arg.ml[99,4241+24]..[99,4241+30]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[99,4241+32]..[99,4241+40])
                                  Pexp_ident "speclist" (stdlib/arg.ml[99,4241+32]..[99,4241+40])
                            ]
                      ]
                    expression (stdlib/arg.ml[99,4241+43]..[99,4241+45])
                      Pexp_construct "[]" (stdlib/arg.ml[99,4241+43]..[99,4241+45])
                      None
                  [
                    <case>
                      pattern (stdlib/arg.ml[100,4287+9]..[100,4287+18])
                        Ppat_construct "Not_found" (stdlib/arg.ml[100,4287+9]..[100,4287+18])
                        None
                      expression (stdlib/arg.ml[101,4309+12]..[101,4309+73])
                        Pexp_construct "::" (stdlib/arg.ml[101,4309+13]..[101,4309+73]) ghost
                        Some
                          expression (stdlib/arg.ml[101,4309+13]..[101,4309+73]) ghost
                            Pexp_tuple
                            [
                              expression (stdlib/arg.ml[101,4309+13]..[101,4309+72])
                                Pexp_tuple
                                [
                                  expression (stdlib/arg.ml[101,4309+13]..[101,4309+21])
                                    Pexp_constant PConst_string("--help",(stdlib/arg.ml[101,4309+14]..[101,4309+20]),None)
                                  expression (stdlib/arg.ml[101,4309+23]..[101,4309+39])
                                    Pexp_construct "Unit" (stdlib/arg.ml[101,4309+23]..[101,4309+27])
                                    Some
                                      expression (stdlib/arg.ml[101,4309+28]..[101,4309+39])
                                        Pexp_ident "help_action" (stdlib/arg.ml[101,4309+28]..[101,4309+39])
                                  expression (stdlib/arg.ml[101,4309+41]..[101,4309+72])
                                    Pexp_constant PConst_string(" Display this list of options",(stdlib/arg.ml[101,4309+42]..[101,4309+71]),None)
                                ]
                              expression (stdlib/arg.ml[101,4309+72]..[101,4309+73]) ghost
                                Pexp_construct "[]" (stdlib/arg.ml[101,4309+72]..[101,4309+73]) ghost
                                None
                            ]
                  ]
            ]
            expression (stdlib/arg.ml[103,4388+2]..[103,4388+26])
              Pexp_apply
              expression (stdlib/arg.ml[103,4388+11]..[103,4388+12])
                Pexp_ident "@" (stdlib/arg.ml[103,4388+11]..[103,4388+12])
              [
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[103,4388+2]..[103,4388+10])
                    Pexp_ident "speclist" (stdlib/arg.ml[103,4388+2]..[103,4388+10])
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[103,4388+13]..[103,4388+26])
                    Pexp_apply
                    expression (stdlib/arg.ml[103,4388+19]..[103,4388+20])
                      Pexp_ident "@" (stdlib/arg.ml[103,4388+19]..[103,4388+20])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[103,4388+14]..[103,4388+18])
                          Pexp_ident "add1" (stdlib/arg.ml[103,4388+14]..[103,4388+18])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[103,4388+21]..[103,4388+25])
                          Pexp_ident "add2" (stdlib/arg.ml[103,4388+21]..[103,4388+25])
                    ]
              ]
    ]
  structure_item (stdlib/arg.ml[106,4417+0]..[108,4480+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[106,4417+4]..[106,4417+11])
          Ppat_var "usage_b" (stdlib/arg.ml[106,4417+4]..[106,4417+11])
        expression (stdlib/arg.ml[106,4417+12]..[108,4480+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[106,4417+12]..[106,4417+15])
            Ppat_var "buf" (stdlib/arg.ml[106,4417+12]..[106,4417+15])
          expression (stdlib/arg.ml[106,4417+16]..[108,4480+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[106,4417+16]..[106,4417+24])
              Ppat_var "speclist" (stdlib/arg.ml[106,4417+16]..[106,4417+24])
            expression (stdlib/arg.ml[106,4417+25]..[108,4480+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[106,4417+25]..[106,4417+31])
                Ppat_var "errmsg" (stdlib/arg.ml[106,4417+25]..[106,4417+31])
              expression (stdlib/arg.ml[107,4451+2]..[108,4480+48])
                Pexp_sequence
                expression (stdlib/arg.ml[107,4451+2]..[107,4451+27])
                  Pexp_apply
                  expression (stdlib/arg.ml[107,4451+2]..[107,4451+9])
                    Pexp_ident "bprintf" (stdlib/arg.ml[107,4451+2]..[107,4451+9])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[107,4451+10]..[107,4451+13])
                        Pexp_ident "buf" (stdlib/arg.ml[107,4451+10]..[107,4451+13])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[107,4451+14]..[107,4451+20])
                        Pexp_constant PConst_string("%s\n",(stdlib/arg.ml[107,4451+15]..[107,4451+19]),None)
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[107,4451+21]..[107,4451+27])
                        Pexp_ident "errmsg" (stdlib/arg.ml[107,4451+21]..[107,4451+27])
                  ]
                expression (stdlib/arg.ml[108,4480+2]..[108,4480+48])
                  Pexp_apply
                  expression (stdlib/arg.ml[108,4480+2]..[108,4480+11])
                    Pexp_ident "List.iter" (stdlib/arg.ml[108,4480+2]..[108,4480+11])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[108,4480+12]..[108,4480+28])
                        Pexp_apply
                        expression (stdlib/arg.ml[108,4480+13]..[108,4480+23])
                          Pexp_ident "print_spec" (stdlib/arg.ml[108,4480+13]..[108,4480+23])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[108,4480+24]..[108,4480+27])
                              Pexp_ident "buf" (stdlib/arg.ml[108,4480+24]..[108,4480+27])
                        ]
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[108,4480+29]..[108,4480+48])
                        Pexp_apply
                        expression (stdlib/arg.ml[108,4480+30]..[108,4480+38])
                          Pexp_ident "add_help" (stdlib/arg.ml[108,4480+30]..[108,4480+38])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[108,4480+39]..[108,4480+47])
                              Pexp_ident "speclist" (stdlib/arg.ml[108,4480+39]..[108,4480+47])
                        ]
                  ]
    ]
  structure_item (stdlib/arg.ml[111,4531+0]..[114,4626+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[111,4531+4]..[111,4531+16])
          Ppat_var "usage_string" (stdlib/arg.ml[111,4531+4]..[111,4531+16])
        expression (stdlib/arg.ml[111,4531+17]..[114,4626+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[111,4531+17]..[111,4531+25])
            Ppat_var "speclist" (stdlib/arg.ml[111,4531+17]..[111,4531+25])
          expression (stdlib/arg.ml[111,4531+26]..[114,4626+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[111,4531+26]..[111,4531+32])
              Ppat_var "errmsg" (stdlib/arg.ml[111,4531+26]..[111,4531+32])
            expression (stdlib/arg.ml[112,4566+2]..[114,4626+19])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/arg.ml[112,4566+6]..[112,4566+7])
                    Ppat_var "b" (stdlib/arg.ml[112,4566+6]..[112,4566+7])
                  expression (stdlib/arg.ml[112,4566+10]..[112,4566+27])
                    Pexp_apply
                    expression (stdlib/arg.ml[112,4566+10]..[112,4566+23])
                      Pexp_ident "Buffer.create" (stdlib/arg.ml[112,4566+10]..[112,4566+23])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[112,4566+24]..[112,4566+27])
                          Pexp_constant PConst_int (200,None)
                    ]
              ]
              expression (stdlib/arg.ml[113,4597+2]..[114,4626+19])
                Pexp_sequence
                expression (stdlib/arg.ml[113,4597+2]..[113,4597+27])
                  Pexp_apply
                  expression (stdlib/arg.ml[113,4597+2]..[113,4597+9])
                    Pexp_ident "usage_b" (stdlib/arg.ml[113,4597+2]..[113,4597+9])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[113,4597+10]..[113,4597+11])
                        Pexp_ident "b" (stdlib/arg.ml[113,4597+10]..[113,4597+11])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[113,4597+12]..[113,4597+20])
                        Pexp_ident "speclist" (stdlib/arg.ml[113,4597+12]..[113,4597+20])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[113,4597+21]..[113,4597+27])
                        Pexp_ident "errmsg" (stdlib/arg.ml[113,4597+21]..[113,4597+27])
                  ]
                expression (stdlib/arg.ml[114,4626+2]..[114,4626+19])
                  Pexp_apply
                  expression (stdlib/arg.ml[114,4626+2]..[114,4626+17])
                    Pexp_ident "Buffer.contents" (stdlib/arg.ml[114,4626+2]..[114,4626+17])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[114,4626+18]..[114,4626+19])
                        Pexp_ident "b" (stdlib/arg.ml[114,4626+18]..[114,4626+19])
                  ]
    ]
  structure_item (stdlib/arg.ml[117,4648+0]..[118,4676+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[117,4648+4]..[117,4648+9])
          Ppat_var "usage" (stdlib/arg.ml[117,4648+4]..[117,4648+9])
        expression (stdlib/arg.ml[117,4648+10]..[118,4676+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[117,4648+10]..[117,4648+18])
            Ppat_var "speclist" (stdlib/arg.ml[117,4648+10]..[117,4648+18])
          expression (stdlib/arg.ml[117,4648+19]..[118,4676+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[117,4648+19]..[117,4648+25])
              Ppat_var "errmsg" (stdlib/arg.ml[117,4648+19]..[117,4648+25])
            expression (stdlib/arg.ml[118,4676+2]..[118,4676+45])
              Pexp_apply
              expression (stdlib/arg.ml[118,4676+2]..[118,4676+9])
                Pexp_ident "eprintf" (stdlib/arg.ml[118,4676+2]..[118,4676+9])
              [
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[118,4676+10]..[118,4676+14])
                    Pexp_constant PConst_string("%s",(stdlib/arg.ml[118,4676+11]..[118,4676+13]),None)
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[118,4676+15]..[118,4676+45])
                    Pexp_apply
                    expression (stdlib/arg.ml[118,4676+16]..[118,4676+28])
                      Pexp_ident "usage_string" (stdlib/arg.ml[118,4676+16]..[118,4676+28])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[118,4676+29]..[118,4676+37])
                          Pexp_ident "speclist" (stdlib/arg.ml[118,4676+29]..[118,4676+37])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[118,4676+38]..[118,4676+44])
                          Pexp_ident "errmsg" (stdlib/arg.ml[118,4676+38]..[118,4676+44])
                    ]
              ]
    ]
  structure_item (stdlib/arg.ml[121,4724+0]..[121,4724+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[121,4724+4]..[121,4724+11])
          Ppat_var "current" (stdlib/arg.ml[121,4724+4]..[121,4724+11])
        expression (stdlib/arg.ml[121,4724+14]..[121,4724+19])
          Pexp_apply
          expression (stdlib/arg.ml[121,4724+14]..[121,4724+17])
            Pexp_ident "ref" (stdlib/arg.ml[121,4724+14]..[121,4724+17])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[121,4724+18]..[121,4724+19])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (stdlib/arg.ml[123,4745+0]..[125,4802+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[123,4745+4]..[123,4745+22])
          Ppat_var "bool_of_string_opt" (stdlib/arg.ml[123,4745+4]..[123,4745+22])
        expression (stdlib/arg.ml[123,4745+23]..[125,4802+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[123,4745+23]..[123,4745+24])
            Ppat_var "x" (stdlib/arg.ml[123,4745+23]..[123,4745+24])
          expression (stdlib/arg.ml[124,4772+2]..[125,4802+33])
            Pexp_try
            expression (stdlib/arg.ml[124,4772+6]..[124,4772+29])
              Pexp_construct "Some" (stdlib/arg.ml[124,4772+6]..[124,4772+10])
              Some
                expression (stdlib/arg.ml[124,4772+11]..[124,4772+29])
                  Pexp_apply
                  expression (stdlib/arg.ml[124,4772+12]..[124,4772+26])
                    Pexp_ident "bool_of_string" (stdlib/arg.ml[124,4772+12]..[124,4772+26])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[124,4772+27]..[124,4772+28])
                        Pexp_ident "x" (stdlib/arg.ml[124,4772+27]..[124,4772+28])
                  ]
            [
              <case>
                pattern (stdlib/arg.ml[125,4802+7]..[125,4802+25])
                  Ppat_construct "Invalid_argument" (stdlib/arg.ml[125,4802+7]..[125,4802+23])
                  Some
                    []
                    pattern (stdlib/arg.ml[125,4802+24]..[125,4802+25])
                      Ppat_any
                expression (stdlib/arg.ml[125,4802+29]..[125,4802+33])
                  Pexp_construct "None" (stdlib/arg.ml[125,4802+29]..[125,4802+33])
                  None
            ]
    ]
  structure_item (stdlib/arg.ml[127,4837+0]..[129,4892+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[127,4837+4]..[127,4837+21])
          Ppat_var "int_of_string_opt" (stdlib/arg.ml[127,4837+4]..[127,4837+21])
        expression (stdlib/arg.ml[127,4837+22]..[129,4892+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[127,4837+22]..[127,4837+23])
            Ppat_var "x" (stdlib/arg.ml[127,4837+22]..[127,4837+23])
          expression (stdlib/arg.ml[128,4863+2]..[129,4892+24])
            Pexp_try
            expression (stdlib/arg.ml[128,4863+6]..[128,4863+28])
              Pexp_construct "Some" (stdlib/arg.ml[128,4863+6]..[128,4863+10])
              Some
                expression (stdlib/arg.ml[128,4863+11]..[128,4863+28])
                  Pexp_apply
                  expression (stdlib/arg.ml[128,4863+12]..[128,4863+25])
                    Pexp_ident "int_of_string" (stdlib/arg.ml[128,4863+12]..[128,4863+25])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[128,4863+26]..[128,4863+27])
                        Pexp_ident "x" (stdlib/arg.ml[128,4863+26]..[128,4863+27])
                  ]
            [
              <case>
                pattern (stdlib/arg.ml[129,4892+7]..[129,4892+16])
                  Ppat_construct "Failure" (stdlib/arg.ml[129,4892+7]..[129,4892+14])
                  Some
                    []
                    pattern (stdlib/arg.ml[129,4892+15]..[129,4892+16])
                      Ppat_any
                expression (stdlib/arg.ml[129,4892+20]..[129,4892+24])
                  Pexp_construct "None" (stdlib/arg.ml[129,4892+20]..[129,4892+24])
                  None
            ]
    ]
  structure_item (stdlib/arg.ml[131,4918+0]..[133,4977+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[131,4918+4]..[131,4918+23])
          Ppat_var "float_of_string_opt" (stdlib/arg.ml[131,4918+4]..[131,4918+23])
        expression (stdlib/arg.ml[131,4918+24]..[133,4977+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[131,4918+24]..[131,4918+25])
            Ppat_var "x" (stdlib/arg.ml[131,4918+24]..[131,4918+25])
          expression (stdlib/arg.ml[132,4946+2]..[133,4977+24])
            Pexp_try
            expression (stdlib/arg.ml[132,4946+6]..[132,4946+30])
              Pexp_construct "Some" (stdlib/arg.ml[132,4946+6]..[132,4946+10])
              Some
                expression (stdlib/arg.ml[132,4946+11]..[132,4946+30])
                  Pexp_apply
                  expression (stdlib/arg.ml[132,4946+12]..[132,4946+27])
                    Pexp_ident "float_of_string" (stdlib/arg.ml[132,4946+12]..[132,4946+27])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[132,4946+28]..[132,4946+29])
                        Pexp_ident "x" (stdlib/arg.ml[132,4946+28]..[132,4946+29])
                  ]
            [
              <case>
                pattern (stdlib/arg.ml[133,4977+7]..[133,4977+16])
                  Ppat_construct "Failure" (stdlib/arg.ml[133,4977+7]..[133,4977+14])
                  Some
                    []
                    pattern (stdlib/arg.ml[133,4977+15]..[133,4977+16])
                      Ppat_any
                expression (stdlib/arg.ml[133,4977+20]..[133,4977+24])
                  Pexp_construct "None" (stdlib/arg.ml[133,4977+20]..[133,4977+24])
                  None
            ]
    ]
  structure_item (stdlib/arg.ml[135,5003+0]..[284,10319+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[135,5003+4]..[135,5003+37])
          Ppat_var "parse_and_expand_argv_dynamic_aux" (stdlib/arg.ml[135,5003+4]..[135,5003+37])
        expression (stdlib/arg.ml[135,5003+38]..[284,10319+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[135,5003+38]..[135,5003+50])
            Ppat_var "allow_expand" (stdlib/arg.ml[135,5003+38]..[135,5003+50])
          expression (stdlib/arg.ml[135,5003+51]..[284,10319+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[135,5003+51]..[135,5003+58])
              Ppat_var "current" (stdlib/arg.ml[135,5003+51]..[135,5003+58])
            expression (stdlib/arg.ml[135,5003+59]..[284,10319+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[135,5003+59]..[135,5003+63])
                Ppat_var "argv" (stdlib/arg.ml[135,5003+59]..[135,5003+63])
              expression (stdlib/arg.ml[135,5003+64]..[284,10319+6]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/arg.ml[135,5003+64]..[135,5003+72])
                  Ppat_var "speclist" (stdlib/arg.ml[135,5003+64]..[135,5003+72])
                expression (stdlib/arg.ml[135,5003+73]..[284,10319+6]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/arg.ml[135,5003+73]..[135,5003+80])
                    Ppat_var "anonfun" (stdlib/arg.ml[135,5003+73]..[135,5003+80])
                  expression (stdlib/arg.ml[136,5084+38]..[284,10319+6]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/arg.ml[136,5084+38]..[136,5084+44])
                      Ppat_var "errmsg" (stdlib/arg.ml[136,5084+38]..[136,5084+44])
                    expression (stdlib/arg.ml[137,5131+2]..[284,10319+6])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/arg.ml[137,5131+6]..[137,5131+13])
                            Ppat_var "initpos" (stdlib/arg.ml[137,5131+6]..[137,5131+13])
                          expression (stdlib/arg.ml[137,5131+16]..[137,5131+24])
                            Pexp_apply
                            expression (stdlib/arg.ml[137,5131+16]..[137,5131+17])
                              Pexp_ident "!" (stdlib/arg.ml[137,5131+16]..[137,5131+17])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[137,5131+17]..[137,5131+24])
                                  Pexp_ident "current" (stdlib/arg.ml[137,5131+17]..[137,5131+24])
                            ]
                      ]
                      expression (stdlib/arg.ml[138,5159+2]..[284,10319+6])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/arg.ml[138,5159+6]..[138,5159+19])
                              Ppat_var "convert_error" (stdlib/arg.ml[138,5159+6]..[138,5159+19])
                            expression (stdlib/arg.ml[138,5159+20]..[162,6135+32]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (stdlib/arg.ml[138,5159+20]..[138,5159+25])
                                Ppat_var "error" (stdlib/arg.ml[138,5159+20]..[138,5159+25])
                              expression (stdlib/arg.ml[143,5370+4]..[162,6135+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (stdlib/arg.ml[143,5370+8]..[143,5370+9])
                                      Ppat_var "b" (stdlib/arg.ml[143,5370+8]..[143,5370+9])
                                    expression (stdlib/arg.ml[143,5370+12]..[143,5370+29])
                                      Pexp_apply
                                      expression (stdlib/arg.ml[143,5370+12]..[143,5370+25])
                                        Pexp_ident "Buffer.create" (stdlib/arg.ml[143,5370+12]..[143,5370+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[143,5370+26]..[143,5370+29])
                                            Pexp_constant PConst_int (200,None)
                                      ]
                                ]
                                expression (stdlib/arg.ml[144,5403+4]..[162,6135+32])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/arg.ml[144,5403+8]..[144,5403+16])
                                        Ppat_var "progname" (stdlib/arg.ml[144,5403+8]..[144,5403+16])
                                      expression (stdlib/arg.ml[145,5422+6]..[145,5422+71])
                                        Pexp_ifthenelse
                                        expression (stdlib/arg.ml[145,5422+9]..[145,5422+39])
                                          Pexp_apply
                                          expression (stdlib/arg.ml[145,5422+17]..[145,5422+18])
                                            Pexp_ident "<" (stdlib/arg.ml[145,5422+17]..[145,5422+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[145,5422+9]..[145,5422+16])
                                                Pexp_ident "initpos" (stdlib/arg.ml[145,5422+9]..[145,5422+16])
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[145,5422+19]..[145,5422+39])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[145,5422+20]..[145,5422+32])
                                                  Pexp_ident "Array.length" (stdlib/arg.ml[145,5422+20]..[145,5422+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[145,5422+33]..[145,5422+38])
                                                      Pexp_apply
                                                      expression (stdlib/arg.ml[145,5422+33]..[145,5422+34])
                                                        Pexp_ident "!" (stdlib/arg.ml[145,5422+33]..[145,5422+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (stdlib/arg.ml[145,5422+34]..[145,5422+38])
                                                            Pexp_ident "argv" (stdlib/arg.ml[145,5422+34]..[145,5422+38])
                                                      ]
                                                ]
                                          ]
                                        expression (stdlib/arg.ml[145,5422+45]..[145,5422+60])
                                          Pexp_apply
                                          expression (stdlib/arg.ml[145,5422+45]..[145,5422+60]) ghost
                                            Pexp_ident "Array.get" (stdlib/arg.ml[145,5422+45]..[145,5422+60]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[145,5422+45]..[145,5422+50])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[145,5422+45]..[145,5422+46])
                                                  Pexp_ident "!" (stdlib/arg.ml[145,5422+45]..[145,5422+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[145,5422+46]..[145,5422+50])
                                                      Pexp_ident "argv" (stdlib/arg.ml[145,5422+46]..[145,5422+50])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[145,5422+52]..[145,5422+59])
                                                Pexp_ident "initpos" (stdlib/arg.ml[145,5422+52]..[145,5422+59])
                                          ]
                                        Some
                                          expression (stdlib/arg.ml[145,5422+66]..[145,5422+71])
                                            Pexp_constant PConst_string("(?)",(stdlib/arg.ml[145,5422+67]..[145,5422+70]),None)
                                  ]
                                  expression (stdlib/arg.ml[146,5497+4]..[162,6135+32])
                                    Pexp_sequence
                                    expression (stdlib/arg.ml[146,5497+4]..[158,6001+7])
                                      Pexp_match
                                      expression (stdlib/arg.ml[146,5497+16]..[146,5497+21])
                                        Pexp_ident "error" (stdlib/arg.ml[146,5497+16]..[146,5497+21])
                                      [
                                        <case>
                                          pattern (stdlib/arg.ml[147,5524+8]..[147,5524+23])
                                            Ppat_construct "Unknown" (stdlib/arg.ml[147,5524+8]..[147,5524+15])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[147,5524+16]..[147,5524+23])
                                                Ppat_constant PConst_string("-help",(stdlib/arg.ml[147,5524+17]..[147,5524+22]),None)
                                          expression (stdlib/arg.ml[147,5524+27]..[147,5524+29])
                                            Pexp_construct "()" (stdlib/arg.ml[147,5524+27]..[147,5524+29])
                                            None
                                        <case>
                                          pattern (stdlib/arg.ml[148,5554+8]..[148,5554+24])
                                            Ppat_construct "Unknown" (stdlib/arg.ml[148,5554+8]..[148,5554+15])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[148,5554+16]..[148,5554+24])
                                                Ppat_constant PConst_string("--help",(stdlib/arg.ml[148,5554+17]..[148,5554+23]),None)
                                          expression (stdlib/arg.ml[148,5554+28]..[148,5554+30])
                                            Pexp_construct "()" (stdlib/arg.ml[148,5554+28]..[148,5554+30])
                                            None
                                        <case>
                                          pattern (stdlib/arg.ml[149,5585+8]..[149,5585+17])
                                            Ppat_construct "Unknown" (stdlib/arg.ml[149,5585+8]..[149,5585+15])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[149,5585+16]..[149,5585+17])
                                                Ppat_var "s" (stdlib/arg.ml[149,5585+16]..[149,5585+17])
                                          expression (stdlib/arg.ml[150,5606+10]..[150,5606+59])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[150,5606+10]..[150,5606+17])
                                              Pexp_ident "bprintf" (stdlib/arg.ml[150,5606+10]..[150,5606+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[150,5606+18]..[150,5606+19])
                                                  Pexp_ident "b" (stdlib/arg.ml[150,5606+18]..[150,5606+19])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[150,5606+20]..[150,5606+48])
                                                  Pexp_constant PConst_string("%s: unknown option '%s'.\n",(stdlib/arg.ml[150,5606+21]..[150,5606+47]),None)
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[150,5606+49]..[150,5606+57])
                                                  Pexp_ident "progname" (stdlib/arg.ml[150,5606+49]..[150,5606+57])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[150,5606+58]..[150,5606+59])
                                                  Pexp_ident "s" (stdlib/arg.ml[150,5606+58]..[150,5606+59])
                                            ]
                                        <case>
                                          pattern (stdlib/arg.ml[151,5666+8]..[151,5666+17])
                                            Ppat_construct "Missing" (stdlib/arg.ml[151,5666+8]..[151,5666+15])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[151,5666+16]..[151,5666+17])
                                                Ppat_var "s" (stdlib/arg.ml[151,5666+16]..[151,5666+17])
                                          expression (stdlib/arg.ml[152,5687+10]..[152,5687+69])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[152,5687+10]..[152,5687+17])
                                              Pexp_ident "bprintf" (stdlib/arg.ml[152,5687+10]..[152,5687+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[152,5687+18]..[152,5687+19])
                                                  Pexp_ident "b" (stdlib/arg.ml[152,5687+18]..[152,5687+19])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[152,5687+20]..[152,5687+58])
                                                  Pexp_constant PConst_string("%s: option '%s' needs an argument.\n",(stdlib/arg.ml[152,5687+21]..[152,5687+57]),None)
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[152,5687+59]..[152,5687+67])
                                                  Pexp_ident "progname" (stdlib/arg.ml[152,5687+59]..[152,5687+67])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[152,5687+68]..[152,5687+69])
                                                  Pexp_ident "s" (stdlib/arg.ml[152,5687+68]..[152,5687+69])
                                            ]
                                        <case>
                                          pattern (stdlib/arg.ml[153,5757+8]..[153,5757+34])
                                            Ppat_construct "Wrong" (stdlib/arg.ml[153,5757+8]..[153,5757+13])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[153,5757+14]..[153,5757+34])
                                                Ppat_tuple
                                                [
                                                  pattern (stdlib/arg.ml[153,5757+15]..[153,5757+18])
                                                    Ppat_var "opt" (stdlib/arg.ml[153,5757+15]..[153,5757+18])
                                                  pattern (stdlib/arg.ml[153,5757+20]..[153,5757+23])
                                                    Ppat_var "arg" (stdlib/arg.ml[153,5757+20]..[153,5757+23])
                                                  pattern (stdlib/arg.ml[153,5757+25]..[153,5757+33])
                                                    Ppat_var "expected" (stdlib/arg.ml[153,5757+25]..[153,5757+33])
                                                ]
                                          expression (stdlib/arg.ml[154,5795+10]..[155,5868+43])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[154,5795+10]..[154,5795+17])
                                              Pexp_ident "bprintf" (stdlib/arg.ml[154,5795+10]..[154,5795+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[154,5795+18]..[154,5795+19])
                                                  Pexp_ident "b" (stdlib/arg.ml[154,5795+18]..[154,5795+19])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[154,5795+20]..[154,5795+72])
                                                  Pexp_constant PConst_string("%s: wrong argument '%s'; option '%s' expects %s.\n",(stdlib/arg.ml[154,5795+21]..[154,5795+71]),None)
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[155,5868+18]..[155,5868+26])
                                                  Pexp_ident "progname" (stdlib/arg.ml[155,5868+18]..[155,5868+26])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[155,5868+27]..[155,5868+30])
                                                  Pexp_ident "arg" (stdlib/arg.ml[155,5868+27]..[155,5868+30])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[155,5868+31]..[155,5868+34])
                                                  Pexp_ident "opt" (stdlib/arg.ml[155,5868+31]..[155,5868+34])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[155,5868+35]..[155,5868+43])
                                                  Pexp_ident "expected" (stdlib/arg.ml[155,5868+35]..[155,5868+43])
                                            ]
                                        <case>
                                          pattern (stdlib/arg.ml[156,5912+8]..[156,5912+17])
                                            Ppat_construct "Message" (stdlib/arg.ml[156,5912+8]..[156,5912+15])
                                            Some
                                              []
                                              pattern (stdlib/arg.ml[156,5912+16]..[156,5912+17])
                                                Ppat_var "s" (stdlib/arg.ml[156,5912+16]..[156,5912+17])
                                          expression (stdlib/arg.ml[157,5958+10]..[157,5958+42])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[157,5958+10]..[157,5958+17])
                                              Pexp_ident "bprintf" (stdlib/arg.ml[157,5958+10]..[157,5958+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[157,5958+18]..[157,5958+19])
                                                  Pexp_ident "b" (stdlib/arg.ml[157,5958+18]..[157,5958+19])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[157,5958+20]..[157,5958+31])
                                                  Pexp_constant PConst_string("%s: %s.\n",(stdlib/arg.ml[157,5958+21]..[157,5958+30]),None)
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[157,5958+32]..[157,5958+40])
                                                  Pexp_ident "progname" (stdlib/arg.ml[157,5958+32]..[157,5958+40])
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[157,5958+41]..[157,5958+42])
                                                  Pexp_ident "s" (stdlib/arg.ml[157,5958+41]..[157,5958+42])
                                            ]
                                      ]
                                    expression (stdlib/arg.ml[159,6010+4]..[162,6135+32])
                                      Pexp_sequence
                                      expression (stdlib/arg.ml[159,6010+4]..[159,6010+30])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[159,6010+4]..[159,6010+11])
                                          Pexp_ident "usage_b" (stdlib/arg.ml[159,6010+4]..[159,6010+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[159,6010+12]..[159,6010+13])
                                              Pexp_ident "b" (stdlib/arg.ml[159,6010+12]..[159,6010+13])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[159,6010+14]..[159,6010+23])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[159,6010+14]..[159,6010+15])
                                                Pexp_ident "!" (stdlib/arg.ml[159,6010+14]..[159,6010+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[159,6010+15]..[159,6010+23])
                                                    Pexp_ident "speclist" (stdlib/arg.ml[159,6010+15]..[159,6010+23])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[159,6010+24]..[159,6010+30])
                                              Pexp_ident "errmsg" (stdlib/arg.ml[159,6010+24]..[159,6010+30])
                                        ]
                                      expression (stdlib/arg.ml[160,6042+4]..[162,6135+32])
                                        Pexp_ifthenelse
                                        expression (stdlib/arg.ml[160,6042+7]..[160,6042+58])
                                          Pexp_apply
                                          expression (stdlib/arg.ml[160,6042+31]..[160,6042+33])
                                            Pexp_ident "||" (stdlib/arg.ml[160,6042+31]..[160,6042+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[160,6042+7]..[160,6042+30])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[160,6042+13]..[160,6042+14])
                                                  Pexp_ident "=" (stdlib/arg.ml[160,6042+13]..[160,6042+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[160,6042+7]..[160,6042+12])
                                                      Pexp_ident "error" (stdlib/arg.ml[160,6042+7]..[160,6042+12])
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[160,6042+15]..[160,6042+30])
                                                      Pexp_construct "Unknown" (stdlib/arg.ml[160,6042+15]..[160,6042+22])
                                                      Some
                                                        expression (stdlib/arg.ml[160,6042+23]..[160,6042+30])
                                                          Pexp_constant PConst_string("-help",(stdlib/arg.ml[160,6042+24]..[160,6042+29]),None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[160,6042+34]..[160,6042+58])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[160,6042+40]..[160,6042+41])
                                                  Pexp_ident "=" (stdlib/arg.ml[160,6042+40]..[160,6042+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[160,6042+34]..[160,6042+39])
                                                      Pexp_ident "error" (stdlib/arg.ml[160,6042+34]..[160,6042+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[160,6042+42]..[160,6042+58])
                                                      Pexp_construct "Unknown" (stdlib/arg.ml[160,6042+42]..[160,6042+49])
                                                      Some
                                                        expression (stdlib/arg.ml[160,6042+50]..[160,6042+58])
                                                          Pexp_constant PConst_string("--help",(stdlib/arg.ml[160,6042+51]..[160,6042+57]),None)
                                                ]
                                          ]
                                        expression (stdlib/arg.ml[161,6101+9]..[161,6101+33])
                                          Pexp_construct "Help" (stdlib/arg.ml[161,6101+9]..[161,6101+13])
                                          Some
                                            expression (stdlib/arg.ml[161,6101+14]..[161,6101+33])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[161,6101+15]..[161,6101+30])
                                                Pexp_ident "Buffer.contents" (stdlib/arg.ml[161,6101+15]..[161,6101+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[161,6101+31]..[161,6101+32])
                                                    Pexp_ident "b" (stdlib/arg.ml[161,6101+31]..[161,6101+32])
                                              ]
                                        Some
                                          expression (stdlib/arg.ml[162,6135+9]..[162,6135+32])
                                            Pexp_construct "Bad" (stdlib/arg.ml[162,6135+9]..[162,6135+12])
                                            Some
                                              expression (stdlib/arg.ml[162,6135+13]..[162,6135+32])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[162,6135+14]..[162,6135+29])
                                                  Pexp_ident "Buffer.contents" (stdlib/arg.ml[162,6135+14]..[162,6135+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[162,6135+30]..[162,6135+31])
                                                      Pexp_ident "b" (stdlib/arg.ml[162,6135+30]..[162,6135+31])
                                                ]
                        ]
                        expression (stdlib/arg.ml[164,6173+2]..[284,10319+6])
                          Pexp_sequence
                          expression (stdlib/arg.ml[164,6173+2]..[164,6173+14])
                            Pexp_apply
                            expression (stdlib/arg.ml[164,6173+2]..[164,6173+6])
                              Pexp_ident "incr" (stdlib/arg.ml[164,6173+2]..[164,6173+6])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[164,6173+7]..[164,6173+14])
                                  Pexp_ident "current" (stdlib/arg.ml[164,6173+7]..[164,6173+14])
                            ]
                          expression (stdlib/arg.ml[165,6189+2]..[284,10319+6])
                            Pexp_while
                            expression (stdlib/arg.ml[165,6189+8]..[165,6189+39])
                              Pexp_apply
                              expression (stdlib/arg.ml[165,6189+17]..[165,6189+18])
                                Pexp_ident "<" (stdlib/arg.ml[165,6189+17]..[165,6189+18])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[165,6189+8]..[165,6189+16])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[165,6189+8]..[165,6189+9])
                                      Pexp_ident "!" (stdlib/arg.ml[165,6189+8]..[165,6189+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[165,6189+9]..[165,6189+16])
                                          Pexp_ident "current" (stdlib/arg.ml[165,6189+9]..[165,6189+16])
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[165,6189+19]..[165,6189+39])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[165,6189+20]..[165,6189+32])
                                      Pexp_ident "Array.length" (stdlib/arg.ml[165,6189+20]..[165,6189+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[165,6189+33]..[165,6189+38])
                                          Pexp_apply
                                          expression (stdlib/arg.ml[165,6189+33]..[165,6189+34])
                                            Pexp_ident "!" (stdlib/arg.ml[165,6189+33]..[165,6189+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[165,6189+34]..[165,6189+38])
                                                Pexp_ident "argv" (stdlib/arg.ml[165,6189+34]..[165,6189+38])
                                          ]
                                    ]
                              ]
                            expression (stdlib/arg.ml[166,6232+4]..[283,10302+16])
                              Pexp_sequence
                              expression (stdlib/arg.ml[166,6232+4]..[282,10293+7])
                                Pexp_try
                                expression (stdlib/arg.ml[167,6246+6]..[279,10171+20])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/arg.ml[167,6246+10]..[167,6246+11])
                                        Ppat_var "s" (stdlib/arg.ml[167,6246+10]..[167,6246+11])
                                      expression (stdlib/arg.ml[167,6246+14]..[167,6246+30])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[167,6246+14]..[167,6246+30]) ghost
                                          Pexp_ident "Array.get" (stdlib/arg.ml[167,6246+14]..[167,6246+30]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[167,6246+14]..[167,6246+19])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[167,6246+14]..[167,6246+15])
                                                Pexp_ident "!" (stdlib/arg.ml[167,6246+14]..[167,6246+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[167,6246+15]..[167,6246+19])
                                                    Pexp_ident "argv" (stdlib/arg.ml[167,6246+15]..[167,6246+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[167,6246+21]..[167,6246+29])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[167,6246+21]..[167,6246+22])
                                                Pexp_ident "!" (stdlib/arg.ml[167,6246+21]..[167,6246+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[167,6246+22]..[167,6246+29])
                                                    Pexp_ident "current" (stdlib/arg.ml[167,6246+22]..[167,6246+29])
                                              ]
                                        ]
                                  ]
                                  expression (stdlib/arg.ml[168,6280+6]..[279,10171+20])
                                    Pexp_ifthenelse
                                    expression (stdlib/arg.ml[168,6280+9]..[168,6280+44])
                                      Pexp_apply
                                      expression (stdlib/arg.ml[168,6280+30]..[168,6280+32])
                                        Pexp_ident "&&" (stdlib/arg.ml[168,6280+30]..[168,6280+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[168,6280+9]..[168,6280+29])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[168,6280+25]..[168,6280+27])
                                              Pexp_ident ">=" (stdlib/arg.ml[168,6280+25]..[168,6280+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[168,6280+9]..[168,6280+24])
                                                  Pexp_apply
                                                  expression (stdlib/arg.ml[168,6280+9]..[168,6280+22])
                                                    Pexp_ident "String.length" (stdlib/arg.ml[168,6280+9]..[168,6280+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[168,6280+23]..[168,6280+24])
                                                        Pexp_ident "s" (stdlib/arg.ml[168,6280+23]..[168,6280+24])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[168,6280+28]..[168,6280+29])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[168,6280+33]..[168,6280+44])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[168,6280+39]..[168,6280+40])
                                              Pexp_ident "=" (stdlib/arg.ml[168,6280+39]..[168,6280+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[168,6280+33]..[168,6280+38])
                                                  Pexp_apply
                                                  expression (stdlib/arg.ml[168,6280+33]..[168,6280+38]) ghost
                                                    Pexp_ident "String.get" (stdlib/arg.ml[168,6280+33]..[168,6280+38]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[168,6280+33]..[168,6280+34])
                                                        Pexp_ident "s" (stdlib/arg.ml[168,6280+33]..[168,6280+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[168,6280+36]..[168,6280+37])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[168,6280+41]..[168,6280+44])
                                                  Pexp_constant PConst_char 2d
                                            ]
                                      ]
                                    expression (stdlib/arg.ml[168,6280+50]..[278,10139+31])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (stdlib/arg.ml[169,6336+12]..[169,6336+26])
                                            Ppat_tuple
                                            [
                                              pattern (stdlib/arg.ml[169,6336+12]..[169,6336+18])
                                                Ppat_var "action" (stdlib/arg.ml[169,6336+12]..[169,6336+18])
                                              pattern (stdlib/arg.ml[169,6336+20]..[169,6336+26])
                                                Ppat_var "follow" (stdlib/arg.ml[169,6336+20]..[169,6336+26])
                                            ]
                                          expression (stdlib/arg.ml[170,6365+10]..[175,6535+52])
                                            Pexp_try
                                            expression (stdlib/arg.ml[170,6365+14]..[170,6365+38])
                                              Pexp_tuple
                                              [
                                                expression (stdlib/arg.ml[170,6365+14]..[170,6365+32])
                                                  Pexp_apply
                                                  expression (stdlib/arg.ml[170,6365+14]..[170,6365+20])
                                                    Pexp_ident "assoc3" (stdlib/arg.ml[170,6365+14]..[170,6365+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[170,6365+21]..[170,6365+22])
                                                        Pexp_ident "s" (stdlib/arg.ml[170,6365+21]..[170,6365+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[170,6365+23]..[170,6365+32])
                                                        Pexp_apply
                                                        expression (stdlib/arg.ml[170,6365+23]..[170,6365+24])
                                                          Pexp_ident "!" (stdlib/arg.ml[170,6365+23]..[170,6365+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/arg.ml[170,6365+24]..[170,6365+32])
                                                              Pexp_ident "speclist" (stdlib/arg.ml[170,6365+24]..[170,6365+32])
                                                        ]
                                                  ]
                                                expression (stdlib/arg.ml[170,6365+34]..[170,6365+38])
                                                  Pexp_construct "None" (stdlib/arg.ml[170,6365+34]..[170,6365+38])
                                                  None
                                              ]
                                            [
                                              <case>
                                                pattern (stdlib/arg.ml[171,6404+15]..[171,6404+24])
                                                  Ppat_construct "Not_found" (stdlib/arg.ml[171,6404+15]..[171,6404+24])
                                                  None
                                                expression (stdlib/arg.ml[172,6432+10]..[175,6535+52])
                                                  Pexp_try
                                                  expression (stdlib/arg.ml[173,6446+12]..[174,6488+46])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (stdlib/arg.ml[173,6446+16]..[173,6446+28])
                                                          Ppat_tuple
                                                          [
                                                            pattern (stdlib/arg.ml[173,6446+16]..[173,6446+23])
                                                              Ppat_var "keyword" (stdlib/arg.ml[173,6446+16]..[173,6446+23])
                                                            pattern (stdlib/arg.ml[173,6446+25]..[173,6446+28])
                                                              Ppat_var "arg" (stdlib/arg.ml[173,6446+25]..[173,6446+28])
                                                          ]
                                                        expression (stdlib/arg.ml[173,6446+31]..[173,6446+38])
                                                          Pexp_apply
                                                          expression (stdlib/arg.ml[173,6446+31]..[173,6446+36])
                                                            Pexp_ident "split" (stdlib/arg.ml[173,6446+31]..[173,6446+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[173,6446+37]..[173,6446+38])
                                                                Pexp_ident "s" (stdlib/arg.ml[173,6446+37]..[173,6446+38])
                                                          ]
                                                    ]
                                                    expression (stdlib/arg.ml[174,6488+12]..[174,6488+46])
                                                      Pexp_tuple
                                                      [
                                                        expression (stdlib/arg.ml[174,6488+12]..[174,6488+36])
                                                          Pexp_apply
                                                          expression (stdlib/arg.ml[174,6488+12]..[174,6488+18])
                                                            Pexp_ident "assoc3" (stdlib/arg.ml[174,6488+12]..[174,6488+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[174,6488+19]..[174,6488+26])
                                                                Pexp_ident "keyword" (stdlib/arg.ml[174,6488+19]..[174,6488+26])
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[174,6488+27]..[174,6488+36])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[174,6488+27]..[174,6488+28])
                                                                  Pexp_ident "!" (stdlib/arg.ml[174,6488+27]..[174,6488+28])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[174,6488+28]..[174,6488+36])
                                                                      Pexp_ident "speclist" (stdlib/arg.ml[174,6488+28]..[174,6488+36])
                                                                ]
                                                          ]
                                                        expression (stdlib/arg.ml[174,6488+38]..[174,6488+46])
                                                          Pexp_construct "Some" (stdlib/arg.ml[174,6488+38]..[174,6488+42])
                                                          Some
                                                            expression (stdlib/arg.ml[174,6488+43]..[174,6488+46])
                                                              Pexp_ident "arg" (stdlib/arg.ml[174,6488+43]..[174,6488+46])
                                                      ]
                                                  [
                                                    <case>
                                                      pattern (stdlib/arg.ml[175,6535+15]..[175,6535+24])
                                                        Ppat_construct "Not_found" (stdlib/arg.ml[175,6535+15]..[175,6535+24])
                                                        None
                                                      expression (stdlib/arg.ml[175,6535+28]..[175,6535+52])
                                                        Pexp_apply
                                                        expression (stdlib/arg.ml[175,6535+28]..[175,6535+33])
                                                          Pexp_ident "raise" (stdlib/arg.ml[175,6535+28]..[175,6535+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/arg.ml[175,6535+34]..[175,6535+52])
                                                              Pexp_construct "Stop" (stdlib/arg.ml[175,6535+35]..[175,6535+39])
                                                              Some
                                                                expression (stdlib/arg.ml[175,6535+40]..[175,6535+51])
                                                                  Pexp_construct "Unknown" (stdlib/arg.ml[175,6535+41]..[175,6535+48])
                                                                  Some
                                                                    expression (stdlib/arg.ml[175,6535+49]..[175,6535+50])
                                                                      Pexp_ident "s" (stdlib/arg.ml[175,6535+49]..[175,6535+50])
                                                        ]
                                                  ]
                                            ]
                                      ]
                                      expression (stdlib/arg.ml[177,6599+8]..[278,10139+27])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (stdlib/arg.ml[177,6599+12]..[177,6599+18])
                                              Ppat_var "no_arg" (stdlib/arg.ml[177,6599+12]..[177,6599+18])
                                            expression (stdlib/arg.ml[177,6599+19]..[180,6674+68]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (stdlib/arg.ml[177,6599+19]..[177,6599+21])
                                                Ppat_construct "()" (stdlib/arg.ml[177,6599+19]..[177,6599+21])
                                                None
                                              expression (stdlib/arg.ml[178,6623+10]..[180,6674+68])
                                                Pexp_match
                                                expression (stdlib/arg.ml[178,6623+16]..[178,6623+22])
                                                  Pexp_ident "follow" (stdlib/arg.ml[178,6623+16]..[178,6623+22])
                                                [
                                                  <case>
                                                    pattern (stdlib/arg.ml[179,6651+12]..[179,6651+16])
                                                      Ppat_construct "None" (stdlib/arg.ml[179,6651+12]..[179,6651+16])
                                                      None
                                                    expression (stdlib/arg.ml[179,6651+20]..[179,6651+22])
                                                      Pexp_construct "()" (stdlib/arg.ml[179,6651+20]..[179,6651+22])
                                                      None
                                                  <case>
                                                    pattern (stdlib/arg.ml[180,6674+12]..[180,6674+20])
                                                      Ppat_construct "Some" (stdlib/arg.ml[180,6674+12]..[180,6674+16])
                                                      Some
                                                        []
                                                        pattern (stdlib/arg.ml[180,6674+17]..[180,6674+20])
                                                          Ppat_var "arg" (stdlib/arg.ml[180,6674+17]..[180,6674+20])
                                                    expression (stdlib/arg.ml[180,6674+24]..[180,6674+68])
                                                      Pexp_apply
                                                      expression (stdlib/arg.ml[180,6674+24]..[180,6674+29])
                                                        Pexp_ident "raise" (stdlib/arg.ml[180,6674+24]..[180,6674+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (stdlib/arg.ml[180,6674+30]..[180,6674+68])
                                                            Pexp_construct "Stop" (stdlib/arg.ml[180,6674+31]..[180,6674+35])
                                                            Some
                                                              expression (stdlib/arg.ml[180,6674+36]..[180,6674+67])
                                                                Pexp_construct "Wrong" (stdlib/arg.ml[180,6674+37]..[180,6674+42])
                                                                Some
                                                                  expression (stdlib/arg.ml[180,6674+43]..[180,6674+66])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (stdlib/arg.ml[180,6674+44]..[180,6674+45])
Pexp_ident "s" (stdlib/arg.ml[180,6674+44]..[180,6674+45])
                                                                      expression (stdlib/arg.ml[180,6674+47]..[180,6674+50])
Pexp_ident "arg" (stdlib/arg.ml[180,6674+47]..[180,6674+50])
                                                                      expression (stdlib/arg.ml[180,6674+52]..[180,6674+65])
Pexp_constant PConst_string("no argument",(stdlib/arg.ml[180,6674+53]..[180,6674+64]),None)
                                                                    ]
                                                      ]
                                                ]
                                        ]
                                        expression (stdlib/arg.ml[181,6746+8]..[278,10139+27])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (stdlib/arg.ml[181,6746+12]..[181,6746+19])
                                                Ppat_var "get_arg" (stdlib/arg.ml[181,6746+12]..[181,6746+19])
                                              expression (stdlib/arg.ml[181,6746+20]..[186,6942+27]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (stdlib/arg.ml[181,6746+20]..[181,6746+22])
                                                  Ppat_construct "()" (stdlib/arg.ml[181,6746+20]..[181,6746+22])
                                                  None
                                                expression (stdlib/arg.ml[182,6771+10]..[186,6942+27])
                                                  Pexp_match
                                                  expression (stdlib/arg.ml[182,6771+16]..[182,6771+22])
                                                    Pexp_ident "follow" (stdlib/arg.ml[182,6771+16]..[182,6771+22])
                                                  [
                                                    <case>
                                                      pattern (stdlib/arg.ml[183,6799+12]..[183,6799+16])
                                                        Ppat_construct "None" (stdlib/arg.ml[183,6799+12]..[183,6799+16])
                                                        None
                                                      expression (stdlib/arg.ml[184,6819+14]..[185,6898+43])
                                                        Pexp_ifthenelse
                                                        expression (stdlib/arg.ml[184,6819+17]..[184,6819+52])
                                                          Pexp_apply
                                                          expression (stdlib/arg.ml[184,6819+30]..[184,6819+31])
                                                            Pexp_ident "<" (stdlib/arg.ml[184,6819+30]..[184,6819+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[184,6819+17]..[184,6819+29])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[184,6819+26]..[184,6819+27])
                                                                  Pexp_ident "+" (stdlib/arg.ml[184,6819+26]..[184,6819+27])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+17]..[184,6819+25])
                                                                      Pexp_apply
                                                                      expression (stdlib/arg.ml[184,6819+17]..[184,6819+18])
Pexp_ident "!" (stdlib/arg.ml[184,6819+17]..[184,6819+18])
                                                                      [
<arg>
Nolabel
  expression (stdlib/arg.ml[184,6819+18]..[184,6819+25])
    Pexp_ident "current" (stdlib/arg.ml[184,6819+18]..[184,6819+25])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+28]..[184,6819+29])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[184,6819+32]..[184,6819+52])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[184,6819+33]..[184,6819+45])
                                                                  Pexp_ident "Array.length" (stdlib/arg.ml[184,6819+33]..[184,6819+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+46]..[184,6819+51])
                                                                      Pexp_apply
                                                                      expression (stdlib/arg.ml[184,6819+46]..[184,6819+47])
Pexp_ident "!" (stdlib/arg.ml[184,6819+46]..[184,6819+47])
                                                                      [
<arg>
Nolabel
  expression (stdlib/arg.ml[184,6819+47]..[184,6819+51])
    Pexp_ident "argv" (stdlib/arg.ml[184,6819+47]..[184,6819+51])
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (stdlib/arg.ml[184,6819+58]..[184,6819+78])
                                                          Pexp_apply
                                                          expression (stdlib/arg.ml[184,6819+58]..[184,6819+78]) ghost
                                                            Pexp_ident "Array.get" (stdlib/arg.ml[184,6819+58]..[184,6819+78]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[184,6819+58]..[184,6819+63])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[184,6819+58]..[184,6819+59])
                                                                  Pexp_ident "!" (stdlib/arg.ml[184,6819+58]..[184,6819+59])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+59]..[184,6819+63])
                                                                      Pexp_ident "argv" (stdlib/arg.ml[184,6819+59]..[184,6819+63])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[184,6819+65]..[184,6819+77])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[184,6819+74]..[184,6819+75])
                                                                  Pexp_ident "+" (stdlib/arg.ml[184,6819+74]..[184,6819+75])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+65]..[184,6819+73])
                                                                      Pexp_apply
                                                                      expression (stdlib/arg.ml[184,6819+65]..[184,6819+66])
Pexp_ident "!" (stdlib/arg.ml[184,6819+65]..[184,6819+66])
                                                                      [
<arg>
Nolabel
  expression (stdlib/arg.ml[184,6819+66]..[184,6819+73])
    Pexp_ident "current" (stdlib/arg.ml[184,6819+66]..[184,6819+73])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[184,6819+76]..[184,6819+77])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                          ]
                                                        Some
                                                          expression (stdlib/arg.ml[185,6898+19]..[185,6898+43])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[185,6898+19]..[185,6898+24])
                                                              Pexp_ident "raise" (stdlib/arg.ml[185,6898+19]..[185,6898+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[185,6898+25]..[185,6898+43])
                                                                  Pexp_construct "Stop" (stdlib/arg.ml[185,6898+26]..[185,6898+30])
                                                                  Some
                                                                    expression (stdlib/arg.ml[185,6898+31]..[185,6898+42])
                                                                      Pexp_construct "Missing" (stdlib/arg.ml[185,6898+32]..[185,6898+39])
                                                                      Some
expression (stdlib/arg.ml[185,6898+40]..[185,6898+41])
  Pexp_ident "s" (stdlib/arg.ml[185,6898+40]..[185,6898+41])
                                                            ]
                                                    <case>
                                                      pattern (stdlib/arg.ml[186,6942+12]..[186,6942+20])
                                                        Ppat_construct "Some" (stdlib/arg.ml[186,6942+12]..[186,6942+16])
                                                        Some
                                                          []
                                                          pattern (stdlib/arg.ml[186,6942+17]..[186,6942+20])
                                                            Ppat_var "arg" (stdlib/arg.ml[186,6942+17]..[186,6942+20])
                                                      expression (stdlib/arg.ml[186,6942+24]..[186,6942+27])
                                                        Pexp_ident "arg" (stdlib/arg.ml[186,6942+24]..[186,6942+27])
                                                  ]
                                          ]
                                          expression (stdlib/arg.ml[188,6981+8]..[278,10139+27])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (stdlib/arg.ml[188,6981+12]..[188,6981+23])
                                                  Ppat_var "consume_arg" (stdlib/arg.ml[188,6981+12]..[188,6981+23])
                                                expression (stdlib/arg.ml[188,6981+24]..[191,7071+24]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (stdlib/arg.ml[188,6981+24]..[188,6981+26])
                                                    Ppat_construct "()" (stdlib/arg.ml[188,6981+24]..[188,6981+26])
                                                    None
                                                  expression (stdlib/arg.ml[189,7010+10]..[191,7071+24])
                                                    Pexp_match
                                                    expression (stdlib/arg.ml[189,7010+16]..[189,7010+22])
                                                      Pexp_ident "follow" (stdlib/arg.ml[189,7010+16]..[189,7010+22])
                                                    [
                                                      <case>
                                                        pattern (stdlib/arg.ml[190,7038+12]..[190,7038+16])
                                                          Ppat_construct "None" (stdlib/arg.ml[190,7038+12]..[190,7038+16])
                                                          None
                                                        expression (stdlib/arg.ml[190,7038+20]..[190,7038+32])
                                                          Pexp_apply
                                                          expression (stdlib/arg.ml[190,7038+20]..[190,7038+24])
                                                            Pexp_ident "incr" (stdlib/arg.ml[190,7038+20]..[190,7038+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (stdlib/arg.ml[190,7038+25]..[190,7038+32])
                                                                Pexp_ident "current" (stdlib/arg.ml[190,7038+25]..[190,7038+32])
                                                          ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[191,7071+12]..[191,7071+18])
                                                          Ppat_construct "Some" (stdlib/arg.ml[191,7071+12]..[191,7071+16])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[191,7071+17]..[191,7071+18])
                                                              Ppat_any
                                                        expression (stdlib/arg.ml[191,7071+22]..[191,7071+24])
                                                          Pexp_construct "()" (stdlib/arg.ml[191,7071+22]..[191,7071+24])
                                                          None
                                                    ]
                                            ]
                                            expression (stdlib/arg.ml[193,7107+8]..[278,10139+27])
                                              Pexp_let Rec
                                              [
                                                <def>
                                                  pattern (stdlib/arg.ml[193,7107+16]..[193,7107+28])
                                                    Ppat_var "treat_action" (stdlib/arg.ml[193,7107+16]..[193,7107+28])
                                                  expression (stdlib/arg.ml[193,7107+31]..[276,10073+54])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (stdlib/arg.ml[194,7147+10]..[194,7147+16])
                                                          Ppat_construct "Unit" (stdlib/arg.ml[194,7147+10]..[194,7147+14])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[194,7147+15]..[194,7147+16])
                                                              Ppat_var "f" (stdlib/arg.ml[194,7147+15]..[194,7147+16])
                                                        expression (stdlib/arg.ml[194,7147+20]..[194,7147+36])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[194,7147+20]..[194,7147+29])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[194,7147+20]..[194,7147+26])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[194,7147+20]..[194,7147+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[194,7147+27]..[194,7147+29])
                                                                  Pexp_construct "()" (stdlib/arg.ml[194,7147+27]..[194,7147+29])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[194,7147+31]..[194,7147+35])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[194,7147+31]..[194,7147+32])
                                                              Pexp_ident "f" (stdlib/arg.ml[194,7147+31]..[194,7147+32])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[194,7147+33]..[194,7147+35])
                                                                  Pexp_construct "()" (stdlib/arg.ml[194,7147+33]..[194,7147+35])
                                                                  None
                                                            ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[195,7184+10]..[195,7184+16])
                                                          Ppat_construct "Bool" (stdlib/arg.ml[195,7184+10]..[195,7184+14])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[195,7184+15]..[195,7184+16])
                                                              Ppat_var "f" (stdlib/arg.ml[195,7184+15]..[195,7184+16])
                                                        expression (stdlib/arg.ml[196,7204+12]..[201,7402+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[196,7204+16]..[196,7204+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[196,7204+16]..[196,7204+19])
                                                              expression (stdlib/arg.ml[196,7204+22]..[196,7204+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[196,7204+22]..[196,7204+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[196,7204+22]..[196,7204+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[196,7204+30]..[196,7204+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[196,7204+30]..[196,7204+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[197,7240+12]..[201,7402+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[197,7240+12]..[200,7385+15])
                                                              Pexp_match
                                                              expression (stdlib/arg.ml[197,7240+24]..[197,7240+46])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[197,7240+24]..[197,7240+42])
                                                                  Pexp_ident "bool_of_string_opt" (stdlib/arg.ml[197,7240+24]..[197,7240+42])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[197,7240+43]..[197,7240+46])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[197,7240+43]..[197,7240+46])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (stdlib/arg.ml[198,7292+14]..[198,7292+18])
                                                                    Ppat_construct "None" (stdlib/arg.ml[198,7292+14]..[198,7292+18])
                                                                    None
                                                                  expression (stdlib/arg.ml[198,7292+22]..[198,7292+64])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[198,7292+22]..[198,7292+27])
                                                                      Pexp_ident "raise" (stdlib/arg.ml[198,7292+22]..[198,7292+27])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[198,7292+28]..[198,7292+64])
  Pexp_construct "Stop" (stdlib/arg.ml[198,7292+29]..[198,7292+33])
  Some
    expression (stdlib/arg.ml[198,7292+34]..[198,7292+63])
      Pexp_construct "Wrong" (stdlib/arg.ml[198,7292+35]..[198,7292+40])
      Some
        expression (stdlib/arg.ml[198,7292+41]..[198,7292+62])
          Pexp_tuple
          [
            expression (stdlib/arg.ml[198,7292+42]..[198,7292+43])
              Pexp_ident "s" (stdlib/arg.ml[198,7292+42]..[198,7292+43])
            expression (stdlib/arg.ml[198,7292+45]..[198,7292+48])
              Pexp_ident "arg" (stdlib/arg.ml[198,7292+45]..[198,7292+48])
            expression (stdlib/arg.ml[198,7292+50]..[198,7292+61])
              Pexp_constant PConst_string("a boolean",(stdlib/arg.ml[198,7292+51]..[198,7292+60]),None)
          ]
                                                                    ]
                                                                <case>
                                                                  pattern (stdlib/arg.ml[199,7357+14]..[199,7357+20])
                                                                    Ppat_construct "Some" (stdlib/arg.ml[199,7357+14]..[199,7357+18])
                                                                    Some
                                                                      []
                                                                      pattern (stdlib/arg.ml[199,7357+19]..[199,7357+20])
Ppat_var "s" (stdlib/arg.ml[199,7357+19]..[199,7357+20])
                                                                  expression (stdlib/arg.ml[199,7357+24]..[199,7357+27])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[199,7357+24]..[199,7357+25])
                                                                      Pexp_ident "f" (stdlib/arg.ml[199,7357+24]..[199,7357+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[199,7357+26]..[199,7357+27])
  Pexp_ident "s" (stdlib/arg.ml[199,7357+26]..[199,7357+27])
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[201,7402+12]..[201,7402+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[201,7402+12]..[201,7402+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[201,7402+12]..[201,7402+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[201,7402+24]..[201,7402+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[201,7402+24]..[201,7402+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[202,7430+10]..[202,7430+15])
                                                          Ppat_construct "Set" (stdlib/arg.ml[202,7430+10]..[202,7430+13])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[202,7430+14]..[202,7430+15])
                                                              Ppat_var "r" (stdlib/arg.ml[202,7430+14]..[202,7430+15])
                                                        expression (stdlib/arg.ml[202,7430+19]..[202,7430+40])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[202,7430+19]..[202,7430+28])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[202,7430+19]..[202,7430+25])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[202,7430+19]..[202,7430+25])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[202,7430+26]..[202,7430+28])
                                                                  Pexp_construct "()" (stdlib/arg.ml[202,7430+26]..[202,7430+28])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[202,7430+30]..[202,7430+39])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[202,7430+32]..[202,7430+34])
                                                              Pexp_ident ":=" (stdlib/arg.ml[202,7430+32]..[202,7430+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[202,7430+30]..[202,7430+31])
                                                                  Pexp_ident "r" (stdlib/arg.ml[202,7430+30]..[202,7430+31])
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[202,7430+35]..[202,7430+39])
                                                                  Pexp_construct "true" (stdlib/arg.ml[202,7430+35]..[202,7430+39])
                                                                  None
                                                            ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[203,7471+10]..[203,7471+17])
                                                          Ppat_construct "Clear" (stdlib/arg.ml[203,7471+10]..[203,7471+15])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[203,7471+16]..[203,7471+17])
                                                              Ppat_var "r" (stdlib/arg.ml[203,7471+16]..[203,7471+17])
                                                        expression (stdlib/arg.ml[203,7471+21]..[203,7471+43])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[203,7471+21]..[203,7471+30])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[203,7471+21]..[203,7471+27])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[203,7471+21]..[203,7471+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[203,7471+28]..[203,7471+30])
                                                                  Pexp_construct "()" (stdlib/arg.ml[203,7471+28]..[203,7471+30])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[203,7471+32]..[203,7471+42])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[203,7471+34]..[203,7471+36])
                                                              Pexp_ident ":=" (stdlib/arg.ml[203,7471+34]..[203,7471+36])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[203,7471+32]..[203,7471+33])
                                                                  Pexp_ident "r" (stdlib/arg.ml[203,7471+32]..[203,7471+33])
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[203,7471+37]..[203,7471+42])
                                                                  Pexp_construct "false" (stdlib/arg.ml[203,7471+37]..[203,7471+42])
                                                                  None
                                                            ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[204,7515+10]..[204,7515+18])
                                                          Ppat_construct "String" (stdlib/arg.ml[204,7515+10]..[204,7515+16])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[204,7515+17]..[204,7515+18])
                                                              Ppat_var "f" (stdlib/arg.ml[204,7515+17]..[204,7515+18])
                                                        expression (stdlib/arg.ml[205,7537+12]..[207,7592+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[205,7537+16]..[205,7537+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[205,7537+16]..[205,7537+19])
                                                              expression (stdlib/arg.ml[205,7537+22]..[205,7537+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[205,7537+22]..[205,7537+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[205,7537+22]..[205,7537+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[205,7537+30]..[205,7537+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[205,7537+30]..[205,7537+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[206,7573+12]..[207,7592+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[206,7573+12]..[206,7573+17])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[206,7573+12]..[206,7573+13])
                                                                Pexp_ident "f" (stdlib/arg.ml[206,7573+12]..[206,7573+13])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[206,7573+14]..[206,7573+17])
                                                                    Pexp_ident "arg" (stdlib/arg.ml[206,7573+14]..[206,7573+17])
                                                              ]
                                                            expression (stdlib/arg.ml[207,7592+12]..[207,7592+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[207,7592+12]..[207,7592+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[207,7592+12]..[207,7592+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[207,7592+24]..[207,7592+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[207,7592+24]..[207,7592+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[208,7620+10]..[208,7620+26])
                                                          Ppat_construct "Symbol" (stdlib/arg.ml[208,7620+10]..[208,7620+16])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[208,7620+17]..[208,7620+26])
                                                              Ppat_tuple
                                                              [
                                                                pattern (stdlib/arg.ml[208,7620+18]..[208,7620+22])
                                                                  Ppat_var "symb" (stdlib/arg.ml[208,7620+18]..[208,7620+22])
                                                                pattern (stdlib/arg.ml[208,7620+24]..[208,7620+25])
                                                                  Ppat_var "f" (stdlib/arg.ml[208,7620+24]..[208,7620+25])
                                                              ]
                                                        expression (stdlib/arg.ml[209,7650+12]..[216,7938+15])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[209,7650+16]..[209,7650+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[209,7650+16]..[209,7650+19])
                                                              expression (stdlib/arg.ml[209,7650+22]..[209,7650+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[209,7650+22]..[209,7650+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[209,7650+22]..[209,7650+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[209,7650+30]..[209,7650+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[209,7650+30]..[209,7650+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[210,7686+12]..[216,7938+15])
                                                            Pexp_ifthenelse
                                                            expression (stdlib/arg.ml[210,7686+15]..[210,7686+32])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[210,7686+15]..[210,7686+23])
                                                                Pexp_ident "List.mem" (stdlib/arg.ml[210,7686+15]..[210,7686+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[210,7686+24]..[210,7686+27])
                                                                    Pexp_ident "arg" (stdlib/arg.ml[210,7686+24]..[210,7686+27])
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[210,7686+28]..[210,7686+32])
                                                                    Pexp_ident "symb" (stdlib/arg.ml[210,7686+28]..[210,7686+32])
                                                              ]
                                                            expression (stdlib/arg.ml[210,7686+38]..[213,7781+15])
                                                              Pexp_sequence
                                                              expression (stdlib/arg.ml[211,7730+14]..[211,7730+19])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[211,7730+14]..[211,7730+15])
                                                                  Pexp_ident "f" (stdlib/arg.ml[211,7730+14]..[211,7730+15])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[211,7730+16]..[211,7730+19])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[211,7730+16]..[211,7730+19])
                                                                ]
                                                              expression (stdlib/arg.ml[212,7751+14]..[212,7751+28])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[212,7751+14]..[212,7751+25])
                                                                  Pexp_ident "consume_arg" (stdlib/arg.ml[212,7751+14]..[212,7751+25])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[212,7751+26]..[212,7751+28])
                                                                      Pexp_construct "()" (stdlib/arg.ml[212,7751+26]..[212,7751+28])
                                                                      None
                                                                ]
                                                            Some
                                                              expression (stdlib/arg.ml[213,7781+21]..[216,7938+15])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[214,7808+14]..[214,7808+19])
                                                                  Pexp_ident "raise" (stdlib/arg.ml[214,7808+14]..[214,7808+19])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[214,7808+20]..[215,7861+76])
                                                                      Pexp_construct "Stop" (stdlib/arg.ml[214,7808+21]..[214,7808+25])
                                                                      Some
expression (stdlib/arg.ml[214,7808+26]..[215,7861+75])
  Pexp_construct "Wrong" (stdlib/arg.ml[214,7808+27]..[214,7808+32])
  Some
    expression (stdlib/arg.ml[214,7808+33]..[215,7861+74])
      Pexp_tuple
      [
        expression (stdlib/arg.ml[214,7808+34]..[214,7808+35])
          Pexp_ident "s" (stdlib/arg.ml[214,7808+34]..[214,7808+35])
        expression (stdlib/arg.ml[214,7808+37]..[214,7808+40])
          Pexp_ident "arg" (stdlib/arg.ml[214,7808+37]..[214,7808+40])
        expression (stdlib/arg.ml[214,7808+42]..[215,7861+73])
          Pexp_apply
          expression (stdlib/arg.ml[215,7861+42]..[215,7861+43])
            Pexp_ident "^" (stdlib/arg.ml[215,7861+42]..[215,7861+43])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[214,7808+42]..[214,7808+52])
                Pexp_constant PConst_string("one of: ",(stdlib/arg.ml[214,7808+43]..[214,7808+51]),None)
            <arg>
            Nolabel
              expression (stdlib/arg.ml[215,7861+44]..[215,7861+73])
                Pexp_apply
                expression (stdlib/arg.ml[215,7861+45]..[215,7861+57])
                  Pexp_ident "make_symlist" (stdlib/arg.ml[215,7861+45]..[215,7861+57])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[215,7861+58]..[215,7861+60])
                      Pexp_constant PConst_string("",(stdlib/arg.ml[215,7861+59]..[215,7861+59]),None)
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[215,7861+61]..[215,7861+64])
                      Pexp_constant PConst_string(" ",(stdlib/arg.ml[215,7861+62]..[215,7861+63]),None)
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[215,7861+65]..[215,7861+67])
                      Pexp_constant PConst_string("",(stdlib/arg.ml[215,7861+66]..[215,7861+66]),None)
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[215,7861+68]..[215,7861+72])
                      Pexp_ident "symb" (stdlib/arg.ml[215,7861+68]..[215,7861+72])
                ]
          ]
      ]
                                                                ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[217,7954+10]..[217,7954+22])
                                                          Ppat_construct "Set_string" (stdlib/arg.ml[217,7954+10]..[217,7954+20])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[217,7954+21]..[217,7954+22])
                                                              Ppat_var "r" (stdlib/arg.ml[217,7954+21]..[217,7954+22])
                                                        expression (stdlib/arg.ml[218,7980+12]..[219,8009+27])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[218,7980+12]..[218,7980+27])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[218,7980+14]..[218,7980+16])
                                                              Pexp_ident ":=" (stdlib/arg.ml[218,7980+14]..[218,7980+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[218,7980+12]..[218,7980+13])
                                                                  Pexp_ident "r" (stdlib/arg.ml[218,7980+12]..[218,7980+13])
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[218,7980+17]..[218,7980+27])
                                                                  Pexp_apply
                                                                  expression (stdlib/arg.ml[218,7980+17]..[218,7980+24])
                                                                    Pexp_ident "get_arg" (stdlib/arg.ml[218,7980+17]..[218,7980+24])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[218,7980+25]..[218,7980+27])
Pexp_construct "()" (stdlib/arg.ml[218,7980+25]..[218,7980+27])
None
                                                                  ]
                                                            ]
                                                          expression (stdlib/arg.ml[219,8009+12]..[219,8009+26])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[219,8009+12]..[219,8009+23])
                                                              Pexp_ident "consume_arg" (stdlib/arg.ml[219,8009+12]..[219,8009+23])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[219,8009+24]..[219,8009+26])
                                                                  Pexp_construct "()" (stdlib/arg.ml[219,8009+24]..[219,8009+26])
                                                                  None
                                                            ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[220,8037+10]..[220,8037+15])
                                                          Ppat_construct "Int" (stdlib/arg.ml[220,8037+10]..[220,8037+13])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[220,8037+14]..[220,8037+15])
                                                              Ppat_var "f" (stdlib/arg.ml[220,8037+14]..[220,8037+15])
                                                        expression (stdlib/arg.ml[221,8056+12]..[226,8254+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[221,8056+16]..[221,8056+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[221,8056+16]..[221,8056+19])
                                                              expression (stdlib/arg.ml[221,8056+22]..[221,8056+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[221,8056+22]..[221,8056+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[221,8056+22]..[221,8056+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[221,8056+30]..[221,8056+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[221,8056+30]..[221,8056+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[222,8092+12]..[226,8254+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[222,8092+12]..[225,8237+15])
                                                              Pexp_match
                                                              expression (stdlib/arg.ml[222,8092+24]..[222,8092+45])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[222,8092+24]..[222,8092+41])
                                                                  Pexp_ident "int_of_string_opt" (stdlib/arg.ml[222,8092+24]..[222,8092+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[222,8092+42]..[222,8092+45])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[222,8092+42]..[222,8092+45])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (stdlib/arg.ml[223,8143+14]..[223,8143+18])
                                                                    Ppat_construct "None" (stdlib/arg.ml[223,8143+14]..[223,8143+18])
                                                                    None
                                                                  expression (stdlib/arg.ml[223,8143+22]..[223,8143+65])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[223,8143+22]..[223,8143+27])
                                                                      Pexp_ident "raise" (stdlib/arg.ml[223,8143+22]..[223,8143+27])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[223,8143+28]..[223,8143+65])
  Pexp_construct "Stop" (stdlib/arg.ml[223,8143+29]..[223,8143+33])
  Some
    expression (stdlib/arg.ml[223,8143+34]..[223,8143+64])
      Pexp_construct "Wrong" (stdlib/arg.ml[223,8143+35]..[223,8143+40])
      Some
        expression (stdlib/arg.ml[223,8143+41]..[223,8143+63])
          Pexp_tuple
          [
            expression (stdlib/arg.ml[223,8143+42]..[223,8143+43])
              Pexp_ident "s" (stdlib/arg.ml[223,8143+42]..[223,8143+43])
            expression (stdlib/arg.ml[223,8143+45]..[223,8143+48])
              Pexp_ident "arg" (stdlib/arg.ml[223,8143+45]..[223,8143+48])
            expression (stdlib/arg.ml[223,8143+50]..[223,8143+62])
              Pexp_constant PConst_string("an integer",(stdlib/arg.ml[223,8143+51]..[223,8143+61]),None)
          ]
                                                                    ]
                                                                <case>
                                                                  pattern (stdlib/arg.ml[224,8209+14]..[224,8209+20])
                                                                    Ppat_construct "Some" (stdlib/arg.ml[224,8209+14]..[224,8209+18])
                                                                    Some
                                                                      []
                                                                      pattern (stdlib/arg.ml[224,8209+19]..[224,8209+20])
Ppat_var "x" (stdlib/arg.ml[224,8209+19]..[224,8209+20])
                                                                  expression (stdlib/arg.ml[224,8209+24]..[224,8209+27])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[224,8209+24]..[224,8209+25])
                                                                      Pexp_ident "f" (stdlib/arg.ml[224,8209+24]..[224,8209+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[224,8209+26]..[224,8209+27])
  Pexp_ident "x" (stdlib/arg.ml[224,8209+26]..[224,8209+27])
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[226,8254+12]..[226,8254+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[226,8254+12]..[226,8254+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[226,8254+12]..[226,8254+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[226,8254+24]..[226,8254+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[226,8254+24]..[226,8254+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[227,8282+10]..[227,8282+19])
                                                          Ppat_construct "Set_int" (stdlib/arg.ml[227,8282+10]..[227,8282+17])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[227,8282+18]..[227,8282+19])
                                                              Ppat_var "r" (stdlib/arg.ml[227,8282+18]..[227,8282+19])
                                                        expression (stdlib/arg.ml[228,8305+12]..[233,8506+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[228,8305+16]..[228,8305+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[228,8305+16]..[228,8305+19])
                                                              expression (stdlib/arg.ml[228,8305+22]..[228,8305+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[228,8305+22]..[228,8305+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[228,8305+22]..[228,8305+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[228,8305+30]..[228,8305+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[228,8305+30]..[228,8305+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[229,8341+12]..[233,8506+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[229,8341+12]..[232,8489+15])
                                                              Pexp_match
                                                              expression (stdlib/arg.ml[229,8341+24]..[229,8341+45])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[229,8341+24]..[229,8341+41])
                                                                  Pexp_ident "int_of_string_opt" (stdlib/arg.ml[229,8341+24]..[229,8341+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[229,8341+42]..[229,8341+45])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[229,8341+42]..[229,8341+45])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (stdlib/arg.ml[230,8392+14]..[230,8392+18])
                                                                    Ppat_construct "None" (stdlib/arg.ml[230,8392+14]..[230,8392+18])
                                                                    None
                                                                  expression (stdlib/arg.ml[230,8392+22]..[230,8392+65])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[230,8392+22]..[230,8392+27])
                                                                      Pexp_ident "raise" (stdlib/arg.ml[230,8392+22]..[230,8392+27])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[230,8392+28]..[230,8392+65])
  Pexp_construct "Stop" (stdlib/arg.ml[230,8392+29]..[230,8392+33])
  Some
    expression (stdlib/arg.ml[230,8392+34]..[230,8392+64])
      Pexp_construct "Wrong" (stdlib/arg.ml[230,8392+35]..[230,8392+40])
      Some
        expression (stdlib/arg.ml[230,8392+41]..[230,8392+63])
          Pexp_tuple
          [
            expression (stdlib/arg.ml[230,8392+42]..[230,8392+43])
              Pexp_ident "s" (stdlib/arg.ml[230,8392+42]..[230,8392+43])
            expression (stdlib/arg.ml[230,8392+45]..[230,8392+48])
              Pexp_ident "arg" (stdlib/arg.ml[230,8392+45]..[230,8392+48])
            expression (stdlib/arg.ml[230,8392+50]..[230,8392+62])
              Pexp_constant PConst_string("an integer",(stdlib/arg.ml[230,8392+51]..[230,8392+61]),None)
          ]
                                                                    ]
                                                                <case>
                                                                  pattern (stdlib/arg.ml[231,8458+14]..[231,8458+20])
                                                                    Ppat_construct "Some" (stdlib/arg.ml[231,8458+14]..[231,8458+18])
                                                                    Some
                                                                      []
                                                                      pattern (stdlib/arg.ml[231,8458+19]..[231,8458+20])
Ppat_var "x" (stdlib/arg.ml[231,8458+19]..[231,8458+20])
                                                                  expression (stdlib/arg.ml[231,8458+24]..[231,8458+30])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[231,8458+26]..[231,8458+28])
                                                                      Pexp_ident ":=" (stdlib/arg.ml[231,8458+26]..[231,8458+28])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[231,8458+24]..[231,8458+25])
  Pexp_ident "r" (stdlib/arg.ml[231,8458+24]..[231,8458+25])
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[231,8458+29]..[231,8458+30])
  Pexp_ident "x" (stdlib/arg.ml[231,8458+29]..[231,8458+30])
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[233,8506+12]..[233,8506+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[233,8506+12]..[233,8506+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[233,8506+12]..[233,8506+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[233,8506+24]..[233,8506+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[233,8506+24]..[233,8506+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[234,8534+10]..[234,8534+17])
                                                          Ppat_construct "Float" (stdlib/arg.ml[234,8534+10]..[234,8534+15])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[234,8534+16]..[234,8534+17])
                                                              Ppat_var "f" (stdlib/arg.ml[234,8534+16]..[234,8534+17])
                                                        expression (stdlib/arg.ml[235,8555+12]..[240,8752+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[235,8555+16]..[235,8555+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[235,8555+16]..[235,8555+19])
                                                              expression (stdlib/arg.ml[235,8555+22]..[235,8555+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[235,8555+22]..[235,8555+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[235,8555+22]..[235,8555+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[235,8555+30]..[235,8555+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[235,8555+30]..[235,8555+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[236,8591+12]..[240,8752+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[236,8591+12]..[239,8735+15])
                                                              Pexp_match
                                                              expression (stdlib/arg.ml[236,8591+24]..[236,8591+47])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[236,8591+24]..[236,8591+43])
                                                                  Pexp_ident "float_of_string_opt" (stdlib/arg.ml[236,8591+24]..[236,8591+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[236,8591+44]..[236,8591+47])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[236,8591+44]..[236,8591+47])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (stdlib/arg.ml[237,8644+14]..[237,8644+18])
                                                                    Ppat_construct "None" (stdlib/arg.ml[237,8644+14]..[237,8644+18])
                                                                    None
                                                                  expression (stdlib/arg.ml[237,8644+22]..[237,8644+62])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[237,8644+22]..[237,8644+27])
                                                                      Pexp_ident "raise" (stdlib/arg.ml[237,8644+22]..[237,8644+27])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[237,8644+28]..[237,8644+62])
  Pexp_construct "Stop" (stdlib/arg.ml[237,8644+29]..[237,8644+33])
  Some
    expression (stdlib/arg.ml[237,8644+34]..[237,8644+61])
      Pexp_construct "Wrong" (stdlib/arg.ml[237,8644+35]..[237,8644+40])
      Some
        expression (stdlib/arg.ml[237,8644+41]..[237,8644+60])
          Pexp_tuple
          [
            expression (stdlib/arg.ml[237,8644+42]..[237,8644+43])
              Pexp_ident "s" (stdlib/arg.ml[237,8644+42]..[237,8644+43])
            expression (stdlib/arg.ml[237,8644+45]..[237,8644+48])
              Pexp_ident "arg" (stdlib/arg.ml[237,8644+45]..[237,8644+48])
            expression (stdlib/arg.ml[237,8644+50]..[237,8644+59])
              Pexp_constant PConst_string("a float",(stdlib/arg.ml[237,8644+51]..[237,8644+58]),None)
          ]
                                                                    ]
                                                                <case>
                                                                  pattern (stdlib/arg.ml[238,8707+14]..[238,8707+20])
                                                                    Ppat_construct "Some" (stdlib/arg.ml[238,8707+14]..[238,8707+18])
                                                                    Some
                                                                      []
                                                                      pattern (stdlib/arg.ml[238,8707+19]..[238,8707+20])
Ppat_var "x" (stdlib/arg.ml[238,8707+19]..[238,8707+20])
                                                                  expression (stdlib/arg.ml[238,8707+24]..[238,8707+27])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[238,8707+24]..[238,8707+25])
                                                                      Pexp_ident "f" (stdlib/arg.ml[238,8707+24]..[238,8707+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[238,8707+26]..[238,8707+27])
  Pexp_ident "x" (stdlib/arg.ml[238,8707+26]..[238,8707+27])
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[240,8752+12]..[240,8752+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[240,8752+12]..[240,8752+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[240,8752+12]..[240,8752+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[240,8752+24]..[240,8752+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[240,8752+24]..[240,8752+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[241,8780+10]..[241,8780+21])
                                                          Ppat_construct "Set_float" (stdlib/arg.ml[241,8780+10]..[241,8780+19])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[241,8780+20]..[241,8780+21])
                                                              Ppat_var "r" (stdlib/arg.ml[241,8780+20]..[241,8780+21])
                                                        expression (stdlib/arg.ml[242,8805+12]..[247,9005+27])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (stdlib/arg.ml[242,8805+16]..[242,8805+19])
                                                                Ppat_var "arg" (stdlib/arg.ml[242,8805+16]..[242,8805+19])
                                                              expression (stdlib/arg.ml[242,8805+22]..[242,8805+32])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[242,8805+22]..[242,8805+29])
                                                                  Pexp_ident "get_arg" (stdlib/arg.ml[242,8805+22]..[242,8805+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[242,8805+30]..[242,8805+32])
                                                                      Pexp_construct "()" (stdlib/arg.ml[242,8805+30]..[242,8805+32])
                                                                      None
                                                                ]
                                                          ]
                                                          expression (stdlib/arg.ml[243,8841+12]..[247,9005+27])
                                                            Pexp_sequence
                                                            expression (stdlib/arg.ml[243,8841+12]..[246,8988+15])
                                                              Pexp_match
                                                              expression (stdlib/arg.ml[243,8841+24]..[243,8841+47])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[243,8841+24]..[243,8841+43])
                                                                  Pexp_ident "float_of_string_opt" (stdlib/arg.ml[243,8841+24]..[243,8841+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[243,8841+44]..[243,8841+47])
                                                                      Pexp_ident "arg" (stdlib/arg.ml[243,8841+44]..[243,8841+47])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (stdlib/arg.ml[244,8894+14]..[244,8894+18])
                                                                    Ppat_construct "None" (stdlib/arg.ml[244,8894+14]..[244,8894+18])
                                                                    None
                                                                  expression (stdlib/arg.ml[244,8894+22]..[244,8894+62])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[244,8894+22]..[244,8894+27])
                                                                      Pexp_ident "raise" (stdlib/arg.ml[244,8894+22]..[244,8894+27])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[244,8894+28]..[244,8894+62])
  Pexp_construct "Stop" (stdlib/arg.ml[244,8894+29]..[244,8894+33])
  Some
    expression (stdlib/arg.ml[244,8894+34]..[244,8894+61])
      Pexp_construct "Wrong" (stdlib/arg.ml[244,8894+35]..[244,8894+40])
      Some
        expression (stdlib/arg.ml[244,8894+41]..[244,8894+60])
          Pexp_tuple
          [
            expression (stdlib/arg.ml[244,8894+42]..[244,8894+43])
              Pexp_ident "s" (stdlib/arg.ml[244,8894+42]..[244,8894+43])
            expression (stdlib/arg.ml[244,8894+45]..[244,8894+48])
              Pexp_ident "arg" (stdlib/arg.ml[244,8894+45]..[244,8894+48])
            expression (stdlib/arg.ml[244,8894+50]..[244,8894+59])
              Pexp_constant PConst_string("a float",(stdlib/arg.ml[244,8894+51]..[244,8894+58]),None)
          ]
                                                                    ]
                                                                <case>
                                                                  pattern (stdlib/arg.ml[245,8957+14]..[245,8957+20])
                                                                    Ppat_construct "Some" (stdlib/arg.ml[245,8957+14]..[245,8957+18])
                                                                    Some
                                                                      []
                                                                      pattern (stdlib/arg.ml[245,8957+19]..[245,8957+20])
Ppat_var "x" (stdlib/arg.ml[245,8957+19]..[245,8957+20])
                                                                  expression (stdlib/arg.ml[245,8957+24]..[245,8957+30])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[245,8957+26]..[245,8957+28])
                                                                      Pexp_ident ":=" (stdlib/arg.ml[245,8957+26]..[245,8957+28])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[245,8957+24]..[245,8957+25])
  Pexp_ident "r" (stdlib/arg.ml[245,8957+24]..[245,8957+25])
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[245,8957+29]..[245,8957+30])
  Pexp_ident "x" (stdlib/arg.ml[245,8957+29]..[245,8957+30])
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[247,9005+12]..[247,9005+26])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[247,9005+12]..[247,9005+23])
                                                                Pexp_ident "consume_arg" (stdlib/arg.ml[247,9005+12]..[247,9005+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[247,9005+24]..[247,9005+26])
                                                                    Pexp_construct "()" (stdlib/arg.ml[247,9005+24]..[247,9005+26])
                                                                    None
                                                              ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[248,9033+10]..[248,9033+21])
                                                          Ppat_construct "Tuple" (stdlib/arg.ml[248,9033+10]..[248,9033+15])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[248,9033+16]..[248,9033+21])
                                                              Ppat_var "specs" (stdlib/arg.ml[248,9033+16]..[248,9033+21])
                                                        expression (stdlib/arg.ml[249,9058+12]..[250,9081+41])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[249,9058+12]..[249,9058+21])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[249,9058+12]..[249,9058+18])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[249,9058+12]..[249,9058+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[249,9058+19]..[249,9058+21])
                                                                  Pexp_construct "()" (stdlib/arg.ml[249,9058+19]..[249,9058+21])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[250,9081+12]..[250,9081+40])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[250,9081+12]..[250,9081+21])
                                                              Pexp_ident "List.iter" (stdlib/arg.ml[250,9081+12]..[250,9081+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[250,9081+22]..[250,9081+34])
                                                                  Pexp_ident "treat_action" (stdlib/arg.ml[250,9081+22]..[250,9081+34])
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[250,9081+35]..[250,9081+40])
                                                                  Pexp_ident "specs" (stdlib/arg.ml[250,9081+35]..[250,9081+40])
                                                            ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[251,9123+10]..[251,9123+16])
                                                          Ppat_construct "Rest" (stdlib/arg.ml[251,9123+10]..[251,9123+14])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[251,9123+15]..[251,9123+16])
                                                              Ppat_var "f" (stdlib/arg.ml[251,9123+15]..[251,9123+16])
                                                        expression (stdlib/arg.ml[252,9143+12]..[256,9291+17])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[252,9143+12]..[252,9143+21])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[252,9143+12]..[252,9143+18])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[252,9143+12]..[252,9143+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[252,9143+19]..[252,9143+21])
                                                                  Pexp_construct "()" (stdlib/arg.ml[252,9143+19]..[252,9143+21])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[253,9166+12]..[256,9291+16])
                                                            Pexp_while
                                                            expression (stdlib/arg.ml[253,9166+18]..[253,9166+53])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[253,9166+27]..[253,9166+28])
                                                                Pexp_ident "<" (stdlib/arg.ml[253,9166+27]..[253,9166+28])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[253,9166+18]..[253,9166+26])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[253,9166+18]..[253,9166+19])
                                                                      Pexp_ident "!" (stdlib/arg.ml[253,9166+18]..[253,9166+19])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[253,9166+19]..[253,9166+26])
  Pexp_ident "current" (stdlib/arg.ml[253,9166+19]..[253,9166+26])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[253,9166+29]..[253,9166+53])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[253,9166+50]..[253,9166+51])
                                                                      Pexp_ident "-" (stdlib/arg.ml[253,9166+50]..[253,9166+51])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[253,9166+29]..[253,9166+49])
  Pexp_apply
  expression (stdlib/arg.ml[253,9166+30]..[253,9166+42])
    Pexp_ident "Array.length" (stdlib/arg.ml[253,9166+30]..[253,9166+42])
  [
    <arg>
    Nolabel
      expression (stdlib/arg.ml[253,9166+43]..[253,9166+48])
        Pexp_apply
        expression (stdlib/arg.ml[253,9166+43]..[253,9166+44])
          Pexp_ident "!" (stdlib/arg.ml[253,9166+43]..[253,9166+44])
        [
          <arg>
          Nolabel
            expression (stdlib/arg.ml[253,9166+44]..[253,9166+48])
              Pexp_ident "argv" (stdlib/arg.ml[253,9166+44]..[253,9166+48])
        ]
  ]
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[253,9166+52]..[253,9166+53])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                              ]
                                                            expression (stdlib/arg.ml[254,9223+14]..[255,9261+29])
                                                              Pexp_sequence
                                                              expression (stdlib/arg.ml[254,9223+14]..[254,9223+36])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[254,9223+14]..[254,9223+15])
                                                                  Pexp_ident "f" (stdlib/arg.ml[254,9223+14]..[254,9223+15])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[254,9223+16]..[254,9223+36])
                                                                      Pexp_apply
                                                                      expression (stdlib/arg.ml[254,9223+16]..[254,9223+36]) ghost
Pexp_ident "Array.get" (stdlib/arg.ml[254,9223+16]..[254,9223+36]) ghost
                                                                      [
<arg>
Nolabel
  expression (stdlib/arg.ml[254,9223+16]..[254,9223+21])
    Pexp_apply
    expression (stdlib/arg.ml[254,9223+16]..[254,9223+17])
      Pexp_ident "!" (stdlib/arg.ml[254,9223+16]..[254,9223+17])
    [
      <arg>
      Nolabel
        expression (stdlib/arg.ml[254,9223+17]..[254,9223+21])
          Pexp_ident "argv" (stdlib/arg.ml[254,9223+17]..[254,9223+21])
    ]
<arg>
Nolabel
  expression (stdlib/arg.ml[254,9223+23]..[254,9223+35])
    Pexp_apply
    expression (stdlib/arg.ml[254,9223+32]..[254,9223+33])
      Pexp_ident "+" (stdlib/arg.ml[254,9223+32]..[254,9223+33])
    [
      <arg>
      Nolabel
        expression (stdlib/arg.ml[254,9223+23]..[254,9223+31])
          Pexp_apply
          expression (stdlib/arg.ml[254,9223+23]..[254,9223+24])
            Pexp_ident "!" (stdlib/arg.ml[254,9223+23]..[254,9223+24])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[254,9223+24]..[254,9223+31])
                Pexp_ident "current" (stdlib/arg.ml[254,9223+24]..[254,9223+31])
          ]
      <arg>
      Nolabel
        expression (stdlib/arg.ml[254,9223+34]..[254,9223+35])
          Pexp_constant PConst_int (1,None)
    ]
                                                                      ]
                                                                ]
                                                              expression (stdlib/arg.ml[255,9261+14]..[255,9261+28])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[255,9261+14]..[255,9261+25])
                                                                  Pexp_ident "consume_arg" (stdlib/arg.ml[255,9261+14]..[255,9261+25])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[255,9261+26]..[255,9261+28])
                                                                      Pexp_construct "()" (stdlib/arg.ml[255,9261+26]..[255,9261+28])
                                                                      None
                                                                ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[257,9309+10]..[257,9309+20])
                                                          Ppat_construct "Rest_all" (stdlib/arg.ml[257,9309+10]..[257,9309+18])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[257,9309+19]..[257,9309+20])
                                                              Ppat_var "f" (stdlib/arg.ml[257,9309+19]..[257,9309+20])
                                                        expression (stdlib/arg.ml[258,9333+12]..[264,9542+29])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[258,9333+12]..[258,9333+21])
                                                            Pexp_apply
                                                            expression (stdlib/arg.ml[258,9333+12]..[258,9333+18])
                                                              Pexp_ident "no_arg" (stdlib/arg.ml[258,9333+12]..[258,9333+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (stdlib/arg.ml[258,9333+19]..[258,9333+21])
                                                                  Pexp_construct "()" (stdlib/arg.ml[258,9333+19]..[258,9333+21])
                                                                  None
                                                            ]
                                                          expression (stdlib/arg.ml[259,9356+12]..[264,9542+29])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (stdlib/arg.ml[259,9356+16]..[259,9356+19])
                                                                  Ppat_var "acc" (stdlib/arg.ml[259,9356+16]..[259,9356+19])
                                                                expression (stdlib/arg.ml[259,9356+22]..[259,9356+28])
                                                                  Pexp_apply
                                                                  expression (stdlib/arg.ml[259,9356+22]..[259,9356+25])
                                                                    Pexp_ident "ref" (stdlib/arg.ml[259,9356+22]..[259,9356+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[259,9356+26]..[259,9356+28])
Pexp_construct "[]" (stdlib/arg.ml[259,9356+26]..[259,9356+28])
None
                                                                  ]
                                                            ]
                                                            expression (stdlib/arg.ml[260,9388+12]..[264,9542+29])
                                                              Pexp_sequence
                                                              expression (stdlib/arg.ml[260,9388+12]..[263,9524+16])
                                                                Pexp_while
                                                                expression (stdlib/arg.ml[260,9388+18]..[260,9388+51])
                                                                  Pexp_apply
                                                                  expression (stdlib/arg.ml[260,9388+27]..[260,9388+28])
                                                                    Pexp_ident "<" (stdlib/arg.ml[260,9388+27]..[260,9388+28])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[260,9388+18]..[260,9388+26])
Pexp_apply
expression (stdlib/arg.ml[260,9388+18]..[260,9388+19])
  Pexp_ident "!" (stdlib/arg.ml[260,9388+18]..[260,9388+19])
[
  <arg>
  Nolabel
    expression (stdlib/arg.ml[260,9388+19]..[260,9388+26])
      Pexp_ident "current" (stdlib/arg.ml[260,9388+19]..[260,9388+26])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[260,9388+29]..[260,9388+51])
Pexp_apply
expression (stdlib/arg.ml[260,9388+48]..[260,9388+49])
  Pexp_ident "-" (stdlib/arg.ml[260,9388+48]..[260,9388+49])
[
  <arg>
  Nolabel
    expression (stdlib/arg.ml[260,9388+29]..[260,9388+47])
      Pexp_apply
      expression (stdlib/arg.ml[260,9388+29]..[260,9388+41])
        Pexp_ident "Array.length" (stdlib/arg.ml[260,9388+29]..[260,9388+41])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[260,9388+42]..[260,9388+47])
            Pexp_apply
            expression (stdlib/arg.ml[260,9388+42]..[260,9388+43])
              Pexp_ident "!" (stdlib/arg.ml[260,9388+42]..[260,9388+43])
            [
              <arg>
              Nolabel
                expression (stdlib/arg.ml[260,9388+43]..[260,9388+47])
                  Pexp_ident "argv" (stdlib/arg.ml[260,9388+43]..[260,9388+47])
            ]
      ]
  <arg>
  Nolabel
    expression (stdlib/arg.ml[260,9388+50]..[260,9388+51])
      Pexp_constant PConst_int (1,None)
]
                                                                  ]
                                                                expression (stdlib/arg.ml[261,9443+14]..[262,9494+29])
                                                                  Pexp_sequence
                                                                  expression (stdlib/arg.ml[261,9443+14]..[261,9443+49])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[261,9443+18]..[261,9443+20])
                                                                      Pexp_ident ":=" (stdlib/arg.ml[261,9443+18]..[261,9443+20])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[261,9443+14]..[261,9443+17])
  Pexp_ident "acc" (stdlib/arg.ml[261,9443+14]..[261,9443+17])
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[261,9443+21]..[261,9443+49])
  Pexp_construct "::" (stdlib/arg.ml[261,9443+42]..[261,9443+44])
  Some
    expression (stdlib/arg.ml[261,9443+21]..[261,9443+49]) ghost
      Pexp_tuple
      [
        expression (stdlib/arg.ml[261,9443+21]..[261,9443+41])
          Pexp_apply
          expression (stdlib/arg.ml[261,9443+21]..[261,9443+41]) ghost
            Pexp_ident "Array.get" (stdlib/arg.ml[261,9443+21]..[261,9443+41]) ghost
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[261,9443+21]..[261,9443+26])
                Pexp_apply
                expression (stdlib/arg.ml[261,9443+21]..[261,9443+22])
                  Pexp_ident "!" (stdlib/arg.ml[261,9443+21]..[261,9443+22])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[261,9443+22]..[261,9443+26])
                      Pexp_ident "argv" (stdlib/arg.ml[261,9443+22]..[261,9443+26])
                ]
            <arg>
            Nolabel
              expression (stdlib/arg.ml[261,9443+28]..[261,9443+40])
                Pexp_apply
                expression (stdlib/arg.ml[261,9443+37]..[261,9443+38])
                  Pexp_ident "+" (stdlib/arg.ml[261,9443+37]..[261,9443+38])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[261,9443+28]..[261,9443+36])
                      Pexp_apply
                      expression (stdlib/arg.ml[261,9443+28]..[261,9443+29])
                        Pexp_ident "!" (stdlib/arg.ml[261,9443+28]..[261,9443+29])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[261,9443+29]..[261,9443+36])
                            Pexp_ident "current" (stdlib/arg.ml[261,9443+29]..[261,9443+36])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[261,9443+39]..[261,9443+40])
                      Pexp_constant PConst_int (1,None)
                ]
          ]
        expression (stdlib/arg.ml[261,9443+45]..[261,9443+49])
          Pexp_apply
          expression (stdlib/arg.ml[261,9443+45]..[261,9443+46])
            Pexp_ident "!" (stdlib/arg.ml[261,9443+45]..[261,9443+46])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[261,9443+46]..[261,9443+49])
                Pexp_ident "acc" (stdlib/arg.ml[261,9443+46]..[261,9443+49])
          ]
      ]
                                                                    ]
                                                                  expression (stdlib/arg.ml[262,9494+14]..[262,9494+28])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[262,9494+14]..[262,9494+25])
                                                                      Pexp_ident "consume_arg" (stdlib/arg.ml[262,9494+14]..[262,9494+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[262,9494+26]..[262,9494+28])
  Pexp_construct "()" (stdlib/arg.ml[262,9494+26]..[262,9494+28])
  None
                                                                    ]
                                                              expression (stdlib/arg.ml[264,9542+12]..[264,9542+29])
                                                                Pexp_apply
                                                                expression (stdlib/arg.ml[264,9542+12]..[264,9542+13])
                                                                  Pexp_ident "f" (stdlib/arg.ml[264,9542+12]..[264,9542+13])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (stdlib/arg.ml[264,9542+14]..[264,9542+29])
                                                                      Pexp_apply
                                                                      expression (stdlib/arg.ml[264,9542+15]..[264,9542+23])
Pexp_ident "List.rev" (stdlib/arg.ml[264,9542+15]..[264,9542+23])
                                                                      [
<arg>
Nolabel
  expression (stdlib/arg.ml[264,9542+24]..[264,9542+28])
    Pexp_apply
    expression (stdlib/arg.ml[264,9542+24]..[264,9542+25])
      Pexp_ident "!" (stdlib/arg.ml[264,9542+24]..[264,9542+25])
    [
      <arg>
      Nolabel
        expression (stdlib/arg.ml[264,9542+25]..[264,9542+28])
          Pexp_ident "acc" (stdlib/arg.ml[264,9542+25]..[264,9542+28])
    ]
                                                                      ]
                                                                ]
                                                      <case>
                                                        pattern (stdlib/arg.ml[265,9572+10]..[265,9572+18])
                                                          Ppat_construct "Expand" (stdlib/arg.ml[265,9572+10]..[265,9572+16])
                                                          Some
                                                            []
                                                            pattern (stdlib/arg.ml[265,9572+17]..[265,9572+18])
                                                              Ppat_var "f" (stdlib/arg.ml[265,9572+17]..[265,9572+18])
                                                        expression (stdlib/arg.ml[266,9594+12]..[276,10073+54])
                                                          Pexp_sequence
                                                          expression (stdlib/arg.ml[266,9594+12]..[268,9707+74])
                                                            Pexp_ifthenelse
                                                            expression (stdlib/arg.ml[266,9594+15]..[266,9594+31])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[266,9594+15]..[266,9594+18])
                                                                Pexp_ident "not" (stdlib/arg.ml[266,9594+15]..[266,9594+18])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[266,9594+19]..[266,9594+31])
                                                                    Pexp_ident "allow_expand" (stdlib/arg.ml[266,9594+19]..[266,9594+31])
                                                              ]
                                                            expression (stdlib/arg.ml[267,9631+14]..[268,9707+74])
                                                              Pexp_apply
                                                              expression (stdlib/arg.ml[267,9631+14]..[267,9631+19])
                                                                Pexp_ident "raise" (stdlib/arg.ml[267,9631+14]..[267,9631+19])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/arg.ml[267,9631+20]..[268,9707+74])
                                                                    Pexp_construct "Invalid_argument" (stdlib/arg.ml[267,9631+21]..[267,9631+37])
                                                                    Some
                                                                      expression (stdlib/arg.ml[267,9631+38]..[268,9707+73])
Pexp_constant PConst_string("Arg.Expand is is only allowed with Arg.parse_and_expand_argv_dynamic",(stdlib/arg.ml[267,9631+39]..[268,9707+72]),None)
                                                              ]
                                                            None
                                                          expression (stdlib/arg.ml[269,9783+12]..[276,10073+54])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (stdlib/arg.ml[269,9783+16]..[269,9783+19])
                                                                  Ppat_var "arg" (stdlib/arg.ml[269,9783+16]..[269,9783+19])
                                                                expression (stdlib/arg.ml[269,9783+22]..[269,9783+32])
                                                                  Pexp_apply
                                                                  expression (stdlib/arg.ml[269,9783+22]..[269,9783+29])
                                                                    Pexp_ident "get_arg" (stdlib/arg.ml[269,9783+22]..[269,9783+29])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[269,9783+30]..[269,9783+32])
Pexp_construct "()" (stdlib/arg.ml[269,9783+30]..[269,9783+32])
None
                                                                  ]
                                                            ]
                                                            expression (stdlib/arg.ml[270,9819+12]..[276,10073+54])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (stdlib/arg.ml[270,9819+16]..[270,9819+22])
                                                                    Ppat_var "newarg" (stdlib/arg.ml[270,9819+16]..[270,9819+22])
                                                                  expression (stdlib/arg.ml[270,9819+25]..[270,9819+30])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[270,9819+25]..[270,9819+26])
                                                                      Pexp_ident "f" (stdlib/arg.ml[270,9819+25]..[270,9819+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[270,9819+27]..[270,9819+30])
  Pexp_ident "arg" (stdlib/arg.ml[270,9819+27]..[270,9819+30])
                                                                    ]
                                                              ]
                                                              expression (stdlib/arg.ml[271,9853+12]..[276,10073+54])
                                                                Pexp_sequence
                                                                expression (stdlib/arg.ml[271,9853+12]..[271,9853+26])
                                                                  Pexp_apply
                                                                  expression (stdlib/arg.ml[271,9853+12]..[271,9853+23])
                                                                    Pexp_ident "consume_arg" (stdlib/arg.ml[271,9853+12]..[271,9853+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (stdlib/arg.ml[271,9853+24]..[271,9853+26])
Pexp_construct "()" (stdlib/arg.ml[271,9853+24]..[271,9853+26])
None
                                                                  ]
                                                                expression (stdlib/arg.ml[272,9881+12]..[276,10073+54])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (stdlib/arg.ml[272,9881+16]..[272,9881+22])
Ppat_var "before" (stdlib/arg.ml[272,9881+16]..[272,9881+22])
                                                                      expression (stdlib/arg.ml[272,9881+25]..[272,9881+57])
Pexp_apply
expression (stdlib/arg.ml[272,9881+25]..[272,9881+34])
  Pexp_ident "Array.sub" (stdlib/arg.ml[272,9881+25]..[272,9881+34])
[
  <arg>
  Nolabel
    expression (stdlib/arg.ml[272,9881+35]..[272,9881+40])
      Pexp_apply
      expression (stdlib/arg.ml[272,9881+35]..[272,9881+36])
        Pexp_ident "!" (stdlib/arg.ml[272,9881+35]..[272,9881+36])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[272,9881+36]..[272,9881+40])
            Pexp_ident "argv" (stdlib/arg.ml[272,9881+36]..[272,9881+40])
      ]
  <arg>
  Nolabel
    expression (stdlib/arg.ml[272,9881+41]..[272,9881+42])
      Pexp_constant PConst_int (0,None)
  <arg>
  Nolabel
    expression (stdlib/arg.ml[272,9881+43]..[272,9881+57])
      Pexp_apply
      expression (stdlib/arg.ml[272,9881+53]..[272,9881+54])
        Pexp_ident "+" (stdlib/arg.ml[272,9881+53]..[272,9881+54])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[272,9881+44]..[272,9881+52])
            Pexp_apply
            expression (stdlib/arg.ml[272,9881+44]..[272,9881+45])
              Pexp_ident "!" (stdlib/arg.ml[272,9881+44]..[272,9881+45])
            [
              <arg>
              Nolabel
                expression (stdlib/arg.ml[272,9881+45]..[272,9881+52])
                  Pexp_ident "current" (stdlib/arg.ml[272,9881+45]..[272,9881+52])
            ]
        <arg>
        Nolabel
          expression (stdlib/arg.ml[272,9881+55]..[272,9881+56])
            Pexp_constant PConst_int (1,None)
      ]
]
                                                                    <def>
                                                                      pattern (stdlib/arg.ml[273,9939+16]..[273,9939+21])
Ppat_var "after" (stdlib/arg.ml[273,9939+16]..[273,9939+21])
                                                                      expression (stdlib/arg.ml[274,9963+14]..[275,10008+61])
Pexp_apply
expression (stdlib/arg.ml[274,9963+14]..[274,9963+23])
  Pexp_ident "Array.sub" (stdlib/arg.ml[274,9963+14]..[274,9963+23])
[
  <arg>
  Nolabel
    expression (stdlib/arg.ml[274,9963+24]..[274,9963+29])
      Pexp_apply
      expression (stdlib/arg.ml[274,9963+24]..[274,9963+25])
        Pexp_ident "!" (stdlib/arg.ml[274,9963+24]..[274,9963+25])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[274,9963+25]..[274,9963+29])
            Pexp_ident "argv" (stdlib/arg.ml[274,9963+25]..[274,9963+29])
      ]
  <arg>
  Nolabel
    expression (stdlib/arg.ml[274,9963+30]..[274,9963+44])
      Pexp_apply
      expression (stdlib/arg.ml[274,9963+40]..[274,9963+41])
        Pexp_ident "+" (stdlib/arg.ml[274,9963+40]..[274,9963+41])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[274,9963+31]..[274,9963+39])
            Pexp_apply
            expression (stdlib/arg.ml[274,9963+31]..[274,9963+32])
              Pexp_ident "!" (stdlib/arg.ml[274,9963+31]..[274,9963+32])
            [
              <arg>
              Nolabel
                expression (stdlib/arg.ml[274,9963+32]..[274,9963+39])
                  Pexp_ident "current" (stdlib/arg.ml[274,9963+32]..[274,9963+39])
            ]
        <arg>
        Nolabel
          expression (stdlib/arg.ml[274,9963+42]..[274,9963+43])
            Pexp_constant PConst_int (1,None)
      ]
  <arg>
  Nolabel
    expression (stdlib/arg.ml[275,10008+24]..[275,10008+61])
      Pexp_apply
      expression (stdlib/arg.ml[275,10008+57]..[275,10008+58])
        Pexp_ident "-" (stdlib/arg.ml[275,10008+57]..[275,10008+58])
      [
        <arg>
        Nolabel
          expression (stdlib/arg.ml[275,10008+25]..[275,10008+56])
            Pexp_apply
            expression (stdlib/arg.ml[275,10008+46]..[275,10008+47])
              Pexp_ident "-" (stdlib/arg.ml[275,10008+46]..[275,10008+47])
            [
              <arg>
              Nolabel
                expression (stdlib/arg.ml[275,10008+25]..[275,10008+45])
                  Pexp_apply
                  expression (stdlib/arg.ml[275,10008+26]..[275,10008+38])
                    Pexp_ident "Array.length" (stdlib/arg.ml[275,10008+26]..[275,10008+38])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[275,10008+39]..[275,10008+44])
                        Pexp_apply
                        expression (stdlib/arg.ml[275,10008+39]..[275,10008+40])
                          Pexp_ident "!" (stdlib/arg.ml[275,10008+39]..[275,10008+40])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[275,10008+40]..[275,10008+44])
                              Pexp_ident "argv" (stdlib/arg.ml[275,10008+40]..[275,10008+44])
                        ]
                  ]
              <arg>
              Nolabel
                expression (stdlib/arg.ml[275,10008+48]..[275,10008+56])
                  Pexp_apply
                  expression (stdlib/arg.ml[275,10008+48]..[275,10008+49])
                    Pexp_ident "!" (stdlib/arg.ml[275,10008+48]..[275,10008+49])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[275,10008+49]..[275,10008+56])
                        Pexp_ident "current" (stdlib/arg.ml[275,10008+49]..[275,10008+56])
                  ]
            ]
        <arg>
        Nolabel
          expression (stdlib/arg.ml[275,10008+59]..[275,10008+60])
            Pexp_constant PConst_int (1,None)
      ]
]
                                                                  ]
                                                                  expression (stdlib/arg.ml[276,10073+12]..[276,10073+53])
                                                                    Pexp_apply
                                                                    expression (stdlib/arg.ml[276,10073+16]..[276,10073+18])
                                                                      Pexp_ident ":=" (stdlib/arg.ml[276,10073+16]..[276,10073+18])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[276,10073+12]..[276,10073+16])
  Pexp_ident "argv" (stdlib/arg.ml[276,10073+12]..[276,10073+16])
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/arg.ml[276,10073+19]..[276,10073+53])
  Pexp_apply
  expression (stdlib/arg.ml[276,10073+19]..[276,10073+31])
    Pexp_ident "Array.concat" (stdlib/arg.ml[276,10073+19]..[276,10073+31])
  [
    <arg>
    Nolabel
      expression (stdlib/arg.ml[276,10073+32]..[276,10073+53])
        Pexp_construct "::" (stdlib/arg.ml[276,10073+33]..[276,10073+53]) ghost
        Some
          expression (stdlib/arg.ml[276,10073+33]..[276,10073+53]) ghost
            Pexp_tuple
            [
              expression (stdlib/arg.ml[276,10073+33]..[276,10073+39])
                Pexp_ident "before" (stdlib/arg.ml[276,10073+33]..[276,10073+39])
              expression (stdlib/arg.ml[276,10073+40]..[276,10073+53]) ghost
                Pexp_construct "::" (stdlib/arg.ml[276,10073+40]..[276,10073+53]) ghost
                Some
                  expression (stdlib/arg.ml[276,10073+40]..[276,10073+53]) ghost
                    Pexp_tuple
                    [
                      expression (stdlib/arg.ml[276,10073+40]..[276,10073+46])
                        Pexp_ident "newarg" (stdlib/arg.ml[276,10073+40]..[276,10073+46])
                      expression (stdlib/arg.ml[276,10073+47]..[276,10073+53]) ghost
                        Pexp_construct "::" (stdlib/arg.ml[276,10073+47]..[276,10073+53]) ghost
                        Some
                          expression (stdlib/arg.ml[276,10073+47]..[276,10073+53]) ghost
                            Pexp_tuple
                            [
                              expression (stdlib/arg.ml[276,10073+47]..[276,10073+52])
                                Pexp_ident "after" (stdlib/arg.ml[276,10073+47]..[276,10073+52])
                              expression (stdlib/arg.ml[276,10073+52]..[276,10073+53]) ghost
                                Pexp_construct "[]" (stdlib/arg.ml[276,10073+52]..[276,10073+53]) ghost
                                None
                            ]
                    ]
            ]
  ]
                                                                    ]
                                                    ]
                                              ]
                                              expression (stdlib/arg.ml[278,10139+8]..[278,10139+27])
                                                Pexp_apply
                                                expression (stdlib/arg.ml[278,10139+8]..[278,10139+20])
                                                  Pexp_ident "treat_action" (stdlib/arg.ml[278,10139+8]..[278,10139+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/arg.ml[278,10139+21]..[278,10139+27])
                                                      Pexp_ident "action" (stdlib/arg.ml[278,10139+21]..[278,10139+27])
                                                ]
                                    Some
                                      expression (stdlib/arg.ml[279,10171+11]..[279,10171+20])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[279,10171+11]..[279,10171+18])
                                          Pexp_ident "anonfun" (stdlib/arg.ml[279,10171+11]..[279,10171+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[279,10171+19]..[279,10171+20])
                                              Pexp_ident "s" (stdlib/arg.ml[279,10171+19]..[279,10171+20])
                                        ]
                                [
                                  <case>
                                    pattern (stdlib/arg.ml[280,10192+11]..[280,10192+16])
                                      Ppat_construct "Bad" (stdlib/arg.ml[280,10192+11]..[280,10192+14])
                                      Some
                                        []
                                        pattern (stdlib/arg.ml[280,10192+15]..[280,10192+16])
                                          Ppat_var "m" (stdlib/arg.ml[280,10192+15]..[280,10192+16])
                                    expression (stdlib/arg.ml[280,10192+20]..[280,10192+53])
                                      Pexp_apply
                                      expression (stdlib/arg.ml[280,10192+20]..[280,10192+25])
                                        Pexp_ident "raise" (stdlib/arg.ml[280,10192+20]..[280,10192+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[280,10192+26]..[280,10192+53])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[280,10192+27]..[280,10192+40])
                                              Pexp_ident "convert_error" (stdlib/arg.ml[280,10192+27]..[280,10192+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[280,10192+41]..[280,10192+52])
                                                  Pexp_construct "Message" (stdlib/arg.ml[280,10192+42]..[280,10192+49])
                                                  Some
                                                    expression (stdlib/arg.ml[280,10192+50]..[280,10192+51])
                                                      Pexp_ident "m" (stdlib/arg.ml[280,10192+50]..[280,10192+51])
                                            ]
                                      ]
                                  <case>
                                    pattern (stdlib/arg.ml[281,10247+11]..[281,10247+17])
                                      Ppat_construct "Stop" (stdlib/arg.ml[281,10247+11]..[281,10247+15])
                                      Some
                                        []
                                        pattern (stdlib/arg.ml[281,10247+16]..[281,10247+17])
                                          Ppat_var "e" (stdlib/arg.ml[281,10247+16]..[281,10247+17])
                                    expression (stdlib/arg.ml[281,10247+21]..[281,10247+44])
                                      Pexp_apply
                                      expression (stdlib/arg.ml[281,10247+21]..[281,10247+26])
                                        Pexp_ident "raise" (stdlib/arg.ml[281,10247+21]..[281,10247+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[281,10247+27]..[281,10247+44])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[281,10247+28]..[281,10247+41])
                                              Pexp_ident "convert_error" (stdlib/arg.ml[281,10247+28]..[281,10247+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[281,10247+42]..[281,10247+43])
                                                  Pexp_ident "e" (stdlib/arg.ml[281,10247+42]..[281,10247+43])
                                            ]
                                      ]
                                ]
                              expression (stdlib/arg.ml[283,10302+4]..[283,10302+16])
                                Pexp_apply
                                expression (stdlib/arg.ml[283,10302+4]..[283,10302+8])
                                  Pexp_ident "incr" (stdlib/arg.ml[283,10302+4]..[283,10302+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[283,10302+9]..[283,10302+16])
                                      Pexp_ident "current" (stdlib/arg.ml[283,10302+9]..[283,10302+16])
                                ]
    ]
  structure_item (stdlib/arg.ml[286,10327+0]..[287,10400+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[286,10327+4]..[286,10327+33])
          Ppat_var "parse_and_expand_argv_dynamic" (stdlib/arg.ml[286,10327+4]..[286,10327+33])
        expression (stdlib/arg.ml[286,10327+34]..[287,10400+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[286,10327+34]..[286,10327+41])
            Ppat_var "current" (stdlib/arg.ml[286,10327+34]..[286,10327+41])
          expression (stdlib/arg.ml[286,10327+42]..[287,10400+77]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[286,10327+42]..[286,10327+46])
              Ppat_var "argv" (stdlib/arg.ml[286,10327+42]..[286,10327+46])
            expression (stdlib/arg.ml[286,10327+47]..[287,10400+77]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[286,10327+47]..[286,10327+55])
                Ppat_var "speclist" (stdlib/arg.ml[286,10327+47]..[286,10327+55])
              expression (stdlib/arg.ml[286,10327+56]..[287,10400+77]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/arg.ml[286,10327+56]..[286,10327+63])
                  Ppat_var "anonfun" (stdlib/arg.ml[286,10327+56]..[286,10327+63])
                expression (stdlib/arg.ml[286,10327+64]..[287,10400+77]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/arg.ml[286,10327+64]..[286,10327+70])
                    Ppat_var "errmsg" (stdlib/arg.ml[286,10327+64]..[286,10327+70])
                  expression (stdlib/arg.ml[287,10400+2]..[287,10400+77])
                    Pexp_apply
                    expression (stdlib/arg.ml[287,10400+2]..[287,10400+35])
                      Pexp_ident "parse_and_expand_argv_dynamic_aux" (stdlib/arg.ml[287,10400+2]..[287,10400+35])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+36]..[287,10400+40])
                          Pexp_construct "true" (stdlib/arg.ml[287,10400+36]..[287,10400+40])
                          None
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+41]..[287,10400+48])
                          Pexp_ident "current" (stdlib/arg.ml[287,10400+41]..[287,10400+48])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+49]..[287,10400+53])
                          Pexp_ident "argv" (stdlib/arg.ml[287,10400+49]..[287,10400+53])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+54]..[287,10400+62])
                          Pexp_ident "speclist" (stdlib/arg.ml[287,10400+54]..[287,10400+62])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+63]..[287,10400+70])
                          Pexp_ident "anonfun" (stdlib/arg.ml[287,10400+63]..[287,10400+70])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[287,10400+71]..[287,10400+77])
                          Pexp_ident "errmsg" (stdlib/arg.ml[287,10400+71]..[287,10400+77])
                    ]
    ]
  structure_item (stdlib/arg.ml[289,10479+0]..[291,10630+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[289,10479+4]..[289,10479+22])
          Ppat_var "parse_argv_dynamic" (stdlib/arg.ml[289,10479+4]..[289,10479+22])
        expression (stdlib/arg.ml[289,10479+23]..[291,10630+10]) ghost
          Pexp_fun
          Optional "current"
          Some
            expression (stdlib/arg.ml[289,10479+33]..[289,10479+40])
              Pexp_ident "current" (stdlib/arg.ml[289,10479+33]..[289,10479+40])
          pattern (stdlib/arg.ml[289,10479+25]..[289,10479+32])
            Ppat_var "current" (stdlib/arg.ml[289,10479+25]..[289,10479+32])
          expression (stdlib/arg.ml[289,10479+42]..[291,10630+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[289,10479+42]..[289,10479+46])
              Ppat_var "argv" (stdlib/arg.ml[289,10479+42]..[289,10479+46])
            expression (stdlib/arg.ml[289,10479+47]..[291,10630+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[289,10479+47]..[289,10479+55])
                Ppat_var "speclist" (stdlib/arg.ml[289,10479+47]..[289,10479+55])
              expression (stdlib/arg.ml[289,10479+56]..[291,10630+10]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/arg.ml[289,10479+56]..[289,10479+63])
                  Ppat_var "anonfun" (stdlib/arg.ml[289,10479+56]..[289,10479+63])
                expression (stdlib/arg.ml[289,10479+64]..[291,10630+10]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/arg.ml[289,10479+64]..[289,10479+70])
                    Ppat_var "errmsg" (stdlib/arg.ml[289,10479+64]..[289,10479+70])
                  expression (stdlib/arg.ml[290,10552+2]..[291,10630+10])
                    Pexp_apply
                    expression (stdlib/arg.ml[290,10552+2]..[290,10552+35])
                      Pexp_ident "parse_and_expand_argv_dynamic_aux" (stdlib/arg.ml[290,10552+2]..[290,10552+35])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[290,10552+36]..[290,10552+41])
                          Pexp_construct "false" (stdlib/arg.ml[290,10552+36]..[290,10552+41])
                          None
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[290,10552+42]..[290,10552+49])
                          Pexp_ident "current" (stdlib/arg.ml[290,10552+42]..[290,10552+49])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[290,10552+50]..[290,10552+60])
                          Pexp_apply
                          expression (stdlib/arg.ml[290,10552+51]..[290,10552+54])
                            Pexp_ident "ref" (stdlib/arg.ml[290,10552+51]..[290,10552+54])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[290,10552+55]..[290,10552+59])
                                Pexp_ident "argv" (stdlib/arg.ml[290,10552+55]..[290,10552+59])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[290,10552+61]..[290,10552+69])
                          Pexp_ident "speclist" (stdlib/arg.ml[290,10552+61]..[290,10552+69])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[290,10552+70]..[290,10552+77])
                          Pexp_ident "anonfun" (stdlib/arg.ml[290,10552+70]..[290,10552+77])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[291,10630+4]..[291,10630+10])
                          Pexp_ident "errmsg" (stdlib/arg.ml[291,10630+4]..[291,10630+10])
                    ]
    ]
  structure_item (stdlib/arg.ml[294,10643+0]..[295,10708+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[294,10643+4]..[294,10643+14])
          Ppat_var "parse_argv" (stdlib/arg.ml[294,10643+4]..[294,10643+14])
        expression (stdlib/arg.ml[294,10643+15]..[295,10708+72]) ghost
          Pexp_fun
          Optional "current"
          Some
            expression (stdlib/arg.ml[294,10643+25]..[294,10643+32])
              Pexp_ident "current" (stdlib/arg.ml[294,10643+25]..[294,10643+32])
          pattern (stdlib/arg.ml[294,10643+17]..[294,10643+24])
            Ppat_var "current" (stdlib/arg.ml[294,10643+17]..[294,10643+24])
          expression (stdlib/arg.ml[294,10643+34]..[295,10708+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[294,10643+34]..[294,10643+38])
              Ppat_var "argv" (stdlib/arg.ml[294,10643+34]..[294,10643+38])
            expression (stdlib/arg.ml[294,10643+39]..[295,10708+72]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[294,10643+39]..[294,10643+47])
                Ppat_var "speclist" (stdlib/arg.ml[294,10643+39]..[294,10643+47])
              expression (stdlib/arg.ml[294,10643+48]..[295,10708+72]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/arg.ml[294,10643+48]..[294,10643+55])
                  Ppat_var "anonfun" (stdlib/arg.ml[294,10643+48]..[294,10643+55])
                expression (stdlib/arg.ml[294,10643+56]..[295,10708+72]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (stdlib/arg.ml[294,10643+56]..[294,10643+62])
                    Ppat_var "errmsg" (stdlib/arg.ml[294,10643+56]..[294,10643+62])
                  expression (stdlib/arg.ml[295,10708+2]..[295,10708+72])
                    Pexp_apply
                    expression (stdlib/arg.ml[295,10708+2]..[295,10708+20])
                      Pexp_ident "parse_argv_dynamic" (stdlib/arg.ml[295,10708+2]..[295,10708+20])
                    [
                      <arg>
                      Labelled "current"
                        expression (stdlib/arg.ml[295,10708+30]..[295,10708+37])
                          Pexp_ident "current" (stdlib/arg.ml[295,10708+30]..[295,10708+37])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[295,10708+38]..[295,10708+42])
                          Pexp_ident "argv" (stdlib/arg.ml[295,10708+38]..[295,10708+42])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[295,10708+43]..[295,10708+57])
                          Pexp_apply
                          expression (stdlib/arg.ml[295,10708+44]..[295,10708+47])
                            Pexp_ident "ref" (stdlib/arg.ml[295,10708+44]..[295,10708+47])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[295,10708+48]..[295,10708+56])
                                Pexp_ident "speclist" (stdlib/arg.ml[295,10708+48]..[295,10708+56])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[295,10708+58]..[295,10708+65])
                          Pexp_ident "anonfun" (stdlib/arg.ml[295,10708+58]..[295,10708+65])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[295,10708+66]..[295,10708+72])
                          Pexp_ident "errmsg" (stdlib/arg.ml[295,10708+66]..[295,10708+72])
                    ]
    ]
  structure_item (stdlib/arg.ml[298,10783+0]..[303,10888+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[298,10783+4]..[298,10783+9])
          Ppat_var "parse" (stdlib/arg.ml[298,10783+4]..[298,10783+9])
        expression (stdlib/arg.ml[298,10783+10]..[303,10888+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[298,10783+10]..[298,10783+11])
            Ppat_var "l" (stdlib/arg.ml[298,10783+10]..[298,10783+11])
          expression (stdlib/arg.ml[298,10783+12]..[303,10888+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[298,10783+12]..[298,10783+13])
              Ppat_var "f" (stdlib/arg.ml[298,10783+12]..[298,10783+13])
            expression (stdlib/arg.ml[298,10783+14]..[303,10888+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[298,10783+14]..[298,10783+17])
                Ppat_var "msg" (stdlib/arg.ml[298,10783+14]..[298,10783+17])
              expression (stdlib/arg.ml[299,10803+2]..[303,10888+39])
                Pexp_try
                expression (stdlib/arg.ml[300,10809+4]..[300,10809+31])
                  Pexp_apply
                  expression (stdlib/arg.ml[300,10809+4]..[300,10809+14])
                    Pexp_ident "parse_argv" (stdlib/arg.ml[300,10809+4]..[300,10809+14])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[300,10809+15]..[300,10809+23])
                        Pexp_ident "Sys.argv" (stdlib/arg.ml[300,10809+15]..[300,10809+23])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[300,10809+24]..[300,10809+25])
                        Pexp_ident "l" (stdlib/arg.ml[300,10809+24]..[300,10809+25])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[300,10809+26]..[300,10809+27])
                        Pexp_ident "f" (stdlib/arg.ml[300,10809+26]..[300,10809+27])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[300,10809+28]..[300,10809+31])
                        Pexp_ident "msg" (stdlib/arg.ml[300,10809+28]..[300,10809+31])
                  ]
                [
                  <case>
                    pattern (stdlib/arg.ml[302,10848+4]..[302,10848+11])
                      Ppat_construct "Bad" (stdlib/arg.ml[302,10848+4]..[302,10848+7])
                      Some
                        []
                        pattern (stdlib/arg.ml[302,10848+8]..[302,10848+11])
                          Ppat_var "msg" (stdlib/arg.ml[302,10848+8]..[302,10848+11])
                    expression (stdlib/arg.ml[302,10848+15]..[302,10848+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[302,10848+15]..[302,10848+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[302,10848+15]..[302,10848+22])
                          Pexp_ident "eprintf" (stdlib/arg.ml[302,10848+15]..[302,10848+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[302,10848+23]..[302,10848+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[302,10848+24]..[302,10848+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[302,10848+28]..[302,10848+31])
                              Pexp_ident "msg" (stdlib/arg.ml[302,10848+28]..[302,10848+31])
                        ]
                      expression (stdlib/arg.ml[302,10848+33]..[302,10848+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[302,10848+33]..[302,10848+37])
                          Pexp_ident "exit" (stdlib/arg.ml[302,10848+33]..[302,10848+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[302,10848+38]..[302,10848+39])
                              Pexp_constant PConst_int (2,None)
                        ]
                  <case>
                    pattern (stdlib/arg.ml[303,10888+4]..[303,10888+12])
                      Ppat_construct "Help" (stdlib/arg.ml[303,10888+4]..[303,10888+8])
                      Some
                        []
                        pattern (stdlib/arg.ml[303,10888+9]..[303,10888+12])
                          Ppat_var "msg" (stdlib/arg.ml[303,10888+9]..[303,10888+12])
                    expression (stdlib/arg.ml[303,10888+16]..[303,10888+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[303,10888+16]..[303,10888+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[303,10888+16]..[303,10888+22])
                          Pexp_ident "printf" (stdlib/arg.ml[303,10888+16]..[303,10888+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[303,10888+23]..[303,10888+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[303,10888+24]..[303,10888+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[303,10888+28]..[303,10888+31])
                              Pexp_ident "msg" (stdlib/arg.ml[303,10888+28]..[303,10888+31])
                        ]
                      expression (stdlib/arg.ml[303,10888+33]..[303,10888+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[303,10888+33]..[303,10888+37])
                          Pexp_ident "exit" (stdlib/arg.ml[303,10888+33]..[303,10888+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[303,10888+38]..[303,10888+39])
                              Pexp_constant PConst_int (0,None)
                        ]
                ]
    ]
  structure_item (stdlib/arg.ml[306,10930+0]..[311,11051+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[306,10930+4]..[306,10930+17])
          Ppat_var "parse_dynamic" (stdlib/arg.ml[306,10930+4]..[306,10930+17])
        expression (stdlib/arg.ml[306,10930+18]..[311,11051+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[306,10930+18]..[306,10930+19])
            Ppat_var "l" (stdlib/arg.ml[306,10930+18]..[306,10930+19])
          expression (stdlib/arg.ml[306,10930+20]..[311,11051+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[306,10930+20]..[306,10930+21])
              Ppat_var "f" (stdlib/arg.ml[306,10930+20]..[306,10930+21])
            expression (stdlib/arg.ml[306,10930+22]..[311,11051+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[306,10930+22]..[306,10930+25])
                Ppat_var "msg" (stdlib/arg.ml[306,10930+22]..[306,10930+25])
              expression (stdlib/arg.ml[307,10958+2]..[311,11051+39])
                Pexp_try
                expression (stdlib/arg.ml[308,10964+4]..[308,10964+39])
                  Pexp_apply
                  expression (stdlib/arg.ml[308,10964+4]..[308,10964+22])
                    Pexp_ident "parse_argv_dynamic" (stdlib/arg.ml[308,10964+4]..[308,10964+22])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[308,10964+23]..[308,10964+31])
                        Pexp_ident "Sys.argv" (stdlib/arg.ml[308,10964+23]..[308,10964+31])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[308,10964+32]..[308,10964+33])
                        Pexp_ident "l" (stdlib/arg.ml[308,10964+32]..[308,10964+33])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[308,10964+34]..[308,10964+35])
                        Pexp_ident "f" (stdlib/arg.ml[308,10964+34]..[308,10964+35])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[308,10964+36]..[308,10964+39])
                        Pexp_ident "msg" (stdlib/arg.ml[308,10964+36]..[308,10964+39])
                  ]
                [
                  <case>
                    pattern (stdlib/arg.ml[310,11011+4]..[310,11011+11])
                      Ppat_construct "Bad" (stdlib/arg.ml[310,11011+4]..[310,11011+7])
                      Some
                        []
                        pattern (stdlib/arg.ml[310,11011+8]..[310,11011+11])
                          Ppat_var "msg" (stdlib/arg.ml[310,11011+8]..[310,11011+11])
                    expression (stdlib/arg.ml[310,11011+15]..[310,11011+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[310,11011+15]..[310,11011+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[310,11011+15]..[310,11011+22])
                          Pexp_ident "eprintf" (stdlib/arg.ml[310,11011+15]..[310,11011+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[310,11011+23]..[310,11011+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[310,11011+24]..[310,11011+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[310,11011+28]..[310,11011+31])
                              Pexp_ident "msg" (stdlib/arg.ml[310,11011+28]..[310,11011+31])
                        ]
                      expression (stdlib/arg.ml[310,11011+33]..[310,11011+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[310,11011+33]..[310,11011+37])
                          Pexp_ident "exit" (stdlib/arg.ml[310,11011+33]..[310,11011+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[310,11011+38]..[310,11011+39])
                              Pexp_constant PConst_int (2,None)
                        ]
                  <case>
                    pattern (stdlib/arg.ml[311,11051+4]..[311,11051+12])
                      Ppat_construct "Help" (stdlib/arg.ml[311,11051+4]..[311,11051+8])
                      Some
                        []
                        pattern (stdlib/arg.ml[311,11051+9]..[311,11051+12])
                          Ppat_var "msg" (stdlib/arg.ml[311,11051+9]..[311,11051+12])
                    expression (stdlib/arg.ml[311,11051+16]..[311,11051+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[311,11051+16]..[311,11051+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[311,11051+16]..[311,11051+22])
                          Pexp_ident "printf" (stdlib/arg.ml[311,11051+16]..[311,11051+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[311,11051+23]..[311,11051+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[311,11051+24]..[311,11051+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[311,11051+28]..[311,11051+31])
                              Pexp_ident "msg" (stdlib/arg.ml[311,11051+28]..[311,11051+31])
                        ]
                      expression (stdlib/arg.ml[311,11051+33]..[311,11051+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[311,11051+33]..[311,11051+37])
                          Pexp_ident "exit" (stdlib/arg.ml[311,11051+33]..[311,11051+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[311,11051+38]..[311,11051+39])
                              Pexp_constant PConst_int (0,None)
                        ]
                ]
    ]
  structure_item (stdlib/arg.ml[313,11092+0]..[321,11321+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[313,11092+4]..[313,11092+16])
          Ppat_var "parse_expand" (stdlib/arg.ml[313,11092+4]..[313,11092+16])
        expression (stdlib/arg.ml[313,11092+17]..[321,11321+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[313,11092+17]..[313,11092+18])
            Ppat_var "l" (stdlib/arg.ml[313,11092+17]..[313,11092+18])
          expression (stdlib/arg.ml[313,11092+19]..[321,11321+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[313,11092+19]..[313,11092+20])
              Ppat_var "f" (stdlib/arg.ml[313,11092+19]..[313,11092+20])
            expression (stdlib/arg.ml[313,11092+21]..[321,11321+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[313,11092+21]..[313,11092+24])
                Ppat_var "msg" (stdlib/arg.ml[313,11092+21]..[313,11092+24])
              expression (stdlib/arg.ml[314,11119+2]..[321,11321+39])
                Pexp_try
                expression (stdlib/arg.ml[315,11125+4]..[318,11216+57])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/arg.ml[315,11125+8]..[315,11125+12])
                        Ppat_var "argv" (stdlib/arg.ml[315,11125+8]..[315,11125+12])
                      expression (stdlib/arg.ml[315,11125+15]..[315,11125+27])
                        Pexp_apply
                        expression (stdlib/arg.ml[315,11125+15]..[315,11125+18])
                          Pexp_ident "ref" (stdlib/arg.ml[315,11125+15]..[315,11125+18])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[315,11125+19]..[315,11125+27])
                              Pexp_ident "Sys.argv" (stdlib/arg.ml[315,11125+19]..[315,11125+27])
                        ]
                  ]
                  expression (stdlib/arg.ml[316,11156+4]..[318,11216+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/arg.ml[316,11156+8]..[316,11156+12])
                          Ppat_var "spec" (stdlib/arg.ml[316,11156+8]..[316,11156+12])
                        expression (stdlib/arg.ml[316,11156+15]..[316,11156+20])
                          Pexp_apply
                          expression (stdlib/arg.ml[316,11156+15]..[316,11156+18])
                            Pexp_ident "ref" (stdlib/arg.ml[316,11156+15]..[316,11156+18])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[316,11156+19]..[316,11156+20])
                                Pexp_ident "l" (stdlib/arg.ml[316,11156+19]..[316,11156+20])
                          ]
                    ]
                    expression (stdlib/arg.ml[317,11180+4]..[318,11216+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/arg.ml[317,11180+8]..[317,11180+15])
                            Ppat_var "current" (stdlib/arg.ml[317,11180+8]..[317,11180+15])
                          expression (stdlib/arg.ml[317,11180+18]..[317,11180+32])
                            Pexp_apply
                            expression (stdlib/arg.ml[317,11180+18]..[317,11180+21])
                              Pexp_ident "ref" (stdlib/arg.ml[317,11180+18]..[317,11180+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[317,11180+22]..[317,11180+32])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[317,11180+23]..[317,11180+24])
                                    Pexp_ident "!" (stdlib/arg.ml[317,11180+23]..[317,11180+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[317,11180+24]..[317,11180+31])
                                        Pexp_ident "current" (stdlib/arg.ml[317,11180+24]..[317,11180+31])
                                  ]
                            ]
                      ]
                      expression (stdlib/arg.ml[318,11216+4]..[318,11216+57])
                        Pexp_apply
                        expression (stdlib/arg.ml[318,11216+4]..[318,11216+33])
                          Pexp_ident "parse_and_expand_argv_dynamic" (stdlib/arg.ml[318,11216+4]..[318,11216+33])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[318,11216+34]..[318,11216+41])
                              Pexp_ident "current" (stdlib/arg.ml[318,11216+34]..[318,11216+41])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[318,11216+42]..[318,11216+46])
                              Pexp_ident "argv" (stdlib/arg.ml[318,11216+42]..[318,11216+46])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[318,11216+47]..[318,11216+51])
                              Pexp_ident "spec" (stdlib/arg.ml[318,11216+47]..[318,11216+51])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[318,11216+52]..[318,11216+53])
                              Pexp_ident "f" (stdlib/arg.ml[318,11216+52]..[318,11216+53])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[318,11216+54]..[318,11216+57])
                              Pexp_ident "msg" (stdlib/arg.ml[318,11216+54]..[318,11216+57])
                        ]
                [
                  <case>
                    pattern (stdlib/arg.ml[320,11281+4]..[320,11281+11])
                      Ppat_construct "Bad" (stdlib/arg.ml[320,11281+4]..[320,11281+7])
                      Some
                        []
                        pattern (stdlib/arg.ml[320,11281+8]..[320,11281+11])
                          Ppat_var "msg" (stdlib/arg.ml[320,11281+8]..[320,11281+11])
                    expression (stdlib/arg.ml[320,11281+15]..[320,11281+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[320,11281+15]..[320,11281+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[320,11281+15]..[320,11281+22])
                          Pexp_ident "eprintf" (stdlib/arg.ml[320,11281+15]..[320,11281+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[320,11281+23]..[320,11281+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[320,11281+24]..[320,11281+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[320,11281+28]..[320,11281+31])
                              Pexp_ident "msg" (stdlib/arg.ml[320,11281+28]..[320,11281+31])
                        ]
                      expression (stdlib/arg.ml[320,11281+33]..[320,11281+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[320,11281+33]..[320,11281+37])
                          Pexp_ident "exit" (stdlib/arg.ml[320,11281+33]..[320,11281+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[320,11281+38]..[320,11281+39])
                              Pexp_constant PConst_int (2,None)
                        ]
                  <case>
                    pattern (stdlib/arg.ml[321,11321+4]..[321,11321+12])
                      Ppat_construct "Help" (stdlib/arg.ml[321,11321+4]..[321,11321+8])
                      Some
                        []
                        pattern (stdlib/arg.ml[321,11321+9]..[321,11321+12])
                          Ppat_var "msg" (stdlib/arg.ml[321,11321+9]..[321,11321+12])
                    expression (stdlib/arg.ml[321,11321+16]..[321,11321+39])
                      Pexp_sequence
                      expression (stdlib/arg.ml[321,11321+16]..[321,11321+31])
                        Pexp_apply
                        expression (stdlib/arg.ml[321,11321+16]..[321,11321+22])
                          Pexp_ident "printf" (stdlib/arg.ml[321,11321+16]..[321,11321+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[321,11321+23]..[321,11321+27])
                              Pexp_constant PConst_string("%s",(stdlib/arg.ml[321,11321+24]..[321,11321+26]),None)
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[321,11321+28]..[321,11321+31])
                              Pexp_ident "msg" (stdlib/arg.ml[321,11321+28]..[321,11321+31])
                        ]
                      expression (stdlib/arg.ml[321,11321+33]..[321,11321+39])
                        Pexp_apply
                        expression (stdlib/arg.ml[321,11321+33]..[321,11321+37])
                          Pexp_ident "exit" (stdlib/arg.ml[321,11321+33]..[321,11321+37])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[321,11321+38]..[321,11321+39])
                              Pexp_constant PConst_int (0,None)
                        ]
                ]
    ]
  structure_item (stdlib/arg.ml[324,11363+0]..[337,11695+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[324,11363+4]..[324,11363+15])
          Ppat_var "second_word" (stdlib/arg.ml[324,11363+4]..[324,11363+15])
        expression (stdlib/arg.ml[324,11363+16]..[337,11695+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[324,11363+16]..[324,11363+17])
            Ppat_var "s" (stdlib/arg.ml[324,11363+16]..[324,11363+17])
          expression (stdlib/arg.ml[325,11383+2]..[337,11695+9])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/arg.ml[325,11383+6]..[325,11383+9])
                  Ppat_var "len" (stdlib/arg.ml[325,11383+6]..[325,11383+9])
                expression (stdlib/arg.ml[325,11383+12]..[325,11383+27])
                  Pexp_apply
                  expression (stdlib/arg.ml[325,11383+12]..[325,11383+25])
                    Pexp_ident "String.length" (stdlib/arg.ml[325,11383+12]..[325,11383+25])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[325,11383+26]..[325,11383+27])
                        Pexp_ident "s" (stdlib/arg.ml[325,11383+26]..[325,11383+27])
                  ]
            ]
            expression (stdlib/arg.ml[326,11414+2]..[337,11695+9])
              Pexp_let Rec
              [
                <def>
                  pattern (stdlib/arg.ml[326,11414+10]..[326,11414+14])
                    Ppat_var "loop" (stdlib/arg.ml[326,11414+10]..[326,11414+14])
                  expression (stdlib/arg.ml[326,11414+15]..[329,11498+10]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/arg.ml[326,11414+15]..[326,11414+16])
                      Ppat_var "n" (stdlib/arg.ml[326,11414+15]..[326,11414+16])
                    expression (stdlib/arg.ml[327,11433+4]..[329,11498+10])
                      Pexp_ifthenelse
                      expression (stdlib/arg.ml[327,11433+7]..[327,11433+15])
                        Pexp_apply
                        expression (stdlib/arg.ml[327,11433+9]..[327,11433+11])
                          Pexp_ident ">=" (stdlib/arg.ml[327,11433+9]..[327,11433+11])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[327,11433+7]..[327,11433+8])
                              Pexp_ident "n" (stdlib/arg.ml[327,11433+7]..[327,11433+8])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[327,11433+12]..[327,11433+15])
                              Pexp_ident "len" (stdlib/arg.ml[327,11433+12]..[327,11433+15])
                        ]
                      expression (stdlib/arg.ml[327,11433+21]..[327,11433+24])
                        Pexp_ident "len" (stdlib/arg.ml[327,11433+21]..[327,11433+24])
                      Some
                        expression (stdlib/arg.ml[328,11458+9]..[329,11498+10])
                          Pexp_ifthenelse
                          expression (stdlib/arg.ml[328,11458+12]..[328,11458+23])
                            Pexp_apply
                            expression (stdlib/arg.ml[328,11458+18]..[328,11458+19])
                              Pexp_ident "=" (stdlib/arg.ml[328,11458+18]..[328,11458+19])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[328,11458+12]..[328,11458+17])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[328,11458+12]..[328,11458+17]) ghost
                                    Pexp_ident "String.get" (stdlib/arg.ml[328,11458+12]..[328,11458+17]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[328,11458+12]..[328,11458+13])
                                        Pexp_ident "s" (stdlib/arg.ml[328,11458+12]..[328,11458+13])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[328,11458+15]..[328,11458+16])
                                        Pexp_ident "n" (stdlib/arg.ml[328,11458+15]..[328,11458+16])
                                  ]
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[328,11458+20]..[328,11458+23])
                                  Pexp_constant PConst_char 20
                            ]
                          expression (stdlib/arg.ml[328,11458+29]..[328,11458+39])
                            Pexp_apply
                            expression (stdlib/arg.ml[328,11458+29]..[328,11458+33])
                              Pexp_ident "loop" (stdlib/arg.ml[328,11458+29]..[328,11458+33])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[328,11458+34]..[328,11458+39])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[328,11458+36]..[328,11458+37])
                                    Pexp_ident "+" (stdlib/arg.ml[328,11458+36]..[328,11458+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[328,11458+35]..[328,11458+36])
                                        Pexp_ident "n" (stdlib/arg.ml[328,11458+35]..[328,11458+36])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[328,11458+37]..[328,11458+38])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                          Some
                            expression (stdlib/arg.ml[329,11498+9]..[329,11498+10])
                              Pexp_ident "n" (stdlib/arg.ml[329,11498+9]..[329,11498+10])
              ]
              expression (stdlib/arg.ml[331,11514+2]..[337,11695+9])
                Pexp_match
                expression (stdlib/arg.ml[331,11514+8]..[331,11514+27])
                  Pexp_apply
                  expression (stdlib/arg.ml[331,11514+8]..[331,11514+20])
                    Pexp_ident "String.index" (stdlib/arg.ml[331,11514+8]..[331,11514+20])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[331,11514+21]..[331,11514+22])
                        Pexp_ident "s" (stdlib/arg.ml[331,11514+21]..[331,11514+22])
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[331,11514+23]..[331,11514+27])
                        Pexp_constant PConst_char 09
                  ]
                [
                  <case>
                    pattern (stdlib/arg.ml[332,11547+4]..[332,11547+5])
                      Ppat_var "n" (stdlib/arg.ml[332,11547+4]..[332,11547+5])
                    expression (stdlib/arg.ml[332,11547+9]..[332,11547+19])
                      Pexp_apply
                      expression (stdlib/arg.ml[332,11547+9]..[332,11547+13])
                        Pexp_ident "loop" (stdlib/arg.ml[332,11547+9]..[332,11547+13])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[332,11547+14]..[332,11547+19])
                            Pexp_apply
                            expression (stdlib/arg.ml[332,11547+16]..[332,11547+17])
                              Pexp_ident "+" (stdlib/arg.ml[332,11547+16]..[332,11547+17])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[332,11547+15]..[332,11547+16])
                                  Pexp_ident "n" (stdlib/arg.ml[332,11547+15]..[332,11547+16])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[332,11547+17]..[332,11547+18])
                                  Pexp_constant PConst_int (1,None)
                            ]
                      ]
                  <case>
                    pattern (stdlib/arg.ml[333,11567+4]..[333,11567+23])
                      Ppat_exception
                      pattern (stdlib/arg.ml[333,11567+14]..[333,11567+23])
                        Ppat_construct "Not_found" (stdlib/arg.ml[333,11567+14]..[333,11567+23])
                        None
                    expression (stdlib/arg.ml[334,11594+6]..[337,11695+9])
                      Pexp_match
                      expression (stdlib/arg.ml[334,11594+18]..[334,11594+36])
                        Pexp_apply
                        expression (stdlib/arg.ml[334,11594+18]..[334,11594+30])
                          Pexp_ident "String.index" (stdlib/arg.ml[334,11594+18]..[334,11594+30])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[334,11594+31]..[334,11594+32])
                              Pexp_ident "s" (stdlib/arg.ml[334,11594+31]..[334,11594+32])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[334,11594+33]..[334,11594+36])
                              Pexp_constant PConst_char 20
                        ]
                      [
                        <case>
                          pattern (stdlib/arg.ml[335,11636+8]..[335,11636+9])
                            Ppat_var "n" (stdlib/arg.ml[335,11636+8]..[335,11636+9])
                          expression (stdlib/arg.ml[335,11636+13]..[335,11636+23])
                            Pexp_apply
                            expression (stdlib/arg.ml[335,11636+13]..[335,11636+17])
                              Pexp_ident "loop" (stdlib/arg.ml[335,11636+13]..[335,11636+17])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[335,11636+18]..[335,11636+23])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[335,11636+20]..[335,11636+21])
                                    Pexp_ident "+" (stdlib/arg.ml[335,11636+20]..[335,11636+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[335,11636+19]..[335,11636+20])
                                        Pexp_ident "n" (stdlib/arg.ml[335,11636+19]..[335,11636+20])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[335,11636+21]..[335,11636+22])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                        <case>
                          pattern (stdlib/arg.ml[336,11660+8]..[336,11660+27])
                            Ppat_exception
                            pattern (stdlib/arg.ml[336,11660+18]..[336,11660+27])
                              Ppat_construct "Not_found" (stdlib/arg.ml[336,11660+18]..[336,11660+27])
                              None
                          expression (stdlib/arg.ml[336,11660+31]..[336,11660+34])
                            Pexp_ident "len" (stdlib/arg.ml[336,11660+31]..[336,11660+34])
                      ]
                ]
    ]
  structure_item (stdlib/arg.ml[340,11707+0]..[343,11812+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[340,11707+4]..[340,11707+15])
          Ppat_var "max_arg_len" (stdlib/arg.ml[340,11707+4]..[340,11707+15])
        expression (stdlib/arg.ml[340,11707+16]..[343,11812+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[340,11707+16]..[340,11707+19])
            Ppat_var "cur" (stdlib/arg.ml[340,11707+16]..[340,11707+19])
          expression (stdlib/arg.ml[340,11707+20]..[343,11812+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[340,11707+20]..[340,11707+36])
              Ppat_tuple
              [
                pattern (stdlib/arg.ml[340,11707+21]..[340,11707+24])
                  Ppat_var "kwd" (stdlib/arg.ml[340,11707+21]..[340,11707+24])
                pattern (stdlib/arg.ml[340,11707+26]..[340,11707+30])
                  Ppat_var "spec" (stdlib/arg.ml[340,11707+26]..[340,11707+30])
                pattern (stdlib/arg.ml[340,11707+32]..[340,11707+35])
                  Ppat_var "doc" (stdlib/arg.ml[340,11707+32]..[340,11707+35])
              ]
            expression (stdlib/arg.ml[341,11746+2]..[343,11812+58])
              Pexp_match
              expression (stdlib/arg.ml[341,11746+8]..[341,11746+12])
                Pexp_ident "spec" (stdlib/arg.ml[341,11746+8]..[341,11746+12])
              [
                <case>
                  pattern (stdlib/arg.ml[342,11764+4]..[342,11764+12])
                    Ppat_construct "Symbol" (stdlib/arg.ml[342,11764+4]..[342,11764+10])
                    Some
                      []
                      pattern (stdlib/arg.ml[342,11764+11]..[342,11764+12])
                        Ppat_any
                  expression (stdlib/arg.ml[342,11764+16]..[342,11764+47])
                    Pexp_apply
                    expression (stdlib/arg.ml[342,11764+16]..[342,11764+23])
                      Pexp_ident "Int.max" (stdlib/arg.ml[342,11764+16]..[342,11764+23])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[342,11764+24]..[342,11764+27])
                          Pexp_ident "cur" (stdlib/arg.ml[342,11764+24]..[342,11764+27])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[342,11764+28]..[342,11764+47])
                          Pexp_apply
                          expression (stdlib/arg.ml[342,11764+29]..[342,11764+42])
                            Pexp_ident "String.length" (stdlib/arg.ml[342,11764+29]..[342,11764+42])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[342,11764+43]..[342,11764+46])
                                Pexp_ident "kwd" (stdlib/arg.ml[342,11764+43]..[342,11764+46])
                          ]
                    ]
                <case>
                  pattern (stdlib/arg.ml[343,11812+4]..[343,11812+5])
                    Ppat_any
                  expression (stdlib/arg.ml[343,11812+9]..[343,11812+58])
                    Pexp_apply
                    expression (stdlib/arg.ml[343,11812+9]..[343,11812+16])
                      Pexp_ident "Int.max" (stdlib/arg.ml[343,11812+9]..[343,11812+16])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[343,11812+17]..[343,11812+20])
                          Pexp_ident "cur" (stdlib/arg.ml[343,11812+17]..[343,11812+20])
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[343,11812+21]..[343,11812+58])
                          Pexp_apply
                          expression (stdlib/arg.ml[343,11812+40]..[343,11812+41])
                            Pexp_ident "+" (stdlib/arg.ml[343,11812+40]..[343,11812+41])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[343,11812+22]..[343,11812+39])
                                Pexp_apply
                                expression (stdlib/arg.ml[343,11812+22]..[343,11812+35])
                                  Pexp_ident "String.length" (stdlib/arg.ml[343,11812+22]..[343,11812+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[343,11812+36]..[343,11812+39])
                                      Pexp_ident "kwd" (stdlib/arg.ml[343,11812+36]..[343,11812+39])
                                ]
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[343,11812+42]..[343,11812+57])
                                Pexp_apply
                                expression (stdlib/arg.ml[343,11812+42]..[343,11812+53])
                                  Pexp_ident "second_word" (stdlib/arg.ml[343,11812+42]..[343,11812+53])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[343,11812+54]..[343,11812+57])
                                      Pexp_ident "doc" (stdlib/arg.ml[343,11812+54]..[343,11812+57])
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (stdlib/arg.ml[346,11873+0]..[348,11927+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[346,11873+4]..[346,11873+23])
          Ppat_var "replace_leading_tab" (stdlib/arg.ml[346,11873+4]..[346,11873+23])
        expression (stdlib/arg.ml[346,11873+24]..[348,11927+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[346,11873+24]..[346,11873+25])
            Ppat_var "s" (stdlib/arg.ml[346,11873+24]..[346,11873+25])
          expression (stdlib/arg.ml[347,11901+2]..[348,11927+75])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/arg.ml[347,11901+6]..[347,11901+10])
                  Ppat_var "seen" (stdlib/arg.ml[347,11901+6]..[347,11901+10])
                expression (stdlib/arg.ml[347,11901+13]..[347,11901+22])
                  Pexp_apply
                  expression (stdlib/arg.ml[347,11901+13]..[347,11901+16])
                    Pexp_ident "ref" (stdlib/arg.ml[347,11901+13]..[347,11901+16])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[347,11901+17]..[347,11901+22])
                        Pexp_construct "false" (stdlib/arg.ml[347,11901+17]..[347,11901+22])
                        None
                  ]
            ]
            expression (stdlib/arg.ml[348,11927+2]..[348,11927+75])
              Pexp_apply
              expression (stdlib/arg.ml[348,11927+2]..[348,11927+12])
                Pexp_ident "String.map" (stdlib/arg.ml[348,11927+2]..[348,11927+12])
              [
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[348,11927+13]..[348,11927+73])
                    Pexp_function
                    [
                      <case>
                        pattern (stdlib/arg.ml[348,11927+23]..[348,11927+27])
                          Ppat_constant PConst_char 09
                        <when>
                          expression (stdlib/arg.ml[348,11927+33]..[348,11927+42])
                            Pexp_apply
                            expression (stdlib/arg.ml[348,11927+33]..[348,11927+36])
                              Pexp_ident "not" (stdlib/arg.ml[348,11927+33]..[348,11927+36])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[348,11927+37]..[348,11927+42])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[348,11927+37]..[348,11927+38])
                                    Pexp_ident "!" (stdlib/arg.ml[348,11927+37]..[348,11927+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[348,11927+38]..[348,11927+42])
                                        Pexp_ident "seen" (stdlib/arg.ml[348,11927+38]..[348,11927+42])
                                  ]
                            ]
                        expression (stdlib/arg.ml[348,11927+46]..[348,11927+63])
                          Pexp_sequence
                          expression (stdlib/arg.ml[348,11927+46]..[348,11927+58])
                            Pexp_apply
                            expression (stdlib/arg.ml[348,11927+51]..[348,11927+53])
                              Pexp_ident ":=" (stdlib/arg.ml[348,11927+51]..[348,11927+53])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[348,11927+46]..[348,11927+50])
                                  Pexp_ident "seen" (stdlib/arg.ml[348,11927+46]..[348,11927+50])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[348,11927+54]..[348,11927+58])
                                  Pexp_construct "true" (stdlib/arg.ml[348,11927+54]..[348,11927+58])
                                  None
                            ]
                          expression (stdlib/arg.ml[348,11927+60]..[348,11927+63])
                            Pexp_constant PConst_char 20
                      <case>
                        pattern (stdlib/arg.ml[348,11927+66]..[348,11927+67])
                          Ppat_var "c" (stdlib/arg.ml[348,11927+66]..[348,11927+67])
                        expression (stdlib/arg.ml[348,11927+71]..[348,11927+72])
                          Pexp_ident "c" (stdlib/arg.ml[348,11927+71]..[348,11927+72])
                    ]
                <arg>
                Nolabel
                  expression (stdlib/arg.ml[348,11927+74]..[348,11927+75])
                    Pexp_ident "s" (stdlib/arg.ml[348,11927+74]..[348,11927+75])
              ]
    ]
  structure_item (stdlib/arg.ml[350,12004+0]..[370,12821+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[350,12004+4]..[350,12004+15])
          Ppat_var "add_padding" (stdlib/arg.ml[350,12004+4]..[350,12004+15])
        expression (stdlib/arg.ml[350,12004+16]..[370,12821+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[350,12004+16]..[350,12004+19])
            Ppat_var "len" (stdlib/arg.ml[350,12004+16]..[350,12004+19])
          expression (stdlib/arg.ml[350,12004+20]..[370,12821+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[350,12004+20]..[350,12004+23])
              Ppat_var "ksd" (stdlib/arg.ml[350,12004+20]..[350,12004+23])
            expression (stdlib/arg.ml[351,12030+2]..[370,12821+45])
              Pexp_match
              expression (stdlib/arg.ml[351,12030+8]..[351,12030+11])
                Pexp_ident "ksd" (stdlib/arg.ml[351,12030+8]..[351,12030+11])
              [
                <case>
                  pattern (stdlib/arg.ml[352,12047+4]..[352,12047+14])
                    Ppat_tuple
                    [
                      pattern (stdlib/arg.ml[352,12047+5]..[352,12047+6])
                        Ppat_any
                      pattern (stdlib/arg.ml[352,12047+8]..[352,12047+9])
                        Ppat_any
                      pattern (stdlib/arg.ml[352,12047+11]..[352,12047+13])
                        Ppat_constant PConst_string("",(stdlib/arg.ml[352,12047+12]..[352,12047+12]),None)
                    ]
                  expression (stdlib/arg.ml[355,12189+6]..[355,12189+9])
                    Pexp_ident "ksd" (stdlib/arg.ml[355,12189+6]..[355,12189+9])
                <case>
                  pattern (stdlib/arg.ml[356,12199+4]..[356,12199+34])
                    Ppat_tuple
                    [
                      pattern (stdlib/arg.ml[356,12199+5]..[356,12199+8])
                        Ppat_var "kwd" (stdlib/arg.ml[356,12199+5]..[356,12199+8])
                      pattern (stdlib/arg.ml[356,12199+10]..[356,12199+28])
                        Ppat_alias "spec" (stdlib/arg.ml[356,12199+23]..[356,12199+27])
                        pattern (stdlib/arg.ml[356,12199+11]..[356,12199+19])
                          Ppat_construct "Symbol" (stdlib/arg.ml[356,12199+11]..[356,12199+17])
                          Some
                            []
                            pattern (stdlib/arg.ml[356,12199+18]..[356,12199+19])
                              Ppat_any
                      pattern (stdlib/arg.ml[356,12199+30]..[356,12199+33])
                        Ppat_var "msg" (stdlib/arg.ml[356,12199+30]..[356,12199+33])
                    ]
                  expression (stdlib/arg.ml[357,12237+6]..[359,12346+58])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/arg.ml[357,12237+10]..[357,12237+16])
                          Ppat_var "cutcol" (stdlib/arg.ml[357,12237+10]..[357,12237+16])
                        expression (stdlib/arg.ml[357,12237+19]..[357,12237+34])
                          Pexp_apply
                          expression (stdlib/arg.ml[357,12237+19]..[357,12237+30])
                            Pexp_ident "second_word" (stdlib/arg.ml[357,12237+19]..[357,12237+30])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[357,12237+31]..[357,12237+34])
                                Pexp_ident "msg" (stdlib/arg.ml[357,12237+31]..[357,12237+34])
                          ]
                    ]
                    expression (stdlib/arg.ml[358,12275+6]..[359,12346+58])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/arg.ml[358,12275+10]..[358,12275+16])
                            Ppat_var "spaces" (stdlib/arg.ml[358,12275+10]..[358,12275+16])
                          expression (stdlib/arg.ml[358,12275+19]..[358,12275+67])
                            Pexp_apply
                            expression (stdlib/arg.ml[358,12275+19]..[358,12275+30])
                              Pexp_ident "String.make" (stdlib/arg.ml[358,12275+19]..[358,12275+30])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[358,12275+31]..[358,12275+63])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[358,12275+59]..[358,12275+60])
                                    Pexp_ident "+" (stdlib/arg.ml[358,12275+59]..[358,12275+60])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[358,12275+32]..[358,12275+58])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[358,12275+33]..[358,12275+40])
                                          Pexp_ident "Int.max" (stdlib/arg.ml[358,12275+33]..[358,12275+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[358,12275+41]..[358,12275+42])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[358,12275+43]..[358,12275+57])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[358,12275+48]..[358,12275+49])
                                                Pexp_ident "-" (stdlib/arg.ml[358,12275+48]..[358,12275+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[358,12275+44]..[358,12275+47])
                                                    Pexp_ident "len" (stdlib/arg.ml[358,12275+44]..[358,12275+47])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[358,12275+50]..[358,12275+56])
                                                    Pexp_ident "cutcol" (stdlib/arg.ml[358,12275+50]..[358,12275+56])
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[358,12275+61]..[358,12275+62])
                                        Pexp_constant PConst_int (3,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[358,12275+64]..[358,12275+67])
                                  Pexp_constant PConst_char 20
                            ]
                      ]
                      expression (stdlib/arg.ml[359,12346+6]..[359,12346+58])
                        Pexp_tuple
                        [
                          expression (stdlib/arg.ml[359,12346+7]..[359,12346+10])
                            Pexp_ident "kwd" (stdlib/arg.ml[359,12346+7]..[359,12346+10])
                          expression (stdlib/arg.ml[359,12346+12]..[359,12346+16])
                            Pexp_ident "spec" (stdlib/arg.ml[359,12346+12]..[359,12346+16])
                          expression (stdlib/arg.ml[359,12346+18]..[359,12346+57])
                            Pexp_apply
                            expression (stdlib/arg.ml[359,12346+23]..[359,12346+24])
                              Pexp_ident "^" (stdlib/arg.ml[359,12346+23]..[359,12346+24])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[359,12346+18]..[359,12346+22])
                                  Pexp_constant PConst_string("\n",(stdlib/arg.ml[359,12346+19]..[359,12346+21]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[359,12346+25]..[359,12346+57])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[359,12346+32]..[359,12346+33])
                                    Pexp_ident "^" (stdlib/arg.ml[359,12346+32]..[359,12346+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[359,12346+25]..[359,12346+31])
                                        Pexp_ident "spaces" (stdlib/arg.ml[359,12346+25]..[359,12346+31])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[359,12346+34]..[359,12346+57])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[359,12346+34]..[359,12346+53])
                                          Pexp_ident "replace_leading_tab" (stdlib/arg.ml[359,12346+34]..[359,12346+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[359,12346+54]..[359,12346+57])
                                              Pexp_ident "msg" (stdlib/arg.ml[359,12346+54]..[359,12346+57])
                                        ]
                                  ]
                            ]
                        ]
                <case>
                  pattern (stdlib/arg.ml[360,12405+4]..[360,12405+20])
                    Ppat_tuple
                    [
                      pattern (stdlib/arg.ml[360,12405+5]..[360,12405+8])
                        Ppat_var "kwd" (stdlib/arg.ml[360,12405+5]..[360,12405+8])
                      pattern (stdlib/arg.ml[360,12405+10]..[360,12405+14])
                        Ppat_var "spec" (stdlib/arg.ml[360,12405+10]..[360,12405+14])
                      pattern (stdlib/arg.ml[360,12405+16]..[360,12405+19])
                        Ppat_var "msg" (stdlib/arg.ml[360,12405+16]..[360,12405+19])
                    ]
                  expression (stdlib/arg.ml[361,12429+6]..[370,12821+45])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/arg.ml[361,12429+10]..[361,12429+16])
                          Ppat_var "cutcol" (stdlib/arg.ml[361,12429+10]..[361,12429+16])
                        expression (stdlib/arg.ml[361,12429+19]..[361,12429+34])
                          Pexp_apply
                          expression (stdlib/arg.ml[361,12429+19]..[361,12429+30])
                            Pexp_ident "second_word" (stdlib/arg.ml[361,12429+19]..[361,12429+30])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[361,12429+31]..[361,12429+34])
                                Pexp_ident "msg" (stdlib/arg.ml[361,12429+31]..[361,12429+34])
                          ]
                    ]
                    expression (stdlib/arg.ml[362,12467+6]..[370,12821+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/arg.ml[362,12467+10]..[362,12467+17])
                            Ppat_var "kwd_len" (stdlib/arg.ml[362,12467+10]..[362,12467+17])
                          expression (stdlib/arg.ml[362,12467+20]..[362,12467+37])
                            Pexp_apply
                            expression (stdlib/arg.ml[362,12467+20]..[362,12467+33])
                              Pexp_ident "String.length" (stdlib/arg.ml[362,12467+20]..[362,12467+33])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[362,12467+34]..[362,12467+37])
                                  Pexp_ident "kwd" (stdlib/arg.ml[362,12467+34]..[362,12467+37])
                            ]
                      ]
                      expression (stdlib/arg.ml[363,12508+6]..[370,12821+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/arg.ml[363,12508+10]..[363,12508+14])
                              Ppat_var "diff" (stdlib/arg.ml[363,12508+10]..[363,12508+14])
                            expression (stdlib/arg.ml[363,12508+17]..[363,12508+39])
                              Pexp_apply
                              expression (stdlib/arg.ml[363,12508+31]..[363,12508+32])
                                Pexp_ident "-" (stdlib/arg.ml[363,12508+31]..[363,12508+32])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[363,12508+17]..[363,12508+30])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[363,12508+21]..[363,12508+22])
                                      Pexp_ident "-" (stdlib/arg.ml[363,12508+21]..[363,12508+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[363,12508+17]..[363,12508+20])
                                          Pexp_ident "len" (stdlib/arg.ml[363,12508+17]..[363,12508+20])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[363,12508+23]..[363,12508+30])
                                          Pexp_ident "kwd_len" (stdlib/arg.ml[363,12508+23]..[363,12508+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[363,12508+33]..[363,12508+39])
                                    Pexp_ident "cutcol" (stdlib/arg.ml[363,12508+33]..[363,12508+39])
                              ]
                        ]
                        expression (stdlib/arg.ml[364,12551+6]..[370,12821+45])
                          Pexp_ifthenelse
                          expression (stdlib/arg.ml[364,12551+9]..[364,12551+18])
                            Pexp_apply
                            expression (stdlib/arg.ml[364,12551+14]..[364,12551+16])
                              Pexp_ident "<=" (stdlib/arg.ml[364,12551+14]..[364,12551+16])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[364,12551+9]..[364,12551+13])
                                  Pexp_ident "diff" (stdlib/arg.ml[364,12551+9]..[364,12551+13])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[364,12551+17]..[364,12551+18])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (stdlib/arg.ml[365,12575+8]..[365,12575+44])
                            Pexp_tuple
                            [
                              expression (stdlib/arg.ml[365,12575+9]..[365,12575+12])
                                Pexp_ident "kwd" (stdlib/arg.ml[365,12575+9]..[365,12575+12])
                              expression (stdlib/arg.ml[365,12575+14]..[365,12575+18])
                                Pexp_ident "spec" (stdlib/arg.ml[365,12575+14]..[365,12575+18])
                              expression (stdlib/arg.ml[365,12575+20]..[365,12575+43])
                                Pexp_apply
                                expression (stdlib/arg.ml[365,12575+20]..[365,12575+39])
                                  Pexp_ident "replace_leading_tab" (stdlib/arg.ml[365,12575+20]..[365,12575+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/arg.ml[365,12575+40]..[365,12575+43])
                                      Pexp_ident "msg" (stdlib/arg.ml[365,12575+40]..[365,12575+43])
                                ]
                            ]
                          Some
                            expression (stdlib/arg.ml[367,12631+8]..[370,12821+45])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (stdlib/arg.ml[367,12631+12]..[367,12631+18])
                                    Ppat_var "spaces" (stdlib/arg.ml[367,12631+12]..[367,12631+18])
                                  expression (stdlib/arg.ml[367,12631+21]..[367,12631+41])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[367,12631+21]..[367,12631+32])
                                      Pexp_ident "String.make" (stdlib/arg.ml[367,12631+21]..[367,12631+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[367,12631+33]..[367,12631+37])
                                          Pexp_ident "diff" (stdlib/arg.ml[367,12631+33]..[367,12631+37])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[367,12631+38]..[367,12631+41])
                                          Pexp_constant PConst_char 20
                                    ]
                              ]
                              expression (stdlib/arg.ml[368,12676+8]..[370,12821+45])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (stdlib/arg.ml[368,12676+12]..[368,12676+18])
                                      Ppat_var "prefix" (stdlib/arg.ml[368,12676+12]..[368,12676+18])
                                    expression (stdlib/arg.ml[368,12676+21]..[368,12676+66])
                                      Pexp_apply
                                      expression (stdlib/arg.ml[368,12676+21]..[368,12676+31])
                                        Pexp_ident "String.sub" (stdlib/arg.ml[368,12676+21]..[368,12676+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[368,12676+32]..[368,12676+57])
                                            Pexp_apply
                                            expression (stdlib/arg.ml[368,12676+33]..[368,12676+52])
                                              Pexp_ident "replace_leading_tab" (stdlib/arg.ml[368,12676+33]..[368,12676+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/arg.ml[368,12676+53]..[368,12676+56])
                                                  Pexp_ident "msg" (stdlib/arg.ml[368,12676+53]..[368,12676+56])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[368,12676+58]..[368,12676+59])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (stdlib/arg.ml[368,12676+60]..[368,12676+66])
                                            Pexp_ident "cutcol" (stdlib/arg.ml[368,12676+60]..[368,12676+66])
                                      ]
                                ]
                                expression (stdlib/arg.ml[369,12746+8]..[370,12821+45])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/arg.ml[369,12746+12]..[369,12746+18])
                                        Ppat_var "suffix" (stdlib/arg.ml[369,12746+12]..[369,12746+18])
                                      expression (stdlib/arg.ml[369,12746+21]..[369,12746+71])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[369,12746+21]..[369,12746+31])
                                          Pexp_ident "String.sub" (stdlib/arg.ml[369,12746+21]..[369,12746+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[369,12746+32]..[369,12746+35])
                                              Pexp_ident "msg" (stdlib/arg.ml[369,12746+32]..[369,12746+35])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[369,12746+36]..[369,12746+42])
                                              Pexp_ident "cutcol" (stdlib/arg.ml[369,12746+36]..[369,12746+42])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[369,12746+43]..[369,12746+71])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[369,12746+62]..[369,12746+63])
                                                Pexp_ident "-" (stdlib/arg.ml[369,12746+62]..[369,12746+63])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[369,12746+44]..[369,12746+61])
                                                    Pexp_apply
                                                    expression (stdlib/arg.ml[369,12746+44]..[369,12746+57])
                                                      Pexp_ident "String.length" (stdlib/arg.ml[369,12746+44]..[369,12746+57])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (stdlib/arg.ml[369,12746+58]..[369,12746+61])
                                                          Pexp_ident "msg" (stdlib/arg.ml[369,12746+58]..[369,12746+61])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[369,12746+64]..[369,12746+70])
                                                    Pexp_ident "cutcol" (stdlib/arg.ml[369,12746+64]..[369,12746+70])
                                              ]
                                        ]
                                  ]
                                  expression (stdlib/arg.ml[370,12821+8]..[370,12821+45])
                                    Pexp_tuple
                                    [
                                      expression (stdlib/arg.ml[370,12821+9]..[370,12821+12])
                                        Pexp_ident "kwd" (stdlib/arg.ml[370,12821+9]..[370,12821+12])
                                      expression (stdlib/arg.ml[370,12821+14]..[370,12821+18])
                                        Pexp_ident "spec" (stdlib/arg.ml[370,12821+14]..[370,12821+18])
                                      expression (stdlib/arg.ml[370,12821+20]..[370,12821+44])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[370,12821+27]..[370,12821+28])
                                          Pexp_ident "^" (stdlib/arg.ml[370,12821+27]..[370,12821+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[370,12821+20]..[370,12821+26])
                                              Pexp_ident "prefix" (stdlib/arg.ml[370,12821+20]..[370,12821+26])
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[370,12821+29]..[370,12821+44])
                                              Pexp_apply
                                              expression (stdlib/arg.ml[370,12821+36]..[370,12821+37])
                                                Pexp_ident "^" (stdlib/arg.ml[370,12821+36]..[370,12821+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[370,12821+29]..[370,12821+35])
                                                    Pexp_ident "spaces" (stdlib/arg.ml[370,12821+29]..[370,12821+35])
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/arg.ml[370,12821+38]..[370,12821+44])
                                                    Pexp_ident "suffix" (stdlib/arg.ml[370,12821+38]..[370,12821+44])
                                              ]
                                        ]
                                    ]
              ]
    ]
  structure_item (stdlib/arg.ml[373,12869+0]..[377,13033+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[373,12869+4]..[373,12869+9])
          Ppat_var "align" (stdlib/arg.ml[373,12869+4]..[373,12869+9])
        expression (stdlib/arg.ml[373,12869+10]..[377,13033+38]) ghost
          Pexp_fun
          Optional "limit"
          Some
            expression (stdlib/arg.ml[373,12869+18]..[373,12869+25])
              Pexp_ident "max_int" (stdlib/arg.ml[373,12869+18]..[373,12869+25])
          pattern (stdlib/arg.ml[373,12869+12]..[373,12869+17])
            Ppat_var "limit" (stdlib/arg.ml[373,12869+12]..[373,12869+17])
          expression (stdlib/arg.ml[373,12869+27]..[377,13033+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[373,12869+27]..[373,12869+35])
              Ppat_var "speclist" (stdlib/arg.ml[373,12869+27]..[373,12869+35])
            expression (stdlib/arg.ml[374,12907+2]..[377,13033+38])
              Pexp_let Nonrec
              [
                <def>
                  pattern (stdlib/arg.ml[374,12907+6]..[374,12907+15])
                    Ppat_var "completed" (stdlib/arg.ml[374,12907+6]..[374,12907+15])
                  expression (stdlib/arg.ml[374,12907+18]..[374,12907+35])
                    Pexp_apply
                    expression (stdlib/arg.ml[374,12907+18]..[374,12907+26])
                      Pexp_ident "add_help" (stdlib/arg.ml[374,12907+18]..[374,12907+26])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[374,12907+27]..[374,12907+35])
                          Pexp_ident "speclist" (stdlib/arg.ml[374,12907+27]..[374,12907+35])
                    ]
              ]
              expression (stdlib/arg.ml[375,12946+2]..[377,13033+38])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/arg.ml[375,12946+6]..[375,12946+9])
                      Ppat_var "len" (stdlib/arg.ml[375,12946+6]..[375,12946+9])
                    expression (stdlib/arg.ml[375,12946+12]..[375,12946+50])
                      Pexp_apply
                      expression (stdlib/arg.ml[375,12946+12]..[375,12946+26])
                        Pexp_ident "List.fold_left" (stdlib/arg.ml[375,12946+12]..[375,12946+26])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[375,12946+27]..[375,12946+38])
                            Pexp_ident "max_arg_len" (stdlib/arg.ml[375,12946+27]..[375,12946+38])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[375,12946+39]..[375,12946+40])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[375,12946+41]..[375,12946+50])
                            Pexp_ident "completed" (stdlib/arg.ml[375,12946+41]..[375,12946+50])
                      ]
                ]
                expression (stdlib/arg.ml[376,13000+2]..[377,13033+38])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/arg.ml[376,13000+6]..[376,13000+9])
                        Ppat_var "len" (stdlib/arg.ml[376,13000+6]..[376,13000+9])
                      expression (stdlib/arg.ml[376,13000+12]..[376,13000+29])
                        Pexp_apply
                        expression (stdlib/arg.ml[376,13000+12]..[376,13000+19])
                          Pexp_ident "Int.min" (stdlib/arg.ml[376,13000+12]..[376,13000+19])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[376,13000+20]..[376,13000+23])
                              Pexp_ident "len" (stdlib/arg.ml[376,13000+20]..[376,13000+23])
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[376,13000+24]..[376,13000+29])
                              Pexp_ident "limit" (stdlib/arg.ml[376,13000+24]..[376,13000+29])
                        ]
                  ]
                  expression (stdlib/arg.ml[377,13033+2]..[377,13033+38])
                    Pexp_apply
                    expression (stdlib/arg.ml[377,13033+2]..[377,13033+10])
                      Pexp_ident "List.map" (stdlib/arg.ml[377,13033+2]..[377,13033+10])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[377,13033+11]..[377,13033+28])
                          Pexp_apply
                          expression (stdlib/arg.ml[377,13033+12]..[377,13033+23])
                            Pexp_ident "add_padding" (stdlib/arg.ml[377,13033+12]..[377,13033+23])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[377,13033+24]..[377,13033+27])
                                Pexp_ident "len" (stdlib/arg.ml[377,13033+24]..[377,13033+27])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[377,13033+29]..[377,13033+38])
                          Pexp_ident "completed" (stdlib/arg.ml[377,13033+29]..[377,13033+38])
                    ]
    ]
  structure_item (stdlib/arg.ml[379,13073+0]..[384,13207+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[379,13073+4]..[379,13073+11])
          Ppat_var "trim_cr" (stdlib/arg.ml[379,13073+4]..[379,13073+11])
        expression (stdlib/arg.ml[379,13073+12]..[384,13207+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[379,13073+12]..[379,13073+13])
            Ppat_var "s" (stdlib/arg.ml[379,13073+12]..[379,13073+13])
          expression (stdlib/arg.ml[380,13089+2]..[384,13207+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/arg.ml[380,13089+6]..[380,13089+9])
                  Ppat_var "len" (stdlib/arg.ml[380,13089+6]..[380,13089+9])
                expression (stdlib/arg.ml[380,13089+12]..[380,13089+27])
                  Pexp_apply
                  expression (stdlib/arg.ml[380,13089+12]..[380,13089+25])
                    Pexp_ident "String.length" (stdlib/arg.ml[380,13089+12]..[380,13089+25])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/arg.ml[380,13089+26]..[380,13089+27])
                        Pexp_ident "s" (stdlib/arg.ml[380,13089+26]..[380,13089+27])
                  ]
            ]
            expression (stdlib/arg.ml[381,13120+2]..[384,13207+5])
              Pexp_ifthenelse
              expression (stdlib/arg.ml[381,13120+5]..[381,13120+45])
                Pexp_apply
                expression (stdlib/arg.ml[381,13120+13]..[381,13120+15])
                  Pexp_ident "&&" (stdlib/arg.ml[381,13120+13]..[381,13120+15])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[381,13120+5]..[381,13120+12])
                      Pexp_apply
                      expression (stdlib/arg.ml[381,13120+9]..[381,13120+10])
                        Pexp_ident ">" (stdlib/arg.ml[381,13120+9]..[381,13120+10])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[381,13120+5]..[381,13120+8])
                            Pexp_ident "len" (stdlib/arg.ml[381,13120+5]..[381,13120+8])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[381,13120+11]..[381,13120+12])
                            Pexp_constant PConst_int (0,None)
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[381,13120+16]..[381,13120+45])
                      Pexp_apply
                      expression (stdlib/arg.ml[381,13120+39]..[381,13120+40])
                        Pexp_ident "=" (stdlib/arg.ml[381,13120+39]..[381,13120+40])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[381,13120+16]..[381,13120+38])
                            Pexp_apply
                            expression (stdlib/arg.ml[381,13120+16]..[381,13120+26])
                              Pexp_ident "String.get" (stdlib/arg.ml[381,13120+16]..[381,13120+26])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[381,13120+27]..[381,13120+28])
                                  Pexp_ident "s" (stdlib/arg.ml[381,13120+27]..[381,13120+28])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[381,13120+29]..[381,13120+38])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[381,13120+34]..[381,13120+35])
                                    Pexp_ident "-" (stdlib/arg.ml[381,13120+34]..[381,13120+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[381,13120+30]..[381,13120+33])
                                        Pexp_ident "len" (stdlib/arg.ml[381,13120+30]..[381,13120+33])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[381,13120+36]..[381,13120+37])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[381,13120+41]..[381,13120+45])
                            Pexp_constant PConst_char 0d
                      ]
                ]
              expression (stdlib/arg.ml[382,13171+4]..[382,13171+28])
                Pexp_apply
                expression (stdlib/arg.ml[382,13171+4]..[382,13171+14])
                  Pexp_ident "String.sub" (stdlib/arg.ml[382,13171+4]..[382,13171+14])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[382,13171+15]..[382,13171+16])
                      Pexp_ident "s" (stdlib/arg.ml[382,13171+15]..[382,13171+16])
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[382,13171+17]..[382,13171+18])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (stdlib/arg.ml[382,13171+19]..[382,13171+28])
                      Pexp_apply
                      expression (stdlib/arg.ml[382,13171+24]..[382,13171+25])
                        Pexp_ident "-" (stdlib/arg.ml[382,13171+24]..[382,13171+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[382,13171+20]..[382,13171+23])
                            Pexp_ident "len" (stdlib/arg.ml[382,13171+20]..[382,13171+23])
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[382,13171+26]..[382,13171+27])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
              Some
                expression (stdlib/arg.ml[384,13207+4]..[384,13207+5])
                  Pexp_ident "s" (stdlib/arg.ml[384,13207+4]..[384,13207+5])
    ]
  structure_item (stdlib/arg.ml[386,13214+0]..[405,13720+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[386,13214+4]..[386,13214+12])
          Ppat_var "read_aux" (stdlib/arg.ml[386,13214+4]..[386,13214+12])
        expression (stdlib/arg.ml[386,13214+13]..[405,13720+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[386,13214+13]..[386,13214+17])
            Ppat_var "trim" (stdlib/arg.ml[386,13214+13]..[386,13214+17])
          expression (stdlib/arg.ml[386,13214+18]..[405,13720+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[386,13214+18]..[386,13214+21])
              Ppat_var "sep" (stdlib/arg.ml[386,13214+18]..[386,13214+21])
            expression (stdlib/arg.ml[386,13214+22]..[405,13720+33]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[386,13214+22]..[386,13214+26])
                Ppat_var "file" (stdlib/arg.ml[386,13214+22]..[386,13214+26])
              expression (stdlib/arg.ml[387,13243+2]..[405,13720+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/arg.ml[387,13243+6]..[387,13243+8])
                      Ppat_var "ic" (stdlib/arg.ml[387,13243+6]..[387,13243+8])
                    expression (stdlib/arg.ml[387,13243+11]..[387,13243+27])
                      Pexp_apply
                      expression (stdlib/arg.ml[387,13243+11]..[387,13243+22])
                        Pexp_ident "open_in_bin" (stdlib/arg.ml[387,13243+11]..[387,13243+22])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[387,13243+23]..[387,13243+27])
                            Pexp_ident "file" (stdlib/arg.ml[387,13243+23]..[387,13243+27])
                      ]
                ]
                expression (stdlib/arg.ml[388,13274+2]..[405,13720+33])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (stdlib/arg.ml[388,13274+6]..[388,13274+9])
                        Ppat_var "buf" (stdlib/arg.ml[388,13274+6]..[388,13274+9])
                      expression (stdlib/arg.ml[388,13274+12]..[388,13274+29])
                        Pexp_apply
                        expression (stdlib/arg.ml[388,13274+12]..[388,13274+25])
                          Pexp_ident "Buffer.create" (stdlib/arg.ml[388,13274+12]..[388,13274+25])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/arg.ml[388,13274+26]..[388,13274+29])
                              Pexp_constant PConst_int (200,None)
                        ]
                  ]
                  expression (stdlib/arg.ml[389,13307+2]..[405,13720+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (stdlib/arg.ml[389,13307+6]..[389,13307+11])
                          Ppat_var "words" (stdlib/arg.ml[389,13307+6]..[389,13307+11])
                        expression (stdlib/arg.ml[389,13307+14]..[389,13307+20])
                          Pexp_apply
                          expression (stdlib/arg.ml[389,13307+14]..[389,13307+17])
                            Pexp_ident "ref" (stdlib/arg.ml[389,13307+14]..[389,13307+17])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/arg.ml[389,13307+18]..[389,13307+20])
                                Pexp_construct "[]" (stdlib/arg.ml[389,13307+18]..[389,13307+20])
                                None
                          ]
                    ]
                    expression (stdlib/arg.ml[390,13331+2]..[405,13720+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (stdlib/arg.ml[390,13331+6]..[390,13331+11])
                            Ppat_var "stash" (stdlib/arg.ml[390,13331+6]..[390,13331+11])
                          expression (stdlib/arg.ml[390,13331+12]..[394,13469+20]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (stdlib/arg.ml[390,13331+12]..[390,13331+14])
                              Ppat_construct "()" (stdlib/arg.ml[390,13331+12]..[390,13331+14])
                              None
                            expression (stdlib/arg.ml[391,13348+4]..[394,13469+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (stdlib/arg.ml[391,13348+8]..[391,13348+12])
                                    Ppat_var "word" (stdlib/arg.ml[391,13348+8]..[391,13348+12])
                                  expression (stdlib/arg.ml[391,13348+15]..[391,13348+34])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[391,13348+15]..[391,13348+30])
                                      Pexp_ident "Buffer.contents" (stdlib/arg.ml[391,13348+15]..[391,13348+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[391,13348+31]..[391,13348+34])
                                          Pexp_ident "buf" (stdlib/arg.ml[391,13348+31]..[391,13348+34])
                                    ]
                              ]
                              expression (stdlib/arg.ml[392,13386+4]..[394,13469+20])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (stdlib/arg.ml[392,13386+8]..[392,13386+12])
                                      Ppat_var "word" (stdlib/arg.ml[392,13386+8]..[392,13386+12])
                                    expression (stdlib/arg.ml[392,13386+15]..[392,13386+50])
                                      Pexp_ifthenelse
                                      expression (stdlib/arg.ml[392,13386+18]..[392,13386+22])
                                        Pexp_ident "trim" (stdlib/arg.ml[392,13386+18]..[392,13386+22])
                                      expression (stdlib/arg.ml[392,13386+28]..[392,13386+40])
                                        Pexp_apply
                                        expression (stdlib/arg.ml[392,13386+28]..[392,13386+35])
                                          Pexp_ident "trim_cr" (stdlib/arg.ml[392,13386+28]..[392,13386+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/arg.ml[392,13386+36]..[392,13386+40])
                                              Pexp_ident "word" (stdlib/arg.ml[392,13386+36]..[392,13386+40])
                                        ]
                                      Some
                                        expression (stdlib/arg.ml[392,13386+46]..[392,13386+50])
                                          Pexp_ident "word" (stdlib/arg.ml[392,13386+46]..[392,13386+50])
                                ]
                                expression (stdlib/arg.ml[393,13440+4]..[394,13469+20])
                                  Pexp_sequence
                                  expression (stdlib/arg.ml[393,13440+4]..[393,13440+27])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[393,13440+10]..[393,13440+12])
                                      Pexp_ident ":=" (stdlib/arg.ml[393,13440+10]..[393,13440+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[393,13440+4]..[393,13440+9])
                                          Pexp_ident "words" (stdlib/arg.ml[393,13440+4]..[393,13440+9])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[393,13440+13]..[393,13440+27])
                                          Pexp_construct "::" (stdlib/arg.ml[393,13440+18]..[393,13440+20])
                                          Some
                                            expression (stdlib/arg.ml[393,13440+13]..[393,13440+27]) ghost
                                              Pexp_tuple
                                              [
                                                expression (stdlib/arg.ml[393,13440+13]..[393,13440+17])
                                                  Pexp_ident "word" (stdlib/arg.ml[393,13440+13]..[393,13440+17])
                                                expression (stdlib/arg.ml[393,13440+21]..[393,13440+27])
                                                  Pexp_apply
                                                  expression (stdlib/arg.ml[393,13440+21]..[393,13440+22])
                                                    Pexp_ident "!" (stdlib/arg.ml[393,13440+21]..[393,13440+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/arg.ml[393,13440+22]..[393,13440+27])
                                                        Pexp_ident "words" (stdlib/arg.ml[393,13440+22]..[393,13440+27])
                                                  ]
                                              ]
                                    ]
                                  expression (stdlib/arg.ml[394,13469+4]..[394,13469+20])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[394,13469+4]..[394,13469+16])
                                      Pexp_ident "Buffer.clear" (stdlib/arg.ml[394,13469+4]..[394,13469+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[394,13469+17]..[394,13469+20])
                                          Pexp_ident "buf" (stdlib/arg.ml[394,13469+17]..[394,13469+20])
                                    ]
                      ]
                      expression (stdlib/arg.ml[396,13495+2]..[405,13720+33])
                        Pexp_sequence
                        expression (stdlib/arg.ml[396,13495+2]..[402,13656+5])
                          Pexp_try
                          expression (stdlib/arg.ml[397,13503+8]..[400,13618+10])
                            Pexp_while
                            expression (stdlib/arg.ml[397,13503+14]..[397,13503+18])
                              Pexp_construct "true" (stdlib/arg.ml[397,13503+14]..[397,13503+18])
                              None
                            expression (stdlib/arg.ml[398,13525+8]..[399,13558+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (stdlib/arg.ml[398,13525+12]..[398,13525+13])
                                    Ppat_var "c" (stdlib/arg.ml[398,13525+12]..[398,13525+13])
                                  expression (stdlib/arg.ml[398,13525+16]..[398,13525+29])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[398,13525+16]..[398,13525+26])
                                      Pexp_ident "input_char" (stdlib/arg.ml[398,13525+16]..[398,13525+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[398,13525+27]..[398,13525+29])
                                          Pexp_ident "ic" (stdlib/arg.ml[398,13525+27]..[398,13525+29])
                                    ]
                              ]
                              expression (stdlib/arg.ml[399,13558+8]..[399,13558+59])
                                Pexp_ifthenelse
                                expression (stdlib/arg.ml[399,13558+11]..[399,13558+18])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[399,13558+13]..[399,13558+14])
                                    Pexp_ident "=" (stdlib/arg.ml[399,13558+13]..[399,13558+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[399,13558+11]..[399,13558+12])
                                        Pexp_ident "c" (stdlib/arg.ml[399,13558+11]..[399,13558+12])
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[399,13558+15]..[399,13558+18])
                                        Pexp_ident "sep" (stdlib/arg.ml[399,13558+15]..[399,13558+18])
                                  ]
                                expression (stdlib/arg.ml[399,13558+24]..[399,13558+32])
                                  Pexp_apply
                                  expression (stdlib/arg.ml[399,13558+24]..[399,13558+29])
                                    Pexp_ident "stash" (stdlib/arg.ml[399,13558+24]..[399,13558+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/arg.ml[399,13558+30]..[399,13558+32])
                                        Pexp_construct "()" (stdlib/arg.ml[399,13558+30]..[399,13558+32])
                                        None
                                  ]
                                Some
                                  expression (stdlib/arg.ml[399,13558+38]..[399,13558+59])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[399,13558+38]..[399,13558+53])
                                      Pexp_ident "Buffer.add_char" (stdlib/arg.ml[399,13558+38]..[399,13558+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[399,13558+54]..[399,13558+57])
                                          Pexp_ident "buf" (stdlib/arg.ml[399,13558+54]..[399,13558+57])
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[399,13558+58]..[399,13558+59])
                                          Pexp_ident "c" (stdlib/arg.ml[399,13558+58]..[399,13558+59])
                                    ]
                          [
                            <case>
                              pattern (stdlib/arg.ml[401,13629+9]..[401,13629+20])
                                Ppat_construct "End_of_file" (stdlib/arg.ml[401,13629+9]..[401,13629+20])
                                None
                              expression (stdlib/arg.ml[401,13629+24]..[401,13629+26])
                                Pexp_construct "()" (stdlib/arg.ml[401,13629+24]..[401,13629+26])
                                None
                          ]
                        expression (stdlib/arg.ml[403,13663+2]..[405,13720+33])
                          Pexp_sequence
                          expression (stdlib/arg.ml[403,13663+2]..[403,13663+40])
                            Pexp_ifthenelse
                            expression (stdlib/arg.ml[403,13663+5]..[403,13663+26])
                              Pexp_apply
                              expression (stdlib/arg.ml[403,13663+23]..[403,13663+24])
                                Pexp_ident ">" (stdlib/arg.ml[403,13663+23]..[403,13663+24])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[403,13663+5]..[403,13663+22])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[403,13663+5]..[403,13663+18])
                                      Pexp_ident "Buffer.length" (stdlib/arg.ml[403,13663+5]..[403,13663+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[403,13663+19]..[403,13663+22])
                                          Pexp_ident "buf" (stdlib/arg.ml[403,13663+19]..[403,13663+22])
                                    ]
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[403,13663+25]..[403,13663+26])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (stdlib/arg.ml[403,13663+32]..[403,13663+40])
                              Pexp_apply
                              expression (stdlib/arg.ml[403,13663+32]..[403,13663+37])
                                Pexp_ident "stash" (stdlib/arg.ml[403,13663+32]..[403,13663+37])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[403,13663+38]..[403,13663+40])
                                    Pexp_construct "()" (stdlib/arg.ml[403,13663+38]..[403,13663+40])
                                    None
                              ]
                            None
                          expression (stdlib/arg.ml[404,13705+2]..[405,13720+33])
                            Pexp_sequence
                            expression (stdlib/arg.ml[404,13705+2]..[404,13705+13])
                              Pexp_apply
                              expression (stdlib/arg.ml[404,13705+2]..[404,13705+10])
                                Pexp_ident "close_in" (stdlib/arg.ml[404,13705+2]..[404,13705+10])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[404,13705+11]..[404,13705+13])
                                    Pexp_ident "ic" (stdlib/arg.ml[404,13705+11]..[404,13705+13])
                              ]
                            expression (stdlib/arg.ml[405,13720+2]..[405,13720+33])
                              Pexp_apply
                              expression (stdlib/arg.ml[405,13720+2]..[405,13720+15])
                                Pexp_ident "Array.of_list" (stdlib/arg.ml[405,13720+2]..[405,13720+15])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/arg.ml[405,13720+16]..[405,13720+33])
                                    Pexp_apply
                                    expression (stdlib/arg.ml[405,13720+17]..[405,13720+25])
                                      Pexp_ident "List.rev" (stdlib/arg.ml[405,13720+17]..[405,13720+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/arg.ml[405,13720+26]..[405,13720+32])
                                          Pexp_apply
                                          expression (stdlib/arg.ml[405,13720+26]..[405,13720+27])
                                            Pexp_ident "!" (stdlib/arg.ml[405,13720+26]..[405,13720+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/arg.ml[405,13720+27]..[405,13720+32])
                                                Pexp_ident "words" (stdlib/arg.ml[405,13720+27]..[405,13720+32])
                                          ]
                                    ]
                              ]
    ]
  structure_item (stdlib/arg.ml[407,13755+0]..[407,13755+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[407,13755+4]..[407,13755+12])
          Ppat_var "read_arg" (stdlib/arg.ml[407,13755+4]..[407,13755+12])
        expression (stdlib/arg.ml[407,13755+15]..[407,13755+33])
          Pexp_apply
          expression (stdlib/arg.ml[407,13755+15]..[407,13755+23])
            Pexp_ident "read_aux" (stdlib/arg.ml[407,13755+15]..[407,13755+23])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[407,13755+24]..[407,13755+28])
                Pexp_construct "true" (stdlib/arg.ml[407,13755+24]..[407,13755+28])
                None
            <arg>
            Nolabel
              expression (stdlib/arg.ml[407,13755+29]..[407,13755+33])
                Pexp_constant PConst_char 0a
          ]
    ]
  structure_item (stdlib/arg.ml[409,13790+0]..[409,13790+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[409,13790+4]..[409,13790+13])
          Ppat_var "read_arg0" (stdlib/arg.ml[409,13790+4]..[409,13790+13])
        expression (stdlib/arg.ml[409,13790+16]..[409,13790+37])
          Pexp_apply
          expression (stdlib/arg.ml[409,13790+16]..[409,13790+24])
            Pexp_ident "read_aux" (stdlib/arg.ml[409,13790+16]..[409,13790+24])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[409,13790+25]..[409,13790+30])
                Pexp_construct "false" (stdlib/arg.ml[409,13790+25]..[409,13790+30])
                None
            <arg>
            Nolabel
              expression (stdlib/arg.ml[409,13790+31]..[409,13790+37])
                Pexp_constant PConst_char 00
          ]
    ]
  structure_item (stdlib/arg.ml[411,13829+0]..[414,13945+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[411,13829+4]..[411,13829+13])
          Ppat_var "write_aux" (stdlib/arg.ml[411,13829+4]..[411,13829+13])
        expression (stdlib/arg.ml[411,13829+14]..[414,13945+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/arg.ml[411,13829+14]..[411,13829+17])
            Ppat_var "sep" (stdlib/arg.ml[411,13829+14]..[411,13829+17])
          expression (stdlib/arg.ml[411,13829+18]..[414,13945+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/arg.ml[411,13829+18]..[411,13829+22])
              Ppat_var "file" (stdlib/arg.ml[411,13829+18]..[411,13829+22])
            expression (stdlib/arg.ml[411,13829+23]..[414,13945+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/arg.ml[411,13829+23]..[411,13829+27])
                Ppat_var "args" (stdlib/arg.ml[411,13829+23]..[411,13829+27])
              expression (stdlib/arg.ml[412,13859+2]..[414,13945+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/arg.ml[412,13859+6]..[412,13859+8])
                      Ppat_var "oc" (stdlib/arg.ml[412,13859+6]..[412,13859+8])
                    expression (stdlib/arg.ml[412,13859+11]..[412,13859+28])
                      Pexp_apply
                      expression (stdlib/arg.ml[412,13859+11]..[412,13859+23])
                        Pexp_ident "open_out_bin" (stdlib/arg.ml[412,13859+11]..[412,13859+23])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/arg.ml[412,13859+24]..[412,13859+28])
                            Pexp_ident "file" (stdlib/arg.ml[412,13859+24]..[412,13859+28])
                      ]
                ]
                expression (stdlib/arg.ml[413,13891+2]..[414,13945+14])
                  Pexp_sequence
                  expression (stdlib/arg.ml[413,13891+2]..[413,13891+52])
                    Pexp_apply
                    expression (stdlib/arg.ml[413,13891+2]..[413,13891+12])
                      Pexp_ident "Array.iter" (stdlib/arg.ml[413,13891+2]..[413,13891+12])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[413,13891+13]..[413,13891+47])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (stdlib/arg.ml[413,13891+18]..[413,13891+19])
                            Ppat_var "s" (stdlib/arg.ml[413,13891+18]..[413,13891+19])
                          expression (stdlib/arg.ml[413,13891+23]..[413,13891+46])
                            Pexp_apply
                            expression (stdlib/arg.ml[413,13891+23]..[413,13891+30])
                              Pexp_ident "fprintf" (stdlib/arg.ml[413,13891+23]..[413,13891+30])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[413,13891+31]..[413,13891+33])
                                  Pexp_ident "oc" (stdlib/arg.ml[413,13891+31]..[413,13891+33])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[413,13891+34]..[413,13891+40])
                                  Pexp_constant PConst_string("%s%c",(stdlib/arg.ml[413,13891+35]..[413,13891+39]),None)
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[413,13891+41]..[413,13891+42])
                                  Pexp_ident "s" (stdlib/arg.ml[413,13891+41]..[413,13891+42])
                              <arg>
                              Nolabel
                                expression (stdlib/arg.ml[413,13891+43]..[413,13891+46])
                                  Pexp_ident "sep" (stdlib/arg.ml[413,13891+43]..[413,13891+46])
                            ]
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[413,13891+48]..[413,13891+52])
                          Pexp_ident "args" (stdlib/arg.ml[413,13891+48]..[413,13891+52])
                    ]
                  expression (stdlib/arg.ml[414,13945+2]..[414,13945+14])
                    Pexp_apply
                    expression (stdlib/arg.ml[414,13945+2]..[414,13945+11])
                      Pexp_ident "close_out" (stdlib/arg.ml[414,13945+2]..[414,13945+11])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/arg.ml[414,13945+12]..[414,13945+14])
                          Pexp_ident "oc" (stdlib/arg.ml[414,13945+12]..[414,13945+14])
                    ]
    ]
  structure_item (stdlib/arg.ml[416,13961+0]..[416,13961+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[416,13961+4]..[416,13961+13])
          Ppat_var "write_arg" (stdlib/arg.ml[416,13961+4]..[416,13961+13])
        expression (stdlib/arg.ml[416,13961+16]..[416,13961+30])
          Pexp_apply
          expression (stdlib/arg.ml[416,13961+16]..[416,13961+25])
            Pexp_ident "write_aux" (stdlib/arg.ml[416,13961+16]..[416,13961+25])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[416,13961+26]..[416,13961+30])
                Pexp_constant PConst_char 0a
          ]
    ]
  structure_item (stdlib/arg.ml[418,13993+0]..[418,13993+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/arg.ml[418,13993+4]..[418,13993+14])
          Ppat_var "write_arg0" (stdlib/arg.ml[418,13993+4]..[418,13993+14])
        expression (stdlib/arg.ml[418,13993+17]..[418,13993+33])
          Pexp_apply
          expression (stdlib/arg.ml[418,13993+17]..[418,13993+26])
            Pexp_ident "write_aux" (stdlib/arg.ml[418,13993+17]..[418,13993+26])
          [
            <arg>
            Nolabel
              expression (stdlib/arg.ml[418,13993+27]..[418,13993+33])
                Pexp_constant PConst_char 00
          ]
    ]
]

