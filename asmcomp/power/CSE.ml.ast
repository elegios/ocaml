[
  structure_item (asmcomp/power/CSE.ml[18,1106+0]..[18,1106+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/CSE.ml[18,1106+5]..[18,1106+9])
      Pmod_ident "Arch" (asmcomp/power/CSE.ml[18,1106+5]..[18,1106+9])
  structure_item (asmcomp/power/CSE.ml[19,1116+0]..[19,1116+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/CSE.ml[19,1116+5]..[19,1116+9])
      Pmod_ident "Mach" (asmcomp/power/CSE.ml[19,1116+5]..[19,1116+9])
  structure_item (asmcomp/power/CSE.ml[20,1126+0]..[20,1126+11])
    Pstr_open Fresh
    module_expr (asmcomp/power/CSE.ml[20,1126+5]..[20,1126+11])
      Pmod_ident "CSEgen" (asmcomp/power/CSE.ml[20,1126+5]..[20,1126+11])
  structure_item (asmcomp/power/CSE.ml[22,1139+0]..[37,1500+3])
    Pstr_class
    [
      class_declaration (asmcomp/power/CSE.ml[22,1139+0]..[37,1500+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "cse" (asmcomp/power/CSE.ml[22,1139+6]..[22,1139+9])
        pci_expr =
          class_expr (asmcomp/power/CSE.ml[22,1139+12]..[37,1500+3])
            Pcl_structure
            class_structure
              pattern (asmcomp/power/CSE.ml[22,1139+18]..[22,1139+18]) ghost
                Ppat_any
              [
                class_field (asmcomp/power/CSE.ml[24,1159+0]..[24,1159+28])
                  Pcf_inherit Fresh
                    class_expr (asmcomp/power/CSE.ml[24,1159+8]..[24,1159+19])
                      Pcl_constr "cse_generic" (asmcomp/power/CSE.ml[24,1159+8]..[24,1159+19])
                      []
                    Some
                      "super" (asmcomp/power/CSE.ml[24,1159+23]..[24,1159+28])
                class_field (asmcomp/power/CSE.ml[26,1189+0]..[30,1350+36])
                  Pcf_method Public
                    "class_of_operation" (asmcomp/power/CSE.ml[26,1189+8]..[26,1189+26])
                    Concrete Override
                    expression (asmcomp/power/CSE.ml[26,1189+27]..[30,1350+36]) ghost
                      Pexp_poly
                      expression (asmcomp/power/CSE.ml[26,1189+27]..[30,1350+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/CSE.ml[26,1189+27]..[26,1189+29])
                          Ppat_var "op" (asmcomp/power/CSE.ml[26,1189+27]..[26,1189+29])
                        expression (asmcomp/power/CSE.ml[27,1221+2]..[30,1350+36])
                          Pexp_match
                          expression (asmcomp/power/CSE.ml[27,1221+8]..[27,1221+10])
                            Pexp_ident "op" (asmcomp/power/CSE.ml[27,1221+8]..[27,1221+10])
                          [
                            <case>
                              pattern (asmcomp/power/CSE.ml[28,1237+4]..[28,1237+36])
                                Ppat_construct "Ispecific" (asmcomp/power/CSE.ml[28,1237+4]..[28,1237+13])
                                Some
                                  []
                                  pattern (asmcomp/power/CSE.ml[28,1237+13]..[28,1237+36])
                                    Ppat_or
                                    pattern (asmcomp/power/CSE.ml[28,1237+14]..[28,1237+23])
                                      Ppat_construct "Imultaddf" (asmcomp/power/CSE.ml[28,1237+14]..[28,1237+23])
                                      None
                                    pattern (asmcomp/power/CSE.ml[28,1237+26]..[28,1237+35])
                                      Ppat_construct "Imultsubf" (asmcomp/power/CSE.ml[28,1237+26]..[28,1237+35])
                                      None
                              expression (asmcomp/power/CSE.ml[28,1237+40]..[28,1237+47])
                                Pexp_construct "Op_pure" (asmcomp/power/CSE.ml[28,1237+40]..[28,1237+47])
                                None
                            <case>
                              pattern (asmcomp/power/CSE.ml[29,1285+4]..[29,1285+52])
                                Ppat_or
                                pattern (asmcomp/power/CSE.ml[29,1285+4]..[29,1285+27])
                                  Ppat_construct "Ispecific" (asmcomp/power/CSE.ml[29,1285+4]..[29,1285+13])
                                  Some
                                    []
                                    pattern (asmcomp/power/CSE.ml[29,1285+13]..[29,1285+27])
                                      Ppat_construct "Ialloc_far" (asmcomp/power/CSE.ml[29,1285+14]..[29,1285+24])
                                      Some
                                        []
                                        pattern (asmcomp/power/CSE.ml[29,1285+25]..[29,1285+26])
                                          Ppat_any
                                pattern (asmcomp/power/CSE.ml[29,1285+30]..[29,1285+52])
                                  Ppat_construct "Ispecific" (asmcomp/power/CSE.ml[29,1285+30]..[29,1285+39])
                                  Some
                                    []
                                    pattern (asmcomp/power/CSE.ml[29,1285+39]..[29,1285+52])
                                      Ppat_construct "Ipoll_far" (asmcomp/power/CSE.ml[29,1285+40]..[29,1285+49])
                                      Some
                                        []
                                        pattern (asmcomp/power/CSE.ml[29,1285+50]..[29,1285+51])
                                          Ppat_any
                              expression (asmcomp/power/CSE.ml[29,1285+56]..[29,1285+64])
                                Pexp_construct "Op_other" (asmcomp/power/CSE.ml[29,1285+56]..[29,1285+64])
                                None
                            <case>
                              pattern (asmcomp/power/CSE.ml[30,1350+4]..[30,1350+5])
                                Ppat_any
                              expression (asmcomp/power/CSE.ml[30,1350+9]..[30,1350+36])
                                Pexp_apply
                                expression (asmcomp/power/CSE.ml[30,1350+9]..[30,1350+33])
                                  Pexp_send "class_of_operation"
                                  expression (asmcomp/power/CSE.ml[30,1350+9]..[30,1350+14])
                                    Pexp_ident "super" (asmcomp/power/CSE.ml[30,1350+9]..[30,1350+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/CSE.ml[30,1350+34]..[30,1350+36])
                                      Pexp_ident "op" (asmcomp/power/CSE.ml[30,1350+34]..[30,1350+36])
                                ]
                          ]
                      None
                class_field (asmcomp/power/CSE.ml[32,1388+0]..[35,1484+14])
                  Pcf_method Public
                    "is_cheap_operation" (asmcomp/power/CSE.ml[32,1388+8]..[32,1388+26])
                    Concrete Override
                    expression (asmcomp/power/CSE.ml[32,1388+27]..[35,1484+14]) ghost
                      Pexp_poly
                      expression (asmcomp/power/CSE.ml[32,1388+27]..[35,1484+14]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/CSE.ml[32,1388+27]..[32,1388+29])
                          Ppat_var "op" (asmcomp/power/CSE.ml[32,1388+27]..[32,1388+29])
                        expression (asmcomp/power/CSE.ml[33,1420+2]..[35,1484+14])
                          Pexp_match
                          expression (asmcomp/power/CSE.ml[33,1420+8]..[33,1420+10])
                            Pexp_ident "op" (asmcomp/power/CSE.ml[33,1420+8]..[33,1420+10])
                          [
                            <case>
                              pattern (asmcomp/power/CSE.ml[34,1436+4]..[34,1436+16])
                                Ppat_construct "Iconst_int" (asmcomp/power/CSE.ml[34,1436+4]..[34,1436+14])
                                Some
                                  []
                                  pattern (asmcomp/power/CSE.ml[34,1436+15]..[34,1436+16])
                                    Ppat_var "n" (asmcomp/power/CSE.ml[34,1436+15]..[34,1436+16])
                              expression (asmcomp/power/CSE.ml[34,1436+20]..[34,1436+47])
                                Pexp_apply
                                expression (asmcomp/power/CSE.ml[34,1436+32]..[34,1436+34])
                                  Pexp_ident "&&" (asmcomp/power/CSE.ml[34,1436+32]..[34,1436+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/CSE.ml[34,1436+20]..[34,1436+31])
                                      Pexp_apply
                                      expression (asmcomp/power/CSE.ml[34,1436+22]..[34,1436+24])
                                        Pexp_ident "<=" (asmcomp/power/CSE.ml[34,1436+22]..[34,1436+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/CSE.ml[34,1436+20]..[34,1436+21])
                                            Pexp_ident "n" (asmcomp/power/CSE.ml[34,1436+20]..[34,1436+21])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/CSE.ml[34,1436+25]..[34,1436+31])
                                            Pexp_constant PConst_int (32767,Some n)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/CSE.ml[34,1436+35]..[34,1436+47])
                                      Pexp_apply
                                      expression (asmcomp/power/CSE.ml[34,1436+37]..[34,1436+39])
                                        Pexp_ident ">=" (asmcomp/power/CSE.ml[34,1436+37]..[34,1436+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/CSE.ml[34,1436+35]..[34,1436+36])
                                            Pexp_ident "n" (asmcomp/power/CSE.ml[34,1436+35]..[34,1436+36])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/CSE.ml[34,1436+40]..[34,1436+47])
                                            Pexp_constant PConst_int (-32768,Some n)
                                      ]
                                ]
                            <case>
                              pattern (asmcomp/power/CSE.ml[35,1484+4]..[35,1484+5])
                                Ppat_any
                              expression (asmcomp/power/CSE.ml[35,1484+9]..[35,1484+14])
                                Pexp_construct "false" (asmcomp/power/CSE.ml[35,1484+9]..[35,1484+14])
                                None
                          ]
                      None
              ]
    ]
  structure_item (asmcomp/power/CSE.ml[39,1505+0]..[40,1521+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/CSE.ml[39,1505+4]..[39,1505+11])
          Ppat_var "fundecl" (asmcomp/power/CSE.ml[39,1505+4]..[39,1505+11])
        expression (asmcomp/power/CSE.ml[39,1505+12]..[40,1521+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/CSE.ml[39,1505+12]..[39,1505+13])
            Ppat_var "f" (asmcomp/power/CSE.ml[39,1505+12]..[39,1505+13])
          expression (asmcomp/power/CSE.ml[40,1521+2]..[40,1521+21])
            Pexp_apply
            expression (asmcomp/power/CSE.ml[40,1521+2]..[40,1521+19])
              Pexp_send "fundecl"
              expression (asmcomp/power/CSE.ml[40,1521+2]..[40,1521+11])
                Pexp_new "cse" (asmcomp/power/CSE.ml[40,1521+7]..[40,1521+10])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/CSE.ml[40,1521+20]..[40,1521+21])
                  Pexp_ident "f" (asmcomp/power/CSE.ml[40,1521+20]..[40,1521+21])
            ]
    ]
]

