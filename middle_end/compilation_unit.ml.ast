[
  structure_item (middle_end/compilation_unit.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/compilation_unit.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/compilation_unit.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/compilation_unit.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/compilation_unit.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/compilation_unit.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/compilation_unit.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/compilation_unit.ml[20,1238+0]..[24,1312+1])
    Pstr_type Rec
    [
      type_declaration "t" (middle_end/compilation_unit.ml[20,1238+5]..[20,1238+6]) (middle_end/compilation_unit.ml[20,1238+0]..[24,1312+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/compilation_unit.ml[21,1249+2]..[21,1249+15])
                Immutable
                "id" (middle_end/compilation_unit.ml[21,1249+2]..[21,1249+4])                core_type (middle_end/compilation_unit.ml[21,1249+7]..[21,1249+14])
                  Ptyp_constr "Ident.t" (middle_end/compilation_unit.ml[21,1249+7]..[21,1249+14])
                  []
              (middle_end/compilation_unit.ml[22,1265+2]..[22,1265+32])
                Immutable
                "linkage_name" (middle_end/compilation_unit.ml[22,1265+2]..[22,1265+14])                core_type (middle_end/compilation_unit.ml[22,1265+17]..[22,1265+31])
                  Ptyp_constr "Linkage_name.t" (middle_end/compilation_unit.ml[22,1265+17]..[22,1265+31])
                  []
              (middle_end/compilation_unit.ml[23,1298+2]..[23,1298+13])
                Immutable
                "hash" (middle_end/compilation_unit.ml[23,1298+2]..[23,1298+6])                core_type (middle_end/compilation_unit.ml[23,1298+9]..[23,1298+12])
                  Ptyp_constr "int" (middle_end/compilation_unit.ml[23,1298+9]..[23,1298+12])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/compilation_unit.ml[26,1315+0]..[26,1315+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[26,1315+4]..[26,1315+23])
          Ppat_var "string_for_printing" (middle_end/compilation_unit.ml[26,1315+4]..[26,1315+23])
        expression (middle_end/compilation_unit.ml[26,1315+24]..[26,1315+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[26,1315+24]..[26,1315+25])
            Ppat_var "t" (middle_end/compilation_unit.ml[26,1315+24]..[26,1315+25])
          expression (middle_end/compilation_unit.ml[26,1315+28]..[26,1315+43])
            Pexp_apply
            expression (middle_end/compilation_unit.ml[26,1315+28]..[26,1315+38])
              Pexp_ident "Ident.name" (middle_end/compilation_unit.ml[26,1315+28]..[26,1315+38])
            [
              <arg>
              Nolabel
                expression (middle_end/compilation_unit.ml[26,1315+39]..[26,1315+43])
                  Pexp_field
                  expression (middle_end/compilation_unit.ml[26,1315+39]..[26,1315+40])
                    Pexp_ident "t" (middle_end/compilation_unit.ml[26,1315+39]..[26,1315+40])
                  "id" (middle_end/compilation_unit.ml[26,1315+41]..[26,1315+43])
            ]
    ]
  structure_item (middle_end/compilation_unit.ml[28,1360+0]..[56,2177+4])
    Pstr_include    module_expr (middle_end/compilation_unit.ml[28,1360+8]..[56,2177+4])
      Pmod_apply
      module_expr (middle_end/compilation_unit.ml[28,1360+8]..[28,1360+25])
        Pmod_ident "Identifiable.Make" (middle_end/compilation_unit.ml[28,1360+8]..[28,1360+25])
      module_expr (middle_end/compilation_unit.ml[28,1360+27]..[56,2177+3])
        Pmod_structure
        [
          structure_item (middle_end/compilation_unit.ml[29,1394+2]..[29,1394+19])
            Pstr_type Nonrec
            [
              type_declaration "t" (middle_end/compilation_unit.ml[29,1394+14]..[29,1394+15]) (middle_end/compilation_unit.ml[29,1394+2]..[29,1394+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (middle_end/compilation_unit.ml[29,1394+18]..[29,1394+19])
                      Ptyp_constr "t" (middle_end/compilation_unit.ml[29,1394+18]..[29,1394+19])
                      []
            ]
          structure_item (middle_end/compilation_unit.ml[34,1595+2]..[46,1946+12])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/compilation_unit.ml[34,1595+6]..[34,1595+13])
                  Ppat_var "compare" (middle_end/compilation_unit.ml[34,1595+6]..[34,1595+13])
                expression (middle_end/compilation_unit.ml[34,1595+14]..[46,1946+12]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/compilation_unit.ml[34,1595+14]..[34,1595+16])
                    Ppat_var "v1" (middle_end/compilation_unit.ml[34,1595+14]..[34,1595+16])
                  expression (middle_end/compilation_unit.ml[34,1595+17]..[46,1946+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/compilation_unit.ml[34,1595+17]..[34,1595+19])
                      Ppat_var "v2" (middle_end/compilation_unit.ml[34,1595+17]..[34,1595+19])
                    expression (middle_end/compilation_unit.ml[35,1617+4]..[46,1946+12])
                      Pexp_ifthenelse
                      expression (middle_end/compilation_unit.ml[35,1617+7]..[35,1617+15])
                        Pexp_apply
                        expression (middle_end/compilation_unit.ml[35,1617+10]..[35,1617+12])
                          Pexp_ident "==" (middle_end/compilation_unit.ml[35,1617+10]..[35,1617+12])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/compilation_unit.ml[35,1617+7]..[35,1617+9])
                              Pexp_ident "v1" (middle_end/compilation_unit.ml[35,1617+7]..[35,1617+9])
                          <arg>
                          Nolabel
                            expression (middle_end/compilation_unit.ml[35,1617+13]..[35,1617+15])
                              Pexp_ident "v2" (middle_end/compilation_unit.ml[35,1617+13]..[35,1617+15])
                        ]
                      expression (middle_end/compilation_unit.ml[35,1617+21]..[35,1617+22])
                        Pexp_constant PConst_int (0,None)
                      Some
                        expression (middle_end/compilation_unit.ml[37,1649+6]..[46,1946+12])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/compilation_unit.ml[37,1649+10]..[37,1649+11])
                                Ppat_var "c" (middle_end/compilation_unit.ml[37,1649+10]..[37,1649+11])
                              expression (middle_end/compilation_unit.ml[37,1649+14]..[37,1649+37])
                                Pexp_apply
                                expression (middle_end/compilation_unit.ml[37,1649+14]..[37,1649+21])
                                  Pexp_ident "compare" (middle_end/compilation_unit.ml[37,1649+14]..[37,1649+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/compilation_unit.ml[37,1649+22]..[37,1649+29])
                                      Pexp_field
                                      expression (middle_end/compilation_unit.ml[37,1649+22]..[37,1649+24])
                                        Pexp_ident "v1" (middle_end/compilation_unit.ml[37,1649+22]..[37,1649+24])
                                      "hash" (middle_end/compilation_unit.ml[37,1649+25]..[37,1649+29])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/compilation_unit.ml[37,1649+30]..[37,1649+37])
                                      Pexp_field
                                      expression (middle_end/compilation_unit.ml[37,1649+30]..[37,1649+32])
                                        Pexp_ident "v2" (middle_end/compilation_unit.ml[37,1649+30]..[37,1649+32])
                                      "hash" (middle_end/compilation_unit.ml[37,1649+33]..[37,1649+37])
                                ]
                          ]
                          expression (middle_end/compilation_unit.ml[38,1690+6]..[46,1946+12])
                            Pexp_ifthenelse
                            expression (middle_end/compilation_unit.ml[38,1690+9]..[38,1690+14])
                              Pexp_apply
                              expression (middle_end/compilation_unit.ml[38,1690+11]..[38,1690+12])
                                Pexp_ident "=" (middle_end/compilation_unit.ml[38,1690+11]..[38,1690+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/compilation_unit.ml[38,1690+9]..[38,1690+10])
                                    Pexp_ident "c" (middle_end/compilation_unit.ml[38,1690+9]..[38,1690+10])
                                <arg>
                                Nolabel
                                  expression (middle_end/compilation_unit.ml[38,1690+13]..[38,1690+14])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (middle_end/compilation_unit.ml[39,1710+8]..[45,1934+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/compilation_unit.ml[39,1710+12]..[39,1710+17])
                                    Ppat_var "v1_id" (middle_end/compilation_unit.ml[39,1710+12]..[39,1710+17])
                                  expression (middle_end/compilation_unit.ml[39,1710+20]..[39,1710+36])
                                    Pexp_apply
                                    expression (middle_end/compilation_unit.ml[39,1710+20]..[39,1710+30])
                                      Pexp_ident "Ident.name" (middle_end/compilation_unit.ml[39,1710+20]..[39,1710+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/compilation_unit.ml[39,1710+31]..[39,1710+36])
                                          Pexp_field
                                          expression (middle_end/compilation_unit.ml[39,1710+31]..[39,1710+33])
                                            Pexp_ident "v1" (middle_end/compilation_unit.ml[39,1710+31]..[39,1710+33])
                                          "id" (middle_end/compilation_unit.ml[39,1710+34]..[39,1710+36])
                                    ]
                              ]
                              expression (middle_end/compilation_unit.ml[40,1750+8]..[45,1934+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/compilation_unit.ml[40,1750+12]..[40,1750+17])
                                      Ppat_var "v2_id" (middle_end/compilation_unit.ml[40,1750+12]..[40,1750+17])
                                    expression (middle_end/compilation_unit.ml[40,1750+20]..[40,1750+36])
                                      Pexp_apply
                                      expression (middle_end/compilation_unit.ml[40,1750+20]..[40,1750+30])
                                        Pexp_ident "Ident.name" (middle_end/compilation_unit.ml[40,1750+20]..[40,1750+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/compilation_unit.ml[40,1750+31]..[40,1750+36])
                                            Pexp_field
                                            expression (middle_end/compilation_unit.ml[40,1750+31]..[40,1750+33])
                                              Pexp_ident "v2" (middle_end/compilation_unit.ml[40,1750+31]..[40,1750+33])
                                            "id" (middle_end/compilation_unit.ml[40,1750+34]..[40,1750+36])
                                      ]
                                ]
                                expression (middle_end/compilation_unit.ml[41,1790+8]..[45,1934+11])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/compilation_unit.ml[41,1790+12]..[41,1790+13])
                                        Ppat_var "c" (middle_end/compilation_unit.ml[41,1790+12]..[41,1790+13])
                                      expression (middle_end/compilation_unit.ml[41,1790+16]..[41,1790+42])
                                        Pexp_apply
                                        expression (middle_end/compilation_unit.ml[41,1790+16]..[41,1790+30])
                                          Pexp_ident "String.compare" (middle_end/compilation_unit.ml[41,1790+16]..[41,1790+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/compilation_unit.ml[41,1790+31]..[41,1790+36])
                                              Pexp_ident "v1_id" (middle_end/compilation_unit.ml[41,1790+31]..[41,1790+36])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/compilation_unit.ml[41,1790+37]..[41,1790+42])
                                              Pexp_ident "v2_id" (middle_end/compilation_unit.ml[41,1790+37]..[41,1790+42])
                                        ]
                                  ]
                                  expression (middle_end/compilation_unit.ml[42,1836+8]..[45,1934+11])
                                    Pexp_ifthenelse
                                    expression (middle_end/compilation_unit.ml[42,1836+11]..[42,1836+16])
                                      Pexp_apply
                                      expression (middle_end/compilation_unit.ml[42,1836+13]..[42,1836+14])
                                        Pexp_ident "=" (middle_end/compilation_unit.ml[42,1836+13]..[42,1836+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/compilation_unit.ml[42,1836+11]..[42,1836+12])
                                            Pexp_ident "c" (middle_end/compilation_unit.ml[42,1836+11]..[42,1836+12])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/compilation_unit.ml[42,1836+15]..[42,1836+16])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    expression (middle_end/compilation_unit.ml[43,1858+10]..[43,1858+62])
                                      Pexp_apply
                                      expression (middle_end/compilation_unit.ml[43,1858+10]..[43,1858+30])
                                        Pexp_ident "Linkage_name.compare" (middle_end/compilation_unit.ml[43,1858+10]..[43,1858+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/compilation_unit.ml[43,1858+31]..[43,1858+46])
                                            Pexp_field
                                            expression (middle_end/compilation_unit.ml[43,1858+31]..[43,1858+33])
                                              Pexp_ident "v1" (middle_end/compilation_unit.ml[43,1858+31]..[43,1858+33])
                                            "linkage_name" (middle_end/compilation_unit.ml[43,1858+34]..[43,1858+46])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/compilation_unit.ml[43,1858+47]..[43,1858+62])
                                            Pexp_field
                                            expression (middle_end/compilation_unit.ml[43,1858+47]..[43,1858+49])
                                              Pexp_ident "v2" (middle_end/compilation_unit.ml[43,1858+47]..[43,1858+49])
                                            "linkage_name" (middle_end/compilation_unit.ml[43,1858+50]..[43,1858+62])
                                      ]
                                    Some
                                      expression (middle_end/compilation_unit.ml[45,1934+10]..[45,1934+11])
                                        Pexp_ident "c" (middle_end/compilation_unit.ml[45,1934+10]..[45,1934+11])
                            Some
                              expression (middle_end/compilation_unit.ml[46,1946+11]..[46,1946+12])
                                Pexp_ident "c" (middle_end/compilation_unit.ml[46,1946+11]..[46,1946+12])
            ]
          structure_item (middle_end/compilation_unit.ml[48,1960+2]..[50,2002+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/compilation_unit.ml[48,1960+6]..[48,1960+11])
                  Ppat_var "equal" (middle_end/compilation_unit.ml[48,1960+6]..[48,1960+11])
                expression (middle_end/compilation_unit.ml[48,1960+12]..[50,2002+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/compilation_unit.ml[48,1960+12]..[48,1960+13])
                    Ppat_var "x" (middle_end/compilation_unit.ml[48,1960+12]..[48,1960+13])
                  expression (middle_end/compilation_unit.ml[48,1960+14]..[50,2002+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/compilation_unit.ml[48,1960+14]..[48,1960+15])
                      Ppat_var "y" (middle_end/compilation_unit.ml[48,1960+14]..[48,1960+15])
                    expression (middle_end/compilation_unit.ml[49,1978+4]..[50,2002+24])
                      Pexp_ifthenelse
                      expression (middle_end/compilation_unit.ml[49,1978+7]..[49,1978+13])
                        Pexp_apply
                        expression (middle_end/compilation_unit.ml[49,1978+9]..[49,1978+11])
                          Pexp_ident "==" (middle_end/compilation_unit.ml[49,1978+9]..[49,1978+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/compilation_unit.ml[49,1978+7]..[49,1978+8])
                              Pexp_ident "x" (middle_end/compilation_unit.ml[49,1978+7]..[49,1978+8])
                          <arg>
                          Nolabel
                            expression (middle_end/compilation_unit.ml[49,1978+12]..[49,1978+13])
                              Pexp_ident "y" (middle_end/compilation_unit.ml[49,1978+12]..[49,1978+13])
                        ]
                      expression (middle_end/compilation_unit.ml[49,1978+19]..[49,1978+23])
                        Pexp_construct "true" (middle_end/compilation_unit.ml[49,1978+19]..[49,1978+23])
                        None
                      Some
                        expression (middle_end/compilation_unit.ml[50,2002+9]..[50,2002+24])
                          Pexp_apply
                          expression (middle_end/compilation_unit.ml[50,2002+21]..[50,2002+22])
                            Pexp_ident "=" (middle_end/compilation_unit.ml[50,2002+21]..[50,2002+22])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/compilation_unit.ml[50,2002+9]..[50,2002+20])
                                Pexp_apply
                                expression (middle_end/compilation_unit.ml[50,2002+9]..[50,2002+16])
                                  Pexp_ident "compare" (middle_end/compilation_unit.ml[50,2002+9]..[50,2002+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/compilation_unit.ml[50,2002+17]..[50,2002+18])
                                      Pexp_ident "x" (middle_end/compilation_unit.ml[50,2002+17]..[50,2002+18])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/compilation_unit.ml[50,2002+19]..[50,2002+20])
                                      Pexp_ident "y" (middle_end/compilation_unit.ml[50,2002+19]..[50,2002+20])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/compilation_unit.ml[50,2002+23]..[50,2002+24])
                                Pexp_constant PConst_int (0,None)
                          ]
            ]
          structure_item (middle_end/compilation_unit.ml[52,2028+2]..[52,2028+70])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/compilation_unit.ml[52,2028+6]..[52,2028+11])
                  Ppat_var "print" (middle_end/compilation_unit.ml[52,2028+6]..[52,2028+11])
                expression (middle_end/compilation_unit.ml[52,2028+12]..[52,2028+70]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/compilation_unit.ml[52,2028+12]..[52,2028+15])
                    Ppat_var "ppf" (middle_end/compilation_unit.ml[52,2028+12]..[52,2028+15])
                  expression (middle_end/compilation_unit.ml[52,2028+16]..[52,2028+70]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/compilation_unit.ml[52,2028+16]..[52,2028+17])
                      Ppat_var "t" (middle_end/compilation_unit.ml[52,2028+16]..[52,2028+17])
                    expression (middle_end/compilation_unit.ml[52,2028+20]..[52,2028+70])
                      Pexp_apply
                      expression (middle_end/compilation_unit.ml[52,2028+20]..[52,2028+42])
                        Pexp_ident "Format.pp_print_string" (middle_end/compilation_unit.ml[52,2028+20]..[52,2028+42])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/compilation_unit.ml[52,2028+43]..[52,2028+46])
                            Pexp_ident "ppf" (middle_end/compilation_unit.ml[52,2028+43]..[52,2028+46])
                        <arg>
                        Nolabel
                          expression (middle_end/compilation_unit.ml[52,2028+47]..[52,2028+70])
                            Pexp_apply
                            expression (middle_end/compilation_unit.ml[52,2028+48]..[52,2028+67])
                              Pexp_ident "string_for_printing" (middle_end/compilation_unit.ml[52,2028+48]..[52,2028+67])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/compilation_unit.ml[52,2028+68]..[52,2028+69])
                                  Pexp_ident "t" (middle_end/compilation_unit.ml[52,2028+68]..[52,2028+69])
                            ]
                      ]
            ]
          structure_item (middle_end/compilation_unit.ml[54,2100+2]..[54,2100+54])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/compilation_unit.ml[54,2100+6]..[54,2100+12])
                  Ppat_var "output" (middle_end/compilation_unit.ml[54,2100+6]..[54,2100+12])
                expression (middle_end/compilation_unit.ml[54,2100+13]..[54,2100+54]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/compilation_unit.ml[54,2100+13]..[54,2100+15])
                    Ppat_var "oc" (middle_end/compilation_unit.ml[54,2100+13]..[54,2100+15])
                  expression (middle_end/compilation_unit.ml[54,2100+16]..[54,2100+54]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/compilation_unit.ml[54,2100+16]..[54,2100+17])
                      Ppat_var "x" (middle_end/compilation_unit.ml[54,2100+16]..[54,2100+17])
                    expression (middle_end/compilation_unit.ml[54,2100+20]..[54,2100+54])
                      Pexp_apply
                      expression (middle_end/compilation_unit.ml[54,2100+20]..[54,2100+33])
                        Pexp_ident "output_string" (middle_end/compilation_unit.ml[54,2100+20]..[54,2100+33])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/compilation_unit.ml[54,2100+34]..[54,2100+36])
                            Pexp_ident "oc" (middle_end/compilation_unit.ml[54,2100+34]..[54,2100+36])
                        <arg>
                        Nolabel
                          expression (middle_end/compilation_unit.ml[54,2100+37]..[54,2100+54])
                            Pexp_apply
                            expression (middle_end/compilation_unit.ml[54,2100+38]..[54,2100+48])
                              Pexp_ident "Ident.name" (middle_end/compilation_unit.ml[54,2100+38]..[54,2100+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/compilation_unit.ml[54,2100+49]..[54,2100+53])
                                  Pexp_field
                                  expression (middle_end/compilation_unit.ml[54,2100+49]..[54,2100+50])
                                    Pexp_ident "x" (middle_end/compilation_unit.ml[54,2100+49]..[54,2100+50])
                                  "id" (middle_end/compilation_unit.ml[54,2100+51]..[54,2100+53])
                            ]
                      ]
            ]
          structure_item (middle_end/compilation_unit.ml[55,2155+2]..[55,2155+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/compilation_unit.ml[55,2155+6]..[55,2155+10])
                  Ppat_var "hash" (middle_end/compilation_unit.ml[55,2155+6]..[55,2155+10])
                expression (middle_end/compilation_unit.ml[55,2155+11]..[55,2155+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/compilation_unit.ml[55,2155+11]..[55,2155+12])
                    Ppat_var "x" (middle_end/compilation_unit.ml[55,2155+11]..[55,2155+12])
                  expression (middle_end/compilation_unit.ml[55,2155+15]..[55,2155+21])
                    Pexp_field
                    expression (middle_end/compilation_unit.ml[55,2155+15]..[55,2155+16])
                      Pexp_ident "x" (middle_end/compilation_unit.ml[55,2155+15]..[55,2155+16])
                    "hash" (middle_end/compilation_unit.ml[55,2155+17]..[55,2155+21])
            ]
        ]
  structure_item (middle_end/compilation_unit.ml[58,2183+0]..[62,2348+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[58,2183+4]..[58,2183+10])
          Ppat_var "create" (middle_end/compilation_unit.ml[58,2183+4]..[58,2183+10])
        expression (middle_end/compilation_unit.ml[58,2183+11]..[62,2348+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[58,2183+11]..[58,2183+25])
            Ppat_constraint
            pattern (middle_end/compilation_unit.ml[58,2183+12]..[58,2183+14])
              Ppat_var "id" (middle_end/compilation_unit.ml[58,2183+12]..[58,2183+14])
            core_type (middle_end/compilation_unit.ml[58,2183+17]..[58,2183+24])
              Ptyp_constr "Ident.t" (middle_end/compilation_unit.ml[58,2183+17]..[58,2183+24])
              []
          expression (middle_end/compilation_unit.ml[58,2183+26]..[62,2348+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/compilation_unit.ml[58,2183+26]..[58,2183+38])
              Ppat_var "linkage_name" (middle_end/compilation_unit.ml[58,2183+26]..[58,2183+38])
            expression (middle_end/compilation_unit.ml[59,2224+2]..[62,2348+60])
              Pexp_sequence
              expression (middle_end/compilation_unit.ml[59,2224+2]..[61,2341+5])
                Pexp_ifthenelse
                expression (middle_end/compilation_unit.ml[59,2224+5]..[59,2224+30])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[59,2224+5]..[59,2224+8])
                    Pexp_ident "not" (middle_end/compilation_unit.ml[59,2224+5]..[59,2224+8])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[59,2224+9]..[59,2224+30])
                        Pexp_apply
                        expression (middle_end/compilation_unit.ml[59,2224+10]..[59,2224+26])
                          Pexp_ident "Ident.persistent" (middle_end/compilation_unit.ml[59,2224+10]..[59,2224+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/compilation_unit.ml[59,2224+27]..[59,2224+29])
                              Pexp_ident "id" (middle_end/compilation_unit.ml[59,2224+27]..[59,2224+29])
                        ]
                  ]
                expression (middle_end/compilation_unit.ml[59,2224+36]..[61,2341+5])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[60,2266+4]..[60,2266+20])
                    Pexp_ident "Misc.fatal_error" (middle_end/compilation_unit.ml[60,2266+4]..[60,2266+20])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[60,2266+21]..[60,2266+74])
                        Pexp_constant PConst_string("Compilation_unit.create with non-persistent Ident.t",(middle_end/compilation_unit.ml[60,2266+22]..[60,2266+73]),None)
                  ]
                None
              expression (middle_end/compilation_unit.ml[62,2348+2]..[62,2348+60])
                Pexp_record
                [
                  "id" (middle_end/compilation_unit.ml[62,2348+4]..[62,2348+6]) ghost
                    expression (middle_end/compilation_unit.ml[62,2348+4]..[62,2348+6])
                      Pexp_ident "id" (middle_end/compilation_unit.ml[62,2348+4]..[62,2348+6])
                  "linkage_name" (middle_end/compilation_unit.ml[62,2348+8]..[62,2348+20]) ghost
                    expression (middle_end/compilation_unit.ml[62,2348+8]..[62,2348+20])
                      Pexp_ident "linkage_name" (middle_end/compilation_unit.ml[62,2348+8]..[62,2348+20])
                  "hash" (middle_end/compilation_unit.ml[62,2348+22]..[62,2348+26])
                    expression (middle_end/compilation_unit.ml[62,2348+29]..[62,2348+57])
                      Pexp_apply
                      expression (middle_end/compilation_unit.ml[62,2348+29]..[62,2348+41])
                        Pexp_ident "Hashtbl.hash" (middle_end/compilation_unit.ml[62,2348+29]..[62,2348+41])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/compilation_unit.ml[62,2348+42]..[62,2348+57])
                            Pexp_apply
                            expression (middle_end/compilation_unit.ml[62,2348+43]..[62,2348+53])
                              Pexp_ident "Ident.name" (middle_end/compilation_unit.ml[62,2348+43]..[62,2348+53])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/compilation_unit.ml[62,2348+54]..[62,2348+56])
                                  Pexp_ident "id" (middle_end/compilation_unit.ml[62,2348+54]..[62,2348+56])
                            ]
                      ]
                ]
                None
    ]
  structure_item (middle_end/compilation_unit.ml[64,2410+0]..[64,2410+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[64,2410+4]..[64,2410+24])
          Ppat_var "get_persistent_ident" (middle_end/compilation_unit.ml[64,2410+4]..[64,2410+24])
        expression (middle_end/compilation_unit.ml[64,2410+25]..[64,2410+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[64,2410+25]..[64,2410+27])
            Ppat_var "cu" (middle_end/compilation_unit.ml[64,2410+25]..[64,2410+27])
          expression (middle_end/compilation_unit.ml[64,2410+30]..[64,2410+35])
            Pexp_field
            expression (middle_end/compilation_unit.ml[64,2410+30]..[64,2410+32])
              Pexp_ident "cu" (middle_end/compilation_unit.ml[64,2410+30]..[64,2410+32])
            "id" (middle_end/compilation_unit.ml[64,2410+33]..[64,2410+35])
    ]
  structure_item (middle_end/compilation_unit.ml[65,2446+0]..[65,2446+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[65,2446+4]..[65,2446+20])
          Ppat_var "get_linkage_name" (middle_end/compilation_unit.ml[65,2446+4]..[65,2446+20])
        expression (middle_end/compilation_unit.ml[65,2446+21]..[65,2446+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[65,2446+21]..[65,2446+23])
            Ppat_var "cu" (middle_end/compilation_unit.ml[65,2446+21]..[65,2446+23])
          expression (middle_end/compilation_unit.ml[65,2446+26]..[65,2446+41])
            Pexp_field
            expression (middle_end/compilation_unit.ml[65,2446+26]..[65,2446+28])
              Pexp_ident "cu" (middle_end/compilation_unit.ml[65,2446+26]..[65,2446+28])
            "linkage_name" (middle_end/compilation_unit.ml[65,2446+29]..[65,2446+41])
    ]
  structure_item (middle_end/compilation_unit.ml[67,2489+0]..[67,2489+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[67,2489+4]..[67,2489+11])
          Ppat_var "current" (middle_end/compilation_unit.ml[67,2489+4]..[67,2489+11])
        expression (middle_end/compilation_unit.ml[67,2489+14]..[67,2489+22])
          Pexp_apply
          expression (middle_end/compilation_unit.ml[67,2489+14]..[67,2489+17])
            Pexp_ident "ref" (middle_end/compilation_unit.ml[67,2489+14]..[67,2489+17])
          [
            <arg>
            Nolabel
              expression (middle_end/compilation_unit.ml[67,2489+18]..[67,2489+22])
                Pexp_construct "None" (middle_end/compilation_unit.ml[67,2489+18]..[67,2489+22])
                None
          ]
    ]
  structure_item (middle_end/compilation_unit.ml[68,2512+0]..[71,2623+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[68,2512+4]..[68,2512+14])
          Ppat_var "is_current" (middle_end/compilation_unit.ml[68,2512+4]..[68,2512+14])
        expression (middle_end/compilation_unit.ml[68,2512+15]..[71,2623+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[68,2512+15]..[68,2512+18])
            Ppat_var "arg" (middle_end/compilation_unit.ml[68,2512+15]..[68,2512+18])
          expression (middle_end/compilation_unit.ml[69,2533+2]..[71,2623+29])
            Pexp_match
            expression (middle_end/compilation_unit.ml[69,2533+8]..[69,2533+16])
              Pexp_apply
              expression (middle_end/compilation_unit.ml[69,2533+8]..[69,2533+9])
                Pexp_ident "!" (middle_end/compilation_unit.ml[69,2533+8]..[69,2533+9])
              [
                <arg>
                Nolabel
                  expression (middle_end/compilation_unit.ml[69,2533+9]..[69,2533+16])
                    Pexp_ident "current" (middle_end/compilation_unit.ml[69,2533+9]..[69,2533+16])
              ]
            [
              <case>
                pattern (middle_end/compilation_unit.ml[70,2555+4]..[70,2555+8])
                  Ppat_construct "None" (middle_end/compilation_unit.ml[70,2555+4]..[70,2555+8])
                  None
                expression (middle_end/compilation_unit.ml[70,2555+12]..[70,2555+67])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[70,2555+12]..[70,2555+28])
                    Pexp_ident "Misc.fatal_error" (middle_end/compilation_unit.ml[70,2555+12]..[70,2555+28])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[70,2555+29]..[70,2555+67])
                        Pexp_constant PConst_string("Current compilation unit is not set!",(middle_end/compilation_unit.ml[70,2555+30]..[70,2555+66]),None)
                  ]
              <case>
                pattern (middle_end/compilation_unit.ml[71,2623+4]..[71,2623+12])
                  Ppat_construct "Some" (middle_end/compilation_unit.ml[71,2623+4]..[71,2623+8])
                  Some
                    []
                    pattern (middle_end/compilation_unit.ml[71,2623+9]..[71,2623+12])
                      Ppat_var "cur" (middle_end/compilation_unit.ml[71,2623+9]..[71,2623+12])
                expression (middle_end/compilation_unit.ml[71,2623+16]..[71,2623+29])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[71,2623+16]..[71,2623+21])
                    Pexp_ident "equal" (middle_end/compilation_unit.ml[71,2623+16]..[71,2623+21])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[71,2623+22]..[71,2623+25])
                        Pexp_ident "cur" (middle_end/compilation_unit.ml[71,2623+22]..[71,2623+25])
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[71,2623+26]..[71,2623+29])
                        Pexp_ident "arg" (middle_end/compilation_unit.ml[71,2623+26]..[71,2623+29])
                  ]
            ]
    ]
  structure_item (middle_end/compilation_unit.ml[72,2653+0]..[72,2653+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[72,2653+4]..[72,2653+15])
          Ppat_var "set_current" (middle_end/compilation_unit.ml[72,2653+4]..[72,2653+15])
        expression (middle_end/compilation_unit.ml[72,2653+16]..[72,2653+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[72,2653+16]..[72,2653+17])
            Ppat_var "t" (middle_end/compilation_unit.ml[72,2653+16]..[72,2653+17])
          expression (middle_end/compilation_unit.ml[72,2653+20]..[72,2653+37])
            Pexp_apply
            expression (middle_end/compilation_unit.ml[72,2653+28]..[72,2653+30])
              Pexp_ident ":=" (middle_end/compilation_unit.ml[72,2653+28]..[72,2653+30])
            [
              <arg>
              Nolabel
                expression (middle_end/compilation_unit.ml[72,2653+20]..[72,2653+27])
                  Pexp_ident "current" (middle_end/compilation_unit.ml[72,2653+20]..[72,2653+27])
              <arg>
              Nolabel
                expression (middle_end/compilation_unit.ml[72,2653+31]..[72,2653+37])
                  Pexp_construct "Some" (middle_end/compilation_unit.ml[72,2653+31]..[72,2653+35])
                  Some
                    expression (middle_end/compilation_unit.ml[72,2653+36]..[72,2653+37])
                      Pexp_ident "t" (middle_end/compilation_unit.ml[72,2653+36]..[72,2653+37])
            ]
    ]
  structure_item (middle_end/compilation_unit.ml[73,2691+0]..[73,2691+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[73,2691+4]..[73,2691+15])
          Ppat_var "get_current" (middle_end/compilation_unit.ml[73,2691+4]..[73,2691+15])
        expression (middle_end/compilation_unit.ml[73,2691+16]..[73,2691+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[73,2691+16]..[73,2691+18])
            Ppat_construct "()" (middle_end/compilation_unit.ml[73,2691+16]..[73,2691+18])
            None
          expression (middle_end/compilation_unit.ml[73,2691+21]..[73,2691+29])
            Pexp_apply
            expression (middle_end/compilation_unit.ml[73,2691+21]..[73,2691+22])
              Pexp_ident "!" (middle_end/compilation_unit.ml[73,2691+21]..[73,2691+22])
            [
              <arg>
              Nolabel
                expression (middle_end/compilation_unit.ml[73,2691+22]..[73,2691+29])
                  Pexp_ident "current" (middle_end/compilation_unit.ml[73,2691+22]..[73,2691+29])
            ]
    ]
  structure_item (middle_end/compilation_unit.ml[74,2721+0]..[77,2796+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[74,2721+4]..[74,2721+19])
          Ppat_var "get_current_exn" (middle_end/compilation_unit.ml[74,2721+4]..[74,2721+19])
        expression (middle_end/compilation_unit.ml[74,2721+20]..[77,2796+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[74,2721+20]..[74,2721+22])
            Ppat_construct "()" (middle_end/compilation_unit.ml[74,2721+20]..[74,2721+22])
            None
          expression (middle_end/compilation_unit.ml[75,2746+2]..[77,2796+63])
            Pexp_match
            expression (middle_end/compilation_unit.ml[75,2746+8]..[75,2746+16])
              Pexp_apply
              expression (middle_end/compilation_unit.ml[75,2746+8]..[75,2746+9])
                Pexp_ident "!" (middle_end/compilation_unit.ml[75,2746+8]..[75,2746+9])
              [
                <arg>
                Nolabel
                  expression (middle_end/compilation_unit.ml[75,2746+9]..[75,2746+16])
                    Pexp_ident "current" (middle_end/compilation_unit.ml[75,2746+9]..[75,2746+16])
              ]
            [
              <case>
                pattern (middle_end/compilation_unit.ml[76,2768+4]..[76,2768+16])
                  Ppat_construct "Some" (middle_end/compilation_unit.ml[76,2768+4]..[76,2768+8])
                  Some
                    []
                    pattern (middle_end/compilation_unit.ml[76,2768+9]..[76,2768+16])
                      Ppat_var "current" (middle_end/compilation_unit.ml[76,2768+9]..[76,2768+16])
                expression (middle_end/compilation_unit.ml[76,2768+20]..[76,2768+27])
                  Pexp_ident "current" (middle_end/compilation_unit.ml[76,2768+20]..[76,2768+27])
              <case>
                pattern (middle_end/compilation_unit.ml[77,2796+4]..[77,2796+8])
                  Ppat_construct "None" (middle_end/compilation_unit.ml[77,2796+4]..[77,2796+8])
                  None
                expression (middle_end/compilation_unit.ml[77,2796+12]..[77,2796+63])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[77,2796+12]..[77,2796+28])
                    Pexp_ident "Misc.fatal_error" (middle_end/compilation_unit.ml[77,2796+12]..[77,2796+28])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[77,2796+29]..[77,2796+63])
                        Pexp_constant PConst_string("Compilation_unit.get_current_exn",(middle_end/compilation_unit.ml[77,2796+30]..[77,2796+62]),None)
                  ]
            ]
    ]
  structure_item (middle_end/compilation_unit.ml[78,2860+0]..[78,2860+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/compilation_unit.ml[78,2860+4]..[78,2860+22])
          Ppat_var "get_current_id_exn" (middle_end/compilation_unit.ml[78,2860+4]..[78,2860+22])
        expression (middle_end/compilation_unit.ml[78,2860+23]..[78,2860+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/compilation_unit.ml[78,2860+23]..[78,2860+25])
            Ppat_construct "()" (middle_end/compilation_unit.ml[78,2860+23]..[78,2860+25])
            None
          expression (middle_end/compilation_unit.ml[78,2860+28]..[78,2860+69])
            Pexp_apply
            expression (middle_end/compilation_unit.ml[78,2860+28]..[78,2860+48])
              Pexp_ident "get_persistent_ident" (middle_end/compilation_unit.ml[78,2860+28]..[78,2860+48])
            [
              <arg>
              Nolabel
                expression (middle_end/compilation_unit.ml[78,2860+49]..[78,2860+69])
                  Pexp_apply
                  expression (middle_end/compilation_unit.ml[78,2860+50]..[78,2860+65])
                    Pexp_ident "get_current_exn" (middle_end/compilation_unit.ml[78,2860+50]..[78,2860+65])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/compilation_unit.ml[78,2860+66]..[78,2860+68])
                        Pexp_construct "()" (middle_end/compilation_unit.ml[78,2860+66]..[78,2860+68])
                        None
                  ]
            ]
    ]
]

