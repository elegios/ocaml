[
  structure_item (lambda/matching.ml[90,3531+0]..[90,3531+9])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[90,3531+5]..[90,3531+9])
      Pmod_ident "Misc" (lambda/matching.ml[90,3531+5]..[90,3531+9])
  structure_item (lambda/matching.ml[91,3541+0]..[91,3541+13])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[91,3541+5]..[91,3541+13])
      Pmod_ident "Asttypes" (lambda/matching.ml[91,3541+5]..[91,3541+13])
  structure_item (lambda/matching.ml[92,3555+0]..[92,3555+10])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[92,3555+5]..[92,3555+10])
      Pmod_ident "Types" (lambda/matching.ml[92,3555+5]..[92,3555+10])
  structure_item (lambda/matching.ml[93,3566+0]..[93,3566+14])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[93,3566+5]..[93,3566+14])
      Pmod_ident "Typedtree" (lambda/matching.ml[93,3566+5]..[93,3566+14])
  structure_item (lambda/matching.ml[94,3581+0]..[94,3581+11])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[94,3581+5]..[94,3581+11])
      Pmod_ident "Lambda" (lambda/matching.ml[94,3581+5]..[94,3581+11])
  structure_item (lambda/matching.ml[95,3593+0]..[95,3593+13])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[95,3593+5]..[95,3593+13])
      Pmod_ident "Parmatch" (lambda/matching.ml[95,3593+5]..[95,3593+13])
  structure_item (lambda/matching.ml[96,3607+0]..[96,3607+11])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[96,3607+5]..[96,3607+11])
      Pmod_ident "Printf" (lambda/matching.ml[96,3607+5]..[96,3607+11])
  structure_item (lambda/matching.ml[97,3619+0]..[97,3619+13])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[97,3619+5]..[97,3619+13])
      Pmod_ident "Printpat" (lambda/matching.ml[97,3619+5]..[97,3619+13])
  structure_item (lambda/matching.ml[99,3634+0]..[99,3634+50])
    Pstr_module
    "Scoped_location" (lambda/matching.ml[99,3634+7]..[99,3634+22])
      module_expr (lambda/matching.ml[99,3634+25]..[99,3634+50])
        Pmod_ident "Debuginfo.Scoped_location" (lambda/matching.ml[99,3634+25]..[99,3634+50])
  structure_item (lambda/matching.ml[101,3686+0]..[101,3686+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[101,3686+4]..[101,3686+7])
          Ppat_var "dbg" (lambda/matching.ml[101,3686+4]..[101,3686+7])
        expression (lambda/matching.ml[101,3686+10]..[101,3686+15])
          Pexp_construct "false" (lambda/matching.ml[101,3686+10]..[101,3686+15])
          None
    ]
  structure_item (lambda/matching.ml[111,3947+0]..[113,4027+4])
    Pstr_module
    "MayCompat" (lambda/matching.ml[111,3947+7]..[111,3947+16])
      module_expr (lambda/matching.ml[111,3947+19]..[113,4027+4])
        Pmod_apply
        module_expr (lambda/matching.ml[111,3947+19]..[111,3947+34])
          Pmod_ident "Parmatch.Compat" (lambda/matching.ml[111,3947+19]..[111,3947+34])
        module_expr (lambda/matching.ml[111,3947+36]..[113,4027+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[112,3990+2]..[112,3990+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[112,3990+6]..[112,3990+11])
                    Ppat_var "equal" (lambda/matching.ml[112,3990+6]..[112,3990+11])
                  expression (lambda/matching.ml[112,3990+14]..[112,3990+36])
                    Pexp_ident "Types.may_equal_constr" (lambda/matching.ml[112,3990+14]..[112,3990+36])
              ]
          ]
  structure_item (lambda/matching.ml[115,4033+0]..[117,4068+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[115,4033+4]..[115,4033+14])
          Ppat_var "may_compat" (lambda/matching.ml[115,4033+4]..[115,4033+14])
        expression (lambda/matching.ml[115,4033+17]..[115,4033+33])
          Pexp_ident "MayCompat.compat" (lambda/matching.ml[115,4033+17]..[115,4033+33])
      <def>
        pattern (lambda/matching.ml[117,4068+4]..[117,4068+15])
          Ppat_var "may_compats" (lambda/matching.ml[117,4068+4]..[117,4068+15])
        expression (lambda/matching.ml[117,4068+18]..[117,4068+35])
          Pexp_ident "MayCompat.compats" (lambda/matching.ml[117,4068+18]..[117,4068+35])
    ]
  structure_item (lambda/matching.ml[128,4418+0]..[130,4489+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[128,4418+4]..[128,4418+17])
          Ppat_var "string_of_lam" (lambda/matching.ml[128,4418+4]..[128,4418+17])
        expression (lambda/matching.ml[128,4418+18]..[130,4489+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[128,4418+18]..[128,4418+21])
            Ppat_var "lam" (lambda/matching.ml[128,4418+18]..[128,4418+21])
          expression (lambda/matching.ml[129,4442+2]..[130,4489+31])
            Pexp_sequence
            expression (lambda/matching.ml[129,4442+2]..[129,4442+45])
              Pexp_apply
              expression (lambda/matching.ml[129,4442+2]..[129,4442+20])
                Pexp_ident "Printlambda.lambda" (lambda/matching.ml[129,4442+2]..[129,4442+20])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[129,4442+21]..[129,4442+41])
                    Pexp_ident "Format.str_formatter" (lambda/matching.ml[129,4442+21]..[129,4442+41])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[129,4442+42]..[129,4442+45])
                    Pexp_ident "lam" (lambda/matching.ml[129,4442+42]..[129,4442+45])
              ]
            expression (lambda/matching.ml[130,4489+2]..[130,4489+31])
              Pexp_apply
              expression (lambda/matching.ml[130,4489+2]..[130,4489+28])
                Pexp_ident "Format.flush_str_formatter" (lambda/matching.ml[130,4489+2]..[130,4489+28])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[130,4489+29]..[130,4489+31])
                    Pexp_construct "()" (lambda/matching.ml[130,4489+29]..[130,4489+31])
                    None
              ]
    ]
  structure_item (lambda/matching.ml[132,4522+0]..[143,4872+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[132,4522+4]..[132,4522+19])
          Ppat_var "all_record_args" (lambda/matching.ml[132,4522+4]..[132,4522+19])
        expression (lambda/matching.ml[132,4522+20]..[143,4872+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[132,4522+20]..[132,4522+24])
            Ppat_var "lbls" (lambda/matching.ml[132,4522+20]..[132,4522+24])
          expression (lambda/matching.ml[133,4549+2]..[143,4872+21])
            Pexp_match
            expression (lambda/matching.ml[133,4549+8]..[133,4549+12])
              Pexp_ident "lbls" (lambda/matching.ml[133,4549+8]..[133,4549+12])
            [
              <case>
                pattern (lambda/matching.ml[134,4567+4]..[134,4567+6])
                  Ppat_construct "[]" (lambda/matching.ml[134,4567+4]..[134,4567+6])
                  None
                expression (lambda/matching.ml[134,4567+10]..[134,4567+48])
                  Pexp_apply
                  expression (lambda/matching.ml[134,4567+10]..[134,4567+21])
                    Pexp_ident "fatal_error" (lambda/matching.ml[134,4567+10]..[134,4567+21])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[134,4567+22]..[134,4567+48])
                        Pexp_constant PConst_string("Matching.all_record_args",(lambda/matching.ml[134,4567+23]..[134,4567+47]),None)
                  ]
              <case>
                pattern (lambda/matching.ml[135,4616+4]..[135,4616+28])
                  Ppat_construct "::" (lambda/matching.ml[135,4616+24]..[135,4616+26])
                  Some
                    []
                    pattern (lambda/matching.ml[135,4616+4]..[135,4616+28]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[135,4616+4]..[135,4616+23])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[135,4616+5]..[135,4616+6])
                              Ppat_any
                            pattern (lambda/matching.ml[135,4616+8]..[135,4616+19])
                              Ppat_record Closed
                              [
                                "lbl_all" (lambda/matching.ml[135,4616+10]..[135,4616+17]) ghost
                                  pattern (lambda/matching.ml[135,4616+10]..[135,4616+17])
                                    Ppat_var "lbl_all" (lambda/matching.ml[135,4616+10]..[135,4616+17])
                              ]
                            pattern (lambda/matching.ml[135,4616+21]..[135,4616+22])
                              Ppat_any
                          ]
                        pattern (lambda/matching.ml[135,4616+27]..[135,4616+28])
                          Ppat_any
                      ]
                expression (lambda/matching.ml[136,4648+6]..[143,4872+21])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[136,4648+10]..[136,4648+11])
                        Ppat_var "t" (lambda/matching.ml[136,4648+10]..[136,4648+11])
                      expression (lambda/matching.ml[137,4662+8]..[140,4774+17])
                        Pexp_apply
                        expression (lambda/matching.ml[137,4662+8]..[137,4662+17])
                          Pexp_ident "Array.map" (lambda/matching.ml[137,4662+8]..[137,4662+17])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[138,4680+10]..[139,4702+71])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[138,4680+15]..[138,4680+18])
                                Ppat_var "lbl" (lambda/matching.ml[138,4680+15]..[138,4680+18])
                              expression (lambda/matching.ml[139,4702+12]..[139,4702+70])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[139,4702+13]..[139,4702+48])
                                    Pexp_apply
                                    expression (lambda/matching.ml[139,4702+13]..[139,4702+20])
                                      Pexp_ident "mknoloc" (lambda/matching.ml[139,4702+13]..[139,4702+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[139,4702+21]..[139,4702+48])
                                          Pexp_construct "Longident.Lident" (lambda/matching.ml[139,4702+22]..[139,4702+38])
                                          Some
                                            expression (lambda/matching.ml[139,4702+39]..[139,4702+47])
                                              Pexp_constant PConst_string("?temp?",(lambda/matching.ml[139,4702+40]..[139,4702+46]),None)
                                    ]
                                  expression (lambda/matching.ml[139,4702+50]..[139,4702+53])
                                    Pexp_ident "lbl" (lambda/matching.ml[139,4702+50]..[139,4702+53])
                                  expression (lambda/matching.ml[139,4702+55]..[139,4702+69])
                                    Pexp_ident "Patterns.omega" (lambda/matching.ml[139,4702+55]..[139,4702+69])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[140,4774+10]..[140,4774+17])
                              Pexp_ident "lbl_all" (lambda/matching.ml[140,4774+10]..[140,4774+17])
                        ]
                  ]
                  expression (lambda/matching.ml[142,4801+6]..[143,4872+21])
                    Pexp_sequence
                    expression (lambda/matching.ml[142,4801+6]..[142,4801+69])
                      Pexp_apply
                      expression (lambda/matching.ml[142,4801+6]..[142,4801+15])
                        Pexp_ident "List.iter" (lambda/matching.ml[142,4801+6]..[142,4801+15])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[142,4801+16]..[142,4801+64])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[142,4801+21]..[142,4801+39])
                              Ppat_alias "x" (lambda/matching.ml[142,4801+37]..[142,4801+38])
                              pattern (lambda/matching.ml[142,4801+22]..[142,4801+33])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[142,4801+23]..[142,4801+24])
                                    Ppat_any
                                  pattern (lambda/matching.ml[142,4801+26]..[142,4801+29])
                                    Ppat_var "lbl" (lambda/matching.ml[142,4801+26]..[142,4801+29])
                                  pattern (lambda/matching.ml[142,4801+31]..[142,4801+32])
                                    Ppat_any
                                ]
                            expression (lambda/matching.ml[142,4801+43]..[142,4801+63])
                              Pexp_apply
                              expression (lambda/matching.ml[142,4801+43]..[142,4801+63]) ghost
                                Pexp_ident "Array.set" (lambda/matching.ml[142,4801+43]..[142,4801+63]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[142,4801+43]..[142,4801+44])
                                    Pexp_ident "t" (lambda/matching.ml[142,4801+43]..[142,4801+44])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[142,4801+46]..[142,4801+57])
                                    Pexp_field
                                    expression (lambda/matching.ml[142,4801+46]..[142,4801+49])
                                      Pexp_ident "lbl" (lambda/matching.ml[142,4801+46]..[142,4801+49])
                                    "lbl_pos" (lambda/matching.ml[142,4801+50]..[142,4801+57])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[142,4801+62]..[142,4801+63])
                                    Pexp_ident "x" (lambda/matching.ml[142,4801+62]..[142,4801+63])
                              ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[142,4801+65]..[142,4801+69])
                            Pexp_ident "lbls" (lambda/matching.ml[142,4801+65]..[142,4801+69])
                      ]
                    expression (lambda/matching.ml[143,4872+6]..[143,4872+21])
                      Pexp_apply
                      expression (lambda/matching.ml[143,4872+6]..[143,4872+19])
                        Pexp_ident "Array.to_list" (lambda/matching.ml[143,4872+6]..[143,4872+19])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[143,4872+20]..[143,4872+21])
                            Pexp_ident "t" (lambda/matching.ml[143,4872+20]..[143,4872+21])
                      ]
            ]
    ]
  structure_item (lambda/matching.ml[145,4895+0]..[151,5125+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[145,4895+4]..[145,4895+22])
          Ppat_var "expand_record_head" (lambda/matching.ml[145,4895+4]..[145,4895+22])
        expression (lambda/matching.ml[145,4895+23]..[151,5125+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[145,4895+23]..[145,4895+24])
            Ppat_var "h" (lambda/matching.ml[145,4895+23]..[145,4895+24])
          expression (lambda/matching.ml[146,4922+2]..[151,5125+10])
            Pexp_open Fresh
            module_expr (lambda/matching.ml[146,4922+11]..[146,4922+24])
              Pmod_ident "Patterns.Head" (lambda/matching.ml[146,4922+11]..[146,4922+24])
            expression (lambda/matching.ml[147,4950+2]..[151,5125+10])
              Pexp_match
              expression (lambda/matching.ml[147,4950+8]..[147,4950+18])
                Pexp_field
                expression (lambda/matching.ml[147,4950+8]..[147,4950+9])
                  Pexp_ident "h" (lambda/matching.ml[147,4950+8]..[147,4950+9])
                "pat_desc" (lambda/matching.ml[147,4950+10]..[147,4950+18])
              [
                <case>
                  pattern (lambda/matching.ml[148,4974+4]..[148,4974+13])
                    Ppat_construct "Record" (lambda/matching.ml[148,4974+4]..[148,4974+10])
                    Some
                      []
                      pattern (lambda/matching.ml[148,4974+11]..[148,4974+13])
                        Ppat_construct "[]" (lambda/matching.ml[148,4974+11]..[148,4974+13])
                        None
                  expression (lambda/matching.ml[148,4974+17]..[148,4974+58])
                    Pexp_apply
                    expression (lambda/matching.ml[148,4974+17]..[148,4974+28])
                      Pexp_ident "fatal_error" (lambda/matching.ml[148,4974+17]..[148,4974+28])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[148,4974+29]..[148,4974+58])
                          Pexp_constant PConst_string("Matching.expand_record_head",(lambda/matching.ml[148,4974+30]..[148,4974+57]),None)
                    ]
                <case>
                  pattern (lambda/matching.ml[149,5033+4]..[149,5033+29])
                    Ppat_construct "Record" (lambda/matching.ml[149,5033+4]..[149,5033+10])
                    Some
                      []
                      pattern (lambda/matching.ml[149,5033+11]..[149,5033+29])
                        Ppat_construct "::" (lambda/matching.ml[149,5033+24]..[149,5033+26])
                        Some
                          []
                          pattern (lambda/matching.ml[149,5033+12]..[149,5033+28]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[149,5033+12]..[149,5033+23])
                                Ppat_record Closed
                                [
                                  "lbl_all" (lambda/matching.ml[149,5033+14]..[149,5033+21]) ghost
                                    pattern (lambda/matching.ml[149,5033+14]..[149,5033+21])
                                      Ppat_var "lbl_all" (lambda/matching.ml[149,5033+14]..[149,5033+21])
                                ]
                              pattern (lambda/matching.ml[149,5033+27]..[149,5033+28])
                                Ppat_any
                            ]
                  expression (lambda/matching.ml[150,5066+6]..[150,5066+58])
                    Pexp_record
                    [
                      "pat_desc" (lambda/matching.ml[150,5066+15]..[150,5066+23])
                        expression (lambda/matching.ml[150,5066+26]..[150,5066+56])
                          Pexp_construct "Record" (lambda/matching.ml[150,5066+26]..[150,5066+32])
                          Some
                            expression (lambda/matching.ml[150,5066+33]..[150,5066+56])
                              Pexp_apply
                              expression (lambda/matching.ml[150,5066+34]..[150,5066+47])
                                Pexp_ident "Array.to_list" (lambda/matching.ml[150,5066+34]..[150,5066+47])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[150,5066+48]..[150,5066+55])
                                    Pexp_ident "lbl_all" (lambda/matching.ml[150,5066+48]..[150,5066+55])
                              ]
                    ]
                    Some
                      expression (lambda/matching.ml[150,5066+8]..[150,5066+9])
                        Pexp_ident "h" (lambda/matching.ml[150,5066+8]..[150,5066+9])
                <case>
                  pattern (lambda/matching.ml[151,5125+4]..[151,5125+5])
                    Ppat_any
                  expression (lambda/matching.ml[151,5125+9]..[151,5125+10])
                    Pexp_ident "h" (lambda/matching.ml[151,5125+9]..[151,5125+10])
              ]
    ]
  structure_item (lambda/matching.ml[153,5137+0]..[155,5225+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[153,5137+4]..[153,5137+14])
          Ppat_var "bind_alias" (lambda/matching.ml[153,5137+4]..[153,5137+14])
        expression (lambda/matching.ml[153,5137+15]..[155,5225+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[153,5137+15]..[153,5137+16])
            Ppat_var "p" (lambda/matching.ml[153,5137+15]..[153,5137+16])
          expression (lambda/matching.ml[153,5137+17]..[155,5225+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[153,5137+17]..[153,5137+19])
              Ppat_var "id" (lambda/matching.ml[153,5137+17]..[153,5137+19])
            expression (lambda/matching.ml[153,5137+20]..[155,5225+47]) ghost
              Pexp_fun
              Labelled "arg"
              None
              pattern (lambda/matching.ml[153,5137+21]..[153,5137+24])
                Ppat_var "arg" (lambda/matching.ml[153,5137+21]..[153,5137+24])
              expression (lambda/matching.ml[153,5137+25]..[155,5225+47]) ghost
                Pexp_fun
                Labelled "action"
                None
                pattern (lambda/matching.ml[153,5137+26]..[153,5137+32])
                  Ppat_var "action" (lambda/matching.ml[153,5137+26]..[153,5137+32])
                expression (lambda/matching.ml[154,5172+2]..[155,5225+47])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[154,5172+6]..[154,5172+7])
                        Ppat_var "k" (lambda/matching.ml[154,5172+6]..[154,5172+7])
                      expression (lambda/matching.ml[154,5172+10]..[154,5172+49])
                        Pexp_apply
                        expression (lambda/matching.ml[154,5172+10]..[154,5172+28])
                          Pexp_ident "Typeopt.value_kind" (lambda/matching.ml[154,5172+10]..[154,5172+28])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[154,5172+29]..[154,5172+38])
                              Pexp_field
                              expression (lambda/matching.ml[154,5172+29]..[154,5172+30])
                                Pexp_ident "p" (lambda/matching.ml[154,5172+29]..[154,5172+30])
                              "pat_env" (lambda/matching.ml[154,5172+31]..[154,5172+38])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[154,5172+39]..[154,5172+49])
                              Pexp_field
                              expression (lambda/matching.ml[154,5172+39]..[154,5172+40])
                                Pexp_ident "p" (lambda/matching.ml[154,5172+39]..[154,5172+40])
                              "pat_type" (lambda/matching.ml[154,5172+41]..[154,5172+49])
                        ]
                  ]
                  expression (lambda/matching.ml[155,5225+2]..[155,5225+47])
                    Pexp_apply
                    expression (lambda/matching.ml[155,5225+2]..[155,5225+22])
                      Pexp_ident "bind_with_value_kind" (lambda/matching.ml[155,5225+2]..[155,5225+22])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[155,5225+23]..[155,5225+28])
                          Pexp_construct "Alias" (lambda/matching.ml[155,5225+23]..[155,5225+28])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[155,5225+29]..[155,5225+36])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[155,5225+30]..[155,5225+32])
                              Pexp_ident "id" (lambda/matching.ml[155,5225+30]..[155,5225+32])
                            expression (lambda/matching.ml[155,5225+34]..[155,5225+35])
                              Pexp_ident "k" (lambda/matching.ml[155,5225+34]..[155,5225+35])
                          ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[155,5225+37]..[155,5225+40])
                          Pexp_ident "arg" (lambda/matching.ml[155,5225+37]..[155,5225+40])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[155,5225+41]..[155,5225+47])
                          Pexp_ident "action" (lambda/matching.ml[155,5225+41]..[155,5225+47])
                    ]
    ]
  structure_item (lambda/matching.ml[157,5274+0]..[158,5302+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[157,5274+4]..[157,5274+12])
          Ppat_var "head_loc" (lambda/matching.ml[157,5274+4]..[157,5274+12])
        expression (lambda/matching.ml[157,5274+13]..[158,5302+50]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[157,5274+14]..[157,5274+20])
            Ppat_var "scopes" (lambda/matching.ml[157,5274+14]..[157,5274+20])
          expression (lambda/matching.ml[157,5274+21]..[158,5302+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[157,5274+21]..[157,5274+25])
              Ppat_var "head" (lambda/matching.ml[157,5274+21]..[157,5274+25])
            expression (lambda/matching.ml[158,5302+2]..[158,5302+50])
              Pexp_apply
              expression (lambda/matching.ml[158,5302+2]..[158,5302+29])
                Pexp_ident "Scoped_location.of_location" (lambda/matching.ml[158,5302+2]..[158,5302+29])
              [
                <arg>
                Labelled "scopes"
                  expression (lambda/matching.ml[158,5302+31]..[158,5302+37])
                    Pexp_ident "scopes" (lambda/matching.ml[158,5302+31]..[158,5302+37])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[158,5302+38]..[158,5302+50])
                    Pexp_field
                    expression (lambda/matching.ml[158,5302+38]..[158,5302+42])
                      Pexp_ident "head" (lambda/matching.ml[158,5302+38]..[158,5302+42])
                    "pat_loc" (lambda/matching.ml[158,5302+43]..[158,5302+50])
              ]
    ]
  structure_item (lambda/matching.ml[160,5354+0]..[160,5354+28])
    Pstr_type Rec
    [
      type_declaration "clause" (lambda/matching.ml[160,5354+8]..[160,5354+14]) (lambda/matching.ml[160,5354+0]..[160,5354+28])
        ptype_params =
          [
            core_type (lambda/matching.ml[160,5354+5]..[160,5354+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/matching.ml[160,5354+17]..[160,5354+28])
              Ptyp_tuple
              [
                core_type (lambda/matching.ml[160,5354+17]..[160,5354+19])
                  Ptyp_var a
                core_type (lambda/matching.ml[160,5354+22]..[160,5354+28])
                  Ptyp_constr "lambda" (lambda/matching.ml[160,5354+22]..[160,5354+28])
                  []
              ]
    ]
  structure_item (lambda/matching.ml[162,5384+0]..[162,5384+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[162,5384+4]..[162,5384+14])
          Ppat_var "map_on_row" (lambda/matching.ml[162,5384+4]..[162,5384+14])
        expression (lambda/matching.ml[162,5384+15]..[162,5384+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[162,5384+15]..[162,5384+16])
            Ppat_var "f" (lambda/matching.ml[162,5384+15]..[162,5384+16])
          expression (lambda/matching.ml[162,5384+17]..[162,5384+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[162,5384+17]..[162,5384+30])
              Ppat_tuple
              [
                pattern (lambda/matching.ml[162,5384+18]..[162,5384+21])
                  Ppat_var "row" (lambda/matching.ml[162,5384+18]..[162,5384+21])
                pattern (lambda/matching.ml[162,5384+23]..[162,5384+29])
                  Ppat_var "action" (lambda/matching.ml[162,5384+23]..[162,5384+29])
              ]
            expression (lambda/matching.ml[162,5384+33]..[162,5384+48])
              Pexp_tuple
              [
                expression (lambda/matching.ml[162,5384+34]..[162,5384+39])
                  Pexp_apply
                  expression (lambda/matching.ml[162,5384+34]..[162,5384+35])
                    Pexp_ident "f" (lambda/matching.ml[162,5384+34]..[162,5384+35])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[162,5384+36]..[162,5384+39])
                        Pexp_ident "row" (lambda/matching.ml[162,5384+36]..[162,5384+39])
                  ]
                expression (lambda/matching.ml[162,5384+41]..[162,5384+47])
                  Pexp_ident "action" (lambda/matching.ml[162,5384+41]..[162,5384+47])
              ]
    ]
  structure_item (lambda/matching.ml[164,5434+0]..[164,5434+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[164,5434+4]..[164,5434+15])
          Ppat_var "map_on_rows" (lambda/matching.ml[164,5434+4]..[164,5434+15])
        expression (lambda/matching.ml[164,5434+16]..[164,5434+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[164,5434+16]..[164,5434+17])
            Ppat_var "f" (lambda/matching.ml[164,5434+16]..[164,5434+17])
          expression (lambda/matching.ml[164,5434+20]..[164,5434+43])
            Pexp_apply
            expression (lambda/matching.ml[164,5434+20]..[164,5434+28])
              Pexp_ident "List.map" (lambda/matching.ml[164,5434+20]..[164,5434+28])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[164,5434+29]..[164,5434+43])
                  Pexp_apply
                  expression (lambda/matching.ml[164,5434+30]..[164,5434+40])
                    Pexp_ident "map_on_row" (lambda/matching.ml[164,5434+30]..[164,5434+40])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[164,5434+41]..[164,5434+42])
                        Pexp_ident "f" (lambda/matching.ml[164,5434+41]..[164,5434+42])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[166,5479+0]..[166,5479+45])
    Pstr_module
    "Non_empty_row" (lambda/matching.ml[166,5479+7]..[166,5479+20])
      module_expr (lambda/matching.ml[166,5479+23]..[166,5479+45])
        Pmod_ident "Patterns.Non_empty_row" (lambda/matching.ml[166,5479+23]..[166,5479+45])
  structure_item (lambda/matching.ml[168,5526+0]..[172,5632+3])
    Pstr_module
    "General" (lambda/matching.ml[168,5526+7]..[168,5526+14])
      module_expr (lambda/matching.ml[168,5526+17]..[172,5632+3])
        Pmod_structure
        [
          structure_item (lambda/matching.ml[169,5550+2]..[169,5550+26])
            Pstr_include            module_expr (lambda/matching.ml[169,5550+10]..[169,5550+26])
              Pmod_ident "Patterns.General" (lambda/matching.ml[169,5550+10]..[169,5550+26])
          structure_item (lambda/matching.ml[171,5578+2]..[171,5578+53])
            Pstr_type Nonrec
            [
              type_declaration "clause" (lambda/matching.ml[171,5578+14]..[171,5578+20]) (lambda/matching.ml[171,5578+2]..[171,5578+53])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lambda/matching.ml[171,5578+23]..[171,5578+53])
                      Ptyp_constr "clause" (lambda/matching.ml[171,5578+47]..[171,5578+53])
                      [
                        core_type (lambda/matching.ml[171,5578+23]..[171,5578+46])
                          Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[171,5578+31]..[171,5578+46])
                          [
                            core_type (lambda/matching.ml[171,5578+23]..[171,5578+30])
                              Ptyp_constr "pattern" (lambda/matching.ml[171,5578+23]..[171,5578+30])
                              []
                          ]
                      ]
            ]
        ]
  structure_item (lambda/matching.ml[174,5637+0]..[254,8641+3])
    Pstr_module
    "Half_simple" (lambda/matching.ml[174,5637+7]..[174,5637+18])
      module_expr (lambda/matching.ml[174,5637+19]..[254,8641+3])
        Pmod_constraint
        module_expr (lambda/matching.ml[200,6775+6]..[254,8641+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[201,6788+2]..[201,6788+30])
              Pstr_include              module_expr (lambda/matching.ml[201,6788+10]..[201,6788+30])
                Pmod_ident "Patterns.Half_simple" (lambda/matching.ml[201,6788+10]..[201,6788+30])
            structure_item (lambda/matching.ml[203,6820+2]..[203,6820+53])
              Pstr_type Nonrec
              [
                type_declaration "clause" (lambda/matching.ml[203,6820+14]..[203,6820+20]) (lambda/matching.ml[203,6820+2]..[203,6820+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[203,6820+23]..[203,6820+53])
                        Ptyp_constr "clause" (lambda/matching.ml[203,6820+47]..[203,6820+53])
                        [
                          core_type (lambda/matching.ml[203,6820+23]..[203,6820+46])
                            Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[203,6820+31]..[203,6820+46])
                            [
                              core_type (lambda/matching.ml[203,6820+23]..[203,6820+30])
                                Ptyp_constr "pattern" (lambda/matching.ml[203,6820+23]..[203,6820+30])
                                []
                            ]
                        ]
              ]
            structure_item (lambda/matching.ml[205,6875+2]..[221,7428+12])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[205,6875+10]..[205,6875+27])
                    Ppat_var "simpl_under_orpat" (lambda/matching.ml[205,6875+10]..[205,6875+27])
                  expression (lambda/matching.ml[205,6875+28]..[221,7428+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[205,6875+28]..[205,6875+29])
                      Ppat_var "p" (lambda/matching.ml[205,6875+28]..[205,6875+29])
                    expression (lambda/matching.ml[206,6907+4]..[221,7428+12])
                      Pexp_match
                      expression (lambda/matching.ml[206,6907+10]..[206,6907+20])
                        Pexp_field
                        expression (lambda/matching.ml[206,6907+10]..[206,6907+11])
                          Pexp_ident "p" (lambda/matching.ml[206,6907+10]..[206,6907+11])
                        "pat_desc" (lambda/matching.ml[206,6907+12]..[206,6907+20])
                      [
                        <case>
                          pattern (lambda/matching.ml[207,6933+6]..[208,6948+16])
                            Ppat_or
                            pattern (lambda/matching.ml[207,6933+6]..[207,6933+14])
                              Ppat_construct "Tpat_any" (lambda/matching.ml[207,6933+6]..[207,6933+14])
                              None
                            pattern (lambda/matching.ml[208,6948+6]..[208,6948+16])
                              Ppat_construct "Tpat_var" (lambda/matching.ml[208,6948+6]..[208,6948+14])
                              Some
                                []
                                pattern (lambda/matching.ml[208,6948+15]..[208,6948+16])
                                  Ppat_any
                          expression (lambda/matching.ml[209,6968+8]..[209,6968+9])
                            Pexp_ident "p" (lambda/matching.ml[209,6968+8]..[209,6968+9])
                        <case>
                          pattern (lambda/matching.ml[210,6978+6]..[210,6978+27])
                            Ppat_construct "Tpat_alias" (lambda/matching.ml[210,6978+6]..[210,6978+16])
                            Some
                              []
                              pattern (lambda/matching.ml[210,6978+17]..[210,6978+27])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[210,6978+18]..[210,6978+19])
                                    Ppat_var "q" (lambda/matching.ml[210,6978+18]..[210,6978+19])
                                  pattern (lambda/matching.ml[210,6978+21]..[210,6978+23])
                                    Ppat_var "id" (lambda/matching.ml[210,6978+21]..[210,6978+23])
                                  pattern (lambda/matching.ml[210,6978+25]..[210,6978+26])
                                    Ppat_var "s" (lambda/matching.ml[210,6978+25]..[210,6978+26])
                                ]
                          expression (lambda/matching.ml[211,7009+8]..[211,7009+69])
                            Pexp_record
                            [
                              "pat_desc" (lambda/matching.ml[211,7009+17]..[211,7009+25])
                                expression (lambda/matching.ml[211,7009+28]..[211,7009+67])
                                  Pexp_construct "Tpat_alias" (lambda/matching.ml[211,7009+28]..[211,7009+38])
                                  Some
                                    expression (lambda/matching.ml[211,7009+39]..[211,7009+67])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[211,7009+40]..[211,7009+59])
                                          Pexp_apply
                                          expression (lambda/matching.ml[211,7009+40]..[211,7009+57])
                                            Pexp_ident "simpl_under_orpat" (lambda/matching.ml[211,7009+40]..[211,7009+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[211,7009+58]..[211,7009+59])
                                                Pexp_ident "q" (lambda/matching.ml[211,7009+58]..[211,7009+59])
                                          ]
                                        expression (lambda/matching.ml[211,7009+61]..[211,7009+63])
                                          Pexp_ident "id" (lambda/matching.ml[211,7009+61]..[211,7009+63])
                                        expression (lambda/matching.ml[211,7009+65]..[211,7009+66])
                                          Pexp_ident "s" (lambda/matching.ml[211,7009+65]..[211,7009+66])
                                      ]
                            ]
                            Some
                              expression (lambda/matching.ml[211,7009+10]..[211,7009+11])
                                Pexp_ident "p" (lambda/matching.ml[211,7009+10]..[211,7009+11])
                        <case>
                          pattern (lambda/matching.ml[212,7079+6]..[212,7079+25])
                            Ppat_construct "Tpat_or" (lambda/matching.ml[212,7079+6]..[212,7079+13])
                            Some
                              []
                              pattern (lambda/matching.ml[212,7079+14]..[212,7079+25])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[212,7079+15]..[212,7079+17])
                                    Ppat_var "p1" (lambda/matching.ml[212,7079+15]..[212,7079+17])
                                  pattern (lambda/matching.ml[212,7079+19]..[212,7079+21])
                                    Ppat_var "p2" (lambda/matching.ml[212,7079+19]..[212,7079+21])
                                  pattern (lambda/matching.ml[212,7079+23]..[212,7079+24])
                                    Ppat_var "o" (lambda/matching.ml[212,7079+23]..[212,7079+24])
                                ]
                          expression (lambda/matching.ml[213,7108+8]..[217,7232+51])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[213,7108+12]..[213,7108+18])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[213,7108+12]..[213,7108+14])
                                      Ppat_var "p1" (lambda/matching.ml[213,7108+12]..[213,7108+14])
                                    pattern (lambda/matching.ml[213,7108+16]..[213,7108+18])
                                      Ppat_var "p2" (lambda/matching.ml[213,7108+16]..[213,7108+18])
                                  ]
                                expression (lambda/matching.ml[213,7108+21]..[213,7108+65])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[213,7108+22]..[213,7108+42])
                                      Pexp_apply
                                      expression (lambda/matching.ml[213,7108+22]..[213,7108+39])
                                        Pexp_ident "simpl_under_orpat" (lambda/matching.ml[213,7108+22]..[213,7108+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[213,7108+40]..[213,7108+42])
                                            Pexp_ident "p1" (lambda/matching.ml[213,7108+40]..[213,7108+42])
                                      ]
                                    expression (lambda/matching.ml[213,7108+44]..[213,7108+64])
                                      Pexp_apply
                                      expression (lambda/matching.ml[213,7108+44]..[213,7108+61])
                                        Pexp_ident "simpl_under_orpat" (lambda/matching.ml[213,7108+44]..[213,7108+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[213,7108+62]..[213,7108+64])
                                            Pexp_ident "p2" (lambda/matching.ml[213,7108+62]..[213,7108+64])
                                      ]
                                  ]
                            ]
                            expression (lambda/matching.ml[214,7177+8]..[217,7232+51])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[214,7177+11]..[214,7177+23])
                                Pexp_apply
                                expression (lambda/matching.ml[214,7177+11]..[214,7177+17])
                                  Pexp_ident "le_pat" (lambda/matching.ml[214,7177+11]..[214,7177+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[214,7177+18]..[214,7177+20])
                                      Pexp_ident "p1" (lambda/matching.ml[214,7177+18]..[214,7177+20])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[214,7177+21]..[214,7177+23])
                                      Pexp_ident "p2" (lambda/matching.ml[214,7177+21]..[214,7177+23])
                                ]
                              expression (lambda/matching.ml[215,7206+10]..[215,7206+12])
                                Pexp_ident "p1" (lambda/matching.ml[215,7206+10]..[215,7206+12])
                              Some
                                expression (lambda/matching.ml[217,7232+10]..[217,7232+51])
                                  Pexp_record
                                  [
                                    "pat_desc" (lambda/matching.ml[217,7232+19]..[217,7232+27])
                                      expression (lambda/matching.ml[217,7232+30]..[217,7232+49])
                                        Pexp_construct "Tpat_or" (lambda/matching.ml[217,7232+30]..[217,7232+37])
                                        Some
                                          expression (lambda/matching.ml[217,7232+38]..[217,7232+49])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[217,7232+39]..[217,7232+41])
                                                Pexp_ident "p1" (lambda/matching.ml[217,7232+39]..[217,7232+41])
                                              expression (lambda/matching.ml[217,7232+43]..[217,7232+45])
                                                Pexp_ident "p2" (lambda/matching.ml[217,7232+43]..[217,7232+45])
                                              expression (lambda/matching.ml[217,7232+47]..[217,7232+48])
                                                Pexp_ident "o" (lambda/matching.ml[217,7232+47]..[217,7232+48])
                                            ]
                                  ]
                                  Some
                                    expression (lambda/matching.ml[217,7232+12]..[217,7232+13])
                                      Pexp_ident "p" (lambda/matching.ml[217,7232+12]..[217,7232+13])
                        <case>
                          pattern (lambda/matching.ml[218,7284+6]..[218,7284+32])
                            Ppat_construct "Tpat_record" (lambda/matching.ml[218,7284+6]..[218,7284+17])
                            Some
                              []
                              pattern (lambda/matching.ml[218,7284+18]..[218,7284+32])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[218,7284+19]..[218,7284+23])
                                    Ppat_var "lbls" (lambda/matching.ml[218,7284+19]..[218,7284+23])
                                  pattern (lambda/matching.ml[218,7284+25]..[218,7284+31])
                                    Ppat_var "closed" (lambda/matching.ml[218,7284+25]..[218,7284+31])
                                ]
                          expression (lambda/matching.ml[219,7320+8]..[220,7367+60])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[219,7320+12]..[219,7320+20])
                                  Ppat_var "all_lbls" (lambda/matching.ml[219,7320+12]..[219,7320+20])
                                expression (lambda/matching.ml[219,7320+23]..[219,7320+43])
                                  Pexp_apply
                                  expression (lambda/matching.ml[219,7320+23]..[219,7320+38])
                                    Pexp_ident "all_record_args" (lambda/matching.ml[219,7320+23]..[219,7320+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[219,7320+39]..[219,7320+43])
                                        Pexp_ident "lbls" (lambda/matching.ml[219,7320+39]..[219,7320+43])
                                  ]
                            ]
                            expression (lambda/matching.ml[220,7367+8]..[220,7367+60])
                              Pexp_record
                              [
                                "pat_desc" (lambda/matching.ml[220,7367+17]..[220,7367+25])
                                  expression (lambda/matching.ml[220,7367+28]..[220,7367+58])
                                    Pexp_construct "Tpat_record" (lambda/matching.ml[220,7367+28]..[220,7367+39])
                                    Some
                                      expression (lambda/matching.ml[220,7367+40]..[220,7367+58])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[220,7367+41]..[220,7367+49])
                                            Pexp_ident "all_lbls" (lambda/matching.ml[220,7367+41]..[220,7367+49])
                                          expression (lambda/matching.ml[220,7367+51]..[220,7367+57])
                                            Pexp_ident "closed" (lambda/matching.ml[220,7367+51]..[220,7367+57])
                                        ]
                              ]
                              Some
                                expression (lambda/matching.ml[220,7367+10]..[220,7367+11])
                                  Pexp_ident "p" (lambda/matching.ml[220,7367+10]..[220,7367+11])
                        <case>
                          pattern (lambda/matching.ml[221,7428+6]..[221,7428+7])
                            Ppat_any
                          expression (lambda/matching.ml[221,7428+11]..[221,7428+12])
                            Pexp_ident "p" (lambda/matching.ml[221,7428+11]..[221,7428+12])
                      ]
              ]
            structure_item (lambda/matching.ml[224,7512+2]..[253,8630+10])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[224,7512+6]..[224,7512+15])
                    Ppat_var "of_clause" (lambda/matching.ml[224,7512+6]..[224,7512+15])
                  expression (lambda/matching.ml[224,7512+16]..[253,8630+10]) ghost
                    Pexp_fun
                    Labelled "arg"
                    None
                    pattern (lambda/matching.ml[224,7512+17]..[224,7512+20])
                      Ppat_var "arg" (lambda/matching.ml[224,7512+17]..[224,7512+20])
                    expression (lambda/matching.ml[224,7512+21]..[253,8630+10]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[224,7512+21]..[224,7512+23])
                        Ppat_var "cl" (lambda/matching.ml[224,7512+21]..[224,7512+23])
                      expression (lambda/matching.ml[225,7538+4]..[253,8630+10])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lambda/matching.ml[225,7538+12]..[225,7538+15])
                              Ppat_var "aux" (lambda/matching.ml[225,7538+12]..[225,7538+15])
                            expression (lambda/matching.ml[225,7538+16]..[251,8601+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[225,7538+16]..[225,7538+54])
                                Ppat_constraint
                                pattern (lambda/matching.ml[225,7538+17]..[225,7538+36])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[225,7538+18]..[225,7538+27])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[225,7538+19]..[225,7538+20])
                                          Ppat_var "p" (lambda/matching.ml[225,7538+19]..[225,7538+20])
                                        pattern (lambda/matching.ml[225,7538+22]..[225,7538+26])
                                          Ppat_var "patl" (lambda/matching.ml[225,7538+22]..[225,7538+26])
                                      ]
                                    pattern (lambda/matching.ml[225,7538+29]..[225,7538+35])
                                      Ppat_var "action" (lambda/matching.ml[225,7538+29]..[225,7538+35])
                                  ]
                                core_type (lambda/matching.ml[225,7538+39]..[225,7538+53])
                                  Ptyp_constr "General.clause" (lambda/matching.ml[225,7538+39]..[225,7538+53])
                                  []
                              expression (lambda/matching.ml[225,7538+55]..[251,8601+21])
                                Pexp_constraint
                                expression (lambda/matching.ml[226,7604+6]..[251,8601+21])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[226,7604+10]..[226,7604+18])
                                        Ppat_var "continue" (lambda/matching.ml[226,7604+10]..[226,7604+18])
                                      expression (lambda/matching.ml[226,7604+19]..[227,7658+56]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[226,7604+19]..[226,7604+20])
                                          Ppat_var "p" (lambda/matching.ml[226,7604+19]..[226,7604+20])
                                        expression (lambda/matching.ml[226,7604+21]..[227,7658+56]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[226,7604+21]..[226,7604+42])
                                            Ppat_constraint
                                            pattern (lambda/matching.ml[226,7604+22]..[226,7604+26])
                                              Ppat_var "view" (lambda/matching.ml[226,7604+22]..[226,7604+26])
                                            core_type (lambda/matching.ml[226,7604+29]..[226,7604+41])
                                              Ptyp_constr "General.view" (lambda/matching.ml[226,7604+29]..[226,7604+41])
                                              []
                                          expression (lambda/matching.ml[226,7604+43]..[227,7658+56])
                                            Pexp_constraint
                                            expression (lambda/matching.ml[227,7658+8]..[227,7658+56])
                                              Pexp_apply
                                              expression (lambda/matching.ml[227,7658+8]..[227,7658+11])
                                                Pexp_ident "aux" (lambda/matching.ml[227,7658+8]..[227,7658+11])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[227,7658+12]..[227,7658+56])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[227,7658+13]..[227,7658+47])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[227,7658+14]..[227,7658+40])
                                                            Pexp_record
                                                            [
                                                              "pat_desc" (lambda/matching.ml[227,7658+23]..[227,7658+31])
                                                                expression (lambda/matching.ml[227,7658+34]..[227,7658+38])
                                                                  Pexp_ident "view" (lambda/matching.ml[227,7658+34]..[227,7658+38])
                                                            ]
                                                            Some
                                                              expression (lambda/matching.ml[227,7658+16]..[227,7658+17])
                                                                Pexp_ident "p" (lambda/matching.ml[227,7658+16]..[227,7658+17])
                                                          expression (lambda/matching.ml[227,7658+42]..[227,7658+46])
                                                            Pexp_ident "patl" (lambda/matching.ml[227,7658+42]..[227,7658+46])
                                                        ]
                                                      expression (lambda/matching.ml[227,7658+49]..[227,7658+55])
                                                        Pexp_ident "action" (lambda/matching.ml[227,7658+49]..[227,7658+55])
                                                    ]
                                              ]
                                            core_type (lambda/matching.ml[226,7604+45]..[226,7604+51])
                                              Ptyp_constr "clause" (lambda/matching.ml[226,7604+45]..[226,7604+51])
                                              []
                                  ]
                                  expression (lambda/matching.ml[229,7724+6]..[251,8601+21])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[229,7724+10]..[229,7724+14])
                                          Ppat_var "stop" (lambda/matching.ml[229,7724+10]..[229,7724+14])
                                        expression (lambda/matching.ml[229,7724+15]..[230,7766+52]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[229,7724+15]..[229,7724+16])
                                            Ppat_var "p" (lambda/matching.ml[229,7724+15]..[229,7724+16])
                                          expression (lambda/matching.ml[229,7724+17]..[230,7766+52]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[229,7724+17]..[229,7724+30])
                                              Ppat_constraint
                                              pattern (lambda/matching.ml[229,7724+18]..[229,7724+22])
                                                Ppat_var "view" (lambda/matching.ml[229,7724+18]..[229,7724+22])
                                              core_type (lambda/matching.ml[229,7724+25]..[229,7724+29])
                                                Ptyp_constr "view" (lambda/matching.ml[229,7724+25]..[229,7724+29])
                                                []
                                            expression (lambda/matching.ml[229,7724+31]..[230,7766+52])
                                              Pexp_constraint
                                              expression (lambda/matching.ml[230,7766+8]..[230,7766+52])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[230,7766+9]..[230,7766+43])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[230,7766+10]..[230,7766+36])
                                                        Pexp_record
                                                        [
                                                          "pat_desc" (lambda/matching.ml[230,7766+19]..[230,7766+27])
                                                            expression (lambda/matching.ml[230,7766+30]..[230,7766+34])
                                                              Pexp_ident "view" (lambda/matching.ml[230,7766+30]..[230,7766+34])
                                                        ]
                                                        Some
                                                          expression (lambda/matching.ml[230,7766+12]..[230,7766+13])
                                                            Pexp_ident "p" (lambda/matching.ml[230,7766+12]..[230,7766+13])
                                                      expression (lambda/matching.ml[230,7766+38]..[230,7766+42])
                                                        Pexp_ident "patl" (lambda/matching.ml[230,7766+38]..[230,7766+42])
                                                    ]
                                                  expression (lambda/matching.ml[230,7766+45]..[230,7766+51])
                                                    Pexp_ident "action" (lambda/matching.ml[230,7766+45]..[230,7766+51])
                                                ]
                                              core_type (lambda/matching.ml[229,7724+33]..[229,7724+39])
                                                Ptyp_constr "clause" (lambda/matching.ml[229,7724+33]..[229,7724+39])
                                                []
                                    ]
                                    expression (lambda/matching.ml[232,7828+6]..[251,8601+21])
                                      Pexp_match
                                      expression (lambda/matching.ml[232,7828+12]..[232,7828+22])
                                        Pexp_field
                                        expression (lambda/matching.ml[232,7828+12]..[232,7828+13])
                                          Pexp_ident "p" (lambda/matching.ml[232,7828+12]..[232,7828+13])
                                        "pat_desc" (lambda/matching.ml[232,7828+14]..[232,7828+22])
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[233,7856+8]..[233,7856+12])
                                            Ppat_variant "Any"
                                            None
                                          expression (lambda/matching.ml[233,7856+16]..[233,7856+27])
                                            Pexp_apply
                                            expression (lambda/matching.ml[233,7856+16]..[233,7856+20])
                                              Pexp_ident "stop" (lambda/matching.ml[233,7856+16]..[233,7856+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[233,7856+21]..[233,7856+22])
                                                  Pexp_ident "p" (lambda/matching.ml[233,7856+21]..[233,7856+22])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[233,7856+23]..[233,7856+27])
                                                  Pexp_variant "Any"
                                                  None
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[234,7884+8]..[234,7884+20])
                                            Ppat_variant "Var"
                                            Some
                                              pattern (lambda/matching.ml[234,7884+13]..[234,7884+20])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[234,7884+14]..[234,7884+16])
                                                    Ppat_var "id" (lambda/matching.ml[234,7884+14]..[234,7884+16])
                                                  pattern (lambda/matching.ml[234,7884+18]..[234,7884+19])
                                                    Ppat_var "s" (lambda/matching.ml[234,7884+18]..[234,7884+19])
                                                ]
                                          expression (lambda/matching.ml[234,7884+24]..[234,7884+67])
                                            Pexp_apply
                                            expression (lambda/matching.ml[234,7884+24]..[234,7884+32])
                                              Pexp_ident "continue" (lambda/matching.ml[234,7884+24]..[234,7884+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[234,7884+33]..[234,7884+34])
                                                  Pexp_ident "p" (lambda/matching.ml[234,7884+33]..[234,7884+34])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[234,7884+35]..[234,7884+67])
                                                  Pexp_variant "Alias"
                                                  Some
                                                    expression (lambda/matching.ml[234,7884+43]..[234,7884+66])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[234,7884+44]..[234,7884+58])
                                                          Pexp_ident "Patterns.omega" (lambda/matching.ml[234,7884+44]..[234,7884+58])
                                                        expression (lambda/matching.ml[234,7884+60]..[234,7884+62])
                                                          Pexp_ident "id" (lambda/matching.ml[234,7884+60]..[234,7884+62])
                                                        expression (lambda/matching.ml[234,7884+64]..[234,7884+65])
                                                          Pexp_ident "s" (lambda/matching.ml[234,7884+64]..[234,7884+65])
                                                      ]
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[235,7952+8]..[235,7952+25])
                                            Ppat_variant "Alias"
                                            Some
                                              pattern (lambda/matching.ml[235,7952+15]..[235,7952+25])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[235,7952+16]..[235,7952+17])
                                                    Ppat_var "p" (lambda/matching.ml[235,7952+16]..[235,7952+17])
                                                  pattern (lambda/matching.ml[235,7952+19]..[235,7952+21])
                                                    Ppat_var "id" (lambda/matching.ml[235,7952+19]..[235,7952+21])
                                                  pattern (lambda/matching.ml[235,7952+23]..[235,7952+24])
                                                    Ppat_any
                                                ]
                                          expression (lambda/matching.ml[236,7981+10]..[238,8033+44])
                                            Pexp_apply
                                            expression (lambda/matching.ml[236,7981+10]..[236,7981+13])
                                              Pexp_ident "aux" (lambda/matching.ml[236,7981+10]..[236,7981+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[237,7995+12]..[238,8033+44])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[237,7995+14]..[237,7995+36])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[237,7995+15]..[237,7995+29])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[237,7995+15]..[237,7995+27])
                                                            Pexp_ident "General.view" (lambda/matching.ml[237,7995+15]..[237,7995+27])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[237,7995+28]..[237,7995+29])
                                                                Pexp_ident "p" (lambda/matching.ml[237,7995+28]..[237,7995+29])
                                                          ]
                                                        expression (lambda/matching.ml[237,7995+31]..[237,7995+35])
                                                          Pexp_ident "patl" (lambda/matching.ml[237,7995+31]..[237,7995+35])
                                                      ]
                                                    expression (lambda/matching.ml[238,8033+14]..[238,8033+42])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[238,8033+14]..[238,8033+24])
                                                        Pexp_ident "bind_alias" (lambda/matching.ml[238,8033+14]..[238,8033+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[238,8033+25]..[238,8033+26])
                                                            Pexp_ident "p" (lambda/matching.ml[238,8033+25]..[238,8033+26])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[238,8033+27]..[238,8033+29])
                                                            Pexp_ident "id" (lambda/matching.ml[238,8033+27]..[238,8033+29])
                                                        <arg>
                                                        Labelled "arg"
                                                          expression (lambda/matching.ml[238,8033+31]..[238,8033+34])
                                                            Pexp_ident "arg" (lambda/matching.ml[238,8033+31]..[238,8033+34])
                                                        <arg>
                                                        Labelled "action"
                                                          expression (lambda/matching.ml[238,8033+36]..[238,8033+42])
                                                            Pexp_ident "action" (lambda/matching.ml[238,8033+36]..[238,8033+42])
                                                      ]
                                                  ]
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[239,8078+8]..[239,8078+31])
                                            Ppat_alias "view" (lambda/matching.ml[239,8078+27]..[239,8078+31])
                                            pattern (lambda/matching.ml[239,8078+8]..[239,8078+23])
                                              Ppat_variant "Record"
                                              Some
                                                pattern (lambda/matching.ml[239,8078+16]..[239,8078+23])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[239,8078+17]..[239,8078+19])
                                                      Ppat_construct "[]" (lambda/matching.ml[239,8078+17]..[239,8078+19])
                                                      None
                                                    pattern (lambda/matching.ml[239,8078+21]..[239,8078+22])
                                                      Ppat_any
                                                  ]
                                          expression (lambda/matching.ml[239,8078+35]..[239,8078+46])
                                            Pexp_apply
                                            expression (lambda/matching.ml[239,8078+35]..[239,8078+39])
                                              Pexp_ident "stop" (lambda/matching.ml[239,8078+35]..[239,8078+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[239,8078+40]..[239,8078+41])
                                                  Pexp_ident "p" (lambda/matching.ml[239,8078+40]..[239,8078+41])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[239,8078+42]..[239,8078+46])
                                                  Pexp_ident "view" (lambda/matching.ml[239,8078+42]..[239,8078+46])
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[240,8125+8]..[240,8125+30])
                                            Ppat_variant "Record"
                                            Some
                                              pattern (lambda/matching.ml[240,8125+16]..[240,8125+30])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[240,8125+17]..[240,8125+21])
                                                    Ppat_var "lbls" (lambda/matching.ml[240,8125+17]..[240,8125+21])
                                                  pattern (lambda/matching.ml[240,8125+23]..[240,8125+29])
                                                    Ppat_var "closed" (lambda/matching.ml[240,8125+23]..[240,8125+29])
                                                ]
                                          expression (lambda/matching.ml[241,8159+10]..[242,8227+26])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[241,8159+14]..[241,8159+23])
                                                  Ppat_var "full_view" (lambda/matching.ml[241,8159+14]..[241,8159+23])
                                                expression (lambda/matching.ml[241,8159+26]..[241,8159+64])
                                                  Pexp_variant "Record"
                                                  Some
                                                    expression (lambda/matching.ml[241,8159+34]..[241,8159+64])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[241,8159+35]..[241,8159+55])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[241,8159+35]..[241,8159+50])
                                                            Pexp_ident "all_record_args" (lambda/matching.ml[241,8159+35]..[241,8159+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[241,8159+51]..[241,8159+55])
                                                                Pexp_ident "lbls" (lambda/matching.ml[241,8159+51]..[241,8159+55])
                                                          ]
                                                        expression (lambda/matching.ml[241,8159+57]..[241,8159+63])
                                                          Pexp_ident "closed" (lambda/matching.ml[241,8159+57]..[241,8159+63])
                                                      ]
                                            ]
                                            expression (lambda/matching.ml[242,8227+10]..[242,8227+26])
                                              Pexp_apply
                                              expression (lambda/matching.ml[242,8227+10]..[242,8227+14])
                                                Pexp_ident "stop" (lambda/matching.ml[242,8227+10]..[242,8227+14])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[242,8227+15]..[242,8227+16])
                                                    Pexp_ident "p" (lambda/matching.ml[242,8227+15]..[242,8227+16])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[242,8227+17]..[242,8227+26])
                                                    Pexp_ident "full_view" (lambda/matching.ml[242,8227+17]..[242,8227+26])
                                              ]
                                        <case>
                                          pattern (lambda/matching.ml[243,8254+8]..[243,8254+13])
                                            Ppat_variant "Or"
                                            Some
                                              pattern (lambda/matching.ml[243,8254+12]..[243,8254+13])
                                                Ppat_any
                                          expression (lambda/matching.ml[243,8254+17]..[248,8488+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[244,8273+14]..[244,8273+19])
                                                  Ppat_var "orpat" (lambda/matching.ml[244,8273+14]..[244,8273+19])
                                                expression (lambda/matching.ml[244,8273+22]..[244,8273+72])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[244,8273+22]..[244,8273+34])
                                                    Pexp_ident "General.view" (lambda/matching.ml[244,8273+22]..[244,8273+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[244,8273+35]..[244,8273+72])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[244,8273+36]..[244,8273+53])
                                                          Pexp_ident "simpl_under_orpat" (lambda/matching.ml[244,8273+36]..[244,8273+53])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[244,8273+54]..[244,8273+71])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[244,8273+55]..[244,8273+68])
                                                                Pexp_ident "General.erase" (lambda/matching.ml[244,8273+55]..[244,8273+68])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[244,8273+69]..[244,8273+70])
                                                                    Pexp_ident "p" (lambda/matching.ml[244,8273+69]..[244,8273+70])
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[245,8349+10]..[247,8436+51])
                                              Pexp_match
                                              expression (lambda/matching.ml[245,8349+16]..[245,8349+30])
                                                Pexp_field
                                                expression (lambda/matching.ml[245,8349+16]..[245,8349+21])
                                                  Pexp_ident "orpat" (lambda/matching.ml[245,8349+16]..[245,8349+21])
                                                "pat_desc" (lambda/matching.ml[245,8349+22]..[245,8349+30])
                                              [
                                                <case>
                                                  pattern (lambda/matching.ml[246,8385+12]..[246,8385+28])
                                                    Ppat_alias "or_view" (lambda/matching.ml[246,8385+21]..[246,8385+28])
                                                    pattern (lambda/matching.ml[246,8385+12]..[246,8385+17])
                                                      Ppat_variant "Or"
                                                      Some
                                                        pattern (lambda/matching.ml[246,8385+16]..[246,8385+17])
                                                          Ppat_any
                                                  expression (lambda/matching.ml[246,8385+32]..[246,8385+50])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[246,8385+32]..[246,8385+36])
                                                      Pexp_ident "stop" (lambda/matching.ml[246,8385+32]..[246,8385+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[246,8385+37]..[246,8385+42])
                                                          Pexp_ident "orpat" (lambda/matching.ml[246,8385+37]..[246,8385+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[246,8385+43]..[246,8385+50])
                                                          Pexp_ident "or_view" (lambda/matching.ml[246,8385+43]..[246,8385+50])
                                                    ]
                                                <case>
                                                  pattern (lambda/matching.ml[247,8436+12]..[247,8436+22])
                                                    Ppat_var "other_view" (lambda/matching.ml[247,8436+12]..[247,8436+22])
                                                  expression (lambda/matching.ml[247,8436+26]..[247,8436+51])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[247,8436+26]..[247,8436+34])
                                                      Pexp_ident "continue" (lambda/matching.ml[247,8436+26]..[247,8436+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[247,8436+35]..[247,8436+40])
                                                          Pexp_ident "orpat" (lambda/matching.ml[247,8436+35]..[247,8436+40])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[247,8436+41]..[247,8436+51])
                                                          Pexp_ident "other_view" (lambda/matching.ml[247,8436+41]..[247,8436+51])
                                                    ]
                                              ]
                                        <case>
                                          pattern (lambda/matching.ml[249,8498+8]..[250,8570+27])
                                            Ppat_alias "view" (lambda/matching.ml[250,8570+23]..[250,8570+27])
                                            pattern (lambda/matching.ml[249,8498+8]..[250,8570+19])
                                              Ppat_or
                                              pattern (lambda/matching.ml[249,8498+10]..[249,8498+71])
                                                Ppat_or
                                                pattern (lambda/matching.ml[249,8498+10]..[249,8498+60])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[249,8498+10]..[249,8498+47])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[249,8498+10]..[249,8498+32])
                                                      Ppat_or
                                                      pattern (lambda/matching.ml[249,8498+10]..[249,8498+21])
                                                        Ppat_variant "Constant"
                                                        Some
                                                          pattern (lambda/matching.ml[249,8498+20]..[249,8498+21])
                                                            Ppat_any
                                                      pattern (lambda/matching.ml[249,8498+24]..[249,8498+32])
                                                        Ppat_variant "Tuple"
                                                        Some
                                                          pattern (lambda/matching.ml[249,8498+31]..[249,8498+32])
                                                            Ppat_any
                                                    pattern (lambda/matching.ml[249,8498+35]..[249,8498+47])
                                                      Ppat_variant "Construct"
                                                      Some
                                                        pattern (lambda/matching.ml[249,8498+46]..[249,8498+47])
                                                          Ppat_any
                                                  pattern (lambda/matching.ml[249,8498+50]..[249,8498+60])
                                                    Ppat_variant "Variant"
                                                    Some
                                                      pattern (lambda/matching.ml[249,8498+59]..[249,8498+60])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[249,8498+63]..[249,8498+71])
                                                  Ppat_variant "Array"
                                                  Some
                                                    pattern (lambda/matching.ml[249,8498+70]..[249,8498+71])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[250,8570+10]..[250,8570+17])
                                                Ppat_variant "Lazy"
                                                Some
                                                  pattern (lambda/matching.ml[250,8570+16]..[250,8570+17])
                                                    Ppat_any
                                          expression (lambda/matching.ml[251,8601+10]..[251,8601+21])
                                            Pexp_apply
                                            expression (lambda/matching.ml[251,8601+10]..[251,8601+14])
                                              Pexp_ident "stop" (lambda/matching.ml[251,8601+10]..[251,8601+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[251,8601+15]..[251,8601+16])
                                                  Pexp_ident "p" (lambda/matching.ml[251,8601+15]..[251,8601+16])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[251,8601+17]..[251,8601+21])
                                                  Pexp_ident "view" (lambda/matching.ml[251,8601+17]..[251,8601+21])
                                            ]
                                      ]
                                core_type (lambda/matching.ml[225,7538+57]..[225,7538+63])
                                  Ptyp_constr "clause" (lambda/matching.ml[225,7538+57]..[225,7538+63])
                                  []
                        ]
                        expression (lambda/matching.ml[253,8630+4]..[253,8630+10])
                          Pexp_apply
                          expression (lambda/matching.ml[253,8630+4]..[253,8630+7])
                            Pexp_ident "aux" (lambda/matching.ml[253,8630+4]..[253,8630+7])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[253,8630+8]..[253,8630+10])
                                Pexp_ident "cl" (lambda/matching.ml[253,8630+8]..[253,8630+10])
                          ]
              ]
          ]
        module_type (lambda/matching.ml[174,5637+21]..[200,6775+3])
          Pmty_signature
          [
            signature_item (lambda/matching.ml[175,5662+2]..[175,5662+45])
              Psig_include
              module_type (lambda/matching.ml[175,5662+10]..[175,5662+45])
                Pmty_typeof
                module_expr (lambda/matching.ml[175,5662+25]..[175,5662+45])
                  Pmod_ident "Patterns.Half_simple" (lambda/matching.ml[175,5662+25]..[175,5662+45])
                attribute "ocaml.doc"
                  [
                    structure_item (lambda/matching.ml[176,5708+2]..[195,6612+49])
                      Pstr_eval
                      expression (lambda/matching.ml[176,5708+2]..[195,6612+49])
                        Pexp_constant PConst_string(" Half-simplified patterns are patterns where:\n        - records are expanded so that they possess all fields\n        - aliases are removed and replaced by bindings in actions.\n\n      Or-patterns are not removed, they are only \"half-simplified\":\n        - aliases under or-patterns are kept\n        - or-patterns whose right-hand-side is subsumed by their lhs\n          are simplified to their lhs.\n          For instance: [(_ :: _ | 1 :: _)] is changed into [_ :: _]\n        - or-patterns whose left-hand-side is not simplified\n          are preserved: (p|q) is changed into (simpl(p)|simpl(q))\n            {v\n                # match lazy (print_int 3; 3) with _ | lazy 2 -> ();;\n                - : unit = ()\n                # match lazy (print_int 3; 3) with lazy 2 | _ -> ();;\n                3- : unit = ()\n            v}\n\n      In particular, or-patterns may still occur in the leading column,\n      so this is only a \"half-simplification\". ",(lambda/matching.ml[176,5708+2]..[195,6612+49]),None)
                  ]
            signature_item (lambda/matching.ml[197,6663+2]..[197,6663+53])
              Psig_type Nonrec
              [
                type_declaration "clause" (lambda/matching.ml[197,6663+14]..[197,6663+20]) (lambda/matching.ml[197,6663+2]..[197,6663+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[197,6663+23]..[197,6663+53])
                        Ptyp_constr "clause" (lambda/matching.ml[197,6663+47]..[197,6663+53])
                        [
                          core_type (lambda/matching.ml[197,6663+23]..[197,6663+46])
                            Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[197,6663+31]..[197,6663+46])
                            [
                              core_type (lambda/matching.ml[197,6663+23]..[197,6663+30])
                                Ptyp_constr "pattern" (lambda/matching.ml[197,6663+23]..[197,6663+30])
                                []
                            ]
                        ]
              ]
            signature_item (lambda/matching.ml[199,6718+2]..[199,6718+56])
              Psig_value
              value_description "of_clause" (lambda/matching.ml[199,6718+6]..[199,6718+15]) (lambda/matching.ml[199,6718+2]..[199,6718+56])
                core_type (lambda/matching.ml[199,6718+18]..[199,6718+56])
                  Ptyp_arrow
                  Labelled "arg"
                  core_type (lambda/matching.ml[199,6718+22]..[199,6718+28])
                    Ptyp_constr "lambda" (lambda/matching.ml[199,6718+22]..[199,6718+28])
                    []
                  core_type (lambda/matching.ml[199,6718+32]..[199,6718+56])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[199,6718+32]..[199,6718+46])
                      Ptyp_constr "General.clause" (lambda/matching.ml[199,6718+32]..[199,6718+46])
                      []
                    core_type (lambda/matching.ml[199,6718+50]..[199,6718+56])
                      Ptyp_constr "clause" (lambda/matching.ml[199,6718+50]..[199,6718+56])
                      []
                []
          ]
  structure_item (lambda/matching.ml[256,8646+0]..[256,8646+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lambda/matching.ml[256,8646+0]..[256,8646+24])
          pext_name = "Cannot_flatten"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (lambda/matching.ml[258,8672+0]..[380,13855+3])
    Pstr_module
    "Simple" (lambda/matching.ml[258,8672+7]..[258,8672+13])
      module_expr (lambda/matching.ml[258,8672+14]..[380,13855+3])
        Pmod_constraint
        module_expr (lambda/matching.ml[271,9014+6]..[380,13855+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[272,9027+2]..[272,9027+25])
              Pstr_include              module_expr (lambda/matching.ml[272,9027+10]..[272,9027+25])
                Pmod_ident "Patterns.Simple" (lambda/matching.ml[272,9027+10]..[272,9027+25])
            structure_item (lambda/matching.ml[274,9054+2]..[274,9054+53])
              Pstr_type Nonrec
              [
                type_declaration "clause" (lambda/matching.ml[274,9054+14]..[274,9054+20]) (lambda/matching.ml[274,9054+2]..[274,9054+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[274,9054+23]..[274,9054+53])
                        Ptyp_constr "clause" (lambda/matching.ml[274,9054+47]..[274,9054+53])
                        [
                          core_type (lambda/matching.ml[274,9054+23]..[274,9054+46])
                            Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[274,9054+31]..[274,9054+46])
                            [
                              core_type (lambda/matching.ml[274,9054+23]..[274,9054+30])
                                Ptyp_constr "pattern" (lambda/matching.ml[274,9054+23]..[274,9054+30])
                                []
                            ]
                        ]
              ]
            structure_item (lambda/matching.ml[276,9109+2]..[276,9109+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[276,9109+6]..[276,9109+10])
                    Ppat_var "head" (lambda/matching.ml[276,9109+6]..[276,9109+10])
                  expression (lambda/matching.ml[276,9109+11]..[276,9109+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[276,9109+11]..[276,9109+12])
                      Ppat_var "p" (lambda/matching.ml[276,9109+11]..[276,9109+12])
                    expression (lambda/matching.ml[276,9109+15]..[276,9109+48])
                      Pexp_apply
                      expression (lambda/matching.ml[276,9109+15]..[276,9109+18])
                        Pexp_ident "fst" (lambda/matching.ml[276,9109+15]..[276,9109+18])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[276,9109+19]..[276,9109+48])
                            Pexp_apply
                            expression (lambda/matching.ml[276,9109+20]..[276,9109+45])
                              Pexp_ident "Patterns.Head.deconstruct" (lambda/matching.ml[276,9109+20]..[276,9109+45])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[276,9109+46]..[276,9109+47])
                                  Pexp_ident "p" (lambda/matching.ml[276,9109+46]..[276,9109+47])
                            ]
                      ]
              ]
            structure_item (lambda/matching.ml[278,9159+2]..[295,9928+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[278,9159+6]..[278,9159+11])
                    Ppat_var "alpha" (lambda/matching.ml[278,9159+6]..[278,9159+11])
                  expression (lambda/matching.ml[278,9159+12]..[295,9928+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[278,9159+12]..[278,9159+15])
                      Ppat_var "env" (lambda/matching.ml[278,9159+12]..[278,9159+15])
                    expression (lambda/matching.ml[278,9159+16]..[295,9928+23]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[278,9159+16]..[278,9159+29])
                        Ppat_constraint
                        pattern (lambda/matching.ml[278,9159+17]..[278,9159+18])
                          Ppat_var "p" (lambda/matching.ml[278,9159+17]..[278,9159+18])
                        core_type (lambda/matching.ml[278,9159+21]..[278,9159+28])
                          Ptyp_constr "pattern" (lambda/matching.ml[278,9159+21]..[278,9159+28])
                          []
                      expression (lambda/matching.ml[278,9159+30]..[295,9928+23])
                        Pexp_constraint
                        expression (lambda/matching.ml[279,9201+4]..[295,9928+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[279,9201+8]..[279,9201+17])
                                Ppat_var "alpha_pat" (lambda/matching.ml[279,9201+8]..[279,9201+17])
                              expression (lambda/matching.ml[279,9201+18]..[279,9201+51]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[279,9201+18]..[279,9201+21])
                                  Ppat_var "env" (lambda/matching.ml[279,9201+18]..[279,9201+21])
                                expression (lambda/matching.ml[279,9201+22]..[279,9201+51]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[279,9201+22]..[279,9201+23])
                                    Ppat_var "p" (lambda/matching.ml[279,9201+22]..[279,9201+23])
                                  expression (lambda/matching.ml[279,9201+26]..[279,9201+51])
                                    Pexp_apply
                                    expression (lambda/matching.ml[279,9201+26]..[279,9201+45])
                                      Pexp_ident "Typedtree.alpha_pat" (lambda/matching.ml[279,9201+26]..[279,9201+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[279,9201+46]..[279,9201+49])
                                          Pexp_ident "env" (lambda/matching.ml[279,9201+46]..[279,9201+49])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[279,9201+50]..[279,9201+51])
                                          Pexp_ident "p" (lambda/matching.ml[279,9201+50]..[279,9201+51])
                                    ]
                          ]
                          expression (lambda/matching.ml[280,9256+4]..[295,9928+23])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[280,9256+8]..[280,9256+16])
                                  Ppat_var "pat_desc" (lambda/matching.ml[280,9256+8]..[280,9256+16])
                                expression (lambda/matching.ml[281,9275+6]..[293,9878+42])
                                  Pexp_match
                                  expression (lambda/matching.ml[281,9275+12]..[281,9275+22])
                                    Pexp_field
                                    expression (lambda/matching.ml[281,9275+12]..[281,9275+13])
                                      Pexp_ident "p" (lambda/matching.ml[281,9275+12]..[281,9275+13])
                                    "pat_desc" (lambda/matching.ml[281,9275+14]..[281,9275+22])
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[282,9303+8]..[282,9303+12])
                                        Ppat_variant "Any"
                                        None
                                      expression (lambda/matching.ml[282,9303+16]..[282,9303+20])
                                        Pexp_variant "Any"
                                        None
                                    <case>
                                      pattern (lambda/matching.ml[283,9324+8]..[283,9324+21])
                                        Ppat_variant "Constant"
                                        Some
                                          pattern (lambda/matching.ml[283,9324+18]..[283,9324+21])
                                            Ppat_var "cst" (lambda/matching.ml[283,9324+18]..[283,9324+21])
                                      expression (lambda/matching.ml[283,9324+25]..[283,9324+38])
                                        Pexp_variant "Constant"
                                        Some
                                          expression (lambda/matching.ml[283,9324+35]..[283,9324+38])
                                            Pexp_ident "cst" (lambda/matching.ml[283,9324+35]..[283,9324+38])
                                    <case>
                                      pattern (lambda/matching.ml[284,9363+8]..[284,9363+17])
                                        Ppat_variant "Tuple"
                                        Some
                                          pattern (lambda/matching.ml[284,9363+15]..[284,9363+17])
                                            Ppat_var "ps" (lambda/matching.ml[284,9363+15]..[284,9363+17])
                                      expression (lambda/matching.ml[284,9363+21]..[284,9363+57])
                                        Pexp_variant "Tuple"
                                        Some
                                          expression (lambda/matching.ml[284,9363+28]..[284,9363+57])
                                            Pexp_apply
                                            expression (lambda/matching.ml[284,9363+29]..[284,9363+37])
                                              Pexp_ident "List.map" (lambda/matching.ml[284,9363+29]..[284,9363+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[284,9363+38]..[284,9363+53])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[284,9363+39]..[284,9363+48])
                                                    Pexp_ident "alpha_pat" (lambda/matching.ml[284,9363+39]..[284,9363+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[284,9363+49]..[284,9363+52])
                                                        Pexp_ident "env" (lambda/matching.ml[284,9363+49]..[284,9363+52])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[284,9363+54]..[284,9363+56])
                                                  Pexp_ident "ps" (lambda/matching.ml[284,9363+54]..[284,9363+56])
                                            ]
                                    <case>
                                      pattern (lambda/matching.ml[285,9421+8]..[285,9421+42])
                                        Ppat_variant "Construct"
                                        Some
                                          pattern (lambda/matching.ml[285,9421+19]..[285,9421+42])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[285,9421+20]..[285,9421+24])
                                                Ppat_var "cstr" (lambda/matching.ml[285,9421+20]..[285,9421+24])
                                              pattern (lambda/matching.ml[285,9421+26]..[285,9421+35])
                                                Ppat_var "cst_descr" (lambda/matching.ml[285,9421+26]..[285,9421+35])
                                              pattern (lambda/matching.ml[285,9421+37]..[285,9421+41])
                                                Ppat_var "args" (lambda/matching.ml[285,9421+37]..[285,9421+41])
                                            ]
                                      expression (lambda/matching.ml[286,9467+10]..[286,9467+69])
                                        Pexp_variant "Construct"
                                        Some
                                          expression (lambda/matching.ml[286,9467+21]..[286,9467+69])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[286,9467+22]..[286,9467+26])
                                                Pexp_ident "cstr" (lambda/matching.ml[286,9467+22]..[286,9467+26])
                                              expression (lambda/matching.ml[286,9467+28]..[286,9467+37])
                                                Pexp_ident "cst_descr" (lambda/matching.ml[286,9467+28]..[286,9467+37])
                                              expression (lambda/matching.ml[286,9467+39]..[286,9467+68])
                                                Pexp_apply
                                                expression (lambda/matching.ml[286,9467+39]..[286,9467+47])
                                                  Pexp_ident "List.map" (lambda/matching.ml[286,9467+39]..[286,9467+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[286,9467+48]..[286,9467+63])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[286,9467+49]..[286,9467+58])
                                                        Pexp_ident "alpha_pat" (lambda/matching.ml[286,9467+49]..[286,9467+58])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[286,9467+59]..[286,9467+62])
                                                            Pexp_ident "env" (lambda/matching.ml[286,9467+59]..[286,9467+62])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[286,9467+64]..[286,9467+68])
                                                      Pexp_ident "args" (lambda/matching.ml[286,9467+64]..[286,9467+68])
                                                ]
                                            ]
                                    <case>
                                      pattern (lambda/matching.ml[287,9537+8]..[287,9537+39])
                                        Ppat_variant "Variant"
                                        Some
                                          pattern (lambda/matching.ml[287,9537+17]..[287,9537+39])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[287,9537+18]..[287,9537+22])
                                                Ppat_var "cstr" (lambda/matching.ml[287,9537+18]..[287,9537+22])
                                              pattern (lambda/matching.ml[287,9537+24]..[287,9537+28])
                                                Ppat_var "argo" (lambda/matching.ml[287,9537+24]..[287,9537+28])
                                              pattern (lambda/matching.ml[287,9537+30]..[287,9537+38])
                                                Ppat_var "row_desc" (lambda/matching.ml[287,9537+30]..[287,9537+38])
                                            ]
                                      expression (lambda/matching.ml[288,9580+10]..[288,9580+68])
                                        Pexp_variant "Variant"
                                        Some
                                          expression (lambda/matching.ml[288,9580+19]..[288,9580+68])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[288,9580+20]..[288,9580+24])
                                                Pexp_ident "cstr" (lambda/matching.ml[288,9580+20]..[288,9580+24])
                                              expression (lambda/matching.ml[288,9580+26]..[288,9580+57])
                                                Pexp_apply
                                                expression (lambda/matching.ml[288,9580+26]..[288,9580+36])
                                                  Pexp_ident "Option.map" (lambda/matching.ml[288,9580+26]..[288,9580+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[288,9580+37]..[288,9580+52])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[288,9580+38]..[288,9580+47])
                                                        Pexp_ident "alpha_pat" (lambda/matching.ml[288,9580+38]..[288,9580+47])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[288,9580+48]..[288,9580+51])
                                                            Pexp_ident "env" (lambda/matching.ml[288,9580+48]..[288,9580+51])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[288,9580+53]..[288,9580+57])
                                                      Pexp_ident "argo" (lambda/matching.ml[288,9580+53]..[288,9580+57])
                                                ]
                                              expression (lambda/matching.ml[288,9580+59]..[288,9580+67])
                                                Pexp_ident "row_desc" (lambda/matching.ml[288,9580+59]..[288,9580+67])
                                            ]
                                    <case>
                                      pattern (lambda/matching.ml[289,9649+8]..[289,9649+32])
                                        Ppat_variant "Record"
                                        Some
                                          pattern (lambda/matching.ml[289,9649+16]..[289,9649+32])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[289,9649+17]..[289,9649+23])
                                                Ppat_var "fields" (lambda/matching.ml[289,9649+17]..[289,9649+23])
                                              pattern (lambda/matching.ml[289,9649+25]..[289,9649+31])
                                                Ppat_var "closed" (lambda/matching.ml[289,9649+25]..[289,9649+31])
                                            ]
                                      expression (lambda/matching.ml[290,9685+10]..[291,9758+61])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[290,9685+14]..[290,9685+25])
                                              Ppat_var "alpha_field" (lambda/matching.ml[290,9685+14]..[290,9685+25])
                                            expression (lambda/matching.ml[290,9685+26]..[290,9685+69]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/matching.ml[290,9685+26]..[290,9685+29])
                                                Ppat_var "env" (lambda/matching.ml[290,9685+26]..[290,9685+29])
                                              expression (lambda/matching.ml[290,9685+30]..[290,9685+69]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lambda/matching.ml[290,9685+30]..[290,9685+41])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[290,9685+31]..[290,9685+34])
                                                      Ppat_var "lid" (lambda/matching.ml[290,9685+31]..[290,9685+34])
                                                    pattern (lambda/matching.ml[290,9685+36]..[290,9685+37])
                                                      Ppat_var "l" (lambda/matching.ml[290,9685+36]..[290,9685+37])
                                                    pattern (lambda/matching.ml[290,9685+39]..[290,9685+40])
                                                      Ppat_var "p" (lambda/matching.ml[290,9685+39]..[290,9685+40])
                                                  ]
                                                expression (lambda/matching.ml[290,9685+44]..[290,9685+69])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[290,9685+45]..[290,9685+48])
                                                      Pexp_ident "lid" (lambda/matching.ml[290,9685+45]..[290,9685+48])
                                                    expression (lambda/matching.ml[290,9685+50]..[290,9685+51])
                                                      Pexp_ident "l" (lambda/matching.ml[290,9685+50]..[290,9685+51])
                                                    expression (lambda/matching.ml[290,9685+53]..[290,9685+68])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[290,9685+53]..[290,9685+62])
                                                        Pexp_ident "alpha_pat" (lambda/matching.ml[290,9685+53]..[290,9685+62])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[290,9685+63]..[290,9685+66])
                                                            Pexp_ident "env" (lambda/matching.ml[290,9685+63]..[290,9685+66])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[290,9685+67]..[290,9685+68])
                                                            Pexp_ident "p" (lambda/matching.ml[290,9685+67]..[290,9685+68])
                                                      ]
                                                  ]
                                        ]
                                        expression (lambda/matching.ml[291,9758+10]..[291,9758+61])
                                          Pexp_variant "Record"
                                          Some
                                            expression (lambda/matching.ml[291,9758+18]..[291,9758+61])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[291,9758+19]..[291,9758+52])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[291,9758+19]..[291,9758+27])
                                                    Pexp_ident "List.map" (lambda/matching.ml[291,9758+19]..[291,9758+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[291,9758+28]..[291,9758+45])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[291,9758+29]..[291,9758+40])
                                                          Pexp_ident "alpha_field" (lambda/matching.ml[291,9758+29]..[291,9758+40])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[291,9758+41]..[291,9758+44])
                                                              Pexp_ident "env" (lambda/matching.ml[291,9758+41]..[291,9758+44])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[291,9758+46]..[291,9758+52])
                                                        Pexp_ident "fields" (lambda/matching.ml[291,9758+46]..[291,9758+52])
                                                  ]
                                                expression (lambda/matching.ml[291,9758+54]..[291,9758+60])
                                                  Pexp_ident "closed" (lambda/matching.ml[291,9758+54]..[291,9758+60])
                                              ]
                                    <case>
                                      pattern (lambda/matching.ml[292,9820+8]..[292,9820+17])
                                        Ppat_variant "Array"
                                        Some
                                          pattern (lambda/matching.ml[292,9820+15]..[292,9820+17])
                                            Ppat_var "ps" (lambda/matching.ml[292,9820+15]..[292,9820+17])
                                      expression (lambda/matching.ml[292,9820+21]..[292,9820+57])
                                        Pexp_variant "Array"
                                        Some
                                          expression (lambda/matching.ml[292,9820+28]..[292,9820+57])
                                            Pexp_apply
                                            expression (lambda/matching.ml[292,9820+29]..[292,9820+37])
                                              Pexp_ident "List.map" (lambda/matching.ml[292,9820+29]..[292,9820+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[292,9820+38]..[292,9820+53])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[292,9820+39]..[292,9820+48])
                                                    Pexp_ident "alpha_pat" (lambda/matching.ml[292,9820+39]..[292,9820+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[292,9820+49]..[292,9820+52])
                                                        Pexp_ident "env" (lambda/matching.ml[292,9820+49]..[292,9820+52])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[292,9820+54]..[292,9820+56])
                                                  Pexp_ident "ps" (lambda/matching.ml[292,9820+54]..[292,9820+56])
                                            ]
                                    <case>
                                      pattern (lambda/matching.ml[293,9878+8]..[293,9878+15])
                                        Ppat_variant "Lazy"
                                        Some
                                          pattern (lambda/matching.ml[293,9878+14]..[293,9878+15])
                                            Ppat_var "p" (lambda/matching.ml[293,9878+14]..[293,9878+15])
                                      expression (lambda/matching.ml[293,9878+19]..[293,9878+42])
                                        Pexp_variant "Lazy"
                                        Some
                                          expression (lambda/matching.ml[293,9878+25]..[293,9878+42])
                                            Pexp_apply
                                            expression (lambda/matching.ml[293,9878+26]..[293,9878+35])
                                              Pexp_ident "alpha_pat" (lambda/matching.ml[293,9878+26]..[293,9878+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[293,9878+36]..[293,9878+39])
                                                  Pexp_ident "env" (lambda/matching.ml[293,9878+36]..[293,9878+39])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[293,9878+40]..[293,9878+41])
                                                  Pexp_ident "p" (lambda/matching.ml[293,9878+40]..[293,9878+41])
                                            ]
                                  ]
                            ]
                            expression (lambda/matching.ml[295,9928+4]..[295,9928+23])
                              Pexp_record
                              [
                                "pat_desc" (lambda/matching.ml[295,9928+13]..[295,9928+21]) ghost
                                  expression (lambda/matching.ml[295,9928+13]..[295,9928+21])
                                    Pexp_ident "pat_desc" (lambda/matching.ml[295,9928+13]..[295,9928+21])
                              ]
                              Some
                                expression (lambda/matching.ml[295,9928+6]..[295,9928+7])
                                  Pexp_ident "p" (lambda/matching.ml[295,9928+6]..[295,9928+7])
                        core_type (lambda/matching.ml[278,9159+32]..[278,9159+39])
                          Ptyp_constr "pattern" (lambda/matching.ml[278,9159+32]..[278,9159+39])
                          []
              ]
            structure_item (lambda/matching.ml[321,10972+2]..[379,13792+62])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[321,10972+6]..[321,10972+20])
                    Ppat_var "explode_or_pat" (lambda/matching.ml[321,10972+6]..[321,10972+20])
                  expression (lambda/matching.ml[321,10972+21]..[379,13792+62]) ghost
                    Pexp_fun
                    Labelled "arg"
                    None
                    pattern (lambda/matching.ml[321,10972+22]..[321,10972+25])
                      Ppat_var "arg" (lambda/matching.ml[321,10972+22]..[321,10972+25])
                    expression (lambda/matching.ml[321,10972+26]..[379,13792+62]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[321,10972+26]..[321,10972+51])
                        Ppat_constraint
                        pattern (lambda/matching.ml[321,10972+27]..[321,10972+28])
                          Ppat_var "p" (lambda/matching.ml[321,10972+27]..[321,10972+28])
                        core_type (lambda/matching.ml[321,10972+31]..[321,10972+50])
                          Ptyp_constr "Half_simple.pattern" (lambda/matching.ml[321,10972+31]..[321,10972+50])
                          []
                      expression (lambda/matching.ml[322,11024+8]..[379,13792+62]) ghost
                        Pexp_fun
                        Labelled "mk_action"
                        None
                        pattern (lambda/matching.ml[322,11024+9]..[322,11024+18])
                          Ppat_var "mk_action" (lambda/matching.ml[322,11024+9]..[322,11024+18])
                        expression (lambda/matching.ml[322,11024+19]..[379,13792+62]) ghost
                          Pexp_fun
                          Labelled "patbound_action_vars"
                          None
                          pattern (lambda/matching.ml[322,11024+20]..[322,11024+40])
                            Ppat_var "patbound_action_vars" (lambda/matching.ml[322,11024+20]..[322,11024+40])
                          expression (lambda/matching.ml[323,11065+4]..[379,13792+62])
                            Pexp_constraint
                            expression (lambda/matching.ml[324,11097+4]..[379,13792+62])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (lambda/matching.ml[324,11097+12]..[324,11097+19])
                                    Ppat_var "explode" (lambda/matching.ml[324,11097+12]..[324,11097+19])
                                  expression (lambda/matching.ml[324,11097+20]..[377,13723+61]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[324,11097+20]..[324,11097+21])
                                      Ppat_var "p" (lambda/matching.ml[324,11097+20]..[324,11097+21])
                                    expression (lambda/matching.ml[324,11097+22]..[377,13723+61]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[324,11097+22]..[324,11097+29])
                                        Ppat_var "aliases" (lambda/matching.ml[324,11097+22]..[324,11097+29])
                                      expression (lambda/matching.ml[324,11097+30]..[377,13723+61]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[324,11097+30]..[324,11097+33])
                                          Ppat_var "rem" (lambda/matching.ml[324,11097+30]..[324,11097+33])
                                        expression (lambda/matching.ml[325,11133+6]..[377,13723+61])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[325,11133+10]..[325,11133+23])
                                                Ppat_var "split_explode" (lambda/matching.ml[325,11133+10]..[325,11133+23])
                                              expression (lambda/matching.ml[325,11133+24]..[325,11133+76]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lambda/matching.ml[325,11133+24]..[325,11133+25])
                                                  Ppat_var "p" (lambda/matching.ml[325,11133+24]..[325,11133+25])
                                                expression (lambda/matching.ml[325,11133+26]..[325,11133+76]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/matching.ml[325,11133+26]..[325,11133+33])
                                                    Ppat_var "aliases" (lambda/matching.ml[325,11133+26]..[325,11133+33])
                                                  expression (lambda/matching.ml[325,11133+34]..[325,11133+76]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/matching.ml[325,11133+34]..[325,11133+37])
                                                      Ppat_var "rem" (lambda/matching.ml[325,11133+34]..[325,11133+37])
                                                    expression (lambda/matching.ml[325,11133+40]..[325,11133+76])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[325,11133+40]..[325,11133+47])
                                                        Pexp_ident "explode" (lambda/matching.ml[325,11133+40]..[325,11133+47])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[325,11133+48]..[325,11133+64])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[325,11133+49]..[325,11133+61])
                                                              Pexp_ident "General.view" (lambda/matching.ml[325,11133+49]..[325,11133+61])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[325,11133+62]..[325,11133+63])
                                                                  Pexp_ident "p" (lambda/matching.ml[325,11133+62]..[325,11133+63])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[325,11133+65]..[325,11133+72])
                                                            Pexp_ident "aliases" (lambda/matching.ml[325,11133+65]..[325,11133+72])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[325,11133+73]..[325,11133+76])
                                                            Pexp_ident "rem" (lambda/matching.ml[325,11133+73]..[325,11133+76])
                                                      ]
                                          ]
                                          expression (lambda/matching.ml[326,11213+6]..[377,13723+61])
                                            Pexp_match
                                            expression (lambda/matching.ml[326,11213+12]..[326,11213+22])
                                              Pexp_field
                                              expression (lambda/matching.ml[326,11213+12]..[326,11213+13])
                                                Pexp_ident "p" (lambda/matching.ml[326,11213+12]..[326,11213+13])
                                              "pat_desc" (lambda/matching.ml[326,11213+14]..[326,11213+22])
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[327,11241+8]..[327,11241+23])
                                                  Ppat_variant "Or"
                                                  Some
                                                    pattern (lambda/matching.ml[327,11241+12]..[327,11241+23])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[327,11241+13]..[327,11241+15])
                                                          Ppat_var "p1" (lambda/matching.ml[327,11241+13]..[327,11241+15])
                                                        pattern (lambda/matching.ml[327,11241+17]..[327,11241+19])
                                                          Ppat_var "p2" (lambda/matching.ml[327,11241+17]..[327,11241+19])
                                                        pattern (lambda/matching.ml[327,11241+21]..[327,11241+22])
                                                          Ppat_any
                                                      ]
                                                expression (lambda/matching.ml[328,11268+10]..[328,11268+65])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[328,11268+10]..[328,11268+23])
                                                    Pexp_ident "split_explode" (lambda/matching.ml[328,11268+10]..[328,11268+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[328,11268+24]..[328,11268+26])
                                                        Pexp_ident "p1" (lambda/matching.ml[328,11268+24]..[328,11268+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[328,11268+27]..[328,11268+34])
                                                        Pexp_ident "aliases" (lambda/matching.ml[328,11268+27]..[328,11268+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[328,11268+35]..[328,11268+65])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[328,11268+36]..[328,11268+49])
                                                          Pexp_ident "split_explode" (lambda/matching.ml[328,11268+36]..[328,11268+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[328,11268+50]..[328,11268+52])
                                                              Pexp_ident "p2" (lambda/matching.ml[328,11268+50]..[328,11268+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[328,11268+53]..[328,11268+60])
                                                              Pexp_ident "aliases" (lambda/matching.ml[328,11268+53]..[328,11268+60])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[328,11268+61]..[328,11268+64])
                                                              Pexp_ident "rem" (lambda/matching.ml[328,11268+61]..[328,11268+64])
                                                        ]
                                                  ]
                                              <case>
                                                pattern (lambda/matching.ml[329,11334+8]..[329,11334+25])
                                                  Ppat_variant "Alias"
                                                  Some
                                                    pattern (lambda/matching.ml[329,11334+15]..[329,11334+25])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[329,11334+16]..[329,11334+17])
                                                          Ppat_var "p" (lambda/matching.ml[329,11334+16]..[329,11334+17])
                                                        pattern (lambda/matching.ml[329,11334+19]..[329,11334+21])
                                                          Ppat_var "id" (lambda/matching.ml[329,11334+19]..[329,11334+21])
                                                        pattern (lambda/matching.ml[329,11334+23]..[329,11334+24])
                                                          Ppat_any
                                                      ]
                                                expression (lambda/matching.ml[329,11334+29]..[329,11334+64])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[329,11334+29]..[329,11334+42])
                                                    Pexp_ident "split_explode" (lambda/matching.ml[329,11334+29]..[329,11334+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[329,11334+43]..[329,11334+44])
                                                        Pexp_ident "p" (lambda/matching.ml[329,11334+43]..[329,11334+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[329,11334+45]..[329,11334+60])
                                                        Pexp_construct "::" (lambda/matching.ml[329,11334+49]..[329,11334+51])
                                                        Some
                                                          expression (lambda/matching.ml[329,11334+46]..[329,11334+59]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[329,11334+46]..[329,11334+48])
                                                                Pexp_ident "id" (lambda/matching.ml[329,11334+46]..[329,11334+48])
                                                              expression (lambda/matching.ml[329,11334+52]..[329,11334+59])
                                                                Pexp_ident "aliases" (lambda/matching.ml[329,11334+52]..[329,11334+59])
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[329,11334+61]..[329,11334+64])
                                                        Pexp_ident "rem" (lambda/matching.ml[329,11334+61]..[329,11334+64])
                                                  ]
                                              <case>
                                                pattern (lambda/matching.ml[330,11399+8]..[330,11399+22])
                                                  Ppat_variant "Var"
                                                  Some
                                                    pattern (lambda/matching.ml[330,11399+13]..[330,11399+22])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[330,11399+14]..[330,11399+16])
                                                          Ppat_var "id" (lambda/matching.ml[330,11399+14]..[330,11399+16])
                                                        pattern (lambda/matching.ml[330,11399+18]..[330,11399+21])
                                                          Ppat_var "str" (lambda/matching.ml[330,11399+18]..[330,11399+21])
                                                      ]
                                                expression (lambda/matching.ml[331,11425+10]..[333,11510+23])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[331,11425+10]..[331,11425+17])
                                                    Pexp_ident "explode" (lambda/matching.ml[331,11425+10]..[331,11425+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[332,11443+12]..[332,11443+66])
                                                        Pexp_record
                                                        [
                                                          "pat_desc" (lambda/matching.ml[332,11443+21]..[332,11443+29])
                                                            expression (lambda/matching.ml[332,11443+32]..[332,11443+64])
                                                              Pexp_variant "Alias"
                                                              Some
                                                                expression (lambda/matching.ml[332,11443+39]..[332,11443+64])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[332,11443+40]..[332,11443+54])
                                                                      Pexp_ident "Patterns.omega" (lambda/matching.ml[332,11443+40]..[332,11443+54])
                                                                    expression (lambda/matching.ml[332,11443+56]..[332,11443+58])
                                                                      Pexp_ident "id" (lambda/matching.ml[332,11443+56]..[332,11443+58])
                                                                    expression (lambda/matching.ml[332,11443+60]..[332,11443+63])
                                                                      Pexp_ident "str" (lambda/matching.ml[332,11443+60]..[332,11443+63])
                                                                  ]
                                                        ]
                                                        Some
                                                          expression (lambda/matching.ml[332,11443+14]..[332,11443+15])
                                                            Pexp_ident "p" (lambda/matching.ml[332,11443+14]..[332,11443+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[333,11510+12]..[333,11510+19])
                                                        Pexp_ident "aliases" (lambda/matching.ml[333,11510+12]..[333,11510+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[333,11510+20]..[333,11510+23])
                                                        Pexp_ident "rem" (lambda/matching.ml[333,11510+20]..[333,11510+23])
                                                  ]
                                              <case>
                                                pattern (lambda/matching.ml[334,11534+8]..[334,11534+21])
                                                  Ppat_alias "view" (lambda/matching.ml[334,11534+17]..[334,11534+21])
                                                  pattern (lambda/matching.ml[334,11534+8]..[334,11534+13])
                                                    Ppat_type
                                                    "view" (lambda/matching.ml[334,11534+9]..[334,11534+13])
                                                expression (lambda/matching.ml[350,12328+10]..[377,13723+61])
                                                  Pexp_let Rec
                                                  [
                                                    <def>
                                                      pattern (lambda/matching.ml[350,12328+18]..[350,12328+30])
                                                        Ppat_var "fresh_clause" (lambda/matching.ml[350,12328+18]..[350,12328+30])
                                                      expression (lambda/matching.ml[350,12328+31]..[375,13692+17]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/matching.ml[350,12328+31]..[350,12328+37])
                                                          Ppat_var "arg_id" (lambda/matching.ml[350,12328+31]..[350,12328+37])
                                                        expression (lambda/matching.ml[350,12328+38]..[375,13692+17]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/matching.ml[350,12328+38]..[350,12328+49])
                                                            Ppat_var "action_vars" (lambda/matching.ml[350,12328+38]..[350,12328+49])
                                                          expression (lambda/matching.ml[350,12328+50]..[375,13692+17]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/matching.ml[350,12328+50]..[350,12328+62])
                                                              Ppat_var "renaming_env" (lambda/matching.ml[350,12328+50]..[350,12328+62])
                                                            expression (lambda/matching.ml[350,12328+65]..[375,13692+17])
                                                              Pexp_function
                                                              [
                                                                <case>
                                                                  pattern (lambda/matching.ml[351,12402+14]..[351,12402+16])
                                                                    Ppat_construct "[]" (lambda/matching.ml[351,12402+14]..[351,12402+16])
                                                                    None
                                                                  expression (lambda/matching.ml[352,12422+16]..[354,12580+41])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (lambda/matching.ml[352,12422+20]..[352,12422+29])
  Ppat_var "fresh_pat" (lambda/matching.ml[352,12422+20]..[352,12422+29])
expression (lambda/matching.ml[352,12422+32]..[352,12422+77])
  Pexp_apply
  expression (lambda/matching.ml[352,12422+32]..[352,12422+37])
    Pexp_ident "alpha" (lambda/matching.ml[352,12422+32]..[352,12422+37])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[352,12422+38]..[352,12422+50])
        Pexp_ident "renaming_env" (lambda/matching.ml[352,12422+38]..[352,12422+50])
    <arg>
    Nolabel
      expression (lambda/matching.ml[352,12422+51]..[352,12422+77])
        Pexp_record
        [
          "pat_desc" (lambda/matching.ml[352,12422+60]..[352,12422+68])
            expression (lambda/matching.ml[352,12422+71]..[352,12422+75])
              Pexp_ident "view" (lambda/matching.ml[352,12422+71]..[352,12422+75])
        ]
        Some
          expression (lambda/matching.ml[352,12422+53]..[352,12422+54])
            Pexp_ident "p" (lambda/matching.ml[352,12422+53]..[352,12422+54])
  ]
                                                                    ]
                                                                    expression (lambda/matching.ml[353,12503+16]..[354,12580+41])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (lambda/matching.ml[353,12503+20]..[353,12503+32])
    Ppat_var "fresh_action" (lambda/matching.ml[353,12503+20]..[353,12503+32])
  expression (lambda/matching.ml[353,12503+35]..[353,12503+73])
    Pexp_apply
    expression (lambda/matching.ml[353,12503+35]..[353,12503+44])
      Pexp_ident "mk_action" (lambda/matching.ml[353,12503+35]..[353,12503+44])
    [
      <arg>
      Labelled "vars"
        expression (lambda/matching.ml[353,12503+51]..[353,12503+73])
          Pexp_apply
          expression (lambda/matching.ml[353,12503+52]..[353,12503+60])
            Pexp_ident "List.rev" (lambda/matching.ml[353,12503+52]..[353,12503+60])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[353,12503+61]..[353,12503+72])
                Pexp_ident "action_vars" (lambda/matching.ml[353,12503+61]..[353,12503+72])
          ]
    ]
                                                                      ]
                                                                      expression (lambda/matching.ml[354,12580+16]..[354,12580+41])
Pexp_tuple
[
  expression (lambda/matching.ml[354,12580+17]..[354,12580+26])
    Pexp_ident "fresh_pat" (lambda/matching.ml[354,12580+17]..[354,12580+26])
  expression (lambda/matching.ml[354,12580+28]..[354,12580+40])
    Pexp_ident "fresh_action" (lambda/matching.ml[354,12580+28]..[354,12580+40])
]
                                                                <case>
                                                                  pattern (lambda/matching.ml[355,12622+14]..[355,12622+32])
                                                                    Ppat_construct "::" (lambda/matching.ml[355,12622+21]..[355,12622+23])
                                                                    Some
                                                                      []
                                                                      pattern (lambda/matching.ml[355,12622+14]..[355,12622+32]) ghost
Ppat_tuple
[
  pattern (lambda/matching.ml[355,12622+14]..[355,12622+20])
    Ppat_var "pat_id" (lambda/matching.ml[355,12622+14]..[355,12622+20])
  pattern (lambda/matching.ml[355,12622+24]..[355,12622+32])
    Ppat_var "rem_vars" (lambda/matching.ml[355,12622+24]..[355,12622+32])
]
                                                                  expression (lambda/matching.ml[356,12658+14]..[375,13692+17])
                                                                    Pexp_ifthenelse
                                                                    expression (lambda/matching.ml[356,12658+17]..[356,12658+46])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[356,12658+17]..[356,12658+20])
Pexp_ident "not" (lambda/matching.ml[356,12658+17]..[356,12658+20])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[356,12658+21]..[356,12658+46])
    Pexp_apply
    expression (lambda/matching.ml[356,12658+22]..[356,12658+30])
      Pexp_ident "List.mem" (lambda/matching.ml[356,12658+22]..[356,12658+30])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[356,12658+31]..[356,12658+37])
          Pexp_ident "pat_id" (lambda/matching.ml[356,12658+31]..[356,12658+37])
      <arg>
      Nolabel
        expression (lambda/matching.ml[356,12658+38]..[356,12658+45])
          Pexp_ident "aliases" (lambda/matching.ml[356,12658+38]..[356,12658+45])
    ]
                                                                      ]
                                                                    expression (lambda/matching.ml[356,12658+52]..[361,12976+17])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (lambda/matching.ml[357,12716+20]..[357,12716+28])
    Ppat_var "fresh_id" (lambda/matching.ml[357,12716+20]..[357,12716+28])
  expression (lambda/matching.ml[357,12716+31]..[357,12716+50])
    Pexp_apply
    expression (lambda/matching.ml[357,12716+31]..[357,12716+43])
      Pexp_ident "Ident.rename" (lambda/matching.ml[357,12716+31]..[357,12716+43])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[357,12716+44]..[357,12716+50])
          Pexp_ident "pat_id" (lambda/matching.ml[357,12716+44]..[357,12716+50])
    ]
                                                                      ]
                                                                      expression (lambda/matching.ml[358,12770+16]..[360,12906+69])
Pexp_let Nonrec
[
  <def>
    pattern (lambda/matching.ml[358,12770+20]..[358,12770+31])
      Ppat_var "action_vars" (lambda/matching.ml[358,12770+20]..[358,12770+31])
    expression (lambda/matching.ml[358,12770+34]..[358,12770+57])
      Pexp_construct "::" (lambda/matching.ml[358,12770+43]..[358,12770+45])
      Some
        expression (lambda/matching.ml[358,12770+34]..[358,12770+57]) ghost
          Pexp_tuple
          [
            expression (lambda/matching.ml[358,12770+34]..[358,12770+42])
              Pexp_ident "fresh_id" (lambda/matching.ml[358,12770+34]..[358,12770+42])
            expression (lambda/matching.ml[358,12770+46]..[358,12770+57])
              Pexp_ident "action_vars" (lambda/matching.ml[358,12770+46]..[358,12770+57])
          ]
]
expression (lambda/matching.ml[359,12831+16]..[360,12906+69])
  Pexp_let Nonrec
  [
    <def>
      pattern (lambda/matching.ml[359,12831+20]..[359,12831+32])
        Ppat_var "renaming_env" (lambda/matching.ml[359,12831+20]..[359,12831+32])
      expression (lambda/matching.ml[359,12831+35]..[359,12831+71])
        Pexp_construct "::" (lambda/matching.ml[359,12831+55]..[359,12831+57])
        Some
          expression (lambda/matching.ml[359,12831+36]..[359,12831+70]) ghost
            Pexp_tuple
            [
              expression (lambda/matching.ml[359,12831+36]..[359,12831+54])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[359,12831+37]..[359,12831+43])
                    Pexp_ident "pat_id" (lambda/matching.ml[359,12831+37]..[359,12831+43])
                  expression (lambda/matching.ml[359,12831+45]..[359,12831+53])
                    Pexp_ident "fresh_id" (lambda/matching.ml[359,12831+45]..[359,12831+53])
                ]
              expression (lambda/matching.ml[359,12831+58]..[359,12831+70])
                Pexp_ident "renaming_env" (lambda/matching.ml[359,12831+58]..[359,12831+70])
            ]
  ]
  expression (lambda/matching.ml[360,12906+16]..[360,12906+69])
    Pexp_apply
    expression (lambda/matching.ml[360,12906+16]..[360,12906+28])
      Pexp_ident "fresh_clause" (lambda/matching.ml[360,12906+16]..[360,12906+28])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[360,12906+29]..[360,12906+35])
          Pexp_ident "arg_id" (lambda/matching.ml[360,12906+29]..[360,12906+35])
      <arg>
      Nolabel
        expression (lambda/matching.ml[360,12906+36]..[360,12906+47])
          Pexp_ident "action_vars" (lambda/matching.ml[360,12906+36]..[360,12906+47])
      <arg>
      Nolabel
        expression (lambda/matching.ml[360,12906+48]..[360,12906+60])
          Pexp_ident "renaming_env" (lambda/matching.ml[360,12906+48]..[360,12906+60])
      <arg>
      Nolabel
        expression (lambda/matching.ml[360,12906+61]..[360,12906+69])
          Pexp_ident "rem_vars" (lambda/matching.ml[360,12906+61]..[360,12906+69])
    ]
                                                                    Some
                                                                      expression (lambda/matching.ml[361,12976+23]..[375,13692+17])
Pexp_match
expression (lambda/matching.ml[361,12976+35]..[361,12976+46])
  Pexp_tuple
  [
    expression (lambda/matching.ml[361,12976+35]..[361,12976+41])
      Pexp_ident "arg_id" (lambda/matching.ml[361,12976+35]..[361,12976+41])
    expression (lambda/matching.ml[361,12976+43]..[361,12976+46])
      Pexp_ident "arg" (lambda/matching.ml[361,12976+43]..[361,12976+46])
  ]
[
  <case>
    pattern (lambda/matching.ml[362,13028+18]..[363,13057+31])
      Ppat_or
      pattern (lambda/matching.ml[362,13028+18]..[362,13028+28])
        Ppat_tuple
        [
          pattern (lambda/matching.ml[362,13028+18]..[362,13028+25])
            Ppat_construct "Some" (lambda/matching.ml[362,13028+18]..[362,13028+22])
            Some
              []
              pattern (lambda/matching.ml[362,13028+23]..[362,13028+25])
                Ppat_var "id" (lambda/matching.ml[362,13028+23]..[362,13028+25])
          pattern (lambda/matching.ml[362,13028+27]..[362,13028+28])
            Ppat_any
        ]
      pattern (lambda/matching.ml[363,13057+18]..[363,13057+31])
        Ppat_tuple
        [
          pattern (lambda/matching.ml[363,13057+18]..[363,13057+22])
            Ppat_construct "None" (lambda/matching.ml[363,13057+18]..[363,13057+22])
            None
          pattern (lambda/matching.ml[363,13057+24]..[363,13057+31])
            Ppat_construct "Lvar" (lambda/matching.ml[363,13057+24]..[363,13057+28])
            Some
              []
              pattern (lambda/matching.ml[363,13057+29]..[363,13057+31])
                Ppat_var "id" (lambda/matching.ml[363,13057+29]..[363,13057+31])
        ]
    expression (lambda/matching.ml[364,13092+18]..[365,13149+71])
      Pexp_let Nonrec
      [
        <def>
          pattern (lambda/matching.ml[364,13092+22]..[364,13092+33])
            Ppat_var "action_vars" (lambda/matching.ml[364,13092+22]..[364,13092+33])
          expression (lambda/matching.ml[364,13092+36]..[364,13092+53])
            Pexp_construct "::" (lambda/matching.ml[364,13092+39]..[364,13092+41])
            Some
              expression (lambda/matching.ml[364,13092+36]..[364,13092+53]) ghost
                Pexp_tuple
                [
                  expression (lambda/matching.ml[364,13092+36]..[364,13092+38])
                    Pexp_ident "id" (lambda/matching.ml[364,13092+36]..[364,13092+38])
                  expression (lambda/matching.ml[364,13092+42]..[364,13092+53])
                    Pexp_ident "action_vars" (lambda/matching.ml[364,13092+42]..[364,13092+53])
                ]
      ]
      expression (lambda/matching.ml[365,13149+18]..[365,13149+71])
        Pexp_apply
        expression (lambda/matching.ml[365,13149+18]..[365,13149+30])
          Pexp_ident "fresh_clause" (lambda/matching.ml[365,13149+18]..[365,13149+30])
        [
          <arg>
          Nolabel
            expression (lambda/matching.ml[365,13149+31]..[365,13149+37])
              Pexp_ident "arg_id" (lambda/matching.ml[365,13149+31]..[365,13149+37])
          <arg>
          Nolabel
            expression (lambda/matching.ml[365,13149+38]..[365,13149+49])
              Pexp_ident "action_vars" (lambda/matching.ml[365,13149+38]..[365,13149+49])
          <arg>
          Nolabel
            expression (lambda/matching.ml[365,13149+50]..[365,13149+62])
              Pexp_ident "renaming_env" (lambda/matching.ml[365,13149+50]..[365,13149+62])
          <arg>
          Nolabel
            expression (lambda/matching.ml[365,13149+63]..[365,13149+71])
              Pexp_ident "rem_vars" (lambda/matching.ml[365,13149+63]..[365,13149+71])
        ]
  <case>
    pattern (lambda/matching.ml[366,13221+18]..[366,13221+25])
      Ppat_tuple
      [
        pattern (lambda/matching.ml[366,13221+18]..[366,13221+22])
          Ppat_construct "None" (lambda/matching.ml[366,13221+18]..[366,13221+22])
          None
        pattern (lambda/matching.ml[366,13221+24]..[366,13221+25])
          Ppat_any
      ]
    expression (lambda/matching.ml[369,13395+18]..[374,13638+53])
      Pexp_let Nonrec
      [
        <def>
          pattern (lambda/matching.ml[369,13395+22]..[369,13395+24])
            Ppat_var "id" (lambda/matching.ml[369,13395+22]..[369,13395+24])
          expression (lambda/matching.ml[369,13395+27]..[369,13395+46])
            Pexp_apply
            expression (lambda/matching.ml[369,13395+27]..[369,13395+39])
              Pexp_ident "Ident.rename" (lambda/matching.ml[369,13395+27]..[369,13395+39])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[369,13395+40]..[369,13395+46])
                  Pexp_ident "pat_id" (lambda/matching.ml[369,13395+40]..[369,13395+46])
            ]
      ]
      expression (lambda/matching.ml[370,13445+18]..[374,13638+53])
        Pexp_let Nonrec
        [
          <def>
            pattern (lambda/matching.ml[370,13445+22]..[370,13445+33])
              Ppat_var "action_vars" (lambda/matching.ml[370,13445+22]..[370,13445+33])
            expression (lambda/matching.ml[370,13445+36]..[370,13445+55])
              Pexp_construct "::" (lambda/matching.ml[370,13445+40]..[370,13445+42])
              Some
                expression (lambda/matching.ml[370,13445+37]..[370,13445+54]) ghost
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[370,13445+37]..[370,13445+39])
                      Pexp_ident "id" (lambda/matching.ml[370,13445+37]..[370,13445+39])
                    expression (lambda/matching.ml[370,13445+43]..[370,13445+54])
                      Pexp_ident "action_vars" (lambda/matching.ml[370,13445+43]..[370,13445+54])
                  ]
        ]
        expression (lambda/matching.ml[371,13504+18]..[374,13638+53])
          Pexp_let Nonrec
          [
            <def>
              pattern (lambda/matching.ml[371,13504+22]..[371,13504+33])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[371,13504+22]..[371,13504+25])
                    Ppat_var "pat" (lambda/matching.ml[371,13504+22]..[371,13504+25])
                  pattern (lambda/matching.ml[371,13504+27]..[371,13504+33])
                    Ppat_var "action" (lambda/matching.ml[371,13504+27]..[371,13504+33])
                ]
              expression (lambda/matching.ml[372,13540+20]..[372,13540+76])
                Pexp_apply
                expression (lambda/matching.ml[372,13540+20]..[372,13540+32])
                  Pexp_ident "fresh_clause" (lambda/matching.ml[372,13540+20]..[372,13540+32])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[372,13540+33]..[372,13540+42])
                      Pexp_construct "Some" (lambda/matching.ml[372,13540+34]..[372,13540+38])
                      Some
                        expression (lambda/matching.ml[372,13540+39]..[372,13540+41])
                          Pexp_ident "id" (lambda/matching.ml[372,13540+39]..[372,13540+41])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[372,13540+43]..[372,13540+54])
                      Pexp_ident "action_vars" (lambda/matching.ml[372,13540+43]..[372,13540+54])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[372,13540+55]..[372,13540+67])
                      Pexp_ident "renaming_env" (lambda/matching.ml[372,13540+55]..[372,13540+67])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[372,13540+68]..[372,13540+76])
                      Pexp_ident "rem_vars" (lambda/matching.ml[372,13540+68]..[372,13540+76])
                ]
          ]
          expression (lambda/matching.ml[374,13638+18]..[374,13638+53])
            Pexp_tuple
            [
              expression (lambda/matching.ml[374,13638+18]..[374,13638+21])
                Pexp_ident "pat" (lambda/matching.ml[374,13638+18]..[374,13638+21])
              expression (lambda/matching.ml[374,13638+23]..[374,13638+53])
                Pexp_apply
                expression (lambda/matching.ml[374,13638+23]..[374,13638+33])
                  Pexp_ident "bind_alias" (lambda/matching.ml[374,13638+23]..[374,13638+33])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[374,13638+34]..[374,13638+37])
                      Pexp_ident "pat" (lambda/matching.ml[374,13638+34]..[374,13638+37])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[374,13638+38]..[374,13638+40])
                      Pexp_ident "id" (lambda/matching.ml[374,13638+38]..[374,13638+40])
                  <arg>
                  Labelled "arg"
                    expression (lambda/matching.ml[374,13638+42]..[374,13638+45])
                      Pexp_ident "arg" (lambda/matching.ml[374,13638+42]..[374,13638+45])
                  <arg>
                  Labelled "action"
                    expression (lambda/matching.ml[374,13638+47]..[374,13638+53])
                      Pexp_ident "action" (lambda/matching.ml[374,13638+47]..[374,13638+53])
                ]
            ]
]
                                                              ]
                                                  ]
                                                  expression (lambda/matching.ml[377,13723+10]..[377,13723+61])
                                                    Pexp_construct "::" (lambda/matching.ml[377,13723+55]..[377,13723+57])
                                                    Some
                                                      expression (lambda/matching.ml[377,13723+10]..[377,13723+61]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[377,13723+10]..[377,13723+54])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[377,13723+10]..[377,13723+22])
                                                              Pexp_ident "fresh_clause" (lambda/matching.ml[377,13723+10]..[377,13723+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[377,13723+23]..[377,13723+27])
                                                                  Pexp_construct "None" (lambda/matching.ml[377,13723+23]..[377,13723+27])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[377,13723+28]..[377,13723+30])
                                                                  Pexp_construct "[]" (lambda/matching.ml[377,13723+28]..[377,13723+30])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[377,13723+31]..[377,13723+33])
                                                                  Pexp_construct "[]" (lambda/matching.ml[377,13723+31]..[377,13723+33])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[377,13723+34]..[377,13723+54])
                                                                  Pexp_ident "patbound_action_vars" (lambda/matching.ml[377,13723+34]..[377,13723+54])
                                                            ]
                                                          expression (lambda/matching.ml[377,13723+58]..[377,13723+61])
                                                            Pexp_ident "rem" (lambda/matching.ml[377,13723+58]..[377,13723+61])
                                                        ]
                                            ]
                              ]
                              expression (lambda/matching.ml[379,13792+4]..[379,13792+62])
                                Pexp_apply
                                expression (lambda/matching.ml[379,13792+4]..[379,13792+11])
                                  Pexp_ident "explode" (lambda/matching.ml[379,13792+4]..[379,13792+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[379,13792+12]..[379,13792+56])
                                      Pexp_coerce
                                      expression (lambda/matching.ml[379,13792+13]..[379,13792+14])
                                        Pexp_ident "p" (lambda/matching.ml[379,13792+13]..[379,13792+14])
                                      Some
                                        core_type (lambda/matching.ml[379,13792+17]..[379,13792+36])
                                          Ptyp_constr "Half_simple.pattern" (lambda/matching.ml[379,13792+17]..[379,13792+36])
                                          []
                                      core_type (lambda/matching.ml[379,13792+40]..[379,13792+55])
                                        Ptyp_constr "General.pattern" (lambda/matching.ml[379,13792+40]..[379,13792+55])
                                        []
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[379,13792+57]..[379,13792+59])
                                      Pexp_construct "[]" (lambda/matching.ml[379,13792+57]..[379,13792+59])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[379,13792+60]..[379,13792+62])
                                      Pexp_construct "[]" (lambda/matching.ml[379,13792+60]..[379,13792+62])
                                      None
                                ]
                            core_type (lambda/matching.ml[323,11065+6]..[323,11065+29])
                              Ptyp_constr "list" (lambda/matching.ml[323,11065+25]..[323,11065+29])
                              [
                                core_type (lambda/matching.ml[323,11065+7]..[323,11065+23])
                                  Ptyp_tuple
                                  [
                                    core_type (lambda/matching.ml[323,11065+7]..[323,11065+14])
                                      Ptyp_constr "pattern" (lambda/matching.ml[323,11065+7]..[323,11065+14])
                                      []
                                    core_type (lambda/matching.ml[323,11065+17]..[323,11065+23])
                                      Ptyp_constr "lambda" (lambda/matching.ml[323,11065+17]..[323,11065+23])
                                      []
                                  ]
                              ]
              ]
          ]
        module_type (lambda/matching.ml[258,8672+16]..[271,9014+3])
          Pmty_signature
          [
            signature_item (lambda/matching.ml[259,8692+2]..[259,8692+40])
              Psig_include
              module_type (lambda/matching.ml[259,8692+10]..[259,8692+40])
                Pmty_typeof
                module_expr (lambda/matching.ml[259,8692+25]..[259,8692+40])
                  Pmod_ident "Patterns.Simple" (lambda/matching.ml[259,8692+25]..[259,8692+40])
            signature_item (lambda/matching.ml[261,8734+2]..[261,8734+53])
              Psig_type Nonrec
              [
                type_declaration "clause" (lambda/matching.ml[261,8734+14]..[261,8734+20]) (lambda/matching.ml[261,8734+2]..[261,8734+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[261,8734+23]..[261,8734+53])
                        Ptyp_constr "clause" (lambda/matching.ml[261,8734+47]..[261,8734+53])
                        [
                          core_type (lambda/matching.ml[261,8734+23]..[261,8734+46])
                            Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[261,8734+31]..[261,8734+46])
                            [
                              core_type (lambda/matching.ml[261,8734+23]..[261,8734+30])
                                Ptyp_constr "pattern" (lambda/matching.ml[261,8734+23]..[261,8734+30])
                                []
                            ]
                        ]
              ]
            signature_item (lambda/matching.ml[263,8789+2]..[263,8789+39])
              Psig_value
              value_description "head" (lambda/matching.ml[263,8789+6]..[263,8789+10]) (lambda/matching.ml[263,8789+2]..[263,8789+39])
                core_type (lambda/matching.ml[263,8789+13]..[263,8789+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[263,8789+13]..[263,8789+20])
                    Ptyp_constr "pattern" (lambda/matching.ml[263,8789+13]..[263,8789+20])
                    []
                  core_type (lambda/matching.ml[263,8789+24]..[263,8789+39])
                    Ptyp_constr "Patterns.Head.t" (lambda/matching.ml[263,8789+24]..[263,8789+39])
                    []
                []
            signature_item (lambda/matching.ml[265,8830+2]..[270,8986+27])
              Psig_value
              value_description "explode_or_pat" (lambda/matching.ml[265,8830+6]..[265,8830+20]) (lambda/matching.ml[265,8830+2]..[270,8986+27])
                core_type (lambda/matching.ml[266,8853+4]..[270,8986+27])
                  Ptyp_arrow
                  Labelled "arg"
                  core_type (lambda/matching.ml[266,8853+8]..[266,8853+14])
                    Ptyp_constr "lambda" (lambda/matching.ml[266,8853+8]..[266,8853+14])
                    []
                  core_type (lambda/matching.ml[267,8871+4]..[270,8986+27])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[267,8871+4]..[267,8871+23])
                      Ptyp_constr "Half_simple.pattern" (lambda/matching.ml[267,8871+4]..[267,8871+23])
                      []
                    core_type (lambda/matching.ml[268,8898+4]..[270,8986+27])
                      Ptyp_arrow
                      Labelled "mk_action"
                      core_type (lambda/matching.ml[268,8898+15]..[268,8898+42])
                        Ptyp_arrow
                        Labelled "vars"
                        core_type (lambda/matching.ml[268,8898+20]..[268,8898+32])
                          Ptyp_constr "list" (lambda/matching.ml[268,8898+28]..[268,8898+32])
                          [
                            core_type (lambda/matching.ml[268,8898+20]..[268,8898+27])
                              Ptyp_constr "Ident.t" (lambda/matching.ml[268,8898+20]..[268,8898+27])
                              []
                          ]
                        core_type (lambda/matching.ml[268,8898+36]..[268,8898+42])
                          Ptyp_constr "lambda" (lambda/matching.ml[268,8898+36]..[268,8898+42])
                          []
                      core_type (lambda/matching.ml[269,8945+4]..[270,8986+27])
                        Ptyp_arrow
                        Labelled "patbound_action_vars"
                        core_type (lambda/matching.ml[269,8945+25]..[269,8945+37])
                          Ptyp_constr "list" (lambda/matching.ml[269,8945+33]..[269,8945+37])
                          [
                            core_type (lambda/matching.ml[269,8945+25]..[269,8945+32])
                              Ptyp_constr "Ident.t" (lambda/matching.ml[269,8945+25]..[269,8945+32])
                              []
                          ]
                        core_type (lambda/matching.ml[270,8986+4]..[270,8986+27])
                          Ptyp_constr "list" (lambda/matching.ml[270,8986+23]..[270,8986+27])
                          [
                            core_type (lambda/matching.ml[270,8986+5]..[270,8986+21])
                              Ptyp_tuple
                              [
                                core_type (lambda/matching.ml[270,8986+5]..[270,8986+12])
                                  Ptyp_constr "pattern" (lambda/matching.ml[270,8986+5]..[270,8986+12])
                                  []
                                core_type (lambda/matching.ml[270,8986+15]..[270,8986+21])
                                  Ptyp_constr "lambda" (lambda/matching.ml[270,8986+15]..[270,8986+21])
                                  []
                              ]
                          ]
                []
          ]
  structure_item (lambda/matching.ml[382,13860+0]..[386,14036+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[382,13860+4]..[382,13860+59]) ghost
          Ppat_constraint
          pattern (lambda/matching.ml[382,13860+4]..[382,13860+24])
            Ppat_var "expand_record_simple" (lambda/matching.ml[382,13860+4]..[382,13860+24])
          core_type (lambda/matching.ml[382,13860+27]..[382,13860+59]) ghost
            Ptyp_poly
            core_type (lambda/matching.ml[382,13860+27]..[382,13860+59])
              Ptyp_arrow
              Nolabel
              core_type (lambda/matching.ml[382,13860+27]..[382,13860+41])
                Ptyp_constr "Simple.pattern" (lambda/matching.ml[382,13860+27]..[382,13860+41])
                []
              core_type (lambda/matching.ml[382,13860+45]..[382,13860+59])
                Ptyp_constr "Simple.pattern" (lambda/matching.ml[382,13860+45]..[382,13860+59])
                []
        expression (lambda/matching.ml[382,13860+4]..[386,14036+10])
          Pexp_constraint
          expression (lambda/matching.ml[383,13922+1]..[386,14036+10])
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[383,13922+5]..[383,13922+6])
              Ppat_var "p" (lambda/matching.ml[383,13922+5]..[383,13922+6])
            expression (lambda/matching.ml[384,13932+2]..[386,14036+10])
              Pexp_match
              expression (lambda/matching.ml[384,13932+8]..[384,13932+18])
                Pexp_field
                expression (lambda/matching.ml[384,13932+8]..[384,13932+9])
                  Pexp_ident "p" (lambda/matching.ml[384,13932+8]..[384,13932+9])
                "pat_desc" (lambda/matching.ml[384,13932+10]..[384,13932+18])
              [
                <case>
                  pattern (lambda/matching.ml[385,13956+4]..[385,13956+18])
                    Ppat_variant "Record"
                    Some
                      pattern (lambda/matching.ml[385,13956+12]..[385,13956+18])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[385,13956+13]..[385,13956+14])
                            Ppat_var "l" (lambda/matching.ml[385,13956+13]..[385,13956+14])
                          pattern (lambda/matching.ml[385,13956+16]..[385,13956+17])
                            Ppat_any
                        ]
                  expression (lambda/matching.ml[385,13956+22]..[385,13956+79])
                    Pexp_record
                    [
                      "pat_desc" (lambda/matching.ml[385,13956+31]..[385,13956+39])
                        expression (lambda/matching.ml[385,13956+42]..[385,13956+77])
                          Pexp_variant "Record"
                          Some
                            expression (lambda/matching.ml[385,13956+50]..[385,13956+77])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[385,13956+51]..[385,13956+68])
                                  Pexp_apply
                                  expression (lambda/matching.ml[385,13956+51]..[385,13956+66])
                                    Pexp_ident "all_record_args" (lambda/matching.ml[385,13956+51]..[385,13956+66])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[385,13956+67]..[385,13956+68])
                                        Pexp_ident "l" (lambda/matching.ml[385,13956+67]..[385,13956+68])
                                  ]
                                expression (lambda/matching.ml[385,13956+70]..[385,13956+76])
                                  Pexp_construct "Closed" (lambda/matching.ml[385,13956+70]..[385,13956+76])
                                  None
                              ]
                    ]
                    Some
                      expression (lambda/matching.ml[385,13956+24]..[385,13956+25])
                        Pexp_ident "p" (lambda/matching.ml[385,13956+24]..[385,13956+25])
                <case>
                  pattern (lambda/matching.ml[386,14036+4]..[386,14036+5])
                    Ppat_any
                  expression (lambda/matching.ml[386,14036+9]..[386,14036+10])
                    Pexp_ident "p" (lambda/matching.ml[386,14036+9]..[386,14036+10])
              ]
          core_type (lambda/matching.ml[382,13860+27]..[382,13860+59])
            Ptyp_arrow
            Nolabel
            core_type (lambda/matching.ml[382,13860+27]..[382,13860+41])
              Ptyp_constr "Simple.pattern" (lambda/matching.ml[382,13860+27]..[382,13860+41])
              []
            core_type (lambda/matching.ml[382,13860+45]..[382,13860+59])
              Ptyp_constr "Simple.pattern" (lambda/matching.ml[382,13860+45]..[382,13860+59])
              []
    ]
  structure_item (lambda/matching.ml[388,14048+0]..[388,14048+41])
    Pstr_type Rec
    [
      type_declaration "initial_clause" (lambda/matching.ml[388,14048+5]..[388,14048+19]) (lambda/matching.ml[388,14048+0]..[388,14048+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/matching.ml[388,14048+22]..[388,14048+41])
              Ptyp_constr "clause" (lambda/matching.ml[388,14048+35]..[388,14048+41])
              [
                core_type (lambda/matching.ml[388,14048+22]..[388,14048+34])
                  Ptyp_constr "list" (lambda/matching.ml[388,14048+30]..[388,14048+34])
                  [
                    core_type (lambda/matching.ml[388,14048+22]..[388,14048+29])
                      Ptyp_constr "pattern" (lambda/matching.ml[388,14048+22]..[388,14048+29])
                      []
                  ]
              ]
    ]
  structure_item (lambda/matching.ml[390,14091+0]..[390,14091+31])
    Pstr_type Rec
    [
      type_declaration "matrix" (lambda/matching.ml[390,14091+5]..[390,14091+11]) (lambda/matching.ml[390,14091+0]..[390,14091+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/matching.ml[390,14091+14]..[390,14091+31])
              Ptyp_constr "list" (lambda/matching.ml[390,14091+27]..[390,14091+31])
              [
                core_type (lambda/matching.ml[390,14091+14]..[390,14091+26])
                  Ptyp_constr "list" (lambda/matching.ml[390,14091+22]..[390,14091+26])
                  [
                    core_type (lambda/matching.ml[390,14091+14]..[390,14091+21])
                      Ptyp_constr "pattern" (lambda/matching.ml[390,14091+14]..[390,14091+21])
                      []
                  ]
              ]
    ]
  structure_item (lambda/matching.ml[392,14124+0]..[392,14124+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[392,14124+4]..[392,14124+20])
          Ppat_var "add_omega_column" (lambda/matching.ml[392,14124+4]..[392,14124+20])
        expression (lambda/matching.ml[392,14124+21]..[392,14124+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[392,14124+21]..[392,14124+24])
            Ppat_var "pss" (lambda/matching.ml[392,14124+21]..[392,14124+24])
          expression (lambda/matching.ml[392,14124+27]..[392,14124+72])
            Pexp_apply
            expression (lambda/matching.ml[392,14124+27]..[392,14124+35])
              Pexp_ident "List.map" (lambda/matching.ml[392,14124+27]..[392,14124+35])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[392,14124+36]..[392,14124+68])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[392,14124+41]..[392,14124+43])
                    Ppat_var "ps" (lambda/matching.ml[392,14124+41]..[392,14124+43])
                  expression (lambda/matching.ml[392,14124+47]..[392,14124+67])
                    Pexp_construct "::" (lambda/matching.ml[392,14124+62]..[392,14124+64])
                    Some
                      expression (lambda/matching.ml[392,14124+47]..[392,14124+67]) ghost
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[392,14124+47]..[392,14124+61])
                            Pexp_ident "Patterns.omega" (lambda/matching.ml[392,14124+47]..[392,14124+61])
                          expression (lambda/matching.ml[392,14124+65]..[392,14124+67])
                            Pexp_ident "ps" (lambda/matching.ml[392,14124+65]..[392,14124+67])
                        ]
              <arg>
              Nolabel
                expression (lambda/matching.ml[392,14124+69]..[392,14124+72])
                  Pexp_ident "pss" (lambda/matching.ml[392,14124+69]..[392,14124+72])
            ]
    ]
  structure_item (lambda/matching.ml[394,14198+0]..[402,14380+23])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[394,14198+8]..[394,14198+20])
          Ppat_var "rev_split_at" (lambda/matching.ml[394,14198+8]..[394,14198+20])
        expression (lambda/matching.ml[394,14198+21]..[402,14380+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[394,14198+21]..[394,14198+22])
            Ppat_var "n" (lambda/matching.ml[394,14198+21]..[394,14198+22])
          expression (lambda/matching.ml[394,14198+23]..[402,14380+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[394,14198+23]..[394,14198+25])
              Ppat_var "ps" (lambda/matching.ml[394,14198+23]..[394,14198+25])
            expression (lambda/matching.ml[395,14226+2]..[402,14380+23])
              Pexp_ifthenelse
              expression (lambda/matching.ml[395,14226+5]..[395,14226+11])
                Pexp_apply
                expression (lambda/matching.ml[395,14226+7]..[395,14226+9])
                  Pexp_ident "<=" (lambda/matching.ml[395,14226+7]..[395,14226+9])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[395,14226+5]..[395,14226+6])
                      Pexp_ident "n" (lambda/matching.ml[395,14226+5]..[395,14226+6])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[395,14226+10]..[395,14226+11])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lambda/matching.ml[396,14243+4]..[396,14243+12])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[396,14243+5]..[396,14243+7])
                    Pexp_construct "[]" (lambda/matching.ml[396,14243+5]..[396,14243+7])
                    None
                  expression (lambda/matching.ml[396,14243+9]..[396,14243+11])
                    Pexp_ident "ps" (lambda/matching.ml[396,14243+9]..[396,14243+11])
                ]
              Some
                expression (lambda/matching.ml[398,14263+4]..[402,14380+23])
                  Pexp_match
                  expression (lambda/matching.ml[398,14263+10]..[398,14263+12])
                    Pexp_ident "ps" (lambda/matching.ml[398,14263+10]..[398,14263+12])
                  [
                    <case>
                      pattern (lambda/matching.ml[399,14281+6]..[399,14281+14])
                        Ppat_construct "::" (lambda/matching.ml[399,14281+8]..[399,14281+10])
                        Some
                          []
                          pattern (lambda/matching.ml[399,14281+6]..[399,14281+14]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[399,14281+6]..[399,14281+7])
                                Ppat_var "p" (lambda/matching.ml[399,14281+6]..[399,14281+7])
                              pattern (lambda/matching.ml[399,14281+11]..[399,14281+14])
                                Ppat_var "rem" (lambda/matching.ml[399,14281+11]..[399,14281+14])
                            ]
                      expression (lambda/matching.ml[400,14299+8]..[401,14353+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[400,14299+12]..[400,14299+23])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[400,14299+12]..[400,14299+16])
                                  Ppat_var "left" (lambda/matching.ml[400,14299+12]..[400,14299+16])
                                pattern (lambda/matching.ml[400,14299+18]..[400,14299+23])
                                  Ppat_var "right" (lambda/matching.ml[400,14299+18]..[400,14299+23])
                              ]
                            expression (lambda/matching.ml[400,14299+26]..[400,14299+50])
                              Pexp_apply
                              expression (lambda/matching.ml[400,14299+26]..[400,14299+38])
                                Pexp_ident "rev_split_at" (lambda/matching.ml[400,14299+26]..[400,14299+38])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[400,14299+39]..[400,14299+46])
                                    Pexp_apply
                                    expression (lambda/matching.ml[400,14299+42]..[400,14299+43])
                                      Pexp_ident "-" (lambda/matching.ml[400,14299+42]..[400,14299+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[400,14299+40]..[400,14299+41])
                                          Pexp_ident "n" (lambda/matching.ml[400,14299+40]..[400,14299+41])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[400,14299+44]..[400,14299+45])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[400,14299+47]..[400,14299+50])
                                    Pexp_ident "rem" (lambda/matching.ml[400,14299+47]..[400,14299+50])
                              ]
                        ]
                        expression (lambda/matching.ml[401,14353+8]..[401,14353+26])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[401,14353+9]..[401,14353+18])
                              Pexp_construct "::" (lambda/matching.ml[401,14353+11]..[401,14353+13])
                              Some
                                expression (lambda/matching.ml[401,14353+9]..[401,14353+18]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[401,14353+9]..[401,14353+10])
                                      Pexp_ident "p" (lambda/matching.ml[401,14353+9]..[401,14353+10])
                                    expression (lambda/matching.ml[401,14353+14]..[401,14353+18])
                                      Pexp_ident "left" (lambda/matching.ml[401,14353+14]..[401,14353+18])
                                  ]
                            expression (lambda/matching.ml[401,14353+20]..[401,14353+25])
                              Pexp_ident "right" (lambda/matching.ml[401,14353+20]..[401,14353+25])
                          ]
                    <case>
                      pattern (lambda/matching.ml[402,14380+6]..[402,14380+7])
                        Ppat_any
                      expression (lambda/matching.ml[402,14380+11]..[402,14380+23])
                        Pexp_assert
                        expression (lambda/matching.ml[402,14380+18]..[402,14380+23])
                          Pexp_construct "false" (lambda/matching.ml[402,14380+18]..[402,14380+23])
                          None
                  ]
    ]
  structure_item (lambda/matching.ml[404,14405+0]..[404,14405+17])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lambda/matching.ml[404,14405+0]..[404,14405+17])
          pext_name = "NoMatch"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (lambda/matching.ml[406,14424+0]..[460,16379+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[406,14424+4]..[406,14424+11])
          Ppat_var "matcher" (lambda/matching.ml[406,14424+4]..[406,14424+11])
        expression (lambda/matching.ml[406,14424+12]..[460,16379+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[406,14424+12]..[406,14424+17])
            Ppat_var "discr" (lambda/matching.ml[406,14424+12]..[406,14424+17])
          expression (lambda/matching.ml[406,14424+18]..[460,16379+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[406,14424+18]..[406,14424+38])
              Ppat_constraint
              pattern (lambda/matching.ml[406,14424+19]..[406,14424+20])
                Ppat_var "p" (lambda/matching.ml[406,14424+19]..[406,14424+20])
              core_type (lambda/matching.ml[406,14424+23]..[406,14424+37])
                Ptyp_constr "Simple.pattern" (lambda/matching.ml[406,14424+23]..[406,14424+37])
                []
            expression (lambda/matching.ml[406,14424+39]..[460,16379+11]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[406,14424+39]..[406,14424+42])
                Ppat_var "rem" (lambda/matching.ml[406,14424+39]..[406,14424+42])
              expression (lambda/matching.ml[407,14469+2]..[460,16379+11])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[407,14469+6]..[407,14469+11])
                      Ppat_var "discr" (lambda/matching.ml[407,14469+6]..[407,14469+11])
                    expression (lambda/matching.ml[407,14469+14]..[407,14469+38])
                      Pexp_apply
                      expression (lambda/matching.ml[407,14469+14]..[407,14469+32])
                        Pexp_ident "expand_record_head" (lambda/matching.ml[407,14469+14]..[407,14469+32])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[407,14469+33]..[407,14469+38])
                            Pexp_ident "discr" (lambda/matching.ml[407,14469+33]..[407,14469+38])
                      ]
                ]
                expression (lambda/matching.ml[408,14511+2]..[460,16379+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[408,14511+6]..[408,14511+7])
                        Ppat_var "p" (lambda/matching.ml[408,14511+6]..[408,14511+7])
                      expression (lambda/matching.ml[408,14511+10]..[408,14511+32])
                        Pexp_apply
                        expression (lambda/matching.ml[408,14511+10]..[408,14511+30])
                          Pexp_ident "expand_record_simple" (lambda/matching.ml[408,14511+10]..[408,14511+30])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[408,14511+31]..[408,14511+32])
                              Pexp_ident "p" (lambda/matching.ml[408,14511+31]..[408,14511+32])
                        ]
                  ]
                  expression (lambda/matching.ml[409,14547+2]..[460,16379+11])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[409,14547+6]..[409,14547+12])
                          Ppat_var "omegas" (lambda/matching.ml[409,14547+6]..[409,14547+12])
                        expression (lambda/matching.ml[409,14547+15]..[409,14547+51])
                          Pexp_open Fresh
                          module_expr (lambda/matching.ml[409,14547+15]..[409,14547+23])
                            Pmod_ident "Patterns" (lambda/matching.ml[409,14547+15]..[409,14547+23])
                          expression (lambda/matching.ml[409,14547+25]..[409,14547+50])
                            Pexp_apply
                            expression (lambda/matching.ml[409,14547+25]..[409,14547+31])
                              Pexp_ident "omegas" (lambda/matching.ml[409,14547+25]..[409,14547+31])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[409,14547+32]..[409,14547+50])
                                  Pexp_apply
                                  expression (lambda/matching.ml[409,14547+33]..[409,14547+43])
                                    Pexp_ident "Head.arity" (lambda/matching.ml[409,14547+33]..[409,14547+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[409,14547+44]..[409,14547+49])
                                        Pexp_ident "discr" (lambda/matching.ml[409,14547+44]..[409,14547+49])
                                  ]
                            ]
                    ]
                    expression (lambda/matching.ml[410,14602+2]..[460,16379+11])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[410,14602+6]..[410,14602+14])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[410,14602+6]..[410,14602+8])
                                Ppat_var "ph" (lambda/matching.ml[410,14602+6]..[410,14602+8])
                              pattern (lambda/matching.ml[410,14602+10]..[410,14602+14])
                                Ppat_var "args" (lambda/matching.ml[410,14602+10]..[410,14602+14])
                            ]
                          expression (lambda/matching.ml[410,14602+17]..[410,14602+44])
                            Pexp_apply
                            expression (lambda/matching.ml[410,14602+17]..[410,14602+42])
                              Pexp_ident "Patterns.Head.deconstruct" (lambda/matching.ml[410,14602+17]..[410,14602+42])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[410,14602+43]..[410,14602+44])
                                  Pexp_ident "p" (lambda/matching.ml[410,14602+43]..[410,14602+44])
                            ]
                      ]
                      expression (lambda/matching.ml[411,14650+2]..[460,16379+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[411,14650+6]..[411,14650+9])
                              Ppat_var "yes" (lambda/matching.ml[411,14650+6]..[411,14650+9])
                            expression (lambda/matching.ml[411,14650+10]..[411,14650+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[411,14650+10]..[411,14650+12])
                                Ppat_construct "()" (lambda/matching.ml[411,14650+10]..[411,14650+12])
                                None
                              expression (lambda/matching.ml[411,14650+15]..[411,14650+25])
                                Pexp_apply
                                expression (lambda/matching.ml[411,14650+20]..[411,14650+21])
                                  Pexp_ident "@" (lambda/matching.ml[411,14650+20]..[411,14650+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[411,14650+15]..[411,14650+19])
                                      Pexp_ident "args" (lambda/matching.ml[411,14650+15]..[411,14650+19])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[411,14650+22]..[411,14650+25])
                                      Pexp_ident "rem" (lambda/matching.ml[411,14650+22]..[411,14650+25])
                                ]
                        ]
                        expression (lambda/matching.ml[412,14679+2]..[460,16379+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[412,14679+6]..[412,14679+8])
                                Ppat_var "no" (lambda/matching.ml[412,14679+6]..[412,14679+8])
                              expression (lambda/matching.ml[412,14679+9]..[412,14679+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[412,14679+9]..[412,14679+11])
                                  Ppat_construct "()" (lambda/matching.ml[412,14679+9]..[412,14679+11])
                                  None
                                expression (lambda/matching.ml[412,14679+14]..[412,14679+27])
                                  Pexp_apply
                                  expression (lambda/matching.ml[412,14679+14]..[412,14679+19])
                                    Pexp_ident "raise" (lambda/matching.ml[412,14679+14]..[412,14679+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[412,14679+20]..[412,14679+27])
                                        Pexp_construct "NoMatch" (lambda/matching.ml[412,14679+20]..[412,14679+27])
                                        None
                                  ]
                          ]
                          expression (lambda/matching.ml[413,14710+2]..[460,16379+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[413,14710+6]..[413,14710+11])
                                  Ppat_var "yesif" (lambda/matching.ml[413,14710+6]..[413,14710+11])
                                expression (lambda/matching.ml[413,14710+12]..[417,14762+11]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[413,14710+12]..[413,14710+13])
                                    Ppat_var "b" (lambda/matching.ml[413,14710+12]..[413,14710+13])
                                  expression (lambda/matching.ml[414,14726+4]..[417,14762+11])
                                    Pexp_ifthenelse
                                    expression (lambda/matching.ml[414,14726+7]..[414,14726+8])
                                      Pexp_ident "b" (lambda/matching.ml[414,14726+7]..[414,14726+8])
                                    expression (lambda/matching.ml[415,14740+6]..[415,14740+12])
                                      Pexp_apply
                                      expression (lambda/matching.ml[415,14740+6]..[415,14740+9])
                                        Pexp_ident "yes" (lambda/matching.ml[415,14740+6]..[415,14740+9])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[415,14740+10]..[415,14740+12])
                                            Pexp_construct "()" (lambda/matching.ml[415,14740+10]..[415,14740+12])
                                            None
                                      ]
                                    Some
                                      expression (lambda/matching.ml[417,14762+6]..[417,14762+11])
                                        Pexp_apply
                                        expression (lambda/matching.ml[417,14762+6]..[417,14762+8])
                                          Pexp_ident "no" (lambda/matching.ml[417,14762+6]..[417,14762+8])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[417,14762+9]..[417,14762+11])
                                              Pexp_construct "()" (lambda/matching.ml[417,14762+9]..[417,14762+11])
                                              None
                                        ]
                            ]
                            expression (lambda/matching.ml[419,14779+2]..[460,16379+11])
                              Pexp_open Fresh
                              module_expr (lambda/matching.ml[419,14779+11]..[419,14779+24])
                                Pmod_ident "Patterns.Head" (lambda/matching.ml[419,14779+11]..[419,14779+24])
                              expression (lambda/matching.ml[420,14807+2]..[460,16379+11])
                                Pexp_match
                                expression (lambda/matching.ml[420,14807+8]..[420,14807+37])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[420,14807+9]..[420,14807+23])
                                      Pexp_field
                                      expression (lambda/matching.ml[420,14807+9]..[420,14807+14])
                                        Pexp_ident "discr" (lambda/matching.ml[420,14807+9]..[420,14807+14])
                                      "pat_desc" (lambda/matching.ml[420,14807+15]..[420,14807+23])
                                    expression (lambda/matching.ml[420,14807+25]..[420,14807+36])
                                      Pexp_field
                                      expression (lambda/matching.ml[420,14807+25]..[420,14807+27])
                                        Pexp_ident "ph" (lambda/matching.ml[420,14807+25]..[420,14807+27])
                                      "pat_desc" (lambda/matching.ml[420,14807+28]..[420,14807+36])
                                  ]
                                [
                                  <case>
                                    pattern (lambda/matching.ml[421,14850+4]..[421,14850+10])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[421,14850+4]..[421,14850+7])
                                          Ppat_construct "Any" (lambda/matching.ml[421,14850+4]..[421,14850+7])
                                          None
                                        pattern (lambda/matching.ml[421,14850+9]..[421,14850+10])
                                          Ppat_any
                                      ]
                                    expression (lambda/matching.ml[421,14850+14]..[421,14850+17])
                                      Pexp_ident "rem" (lambda/matching.ml[421,14850+14]..[421,14850+17])
                                  <case>
                                    pattern (lambda/matching.ml[422,14868+4]..[424,14960+11])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[422,14868+6]..[423,14941+17])
                                          Ppat_or
                                          pattern (lambda/matching.ml[422,14868+8]..[422,14868+72])
                                            Ppat_or
                                            pattern (lambda/matching.ml[422,14868+8]..[422,14868+61])
                                              Ppat_or
                                              pattern (lambda/matching.ml[422,14868+8]..[422,14868+51])
                                                Ppat_or
                                                pattern (lambda/matching.ml[422,14868+8]..[422,14868+44])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[422,14868+8]..[422,14868+32])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[422,14868+8]..[422,14868+18])
                                                      Ppat_construct "Constant" (lambda/matching.ml[422,14868+8]..[422,14868+16])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[422,14868+17]..[422,14868+18])
                                                          Ppat_any
                                                    pattern (lambda/matching.ml[422,14868+21]..[422,14868+32])
                                                      Ppat_construct "Construct" (lambda/matching.ml[422,14868+21]..[422,14868+30])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[422,14868+31]..[422,14868+32])
                                                          Ppat_any
                                                  pattern (lambda/matching.ml[422,14868+35]..[422,14868+44])
                                                    Ppat_construct "Variant" (lambda/matching.ml[422,14868+35]..[422,14868+42])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[422,14868+43]..[422,14868+44])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[422,14868+47]..[422,14868+51])
                                                  Ppat_construct "Lazy" (lambda/matching.ml[422,14868+47]..[422,14868+51])
                                                  None
                                              pattern (lambda/matching.ml[422,14868+54]..[422,14868+61])
                                                Ppat_construct "Array" (lambda/matching.ml[422,14868+54]..[422,14868+59])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[422,14868+60]..[422,14868+61])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[422,14868+64]..[422,14868+72])
                                              Ppat_construct "Record" (lambda/matching.ml[422,14868+64]..[422,14868+70])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[422,14868+71]..[422,14868+72])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[423,14941+8]..[423,14941+15])
                                            Ppat_construct "Tuple" (lambda/matching.ml[423,14941+8]..[423,14941+13])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[423,14941+14]..[423,14941+15])
                                                Ppat_any
                                        pattern (lambda/matching.ml[424,14960+6]..[424,14960+9])
                                          Ppat_construct "Any" (lambda/matching.ml[424,14960+6]..[424,14960+9])
                                          None
                                      ]
                                    expression (lambda/matching.ml[425,14975+6]..[425,14975+18])
                                      Pexp_apply
                                      expression (lambda/matching.ml[425,14975+13]..[425,14975+14])
                                        Pexp_ident "@" (lambda/matching.ml[425,14975+13]..[425,14975+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[425,14975+6]..[425,14975+12])
                                            Pexp_ident "omegas" (lambda/matching.ml[425,14975+6]..[425,14975+12])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[425,14975+15]..[425,14975+18])
                                            Pexp_ident "rem" (lambda/matching.ml[425,14975+15]..[425,14975+18])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[426,14994+4]..[426,14994+31])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[426,14994+4]..[426,14994+16])
                                          Ppat_construct "Constant" (lambda/matching.ml[426,14994+4]..[426,14994+12])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[426,14994+13]..[426,14994+16])
                                              Ppat_var "cst" (lambda/matching.ml[426,14994+13]..[426,14994+16])
                                        pattern (lambda/matching.ml[426,14994+18]..[426,14994+31])
                                          Ppat_construct "Constant" (lambda/matching.ml[426,14994+18]..[426,14994+26])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[426,14994+27]..[426,14994+31])
                                              Ppat_var "cst'" (lambda/matching.ml[426,14994+27]..[426,14994+31])
                                      ]
                                    expression (lambda/matching.ml[426,14994+35]..[426,14994+69])
                                      Pexp_apply
                                      expression (lambda/matching.ml[426,14994+35]..[426,14994+40])
                                        Pexp_ident "yesif" (lambda/matching.ml[426,14994+35]..[426,14994+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[426,14994+41]..[426,14994+69])
                                            Pexp_apply
                                            expression (lambda/matching.ml[426,14994+65]..[426,14994+66])
                                              Pexp_ident "=" (lambda/matching.ml[426,14994+65]..[426,14994+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[426,14994+42]..[426,14994+64])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[426,14994+42]..[426,14994+55])
                                                    Pexp_ident "const_compare" (lambda/matching.ml[426,14994+42]..[426,14994+55])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[426,14994+56]..[426,14994+59])
                                                        Pexp_ident "cst" (lambda/matching.ml[426,14994+56]..[426,14994+59])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[426,14994+60]..[426,14994+64])
                                                        Pexp_ident "cst'" (lambda/matching.ml[426,14994+60]..[426,14994+64])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[426,14994+67]..[426,14994+68])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[427,15064+4]..[427,15064+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[427,15064+4]..[427,15064+14])
                                          Ppat_construct "Constant" (lambda/matching.ml[427,15064+4]..[427,15064+12])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[427,15064+13]..[427,15064+14])
                                              Ppat_any
                                        pattern (lambda/matching.ml[427,15064+16]..[427,15064+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[427,15064+17]..[427,15064+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[427,15064+17]..[427,15064+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[427,15064+17]..[427,15064+47])
                                                Ppat_or
                                                pattern (lambda/matching.ml[427,15064+17]..[427,15064+40])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[427,15064+17]..[427,15064+28])
                                                    Ppat_construct "Construct" (lambda/matching.ml[427,15064+17]..[427,15064+26])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[427,15064+27]..[427,15064+28])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[427,15064+31]..[427,15064+40])
                                                    Ppat_construct "Variant" (lambda/matching.ml[427,15064+31]..[427,15064+38])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[427,15064+39]..[427,15064+40])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[427,15064+43]..[427,15064+47])
                                                  Ppat_construct "Lazy" (lambda/matching.ml[427,15064+43]..[427,15064+47])
                                                  None
                                              pattern (lambda/matching.ml[427,15064+50]..[427,15064+57])
                                                Ppat_construct "Array" (lambda/matching.ml[427,15064+50]..[427,15064+55])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[427,15064+56]..[427,15064+57])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[427,15064+60]..[427,15064+68])
                                              Ppat_construct "Record" (lambda/matching.ml[427,15064+60]..[427,15064+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[427,15064+67]..[427,15064+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[427,15064+71]..[427,15064+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[427,15064+71]..[427,15064+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[427,15064+77]..[427,15064+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[429,15151+6]..[429,15151+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[429,15151+6]..[429,15151+8])
                                        Pexp_ident "no" (lambda/matching.ml[429,15151+6]..[429,15151+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[429,15151+9]..[429,15151+11])
                                            Pexp_construct "()" (lambda/matching.ml[429,15151+9]..[429,15151+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[430,15163+4]..[430,15163+35])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[430,15163+4]..[430,15163+18])
                                          Ppat_construct "Construct" (lambda/matching.ml[430,15163+4]..[430,15163+13])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[430,15163+14]..[430,15163+18])
                                              Ppat_var "cstr" (lambda/matching.ml[430,15163+14]..[430,15163+18])
                                        pattern (lambda/matching.ml[430,15163+20]..[430,15163+35])
                                          Ppat_construct "Construct" (lambda/matching.ml[430,15163+20]..[430,15163+29])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[430,15163+30]..[430,15163+35])
                                              Ppat_var "cstr'" (lambda/matching.ml[430,15163+30]..[430,15163+35])
                                      ]
                                    expression (lambda/matching.ml[434,15396+6]..[434,15396+47])
                                      Pexp_apply
                                      expression (lambda/matching.ml[434,15396+6]..[434,15396+11])
                                        Pexp_ident "yesif" (lambda/matching.ml[434,15396+6]..[434,15396+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[434,15396+12]..[434,15396+47])
                                            Pexp_apply
                                            expression (lambda/matching.ml[434,15396+13]..[434,15396+35])
                                              Pexp_ident "Types.may_equal_constr" (lambda/matching.ml[434,15396+13]..[434,15396+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[434,15396+36]..[434,15396+40])
                                                  Pexp_ident "cstr" (lambda/matching.ml[434,15396+36]..[434,15396+40])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[434,15396+41]..[434,15396+46])
                                                  Pexp_ident "cstr'" (lambda/matching.ml[434,15396+41]..[434,15396+46])
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[435,15444+4]..[435,15444+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[435,15444+4]..[435,15444+15])
                                          Ppat_construct "Construct" (lambda/matching.ml[435,15444+4]..[435,15444+13])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[435,15444+14]..[435,15444+15])
                                              Ppat_any
                                        pattern (lambda/matching.ml[435,15444+17]..[435,15444+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[435,15444+18]..[435,15444+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[435,15444+18]..[435,15444+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[435,15444+18]..[435,15444+47])
                                                Ppat_or
                                                pattern (lambda/matching.ml[435,15444+18]..[435,15444+40])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[435,15444+18]..[435,15444+28])
                                                    Ppat_construct "Constant" (lambda/matching.ml[435,15444+18]..[435,15444+26])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[435,15444+27]..[435,15444+28])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[435,15444+31]..[435,15444+40])
                                                    Ppat_construct "Variant" (lambda/matching.ml[435,15444+31]..[435,15444+38])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[435,15444+39]..[435,15444+40])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[435,15444+43]..[435,15444+47])
                                                  Ppat_construct "Lazy" (lambda/matching.ml[435,15444+43]..[435,15444+47])
                                                  None
                                              pattern (lambda/matching.ml[435,15444+50]..[435,15444+57])
                                                Ppat_construct "Array" (lambda/matching.ml[435,15444+50]..[435,15444+55])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[435,15444+56]..[435,15444+57])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[435,15444+60]..[435,15444+68])
                                              Ppat_construct "Record" (lambda/matching.ml[435,15444+60]..[435,15444+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[435,15444+67]..[435,15444+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[435,15444+71]..[435,15444+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[435,15444+71]..[435,15444+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[435,15444+77]..[435,15444+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[437,15531+6]..[437,15531+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[437,15531+6]..[437,15531+8])
                                        Pexp_ident "no" (lambda/matching.ml[437,15531+6]..[437,15531+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[437,15531+9]..[437,15531+11])
                                            Pexp_construct "()" (lambda/matching.ml[437,15531+9]..[437,15531+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[438,15543+4]..[438,15543+72])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[438,15543+4]..[438,15543+28])
                                          Ppat_construct "Variant" (lambda/matching.ml[438,15543+4]..[438,15543+11])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[438,15543+12]..[438,15543+28])
                                              Ppat_record Closed
                                              [
                                                "tag" (lambda/matching.ml[438,15543+14]..[438,15543+17]) ghost
                                                  pattern (lambda/matching.ml[438,15543+14]..[438,15543+17])
                                                    Ppat_var "tag" (lambda/matching.ml[438,15543+14]..[438,15543+17])
                                                "has_arg" (lambda/matching.ml[438,15543+19]..[438,15543+26]) ghost
                                                  pattern (lambda/matching.ml[438,15543+19]..[438,15543+26])
                                                    Ppat_var "has_arg" (lambda/matching.ml[438,15543+19]..[438,15543+26])
                                              ]
                                        pattern (lambda/matching.ml[438,15543+30]..[438,15543+72])
                                          Ppat_construct "Variant" (lambda/matching.ml[438,15543+30]..[438,15543+37])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[438,15543+38]..[438,15543+72])
                                              Ppat_record Closed
                                              [
                                                "tag" (lambda/matching.ml[438,15543+40]..[438,15543+43])
                                                  pattern (lambda/matching.ml[438,15543+46]..[438,15543+50])
                                                    Ppat_var "tag'" (lambda/matching.ml[438,15543+46]..[438,15543+50])
                                                "has_arg" (lambda/matching.ml[438,15543+52]..[438,15543+59])
                                                  pattern (lambda/matching.ml[438,15543+62]..[438,15543+70])
                                                    Ppat_var "has_arg'" (lambda/matching.ml[438,15543+62]..[438,15543+70])
                                              ]
                                      ]
                                    expression (lambda/matching.ml[439,15619+6]..[439,15619+46])
                                      Pexp_apply
                                      expression (lambda/matching.ml[439,15619+6]..[439,15619+11])
                                        Pexp_ident "yesif" (lambda/matching.ml[439,15619+6]..[439,15619+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[439,15619+12]..[439,15619+46])
                                            Pexp_apply
                                            expression (lambda/matching.ml[439,15619+24]..[439,15619+26])
                                              Pexp_ident "&&" (lambda/matching.ml[439,15619+24]..[439,15619+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[439,15619+13]..[439,15619+23])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[439,15619+17]..[439,15619+18])
                                                    Pexp_ident "=" (lambda/matching.ml[439,15619+17]..[439,15619+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[439,15619+13]..[439,15619+16])
                                                        Pexp_ident "tag" (lambda/matching.ml[439,15619+13]..[439,15619+16])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[439,15619+19]..[439,15619+23])
                                                        Pexp_ident "tag'" (lambda/matching.ml[439,15619+19]..[439,15619+23])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[439,15619+27]..[439,15619+45])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[439,15619+35]..[439,15619+36])
                                                    Pexp_ident "=" (lambda/matching.ml[439,15619+35]..[439,15619+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[439,15619+27]..[439,15619+34])
                                                        Pexp_ident "has_arg" (lambda/matching.ml[439,15619+27]..[439,15619+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[439,15619+37]..[439,15619+45])
                                                        Pexp_ident "has_arg'" (lambda/matching.ml[439,15619+37]..[439,15619+45])
                                                  ]
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[440,15666+4]..[440,15666+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[440,15666+4]..[440,15666+13])
                                          Ppat_construct "Variant" (lambda/matching.ml[440,15666+4]..[440,15666+11])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[440,15666+12]..[440,15666+13])
                                              Ppat_any
                                        pattern (lambda/matching.ml[440,15666+15]..[440,15666+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[440,15666+16]..[440,15666+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[440,15666+16]..[440,15666+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[440,15666+16]..[440,15666+47])
                                                Ppat_or
                                                pattern (lambda/matching.ml[440,15666+16]..[440,15666+40])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[440,15666+16]..[440,15666+26])
                                                    Ppat_construct "Constant" (lambda/matching.ml[440,15666+16]..[440,15666+24])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[440,15666+25]..[440,15666+26])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[440,15666+29]..[440,15666+40])
                                                    Ppat_construct "Construct" (lambda/matching.ml[440,15666+29]..[440,15666+38])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[440,15666+39]..[440,15666+40])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[440,15666+43]..[440,15666+47])
                                                  Ppat_construct "Lazy" (lambda/matching.ml[440,15666+43]..[440,15666+47])
                                                  None
                                              pattern (lambda/matching.ml[440,15666+50]..[440,15666+57])
                                                Ppat_construct "Array" (lambda/matching.ml[440,15666+50]..[440,15666+55])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[440,15666+56]..[440,15666+57])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[440,15666+60]..[440,15666+68])
                                              Ppat_construct "Record" (lambda/matching.ml[440,15666+60]..[440,15666+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[440,15666+67]..[440,15666+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[440,15666+71]..[440,15666+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[440,15666+71]..[440,15666+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[440,15666+77]..[440,15666+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[442,15753+6]..[442,15753+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[442,15753+6]..[442,15753+8])
                                        Pexp_ident "no" (lambda/matching.ml[442,15753+6]..[442,15753+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[442,15753+9]..[442,15753+11])
                                            Pexp_construct "()" (lambda/matching.ml[442,15753+9]..[442,15753+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[443,15765+4]..[443,15765+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[443,15765+4]..[443,15765+12])
                                          Ppat_construct "Array" (lambda/matching.ml[443,15765+4]..[443,15765+9])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[443,15765+10]..[443,15765+12])
                                              Ppat_var "n1" (lambda/matching.ml[443,15765+10]..[443,15765+12])
                                        pattern (lambda/matching.ml[443,15765+14]..[443,15765+22])
                                          Ppat_construct "Array" (lambda/matching.ml[443,15765+14]..[443,15765+19])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[443,15765+20]..[443,15765+22])
                                              Ppat_var "n2" (lambda/matching.ml[443,15765+20]..[443,15765+22])
                                      ]
                                    expression (lambda/matching.ml[443,15765+26]..[443,15765+41])
                                      Pexp_apply
                                      expression (lambda/matching.ml[443,15765+26]..[443,15765+31])
                                        Pexp_ident "yesif" (lambda/matching.ml[443,15765+26]..[443,15765+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[443,15765+32]..[443,15765+41])
                                            Pexp_apply
                                            expression (lambda/matching.ml[443,15765+36]..[443,15765+37])
                                              Pexp_ident "=" (lambda/matching.ml[443,15765+36]..[443,15765+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[443,15765+33]..[443,15765+35])
                                                  Pexp_ident "n1" (lambda/matching.ml[443,15765+33]..[443,15765+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[443,15765+38]..[443,15765+40])
                                                  Pexp_ident "n2" (lambda/matching.ml[443,15765+38]..[443,15765+40])
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[444,15807+4]..[444,15807+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[444,15807+4]..[444,15807+11])
                                          Ppat_construct "Array" (lambda/matching.ml[444,15807+4]..[444,15807+9])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[444,15807+10]..[444,15807+11])
                                              Ppat_any
                                        pattern (lambda/matching.ml[444,15807+13]..[444,15807+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[444,15807+14]..[444,15807+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[444,15807+14]..[444,15807+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[444,15807+14]..[444,15807+50])
                                                Ppat_or
                                                pattern (lambda/matching.ml[444,15807+14]..[444,15807+38])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[444,15807+14]..[444,15807+24])
                                                    Ppat_construct "Constant" (lambda/matching.ml[444,15807+14]..[444,15807+22])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[444,15807+23]..[444,15807+24])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[444,15807+27]..[444,15807+38])
                                                    Ppat_construct "Construct" (lambda/matching.ml[444,15807+27]..[444,15807+36])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[444,15807+37]..[444,15807+38])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[444,15807+41]..[444,15807+50])
                                                  Ppat_construct "Variant" (lambda/matching.ml[444,15807+41]..[444,15807+48])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[444,15807+49]..[444,15807+50])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[444,15807+53]..[444,15807+57])
                                                Ppat_construct "Lazy" (lambda/matching.ml[444,15807+53]..[444,15807+57])
                                                None
                                            pattern (lambda/matching.ml[444,15807+60]..[444,15807+68])
                                              Ppat_construct "Record" (lambda/matching.ml[444,15807+60]..[444,15807+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[444,15807+67]..[444,15807+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[444,15807+71]..[444,15807+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[444,15807+71]..[444,15807+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[444,15807+77]..[444,15807+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[446,15894+6]..[446,15894+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[446,15894+6]..[446,15894+8])
                                        Pexp_ident "no" (lambda/matching.ml[446,15894+6]..[446,15894+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[446,15894+9]..[446,15894+11])
                                            Pexp_construct "()" (lambda/matching.ml[446,15894+9]..[446,15894+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[447,15906+4]..[447,15906+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[447,15906+4]..[447,15906+12])
                                          Ppat_construct "Tuple" (lambda/matching.ml[447,15906+4]..[447,15906+9])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[447,15906+10]..[447,15906+12])
                                              Ppat_var "n1" (lambda/matching.ml[447,15906+10]..[447,15906+12])
                                        pattern (lambda/matching.ml[447,15906+14]..[447,15906+22])
                                          Ppat_construct "Tuple" (lambda/matching.ml[447,15906+14]..[447,15906+19])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[447,15906+20]..[447,15906+22])
                                              Ppat_var "n2" (lambda/matching.ml[447,15906+20]..[447,15906+22])
                                      ]
                                    expression (lambda/matching.ml[447,15906+26]..[447,15906+41])
                                      Pexp_apply
                                      expression (lambda/matching.ml[447,15906+26]..[447,15906+31])
                                        Pexp_ident "yesif" (lambda/matching.ml[447,15906+26]..[447,15906+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[447,15906+32]..[447,15906+41])
                                            Pexp_apply
                                            expression (lambda/matching.ml[447,15906+36]..[447,15906+37])
                                              Pexp_ident "=" (lambda/matching.ml[447,15906+36]..[447,15906+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[447,15906+33]..[447,15906+35])
                                                  Pexp_ident "n1" (lambda/matching.ml[447,15906+33]..[447,15906+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[447,15906+38]..[447,15906+40])
                                                  Pexp_ident "n2" (lambda/matching.ml[447,15906+38]..[447,15906+40])
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[448,15948+4]..[448,15948+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[448,15948+4]..[448,15948+11])
                                          Ppat_construct "Tuple" (lambda/matching.ml[448,15948+4]..[448,15948+9])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[448,15948+10]..[448,15948+11])
                                              Ppat_any
                                        pattern (lambda/matching.ml[448,15948+13]..[448,15948+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[448,15948+14]..[448,15948+67])
                                            Ppat_or
                                            pattern (lambda/matching.ml[448,15948+14]..[448,15948+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[448,15948+14]..[448,15948+50])
                                                Ppat_or
                                                pattern (lambda/matching.ml[448,15948+14]..[448,15948+38])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[448,15948+14]..[448,15948+24])
                                                    Ppat_construct "Constant" (lambda/matching.ml[448,15948+14]..[448,15948+22])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[448,15948+23]..[448,15948+24])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[448,15948+27]..[448,15948+38])
                                                    Ppat_construct "Construct" (lambda/matching.ml[448,15948+27]..[448,15948+36])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[448,15948+37]..[448,15948+38])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[448,15948+41]..[448,15948+50])
                                                  Ppat_construct "Variant" (lambda/matching.ml[448,15948+41]..[448,15948+48])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[448,15948+49]..[448,15948+50])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[448,15948+53]..[448,15948+57])
                                                Ppat_construct "Lazy" (lambda/matching.ml[448,15948+53]..[448,15948+57])
                                                None
                                            pattern (lambda/matching.ml[448,15948+60]..[448,15948+67])
                                              Ppat_construct "Array" (lambda/matching.ml[448,15948+60]..[448,15948+65])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[448,15948+66]..[448,15948+67])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[448,15948+70]..[448,15948+78])
                                            Ppat_construct "Record" (lambda/matching.ml[448,15948+70]..[448,15948+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[448,15948+77]..[448,15948+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[450,16035+6]..[450,16035+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[450,16035+6]..[450,16035+8])
                                        Pexp_ident "no" (lambda/matching.ml[450,16035+6]..[450,16035+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[450,16035+9]..[450,16035+11])
                                            Pexp_construct "()" (lambda/matching.ml[450,16035+9]..[450,16035+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[451,16047+4]..[451,16047+23])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[451,16047+4]..[451,16047+12])
                                          Ppat_construct "Record" (lambda/matching.ml[451,16047+4]..[451,16047+10])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[451,16047+11]..[451,16047+12])
                                              Ppat_var "l" (lambda/matching.ml[451,16047+11]..[451,16047+12])
                                        pattern (lambda/matching.ml[451,16047+14]..[451,16047+23])
                                          Ppat_construct "Record" (lambda/matching.ml[451,16047+14]..[451,16047+20])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[451,16047+21]..[451,16047+23])
                                              Ppat_var "l'" (lambda/matching.ml[451,16047+21]..[451,16047+23])
                                      ]
                                    expression (lambda/matching.ml[453,16123+6]..[453,16123+44])
                                      Pexp_apply
                                      expression (lambda/matching.ml[453,16123+6]..[453,16123+11])
                                        Pexp_ident "yesif" (lambda/matching.ml[453,16123+6]..[453,16123+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[453,16123+12]..[453,16123+44])
                                            Pexp_apply
                                            expression (lambda/matching.ml[453,16123+27]..[453,16123+28])
                                              Pexp_ident "=" (lambda/matching.ml[453,16123+27]..[453,16123+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[453,16123+13]..[453,16123+26])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[453,16123+13]..[453,16123+24])
                                                    Pexp_ident "List.length" (lambda/matching.ml[453,16123+13]..[453,16123+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[453,16123+25]..[453,16123+26])
                                                        Pexp_ident "l" (lambda/matching.ml[453,16123+25]..[453,16123+26])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[453,16123+29]..[453,16123+43])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[453,16123+29]..[453,16123+40])
                                                    Pexp_ident "List.length" (lambda/matching.ml[453,16123+29]..[453,16123+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[453,16123+41]..[453,16123+43])
                                                        Pexp_ident "l'" (lambda/matching.ml[453,16123+41]..[453,16123+43])
                                                  ]
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[454,16168+4]..[454,16168+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[454,16168+4]..[454,16168+12])
                                          Ppat_construct "Record" (lambda/matching.ml[454,16168+4]..[454,16168+10])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[454,16168+11]..[454,16168+12])
                                              Ppat_any
                                        pattern (lambda/matching.ml[454,16168+14]..[454,16168+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[454,16168+15]..[454,16168+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[454,16168+15]..[454,16168+58])
                                              Ppat_or
                                              pattern (lambda/matching.ml[454,16168+15]..[454,16168+51])
                                                Ppat_or
                                                pattern (lambda/matching.ml[454,16168+15]..[454,16168+39])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[454,16168+15]..[454,16168+25])
                                                    Ppat_construct "Constant" (lambda/matching.ml[454,16168+15]..[454,16168+23])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[454,16168+24]..[454,16168+25])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[454,16168+28]..[454,16168+39])
                                                    Ppat_construct "Construct" (lambda/matching.ml[454,16168+28]..[454,16168+37])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[454,16168+38]..[454,16168+39])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[454,16168+42]..[454,16168+51])
                                                  Ppat_construct "Variant" (lambda/matching.ml[454,16168+42]..[454,16168+49])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[454,16168+50]..[454,16168+51])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[454,16168+54]..[454,16168+58])
                                                Ppat_construct "Lazy" (lambda/matching.ml[454,16168+54]..[454,16168+58])
                                                None
                                            pattern (lambda/matching.ml[454,16168+61]..[454,16168+68])
                                              Ppat_construct "Array" (lambda/matching.ml[454,16168+61]..[454,16168+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[454,16168+67]..[454,16168+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[454,16168+71]..[454,16168+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[454,16168+71]..[454,16168+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[454,16168+77]..[454,16168+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[456,16255+6]..[456,16255+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[456,16255+6]..[456,16255+8])
                                        Pexp_ident "no" (lambda/matching.ml[456,16255+6]..[456,16255+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[456,16255+9]..[456,16255+11])
                                            Pexp_construct "()" (lambda/matching.ml[456,16255+9]..[456,16255+11])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[457,16267+4]..[457,16267+14])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[457,16267+4]..[457,16267+8])
                                          Ppat_construct "Lazy" (lambda/matching.ml[457,16267+4]..[457,16267+8])
                                          None
                                        pattern (lambda/matching.ml[457,16267+10]..[457,16267+14])
                                          Ppat_construct "Lazy" (lambda/matching.ml[457,16267+10]..[457,16267+14])
                                          None
                                      ]
                                    expression (lambda/matching.ml[457,16267+18]..[457,16267+24])
                                      Pexp_apply
                                      expression (lambda/matching.ml[457,16267+18]..[457,16267+21])
                                        Pexp_ident "yes" (lambda/matching.ml[457,16267+18]..[457,16267+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[457,16267+22]..[457,16267+24])
                                            Pexp_construct "()" (lambda/matching.ml[457,16267+22]..[457,16267+24])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[458,16292+4]..[458,16292+79])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[458,16292+4]..[458,16292+8])
                                          Ppat_construct "Lazy" (lambda/matching.ml[458,16292+4]..[458,16292+8])
                                          None
                                        pattern (lambda/matching.ml[458,16292+10]..[458,16292+79])
                                          Ppat_or
                                          pattern (lambda/matching.ml[458,16292+11]..[458,16292+68])
                                            Ppat_or
                                            pattern (lambda/matching.ml[458,16292+11]..[458,16292+57])
                                              Ppat_or
                                              pattern (lambda/matching.ml[458,16292+11]..[458,16292+47])
                                                Ppat_or
                                                pattern (lambda/matching.ml[458,16292+11]..[458,16292+35])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[458,16292+11]..[458,16292+21])
                                                    Ppat_construct "Constant" (lambda/matching.ml[458,16292+11]..[458,16292+19])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[458,16292+20]..[458,16292+21])
                                                        Ppat_any
                                                  pattern (lambda/matching.ml[458,16292+24]..[458,16292+35])
                                                    Ppat_construct "Construct" (lambda/matching.ml[458,16292+24]..[458,16292+33])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[458,16292+34]..[458,16292+35])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[458,16292+38]..[458,16292+47])
                                                  Ppat_construct "Variant" (lambda/matching.ml[458,16292+38]..[458,16292+45])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[458,16292+46]..[458,16292+47])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[458,16292+50]..[458,16292+57])
                                                Ppat_construct "Array" (lambda/matching.ml[458,16292+50]..[458,16292+55])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[458,16292+56]..[458,16292+57])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[458,16292+60]..[458,16292+68])
                                              Ppat_construct "Record" (lambda/matching.ml[458,16292+60]..[458,16292+66])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[458,16292+67]..[458,16292+68])
                                                  Ppat_any
                                          pattern (lambda/matching.ml[458,16292+71]..[458,16292+78])
                                            Ppat_construct "Tuple" (lambda/matching.ml[458,16292+71]..[458,16292+76])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[458,16292+77]..[458,16292+78])
                                                Ppat_any
                                      ]
                                    expression (lambda/matching.ml[460,16379+6]..[460,16379+11])
                                      Pexp_apply
                                      expression (lambda/matching.ml[460,16379+6]..[460,16379+8])
                                        Pexp_ident "no" (lambda/matching.ml[460,16379+6]..[460,16379+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[460,16379+9]..[460,16379+11])
                                            Pexp_construct "()" (lambda/matching.ml[460,16379+9]..[460,16379+11])
                                            None
                                      ]
                                ]
    ]
  structure_item (lambda/matching.ml[462,16392+0]..[464,16425+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[462,16392+4]..[462,16392+9])
          Ppat_var "ncols" (lambda/matching.ml[462,16392+4]..[462,16392+9])
        expression (lambda/matching.ml[462,16392+12]..[464,16425+29])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[463,16413+4]..[463,16413+6])
                Ppat_construct "[]" (lambda/matching.ml[463,16413+4]..[463,16413+6])
                None
              expression (lambda/matching.ml[463,16413+10]..[463,16413+11])
                Pexp_constant PConst_int (0,None)
            <case>
              pattern (lambda/matching.ml[464,16425+4]..[464,16425+11])
                Ppat_construct "::" (lambda/matching.ml[464,16425+7]..[464,16425+9])
                Some
                  []
                  pattern (lambda/matching.ml[464,16425+4]..[464,16425+11]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[464,16425+4]..[464,16425+6])
                        Ppat_var "ps" (lambda/matching.ml[464,16425+4]..[464,16425+6])
                      pattern (lambda/matching.ml[464,16425+10]..[464,16425+11])
                        Ppat_any
                    ]
              expression (lambda/matching.ml[464,16425+15]..[464,16425+29])
                Pexp_apply
                expression (lambda/matching.ml[464,16425+15]..[464,16425+26])
                  Pexp_ident "List.length" (lambda/matching.ml[464,16425+15]..[464,16425+26])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[464,16425+27]..[464,16425+29])
                      Pexp_ident "ps" (lambda/matching.ml[464,16425+27]..[464,16425+29])
                ]
          ]
    ]
  structure_item (lambda/matching.ml[466,16456+0]..[612,20496+3])
    Pstr_module
    "Context" (lambda/matching.ml[466,16456+7]..[466,16456+14])
      module_expr (lambda/matching.ml[466,16456+15]..[612,20496+3])
        Pmod_constraint
        module_expr (lambda/matching.ml[494,16868+6]..[612,20496+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[495,16881+2]..[529,18026+5])
              Pstr_module
              "Row" (lambda/matching.ml[495,16881+9]..[495,16881+12])
                module_expr (lambda/matching.ml[495,16881+15]..[529,18026+5])
                  Pmod_structure
                  [
                    structure_item (lambda/matching.ml[496,16903+4]..[496,16903+58])
                      Pstr_type Rec
                      [
                        type_declaration "t" (lambda/matching.ml[496,16903+9]..[496,16903+10]) (lambda/matching.ml[496,16903+4]..[496,16903+58])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_record
                              [
                                (lambda/matching.ml[496,16903+15]..[496,16903+35])
                                  Immutable
                                  "left" (lambda/matching.ml[496,16903+15]..[496,16903+19])                                  core_type (lambda/matching.ml[496,16903+22]..[496,16903+34])
                                    Ptyp_constr "list" (lambda/matching.ml[496,16903+30]..[496,16903+34])
                                    [
                                      core_type (lambda/matching.ml[496,16903+22]..[496,16903+29])
                                        Ptyp_constr "pattern" (lambda/matching.ml[496,16903+22]..[496,16903+29])
                                        []
                                    ]
                                (lambda/matching.ml[496,16903+36]..[496,16903+56])
                                  Immutable
                                  "right" (lambda/matching.ml[496,16903+36]..[496,16903+41])                                  core_type (lambda/matching.ml[496,16903+44]..[496,16903+56])
                                    Ptyp_constr "list" (lambda/matching.ml[496,16903+52]..[496,16903+56])
                                    [
                                      core_type (lambda/matching.ml[496,16903+44]..[496,16903+51])
                                        Ptyp_constr "pattern" (lambda/matching.ml[496,16903+44]..[496,16903+51])
                                        []
                                    ]
                              ]
                          ptype_private = Public
                          ptype_manifest =
                            None
                      ]
                    structure_item (lambda/matching.ml[498,16963+4]..[499,16997+76])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[498,16963+8]..[498,16963+15])
                            Ppat_var "eprintf" (lambda/matching.ml[498,16963+8]..[498,16963+15])
                          expression (lambda/matching.ml[498,16963+16]..[499,16997+76]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[498,16963+16]..[498,16963+31])
                              Ppat_record Closed
                              [
                                "left" (lambda/matching.ml[498,16963+18]..[498,16963+22]) ghost
                                  pattern (lambda/matching.ml[498,16963+18]..[498,16963+22])
                                    Ppat_var "left" (lambda/matching.ml[498,16963+18]..[498,16963+22])
                                "right" (lambda/matching.ml[498,16963+24]..[498,16963+29]) ghost
                                  pattern (lambda/matching.ml[498,16963+24]..[498,16963+29])
                                    Ppat_var "right" (lambda/matching.ml[498,16963+24]..[498,16963+29])
                              ]
                            expression (lambda/matching.ml[499,16997+6]..[499,16997+76])
                              Pexp_apply
                              expression (lambda/matching.ml[499,16997+6]..[499,16997+20])
                                Pexp_ident "Format.eprintf" (lambda/matching.ml[499,16997+6]..[499,16997+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[499,16997+21]..[499,16997+41])
                                    Pexp_constant PConst_string("LEFT:%a RIGHT:%a\n",(lambda/matching.ml[499,16997+22]..[499,16997+40]),None)
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[499,16997+42]..[499,16997+53])
                                    Pexp_ident "pretty_line" (lambda/matching.ml[499,16997+42]..[499,16997+53])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[499,16997+54]..[499,16997+58])
                                    Pexp_ident "left" (lambda/matching.ml[499,16997+54]..[499,16997+58])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[499,16997+59]..[499,16997+70])
                                    Pexp_ident "pretty_line" (lambda/matching.ml[499,16997+59]..[499,16997+70])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[499,16997+71]..[499,16997+76])
                                    Pexp_ident "right" (lambda/matching.ml[499,16997+71]..[499,16997+76])
                              ]
                      ]
                    structure_item (lambda/matching.ml[501,17075+4]..[501,17075+71])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[501,17075+8]..[501,17075+10])
                            Ppat_var "le" (lambda/matching.ml[501,17075+8]..[501,17075+10])
                          expression (lambda/matching.ml[501,17075+11]..[501,17075+71]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[501,17075+11]..[501,17075+13])
                              Ppat_var "c1" (lambda/matching.ml[501,17075+11]..[501,17075+13])
                            expression (lambda/matching.ml[501,17075+14]..[501,17075+71]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[501,17075+14]..[501,17075+16])
                                Ppat_var "c2" (lambda/matching.ml[501,17075+14]..[501,17075+16])
                              expression (lambda/matching.ml[501,17075+19]..[501,17075+71])
                                Pexp_apply
                                expression (lambda/matching.ml[501,17075+43]..[501,17075+45])
                                  Pexp_ident "&&" (lambda/matching.ml[501,17075+43]..[501,17075+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[501,17075+19]..[501,17075+42])
                                      Pexp_apply
                                      expression (lambda/matching.ml[501,17075+19]..[501,17075+26])
                                        Pexp_ident "le_pats" (lambda/matching.ml[501,17075+19]..[501,17075+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[501,17075+27]..[501,17075+34])
                                            Pexp_field
                                            expression (lambda/matching.ml[501,17075+27]..[501,17075+29])
                                              Pexp_ident "c1" (lambda/matching.ml[501,17075+27]..[501,17075+29])
                                            "left" (lambda/matching.ml[501,17075+30]..[501,17075+34])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[501,17075+35]..[501,17075+42])
                                            Pexp_field
                                            expression (lambda/matching.ml[501,17075+35]..[501,17075+37])
                                              Pexp_ident "c2" (lambda/matching.ml[501,17075+35]..[501,17075+37])
                                            "left" (lambda/matching.ml[501,17075+38]..[501,17075+42])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[501,17075+46]..[501,17075+71])
                                      Pexp_apply
                                      expression (lambda/matching.ml[501,17075+46]..[501,17075+53])
                                        Pexp_ident "le_pats" (lambda/matching.ml[501,17075+46]..[501,17075+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[501,17075+54]..[501,17075+62])
                                            Pexp_field
                                            expression (lambda/matching.ml[501,17075+54]..[501,17075+56])
                                              Pexp_ident "c1" (lambda/matching.ml[501,17075+54]..[501,17075+56])
                                            "right" (lambda/matching.ml[501,17075+57]..[501,17075+62])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[501,17075+63]..[501,17075+71])
                                            Pexp_field
                                            expression (lambda/matching.ml[501,17075+63]..[501,17075+65])
                                              Pexp_ident "c2" (lambda/matching.ml[501,17075+63]..[501,17075+65])
                                            "right" (lambda/matching.ml[501,17075+66]..[501,17075+71])
                                      ]
                                ]
                      ]
                    structure_item (lambda/matching.ml[503,17148+4]..[506,17256+25])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[503,17148+8]..[503,17148+14])
                            Ppat_var "lshift" (lambda/matching.ml[503,17148+8]..[503,17148+14])
                          expression (lambda/matching.ml[503,17148+15]..[506,17256+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[503,17148+15]..[503,17148+30])
                              Ppat_record Closed
                              [
                                "left" (lambda/matching.ml[503,17148+17]..[503,17148+21]) ghost
                                  pattern (lambda/matching.ml[503,17148+17]..[503,17148+21])
                                    Ppat_var "left" (lambda/matching.ml[503,17148+17]..[503,17148+21])
                                "right" (lambda/matching.ml[503,17148+23]..[503,17148+28]) ghost
                                  pattern (lambda/matching.ml[503,17148+23]..[503,17148+28])
                                    Ppat_var "right" (lambda/matching.ml[503,17148+23]..[503,17148+28])
                              ]
                            expression (lambda/matching.ml[504,17181+6]..[506,17256+25])
                              Pexp_match
                              expression (lambda/matching.ml[504,17181+12]..[504,17181+17])
                                Pexp_ident "right" (lambda/matching.ml[504,17181+12]..[504,17181+17])
                              [
                                <case>
                                  pattern (lambda/matching.ml[505,17204+8]..[505,17204+15])
                                    Ppat_construct "::" (lambda/matching.ml[505,17204+10]..[505,17204+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[505,17204+8]..[505,17204+15]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[505,17204+8]..[505,17204+9])
                                            Ppat_var "x" (lambda/matching.ml[505,17204+8]..[505,17204+9])
                                          pattern (lambda/matching.ml[505,17204+13]..[505,17204+15])
                                            Ppat_var "xs" (lambda/matching.ml[505,17204+13]..[505,17204+15])
                                        ]
                                  expression (lambda/matching.ml[505,17204+19]..[505,17204+51])
                                    Pexp_record
                                    [
                                      "left" (lambda/matching.ml[505,17204+21]..[505,17204+25])
                                        expression (lambda/matching.ml[505,17204+28]..[505,17204+37])
                                          Pexp_construct "::" (lambda/matching.ml[505,17204+30]..[505,17204+32])
                                          Some
                                            expression (lambda/matching.ml[505,17204+28]..[505,17204+37]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[505,17204+28]..[505,17204+29])
                                                  Pexp_ident "x" (lambda/matching.ml[505,17204+28]..[505,17204+29])
                                                expression (lambda/matching.ml[505,17204+33]..[505,17204+37])
                                                  Pexp_ident "left" (lambda/matching.ml[505,17204+33]..[505,17204+37])
                                              ]
                                      "right" (lambda/matching.ml[505,17204+39]..[505,17204+44])
                                        expression (lambda/matching.ml[505,17204+47]..[505,17204+49])
                                          Pexp_ident "xs" (lambda/matching.ml[505,17204+47]..[505,17204+49])
                                    ]
                                    None
                                <case>
                                  pattern (lambda/matching.ml[506,17256+8]..[506,17256+9])
                                    Ppat_any
                                  expression (lambda/matching.ml[506,17256+13]..[506,17256+25])
                                    Pexp_assert
                                    expression (lambda/matching.ml[506,17256+20]..[506,17256+25])
                                      Pexp_construct "false" (lambda/matching.ml[506,17256+20]..[506,17256+25])
                                      None
                              ]
                      ]
                    structure_item (lambda/matching.ml[508,17283+4]..[511,17405+25])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[508,17283+8]..[508,17283+15])
                            Ppat_var "lforget" (lambda/matching.ml[508,17283+8]..[508,17283+15])
                          expression (lambda/matching.ml[508,17283+16]..[511,17405+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[508,17283+16]..[508,17283+31])
                              Ppat_record Closed
                              [
                                "left" (lambda/matching.ml[508,17283+18]..[508,17283+22]) ghost
                                  pattern (lambda/matching.ml[508,17283+18]..[508,17283+22])
                                    Ppat_var "left" (lambda/matching.ml[508,17283+18]..[508,17283+22])
                                "right" (lambda/matching.ml[508,17283+24]..[508,17283+29]) ghost
                                  pattern (lambda/matching.ml[508,17283+24]..[508,17283+29])
                                    Ppat_var "right" (lambda/matching.ml[508,17283+24]..[508,17283+29])
                              ]
                            expression (lambda/matching.ml[509,17317+6]..[511,17405+25])
                              Pexp_match
                              expression (lambda/matching.ml[509,17317+12]..[509,17317+17])
                                Pexp_ident "right" (lambda/matching.ml[509,17317+12]..[509,17317+17])
                              [
                                <case>
                                  pattern (lambda/matching.ml[510,17340+8]..[510,17340+15])
                                    Ppat_construct "::" (lambda/matching.ml[510,17340+10]..[510,17340+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[510,17340+8]..[510,17340+15]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[510,17340+8]..[510,17340+9])
                                            Ppat_any
                                          pattern (lambda/matching.ml[510,17340+13]..[510,17340+15])
                                            Ppat_var "xs" (lambda/matching.ml[510,17340+13]..[510,17340+15])
                                        ]
                                  expression (lambda/matching.ml[510,17340+19]..[510,17340+64])
                                    Pexp_record
                                    [
                                      "left" (lambda/matching.ml[510,17340+21]..[510,17340+25])
                                        expression (lambda/matching.ml[510,17340+28]..[510,17340+50])
                                          Pexp_construct "::" (lambda/matching.ml[510,17340+43]..[510,17340+45])
                                          Some
                                            expression (lambda/matching.ml[510,17340+28]..[510,17340+50]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[510,17340+28]..[510,17340+42])
                                                  Pexp_ident "Patterns.omega" (lambda/matching.ml[510,17340+28]..[510,17340+42])
                                                expression (lambda/matching.ml[510,17340+46]..[510,17340+50])
                                                  Pexp_ident "left" (lambda/matching.ml[510,17340+46]..[510,17340+50])
                                              ]
                                      "right" (lambda/matching.ml[510,17340+52]..[510,17340+57])
                                        expression (lambda/matching.ml[510,17340+60]..[510,17340+62])
                                          Pexp_ident "xs" (lambda/matching.ml[510,17340+60]..[510,17340+62])
                                    ]
                                    None
                                <case>
                                  pattern (lambda/matching.ml[511,17405+8]..[511,17405+9])
                                    Ppat_any
                                  expression (lambda/matching.ml[511,17405+13]..[511,17405+25])
                                    Pexp_assert
                                    expression (lambda/matching.ml[511,17405+20]..[511,17405+25])
                                      Pexp_construct "false" (lambda/matching.ml[511,17405+20]..[511,17405+25])
                                      None
                              ]
                      ]
                    structure_item (lambda/matching.ml[513,17432+4]..[516,17540+25])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[513,17432+8]..[513,17432+14])
                            Ppat_var "rshift" (lambda/matching.ml[513,17432+8]..[513,17432+14])
                          expression (lambda/matching.ml[513,17432+15]..[516,17540+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[513,17432+15]..[513,17432+30])
                              Ppat_record Closed
                              [
                                "left" (lambda/matching.ml[513,17432+17]..[513,17432+21]) ghost
                                  pattern (lambda/matching.ml[513,17432+17]..[513,17432+21])
                                    Ppat_var "left" (lambda/matching.ml[513,17432+17]..[513,17432+21])
                                "right" (lambda/matching.ml[513,17432+23]..[513,17432+28]) ghost
                                  pattern (lambda/matching.ml[513,17432+23]..[513,17432+28])
                                    Ppat_var "right" (lambda/matching.ml[513,17432+23]..[513,17432+28])
                              ]
                            expression (lambda/matching.ml[514,17465+6]..[516,17540+25])
                              Pexp_match
                              expression (lambda/matching.ml[514,17465+12]..[514,17465+16])
                                Pexp_ident "left" (lambda/matching.ml[514,17465+12]..[514,17465+16])
                              [
                                <case>
                                  pattern (lambda/matching.ml[515,17487+8]..[515,17487+15])
                                    Ppat_construct "::" (lambda/matching.ml[515,17487+10]..[515,17487+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[515,17487+8]..[515,17487+15]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[515,17487+8]..[515,17487+9])
                                            Ppat_var "p" (lambda/matching.ml[515,17487+8]..[515,17487+9])
                                          pattern (lambda/matching.ml[515,17487+13]..[515,17487+15])
                                            Ppat_var "ps" (lambda/matching.ml[515,17487+13]..[515,17487+15])
                                        ]
                                  expression (lambda/matching.ml[515,17487+19]..[515,17487+52])
                                    Pexp_record
                                    [
                                      "left" (lambda/matching.ml[515,17487+21]..[515,17487+25])
                                        expression (lambda/matching.ml[515,17487+28]..[515,17487+30])
                                          Pexp_ident "ps" (lambda/matching.ml[515,17487+28]..[515,17487+30])
                                      "right" (lambda/matching.ml[515,17487+32]..[515,17487+37])
                                        expression (lambda/matching.ml[515,17487+40]..[515,17487+50])
                                          Pexp_construct "::" (lambda/matching.ml[515,17487+42]..[515,17487+44])
                                          Some
                                            expression (lambda/matching.ml[515,17487+40]..[515,17487+50]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[515,17487+40]..[515,17487+41])
                                                  Pexp_ident "p" (lambda/matching.ml[515,17487+40]..[515,17487+41])
                                                expression (lambda/matching.ml[515,17487+45]..[515,17487+50])
                                                  Pexp_ident "right" (lambda/matching.ml[515,17487+45]..[515,17487+50])
                                              ]
                                    ]
                                    None
                                <case>
                                  pattern (lambda/matching.ml[516,17540+8]..[516,17540+9])
                                    Ppat_any
                                  expression (lambda/matching.ml[516,17540+13]..[516,17540+25])
                                    Pexp_assert
                                    expression (lambda/matching.ml[516,17540+20]..[516,17540+25])
                                      Pexp_construct "false" (lambda/matching.ml[516,17540+20]..[516,17540+25])
                                      None
                              ]
                      ]
                    structure_item (lambda/matching.ml[518,17567+4]..[520,17655+39])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[518,17567+8]..[518,17567+18])
                            Ppat_var "rshift_num" (lambda/matching.ml[518,17567+8]..[518,17567+18])
                          expression (lambda/matching.ml[518,17567+19]..[520,17655+39]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[518,17567+19]..[518,17567+20])
                              Ppat_var "n" (lambda/matching.ml[518,17567+19]..[518,17567+20])
                            expression (lambda/matching.ml[518,17567+21]..[520,17655+39]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[518,17567+21]..[518,17567+36])
                                Ppat_record Closed
                                [
                                  "left" (lambda/matching.ml[518,17567+23]..[518,17567+27]) ghost
                                    pattern (lambda/matching.ml[518,17567+23]..[518,17567+27])
                                      Ppat_var "left" (lambda/matching.ml[518,17567+23]..[518,17567+27])
                                  "right" (lambda/matching.ml[518,17567+29]..[518,17567+34]) ghost
                                    pattern (lambda/matching.ml[518,17567+29]..[518,17567+34])
                                      Ppat_var "right" (lambda/matching.ml[518,17567+29]..[518,17567+34])
                                ]
                              expression (lambda/matching.ml[519,17606+6]..[520,17655+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[519,17606+10]..[519,17606+23])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[519,17606+10]..[519,17606+17])
                                          Ppat_var "shifted" (lambda/matching.ml[519,17606+10]..[519,17606+17])
                                        pattern (lambda/matching.ml[519,17606+19]..[519,17606+23])
                                          Ppat_var "left" (lambda/matching.ml[519,17606+19]..[519,17606+23])
                                      ]
                                    expression (lambda/matching.ml[519,17606+26]..[519,17606+45])
                                      Pexp_apply
                                      expression (lambda/matching.ml[519,17606+26]..[519,17606+38])
                                        Pexp_ident "rev_split_at" (lambda/matching.ml[519,17606+26]..[519,17606+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[519,17606+39]..[519,17606+40])
                                            Pexp_ident "n" (lambda/matching.ml[519,17606+39]..[519,17606+40])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[519,17606+41]..[519,17606+45])
                                            Pexp_ident "left" (lambda/matching.ml[519,17606+41]..[519,17606+45])
                                      ]
                                ]
                                expression (lambda/matching.ml[520,17655+6]..[520,17655+39])
                                  Pexp_record
                                  [
                                    "left" (lambda/matching.ml[520,17655+8]..[520,17655+12]) ghost
                                      expression (lambda/matching.ml[520,17655+8]..[520,17655+12])
                                        Pexp_ident "left" (lambda/matching.ml[520,17655+8]..[520,17655+12])
                                    "right" (lambda/matching.ml[520,17655+14]..[520,17655+19])
                                      expression (lambda/matching.ml[520,17655+22]..[520,17655+37])
                                        Pexp_apply
                                        expression (lambda/matching.ml[520,17655+30]..[520,17655+31])
                                          Pexp_ident "@" (lambda/matching.ml[520,17655+30]..[520,17655+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[520,17655+22]..[520,17655+29])
                                              Pexp_ident "shifted" (lambda/matching.ml[520,17655+22]..[520,17655+29])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[520,17655+32]..[520,17655+37])
                                              Pexp_ident "right" (lambda/matching.ml[520,17655+32]..[520,17655+37])
                                        ]
                                  ]
                                  None
                      ]
                    structure_item (lambda/matching.ml[525,17871+4]..[528,18000+25])
                      Pstr_value Nonrec
                      [
                        <def>
                            attribute "ocaml.doc"
                              [
                                structure_item (lambda/matching.ml[522,17696+4]..[524,17836+34])
                                  Pstr_eval
                                  expression (lambda/matching.ml[522,17696+4]..[524,17836+34])
                                    Pexp_constant PConst_string(" Recombination of contexts (eg: (_,_)::p1::p2::rem ->  (p1,p2)::rem)\n  All mutable fields are replaced by '_', since side-effects in\n  guards can alter these fields ",(lambda/matching.ml[522,17696+4]..[524,17836+34]),None)
                              ]
                          pattern (lambda/matching.ml[525,17871+8]..[525,17871+15])
                            Ppat_var "combine" (lambda/matching.ml[525,17871+8]..[525,17871+15])
                          expression (lambda/matching.ml[525,17871+16]..[528,18000+25]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[525,17871+16]..[525,17871+31])
                              Ppat_record Closed
                              [
                                "left" (lambda/matching.ml[525,17871+18]..[525,17871+22]) ghost
                                  pattern (lambda/matching.ml[525,17871+18]..[525,17871+22])
                                    Ppat_var "left" (lambda/matching.ml[525,17871+18]..[525,17871+22])
                                "right" (lambda/matching.ml[525,17871+24]..[525,17871+29]) ghost
                                  pattern (lambda/matching.ml[525,17871+24]..[525,17871+29])
                                    Ppat_var "right" (lambda/matching.ml[525,17871+24]..[525,17871+29])
                              ]
                            expression (lambda/matching.ml[526,17905+6]..[528,18000+25])
                              Pexp_match
                              expression (lambda/matching.ml[526,17905+12]..[526,17905+16])
                                Pexp_ident "left" (lambda/matching.ml[526,17905+12]..[526,17905+16])
                              [
                                <case>
                                  pattern (lambda/matching.ml[527,17927+8]..[527,17927+15])
                                    Ppat_construct "::" (lambda/matching.ml[527,17927+10]..[527,17927+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[527,17927+8]..[527,17927+15]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[527,17927+8]..[527,17927+9])
                                            Ppat_var "p" (lambda/matching.ml[527,17927+8]..[527,17927+9])
                                          pattern (lambda/matching.ml[527,17927+13]..[527,17927+15])
                                            Ppat_var "ps" (lambda/matching.ml[527,17927+13]..[527,17927+15])
                                        ]
                                  expression (lambda/matching.ml[527,17927+19]..[527,17927+72])
                                    Pexp_record
                                    [
                                      "left" (lambda/matching.ml[527,17927+21]..[527,17927+25])
                                        expression (lambda/matching.ml[527,17927+28]..[527,17927+30])
                                          Pexp_ident "ps" (lambda/matching.ml[527,17927+28]..[527,17927+30])
                                      "right" (lambda/matching.ml[527,17927+32]..[527,17927+37])
                                        expression (lambda/matching.ml[527,17927+40]..[527,17927+70])
                                          Pexp_apply
                                          expression (lambda/matching.ml[527,17927+40]..[527,17927+62])
                                            Pexp_ident "set_args_erase_mutable" (lambda/matching.ml[527,17927+40]..[527,17927+62])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[527,17927+63]..[527,17927+64])
                                                Pexp_ident "p" (lambda/matching.ml[527,17927+63]..[527,17927+64])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[527,17927+65]..[527,17927+70])
                                                Pexp_ident "right" (lambda/matching.ml[527,17927+65]..[527,17927+70])
                                          ]
                                    ]
                                    None
                                <case>
                                  pattern (lambda/matching.ml[528,18000+8]..[528,18000+9])
                                    Ppat_any
                                  expression (lambda/matching.ml[528,18000+13]..[528,18000+25])
                                    Pexp_assert
                                    expression (lambda/matching.ml[528,18000+20]..[528,18000+25])
                                      Pexp_construct "false" (lambda/matching.ml[528,18000+20]..[528,18000+25])
                                      None
                              ]
                      ]
                  ]
            structure_item (lambda/matching.ml[531,18033+2]..[531,18033+21])
              Pstr_type Rec
              [
                type_declaration "t" (lambda/matching.ml[531,18033+7]..[531,18033+8]) (lambda/matching.ml[531,18033+2]..[531,18033+21])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[531,18033+11]..[531,18033+21])
                        Ptyp_constr "list" (lambda/matching.ml[531,18033+17]..[531,18033+21])
                        [
                          core_type (lambda/matching.ml[531,18033+11]..[531,18033+16])
                            Ptyp_constr "Row.t" (lambda/matching.ml[531,18033+11]..[531,18033+16])
                            []
                        ]
              ]
            structure_item (lambda/matching.ml[533,18056+2]..[533,18056+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[533,18056+6]..[533,18056+11])
                    Ppat_var "empty" (lambda/matching.ml[533,18056+6]..[533,18056+11])
                  expression (lambda/matching.ml[533,18056+14]..[533,18056+16])
                    Pexp_construct "[]" (lambda/matching.ml[533,18056+14]..[533,18056+16])
                    None
              ]
            structure_item (lambda/matching.ml[535,18074+2]..[535,18074+64])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[535,18074+6]..[535,18074+11])
                    Ppat_var "start" (lambda/matching.ml[535,18074+6]..[535,18074+11])
                  expression (lambda/matching.ml[535,18074+12]..[535,18074+64]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[535,18074+12]..[535,18074+13])
                      Ppat_var "n" (lambda/matching.ml[535,18074+12]..[535,18074+13])
                    expression (lambda/matching.ml[535,18074+14]..[535,18074+64])
                      Pexp_constraint
                      expression (lambda/matching.ml[535,18074+20]..[535,18074+64])
                        Pexp_construct "::" (lambda/matching.ml[535,18074+22]..[535,18074+64]) ghost
                        Some
                          expression (lambda/matching.ml[535,18074+22]..[535,18074+64]) ghost
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[535,18074+22]..[535,18074+62])
                                Pexp_record
                                [
                                  "left" (lambda/matching.ml[535,18074+24]..[535,18074+28])
                                    expression (lambda/matching.ml[535,18074+31]..[535,18074+33])
                                      Pexp_construct "[]" (lambda/matching.ml[535,18074+31]..[535,18074+33])
                                      None
                                  "right" (lambda/matching.ml[535,18074+35]..[535,18074+40])
                                    expression (lambda/matching.ml[535,18074+43]..[535,18074+60])
                                      Pexp_apply
                                      expression (lambda/matching.ml[535,18074+43]..[535,18074+58])
                                        Pexp_ident "Patterns.omegas" (lambda/matching.ml[535,18074+43]..[535,18074+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[535,18074+59]..[535,18074+60])
                                            Pexp_ident "n" (lambda/matching.ml[535,18074+59]..[535,18074+60])
                                      ]
                                ]
                                None
                              expression (lambda/matching.ml[535,18074+63]..[535,18074+64]) ghost
                                Pexp_construct "[]" (lambda/matching.ml[535,18074+63]..[535,18074+64]) ghost
                                None
                            ]
                      core_type (lambda/matching.ml[535,18074+16]..[535,18074+17])
                        Ptyp_constr "t" (lambda/matching.ml[535,18074+16]..[535,18074+17])
                        []
              ]
            structure_item (lambda/matching.ml[537,18140+2]..[539,18183+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[537,18140+6]..[537,18140+14])
                    Ppat_var "is_empty" (lambda/matching.ml[537,18140+6]..[537,18140+14])
                  expression (lambda/matching.ml[537,18140+17]..[539,18183+16])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[538,18166+6]..[538,18166+8])
                          Ppat_construct "[]" (lambda/matching.ml[538,18166+6]..[538,18166+8])
                          None
                        expression (lambda/matching.ml[538,18166+12]..[538,18166+16])
                          Pexp_construct "true" (lambda/matching.ml[538,18166+12]..[538,18166+16])
                          None
                      <case>
                        pattern (lambda/matching.ml[539,18183+6]..[539,18183+7])
                          Ppat_any
                        expression (lambda/matching.ml[539,18183+11]..[539,18183+16])
                          Pexp_construct "false" (lambda/matching.ml[539,18183+11]..[539,18183+16])
                          None
                    ]
              ]
            structure_item (lambda/matching.ml[541,18201+2]..[541,18201+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[541,18201+6]..[541,18201+13])
                    Ppat_var "eprintf" (lambda/matching.ml[541,18201+6]..[541,18201+13])
                  expression (lambda/matching.ml[541,18201+14]..[541,18201+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[541,18201+14]..[541,18201+17])
                      Ppat_var "ctx" (lambda/matching.ml[541,18201+14]..[541,18201+17])
                    expression (lambda/matching.ml[541,18201+20]..[541,18201+45])
                      Pexp_apply
                      expression (lambda/matching.ml[541,18201+20]..[541,18201+29])
                        Pexp_ident "List.iter" (lambda/matching.ml[541,18201+20]..[541,18201+29])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[541,18201+30]..[541,18201+41])
                            Pexp_ident "Row.eprintf" (lambda/matching.ml[541,18201+30]..[541,18201+41])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[541,18201+42]..[541,18201+45])
                            Pexp_ident "ctx" (lambda/matching.ml[541,18201+42]..[541,18201+45])
                      ]
              ]
            structure_item (lambda/matching.ml[543,18248+2]..[548,18392+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[543,18248+6]..[543,18248+12])
                    Ppat_var "lshift" (lambda/matching.ml[543,18248+6]..[543,18248+12])
                  expression (lambda/matching.ml[543,18248+13]..[548,18392+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[543,18248+13]..[543,18248+16])
                      Ppat_var "ctx" (lambda/matching.ml[543,18248+13]..[543,18248+16])
                    expression (lambda/matching.ml[544,18267+4]..[548,18392+48])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[544,18267+7]..[544,18267+52])
                        Pexp_apply
                        expression (lambda/matching.ml[544,18267+23]..[544,18267+24])
                          Pexp_ident "<" (lambda/matching.ml[544,18267+23]..[544,18267+24])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[544,18267+7]..[544,18267+22])
                              Pexp_apply
                              expression (lambda/matching.ml[544,18267+7]..[544,18267+18])
                                Pexp_ident "List.length" (lambda/matching.ml[544,18267+7]..[544,18267+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[544,18267+19]..[544,18267+22])
                                    Pexp_ident "ctx" (lambda/matching.ml[544,18267+19]..[544,18267+22])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[544,18267+25]..[544,18267+52])
                              Pexp_apply
                              expression (lambda/matching.ml[544,18267+25]..[544,18267+26])
                                Pexp_ident "!" (lambda/matching.ml[544,18267+25]..[544,18267+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[544,18267+26]..[544,18267+52])
                                    Pexp_ident "Clflags.match_context_rows" (lambda/matching.ml[544,18267+26]..[544,18267+52])
                              ]
                        ]
                      expression (lambda/matching.ml[545,18325+6]..[545,18325+29])
                        Pexp_apply
                        expression (lambda/matching.ml[545,18325+6]..[545,18325+14])
                          Pexp_ident "List.map" (lambda/matching.ml[545,18325+6]..[545,18325+14])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[545,18325+15]..[545,18325+25])
                              Pexp_ident "Row.lshift" (lambda/matching.ml[545,18325+15]..[545,18325+25])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[545,18325+26]..[545,18325+29])
                              Pexp_ident "ctx" (lambda/matching.ml[545,18325+26]..[545,18325+29])
                        ]
                      Some
                        expression (lambda/matching.ml[548,18392+6]..[548,18392+48])
                          Pexp_apply
                          expression (lambda/matching.ml[548,18392+6]..[548,18392+14])
                            Pexp_ident "get_mins" (lambda/matching.ml[548,18392+6]..[548,18392+14])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[548,18392+15]..[548,18392+21])
                                Pexp_ident "Row.le" (lambda/matching.ml[548,18392+15]..[548,18392+21])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[548,18392+22]..[548,18392+48])
                                Pexp_apply
                                expression (lambda/matching.ml[548,18392+23]..[548,18392+31])
                                  Pexp_ident "List.map" (lambda/matching.ml[548,18392+23]..[548,18392+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[548,18392+32]..[548,18392+43])
                                      Pexp_ident "Row.lforget" (lambda/matching.ml[548,18392+32]..[548,18392+43])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[548,18392+44]..[548,18392+47])
                                      Pexp_ident "ctx" (lambda/matching.ml[548,18392+44]..[548,18392+47])
                                ]
                          ]
              ]
            structure_item (lambda/matching.ml[550,18442+2]..[550,18442+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[550,18442+6]..[550,18442+12])
                    Ppat_var "rshift" (lambda/matching.ml[550,18442+6]..[550,18442+12])
                  expression (lambda/matching.ml[550,18442+13]..[550,18442+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[550,18442+13]..[550,18442+16])
                      Ppat_var "ctx" (lambda/matching.ml[550,18442+13]..[550,18442+16])
                    expression (lambda/matching.ml[550,18442+19]..[550,18442+42])
                      Pexp_apply
                      expression (lambda/matching.ml[550,18442+19]..[550,18442+27])
                        Pexp_ident "List.map" (lambda/matching.ml[550,18442+19]..[550,18442+27])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[550,18442+28]..[550,18442+38])
                            Pexp_ident "Row.rshift" (lambda/matching.ml[550,18442+28]..[550,18442+38])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[550,18442+39]..[550,18442+42])
                            Pexp_ident "ctx" (lambda/matching.ml[550,18442+39]..[550,18442+42])
                      ]
              ]
            structure_item (lambda/matching.ml[552,18486+2]..[552,18486+56])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[552,18486+6]..[552,18486+16])
                    Ppat_var "rshift_num" (lambda/matching.ml[552,18486+6]..[552,18486+16])
                  expression (lambda/matching.ml[552,18486+17]..[552,18486+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[552,18486+17]..[552,18486+18])
                      Ppat_var "n" (lambda/matching.ml[552,18486+17]..[552,18486+18])
                    expression (lambda/matching.ml[552,18486+19]..[552,18486+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[552,18486+19]..[552,18486+22])
                        Ppat_var "ctx" (lambda/matching.ml[552,18486+19]..[552,18486+22])
                      expression (lambda/matching.ml[552,18486+25]..[552,18486+56])
                        Pexp_apply
                        expression (lambda/matching.ml[552,18486+25]..[552,18486+33])
                          Pexp_ident "List.map" (lambda/matching.ml[552,18486+25]..[552,18486+33])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[552,18486+34]..[552,18486+52])
                              Pexp_apply
                              expression (lambda/matching.ml[552,18486+35]..[552,18486+49])
                                Pexp_ident "Row.rshift_num" (lambda/matching.ml[552,18486+35]..[552,18486+49])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[552,18486+50]..[552,18486+51])
                                    Pexp_ident "n" (lambda/matching.ml[552,18486+50]..[552,18486+51])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[552,18486+53]..[552,18486+56])
                              Pexp_ident "ctx" (lambda/matching.ml[552,18486+53]..[552,18486+56])
                        ]
              ]
            structure_item (lambda/matching.ml[554,18544+2]..[554,18544+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[554,18544+6]..[554,18544+13])
                    Ppat_var "combine" (lambda/matching.ml[554,18544+6]..[554,18544+13])
                  expression (lambda/matching.ml[554,18544+14]..[554,18544+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[554,18544+14]..[554,18544+17])
                      Ppat_var "ctx" (lambda/matching.ml[554,18544+14]..[554,18544+17])
                    expression (lambda/matching.ml[554,18544+20]..[554,18544+44])
                      Pexp_apply
                      expression (lambda/matching.ml[554,18544+20]..[554,18544+28])
                        Pexp_ident "List.map" (lambda/matching.ml[554,18544+20]..[554,18544+28])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[554,18544+29]..[554,18544+40])
                            Pexp_ident "Row.combine" (lambda/matching.ml[554,18544+29]..[554,18544+40])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[554,18544+41]..[554,18544+44])
                            Pexp_ident "ctx" (lambda/matching.ml[554,18544+41]..[554,18544+44])
                      ]
              ]
            structure_item (lambda/matching.ml[556,18590+2]..[583,19636+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[556,18590+6]..[556,18590+16])
                    Ppat_var "specialize" (lambda/matching.ml[556,18590+6]..[556,18590+16])
                  expression (lambda/matching.ml[556,18590+17]..[583,19636+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[556,18590+17]..[556,18590+21])
                      Ppat_var "head" (lambda/matching.ml[556,18590+17]..[556,18590+21])
                    expression (lambda/matching.ml[556,18590+22]..[583,19636+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[556,18590+22]..[556,18590+25])
                        Ppat_var "ctx" (lambda/matching.ml[556,18590+22]..[556,18590+25])
                      expression (lambda/matching.ml[557,18618+4]..[583,19636+18])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[557,18618+8]..[557,18618+17])
                              Ppat_var "non_empty" (lambda/matching.ml[557,18618+8]..[557,18618+17])
                            expression (lambda/matching.ml[557,18618+20]..[560,18739+54])
                              Pexp_function
                              [
                                <case>
                                  pattern (lambda/matching.ml[558,18647+8]..[558,18647+36])
                                    Ppat_record Closed
                                    [
                                      "Row.left" (lambda/matching.ml[558,18647+10]..[558,18647+18])
                                        pattern (lambda/matching.ml[558,18647+21]..[558,18647+22])
                                          Ppat_any
                                      "right" (lambda/matching.ml[558,18647+24]..[558,18647+29])
                                        pattern (lambda/matching.ml[558,18647+32]..[558,18647+34])
                                          Ppat_construct "[]" (lambda/matching.ml[558,18647+32]..[558,18647+34])
                                          None
                                    ]
                                  expression (lambda/matching.ml[559,18687+10]..[559,18687+51])
                                    Pexp_apply
                                    expression (lambda/matching.ml[559,18687+10]..[559,18687+21])
                                      Pexp_ident "fatal_error" (lambda/matching.ml[559,18687+10]..[559,18687+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[559,18687+22]..[559,18687+51])
                                          Pexp_constant PConst_string("Matching.Context.specialize",(lambda/matching.ml[559,18687+23]..[559,18687+50]),None)
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[560,18739+8]..[560,18739+37])
                                    Ppat_record Closed
                                    [
                                      "Row.left" (lambda/matching.ml[560,18739+10]..[560,18739+18]) ghost
                                        pattern (lambda/matching.ml[560,18739+10]..[560,18739+18])
                                          Ppat_var "left" (lambda/matching.ml[560,18739+10]..[560,18739+18])
                                      "right" (lambda/matching.ml[560,18739+20]..[560,18739+25])
                                        pattern (lambda/matching.ml[560,18739+28]..[560,18739+35])
                                          Ppat_construct "::" (lambda/matching.ml[560,18739+30]..[560,18739+32])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[560,18739+28]..[560,18739+35]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[560,18739+28]..[560,18739+29])
                                                  Ppat_var "p" (lambda/matching.ml[560,18739+28]..[560,18739+29])
                                                pattern (lambda/matching.ml[560,18739+33]..[560,18739+35])
                                                  Ppat_var "ps" (lambda/matching.ml[560,18739+33]..[560,18739+35])
                                              ]
                                    ]
                                  expression (lambda/matching.ml[560,18739+41]..[560,18739+54])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[560,18739+42]..[560,18739+46])
                                        Pexp_ident "left" (lambda/matching.ml[560,18739+42]..[560,18739+46])
                                      expression (lambda/matching.ml[560,18739+48]..[560,18739+49])
                                        Pexp_ident "p" (lambda/matching.ml[560,18739+48]..[560,18739+49])
                                      expression (lambda/matching.ml[560,18739+51]..[560,18739+53])
                                        Pexp_ident "ps" (lambda/matching.ml[560,18739+51]..[560,18739+53])
                                    ]
                              ]
                        ]
                        expression (lambda/matching.ml[562,18801+4]..[583,19636+18])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[562,18801+8]..[562,18801+11])
                                Ppat_var "ctx" (lambda/matching.ml[562,18801+8]..[562,18801+11])
                              expression (lambda/matching.ml[562,18801+14]..[562,18801+36])
                                Pexp_apply
                                expression (lambda/matching.ml[562,18801+14]..[562,18801+22])
                                  Pexp_ident "List.map" (lambda/matching.ml[562,18801+14]..[562,18801+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[562,18801+23]..[562,18801+32])
                                      Pexp_ident "non_empty" (lambda/matching.ml[562,18801+23]..[562,18801+32])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[562,18801+33]..[562,18801+36])
                                      Pexp_ident "ctx" (lambda/matching.ml[562,18801+33]..[562,18801+36])
                                ]
                          ]
                          expression (lambda/matching.ml[563,18841+4]..[583,19636+18])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (lambda/matching.ml[563,18841+12]..[563,18841+22])
                                  Ppat_var "filter_rec" (lambda/matching.ml[563,18841+12]..[563,18841+22])
                                expression (lambda/matching.ml[563,18841+25]..[581,19619+9])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[564,18875+8]..[564,18875+10])
                                        Ppat_construct "[]" (lambda/matching.ml[564,18875+8]..[564,18875+10])
                                        None
                                      expression (lambda/matching.ml[564,18875+14]..[564,18875+16])
                                        Pexp_construct "[]" (lambda/matching.ml[564,18875+14]..[564,18875+16])
                                        None
                                    <case>
                                      pattern (lambda/matching.ml[565,18892+8]..[565,18892+31])
                                        Ppat_construct "::" (lambda/matching.ml[565,18892+25]..[565,18892+27])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[565,18892+8]..[565,18892+31]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[565,18892+8]..[565,18892+24])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[565,18892+9]..[565,18892+13])
                                                    Ppat_var "left" (lambda/matching.ml[565,18892+9]..[565,18892+13])
                                                  pattern (lambda/matching.ml[565,18892+15]..[565,18892+16])
                                                    Ppat_var "p" (lambda/matching.ml[565,18892+15]..[565,18892+16])
                                                  pattern (lambda/matching.ml[565,18892+18]..[565,18892+23])
                                                    Ppat_var "right" (lambda/matching.ml[565,18892+18]..[565,18892+23])
                                                ]
                                              pattern (lambda/matching.ml[565,18892+28]..[565,18892+31])
                                                Ppat_var "rem" (lambda/matching.ml[565,18892+28]..[565,18892+31])
                                            ]
                                      expression (lambda/matching.ml[565,18892+35]..[581,19619+9])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[566,18929+14]..[566,18929+15])
                                              Ppat_var "p" (lambda/matching.ml[566,18929+14]..[566,18929+15])
                                            expression (lambda/matching.ml[566,18929+18]..[566,18929+32])
                                              Pexp_apply
                                              expression (lambda/matching.ml[566,18929+18]..[566,18929+30])
                                                Pexp_ident "General.view" (lambda/matching.ml[566,18929+18]..[566,18929+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[566,18929+31]..[566,18929+32])
                                                    Pexp_ident "p" (lambda/matching.ml[566,18929+31]..[566,18929+32])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[567,18965+10]..[580,19605+13])
                                          Pexp_match
                                          expression (lambda/matching.ml[567,18965+16]..[567,18965+26])
                                            Pexp_field
                                            expression (lambda/matching.ml[567,18965+16]..[567,18965+17])
                                              Pexp_ident "p" (lambda/matching.ml[567,18965+16]..[567,18965+17])
                                            "pat_desc" (lambda/matching.ml[567,18965+18]..[567,18965+26])
                                          [
                                            <case>
                                              pattern (lambda/matching.ml[568,18997+12]..[568,18997+27])
                                                Ppat_variant "Or"
                                                Some
                                                  pattern (lambda/matching.ml[568,18997+16]..[568,18997+27])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[568,18997+17]..[568,18997+19])
                                                        Ppat_var "p1" (lambda/matching.ml[568,18997+17]..[568,18997+19])
                                                      pattern (lambda/matching.ml[568,18997+21]..[568,18997+23])
                                                        Ppat_var "p2" (lambda/matching.ml[568,18997+21]..[568,18997+23])
                                                      pattern (lambda/matching.ml[568,18997+25]..[568,18997+26])
                                                        Ppat_any
                                                    ]
                                              expression (lambda/matching.ml[569,19028+14]..[569,19028+72])
                                                Pexp_apply
                                                expression (lambda/matching.ml[569,19028+14]..[569,19028+24])
                                                  Pexp_ident "filter_rec" (lambda/matching.ml[569,19028+14]..[569,19028+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[569,19028+25]..[569,19028+72])
                                                      Pexp_construct "::" (lambda/matching.ml[569,19028+44]..[569,19028+46])
                                                      Some
                                                        expression (lambda/matching.ml[569,19028+26]..[569,19028+71]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[569,19028+26]..[569,19028+43])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[569,19028+27]..[569,19028+31])
                                                                  Pexp_ident "left" (lambda/matching.ml[569,19028+27]..[569,19028+31])
                                                                expression (lambda/matching.ml[569,19028+33]..[569,19028+35])
                                                                  Pexp_ident "p1" (lambda/matching.ml[569,19028+33]..[569,19028+35])
                                                                expression (lambda/matching.ml[569,19028+37]..[569,19028+42])
                                                                  Pexp_ident "right" (lambda/matching.ml[569,19028+37]..[569,19028+42])
                                                              ]
                                                            expression (lambda/matching.ml[569,19028+47]..[569,19028+71])
                                                              Pexp_construct "::" (lambda/matching.ml[569,19028+65]..[569,19028+67])
                                                              Some
                                                                expression (lambda/matching.ml[569,19028+47]..[569,19028+71]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[569,19028+47]..[569,19028+64])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[569,19028+48]..[569,19028+52])
  Pexp_ident "left" (lambda/matching.ml[569,19028+48]..[569,19028+52])
expression (lambda/matching.ml[569,19028+54]..[569,19028+56])
  Pexp_ident "p2" (lambda/matching.ml[569,19028+54]..[569,19028+56])
expression (lambda/matching.ml[569,19028+58]..[569,19028+63])
  Pexp_ident "right" (lambda/matching.ml[569,19028+58]..[569,19028+63])
                                                                      ]
                                                                    expression (lambda/matching.ml[569,19028+68]..[569,19028+71])
                                                                      Pexp_ident "rem" (lambda/matching.ml[569,19028+68]..[569,19028+71])
                                                                  ]
                                                          ]
                                                ]
                                            <case>
                                              pattern (lambda/matching.ml[570,19101+12]..[570,19101+28])
                                                Ppat_variant "Alias"
                                                Some
                                                  pattern (lambda/matching.ml[570,19101+19]..[570,19101+28])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[570,19101+20]..[570,19101+21])
                                                        Ppat_var "p" (lambda/matching.ml[570,19101+20]..[570,19101+21])
                                                      pattern (lambda/matching.ml[570,19101+23]..[570,19101+24])
                                                        Ppat_any
                                                      pattern (lambda/matching.ml[570,19101+26]..[570,19101+27])
                                                        Ppat_any
                                                    ]
                                              expression (lambda/matching.ml[570,19101+32]..[570,19101+68])
                                                Pexp_apply
                                                expression (lambda/matching.ml[570,19101+32]..[570,19101+42])
                                                  Pexp_ident "filter_rec" (lambda/matching.ml[570,19101+32]..[570,19101+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[570,19101+43]..[570,19101+68])
                                                      Pexp_construct "::" (lambda/matching.ml[570,19101+61]..[570,19101+63])
                                                      Some
                                                        expression (lambda/matching.ml[570,19101+44]..[570,19101+67]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[570,19101+44]..[570,19101+60])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[570,19101+45]..[570,19101+49])
                                                                  Pexp_ident "left" (lambda/matching.ml[570,19101+45]..[570,19101+49])
                                                                expression (lambda/matching.ml[570,19101+51]..[570,19101+52])
                                                                  Pexp_ident "p" (lambda/matching.ml[570,19101+51]..[570,19101+52])
                                                                expression (lambda/matching.ml[570,19101+54]..[570,19101+59])
                                                                  Pexp_ident "right" (lambda/matching.ml[570,19101+54]..[570,19101+59])
                                                              ]
                                                            expression (lambda/matching.ml[570,19101+64]..[570,19101+67])
                                                              Pexp_ident "rem" (lambda/matching.ml[570,19101+64]..[570,19101+67])
                                                          ]
                                                ]
                                            <case>
                                              pattern (lambda/matching.ml[571,19170+12]..[571,19170+18])
                                                Ppat_variant "Var"
                                                Some
                                                  pattern (lambda/matching.ml[571,19170+17]..[571,19170+18])
                                                    Ppat_any
                                              expression (lambda/matching.ml[571,19170+22]..[571,19170+71])
                                                Pexp_apply
                                                expression (lambda/matching.ml[571,19170+22]..[571,19170+32])
                                                  Pexp_ident "filter_rec" (lambda/matching.ml[571,19170+22]..[571,19170+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[571,19170+33]..[571,19170+71])
                                                      Pexp_construct "::" (lambda/matching.ml[571,19170+64]..[571,19170+66])
                                                      Some
                                                        expression (lambda/matching.ml[571,19170+34]..[571,19170+70]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[571,19170+34]..[571,19170+63])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[571,19170+35]..[571,19170+39])
                                                                  Pexp_ident "left" (lambda/matching.ml[571,19170+35]..[571,19170+39])
                                                                expression (lambda/matching.ml[571,19170+41]..[571,19170+55])
                                                                  Pexp_ident "Patterns.omega" (lambda/matching.ml[571,19170+41]..[571,19170+55])
                                                                expression (lambda/matching.ml[571,19170+57]..[571,19170+62])
                                                                  Pexp_ident "right" (lambda/matching.ml[571,19170+57]..[571,19170+62])
                                                              ]
                                                            expression (lambda/matching.ml[571,19170+67]..[571,19170+70])
                                                              Pexp_ident "rem" (lambda/matching.ml[571,19170+67]..[571,19170+70])
                                                          ]
                                                ]
                                            <case>
                                              pattern (lambda/matching.ml[572,19242+12]..[572,19242+32])
                                                Ppat_alias "view" (lambda/matching.ml[572,19242+28]..[572,19242+32])
                                                pattern (lambda/matching.ml[572,19242+12]..[572,19242+24])
                                                  Ppat_type
                                                  "Simple.view" (lambda/matching.ml[572,19242+13]..[572,19242+24])
                                              expression (lambda/matching.ml[572,19242+36]..[580,19605+13])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[573,19280+18]..[573,19280+19])
                                                      Ppat_var "p" (lambda/matching.ml[573,19280+18]..[573,19280+19])
                                                    expression (lambda/matching.ml[573,19280+22]..[573,19280+48])
                                                      Pexp_record
                                                      [
                                                        "pat_desc" (lambda/matching.ml[573,19280+31]..[573,19280+39])
                                                          expression (lambda/matching.ml[573,19280+42]..[573,19280+46])
                                                            Pexp_ident "view" (lambda/matching.ml[573,19280+42]..[573,19280+46])
                                                      ]
                                                      Some
                                                        expression (lambda/matching.ml[573,19280+24]..[573,19280+25])
                                                          Pexp_ident "p" (lambda/matching.ml[573,19280+24]..[573,19280+25])
                                                ]
                                                expression (lambda/matching.ml[574,19332+14]..[579,19569+35])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[574,19332+20]..[574,19332+40])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[574,19332+20]..[574,19332+27])
                                                      Pexp_ident "matcher" (lambda/matching.ml[574,19332+20]..[574,19332+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[574,19332+28]..[574,19332+32])
                                                          Pexp_ident "head" (lambda/matching.ml[574,19332+28]..[574,19332+32])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[574,19332+33]..[574,19332+34])
                                                          Pexp_ident "p" (lambda/matching.ml[574,19332+33]..[574,19332+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[574,19332+35]..[574,19332+40])
                                                          Pexp_ident "right" (lambda/matching.ml[574,19332+35]..[574,19332+40])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[575,19378+16]..[575,19378+33])
                                                        Ppat_exception
                                                        pattern (lambda/matching.ml[575,19378+26]..[575,19378+33])
                                                          Ppat_construct "NoMatch" (lambda/matching.ml[575,19378+26]..[575,19378+33])
                                                          None
                                                      expression (lambda/matching.ml[575,19378+37]..[575,19378+51])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[575,19378+37]..[575,19378+47])
                                                          Pexp_ident "filter_rec" (lambda/matching.ml[575,19378+37]..[575,19378+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[575,19378+48]..[575,19378+51])
                                                              Pexp_ident "rem" (lambda/matching.ml[575,19378+48]..[575,19378+51])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[576,19430+16]..[576,19430+21])
                                                        Ppat_var "right" (lambda/matching.ml[576,19430+16]..[576,19430+21])
                                                      expression (lambda/matching.ml[577,19455+18]..[579,19569+35])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lambda/matching.ml[577,19455+22]..[577,19455+26])
                                                              Ppat_var "left" (lambda/matching.ml[577,19455+22]..[577,19455+26])
                                                            expression (lambda/matching.ml[577,19455+29]..[577,19455+72])
                                                              Pexp_construct "::" (lambda/matching.ml[577,19455+65]..[577,19455+67])
                                                              Some
                                                                expression (lambda/matching.ml[577,19455+29]..[577,19455+72]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[577,19455+29]..[577,19455+64])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[577,19455+29]..[577,19455+59])
Pexp_ident "Patterns.Head.to_omega_pattern" (lambda/matching.ml[577,19455+29]..[577,19455+59])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[577,19455+60]..[577,19455+64])
    Pexp_ident "head" (lambda/matching.ml[577,19455+60]..[577,19455+64])
                                                                      ]
                                                                    expression (lambda/matching.ml[577,19455+68]..[577,19455+72])
                                                                      Pexp_ident "left" (lambda/matching.ml[577,19455+68]..[577,19455+72])
                                                                  ]
                                                        ]
                                                        expression (lambda/matching.ml[578,19531+18]..[579,19569+35])
                                                          Pexp_construct "::" (lambda/matching.ml[579,19569+18]..[579,19569+20])
                                                          Some
                                                            expression (lambda/matching.ml[578,19531+18]..[579,19569+35]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[578,19531+18]..[578,19531+37])
                                                                  Pexp_record
                                                                  [
                                                                    "Row.left" (lambda/matching.ml[578,19531+20]..[578,19531+28]) ghost
                                                                      expression (lambda/matching.ml[578,19531+20]..[578,19531+28])
Pexp_ident "left" (lambda/matching.ml[578,19531+20]..[578,19531+28])
                                                                    "right" (lambda/matching.ml[578,19531+30]..[578,19531+35]) ghost
                                                                      expression (lambda/matching.ml[578,19531+30]..[578,19531+35])
Pexp_ident "right" (lambda/matching.ml[578,19531+30]..[578,19531+35])
                                                                  ]
                                                                  None
                                                                expression (lambda/matching.ml[579,19569+21]..[579,19569+35])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[579,19569+21]..[579,19569+31])
                                                                    Pexp_ident "filter_rec" (lambda/matching.ml[579,19569+21]..[579,19569+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[579,19569+32]..[579,19569+35])
Pexp_ident "rem" (lambda/matching.ml[579,19569+32]..[579,19569+35])
                                                                  ]
                                                              ]
                                                  ]
                                          ]
                                  ]
                            ]
                            expression (lambda/matching.ml[583,19636+4]..[583,19636+18])
                              Pexp_apply
                              expression (lambda/matching.ml[583,19636+4]..[583,19636+14])
                                Pexp_ident "filter_rec" (lambda/matching.ml[583,19636+4]..[583,19636+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[583,19636+15]..[583,19636+18])
                                    Pexp_ident "ctx" (lambda/matching.ml[583,19636+15]..[583,19636+18])
                              ]
              ]
            structure_item (lambda/matching.ml[585,19656+2]..[594,19997+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[585,19656+6]..[585,19656+20])
                    Ppat_var "select_columns" (lambda/matching.ml[585,19656+6]..[585,19656+20])
                  expression (lambda/matching.ml[585,19656+21]..[594,19997+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[585,19656+21]..[585,19656+24])
                      Ppat_var "pss" (lambda/matching.ml[585,19656+21]..[585,19656+24])
                    expression (lambda/matching.ml[585,19656+25]..[594,19997+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[585,19656+25]..[585,19656+28])
                        Ppat_var "ctx" (lambda/matching.ml[585,19656+25]..[585,19656+28])
                      expression (lambda/matching.ml[586,19687+4]..[594,19997+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[586,19687+8]..[586,19687+9])
                              Ppat_var "n" (lambda/matching.ml[586,19687+8]..[586,19687+9])
                            expression (lambda/matching.ml[586,19687+12]..[586,19687+21])
                              Pexp_apply
                              expression (lambda/matching.ml[586,19687+12]..[586,19687+17])
                                Pexp_ident "ncols" (lambda/matching.ml[586,19687+12]..[586,19687+17])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[586,19687+18]..[586,19687+21])
                                    Pexp_ident "pss" (lambda/matching.ml[586,19687+18]..[586,19687+21])
                              ]
                        ]
                        expression (lambda/matching.ml[587,19712+4]..[594,19997+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[587,19712+8]..[587,19712+15])
                                Ppat_var "lub_row" (lambda/matching.ml[587,19712+8]..[587,19712+15])
                              expression (lambda/matching.ml[587,19712+16]..[591,19871+56]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[587,19712+16]..[587,19712+18])
                                  Ppat_var "ps" (lambda/matching.ml[587,19712+16]..[587,19712+18])
                                expression (lambda/matching.ml[587,19712+19]..[591,19871+56]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[587,19712+19]..[587,19712+38])
                                    Ppat_record Closed
                                    [
                                      "Row.left" (lambda/matching.ml[587,19712+21]..[587,19712+29]) ghost
                                        pattern (lambda/matching.ml[587,19712+21]..[587,19712+29])
                                          Ppat_var "left" (lambda/matching.ml[587,19712+21]..[587,19712+29])
                                      "right" (lambda/matching.ml[587,19712+31]..[587,19712+36]) ghost
                                        pattern (lambda/matching.ml[587,19712+31]..[587,19712+36])
                                          Ppat_var "right" (lambda/matching.ml[587,19712+31]..[587,19712+36])
                                    ]
                                  expression (lambda/matching.ml[588,19753+6]..[591,19871+56])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[588,19753+10]..[588,19753+25])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[588,19753+10]..[588,19753+18])
                                              Ppat_var "transfer" (lambda/matching.ml[588,19753+10]..[588,19753+18])
                                            pattern (lambda/matching.ml[588,19753+20]..[588,19753+25])
                                              Ppat_var "right" (lambda/matching.ml[588,19753+20]..[588,19753+25])
                                          ]
                                        expression (lambda/matching.ml[588,19753+28]..[588,19753+48])
                                          Pexp_apply
                                          expression (lambda/matching.ml[588,19753+28]..[588,19753+40])
                                            Pexp_ident "rev_split_at" (lambda/matching.ml[588,19753+28]..[588,19753+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[588,19753+41]..[588,19753+42])
                                                Pexp_ident "n" (lambda/matching.ml[588,19753+41]..[588,19753+42])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[588,19753+43]..[588,19753+48])
                                                Pexp_ident "right" (lambda/matching.ml[588,19753+43]..[588,19753+48])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[589,19805+6]..[591,19871+56])
                                      Pexp_match
                                      expression (lambda/matching.ml[589,19805+12]..[589,19805+28])
                                        Pexp_apply
                                        expression (lambda/matching.ml[589,19805+12]..[589,19805+16])
                                          Pexp_ident "lubs" (lambda/matching.ml[589,19805+12]..[589,19805+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[589,19805+17]..[589,19805+25])
                                              Pexp_ident "transfer" (lambda/matching.ml[589,19805+17]..[589,19805+25])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[589,19805+26]..[589,19805+28])
                                              Pexp_ident "ps" (lambda/matching.ml[589,19805+26]..[589,19805+28])
                                        ]
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[590,19839+8]..[590,19839+23])
                                            Ppat_exception
                                            pattern (lambda/matching.ml[590,19839+18]..[590,19839+23])
                                              Ppat_construct "Empty" (lambda/matching.ml[590,19839+18]..[590,19839+23])
                                              None
                                          expression (lambda/matching.ml[590,19839+27]..[590,19839+31])
                                            Pexp_construct "None" (lambda/matching.ml[590,19839+27]..[590,19839+31])
                                            None
                                        <case>
                                          pattern (lambda/matching.ml[591,19871+8]..[591,19871+13])
                                            Ppat_var "inter" (lambda/matching.ml[591,19871+8]..[591,19871+13])
                                          expression (lambda/matching.ml[591,19871+17]..[591,19871+56])
                                            Pexp_construct "Some" (lambda/matching.ml[591,19871+17]..[591,19871+21])
                                            Some
                                              expression (lambda/matching.ml[591,19871+22]..[591,19871+56])
                                                Pexp_record
                                                [
                                                  "Row.left" (lambda/matching.ml[591,19871+24]..[591,19871+32])
                                                    expression (lambda/matching.ml[591,19871+35]..[591,19871+47])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[591,19871+41]..[591,19871+42])
                                                        Pexp_ident "@" (lambda/matching.ml[591,19871+41]..[591,19871+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[591,19871+35]..[591,19871+40])
                                                            Pexp_ident "inter" (lambda/matching.ml[591,19871+35]..[591,19871+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[591,19871+43]..[591,19871+47])
                                                            Pexp_ident "left" (lambda/matching.ml[591,19871+43]..[591,19871+47])
                                                      ]
                                                  "right" (lambda/matching.ml[591,19871+49]..[591,19871+54]) ghost
                                                    expression (lambda/matching.ml[591,19871+49]..[591,19871+54])
                                                      Pexp_ident "right" (lambda/matching.ml[591,19871+49]..[591,19871+54])
                                                ]
                                                None
                                      ]
                          ]
                          expression (lambda/matching.ml[593,19935+4]..[594,19997+44])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[593,19935+8]..[593,19935+20])
                                  Ppat_var "lub_with_ctx" (lambda/matching.ml[593,19935+8]..[593,19935+20])
                                expression (lambda/matching.ml[593,19935+21]..[593,19935+58]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[593,19935+21]..[593,19935+23])
                                    Ppat_var "ps" (lambda/matching.ml[593,19935+21]..[593,19935+23])
                                  expression (lambda/matching.ml[593,19935+26]..[593,19935+58])
                                    Pexp_apply
                                    expression (lambda/matching.ml[593,19935+26]..[593,19935+41])
                                      Pexp_ident "List.filter_map" (lambda/matching.ml[593,19935+26]..[593,19935+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[593,19935+42]..[593,19935+54])
                                          Pexp_apply
                                          expression (lambda/matching.ml[593,19935+43]..[593,19935+50])
                                            Pexp_ident "lub_row" (lambda/matching.ml[593,19935+43]..[593,19935+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[593,19935+51]..[593,19935+53])
                                                Pexp_ident "ps" (lambda/matching.ml[593,19935+51]..[593,19935+53])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[593,19935+55]..[593,19935+58])
                                          Pexp_ident "ctx" (lambda/matching.ml[593,19935+55]..[593,19935+58])
                                    ]
                            ]
                            expression (lambda/matching.ml[594,19997+4]..[594,19997+44])
                              Pexp_apply
                              expression (lambda/matching.ml[594,19997+4]..[594,19997+16])
                                Pexp_ident "List.flatten" (lambda/matching.ml[594,19997+4]..[594,19997+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[594,19997+17]..[594,19997+44])
                                    Pexp_apply
                                    expression (lambda/matching.ml[594,19997+18]..[594,19997+26])
                                      Pexp_ident "List.map" (lambda/matching.ml[594,19997+18]..[594,19997+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[594,19997+27]..[594,19997+39])
                                          Pexp_ident "lub_with_ctx" (lambda/matching.ml[594,19997+27]..[594,19997+39])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[594,19997+40]..[594,19997+43])
                                          Pexp_ident "pss" (lambda/matching.ml[594,19997+40]..[594,19997+43])
                                    ]
                              ]
              ]
            structure_item (lambda/matching.ml[596,20043+2]..[604,20304+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[596,20043+6]..[596,20043+9])
                    Ppat_var "lub" (lambda/matching.ml[596,20043+6]..[596,20043+9])
                  expression (lambda/matching.ml[596,20043+10]..[604,20304+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[596,20043+10]..[596,20043+11])
                      Ppat_var "p" (lambda/matching.ml[596,20043+10]..[596,20043+11])
                    expression (lambda/matching.ml[596,20043+12]..[604,20304+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[596,20043+12]..[596,20043+15])
                        Ppat_var "ctx" (lambda/matching.ml[596,20043+12]..[596,20043+15])
                      expression (lambda/matching.ml[597,20061+4]..[604,20304+9])
                        Pexp_apply
                        expression (lambda/matching.ml[597,20061+4]..[597,20061+19])
                          Pexp_ident "List.filter_map" (lambda/matching.ml[597,20061+4]..[597,20061+19])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[598,20081+6]..[603,20253+50])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[598,20081+11]..[598,20081+30])
                                Ppat_record Closed
                                [
                                  "Row.left" (lambda/matching.ml[598,20081+13]..[598,20081+21]) ghost
                                    pattern (lambda/matching.ml[598,20081+13]..[598,20081+21])
                                      Ppat_var "left" (lambda/matching.ml[598,20081+13]..[598,20081+21])
                                  "right" (lambda/matching.ml[598,20081+23]..[598,20081+28]) ghost
                                    pattern (lambda/matching.ml[598,20081+23]..[598,20081+28])
                                      Ppat_var "right" (lambda/matching.ml[598,20081+23]..[598,20081+28])
                                ]
                              expression (lambda/matching.ml[599,20115+8]..[603,20253+49])
                                Pexp_match
                                expression (lambda/matching.ml[599,20115+14]..[599,20115+19])
                                  Pexp_ident "right" (lambda/matching.ml[599,20115+14]..[599,20115+19])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[600,20140+10]..[600,20140+18])
                                      Ppat_construct "::" (lambda/matching.ml[600,20140+12]..[600,20140+14])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[600,20140+10]..[600,20140+18]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[600,20140+10]..[600,20140+11])
                                              Ppat_var "q" (lambda/matching.ml[600,20140+10]..[600,20140+11])
                                            pattern (lambda/matching.ml[600,20140+15]..[600,20140+18])
                                              Ppat_var "rem" (lambda/matching.ml[600,20140+15]..[600,20140+18])
                                          ]
                                    expression (lambda/matching.ml[600,20140+22]..[602,20241+11])
                                      Pexp_try
                                      expression (lambda/matching.ml[601,20164+16]..[601,20164+57])
                                        Pexp_construct "Some" (lambda/matching.ml[601,20164+16]..[601,20164+20])
                                        Some
                                          expression (lambda/matching.ml[601,20164+21]..[601,20164+57])
                                            Pexp_record
                                            [
                                              "Row.left" (lambda/matching.ml[601,20164+23]..[601,20164+31]) ghost
                                                expression (lambda/matching.ml[601,20164+23]..[601,20164+31])
                                                  Pexp_ident "left" (lambda/matching.ml[601,20164+23]..[601,20164+31])
                                              "right" (lambda/matching.ml[601,20164+33]..[601,20164+38])
                                                expression (lambda/matching.ml[601,20164+41]..[601,20164+55])
                                                  Pexp_construct "::" (lambda/matching.ml[601,20164+49]..[601,20164+51])
                                                  Some
                                                    expression (lambda/matching.ml[601,20164+41]..[601,20164+55]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[601,20164+41]..[601,20164+48])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[601,20164+41]..[601,20164+44])
                                                            Pexp_ident "lub" (lambda/matching.ml[601,20164+41]..[601,20164+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[601,20164+45]..[601,20164+46])
                                                                Pexp_ident "p" (lambda/matching.ml[601,20164+45]..[601,20164+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[601,20164+47]..[601,20164+48])
                                                                Pexp_ident "q" (lambda/matching.ml[601,20164+47]..[601,20164+48])
                                                          ]
                                                        expression (lambda/matching.ml[601,20164+52]..[601,20164+55])
                                                          Pexp_ident "rem" (lambda/matching.ml[601,20164+52]..[601,20164+55])
                                                      ]
                                            ]
                                            None
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[601,20164+63]..[601,20164+68])
                                            Ppat_construct "Empty" (lambda/matching.ml[601,20164+63]..[601,20164+68])
                                            None
                                          expression (lambda/matching.ml[601,20164+72]..[601,20164+76])
                                            Pexp_construct "None" (lambda/matching.ml[601,20164+72]..[601,20164+76])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[603,20253+10]..[603,20253+11])
                                      Ppat_any
                                    expression (lambda/matching.ml[603,20253+15]..[603,20253+49])
                                      Pexp_apply
                                      expression (lambda/matching.ml[603,20253+15]..[603,20253+26])
                                        Pexp_ident "fatal_error" (lambda/matching.ml[603,20253+15]..[603,20253+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[603,20253+27]..[603,20253+49])
                                            Pexp_constant PConst_string("Matching.Context.lub",(lambda/matching.ml[603,20253+28]..[603,20253+48]),None)
                                      ]
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[604,20304+6]..[604,20304+9])
                              Pexp_ident "ctx" (lambda/matching.ml[604,20304+6]..[604,20304+9])
                        ]
              ]
            structure_item (lambda/matching.ml[606,20315+2]..[609,20435+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[606,20315+6]..[606,20315+13])
                    Ppat_var "matches" (lambda/matching.ml[606,20315+6]..[606,20315+13])
                  expression (lambda/matching.ml[606,20315+14]..[609,20435+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[606,20315+14]..[606,20315+17])
                      Ppat_var "ctx" (lambda/matching.ml[606,20315+14]..[606,20315+17])
                    expression (lambda/matching.ml[606,20315+18]..[609,20435+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[606,20315+18]..[606,20315+21])
                        Ppat_var "pss" (lambda/matching.ml[606,20315+18]..[606,20315+21])
                      expression (lambda/matching.ml[607,20339+4]..[609,20435+9])
                        Pexp_apply
                        expression (lambda/matching.ml[607,20339+4]..[607,20339+15])
                          Pexp_ident "List.exists" (lambda/matching.ml[607,20339+4]..[607,20339+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[608,20355+6]..[608,20355+79])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[608,20355+11]..[608,20355+29])
                                Ppat_record Closed
                                [
                                  "Row.right" (lambda/matching.ml[608,20355+13]..[608,20355+22])
                                    pattern (lambda/matching.ml[608,20355+25]..[608,20355+27])
                                      Ppat_var "qs" (lambda/matching.ml[608,20355+25]..[608,20355+27])
                                ]
                              expression (lambda/matching.ml[608,20355+33]..[608,20355+78])
                                Pexp_apply
                                expression (lambda/matching.ml[608,20355+33]..[608,20355+44])
                                  Pexp_ident "List.exists" (lambda/matching.ml[608,20355+33]..[608,20355+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[608,20355+45]..[608,20355+74])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[608,20355+50]..[608,20355+52])
                                        Ppat_var "ps" (lambda/matching.ml[608,20355+50]..[608,20355+52])
                                      expression (lambda/matching.ml[608,20355+56]..[608,20355+73])
                                        Pexp_apply
                                        expression (lambda/matching.ml[608,20355+56]..[608,20355+67])
                                          Pexp_ident "may_compats" (lambda/matching.ml[608,20355+56]..[608,20355+67])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[608,20355+68]..[608,20355+70])
                                              Pexp_ident "qs" (lambda/matching.ml[608,20355+68]..[608,20355+70])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[608,20355+71]..[608,20355+73])
                                              Pexp_ident "ps" (lambda/matching.ml[608,20355+71]..[608,20355+73])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[608,20355+75]..[608,20355+78])
                                      Pexp_ident "pss" (lambda/matching.ml[608,20355+75]..[608,20355+78])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[609,20435+6]..[609,20435+9])
                              Pexp_ident "ctx" (lambda/matching.ml[609,20435+6]..[609,20435+9])
                        ]
              ]
            structure_item (lambda/matching.ml[611,20446+2]..[611,20446+49])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[611,20446+6]..[611,20446+11])
                    Ppat_var "union" (lambda/matching.ml[611,20446+6]..[611,20446+11])
                  expression (lambda/matching.ml[611,20446+12]..[611,20446+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[611,20446+12]..[611,20446+15])
                      Ppat_var "pss" (lambda/matching.ml[611,20446+12]..[611,20446+15])
                    expression (lambda/matching.ml[611,20446+16]..[611,20446+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[611,20446+16]..[611,20446+19])
                        Ppat_var "qss" (lambda/matching.ml[611,20446+16]..[611,20446+19])
                      expression (lambda/matching.ml[611,20446+22]..[611,20446+49])
                        Pexp_apply
                        expression (lambda/matching.ml[611,20446+22]..[611,20446+30])
                          Pexp_ident "get_mins" (lambda/matching.ml[611,20446+22]..[611,20446+30])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[611,20446+31]..[611,20446+37])
                              Pexp_ident "Row.le" (lambda/matching.ml[611,20446+31]..[611,20446+37])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[611,20446+38]..[611,20446+49])
                              Pexp_apply
                              expression (lambda/matching.ml[611,20446+43]..[611,20446+44])
                                Pexp_ident "@" (lambda/matching.ml[611,20446+43]..[611,20446+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[611,20446+39]..[611,20446+42])
                                    Pexp_ident "pss" (lambda/matching.ml[611,20446+39]..[611,20446+42])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[611,20446+45]..[611,20446+48])
                                    Pexp_ident "qss" (lambda/matching.ml[611,20446+45]..[611,20446+48])
                              ]
                        ]
              ]
          ]
        module_type (lambda/matching.ml[466,16456+17]..[494,16868+3])
          Pmty_signature
          [
            signature_item (lambda/matching.ml[467,16477+2]..[467,16477+8])
              Psig_type Rec
              [
                type_declaration "t" (lambda/matching.ml[467,16477+7]..[467,16477+8]) (lambda/matching.ml[467,16477+2]..[467,16477+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lambda/matching.ml[469,16487+2]..[469,16487+15])
              Psig_value
              value_description "empty" (lambda/matching.ml[469,16487+6]..[469,16487+11]) (lambda/matching.ml[469,16487+2]..[469,16487+15])
                core_type (lambda/matching.ml[469,16487+14]..[469,16487+15])
                  Ptyp_constr "t" (lambda/matching.ml[469,16487+14]..[469,16487+15])
                  []
                []
            signature_item (lambda/matching.ml[471,16504+2]..[471,16504+26])
              Psig_value
              value_description "is_empty" (lambda/matching.ml[471,16504+6]..[471,16504+14]) (lambda/matching.ml[471,16504+2]..[471,16504+26])
                core_type (lambda/matching.ml[471,16504+17]..[471,16504+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[471,16504+17]..[471,16504+18])
                    Ptyp_constr "t" (lambda/matching.ml[471,16504+17]..[471,16504+18])
                    []
                  core_type (lambda/matching.ml[471,16504+22]..[471,16504+26])
                    Ptyp_constr "bool" (lambda/matching.ml[471,16504+22]..[471,16504+26])
                    []
                []
            signature_item (lambda/matching.ml[473,16532+2]..[473,16532+22])
              Psig_value
              value_description "start" (lambda/matching.ml[473,16532+6]..[473,16532+11]) (lambda/matching.ml[473,16532+2]..[473,16532+22])
                core_type (lambda/matching.ml[473,16532+14]..[473,16532+22])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[473,16532+14]..[473,16532+17])
                    Ptyp_constr "int" (lambda/matching.ml[473,16532+14]..[473,16532+17])
                    []
                  core_type (lambda/matching.ml[473,16532+21]..[473,16532+22])
                    Ptyp_constr "t" (lambda/matching.ml[473,16532+21]..[473,16532+22])
                    []
                []
            signature_item (lambda/matching.ml[475,16556+2]..[475,16556+25])
              Psig_value
              value_description "eprintf" (lambda/matching.ml[475,16556+6]..[475,16556+13]) (lambda/matching.ml[475,16556+2]..[475,16556+25])
                core_type (lambda/matching.ml[475,16556+16]..[475,16556+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[475,16556+16]..[475,16556+17])
                    Ptyp_constr "t" (lambda/matching.ml[475,16556+16]..[475,16556+17])
                    []
                  core_type (lambda/matching.ml[475,16556+21]..[475,16556+25])
                    Ptyp_constr "unit" (lambda/matching.ml[475,16556+21]..[475,16556+25])
                    []
                []
            signature_item (lambda/matching.ml[477,16583+2]..[477,16583+44])
              Psig_value
              value_description "specialize" (lambda/matching.ml[477,16583+6]..[477,16583+16]) (lambda/matching.ml[477,16583+2]..[477,16583+44])
                core_type (lambda/matching.ml[477,16583+19]..[477,16583+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[477,16583+19]..[477,16583+34])
                    Ptyp_constr "Patterns.Head.t" (lambda/matching.ml[477,16583+19]..[477,16583+34])
                    []
                  core_type (lambda/matching.ml[477,16583+38]..[477,16583+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[477,16583+38]..[477,16583+39])
                      Ptyp_constr "t" (lambda/matching.ml[477,16583+38]..[477,16583+39])
                      []
                    core_type (lambda/matching.ml[477,16583+43]..[477,16583+44])
                      Ptyp_constr "t" (lambda/matching.ml[477,16583+43]..[477,16583+44])
                      []
                []
            signature_item (lambda/matching.ml[479,16629+2]..[479,16629+21])
              Psig_value
              value_description "lshift" (lambda/matching.ml[479,16629+6]..[479,16629+12]) (lambda/matching.ml[479,16629+2]..[479,16629+21])
                core_type (lambda/matching.ml[479,16629+15]..[479,16629+21])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[479,16629+15]..[479,16629+16])
                    Ptyp_constr "t" (lambda/matching.ml[479,16629+15]..[479,16629+16])
                    []
                  core_type (lambda/matching.ml[479,16629+20]..[479,16629+21])
                    Ptyp_constr "t" (lambda/matching.ml[479,16629+20]..[479,16629+21])
                    []
                []
            signature_item (lambda/matching.ml[481,16652+2]..[481,16652+21])
              Psig_value
              value_description "rshift" (lambda/matching.ml[481,16652+6]..[481,16652+12]) (lambda/matching.ml[481,16652+2]..[481,16652+21])
                core_type (lambda/matching.ml[481,16652+15]..[481,16652+21])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[481,16652+15]..[481,16652+16])
                    Ptyp_constr "t" (lambda/matching.ml[481,16652+15]..[481,16652+16])
                    []
                  core_type (lambda/matching.ml[481,16652+20]..[481,16652+21])
                    Ptyp_constr "t" (lambda/matching.ml[481,16652+20]..[481,16652+21])
                    []
                []
            signature_item (lambda/matching.ml[483,16675+2]..[483,16675+32])
              Psig_value
              value_description "rshift_num" (lambda/matching.ml[483,16675+6]..[483,16675+16]) (lambda/matching.ml[483,16675+2]..[483,16675+32])
                core_type (lambda/matching.ml[483,16675+19]..[483,16675+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[483,16675+19]..[483,16675+22])
                    Ptyp_constr "int" (lambda/matching.ml[483,16675+19]..[483,16675+22])
                    []
                  core_type (lambda/matching.ml[483,16675+26]..[483,16675+32])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[483,16675+26]..[483,16675+27])
                      Ptyp_constr "t" (lambda/matching.ml[483,16675+26]..[483,16675+27])
                      []
                    core_type (lambda/matching.ml[483,16675+31]..[483,16675+32])
                      Ptyp_constr "t" (lambda/matching.ml[483,16675+31]..[483,16675+32])
                      []
                []
            signature_item (lambda/matching.ml[485,16709+2]..[485,16709+29])
              Psig_value
              value_description "lub" (lambda/matching.ml[485,16709+6]..[485,16709+9]) (lambda/matching.ml[485,16709+2]..[485,16709+29])
                core_type (lambda/matching.ml[485,16709+12]..[485,16709+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[485,16709+12]..[485,16709+19])
                    Ptyp_constr "pattern" (lambda/matching.ml[485,16709+12]..[485,16709+19])
                    []
                  core_type (lambda/matching.ml[485,16709+23]..[485,16709+29])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[485,16709+23]..[485,16709+24])
                      Ptyp_constr "t" (lambda/matching.ml[485,16709+23]..[485,16709+24])
                      []
                    core_type (lambda/matching.ml[485,16709+28]..[485,16709+29])
                      Ptyp_constr "t" (lambda/matching.ml[485,16709+28]..[485,16709+29])
                      []
                []
            signature_item (lambda/matching.ml[487,16740+2]..[487,16740+35])
              Psig_value
              value_description "matches" (lambda/matching.ml[487,16740+6]..[487,16740+13]) (lambda/matching.ml[487,16740+2]..[487,16740+35])
                core_type (lambda/matching.ml[487,16740+16]..[487,16740+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[487,16740+16]..[487,16740+17])
                    Ptyp_constr "t" (lambda/matching.ml[487,16740+16]..[487,16740+17])
                    []
                  core_type (lambda/matching.ml[487,16740+21]..[487,16740+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[487,16740+21]..[487,16740+27])
                      Ptyp_constr "matrix" (lambda/matching.ml[487,16740+21]..[487,16740+27])
                      []
                    core_type (lambda/matching.ml[487,16740+31]..[487,16740+35])
                      Ptyp_constr "bool" (lambda/matching.ml[487,16740+31]..[487,16740+35])
                      []
                []
            signature_item (lambda/matching.ml[489,16777+2]..[489,16777+22])
              Psig_value
              value_description "combine" (lambda/matching.ml[489,16777+6]..[489,16777+13]) (lambda/matching.ml[489,16777+2]..[489,16777+22])
                core_type (lambda/matching.ml[489,16777+16]..[489,16777+22])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[489,16777+16]..[489,16777+17])
                    Ptyp_constr "t" (lambda/matching.ml[489,16777+16]..[489,16777+17])
                    []
                  core_type (lambda/matching.ml[489,16777+21]..[489,16777+22])
                    Ptyp_constr "t" (lambda/matching.ml[489,16777+21]..[489,16777+22])
                    []
                []
            signature_item (lambda/matching.ml[491,16801+2]..[491,16801+39])
              Psig_value
              value_description "select_columns" (lambda/matching.ml[491,16801+6]..[491,16801+20]) (lambda/matching.ml[491,16801+2]..[491,16801+39])
                core_type (lambda/matching.ml[491,16801+23]..[491,16801+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[491,16801+23]..[491,16801+29])
                    Ptyp_constr "matrix" (lambda/matching.ml[491,16801+23]..[491,16801+29])
                    []
                  core_type (lambda/matching.ml[491,16801+33]..[491,16801+39])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[491,16801+33]..[491,16801+34])
                      Ptyp_constr "t" (lambda/matching.ml[491,16801+33]..[491,16801+34])
                      []
                    core_type (lambda/matching.ml[491,16801+38]..[491,16801+39])
                      Ptyp_constr "t" (lambda/matching.ml[491,16801+38]..[491,16801+39])
                      []
                []
            signature_item (lambda/matching.ml[493,16842+2]..[493,16842+25])
              Psig_value
              value_description "union" (lambda/matching.ml[493,16842+6]..[493,16842+11]) (lambda/matching.ml[493,16842+2]..[493,16842+25])
                core_type (lambda/matching.ml[493,16842+14]..[493,16842+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[493,16842+14]..[493,16842+15])
                    Ptyp_constr "t" (lambda/matching.ml[493,16842+14]..[493,16842+15])
                    []
                  core_type (lambda/matching.ml[493,16842+19]..[493,16842+25])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[493,16842+19]..[493,16842+20])
                      Ptyp_constr "t" (lambda/matching.ml[493,16842+19]..[493,16842+20])
                      []
                    core_type (lambda/matching.ml[493,16842+24]..[493,16842+25])
                      Ptyp_constr "t" (lambda/matching.ml[493,16842+24]..[493,16842+25])
                      []
                []
          ]
  structure_item (lambda/matching.ml[614,20501+0]..[626,20996+48])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[614,20501+8]..[614,20501+24])
          Ppat_var "flatten_pat_line" (lambda/matching.ml[614,20501+8]..[614,20501+24])
        expression (lambda/matching.ml[614,20501+25]..[626,20996+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[614,20501+25]..[614,20501+29])
            Ppat_var "size" (lambda/matching.ml[614,20501+25]..[614,20501+29])
          expression (lambda/matching.ml[614,20501+30]..[626,20996+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[614,20501+30]..[614,20501+31])
              Ppat_var "p" (lambda/matching.ml[614,20501+30]..[614,20501+31])
            expression (lambda/matching.ml[614,20501+32]..[626,20996+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[614,20501+32]..[614,20501+33])
                Ppat_var "k" (lambda/matching.ml[614,20501+32]..[614,20501+33])
              expression (lambda/matching.ml[615,20537+2]..[626,20996+48])
                Pexp_match
                expression (lambda/matching.ml[615,20537+8]..[615,20537+18])
                  Pexp_field
                  expression (lambda/matching.ml[615,20537+8]..[615,20537+9])
                    Pexp_ident "p" (lambda/matching.ml[615,20537+8]..[615,20537+9])
                  "pat_desc" (lambda/matching.ml[615,20537+10]..[615,20537+18])
                [
                  <case>
                    pattern (lambda/matching.ml[616,20561+4]..[616,20561+25])
                      Ppat_or
                      pattern (lambda/matching.ml[616,20561+4]..[616,20561+12])
                        Ppat_construct "Tpat_any" (lambda/matching.ml[616,20561+4]..[616,20561+12])
                        None
                      pattern (lambda/matching.ml[616,20561+15]..[616,20561+25])
                        Ppat_construct "Tpat_var" (lambda/matching.ml[616,20561+15]..[616,20561+23])
                        Some
                          []
                          pattern (lambda/matching.ml[616,20561+24]..[616,20561+25])
                            Ppat_any
                    expression (lambda/matching.ml[616,20561+29]..[616,20561+54])
                      Pexp_construct "::" (lambda/matching.ml[616,20561+50]..[616,20561+52])
                      Some
                        expression (lambda/matching.ml[616,20561+29]..[616,20561+54]) ghost
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[616,20561+29]..[616,20561+49])
                              Pexp_apply
                              expression (lambda/matching.ml[616,20561+29]..[616,20561+44])
                                Pexp_ident "Patterns.omegas" (lambda/matching.ml[616,20561+29]..[616,20561+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[616,20561+45]..[616,20561+49])
                                    Pexp_ident "size" (lambda/matching.ml[616,20561+45]..[616,20561+49])
                              ]
                            expression (lambda/matching.ml[616,20561+53]..[616,20561+54])
                              Pexp_ident "k" (lambda/matching.ml[616,20561+53]..[616,20561+54])
                          ]
                  <case>
                    pattern (lambda/matching.ml[617,20616+4]..[617,20616+19])
                      Ppat_construct "Tpat_tuple" (lambda/matching.ml[617,20616+4]..[617,20616+14])
                      Some
                        []
                        pattern (lambda/matching.ml[617,20616+15]..[617,20616+19])
                          Ppat_var "args" (lambda/matching.ml[617,20616+15]..[617,20616+19])
                    expression (lambda/matching.ml[617,20616+23]..[617,20616+32])
                      Pexp_construct "::" (lambda/matching.ml[617,20616+28]..[617,20616+30])
                      Some
                        expression (lambda/matching.ml[617,20616+23]..[617,20616+32]) ghost
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[617,20616+23]..[617,20616+27])
                              Pexp_ident "args" (lambda/matching.ml[617,20616+23]..[617,20616+27])
                            expression (lambda/matching.ml[617,20616+31]..[617,20616+32])
                              Pexp_ident "k" (lambda/matching.ml[617,20616+31]..[617,20616+32])
                          ]
                  <case>
                    pattern (lambda/matching.ml[618,20649+4]..[618,20649+23])
                      Ppat_construct "Tpat_or" (lambda/matching.ml[618,20649+4]..[618,20649+11])
                      Some
                        []
                        pattern (lambda/matching.ml[618,20649+12]..[618,20649+23])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[618,20649+13]..[618,20649+15])
                              Ppat_var "p1" (lambda/matching.ml[618,20649+13]..[618,20649+15])
                            pattern (lambda/matching.ml[618,20649+17]..[618,20649+19])
                              Ppat_var "p2" (lambda/matching.ml[618,20649+17]..[618,20649+19])
                            pattern (lambda/matching.ml[618,20649+21]..[618,20649+22])
                              Ppat_any
                          ]
                    expression (lambda/matching.ml[619,20676+6]..[619,20676+59])
                      Pexp_apply
                      expression (lambda/matching.ml[619,20676+6]..[619,20676+22])
                        Pexp_ident "flatten_pat_line" (lambda/matching.ml[619,20676+6]..[619,20676+22])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[619,20676+23]..[619,20676+27])
                            Pexp_ident "size" (lambda/matching.ml[619,20676+23]..[619,20676+27])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[619,20676+28]..[619,20676+30])
                            Pexp_ident "p1" (lambda/matching.ml[619,20676+28]..[619,20676+30])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[619,20676+31]..[619,20676+59])
                            Pexp_apply
                            expression (lambda/matching.ml[619,20676+32]..[619,20676+48])
                              Pexp_ident "flatten_pat_line" (lambda/matching.ml[619,20676+32]..[619,20676+48])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[619,20676+49]..[619,20676+53])
                                  Pexp_ident "size" (lambda/matching.ml[619,20676+49]..[619,20676+53])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[619,20676+54]..[619,20676+56])
                                  Pexp_ident "p2" (lambda/matching.ml[619,20676+54]..[619,20676+56])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[619,20676+57]..[619,20676+58])
                                  Pexp_ident "k" (lambda/matching.ml[619,20676+57]..[619,20676+58])
                            ]
                      ]
                  <case>
                    pattern (lambda/matching.ml[620,20736+4]..[620,20736+24])
                      Ppat_construct "Tpat_alias" (lambda/matching.ml[620,20736+4]..[620,20736+14])
                      Some
                        []
                        pattern (lambda/matching.ml[620,20736+15]..[620,20736+24])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[620,20736+16]..[620,20736+17])
                              Ppat_var "p" (lambda/matching.ml[620,20736+16]..[620,20736+17])
                            pattern (lambda/matching.ml[620,20736+19]..[620,20736+20])
                              Ppat_any
                            pattern (lambda/matching.ml[620,20736+22]..[620,20736+23])
                              Ppat_any
                          ]
                    expression (lambda/matching.ml[625,20964+6]..[625,20964+31])
                      Pexp_apply
                      expression (lambda/matching.ml[625,20964+6]..[625,20964+22])
                        Pexp_ident "flatten_pat_line" (lambda/matching.ml[625,20964+6]..[625,20964+22])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[625,20964+23]..[625,20964+27])
                            Pexp_ident "size" (lambda/matching.ml[625,20964+23]..[625,20964+27])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[625,20964+28]..[625,20964+29])
                            Pexp_ident "p" (lambda/matching.ml[625,20964+28]..[625,20964+29])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[625,20964+30]..[625,20964+31])
                            Pexp_ident "k" (lambda/matching.ml[625,20964+30]..[625,20964+31])
                      ]
                  <case>
                    pattern (lambda/matching.ml[626,20996+4]..[626,20996+5])
                      Ppat_any
                    expression (lambda/matching.ml[626,20996+9]..[626,20996+48])
                      Pexp_apply
                      expression (lambda/matching.ml[626,20996+9]..[626,20996+20])
                        Pexp_ident "fatal_error" (lambda/matching.ml[626,20996+9]..[626,20996+20])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[626,20996+21]..[626,20996+48])
                            Pexp_constant PConst_string("Matching.flatten_pat_line",(lambda/matching.ml[626,20996+22]..[626,20996+47]),None)
                      ]
                ]
    ]
  structure_item (lambda/matching.ml[628,21046+0]..[634,21226+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[628,21046+4]..[628,21046+18])
          Ppat_var "flatten_matrix" (lambda/matching.ml[628,21046+4]..[628,21046+18])
        expression (lambda/matching.ml[628,21046+19]..[634,21226+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[628,21046+19]..[628,21046+23])
            Ppat_var "size" (lambda/matching.ml[628,21046+19]..[628,21046+23])
          expression (lambda/matching.ml[628,21046+24]..[634,21226+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[628,21046+24]..[628,21046+27])
              Ppat_var "pss" (lambda/matching.ml[628,21046+24]..[628,21046+27])
            expression (lambda/matching.ml[629,21076+2]..[634,21226+10])
              Pexp_apply
              expression (lambda/matching.ml[629,21076+2]..[629,21076+17])
                Pexp_ident "List.fold_right" (lambda/matching.ml[629,21076+2]..[629,21076+17])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[630,21094+4]..[633,21174+51])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[630,21094+9]..[630,21094+11])
                      Ppat_var "ps" (lambda/matching.ml[630,21094+9]..[630,21094+11])
                    expression (lambda/matching.ml[630,21094+12]..[633,21174+50]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[630,21094+12]..[630,21094+13])
                        Ppat_var "r" (lambda/matching.ml[630,21094+12]..[630,21094+13])
                      expression (lambda/matching.ml[631,21111+6]..[633,21174+50])
                        Pexp_match
                        expression (lambda/matching.ml[631,21111+12]..[631,21111+14])
                          Pexp_ident "ps" (lambda/matching.ml[631,21111+12]..[631,21111+14])
                        [
                          <case>
                            pattern (lambda/matching.ml[632,21131+8]..[632,21131+13])
                              Ppat_construct "::" (lambda/matching.ml[632,21131+10]..[632,21131+13]) ghost
                              Some
                                []
                                pattern (lambda/matching.ml[632,21131+10]..[632,21131+13]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[632,21131+10]..[632,21131+11])
                                      Ppat_var "p" (lambda/matching.ml[632,21131+10]..[632,21131+11])
                                    pattern (lambda/matching.ml[632,21131+12]..[632,21131+13]) ghost
                                      Ppat_construct "[]" (lambda/matching.ml[632,21131+12]..[632,21131+13]) ghost
                                      None
                                  ]
                            expression (lambda/matching.ml[632,21131+17]..[632,21131+42])
                              Pexp_apply
                              expression (lambda/matching.ml[632,21131+17]..[632,21131+33])
                                Pexp_ident "flatten_pat_line" (lambda/matching.ml[632,21131+17]..[632,21131+33])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[632,21131+34]..[632,21131+38])
                                    Pexp_ident "size" (lambda/matching.ml[632,21131+34]..[632,21131+38])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[632,21131+39]..[632,21131+40])
                                    Pexp_ident "p" (lambda/matching.ml[632,21131+39]..[632,21131+40])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[632,21131+41]..[632,21131+42])
                                    Pexp_ident "r" (lambda/matching.ml[632,21131+41]..[632,21131+42])
                              ]
                          <case>
                            pattern (lambda/matching.ml[633,21174+8]..[633,21174+9])
                              Ppat_any
                            expression (lambda/matching.ml[633,21174+13]..[633,21174+50])
                              Pexp_apply
                              expression (lambda/matching.ml[633,21174+13]..[633,21174+24])
                                Pexp_ident "fatal_error" (lambda/matching.ml[633,21174+13]..[633,21174+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[633,21174+25]..[633,21174+50])
                                    Pexp_constant PConst_string("Matching.flatten_matrix",(lambda/matching.ml[633,21174+26]..[633,21174+49]),None)
                              ]
                        ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[634,21226+4]..[634,21226+7])
                    Pexp_ident "pss" (lambda/matching.ml[634,21226+4]..[634,21226+7])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[634,21226+8]..[634,21226+10])
                    Pexp_construct "[]" (lambda/matching.ml[634,21226+8]..[634,21226+10])
                    None
              ]
    ]
  structure_item (lambda/matching.ml[654,22235+0]..[822,27656+3])
    Pstr_module
    "Default_environment" (lambda/matching.ml[654,22235+7]..[654,22235+26])
      attribute "ocaml.doc"
        [
          structure_item (lambda/matching.ml[636,21238+0]..[653,22232+2])
            Pstr_eval
            expression (lambda/matching.ml[636,21238+0]..[653,22232+2])
              Pexp_constant PConst_string(" A default environment (referred to as \"reachable trap handlers\" in the\n    paper), is an ordered list of [matrix * raise_num] pairs, and is used to\n    decide where to jump next if none of the rows in a given matrix match the\n    input.\n\n    In such situations, one thing you can do is to jump to the first (leftmost)\n    [raise_num] in that list (by doing a raise to the static-cach handler number\n    [raise_num]); and you can assume that if the associated pm doesn't match\n    either, it will do the same thing, etc.\n    This is what [mk_failaction_neg] (and its callers) does.\n\n    A more sophisticated alternative is to use what you know about the input\n    (what you might already have matched) and the current pm (what you know you\n    can't match) to directly jump to a pm that might match it instead of the\n    next one; that is why we don't just keep [raise_num]s but also the\n    associated matrices.\n    [mk_failaction_pos] does (a slightly more sophisticated version of) this.\n",(lambda/matching.ml[636,21238+0]..[653,22232+2]),None)
        ]
      module_expr (lambda/matching.ml[654,22235+27]..[822,27656+3])
        Pmod_constraint
        module_expr (lambda/matching.ml[674,22570+6]..[822,27656+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[675,22583+2]..[675,22583+30])
              Pstr_type Rec
              [
                type_declaration "t" (lambda/matching.ml[675,22583+7]..[675,22583+8]) (lambda/matching.ml[675,22583+2]..[675,22583+30])
                  attribute "ocaml.doc"
                    [
                      structure_item (lambda/matching.ml[676,22614+2]..[678,22770+33])
                        Pstr_eval
                        expression (lambda/matching.ml[676,22614+2]..[678,22770+33])
                          Pexp_constant PConst_string(" All matrices in the list should have the same arity -- their rows should\n      have the same number of columns -- as it should match the arity of the\n      current scrutiny vector. ",(lambda/matching.ml[676,22614+2]..[678,22770+33]),None)
                    ]
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[675,22583+11]..[675,22583+30])
                        Ptyp_constr "list" (lambda/matching.ml[675,22583+26]..[675,22583+30])
                        [
                          core_type (lambda/matching.ml[675,22583+12]..[675,22583+24])
                            Ptyp_tuple
                            [
                              core_type (lambda/matching.ml[675,22583+12]..[675,22583+18])
                                Ptyp_constr "matrix" (lambda/matching.ml[675,22583+12]..[675,22583+18])
                                []
                              core_type (lambda/matching.ml[675,22583+21]..[675,22583+24])
                                Ptyp_constr "int" (lambda/matching.ml[675,22583+21]..[675,22583+24])
                                []
                            ]
                        ]
              ]
            structure_item (lambda/matching.ml[680,22805+2]..[680,22805+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[680,22805+6]..[680,22805+11])
                    Ppat_var "empty" (lambda/matching.ml[680,22805+6]..[680,22805+11])
                  expression (lambda/matching.ml[680,22805+14]..[680,22805+16])
                    Pexp_construct "[]" (lambda/matching.ml[680,22805+14]..[680,22805+16])
                    None
              ]
            structure_item (lambda/matching.ml[682,22823+2]..[684,22866+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[682,22823+6]..[682,22823+14])
                    Ppat_var "is_empty" (lambda/matching.ml[682,22823+6]..[682,22823+14])
                  expression (lambda/matching.ml[682,22823+17]..[684,22866+16])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[683,22849+6]..[683,22849+8])
                          Ppat_construct "[]" (lambda/matching.ml[683,22849+6]..[683,22849+8])
                          None
                        expression (lambda/matching.ml[683,22849+12]..[683,22849+16])
                          Pexp_construct "true" (lambda/matching.ml[683,22849+12]..[683,22849+16])
                          None
                      <case>
                        pattern (lambda/matching.ml[684,22866+6]..[684,22866+7])
                          Ppat_any
                        expression (lambda/matching.ml[684,22866+11]..[684,22866+16])
                          Pexp_construct "false" (lambda/matching.ml[684,22866+11]..[684,22866+16])
                          None
                    ]
              ]
            structure_item (lambda/matching.ml[686,22884+2]..[689,22964+41])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[686,22884+6]..[686,22884+10])
                    Ppat_var "cons" (lambda/matching.ml[686,22884+6]..[686,22884+10])
                  expression (lambda/matching.ml[686,22884+11]..[689,22964+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[686,22884+11]..[686,22884+17])
                      Ppat_var "matrix" (lambda/matching.ml[686,22884+11]..[686,22884+17])
                    expression (lambda/matching.ml[686,22884+18]..[689,22964+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[686,22884+18]..[686,22884+27])
                        Ppat_var "raise_num" (lambda/matching.ml[686,22884+18]..[686,22884+27])
                      expression (lambda/matching.ml[686,22884+28]..[689,22964+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[686,22884+28]..[686,22884+35])
                          Ppat_var "default" (lambda/matching.ml[686,22884+28]..[686,22884+35])
                        expression (lambda/matching.ml[687,22922+4]..[689,22964+41])
                          Pexp_match
                          expression (lambda/matching.ml[687,22922+10]..[687,22922+16])
                            Pexp_ident "matrix" (lambda/matching.ml[687,22922+10]..[687,22922+16])
                          [
                            <case>
                              pattern (lambda/matching.ml[688,22944+6]..[688,22944+8])
                                Ppat_construct "[]" (lambda/matching.ml[688,22944+6]..[688,22944+8])
                                None
                              expression (lambda/matching.ml[688,22944+12]..[688,22944+19])
                                Pexp_ident "default" (lambda/matching.ml[688,22944+12]..[688,22944+19])
                            <case>
                              pattern (lambda/matching.ml[689,22964+6]..[689,22964+7])
                                Ppat_any
                              expression (lambda/matching.ml[689,22964+11]..[689,22964+41])
                                Pexp_construct "::" (lambda/matching.ml[689,22964+31]..[689,22964+33])
                                Some
                                  expression (lambda/matching.ml[689,22964+11]..[689,22964+41]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[689,22964+11]..[689,22964+30])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[689,22964+12]..[689,22964+18])
                                            Pexp_ident "matrix" (lambda/matching.ml[689,22964+12]..[689,22964+18])
                                          expression (lambda/matching.ml[689,22964+20]..[689,22964+29])
                                            Pexp_ident "raise_num" (lambda/matching.ml[689,22964+20]..[689,22964+29])
                                        ]
                                      expression (lambda/matching.ml[689,22964+34]..[689,22964+41])
                                        Pexp_ident "default" (lambda/matching.ml[689,22964+34]..[689,22964+41])
                                    ]
                          ]
              ]
            structure_item (lambda/matching.ml[691,23007+2]..[773,26274+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[691,23007+6]..[691,23007+23])
                    Ppat_var "specialize_matrix" (lambda/matching.ml[691,23007+6]..[691,23007+23])
                  expression (lambda/matching.ml[691,23007+24]..[773,26274+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[691,23007+24]..[691,23007+29])
                      Ppat_var "arity" (lambda/matching.ml[691,23007+24]..[691,23007+29])
                    expression (lambda/matching.ml[691,23007+30]..[773,26274+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[691,23007+30]..[691,23007+37])
                        Ppat_var "matcher" (lambda/matching.ml[691,23007+30]..[691,23007+37])
                      expression (lambda/matching.ml[691,23007+38]..[773,26274+18]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[691,23007+38]..[691,23007+41])
                          Ppat_var "pss" (lambda/matching.ml[691,23007+38]..[691,23007+41])
                        expression (lambda/matching.ml[692,23051+4]..[773,26274+18])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[692,23051+12]..[692,23051+22])
                                Ppat_var "filter_rec" (lambda/matching.ml[692,23051+12]..[692,23051+22])
                              expression (lambda/matching.ml[692,23051+25]..[708,23729+9])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/matching.ml[693,23085+8]..[693,23085+10])
                                      Ppat_construct "[]" (lambda/matching.ml[693,23085+8]..[693,23085+10])
                                      None
                                    expression (lambda/matching.ml[693,23085+14]..[693,23085+16])
                                      Pexp_construct "[]" (lambda/matching.ml[693,23085+14]..[693,23085+16])
                                      None
                                  <case>
                                    pattern (lambda/matching.ml[694,23102+8]..[694,23102+22])
                                      Ppat_construct "::" (lambda/matching.ml[694,23102+16]..[694,23102+18])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[694,23102+8]..[694,23102+22]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[694,23102+8]..[694,23102+15])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[694,23102+9]..[694,23102+10])
                                                  Ppat_var "p" (lambda/matching.ml[694,23102+9]..[694,23102+10])
                                                pattern (lambda/matching.ml[694,23102+12]..[694,23102+14])
                                                  Ppat_var "ps" (lambda/matching.ml[694,23102+12]..[694,23102+14])
                                              ]
                                            pattern (lambda/matching.ml[694,23102+19]..[694,23102+22])
                                              Ppat_var "rem" (lambda/matching.ml[694,23102+19]..[694,23102+22])
                                          ]
                                    expression (lambda/matching.ml[694,23102+26]..[708,23729+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[695,23130+14]..[695,23130+15])
                                            Ppat_var "p" (lambda/matching.ml[695,23130+14]..[695,23130+15])
                                          expression (lambda/matching.ml[695,23130+18]..[695,23130+32])
                                            Pexp_apply
                                            expression (lambda/matching.ml[695,23130+18]..[695,23130+30])
                                              Pexp_ident "General.view" (lambda/matching.ml[695,23130+18]..[695,23130+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[695,23130+31]..[695,23130+32])
                                                  Pexp_ident "p" (lambda/matching.ml[695,23130+31]..[695,23130+32])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[696,23166+10]..[707,23715+13])
                                        Pexp_match
                                        expression (lambda/matching.ml[696,23166+16]..[696,23166+26])
                                          Pexp_field
                                          expression (lambda/matching.ml[696,23166+16]..[696,23166+17])
                                            Pexp_ident "p" (lambda/matching.ml[696,23166+16]..[696,23166+17])
                                          "pat_desc" (lambda/matching.ml[696,23166+18]..[696,23166+26])
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[697,23198+12]..[697,23198+28])
                                              Ppat_variant "Alias"
                                              Some
                                                pattern (lambda/matching.ml[697,23198+19]..[697,23198+28])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[697,23198+20]..[697,23198+21])
                                                      Ppat_var "p" (lambda/matching.ml[697,23198+20]..[697,23198+21])
                                                    pattern (lambda/matching.ml[697,23198+23]..[697,23198+24])
                                                      Ppat_any
                                                    pattern (lambda/matching.ml[697,23198+26]..[697,23198+27])
                                                      Ppat_any
                                                  ]
                                            expression (lambda/matching.ml[697,23198+32]..[697,23198+59])
                                              Pexp_apply
                                              expression (lambda/matching.ml[697,23198+32]..[697,23198+42])
                                                Pexp_ident "filter_rec" (lambda/matching.ml[697,23198+32]..[697,23198+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[697,23198+43]..[697,23198+59])
                                                    Pexp_construct "::" (lambda/matching.ml[697,23198+52]..[697,23198+54])
                                                    Some
                                                      expression (lambda/matching.ml[697,23198+44]..[697,23198+58]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[697,23198+44]..[697,23198+51])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[697,23198+45]..[697,23198+46])
                                                                Pexp_ident "p" (lambda/matching.ml[697,23198+45]..[697,23198+46])
                                                              expression (lambda/matching.ml[697,23198+48]..[697,23198+50])
                                                                Pexp_ident "ps" (lambda/matching.ml[697,23198+48]..[697,23198+50])
                                                            ]
                                                          expression (lambda/matching.ml[697,23198+55]..[697,23198+58])
                                                            Pexp_ident "rem" (lambda/matching.ml[697,23198+55]..[697,23198+58])
                                                        ]
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[698,23258+12]..[698,23258+18])
                                              Ppat_variant "Var"
                                              Some
                                                pattern (lambda/matching.ml[698,23258+17]..[698,23258+18])
                                                  Ppat_any
                                            expression (lambda/matching.ml[698,23258+22]..[698,23258+62])
                                              Pexp_apply
                                              expression (lambda/matching.ml[698,23258+22]..[698,23258+32])
                                                Pexp_ident "filter_rec" (lambda/matching.ml[698,23258+22]..[698,23258+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[698,23258+33]..[698,23258+62])
                                                    Pexp_construct "::" (lambda/matching.ml[698,23258+55]..[698,23258+57])
                                                    Some
                                                      expression (lambda/matching.ml[698,23258+34]..[698,23258+61]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[698,23258+34]..[698,23258+54])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[698,23258+35]..[698,23258+49])
                                                                Pexp_ident "Patterns.omega" (lambda/matching.ml[698,23258+35]..[698,23258+49])
                                                              expression (lambda/matching.ml[698,23258+51]..[698,23258+53])
                                                                Pexp_ident "ps" (lambda/matching.ml[698,23258+51]..[698,23258+53])
                                                            ]
                                                          expression (lambda/matching.ml[698,23258+58]..[698,23258+61])
                                                            Pexp_ident "rem" (lambda/matching.ml[698,23258+58]..[698,23258+61])
                                                        ]
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[699,23321+12]..[699,23321+27])
                                              Ppat_variant "Or"
                                              Some
                                                pattern (lambda/matching.ml[699,23321+16]..[699,23321+27])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[699,23321+17]..[699,23321+19])
                                                      Ppat_var "p1" (lambda/matching.ml[699,23321+17]..[699,23321+19])
                                                    pattern (lambda/matching.ml[699,23321+21]..[699,23321+23])
                                                      Ppat_var "p2" (lambda/matching.ml[699,23321+21]..[699,23321+23])
                                                    pattern (lambda/matching.ml[699,23321+25]..[699,23321+26])
                                                      Ppat_any
                                                  ]
                                            expression (lambda/matching.ml[699,23321+31]..[699,23321+57])
                                              Pexp_apply
                                              expression (lambda/matching.ml[699,23321+31]..[699,23321+44])
                                                Pexp_ident "filter_rec_or" (lambda/matching.ml[699,23321+31]..[699,23321+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[699,23321+45]..[699,23321+47])
                                                    Pexp_ident "p1" (lambda/matching.ml[699,23321+45]..[699,23321+47])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[699,23321+48]..[699,23321+50])
                                                    Pexp_ident "p2" (lambda/matching.ml[699,23321+48]..[699,23321+50])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[699,23321+51]..[699,23321+53])
                                                    Pexp_ident "ps" (lambda/matching.ml[699,23321+51]..[699,23321+53])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[699,23321+54]..[699,23321+57])
                                                    Pexp_ident "rem" (lambda/matching.ml[699,23321+54]..[699,23321+57])
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[700,23379+12]..[700,23379+32])
                                              Ppat_alias "view" (lambda/matching.ml[700,23379+28]..[700,23379+32])
                                              pattern (lambda/matching.ml[700,23379+12]..[700,23379+24])
                                                Ppat_type
                                                "Simple.view" (lambda/matching.ml[700,23379+13]..[700,23379+24])
                                            expression (lambda/matching.ml[700,23379+36]..[707,23715+13])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/matching.ml[701,23417+18]..[701,23417+19])
                                                    Ppat_var "p" (lambda/matching.ml[701,23417+18]..[701,23417+19])
                                                  expression (lambda/matching.ml[701,23417+22]..[701,23417+48])
                                                    Pexp_record
                                                    [
                                                      "pat_desc" (lambda/matching.ml[701,23417+31]..[701,23417+39])
                                                        expression (lambda/matching.ml[701,23417+42]..[701,23417+46])
                                                          Pexp_ident "view" (lambda/matching.ml[701,23417+42]..[701,23417+46])
                                                    ]
                                                    Some
                                                      expression (lambda/matching.ml[701,23417+24]..[701,23417+25])
                                                        Pexp_ident "p" (lambda/matching.ml[701,23417+24]..[701,23417+25])
                                              ]
                                              expression (lambda/matching.ml[702,23469+14]..[706,23667+47])
                                                Pexp_match
                                                expression (lambda/matching.ml[702,23469+20]..[702,23469+32])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[702,23469+20]..[702,23469+27])
                                                    Pexp_ident "matcher" (lambda/matching.ml[702,23469+20]..[702,23469+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[702,23469+28]..[702,23469+29])
                                                        Pexp_ident "p" (lambda/matching.ml[702,23469+28]..[702,23469+29])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[702,23469+30]..[702,23469+32])
                                                        Pexp_ident "ps" (lambda/matching.ml[702,23469+30]..[702,23469+32])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lambda/matching.ml[703,23507+16]..[703,23507+33])
                                                      Ppat_exception
                                                      pattern (lambda/matching.ml[703,23507+26]..[703,23507+33])
                                                        Ppat_construct "NoMatch" (lambda/matching.ml[703,23507+26]..[703,23507+33])
                                                        None
                                                    expression (lambda/matching.ml[703,23507+37]..[703,23507+51])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[703,23507+37]..[703,23507+47])
                                                        Pexp_ident "filter_rec" (lambda/matching.ml[703,23507+37]..[703,23507+47])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[703,23507+48]..[703,23507+51])
                                                            Pexp_ident "rem" (lambda/matching.ml[703,23507+48]..[703,23507+51])
                                                      ]
                                                  <case>
                                                    pattern (lambda/matching.ml[704,23559+16]..[704,23559+27])
                                                      Ppat_var "specialized" (lambda/matching.ml[704,23559+16]..[704,23559+27])
                                                    expression (lambda/matching.ml[705,23590+18]..[706,23667+47])
                                                      Pexp_sequence
                                                      expression (lambda/matching.ml[705,23590+18]..[705,23590+75])
                                                        Pexp_assert
                                                        expression (lambda/matching.ml[705,23590+25]..[705,23590+75])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[705,23590+50]..[705,23590+51])
                                                            Pexp_ident "=" (lambda/matching.ml[705,23590+50]..[705,23590+51])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[705,23590+26]..[705,23590+49])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[705,23590+26]..[705,23590+37])
                                                                  Pexp_ident "List.length" (lambda/matching.ml[705,23590+26]..[705,23590+37])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[705,23590+38]..[705,23590+49])
                                                                      Pexp_ident "specialized" (lambda/matching.ml[705,23590+38]..[705,23590+49])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[705,23590+52]..[705,23590+74])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[705,23590+67]..[705,23590+68])
                                                                  Pexp_ident "+" (lambda/matching.ml[705,23590+67]..[705,23590+68])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[705,23590+52]..[705,23590+66])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[705,23590+52]..[705,23590+63])
Pexp_ident "List.length" (lambda/matching.ml[705,23590+52]..[705,23590+63])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[705,23590+64]..[705,23590+66])
    Pexp_ident "ps" (lambda/matching.ml[705,23590+64]..[705,23590+66])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[705,23590+69]..[705,23590+74])
                                                                      Pexp_ident "arity" (lambda/matching.ml[705,23590+69]..[705,23590+74])
                                                                ]
                                                          ]
                                                      expression (lambda/matching.ml[706,23667+18]..[706,23667+47])
                                                        Pexp_construct "::" (lambda/matching.ml[706,23667+30]..[706,23667+32])
                                                        Some
                                                          expression (lambda/matching.ml[706,23667+18]..[706,23667+47]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[706,23667+18]..[706,23667+29])
                                                                Pexp_ident "specialized" (lambda/matching.ml[706,23667+18]..[706,23667+29])
                                                              expression (lambda/matching.ml[706,23667+33]..[706,23667+47])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[706,23667+33]..[706,23667+43])
                                                                  Pexp_ident "filter_rec" (lambda/matching.ml[706,23667+33]..[706,23667+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[706,23667+44]..[706,23667+47])
                                                                      Pexp_ident "rem" (lambda/matching.ml[706,23667+44]..[706,23667+47])
                                                                ]
                                                            ]
                                                ]
                                        ]
                                ]
                            <def>
                              pattern (lambda/matching.ml[716,23958+8]..[716,23958+18])
                                Ppat_var "filter_one" (lambda/matching.ml[716,23958+8]..[716,23958+18])
                              expression (lambda/matching.ml[716,23958+19]..[717,23984+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[716,23958+19]..[716,23958+20])
                                  Ppat_var "p" (lambda/matching.ml[716,23958+19]..[716,23958+20])
                                expression (lambda/matching.ml[716,23958+21]..[717,23984+28]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[716,23958+21]..[716,23958+23])
                                    Ppat_var "ps" (lambda/matching.ml[716,23958+21]..[716,23958+23])
                                  expression (lambda/matching.ml[717,23984+6]..[717,23984+28])
                                    Pexp_apply
                                    expression (lambda/matching.ml[717,23984+6]..[717,23984+16])
                                      Pexp_ident "filter_rec" (lambda/matching.ml[717,23984+6]..[717,23984+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[717,23984+17]..[717,23984+28])
                                          Pexp_construct "::" (lambda/matching.ml[717,23984+19]..[717,23984+28]) ghost
                                          Some
                                            expression (lambda/matching.ml[717,23984+19]..[717,23984+28]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[717,23984+19]..[717,23984+26])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[717,23984+20]..[717,23984+21])
                                                      Pexp_ident "p" (lambda/matching.ml[717,23984+20]..[717,23984+21])
                                                    expression (lambda/matching.ml[717,23984+23]..[717,23984+25])
                                                      Pexp_ident "ps" (lambda/matching.ml[717,23984+23]..[717,23984+25])
                                                  ]
                                                expression (lambda/matching.ml[717,23984+27]..[717,23984+28]) ghost
                                                  Pexp_construct "[]" (lambda/matching.ml[717,23984+27]..[717,23984+28]) ghost
                                                  None
                                              ]
                                    ]
                            <def>
                              pattern (lambda/matching.ml[719,24014+8]..[719,24014+21])
                                Ppat_var "filter_rec_or" (lambda/matching.ml[719,24014+8]..[719,24014+21])
                              expression (lambda/matching.ml[719,24014+22]..[771,26216+50]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[719,24014+22]..[719,24014+24])
                                  Ppat_var "p1" (lambda/matching.ml[719,24014+22]..[719,24014+24])
                                expression (lambda/matching.ml[719,24014+25]..[771,26216+50]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[719,24014+25]..[719,24014+27])
                                    Ppat_var "p2" (lambda/matching.ml[719,24014+25]..[719,24014+27])
                                  expression (lambda/matching.ml[719,24014+28]..[771,26216+50]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[719,24014+28]..[719,24014+30])
                                      Ppat_var "ps" (lambda/matching.ml[719,24014+28]..[719,24014+30])
                                    expression (lambda/matching.ml[719,24014+31]..[771,26216+50]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[719,24014+31]..[719,24014+34])
                                        Ppat_var "rem" (lambda/matching.ml[719,24014+31]..[719,24014+34])
                                      expression (lambda/matching.ml[720,24051+6]..[771,26216+50])
                                        Pexp_match
                                        expression (lambda/matching.ml[720,24051+12]..[720,24051+17])
                                          Pexp_ident "arity" (lambda/matching.ml[720,24051+12]..[720,24051+17])
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[721,24074+8]..[721,24074+9])
                                              Ppat_constant PConst_int (0,None)
                                            expression (lambda/matching.ml[721,24074+13]..[728,24410+9])
                                              Pexp_match
                                              expression (lambda/matching.ml[725,24277+16]..[725,24277+32])
                                                Pexp_apply
                                                expression (lambda/matching.ml[725,24277+16]..[725,24277+26])
                                                  Pexp_ident "filter_one" (lambda/matching.ml[725,24277+16]..[725,24277+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[725,24277+27]..[725,24277+29])
                                                      Pexp_ident "p1" (lambda/matching.ml[725,24277+27]..[725,24277+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[725,24277+30]..[725,24277+32])
                                                      Pexp_ident "ps" (lambda/matching.ml[725,24277+30]..[725,24277+32])
                                                ]
                                              [
                                                <case>
                                                  pattern (lambda/matching.ml[726,24315+12]..[726,24315+14])
                                                    Ppat_construct "[]" (lambda/matching.ml[726,24315+12]..[726,24315+14])
                                                    None
                                                  expression (lambda/matching.ml[726,24315+18]..[726,24315+46])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[726,24315+18]..[726,24315+28])
                                                      Pexp_ident "filter_rec" (lambda/matching.ml[726,24315+18]..[726,24315+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[726,24315+29]..[726,24315+46])
                                                          Pexp_construct "::" (lambda/matching.ml[726,24315+39]..[726,24315+41])
                                                          Some
                                                            expression (lambda/matching.ml[726,24315+30]..[726,24315+45]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[726,24315+30]..[726,24315+38])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[726,24315+31]..[726,24315+33])
                                                                      Pexp_ident "p2" (lambda/matching.ml[726,24315+31]..[726,24315+33])
                                                                    expression (lambda/matching.ml[726,24315+35]..[726,24315+37])
                                                                      Pexp_ident "ps" (lambda/matching.ml[726,24315+35]..[726,24315+37])
                                                                  ]
                                                                expression (lambda/matching.ml[726,24315+42]..[726,24315+45])
                                                                  Pexp_ident "rem" (lambda/matching.ml[726,24315+42]..[726,24315+45])
                                                              ]
                                                    ]
                                                <case>
                                                  pattern (lambda/matching.ml[727,24362+12]..[727,24362+19])
                                                    Ppat_var "matches" (lambda/matching.ml[727,24362+12]..[727,24362+19])
                                                  expression (lambda/matching.ml[727,24362+23]..[727,24362+47])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[727,24362+31]..[727,24362+32])
                                                      Pexp_ident "@" (lambda/matching.ml[727,24362+31]..[727,24362+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[727,24362+23]..[727,24362+30])
                                                          Pexp_ident "matches" (lambda/matching.ml[727,24362+23]..[727,24362+30])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[727,24362+33]..[727,24362+47])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[727,24362+33]..[727,24362+43])
                                                            Pexp_ident "filter_rec" (lambda/matching.ml[727,24362+33]..[727,24362+43])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[727,24362+44]..[727,24362+47])
                                                                Pexp_ident "rem" (lambda/matching.ml[727,24362+44]..[727,24362+47])
                                                          ]
                                                    ]
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[729,24420+8]..[729,24420+9])
                                              Ppat_constant PConst_int (1,None)
                                            expression (lambda/matching.ml[729,24420+13]..[765,25993+9])
                                              Pexp_match
                                              expression (lambda/matching.ml[741,25103+16]..[741,25103+52])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[741,25103+17]..[741,25103+33])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[741,25103+17]..[741,25103+27])
                                                      Pexp_ident "filter_one" (lambda/matching.ml[741,25103+17]..[741,25103+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[741,25103+28]..[741,25103+30])
                                                          Pexp_ident "p1" (lambda/matching.ml[741,25103+28]..[741,25103+30])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[741,25103+31]..[741,25103+33])
                                                          Pexp_ident "ps" (lambda/matching.ml[741,25103+31]..[741,25103+33])
                                                    ]
                                                  expression (lambda/matching.ml[741,25103+35]..[741,25103+51])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[741,25103+35]..[741,25103+45])
                                                      Pexp_ident "filter_one" (lambda/matching.ml[741,25103+35]..[741,25103+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[741,25103+46]..[741,25103+48])
                                                          Pexp_ident "p2" (lambda/matching.ml[741,25103+46]..[741,25103+48])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[741,25103+49]..[741,25103+51])
                                                          Pexp_ident "ps" (lambda/matching.ml[741,25103+49]..[741,25103+51])
                                                    ]
                                                ]
                                              [
                                                <case>
                                                  pattern (lambda/matching.ml[742,25161+12]..[743,25181+19])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[742,25161+12]..[742,25161+19])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[742,25161+12]..[742,25161+14])
                                                          Ppat_construct "[]" (lambda/matching.ml[742,25161+12]..[742,25161+14])
                                                          None
                                                        pattern (lambda/matching.ml[742,25161+16]..[742,25161+19])
                                                          Ppat_var "row" (lambda/matching.ml[742,25161+16]..[742,25161+19])
                                                      ]
                                                    pattern (lambda/matching.ml[743,25181+12]..[743,25181+19])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[743,25181+12]..[743,25181+15])
                                                          Ppat_var "row" (lambda/matching.ml[743,25181+12]..[743,25181+15])
                                                        pattern (lambda/matching.ml[743,25181+17]..[743,25181+19])
                                                          Ppat_construct "[]" (lambda/matching.ml[743,25181+17]..[743,25181+19])
                                                          None
                                                      ]
                                                  expression (lambda/matching.ml[744,25204+14]..[744,25204+34])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[744,25204+18]..[744,25204+19])
                                                      Pexp_ident "@" (lambda/matching.ml[744,25204+18]..[744,25204+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[744,25204+14]..[744,25204+17])
                                                          Pexp_ident "row" (lambda/matching.ml[744,25204+14]..[744,25204+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[744,25204+20]..[744,25204+34])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[744,25204+20]..[744,25204+30])
                                                            Pexp_ident "filter_rec" (lambda/matching.ml[744,25204+20]..[744,25204+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[744,25204+31]..[744,25204+34])
                                                                Pexp_ident "rem" (lambda/matching.ml[744,25204+31]..[744,25204+34])
                                                          ]
                                                    ]
                                                <case>
                                                  pattern (lambda/matching.ml[745,25239+12]..[745,25239+44])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[745,25239+12]..[745,25239+27])
                                                        Ppat_construct "::" (lambda/matching.ml[745,25239+14]..[745,25239+27]) ghost
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[745,25239+14]..[745,25239+27]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (lambda/matching.ml[745,25239+14]..[745,25239+25])
                                                                Ppat_construct "::" (lambda/matching.ml[745,25239+20]..[745,25239+22])
                                                                Some
                                                                  []
                                                                  pattern (lambda/matching.ml[745,25239+15]..[745,25239+24]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (lambda/matching.ml[745,25239+15]..[745,25239+19])
Ppat_var "arg1" (lambda/matching.ml[745,25239+15]..[745,25239+19])
                                                                      pattern (lambda/matching.ml[745,25239+23]..[745,25239+24])
Ppat_any
                                                                    ]
                                                              pattern (lambda/matching.ml[745,25239+26]..[745,25239+27]) ghost
                                                                Ppat_construct "[]" (lambda/matching.ml[745,25239+26]..[745,25239+27]) ghost
                                                                None
                                                            ]
                                                      pattern (lambda/matching.ml[745,25239+29]..[745,25239+44])
                                                        Ppat_construct "::" (lambda/matching.ml[745,25239+31]..[745,25239+44]) ghost
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[745,25239+31]..[745,25239+44]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (lambda/matching.ml[745,25239+31]..[745,25239+42])
                                                                Ppat_construct "::" (lambda/matching.ml[745,25239+37]..[745,25239+39])
                                                                Some
                                                                  []
                                                                  pattern (lambda/matching.ml[745,25239+32]..[745,25239+41]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (lambda/matching.ml[745,25239+32]..[745,25239+36])
Ppat_var "arg2" (lambda/matching.ml[745,25239+32]..[745,25239+36])
                                                                      pattern (lambda/matching.ml[745,25239+40]..[745,25239+41])
Ppat_any
                                                                    ]
                                                              pattern (lambda/matching.ml[745,25239+43]..[745,25239+44]) ghost
                                                                Ppat_construct "[]" (lambda/matching.ml[745,25239+43]..[745,25239+44]) ghost
                                                                None
                                                            ]
                                                    ]
                                                  expression (lambda/matching.ml[750,25496+14]..[756,25673+31])
                                                    Pexp_construct "::" (lambda/matching.ml[756,25673+14]..[756,25673+16])
                                                    Some
                                                      expression (lambda/matching.ml[750,25496+14]..[756,25673+31]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[750,25496+14]..[755,25657+15])
                                                            Pexp_construct "::" (lambda/matching.ml[754,25637+14]..[754,25637+16])
                                                            Some
                                                              expression (lambda/matching.ml[750,25496+15]..[754,25637+19]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[750,25496+15]..[753,25620+16])
                                                                    Pexp_record
                                                                    [
                                                                      "pat_desc" (lambda/matching.ml[751,25523+17]..[751,25523+25])
expression (lambda/matching.ml[751,25523+28]..[751,25523+54])
  Pexp_construct "Tpat_or" (lambda/matching.ml[751,25523+28]..[751,25523+35])
  Some
    expression (lambda/matching.ml[751,25523+36]..[751,25523+54])
      Pexp_tuple
      [
        expression (lambda/matching.ml[751,25523+37]..[751,25523+41])
          Pexp_ident "arg1" (lambda/matching.ml[751,25523+37]..[751,25523+41])
        expression (lambda/matching.ml[751,25523+43]..[751,25523+47])
          Pexp_ident "arg2" (lambda/matching.ml[751,25523+43]..[751,25523+47])
        expression (lambda/matching.ml[751,25523+49]..[751,25523+53])
          Pexp_construct "None" (lambda/matching.ml[751,25523+49]..[751,25523+53])
          None
      ]
                                                                      "pat_loc" (lambda/matching.ml[752,25579+17]..[752,25579+24])
expression (lambda/matching.ml[752,25579+27]..[752,25579+40])
  Pexp_ident "Location.none" (lambda/matching.ml[752,25579+27]..[752,25579+40])
                                                                    ]
                                                                    Some
                                                                      expression (lambda/matching.ml[750,25496+17]..[750,25496+21])
Pexp_ident "arg1" (lambda/matching.ml[750,25496+17]..[750,25496+21])
                                                                  expression (lambda/matching.ml[754,25637+17]..[754,25637+19])
                                                                    Pexp_ident "ps" (lambda/matching.ml[754,25637+17]..[754,25637+19])
                                                                ]
                                                          expression (lambda/matching.ml[756,25673+17]..[756,25673+31])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[756,25673+17]..[756,25673+27])
                                                              Pexp_ident "filter_rec" (lambda/matching.ml[756,25673+17]..[756,25673+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[756,25673+28]..[756,25673+31])
                                                                  Pexp_ident "rem" (lambda/matching.ml[756,25673+28]..[756,25673+31])
                                                            ]
                                                        ]
                                                <case>
                                                  pattern (lambda/matching.ml[757,25705+12]..[758,25734+28])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[757,25705+12]..[757,25705+28])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[757,25705+12]..[757,25705+25])
                                                          Ppat_construct "::" (lambda/matching.ml[757,25705+15]..[757,25705+17])
                                                          Some
                                                            []
                                                            pattern (lambda/matching.ml[757,25705+13]..[757,25705+24]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[757,25705+13]..[757,25705+14])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[757,25705+18]..[757,25705+24])
                                                                  Ppat_construct "::" (lambda/matching.ml[757,25705+20]..[757,25705+22])
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[757,25705+18]..[757,25705+24]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[757,25705+18]..[757,25705+19])
  Ppat_any
pattern (lambda/matching.ml[757,25705+23]..[757,25705+24])
  Ppat_any
                                                                      ]
                                                              ]
                                                        pattern (lambda/matching.ml[757,25705+27]..[757,25705+28])
                                                          Ppat_any
                                                      ]
                                                    pattern (lambda/matching.ml[758,25734+12]..[758,25734+28])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[758,25734+12]..[758,25734+13])
                                                          Ppat_any
                                                        pattern (lambda/matching.ml[758,25734+15]..[758,25734+28])
                                                          Ppat_construct "::" (lambda/matching.ml[758,25734+18]..[758,25734+20])
                                                          Some
                                                            []
                                                            pattern (lambda/matching.ml[758,25734+16]..[758,25734+27]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[758,25734+16]..[758,25734+17])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[758,25734+21]..[758,25734+27])
                                                                  Ppat_construct "::" (lambda/matching.ml[758,25734+23]..[758,25734+25])
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[758,25734+21]..[758,25734+27]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[758,25734+21]..[758,25734+22])
  Ppat_any
pattern (lambda/matching.ml[758,25734+26]..[758,25734+27])
  Ppat_any
                                                                      ]
                                                              ]
                                                      ]
                                                  expression (lambda/matching.ml[760,25829+14]..[760,25829+26])
                                                    Pexp_assert
                                                    expression (lambda/matching.ml[760,25829+21]..[760,25829+26])
                                                      Pexp_construct "false" (lambda/matching.ml[760,25829+21]..[760,25829+26])
                                                      None
                                                <case>
                                                  pattern (lambda/matching.ml[761,25856+12]..[762,25878+21])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[761,25856+12]..[761,25856+21])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[761,25856+12]..[761,25856+18])
                                                          Ppat_construct "::" (lambda/matching.ml[761,25856+14]..[761,25856+18]) ghost
                                                          Some
                                                            []
                                                            pattern (lambda/matching.ml[761,25856+14]..[761,25856+18]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[761,25856+14]..[761,25856+16])
                                                                  Ppat_construct "[]" (lambda/matching.ml[761,25856+14]..[761,25856+16])
                                                                  None
                                                                pattern (lambda/matching.ml[761,25856+17]..[761,25856+18]) ghost
                                                                  Ppat_construct "[]" (lambda/matching.ml[761,25856+17]..[761,25856+18]) ghost
                                                                  None
                                                              ]
                                                        pattern (lambda/matching.ml[761,25856+20]..[761,25856+21])
                                                          Ppat_any
                                                      ]
                                                    pattern (lambda/matching.ml[762,25878+12]..[762,25878+21])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[762,25878+12]..[762,25878+13])
                                                          Ppat_any
                                                        pattern (lambda/matching.ml[762,25878+15]..[762,25878+21])
                                                          Ppat_construct "::" (lambda/matching.ml[762,25878+17]..[762,25878+21]) ghost
                                                          Some
                                                            []
                                                            pattern (lambda/matching.ml[762,25878+17]..[762,25878+21]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[762,25878+17]..[762,25878+19])
                                                                  Ppat_construct "[]" (lambda/matching.ml[762,25878+17]..[762,25878+19])
                                                                  None
                                                                pattern (lambda/matching.ml[762,25878+20]..[762,25878+21]) ghost
                                                                  Ppat_construct "[]" (lambda/matching.ml[762,25878+20]..[762,25878+21]) ghost
                                                                  None
                                                              ]
                                                      ]
                                                  expression (lambda/matching.ml[764,25966+14]..[764,25966+26])
                                                    Pexp_assert
                                                    expression (lambda/matching.ml[764,25966+21]..[764,25966+26])
                                                      Pexp_construct "false" (lambda/matching.ml[764,25966+21]..[764,25966+26])
                                                      None
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[766,26003+8]..[766,26003+9])
                                              Ppat_any
                                            expression (lambda/matching.ml[771,26216+10]..[771,26216+50])
                                              Pexp_apply
                                              expression (lambda/matching.ml[771,26216+10]..[771,26216+20])
                                                Pexp_ident "filter_rec" (lambda/matching.ml[771,26216+10]..[771,26216+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[771,26216+21]..[771,26216+50])
                                                    Pexp_construct "::" (lambda/matching.ml[771,26216+31]..[771,26216+33])
                                                    Some
                                                      expression (lambda/matching.ml[771,26216+22]..[771,26216+49]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[771,26216+22]..[771,26216+30])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[771,26216+23]..[771,26216+25])
                                                                Pexp_ident "p1" (lambda/matching.ml[771,26216+23]..[771,26216+25])
                                                              expression (lambda/matching.ml[771,26216+27]..[771,26216+29])
                                                                Pexp_ident "ps" (lambda/matching.ml[771,26216+27]..[771,26216+29])
                                                            ]
                                                          expression (lambda/matching.ml[771,26216+34]..[771,26216+49])
                                                            Pexp_construct "::" (lambda/matching.ml[771,26216+43]..[771,26216+45])
                                                            Some
                                                              expression (lambda/matching.ml[771,26216+34]..[771,26216+49]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[771,26216+34]..[771,26216+42])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[771,26216+35]..[771,26216+37])
Pexp_ident "p2" (lambda/matching.ml[771,26216+35]..[771,26216+37])
                                                                      expression (lambda/matching.ml[771,26216+39]..[771,26216+41])
Pexp_ident "ps" (lambda/matching.ml[771,26216+39]..[771,26216+41])
                                                                    ]
                                                                  expression (lambda/matching.ml[771,26216+46]..[771,26216+49])
                                                                    Pexp_ident "rem" (lambda/matching.ml[771,26216+46]..[771,26216+49])
                                                                ]
                                                        ]
                                              ]
                                        ]
                          ]
                          expression (lambda/matching.ml[773,26274+4]..[773,26274+18])
                            Pexp_apply
                            expression (lambda/matching.ml[773,26274+4]..[773,26274+14])
                              Pexp_ident "filter_rec" (lambda/matching.ml[773,26274+4]..[773,26274+14])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[773,26274+15]..[773,26274+18])
                                  Pexp_ident "pss" (lambda/matching.ml[773,26274+15]..[773,26274+18])
                            ]
              ]
            structure_item (lambda/matching.ml[775,26294+2]..[793,26918+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[775,26294+6]..[775,26294+17])
                    Ppat_var "specialize_" (lambda/matching.ml[775,26294+6]..[775,26294+17])
                  expression (lambda/matching.ml[775,26294+18]..[793,26918+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[775,26294+18]..[775,26294+23])
                      Ppat_var "arity" (lambda/matching.ml[775,26294+18]..[775,26294+23])
                    expression (lambda/matching.ml[775,26294+24]..[793,26918+16]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[775,26294+24]..[775,26294+31])
                        Ppat_var "matcher" (lambda/matching.ml[775,26294+24]..[775,26294+31])
                      expression (lambda/matching.ml[775,26294+32]..[793,26918+16]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[775,26294+32]..[775,26294+35])
                          Ppat_var "env" (lambda/matching.ml[775,26294+32]..[775,26294+35])
                        expression (lambda/matching.ml[776,26332+4]..[793,26918+16])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[776,26332+12]..[776,26332+20])
                                Ppat_var "make_rec" (lambda/matching.ml[776,26332+12]..[776,26332+20])
                              expression (lambda/matching.ml[776,26332+23]..[791,26901+9])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/matching.ml[777,26364+8]..[777,26364+10])
                                      Ppat_construct "[]" (lambda/matching.ml[777,26364+8]..[777,26364+10])
                                      None
                                    expression (lambda/matching.ml[777,26364+14]..[777,26364+16])
                                      Pexp_construct "[]" (lambda/matching.ml[777,26364+14]..[777,26364+16])
                                      None
                                  <case>
                                    pattern (lambda/matching.ml[778,26381+8]..[778,26381+27])
                                      Ppat_construct "::" (lambda/matching.ml[778,26381+23]..[778,26381+25])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[778,26381+8]..[778,26381+27]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[778,26381+8]..[778,26381+22])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[778,26381+9]..[778,26381+18])
                                                  Ppat_construct "::" (lambda/matching.ml[778,26381+13]..[778,26381+15])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[778,26381+10]..[778,26381+17]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[778,26381+10]..[778,26381+12])
                                                          Ppat_construct "[]" (lambda/matching.ml[778,26381+10]..[778,26381+12])
                                                          None
                                                        pattern (lambda/matching.ml[778,26381+16]..[778,26381+17])
                                                          Ppat_any
                                                      ]
                                                pattern (lambda/matching.ml[778,26381+20]..[778,26381+21])
                                                  Ppat_var "i" (lambda/matching.ml[778,26381+20]..[778,26381+21])
                                              ]
                                            pattern (lambda/matching.ml[778,26381+26]..[778,26381+27])
                                              Ppat_any
                                          ]
                                    expression (lambda/matching.ml[778,26381+31]..[778,26381+46])
                                      Pexp_construct "::" (lambda/matching.ml[778,26381+33]..[778,26381+46]) ghost
                                      Some
                                        expression (lambda/matching.ml[778,26381+33]..[778,26381+46]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[778,26381+33]..[778,26381+44])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[778,26381+34]..[778,26381+40])
                                                  Pexp_construct "::" (lambda/matching.ml[778,26381+36]..[778,26381+40]) ghost
                                                  Some
                                                    expression (lambda/matching.ml[778,26381+36]..[778,26381+40]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[778,26381+36]..[778,26381+38])
                                                          Pexp_construct "[]" (lambda/matching.ml[778,26381+36]..[778,26381+38])
                                                          None
                                                        expression (lambda/matching.ml[778,26381+39]..[778,26381+40]) ghost
                                                          Pexp_construct "[]" (lambda/matching.ml[778,26381+39]..[778,26381+40]) ghost
                                                          None
                                                      ]
                                                expression (lambda/matching.ml[778,26381+42]..[778,26381+43])
                                                  Pexp_ident "i" (lambda/matching.ml[778,26381+42]..[778,26381+43])
                                              ]
                                            expression (lambda/matching.ml[778,26381+45]..[778,26381+46]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[778,26381+45]..[778,26381+46]) ghost
                                              None
                                          ]
                                  <case>
                                    pattern (lambda/matching.ml[779,26428+8]..[779,26428+23])
                                      Ppat_construct "::" (lambda/matching.ml[779,26428+17]..[779,26428+19])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[779,26428+8]..[779,26428+23]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[779,26428+8]..[779,26428+16])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[779,26428+9]..[779,26428+12])
                                                  Ppat_var "pss" (lambda/matching.ml[779,26428+9]..[779,26428+12])
                                                pattern (lambda/matching.ml[779,26428+14]..[779,26428+15])
                                                  Ppat_var "i" (lambda/matching.ml[779,26428+14]..[779,26428+15])
                                              ]
                                            pattern (lambda/matching.ml[779,26428+20]..[779,26428+23])
                                              Ppat_var "rem" (lambda/matching.ml[779,26428+20]..[779,26428+23])
                                          ]
                                    expression (lambda/matching.ml[779,26428+27]..[791,26901+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[782,26570+14]..[782,26570+23])
                                            Ppat_var "non_empty" (lambda/matching.ml[782,26570+14]..[782,26570+23])
                                          expression (lambda/matching.ml[782,26570+26]..[784,26638+32])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[783,26605+14]..[783,26605+16])
                                                  Ppat_construct "[]" (lambda/matching.ml[783,26605+14]..[783,26605+16])
                                                  None
                                                expression (lambda/matching.ml[783,26605+20]..[783,26605+32])
                                                  Pexp_assert
                                                  expression (lambda/matching.ml[783,26605+27]..[783,26605+32])
                                                    Pexp_construct "false" (lambda/matching.ml[783,26605+27]..[783,26605+32])
                                                    None
                                              <case>
                                                pattern (lambda/matching.ml[784,26638+14]..[784,26638+21])
                                                  Ppat_construct "::" (lambda/matching.ml[784,26638+16]..[784,26638+18])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[784,26638+14]..[784,26638+21]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[784,26638+14]..[784,26638+15])
                                                          Ppat_var "p" (lambda/matching.ml[784,26638+14]..[784,26638+15])
                                                        pattern (lambda/matching.ml[784,26638+19]..[784,26638+21])
                                                          Ppat_var "ps" (lambda/matching.ml[784,26638+19]..[784,26638+21])
                                                      ]
                                                expression (lambda/matching.ml[784,26638+25]..[784,26638+32])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[784,26638+26]..[784,26638+27])
                                                      Pexp_ident "p" (lambda/matching.ml[784,26638+26]..[784,26638+27])
                                                    expression (lambda/matching.ml[784,26638+29]..[784,26638+31])
                                                      Pexp_ident "ps" (lambda/matching.ml[784,26638+29]..[784,26638+31])
                                                  ]
                                            ]
                                      ]
                                      expression (lambda/matching.ml[786,26684+10]..[790,26857+43])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[786,26684+14]..[786,26684+17])
                                              Ppat_var "pss" (lambda/matching.ml[786,26684+14]..[786,26684+17])
                                            expression (lambda/matching.ml[786,26684+20]..[786,26684+42])
                                              Pexp_apply
                                              expression (lambda/matching.ml[786,26684+20]..[786,26684+28])
                                                Pexp_ident "List.map" (lambda/matching.ml[786,26684+20]..[786,26684+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[786,26684+29]..[786,26684+38])
                                                    Pexp_ident "non_empty" (lambda/matching.ml[786,26684+29]..[786,26684+38])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[786,26684+39]..[786,26684+42])
                                                    Pexp_ident "pss" (lambda/matching.ml[786,26684+39]..[786,26684+42])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[787,26730+10]..[790,26857+43])
                                          Pexp_match
                                          expression (lambda/matching.ml[787,26730+16]..[787,26730+51])
                                            Pexp_apply
                                            expression (lambda/matching.ml[787,26730+16]..[787,26730+33])
                                              Pexp_ident "specialize_matrix" (lambda/matching.ml[787,26730+16]..[787,26730+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[787,26730+34]..[787,26730+39])
                                                  Pexp_ident "arity" (lambda/matching.ml[787,26730+34]..[787,26730+39])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[787,26730+40]..[787,26730+47])
                                                  Pexp_ident "matcher" (lambda/matching.ml[787,26730+40]..[787,26730+47])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[787,26730+48]..[787,26730+51])
                                                  Pexp_ident "pss" (lambda/matching.ml[787,26730+48]..[787,26730+51])
                                            ]
                                          [
                                            <case>
                                              pattern (lambda/matching.ml[788,26787+12]..[788,26787+14])
                                                Ppat_construct "[]" (lambda/matching.ml[788,26787+12]..[788,26787+14])
                                                None
                                              expression (lambda/matching.ml[788,26787+18]..[788,26787+30])
                                                Pexp_apply
                                                expression (lambda/matching.ml[788,26787+18]..[788,26787+26])
                                                  Pexp_ident "make_rec" (lambda/matching.ml[788,26787+18]..[788,26787+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[788,26787+27]..[788,26787+30])
                                                      Pexp_ident "rem" (lambda/matching.ml[788,26787+27]..[788,26787+30])
                                                ]
                                            <case>
                                              pattern (lambda/matching.ml[789,26818+12]..[789,26818+19])
                                                Ppat_construct "::" (lambda/matching.ml[789,26818+15]..[789,26818+17])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[789,26818+12]..[789,26818+19]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[789,26818+12]..[789,26818+14])
                                                        Ppat_construct "[]" (lambda/matching.ml[789,26818+12]..[789,26818+14])
                                                        None
                                                      pattern (lambda/matching.ml[789,26818+18]..[789,26818+19])
                                                        Ppat_any
                                                    ]
                                              expression (lambda/matching.ml[789,26818+23]..[789,26818+38])
                                                Pexp_construct "::" (lambda/matching.ml[789,26818+25]..[789,26818+38]) ghost
                                                Some
                                                  expression (lambda/matching.ml[789,26818+25]..[789,26818+38]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[789,26818+25]..[789,26818+36])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[789,26818+26]..[789,26818+32])
                                                            Pexp_construct "::" (lambda/matching.ml[789,26818+28]..[789,26818+32]) ghost
                                                            Some
                                                              expression (lambda/matching.ml[789,26818+28]..[789,26818+32]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[789,26818+28]..[789,26818+30])
                                                                    Pexp_construct "[]" (lambda/matching.ml[789,26818+28]..[789,26818+30])
                                                                    None
                                                                  expression (lambda/matching.ml[789,26818+31]..[789,26818+32]) ghost
                                                                    Pexp_construct "[]" (lambda/matching.ml[789,26818+31]..[789,26818+32]) ghost
                                                                    None
                                                                ]
                                                          expression (lambda/matching.ml[789,26818+34]..[789,26818+35])
                                                            Pexp_ident "i" (lambda/matching.ml[789,26818+34]..[789,26818+35])
                                                        ]
                                                      expression (lambda/matching.ml[789,26818+37]..[789,26818+38]) ghost
                                                        Pexp_construct "[]" (lambda/matching.ml[789,26818+37]..[789,26818+38]) ghost
                                                        None
                                                    ]
                                            <case>
                                              pattern (lambda/matching.ml[790,26857+12]..[790,26857+15])
                                                Ppat_var "pss" (lambda/matching.ml[790,26857+12]..[790,26857+15])
                                              expression (lambda/matching.ml[790,26857+19]..[790,26857+43])
                                                Pexp_construct "::" (lambda/matching.ml[790,26857+28]..[790,26857+30])
                                                Some
                                                  expression (lambda/matching.ml[790,26857+19]..[790,26857+43]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[790,26857+19]..[790,26857+27])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[790,26857+20]..[790,26857+23])
                                                            Pexp_ident "pss" (lambda/matching.ml[790,26857+20]..[790,26857+23])
                                                          expression (lambda/matching.ml[790,26857+25]..[790,26857+26])
                                                            Pexp_ident "i" (lambda/matching.ml[790,26857+25]..[790,26857+26])
                                                        ]
                                                      expression (lambda/matching.ml[790,26857+31]..[790,26857+43])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[790,26857+31]..[790,26857+39])
                                                          Pexp_ident "make_rec" (lambda/matching.ml[790,26857+31]..[790,26857+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[790,26857+40]..[790,26857+43])
                                                              Pexp_ident "rem" (lambda/matching.ml[790,26857+40]..[790,26857+43])
                                                        ]
                                                    ]
                                          ]
                                ]
                          ]
                          expression (lambda/matching.ml[793,26918+4]..[793,26918+16])
                            Pexp_apply
                            expression (lambda/matching.ml[793,26918+4]..[793,26918+12])
                              Pexp_ident "make_rec" (lambda/matching.ml[793,26918+4]..[793,26918+12])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[793,26918+13]..[793,26918+16])
                                  Pexp_ident "env" (lambda/matching.ml[793,26918+13]..[793,26918+16])
                            ]
              ]
            structure_item (lambda/matching.ml[795,26936+2]..[796,26964+61])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[795,26936+6]..[795,26936+16])
                    Ppat_var "specialize" (lambda/matching.ml[795,26936+6]..[795,26936+16])
                  expression (lambda/matching.ml[795,26936+17]..[796,26964+61]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[795,26936+17]..[795,26936+21])
                      Ppat_var "head" (lambda/matching.ml[795,26936+17]..[795,26936+21])
                    expression (lambda/matching.ml[795,26936+22]..[796,26964+61]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[795,26936+22]..[795,26936+25])
                        Ppat_var "def" (lambda/matching.ml[795,26936+22]..[795,26936+25])
                      expression (lambda/matching.ml[796,26964+4]..[796,26964+61])
                        Pexp_apply
                        expression (lambda/matching.ml[796,26964+4]..[796,26964+15])
                          Pexp_ident "specialize_" (lambda/matching.ml[796,26964+4]..[796,26964+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[796,26964+16]..[796,26964+42])
                              Pexp_apply
                              expression (lambda/matching.ml[796,26964+17]..[796,26964+36])
                                Pexp_ident "Patterns.Head.arity" (lambda/matching.ml[796,26964+17]..[796,26964+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[796,26964+37]..[796,26964+41])
                                    Pexp_ident "head" (lambda/matching.ml[796,26964+37]..[796,26964+41])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[796,26964+43]..[796,26964+57])
                              Pexp_apply
                              expression (lambda/matching.ml[796,26964+44]..[796,26964+51])
                                Pexp_ident "matcher" (lambda/matching.ml[796,26964+44]..[796,26964+51])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[796,26964+52]..[796,26964+56])
                                    Pexp_ident "head" (lambda/matching.ml[796,26964+52]..[796,26964+56])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[796,26964+58]..[796,26964+61])
                              Pexp_ident "def" (lambda/matching.ml[796,26964+58]..[796,26964+61])
                        ]
              ]
            structure_item (lambda/matching.ml[798,27027+2]..[798,27027+60])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[798,27027+6]..[798,27027+16])
                    Ppat_var "pop_column" (lambda/matching.ml[798,27027+6]..[798,27027+16])
                  expression (lambda/matching.ml[798,27027+17]..[798,27027+60]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[798,27027+17]..[798,27027+20])
                      Ppat_var "def" (lambda/matching.ml[798,27027+17]..[798,27027+20])
                    expression (lambda/matching.ml[798,27027+23]..[798,27027+60])
                      Pexp_apply
                      expression (lambda/matching.ml[798,27027+23]..[798,27027+34])
                        Pexp_ident "specialize_" (lambda/matching.ml[798,27027+23]..[798,27027+34])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[798,27027+35]..[798,27027+36])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[798,27027+37]..[798,27027+56])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[798,27027+42]..[798,27027+44])
                              Ppat_var "_p" (lambda/matching.ml[798,27027+42]..[798,27027+44])
                            expression (lambda/matching.ml[798,27027+45]..[798,27027+55]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[798,27027+45]..[798,27027+48])
                                Ppat_var "rem" (lambda/matching.ml[798,27027+45]..[798,27027+48])
                              expression (lambda/matching.ml[798,27027+52]..[798,27027+55])
                                Pexp_ident "rem" (lambda/matching.ml[798,27027+52]..[798,27027+55])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[798,27027+57]..[798,27027+60])
                            Pexp_ident "def" (lambda/matching.ml[798,27027+57]..[798,27027+60])
                      ]
              ]
            structure_item (lambda/matching.ml[800,27089+2]..[807,27242+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[800,27089+6]..[800,27089+16])
                    Ppat_var "pop_compat" (lambda/matching.ml[800,27089+6]..[800,27089+16])
                  expression (lambda/matching.ml[800,27089+17]..[807,27242+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[800,27089+17]..[800,27089+18])
                      Ppat_var "p" (lambda/matching.ml[800,27089+17]..[800,27089+18])
                    expression (lambda/matching.ml[800,27089+19]..[807,27242+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[800,27089+19]..[800,27089+22])
                        Ppat_var "def" (lambda/matching.ml[800,27089+19]..[800,27089+22])
                      expression (lambda/matching.ml[801,27114+4]..[807,27242+36])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[801,27114+8]..[801,27114+22])
                              Ppat_var "compat_matcher" (lambda/matching.ml[801,27114+8]..[801,27114+22])
                            expression (lambda/matching.ml[801,27114+23]..[805,27213+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[801,27114+23]..[801,27114+24])
                                Ppat_var "q" (lambda/matching.ml[801,27114+23]..[801,27114+24])
                              expression (lambda/matching.ml[801,27114+25]..[805,27213+21]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[801,27114+25]..[801,27114+28])
                                  Ppat_var "rem" (lambda/matching.ml[801,27114+25]..[801,27114+28])
                                expression (lambda/matching.ml[802,27145+6]..[805,27213+21])
                                  Pexp_ifthenelse
                                  expression (lambda/matching.ml[802,27145+9]..[802,27145+39])
                                    Pexp_apply
                                    expression (lambda/matching.ml[802,27145+9]..[802,27145+19])
                                      Pexp_ident "may_compat" (lambda/matching.ml[802,27145+9]..[802,27145+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[802,27145+20]..[802,27145+21])
                                          Pexp_ident "p" (lambda/matching.ml[802,27145+20]..[802,27145+21])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[802,27145+22]..[802,27145+39])
                                          Pexp_apply
                                          expression (lambda/matching.ml[802,27145+23]..[802,27145+36])
                                            Pexp_ident "General.erase" (lambda/matching.ml[802,27145+23]..[802,27145+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[802,27145+37]..[802,27145+38])
                                                Pexp_ident "q" (lambda/matching.ml[802,27145+37]..[802,27145+38])
                                          ]
                                    ]
                                  expression (lambda/matching.ml[803,27190+8]..[803,27190+11])
                                    Pexp_ident "rem" (lambda/matching.ml[803,27190+8]..[803,27190+11])
                                  Some
                                    expression (lambda/matching.ml[805,27213+8]..[805,27213+21])
                                      Pexp_apply
                                      expression (lambda/matching.ml[805,27213+8]..[805,27213+13])
                                        Pexp_ident "raise" (lambda/matching.ml[805,27213+8]..[805,27213+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[805,27213+14]..[805,27213+21])
                                            Pexp_construct "NoMatch" (lambda/matching.ml[805,27213+14]..[805,27213+21])
                                            None
                                      ]
                        ]
                        expression (lambda/matching.ml[807,27242+4]..[807,27242+36])
                          Pexp_apply
                          expression (lambda/matching.ml[807,27242+4]..[807,27242+15])
                            Pexp_ident "specialize_" (lambda/matching.ml[807,27242+4]..[807,27242+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[807,27242+16]..[807,27242+17])
                                Pexp_constant PConst_int (0,None)
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[807,27242+18]..[807,27242+32])
                                Pexp_ident "compat_matcher" (lambda/matching.ml[807,27242+18]..[807,27242+32])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[807,27242+33]..[807,27242+36])
                                Pexp_ident "def" (lambda/matching.ml[807,27242+33]..[807,27242+36])
                          ]
              ]
            structure_item (lambda/matching.ml[809,27280+2]..[811,27318+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[809,27280+6]..[809,27280+9])
                    Ppat_var "pop" (lambda/matching.ml[809,27280+6]..[809,27280+9])
                  expression (lambda/matching.ml[809,27280+12]..[811,27318+37])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[810,27301+6]..[810,27301+8])
                          Ppat_construct "[]" (lambda/matching.ml[810,27301+6]..[810,27301+8])
                          None
                        expression (lambda/matching.ml[810,27301+12]..[810,27301+16])
                          Pexp_construct "None" (lambda/matching.ml[810,27301+12]..[810,27301+16])
                          None
                      <case>
                        pattern (lambda/matching.ml[811,27318+6]..[811,27318+17])
                          Ppat_construct "::" (lambda/matching.ml[811,27318+10]..[811,27318+12])
                          Some
                            []
                            pattern (lambda/matching.ml[811,27318+6]..[811,27318+17]) ghost
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[811,27318+6]..[811,27318+9])
                                  Ppat_var "def" (lambda/matching.ml[811,27318+6]..[811,27318+9])
                                pattern (lambda/matching.ml[811,27318+13]..[811,27318+17])
                                  Ppat_var "defs" (lambda/matching.ml[811,27318+13]..[811,27318+17])
                              ]
                        expression (lambda/matching.ml[811,27318+21]..[811,27318+37])
                          Pexp_construct "Some" (lambda/matching.ml[811,27318+21]..[811,27318+25])
                          Some
                            expression (lambda/matching.ml[811,27318+26]..[811,27318+37])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[811,27318+27]..[811,27318+30])
                                  Pexp_ident "def" (lambda/matching.ml[811,27318+27]..[811,27318+30])
                                expression (lambda/matching.ml[811,27318+32]..[811,27318+36])
                                  Pexp_ident "defs" (lambda/matching.ml[811,27318+32]..[811,27318+36])
                              ]
                    ]
              ]
            structure_item (lambda/matching.ml[813,27357+2]..[818,27521+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[813,27357+6]..[813,27357+8])
                    Ppat_var "pp" (lambda/matching.ml[813,27357+6]..[813,27357+8])
                  expression (lambda/matching.ml[813,27357+9]..[818,27521+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[813,27357+9]..[813,27357+12])
                      Ppat_var "def" (lambda/matching.ml[813,27357+9]..[813,27357+12])
                    expression (lambda/matching.ml[814,27372+4]..[818,27521+44])
                      Pexp_sequence
                      expression (lambda/matching.ml[814,27372+4]..[814,27372+43])
                        Pexp_apply
                        expression (lambda/matching.ml[814,27372+4]..[814,27372+18])
                          Pexp_ident "Format.eprintf" (lambda/matching.ml[814,27372+4]..[814,27372+18])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[814,27372+19]..[814,27372+43])
                              Pexp_constant PConst_string("+++++ Defaults +++++\n",(lambda/matching.ml[814,27372+20]..[814,27372+42]),None)
                        ]
                      expression (lambda/matching.ml[815,27417+4]..[818,27521+44])
                        Pexp_sequence
                        expression (lambda/matching.ml[815,27417+4]..[817,27510+9])
                          Pexp_apply
                          expression (lambda/matching.ml[815,27417+4]..[815,27417+13])
                            Pexp_ident "List.iter" (lambda/matching.ml[815,27417+4]..[815,27417+13])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[816,27431+6]..[816,27431+78])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[816,27431+11]..[816,27431+19])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[816,27431+12]..[816,27431+15])
                                      Ppat_var "pss" (lambda/matching.ml[816,27431+12]..[816,27431+15])
                                    pattern (lambda/matching.ml[816,27431+17]..[816,27431+18])
                                      Ppat_var "i" (lambda/matching.ml[816,27431+17]..[816,27431+18])
                                  ]
                                expression (lambda/matching.ml[816,27431+23]..[816,27431+77])
                                  Pexp_apply
                                  expression (lambda/matching.ml[816,27431+23]..[816,27431+37])
                                    Pexp_ident "Format.eprintf" (lambda/matching.ml[816,27431+23]..[816,27431+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[816,27431+38]..[816,27431+57])
                                        Pexp_constant PConst_string("Matrix for %d\n%a",(lambda/matching.ml[816,27431+39]..[816,27431+56]),None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[816,27431+58]..[816,27431+59])
                                        Pexp_ident "i" (lambda/matching.ml[816,27431+58]..[816,27431+59])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[816,27431+60]..[816,27431+73])
                                        Pexp_ident "pretty_matrix" (lambda/matching.ml[816,27431+60]..[816,27431+73])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[816,27431+74]..[816,27431+77])
                                        Pexp_ident "pss" (lambda/matching.ml[816,27431+74]..[816,27431+77])
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[817,27510+6]..[817,27510+9])
                                Pexp_ident "def" (lambda/matching.ml[817,27510+6]..[817,27510+9])
                          ]
                        expression (lambda/matching.ml[818,27521+4]..[818,27521+44])
                          Pexp_apply
                          expression (lambda/matching.ml[818,27521+4]..[818,27521+18])
                            Pexp_ident "Format.eprintf" (lambda/matching.ml[818,27521+4]..[818,27521+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[818,27521+19]..[818,27521+44])
                                Pexp_constant PConst_string("+++++++++++++++++++++\n",(lambda/matching.ml[818,27521+20]..[818,27521+43]),None)
                          ]
              ]
            structure_item (lambda/matching.ml[820,27567+2]..[821,27592+63])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[820,27567+6]..[820,27567+13])
                    Ppat_var "flatten" (lambda/matching.ml[820,27567+6]..[820,27567+13])
                  expression (lambda/matching.ml[820,27567+14]..[821,27592+63]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[820,27567+14]..[820,27567+18])
                      Ppat_var "size" (lambda/matching.ml[820,27567+14]..[820,27567+18])
                    expression (lambda/matching.ml[820,27567+19]..[821,27592+63]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[820,27567+19]..[820,27567+22])
                        Ppat_var "def" (lambda/matching.ml[820,27567+19]..[820,27567+22])
                      expression (lambda/matching.ml[821,27592+4]..[821,27592+63])
                        Pexp_apply
                        expression (lambda/matching.ml[821,27592+4]..[821,27592+12])
                          Pexp_ident "List.map" (lambda/matching.ml[821,27592+4]..[821,27592+12])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[821,27592+13]..[821,27592+59])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[821,27592+18]..[821,27592+26])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[821,27592+19]..[821,27592+22])
                                    Ppat_var "pss" (lambda/matching.ml[821,27592+19]..[821,27592+22])
                                  pattern (lambda/matching.ml[821,27592+24]..[821,27592+25])
                                    Ppat_var "i" (lambda/matching.ml[821,27592+24]..[821,27592+25])
                                ]
                              expression (lambda/matching.ml[821,27592+30]..[821,27592+58])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[821,27592+31]..[821,27592+54])
                                    Pexp_apply
                                    expression (lambda/matching.ml[821,27592+31]..[821,27592+45])
                                      Pexp_ident "flatten_matrix" (lambda/matching.ml[821,27592+31]..[821,27592+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[821,27592+46]..[821,27592+50])
                                          Pexp_ident "size" (lambda/matching.ml[821,27592+46]..[821,27592+50])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[821,27592+51]..[821,27592+54])
                                          Pexp_ident "pss" (lambda/matching.ml[821,27592+51]..[821,27592+54])
                                    ]
                                  expression (lambda/matching.ml[821,27592+56]..[821,27592+57])
                                    Pexp_ident "i" (lambda/matching.ml[821,27592+56]..[821,27592+57])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[821,27592+60]..[821,27592+63])
                              Pexp_ident "def" (lambda/matching.ml[821,27592+60]..[821,27592+63])
                        ]
              ]
          ]
        module_type (lambda/matching.ml[654,22235+29]..[674,22570+3])
          Pmty_signature
          [
            signature_item (lambda/matching.ml[655,22268+2]..[655,22268+8])
              Psig_type Rec
              [
                type_declaration "t" (lambda/matching.ml[655,22268+7]..[655,22268+8]) (lambda/matching.ml[655,22268+2]..[655,22268+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lambda/matching.ml[657,22278+2]..[657,22278+26])
              Psig_value
              value_description "is_empty" (lambda/matching.ml[657,22278+6]..[657,22278+14]) (lambda/matching.ml[657,22278+2]..[657,22278+26])
                core_type (lambda/matching.ml[657,22278+17]..[657,22278+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[657,22278+17]..[657,22278+18])
                    Ptyp_constr "t" (lambda/matching.ml[657,22278+17]..[657,22278+18])
                    []
                  core_type (lambda/matching.ml[657,22278+22]..[657,22278+26])
                    Ptyp_constr "bool" (lambda/matching.ml[657,22278+22]..[657,22278+26])
                    []
                []
            signature_item (lambda/matching.ml[659,22306+2]..[659,22306+44])
              Psig_value
              value_description "pop" (lambda/matching.ml[659,22306+6]..[659,22306+9]) (lambda/matching.ml[659,22306+2]..[659,22306+44])
                core_type (lambda/matching.ml[659,22306+12]..[659,22306+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[659,22306+12]..[659,22306+13])
                    Ptyp_constr "t" (lambda/matching.ml[659,22306+12]..[659,22306+13])
                    []
                  core_type (lambda/matching.ml[659,22306+17]..[659,22306+44])
                    Ptyp_constr "option" (lambda/matching.ml[659,22306+38]..[659,22306+44])
                    [
                      core_type (lambda/matching.ml[659,22306+18]..[659,22306+36])
                        Ptyp_tuple
                        [
                          core_type (lambda/matching.ml[659,22306+19]..[659,22306+31])
                            Ptyp_tuple
                            [
                              core_type (lambda/matching.ml[659,22306+19]..[659,22306+25])
                                Ptyp_constr "matrix" (lambda/matching.ml[659,22306+19]..[659,22306+25])
                                []
                              core_type (lambda/matching.ml[659,22306+28]..[659,22306+31])
                                Ptyp_constr "int" (lambda/matching.ml[659,22306+28]..[659,22306+31])
                                []
                            ]
                          core_type (lambda/matching.ml[659,22306+35]..[659,22306+36])
                            Ptyp_constr "t" (lambda/matching.ml[659,22306+35]..[659,22306+36])
                            []
                        ]
                    ]
                []
            signature_item (lambda/matching.ml[661,22352+2]..[661,22352+15])
              Psig_value
              value_description "empty" (lambda/matching.ml[661,22352+6]..[661,22352+11]) (lambda/matching.ml[661,22352+2]..[661,22352+15])
                core_type (lambda/matching.ml[661,22352+14]..[661,22352+15])
                  Ptyp_constr "t" (lambda/matching.ml[661,22352+14]..[661,22352+15])
                  []
                []
            signature_item (lambda/matching.ml[663,22369+2]..[663,22369+36])
              Psig_value
              value_description "cons" (lambda/matching.ml[663,22369+6]..[663,22369+10]) (lambda/matching.ml[663,22369+2]..[663,22369+36])
                core_type (lambda/matching.ml[663,22369+13]..[663,22369+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[663,22369+13]..[663,22369+19])
                    Ptyp_constr "matrix" (lambda/matching.ml[663,22369+13]..[663,22369+19])
                    []
                  core_type (lambda/matching.ml[663,22369+23]..[663,22369+36])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[663,22369+23]..[663,22369+26])
                      Ptyp_constr "int" (lambda/matching.ml[663,22369+23]..[663,22369+26])
                      []
                    core_type (lambda/matching.ml[663,22369+30]..[663,22369+36])
                      Ptyp_arrow
                      Nolabel
                      core_type (lambda/matching.ml[663,22369+30]..[663,22369+31])
                        Ptyp_constr "t" (lambda/matching.ml[663,22369+30]..[663,22369+31])
                        []
                      core_type (lambda/matching.ml[663,22369+35]..[663,22369+36])
                        Ptyp_constr "t" (lambda/matching.ml[663,22369+35]..[663,22369+36])
                        []
                []
            signature_item (lambda/matching.ml[665,22407+2]..[665,22407+44])
              Psig_value
              value_description "specialize" (lambda/matching.ml[665,22407+6]..[665,22407+16]) (lambda/matching.ml[665,22407+2]..[665,22407+44])
                core_type (lambda/matching.ml[665,22407+19]..[665,22407+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[665,22407+19]..[665,22407+34])
                    Ptyp_constr "Patterns.Head.t" (lambda/matching.ml[665,22407+19]..[665,22407+34])
                    []
                  core_type (lambda/matching.ml[665,22407+38]..[665,22407+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[665,22407+38]..[665,22407+39])
                      Ptyp_constr "t" (lambda/matching.ml[665,22407+38]..[665,22407+39])
                      []
                    core_type (lambda/matching.ml[665,22407+43]..[665,22407+44])
                      Ptyp_constr "t" (lambda/matching.ml[665,22407+43]..[665,22407+44])
                      []
                []
            signature_item (lambda/matching.ml[667,22453+2]..[667,22453+25])
              Psig_value
              value_description "pop_column" (lambda/matching.ml[667,22453+6]..[667,22453+16]) (lambda/matching.ml[667,22453+2]..[667,22453+25])
                core_type (lambda/matching.ml[667,22453+19]..[667,22453+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[667,22453+19]..[667,22453+20])
                    Ptyp_constr "t" (lambda/matching.ml[667,22453+19]..[667,22453+20])
                    []
                  core_type (lambda/matching.ml[667,22453+24]..[667,22453+25])
                    Ptyp_constr "t" (lambda/matching.ml[667,22453+24]..[667,22453+25])
                    []
                []
            signature_item (lambda/matching.ml[669,22480+2]..[669,22480+36])
              Psig_value
              value_description "pop_compat" (lambda/matching.ml[669,22480+6]..[669,22480+16]) (lambda/matching.ml[669,22480+2]..[669,22480+36])
                core_type (lambda/matching.ml[669,22480+19]..[669,22480+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[669,22480+19]..[669,22480+26])
                    Ptyp_constr "pattern" (lambda/matching.ml[669,22480+19]..[669,22480+26])
                    []
                  core_type (lambda/matching.ml[669,22480+30]..[669,22480+36])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[669,22480+30]..[669,22480+31])
                      Ptyp_constr "t" (lambda/matching.ml[669,22480+30]..[669,22480+31])
                      []
                    core_type (lambda/matching.ml[669,22480+35]..[669,22480+36])
                      Ptyp_constr "t" (lambda/matching.ml[669,22480+35]..[669,22480+36])
                      []
                []
            signature_item (lambda/matching.ml[671,22518+2]..[671,22518+29])
              Psig_value
              value_description "flatten" (lambda/matching.ml[671,22518+6]..[671,22518+13]) (lambda/matching.ml[671,22518+2]..[671,22518+29])
                core_type (lambda/matching.ml[671,22518+16]..[671,22518+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[671,22518+16]..[671,22518+19])
                    Ptyp_constr "int" (lambda/matching.ml[671,22518+16]..[671,22518+19])
                    []
                  core_type (lambda/matching.ml[671,22518+23]..[671,22518+29])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[671,22518+23]..[671,22518+24])
                      Ptyp_constr "t" (lambda/matching.ml[671,22518+23]..[671,22518+24])
                      []
                    core_type (lambda/matching.ml[671,22518+28]..[671,22518+29])
                      Ptyp_constr "t" (lambda/matching.ml[671,22518+28]..[671,22518+29])
                      []
                []
            signature_item (lambda/matching.ml[673,22549+2]..[673,22549+20])
              Psig_value
              value_description "pp" (lambda/matching.ml[673,22549+6]..[673,22549+8]) (lambda/matching.ml[673,22549+2]..[673,22549+20])
                core_type (lambda/matching.ml[673,22549+11]..[673,22549+20])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[673,22549+11]..[673,22549+12])
                    Ptyp_constr "t" (lambda/matching.ml[673,22549+11]..[673,22549+12])
                    []
                  core_type (lambda/matching.ml[673,22549+16]..[673,22549+20])
                    Ptyp_constr "unit" (lambda/matching.ml[673,22549+16]..[673,22549+20])
                    []
                []
          ]
  structure_item (lambda/matching.ml[824,27661+0]..[923,29783+3])
    Pstr_module
    "Jumps" (lambda/matching.ml[824,27661+7]..[824,27661+12])
      module_expr (lambda/matching.ml[824,27661+13]..[923,29783+3])
        Pmod_constraint
        module_expr (lambda/matching.ml[846,28018+6]..[923,29783+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[847,28031+2]..[847,28031+33])
              Pstr_type Rec
              [
                type_declaration "t" (lambda/matching.ml[847,28031+7]..[847,28031+8]) (lambda/matching.ml[847,28031+2]..[847,28031+33])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[847,28031+11]..[847,28031+33])
                        Ptyp_constr "list" (lambda/matching.ml[847,28031+29]..[847,28031+33])
                        [
                          core_type (lambda/matching.ml[847,28031+12]..[847,28031+27])
                            Ptyp_tuple
                            [
                              core_type (lambda/matching.ml[847,28031+12]..[847,28031+15])
                                Ptyp_constr "int" (lambda/matching.ml[847,28031+12]..[847,28031+15])
                                []
                              core_type (lambda/matching.ml[847,28031+18]..[847,28031+27])
                                Ptyp_constr "Context.t" (lambda/matching.ml[847,28031+18]..[847,28031+27])
                                []
                            ]
                        ]
              ]
            structure_item (lambda/matching.ml[849,28066+2]..[854,28200+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[849,28066+6]..[849,28066+13])
                    Ppat_var "eprintf" (lambda/matching.ml[849,28066+6]..[849,28066+13])
                  expression (lambda/matching.ml[849,28066+14]..[854,28200+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[849,28066+14]..[849,28066+23])
                      Ppat_constraint
                      pattern (lambda/matching.ml[849,28066+15]..[849,28066+18])
                        Ppat_var "env" (lambda/matching.ml[849,28066+15]..[849,28066+18])
                      core_type (lambda/matching.ml[849,28066+21]..[849,28066+22])
                        Ptyp_constr "t" (lambda/matching.ml[849,28066+21]..[849,28066+22])
                        []
                    expression (lambda/matching.ml[850,28092+4]..[854,28200+9])
                      Pexp_apply
                      expression (lambda/matching.ml[850,28092+4]..[850,28092+13])
                        Pexp_ident "List.iter" (lambda/matching.ml[850,28092+4]..[850,28092+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[851,28106+6]..[853,28171+28])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[851,28106+11]..[851,28106+19])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[851,28106+12]..[851,28106+13])
                                  Ppat_var "i" (lambda/matching.ml[851,28106+12]..[851,28106+13])
                                pattern (lambda/matching.ml[851,28106+15]..[851,28106+18])
                                  Ppat_var "ctx" (lambda/matching.ml[851,28106+15]..[851,28106+18])
                              ]
                            expression (lambda/matching.ml[852,28129+8]..[853,28171+27])
                              Pexp_sequence
                              expression (lambda/matching.ml[852,28129+8]..[852,28129+40])
                                Pexp_apply
                                expression (lambda/matching.ml[852,28129+8]..[852,28129+22])
                                  Pexp_ident "Printf.eprintf" (lambda/matching.ml[852,28129+8]..[852,28129+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[852,28129+23]..[852,28129+38])
                                      Pexp_constant PConst_string("jump for %d\n",(lambda/matching.ml[852,28129+24]..[852,28129+37]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[852,28129+39]..[852,28129+40])
                                      Pexp_ident "i" (lambda/matching.ml[852,28129+39]..[852,28129+40])
                                ]
                              expression (lambda/matching.ml[853,28171+8]..[853,28171+27])
                                Pexp_apply
                                expression (lambda/matching.ml[853,28171+8]..[853,28171+23])
                                  Pexp_ident "Context.eprintf" (lambda/matching.ml[853,28171+8]..[853,28171+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[853,28171+24]..[853,28171+27])
                                      Pexp_ident "ctx" (lambda/matching.ml[853,28171+24]..[853,28171+27])
                                ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[854,28200+6]..[854,28200+9])
                            Pexp_ident "env" (lambda/matching.ml[854,28200+6]..[854,28200+9])
                      ]
              ]
            structure_item (lambda/matching.ml[856,28211+2]..[865,28467+23])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[856,28211+10]..[856,28211+17])
                    Ppat_var "extract" (lambda/matching.ml[856,28211+10]..[856,28211+17])
                  expression (lambda/matching.ml[856,28211+18]..[865,28467+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[856,28211+18]..[856,28211+19])
                      Ppat_var "i" (lambda/matching.ml[856,28211+18]..[856,28211+19])
                    expression (lambda/matching.ml[856,28211+22]..[865,28467+23])
                      Pexp_function
                      [
                        <case>
                          pattern (lambda/matching.ml[857,28242+6]..[857,28242+8])
                            Ppat_construct "[]" (lambda/matching.ml[857,28242+6]..[857,28242+8])
                            None
                          expression (lambda/matching.ml[857,28242+12]..[857,28242+31])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[857,28242+13]..[857,28242+26])
                                Pexp_ident "Context.empty" (lambda/matching.ml[857,28242+13]..[857,28242+26])
                              expression (lambda/matching.ml[857,28242+28]..[857,28242+30])
                                Pexp_construct "[]" (lambda/matching.ml[857,28242+28]..[857,28242+30])
                                None
                            ]
                        <case>
                          pattern (lambda/matching.ml[858,28274+6]..[858,28274+35])
                            Ppat_alias "all" (lambda/matching.ml[858,28274+32]..[858,28274+35])
                            pattern (lambda/matching.ml[858,28274+6]..[858,28274+28])
                              Ppat_construct "::" (lambda/matching.ml[858,28274+22]..[858,28274+24])
                              Some
                                []
                                pattern (lambda/matching.ml[858,28274+6]..[858,28274+28]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[858,28274+6]..[858,28274+21])
                                      Ppat_alias "x" (lambda/matching.ml[858,28274+19]..[858,28274+20])
                                      pattern (lambda/matching.ml[858,28274+7]..[858,28274+15])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[858,28274+8]..[858,28274+9])
                                            Ppat_var "j" (lambda/matching.ml[858,28274+8]..[858,28274+9])
                                          pattern (lambda/matching.ml[858,28274+11]..[858,28274+14])
                                            Ppat_var "pss" (lambda/matching.ml[858,28274+11]..[858,28274+14])
                                        ]
                                    pattern (lambda/matching.ml[858,28274+25]..[858,28274+28])
                                      Ppat_var "rem" (lambda/matching.ml[858,28274+25]..[858,28274+28])
                                  ]
                          expression (lambda/matching.ml[859,28313+8]..[865,28467+23])
                            Pexp_ifthenelse
                            expression (lambda/matching.ml[859,28313+11]..[859,28313+16])
                              Pexp_apply
                              expression (lambda/matching.ml[859,28313+13]..[859,28313+14])
                                Pexp_ident "=" (lambda/matching.ml[859,28313+13]..[859,28313+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[859,28313+11]..[859,28313+12])
                                    Pexp_ident "i" (lambda/matching.ml[859,28313+11]..[859,28313+12])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[859,28313+15]..[859,28313+16])
                                    Pexp_ident "j" (lambda/matching.ml[859,28313+15]..[859,28313+16])
                              ]
                            expression (lambda/matching.ml[860,28335+10]..[860,28335+20])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[860,28335+11]..[860,28335+14])
                                  Pexp_ident "pss" (lambda/matching.ml[860,28335+11]..[860,28335+14])
                                expression (lambda/matching.ml[860,28335+16]..[860,28335+19])
                                  Pexp_ident "rem" (lambda/matching.ml[860,28335+16]..[860,28335+19])
                              ]
                            Some
                              expression (lambda/matching.ml[861,28356+13]..[865,28467+23])
                                Pexp_ifthenelse
                                expression (lambda/matching.ml[861,28356+16]..[861,28356+21])
                                  Pexp_apply
                                  expression (lambda/matching.ml[861,28356+18]..[861,28356+19])
                                    Pexp_ident "<" (lambda/matching.ml[861,28356+18]..[861,28356+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[861,28356+16]..[861,28356+17])
                                        Pexp_ident "j" (lambda/matching.ml[861,28356+16]..[861,28356+17])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[861,28356+20]..[861,28356+21])
                                        Pexp_ident "i" (lambda/matching.ml[861,28356+20]..[861,28356+21])
                                  ]
                                expression (lambda/matching.ml[862,28383+10]..[862,28383+30])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[862,28383+11]..[862,28383+24])
                                      Pexp_ident "Context.empty" (lambda/matching.ml[862,28383+11]..[862,28383+24])
                                    expression (lambda/matching.ml[862,28383+26]..[862,28383+29])
                                      Pexp_ident "all" (lambda/matching.ml[862,28383+26]..[862,28383+29])
                                  ]
                                Some
                                  expression (lambda/matching.ml[864,28427+10]..[865,28467+23])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[864,28427+14]..[864,28427+20])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[864,28427+14]..[864,28427+15])
                                              Ppat_var "r" (lambda/matching.ml[864,28427+14]..[864,28427+15])
                                            pattern (lambda/matching.ml[864,28427+17]..[864,28427+20])
                                              Ppat_var "rem" (lambda/matching.ml[864,28427+17]..[864,28427+20])
                                          ]
                                        expression (lambda/matching.ml[864,28427+23]..[864,28427+36])
                                          Pexp_apply
                                          expression (lambda/matching.ml[864,28427+23]..[864,28427+30])
                                            Pexp_ident "extract" (lambda/matching.ml[864,28427+23]..[864,28427+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[864,28427+31]..[864,28427+32])
                                                Pexp_ident "i" (lambda/matching.ml[864,28427+31]..[864,28427+32])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[864,28427+33]..[864,28427+36])
                                                Pexp_ident "rem" (lambda/matching.ml[864,28427+33]..[864,28427+36])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[865,28467+10]..[865,28467+23])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[865,28467+11]..[865,28467+12])
                                          Pexp_ident "r" (lambda/matching.ml[865,28467+11]..[865,28467+12])
                                        expression (lambda/matching.ml[865,28467+14]..[865,28467+22])
                                          Pexp_construct "::" (lambda/matching.ml[865,28467+16]..[865,28467+18])
                                          Some
                                            expression (lambda/matching.ml[865,28467+14]..[865,28467+22]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[865,28467+14]..[865,28467+15])
                                                  Pexp_ident "x" (lambda/matching.ml[865,28467+14]..[865,28467+15])
                                                expression (lambda/matching.ml[865,28467+19]..[865,28467+22])
                                                  Pexp_ident "rem" (lambda/matching.ml[865,28467+19]..[865,28467+22])
                                              ]
                                      ]
                      ]
              ]
            structure_item (lambda/matching.ml[867,28492+2]..[870,28575+35])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[867,28492+10]..[867,28492+16])
                    Ppat_var "remove" (lambda/matching.ml[867,28492+10]..[867,28492+16])
                  expression (lambda/matching.ml[867,28492+17]..[870,28575+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[867,28492+17]..[867,28492+18])
                      Ppat_var "i" (lambda/matching.ml[867,28492+17]..[867,28492+18])
                    expression (lambda/matching.ml[867,28492+21]..[870,28575+35])
                      Pexp_function
                      [
                        <case>
                          pattern (lambda/matching.ml[868,28522+6]..[868,28522+8])
                            Ppat_construct "[]" (lambda/matching.ml[868,28522+6]..[868,28522+8])
                            None
                          expression (lambda/matching.ml[868,28522+12]..[868,28522+14])
                            Pexp_construct "[]" (lambda/matching.ml[868,28522+12]..[868,28522+14])
                            None
                        <case>
                          pattern (lambda/matching.ml[869,28537+6]..[869,28537+19])
                            Ppat_construct "::" (lambda/matching.ml[869,28537+13]..[869,28537+15])
                            Some
                              []
                              pattern (lambda/matching.ml[869,28537+6]..[869,28537+19]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[869,28537+6]..[869,28537+12])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[869,28537+7]..[869,28537+8])
                                        Ppat_var "j" (lambda/matching.ml[869,28537+7]..[869,28537+8])
                                      pattern (lambda/matching.ml[869,28537+10]..[869,28537+11])
                                        Ppat_any
                                    ]
                                  pattern (lambda/matching.ml[869,28537+16]..[869,28537+19])
                                    Ppat_var "rem" (lambda/matching.ml[869,28537+16]..[869,28537+19])
                                ]
                          <when>
                            expression (lambda/matching.ml[869,28537+25]..[869,28537+30])
                              Pexp_apply
                              expression (lambda/matching.ml[869,28537+27]..[869,28537+28])
                                Pexp_ident "=" (lambda/matching.ml[869,28537+27]..[869,28537+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[869,28537+25]..[869,28537+26])
                                    Pexp_ident "i" (lambda/matching.ml[869,28537+25]..[869,28537+26])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[869,28537+29]..[869,28537+30])
                                    Pexp_ident "j" (lambda/matching.ml[869,28537+29]..[869,28537+30])
                              ]
                          expression (lambda/matching.ml[869,28537+34]..[869,28537+37])
                            Pexp_ident "rem" (lambda/matching.ml[869,28537+34]..[869,28537+37])
                        <case>
                          pattern (lambda/matching.ml[870,28575+6]..[870,28575+14])
                            Ppat_construct "::" (lambda/matching.ml[870,28575+8]..[870,28575+10])
                            Some
                              []
                              pattern (lambda/matching.ml[870,28575+6]..[870,28575+14]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[870,28575+6]..[870,28575+7])
                                    Ppat_var "x" (lambda/matching.ml[870,28575+6]..[870,28575+7])
                                  pattern (lambda/matching.ml[870,28575+11]..[870,28575+14])
                                    Ppat_var "rem" (lambda/matching.ml[870,28575+11]..[870,28575+14])
                                ]
                          expression (lambda/matching.ml[870,28575+18]..[870,28575+35])
                            Pexp_construct "::" (lambda/matching.ml[870,28575+20]..[870,28575+22])
                            Some
                              expression (lambda/matching.ml[870,28575+18]..[870,28575+35]) ghost
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[870,28575+18]..[870,28575+19])
                                    Pexp_ident "x" (lambda/matching.ml[870,28575+18]..[870,28575+19])
                                  expression (lambda/matching.ml[870,28575+23]..[870,28575+35])
                                    Pexp_apply
                                    expression (lambda/matching.ml[870,28575+23]..[870,28575+29])
                                      Pexp_ident "remove" (lambda/matching.ml[870,28575+23]..[870,28575+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[870,28575+30]..[870,28575+31])
                                          Pexp_ident "i" (lambda/matching.ml[870,28575+30]..[870,28575+31])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[870,28575+32]..[870,28575+35])
                                          Pexp_ident "rem" (lambda/matching.ml[870,28575+32]..[870,28575+35])
                                    ]
                                ]
                      ]
              ]
            structure_item (lambda/matching.ml[872,28612+2]..[876,28673+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[872,28612+6]..[872,28612+11])
                    Ppat_var "empty" (lambda/matching.ml[872,28612+6]..[872,28612+11])
                  expression (lambda/matching.ml[872,28612+14]..[872,28612+16])
                    Pexp_construct "[]" (lambda/matching.ml[872,28612+14]..[872,28612+16])
                    None
                <def>
                  pattern (lambda/matching.ml[874,28630+6]..[874,28630+14])
                    Ppat_var "is_empty" (lambda/matching.ml[874,28630+6]..[874,28630+14])
                  expression (lambda/matching.ml[874,28630+17]..[876,28673+16])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[875,28656+6]..[875,28656+8])
                          Ppat_construct "[]" (lambda/matching.ml[875,28656+6]..[875,28656+8])
                          None
                        expression (lambda/matching.ml[875,28656+12]..[875,28656+16])
                          Pexp_construct "true" (lambda/matching.ml[875,28656+12]..[875,28656+16])
                          None
                      <case>
                        pattern (lambda/matching.ml[876,28673+6]..[876,28673+7])
                          Ppat_any
                        expression (lambda/matching.ml[876,28673+11]..[876,28673+16])
                          Pexp_construct "false" (lambda/matching.ml[876,28673+11]..[876,28673+16])
                          None
                    ]
              ]
            structure_item (lambda/matching.ml[878,28691+2]..[882,28766+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[878,28691+6]..[878,28691+15])
                    Ppat_var "singleton" (lambda/matching.ml[878,28691+6]..[878,28691+15])
                  expression (lambda/matching.ml[878,28691+16]..[882,28766+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[878,28691+16]..[878,28691+17])
                      Ppat_var "i" (lambda/matching.ml[878,28691+16]..[878,28691+17])
                    expression (lambda/matching.ml[878,28691+18]..[882,28766+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[878,28691+18]..[878,28691+21])
                        Ppat_var "ctx" (lambda/matching.ml[878,28691+18]..[878,28691+21])
                      expression (lambda/matching.ml[879,28715+4]..[882,28766+18])
                        Pexp_ifthenelse
                        expression (lambda/matching.ml[879,28715+7]..[879,28715+27])
                          Pexp_apply
                          expression (lambda/matching.ml[879,28715+7]..[879,28715+23])
                            Pexp_ident "Context.is_empty" (lambda/matching.ml[879,28715+7]..[879,28715+23])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[879,28715+24]..[879,28715+27])
                                Pexp_ident "ctx" (lambda/matching.ml[879,28715+24]..[879,28715+27])
                          ]
                        expression (lambda/matching.ml[880,28748+6]..[880,28748+8])
                          Pexp_construct "[]" (lambda/matching.ml[880,28748+6]..[880,28748+8])
                          None
                        Some
                          expression (lambda/matching.ml[882,28766+6]..[882,28766+18])
                            Pexp_construct "::" (lambda/matching.ml[882,28766+8]..[882,28766+18]) ghost
                            Some
                              expression (lambda/matching.ml[882,28766+8]..[882,28766+18]) ghost
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[882,28766+8]..[882,28766+16])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[882,28766+9]..[882,28766+10])
                                        Pexp_ident "i" (lambda/matching.ml[882,28766+9]..[882,28766+10])
                                      expression (lambda/matching.ml[882,28766+12]..[882,28766+15])
                                        Pexp_ident "ctx" (lambda/matching.ml[882,28766+12]..[882,28766+15])
                                    ]
                                  expression (lambda/matching.ml[882,28766+17]..[882,28766+18]) ghost
                                    Pexp_construct "[]" (lambda/matching.ml[882,28766+17]..[882,28766+18]) ghost
                                    None
                                ]
              ]
            structure_item (lambda/matching.ml[884,28786+2]..[898,29133+15])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[884,28786+6]..[884,28786+9])
                    Ppat_var "add" (lambda/matching.ml[884,28786+6]..[884,28786+9])
                  expression (lambda/matching.ml[884,28786+10]..[898,29133+15]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[884,28786+10]..[884,28786+11])
                      Ppat_var "i" (lambda/matching.ml[884,28786+10]..[884,28786+11])
                    expression (lambda/matching.ml[884,28786+12]..[898,29133+15]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[884,28786+12]..[884,28786+15])
                        Ppat_var "ctx" (lambda/matching.ml[884,28786+12]..[884,28786+15])
                      expression (lambda/matching.ml[884,28786+16]..[898,29133+15]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[884,28786+16]..[884,28786+21])
                          Ppat_var "jumps" (lambda/matching.ml[884,28786+16]..[884,28786+21])
                        expression (lambda/matching.ml[885,28810+4]..[898,29133+15])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[885,28810+12]..[885,28810+15])
                                Ppat_var "add" (lambda/matching.ml[885,28810+12]..[885,28810+15])
                              expression (lambda/matching.ml[885,28810+18]..[893,29026+45])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/matching.ml[886,28837+8]..[886,28837+10])
                                      Ppat_construct "[]" (lambda/matching.ml[886,28837+8]..[886,28837+10])
                                      None
                                    expression (lambda/matching.ml[886,28837+14]..[886,28837+26])
                                      Pexp_construct "::" (lambda/matching.ml[886,28837+16]..[886,28837+26]) ghost
                                      Some
                                        expression (lambda/matching.ml[886,28837+16]..[886,28837+26]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[886,28837+16]..[886,28837+24])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[886,28837+17]..[886,28837+18])
                                                  Pexp_ident "i" (lambda/matching.ml[886,28837+17]..[886,28837+18])
                                                expression (lambda/matching.ml[886,28837+20]..[886,28837+23])
                                                  Pexp_ident "ctx" (lambda/matching.ml[886,28837+20]..[886,28837+23])
                                              ]
                                            expression (lambda/matching.ml[886,28837+25]..[886,28837+26]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[886,28837+25]..[886,28837+26]) ghost
                                              None
                                          ]
                                  <case>
                                    pattern (lambda/matching.ml[887,28864+8]..[887,28864+37])
                                      Ppat_alias "all" (lambda/matching.ml[887,28864+34]..[887,28864+37])
                                      pattern (lambda/matching.ml[887,28864+8]..[887,28864+30])
                                        Ppat_construct "::" (lambda/matching.ml[887,28864+24]..[887,28864+26])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[887,28864+8]..[887,28864+30]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[887,28864+8]..[887,28864+23])
                                                Ppat_alias "x" (lambda/matching.ml[887,28864+21]..[887,28864+22])
                                                pattern (lambda/matching.ml[887,28864+9]..[887,28864+17])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[887,28864+10]..[887,28864+11])
                                                      Ppat_var "j" (lambda/matching.ml[887,28864+10]..[887,28864+11])
                                                    pattern (lambda/matching.ml[887,28864+13]..[887,28864+16])
                                                      Ppat_var "qss" (lambda/matching.ml[887,28864+13]..[887,28864+16])
                                                  ]
                                              pattern (lambda/matching.ml[887,28864+27]..[887,28864+30])
                                                Ppat_var "rem" (lambda/matching.ml[887,28864+27]..[887,28864+30])
                                            ]
                                    expression (lambda/matching.ml[888,28905+10]..[893,29026+45])
                                      Pexp_ifthenelse
                                      expression (lambda/matching.ml[888,28905+13]..[888,28905+18])
                                        Pexp_apply
                                        expression (lambda/matching.ml[888,28905+15]..[888,28905+16])
                                          Pexp_ident ">" (lambda/matching.ml[888,28905+15]..[888,28905+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[888,28905+13]..[888,28905+14])
                                              Pexp_ident "j" (lambda/matching.ml[888,28905+13]..[888,28905+14])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[888,28905+17]..[888,28905+18])
                                              Pexp_ident "i" (lambda/matching.ml[888,28905+17]..[888,28905+18])
                                        ]
                                      expression (lambda/matching.ml[889,28929+12]..[889,28929+24])
                                        Pexp_construct "::" (lambda/matching.ml[889,28929+14]..[889,28929+16])
                                        Some
                                          expression (lambda/matching.ml[889,28929+12]..[889,28929+24]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[889,28929+12]..[889,28929+13])
                                                Pexp_ident "x" (lambda/matching.ml[889,28929+12]..[889,28929+13])
                                              expression (lambda/matching.ml[889,28929+17]..[889,28929+24])
                                                Pexp_apply
                                                expression (lambda/matching.ml[889,28929+17]..[889,28929+20])
                                                  Pexp_ident "add" (lambda/matching.ml[889,28929+17]..[889,28929+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[889,28929+21]..[889,28929+24])
                                                      Pexp_ident "rem" (lambda/matching.ml[889,28929+21]..[889,28929+24])
                                                ]
                                            ]
                                      Some
                                        expression (lambda/matching.ml[890,28954+15]..[893,29026+45])
                                          Pexp_ifthenelse
                                          expression (lambda/matching.ml[890,28954+18]..[890,28954+23])
                                            Pexp_apply
                                            expression (lambda/matching.ml[890,28954+20]..[890,28954+21])
                                              Pexp_ident "<" (lambda/matching.ml[890,28954+20]..[890,28954+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[890,28954+18]..[890,28954+19])
                                                  Pexp_ident "j" (lambda/matching.ml[890,28954+18]..[890,28954+19])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[890,28954+22]..[890,28954+23])
                                                  Pexp_ident "i" (lambda/matching.ml[890,28954+22]..[890,28954+23])
                                            ]
                                          expression (lambda/matching.ml[891,28983+12]..[891,28983+27])
                                            Pexp_construct "::" (lambda/matching.ml[891,28983+21]..[891,28983+23])
                                            Some
                                              expression (lambda/matching.ml[891,28983+12]..[891,28983+27]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[891,28983+12]..[891,28983+20])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[891,28983+13]..[891,28983+14])
                                                        Pexp_ident "i" (lambda/matching.ml[891,28983+13]..[891,28983+14])
                                                      expression (lambda/matching.ml[891,28983+16]..[891,28983+19])
                                                        Pexp_ident "ctx" (lambda/matching.ml[891,28983+16]..[891,28983+19])
                                                    ]
                                                  expression (lambda/matching.ml[891,28983+24]..[891,28983+27])
                                                    Pexp_ident "all" (lambda/matching.ml[891,28983+24]..[891,28983+27])
                                                ]
                                          Some
                                            expression (lambda/matching.ml[893,29026+12]..[893,29026+45])
                                              Pexp_construct "::" (lambda/matching.ml[893,29026+39]..[893,29026+41])
                                              Some
                                                expression (lambda/matching.ml[893,29026+12]..[893,29026+45]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[893,29026+12]..[893,29026+38])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[893,29026+13]..[893,29026+14])
                                                          Pexp_ident "i" (lambda/matching.ml[893,29026+13]..[893,29026+14])
                                                        expression (lambda/matching.ml[893,29026+16]..[893,29026+37])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[893,29026+16]..[893,29026+29])
                                                            Pexp_ident "Context.union" (lambda/matching.ml[893,29026+16]..[893,29026+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[893,29026+30]..[893,29026+33])
                                                                Pexp_ident "ctx" (lambda/matching.ml[893,29026+30]..[893,29026+33])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[893,29026+34]..[893,29026+37])
                                                                Pexp_ident "qss" (lambda/matching.ml[893,29026+34]..[893,29026+37])
                                                          ]
                                                      ]
                                                    expression (lambda/matching.ml[893,29026+42]..[893,29026+45])
                                                      Pexp_ident "rem" (lambda/matching.ml[893,29026+42]..[893,29026+45])
                                                  ]
                                ]
                          ]
                          expression (lambda/matching.ml[895,29079+4]..[898,29133+15])
                            Pexp_ifthenelse
                            expression (lambda/matching.ml[895,29079+7]..[895,29079+27])
                              Pexp_apply
                              expression (lambda/matching.ml[895,29079+7]..[895,29079+23])
                                Pexp_ident "Context.is_empty" (lambda/matching.ml[895,29079+7]..[895,29079+23])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[895,29079+24]..[895,29079+27])
                                    Pexp_ident "ctx" (lambda/matching.ml[895,29079+24]..[895,29079+27])
                              ]
                            expression (lambda/matching.ml[896,29112+6]..[896,29112+11])
                              Pexp_ident "jumps" (lambda/matching.ml[896,29112+6]..[896,29112+11])
                            Some
                              expression (lambda/matching.ml[898,29133+6]..[898,29133+15])
                                Pexp_apply
                                expression (lambda/matching.ml[898,29133+6]..[898,29133+9])
                                  Pexp_ident "add" (lambda/matching.ml[898,29133+6]..[898,29133+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[898,29133+10]..[898,29133+15])
                                      Pexp_ident "jumps" (lambda/matching.ml[898,29133+10]..[898,29133+15])
                                ]
              ]
            structure_item (lambda/matching.ml[900,29150+2]..[910,29473+31])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[900,29150+10]..[900,29150+15])
                    Ppat_var "union" (lambda/matching.ml[900,29150+10]..[900,29150+15])
                  expression (lambda/matching.ml[900,29150+16]..[910,29473+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[900,29150+16]..[900,29150+26])
                      Ppat_constraint
                      pattern (lambda/matching.ml[900,29150+17]..[900,29150+21])
                        Ppat_var "env1" (lambda/matching.ml[900,29150+17]..[900,29150+21])
                      core_type (lambda/matching.ml[900,29150+24]..[900,29150+25])
                        Ptyp_constr "t" (lambda/matching.ml[900,29150+24]..[900,29150+25])
                        []
                    expression (lambda/matching.ml[900,29150+27]..[910,29473+31]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[900,29150+27]..[900,29150+31])
                        Ppat_var "env2" (lambda/matching.ml[900,29150+27]..[900,29150+31])
                      expression (lambda/matching.ml[901,29184+4]..[910,29473+31])
                        Pexp_match
                        expression (lambda/matching.ml[901,29184+10]..[901,29184+22])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[901,29184+11]..[901,29184+15])
                              Pexp_ident "env1" (lambda/matching.ml[901,29184+11]..[901,29184+15])
                            expression (lambda/matching.ml[901,29184+17]..[901,29184+21])
                              Pexp_ident "env2" (lambda/matching.ml[901,29184+17]..[901,29184+21])
                          ]
                        [
                          <case>
                            pattern (lambda/matching.ml[902,29212+6]..[902,29212+11])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[902,29212+6]..[902,29212+8])
                                  Ppat_construct "[]" (lambda/matching.ml[902,29212+6]..[902,29212+8])
                                  None
                                pattern (lambda/matching.ml[902,29212+10]..[902,29212+11])
                                  Ppat_any
                              ]
                            expression (lambda/matching.ml[902,29212+15]..[902,29212+19])
                              Pexp_ident "env2" (lambda/matching.ml[902,29212+15]..[902,29212+19])
                          <case>
                            pattern (lambda/matching.ml[903,29232+6]..[903,29232+11])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[903,29232+6]..[903,29232+7])
                                  Ppat_any
                                pattern (lambda/matching.ml[903,29232+9]..[903,29232+11])
                                  Ppat_construct "[]" (lambda/matching.ml[903,29232+9]..[903,29232+11])
                                  None
                              ]
                            expression (lambda/matching.ml[903,29232+15]..[903,29232+19])
                              Pexp_ident "env1" (lambda/matching.ml[903,29232+15]..[903,29232+19])
                          <case>
                            pattern (lambda/matching.ml[904,29252+6]..[904,29252+60])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[904,29252+6]..[904,29252+32])
                                  Ppat_construct "::" (lambda/matching.ml[904,29252+25]..[904,29252+27])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[904,29252+6]..[904,29252+32]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[904,29252+6]..[904,29252+24])
                                          Ppat_alias "x1" (lambda/matching.ml[904,29252+21]..[904,29252+23])
                                          pattern (lambda/matching.ml[904,29252+7]..[904,29252+17])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[904,29252+8]..[904,29252+10])
                                                Ppat_var "i1" (lambda/matching.ml[904,29252+8]..[904,29252+10])
                                              pattern (lambda/matching.ml[904,29252+12]..[904,29252+16])
                                                Ppat_var "pss1" (lambda/matching.ml[904,29252+12]..[904,29252+16])
                                            ]
                                        pattern (lambda/matching.ml[904,29252+28]..[904,29252+32])
                                          Ppat_var "rem1" (lambda/matching.ml[904,29252+28]..[904,29252+32])
                                      ]
                                pattern (lambda/matching.ml[904,29252+34]..[904,29252+60])
                                  Ppat_construct "::" (lambda/matching.ml[904,29252+53]..[904,29252+55])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[904,29252+34]..[904,29252+60]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[904,29252+34]..[904,29252+52])
                                          Ppat_alias "x2" (lambda/matching.ml[904,29252+49]..[904,29252+51])
                                          pattern (lambda/matching.ml[904,29252+35]..[904,29252+45])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[904,29252+36]..[904,29252+38])
                                                Ppat_var "i2" (lambda/matching.ml[904,29252+36]..[904,29252+38])
                                              pattern (lambda/matching.ml[904,29252+40]..[904,29252+44])
                                                Ppat_var "pss2" (lambda/matching.ml[904,29252+40]..[904,29252+44])
                                            ]
                                        pattern (lambda/matching.ml[904,29252+56]..[904,29252+60])
                                          Ppat_var "rem2" (lambda/matching.ml[904,29252+56]..[904,29252+60])
                                      ]
                              ]
                            expression (lambda/matching.ml[905,29316+8]..[910,29473+31])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[905,29316+11]..[905,29316+18])
                                Pexp_apply
                                expression (lambda/matching.ml[905,29316+14]..[905,29316+15])
                                  Pexp_ident "=" (lambda/matching.ml[905,29316+14]..[905,29316+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[905,29316+11]..[905,29316+13])
                                      Pexp_ident "i1" (lambda/matching.ml[905,29316+11]..[905,29316+13])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[905,29316+16]..[905,29316+18])
                                      Pexp_ident "i2" (lambda/matching.ml[905,29316+16]..[905,29316+18])
                                ]
                              expression (lambda/matching.ml[906,29340+10]..[906,29340+58])
                                Pexp_construct "::" (lambda/matching.ml[906,29340+40]..[906,29340+42])
                                Some
                                  expression (lambda/matching.ml[906,29340+10]..[906,29340+58]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[906,29340+10]..[906,29340+39])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[906,29340+11]..[906,29340+13])
                                            Pexp_ident "i1" (lambda/matching.ml[906,29340+11]..[906,29340+13])
                                          expression (lambda/matching.ml[906,29340+15]..[906,29340+38])
                                            Pexp_apply
                                            expression (lambda/matching.ml[906,29340+15]..[906,29340+28])
                                              Pexp_ident "Context.union" (lambda/matching.ml[906,29340+15]..[906,29340+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[906,29340+29]..[906,29340+33])
                                                  Pexp_ident "pss1" (lambda/matching.ml[906,29340+29]..[906,29340+33])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[906,29340+34]..[906,29340+38])
                                                  Pexp_ident "pss2" (lambda/matching.ml[906,29340+34]..[906,29340+38])
                                            ]
                                        ]
                                      expression (lambda/matching.ml[906,29340+43]..[906,29340+58])
                                        Pexp_apply
                                        expression (lambda/matching.ml[906,29340+43]..[906,29340+48])
                                          Pexp_ident "union" (lambda/matching.ml[906,29340+43]..[906,29340+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[906,29340+49]..[906,29340+53])
                                              Pexp_ident "rem1" (lambda/matching.ml[906,29340+49]..[906,29340+53])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[906,29340+54]..[906,29340+58])
                                              Pexp_ident "rem2" (lambda/matching.ml[906,29340+54]..[906,29340+58])
                                        ]
                                    ]
                              Some
                                expression (lambda/matching.ml[907,29399+13]..[910,29473+31])
                                  Pexp_ifthenelse
                                  expression (lambda/matching.ml[907,29399+16]..[907,29399+23])
                                    Pexp_apply
                                    expression (lambda/matching.ml[907,29399+19]..[907,29399+20])
                                      Pexp_ident ">" (lambda/matching.ml[907,29399+19]..[907,29399+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[907,29399+16]..[907,29399+18])
                                          Pexp_ident "i1" (lambda/matching.ml[907,29399+16]..[907,29399+18])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[907,29399+21]..[907,29399+23])
                                          Pexp_ident "i2" (lambda/matching.ml[907,29399+21]..[907,29399+23])
                                    ]
                                  expression (lambda/matching.ml[908,29428+10]..[908,29428+31])
                                    Pexp_construct "::" (lambda/matching.ml[908,29428+13]..[908,29428+15])
                                    Some
                                      expression (lambda/matching.ml[908,29428+10]..[908,29428+31]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[908,29428+10]..[908,29428+12])
                                            Pexp_ident "x1" (lambda/matching.ml[908,29428+10]..[908,29428+12])
                                          expression (lambda/matching.ml[908,29428+16]..[908,29428+31])
                                            Pexp_apply
                                            expression (lambda/matching.ml[908,29428+16]..[908,29428+21])
                                              Pexp_ident "union" (lambda/matching.ml[908,29428+16]..[908,29428+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[908,29428+22]..[908,29428+26])
                                                  Pexp_ident "rem1" (lambda/matching.ml[908,29428+22]..[908,29428+26])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[908,29428+27]..[908,29428+31])
                                                  Pexp_ident "env2" (lambda/matching.ml[908,29428+27]..[908,29428+31])
                                            ]
                                        ]
                                  Some
                                    expression (lambda/matching.ml[910,29473+10]..[910,29473+31])
                                      Pexp_construct "::" (lambda/matching.ml[910,29473+13]..[910,29473+15])
                                      Some
                                        expression (lambda/matching.ml[910,29473+10]..[910,29473+31]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[910,29473+10]..[910,29473+12])
                                              Pexp_ident "x2" (lambda/matching.ml[910,29473+10]..[910,29473+12])
                                            expression (lambda/matching.ml[910,29473+16]..[910,29473+31])
                                              Pexp_apply
                                              expression (lambda/matching.ml[910,29473+16]..[910,29473+21])
                                                Pexp_ident "union" (lambda/matching.ml[910,29473+16]..[910,29473+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[910,29473+22]..[910,29473+26])
                                                    Pexp_ident "env1" (lambda/matching.ml[910,29473+22]..[910,29473+26])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[910,29473+27]..[910,29473+31])
                                                    Pexp_ident "rem2" (lambda/matching.ml[910,29473+27]..[910,29473+31])
                                              ]
                                          ]
                        ]
              ]
            structure_item (lambda/matching.ml[912,29506+2]..[914,29591+18])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[912,29506+10]..[912,29506+15])
                    Ppat_var "merge" (lambda/matching.ml[912,29506+10]..[912,29506+15])
                  expression (lambda/matching.ml[912,29506+18]..[914,29591+18])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[913,29533+6]..[913,29533+25])
                          Ppat_construct "::" (lambda/matching.ml[913,29533+11]..[913,29533+13])
                          Some
                            []
                            pattern (lambda/matching.ml[913,29533+6]..[913,29533+25]) ghost
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[913,29533+6]..[913,29533+10])
                                  Ppat_var "env1" (lambda/matching.ml[913,29533+6]..[913,29533+10])
                                pattern (lambda/matching.ml[913,29533+14]..[913,29533+25])
                                  Ppat_construct "::" (lambda/matching.ml[913,29533+19]..[913,29533+21])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[913,29533+14]..[913,29533+25]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[913,29533+14]..[913,29533+18])
                                          Ppat_var "env2" (lambda/matching.ml[913,29533+14]..[913,29533+18])
                                        pattern (lambda/matching.ml[913,29533+22]..[913,29533+25])
                                          Ppat_var "rem" (lambda/matching.ml[913,29533+22]..[913,29533+25])
                                      ]
                              ]
                        expression (lambda/matching.ml[913,29533+29]..[913,29533+57])
                          Pexp_construct "::" (lambda/matching.ml[913,29533+45]..[913,29533+47])
                          Some
                            expression (lambda/matching.ml[913,29533+29]..[913,29533+57]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[913,29533+29]..[913,29533+44])
                                  Pexp_apply
                                  expression (lambda/matching.ml[913,29533+29]..[913,29533+34])
                                    Pexp_ident "union" (lambda/matching.ml[913,29533+29]..[913,29533+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[913,29533+35]..[913,29533+39])
                                        Pexp_ident "env1" (lambda/matching.ml[913,29533+35]..[913,29533+39])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[913,29533+40]..[913,29533+44])
                                        Pexp_ident "env2" (lambda/matching.ml[913,29533+40]..[913,29533+44])
                                  ]
                                expression (lambda/matching.ml[913,29533+48]..[913,29533+57])
                                  Pexp_apply
                                  expression (lambda/matching.ml[913,29533+48]..[913,29533+53])
                                    Pexp_ident "merge" (lambda/matching.ml[913,29533+48]..[913,29533+53])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[913,29533+54]..[913,29533+57])
                                        Pexp_ident "rem" (lambda/matching.ml[913,29533+54]..[913,29533+57])
                                  ]
                              ]
                      <case>
                        pattern (lambda/matching.ml[914,29591+6]..[914,29591+10])
                          Ppat_var "envs" (lambda/matching.ml[914,29591+6]..[914,29591+10])
                        expression (lambda/matching.ml[914,29591+14]..[914,29591+18])
                          Pexp_ident "envs" (lambda/matching.ml[914,29591+14]..[914,29591+18])
                    ]
              ]
            structure_item (lambda/matching.ml[916,29611+2]..[920,29691+30])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/matching.ml[916,29611+10]..[916,29611+16])
                    Ppat_var "unions" (lambda/matching.ml[916,29611+10]..[916,29611+16])
                  expression (lambda/matching.ml[916,29611+17]..[920,29691+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[916,29611+17]..[916,29611+21])
                      Ppat_var "envs" (lambda/matching.ml[916,29611+17]..[916,29611+21])
                    expression (lambda/matching.ml[917,29635+4]..[920,29691+30])
                      Pexp_match
                      expression (lambda/matching.ml[917,29635+10]..[917,29635+14])
                        Pexp_ident "envs" (lambda/matching.ml[917,29635+10]..[917,29635+14])
                      [
                        <case>
                          pattern (lambda/matching.ml[918,29655+6]..[918,29655+8])
                            Ppat_construct "[]" (lambda/matching.ml[918,29655+6]..[918,29655+8])
                            None
                          expression (lambda/matching.ml[918,29655+12]..[918,29655+14])
                            Pexp_construct "[]" (lambda/matching.ml[918,29655+12]..[918,29655+14])
                            None
                        <case>
                          pattern (lambda/matching.ml[919,29670+6]..[919,29670+13])
                            Ppat_construct "::" (lambda/matching.ml[919,29670+8]..[919,29670+13]) ghost
                            Some
                              []
                              pattern (lambda/matching.ml[919,29670+8]..[919,29670+13]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[919,29670+8]..[919,29670+11])
                                    Ppat_var "env" (lambda/matching.ml[919,29670+8]..[919,29670+11])
                                  pattern (lambda/matching.ml[919,29670+12]..[919,29670+13]) ghost
                                    Ppat_construct "[]" (lambda/matching.ml[919,29670+12]..[919,29670+13]) ghost
                                    None
                                ]
                          expression (lambda/matching.ml[919,29670+17]..[919,29670+20])
                            Pexp_ident "env" (lambda/matching.ml[919,29670+17]..[919,29670+20])
                        <case>
                          pattern (lambda/matching.ml[920,29691+6]..[920,29691+7])
                            Ppat_any
                          expression (lambda/matching.ml[920,29691+11]..[920,29691+30])
                            Pexp_apply
                            expression (lambda/matching.ml[920,29691+11]..[920,29691+17])
                              Pexp_ident "unions" (lambda/matching.ml[920,29691+11]..[920,29691+17])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[920,29691+18]..[920,29691+30])
                                  Pexp_apply
                                  expression (lambda/matching.ml[920,29691+19]..[920,29691+24])
                                    Pexp_ident "merge" (lambda/matching.ml[920,29691+19]..[920,29691+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[920,29691+25]..[920,29691+29])
                                        Pexp_ident "envs" (lambda/matching.ml[920,29691+25]..[920,29691+29])
                                  ]
                            ]
                      ]
              ]
            structure_item (lambda/matching.ml[922,29723+2]..[922,29723+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[922,29723+6]..[922,29723+9])
                    Ppat_var "map" (lambda/matching.ml[922,29723+6]..[922,29723+9])
                  expression (lambda/matching.ml[922,29723+10]..[922,29723+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[922,29723+10]..[922,29723+11])
                      Ppat_var "f" (lambda/matching.ml[922,29723+10]..[922,29723+11])
                    expression (lambda/matching.ml[922,29723+12]..[922,29723+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[922,29723+12]..[922,29723+15])
                        Ppat_var "env" (lambda/matching.ml[922,29723+12]..[922,29723+15])
                      expression (lambda/matching.ml[922,29723+18]..[922,29723+59])
                        Pexp_apply
                        expression (lambda/matching.ml[922,29723+18]..[922,29723+26])
                          Pexp_ident "List.map" (lambda/matching.ml[922,29723+18]..[922,29723+26])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[922,29723+27]..[922,29723+55])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[922,29723+32]..[922,29723+40])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[922,29723+33]..[922,29723+34])
                                    Ppat_var "i" (lambda/matching.ml[922,29723+33]..[922,29723+34])
                                  pattern (lambda/matching.ml[922,29723+36]..[922,29723+39])
                                    Ppat_var "pss" (lambda/matching.ml[922,29723+36]..[922,29723+39])
                                ]
                              expression (lambda/matching.ml[922,29723+44]..[922,29723+54])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[922,29723+45]..[922,29723+46])
                                    Pexp_ident "i" (lambda/matching.ml[922,29723+45]..[922,29723+46])
                                  expression (lambda/matching.ml[922,29723+48]..[922,29723+53])
                                    Pexp_apply
                                    expression (lambda/matching.ml[922,29723+48]..[922,29723+49])
                                      Pexp_ident "f" (lambda/matching.ml[922,29723+48]..[922,29723+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[922,29723+50]..[922,29723+53])
                                          Pexp_ident "pss" (lambda/matching.ml[922,29723+50]..[922,29723+53])
                                    ]
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[922,29723+56]..[922,29723+59])
                              Pexp_ident "env" (lambda/matching.ml[922,29723+56]..[922,29723+59])
                        ]
              ]
          ]
        module_type (lambda/matching.ml[824,27661+15]..[846,28018+3])
          Pmty_signature
          [
            signature_item (lambda/matching.ml[825,27680+2]..[825,27680+8])
              Psig_type Rec
              [
                type_declaration "t" (lambda/matching.ml[825,27680+7]..[825,27680+8]) (lambda/matching.ml[825,27680+2]..[825,27680+8])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lambda/matching.ml[827,27690+2]..[827,27690+26])
              Psig_value
              value_description "is_empty" (lambda/matching.ml[827,27690+6]..[827,27690+14]) (lambda/matching.ml[827,27690+2]..[827,27690+26])
                core_type (lambda/matching.ml[827,27690+17]..[827,27690+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[827,27690+17]..[827,27690+18])
                    Ptyp_constr "t" (lambda/matching.ml[827,27690+17]..[827,27690+18])
                    []
                  core_type (lambda/matching.ml[827,27690+22]..[827,27690+26])
                    Ptyp_constr "bool" (lambda/matching.ml[827,27690+22]..[827,27690+26])
                    []
                []
            signature_item (lambda/matching.ml[829,27718+2]..[829,27718+15])
              Psig_value
              value_description "empty" (lambda/matching.ml[829,27718+6]..[829,27718+11]) (lambda/matching.ml[829,27718+2]..[829,27718+15])
                core_type (lambda/matching.ml[829,27718+14]..[829,27718+15])
                  Ptyp_constr "t" (lambda/matching.ml[829,27718+14]..[829,27718+15])
                  []
                []
            signature_item (lambda/matching.ml[831,27735+2]..[831,27735+39])
              Psig_value
              value_description "singleton" (lambda/matching.ml[831,27735+6]..[831,27735+15]) (lambda/matching.ml[831,27735+2]..[831,27735+39])
                core_type (lambda/matching.ml[831,27735+18]..[831,27735+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[831,27735+18]..[831,27735+21])
                    Ptyp_constr "int" (lambda/matching.ml[831,27735+18]..[831,27735+21])
                    []
                  core_type (lambda/matching.ml[831,27735+25]..[831,27735+39])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[831,27735+25]..[831,27735+34])
                      Ptyp_constr "Context.t" (lambda/matching.ml[831,27735+25]..[831,27735+34])
                      []
                    core_type (lambda/matching.ml[831,27735+38]..[831,27735+39])
                      Ptyp_constr "t" (lambda/matching.ml[831,27735+38]..[831,27735+39])
                      []
                []
            signature_item (lambda/matching.ml[833,27776+2]..[833,27776+38])
              Psig_value
              value_description "add" (lambda/matching.ml[833,27776+6]..[833,27776+9]) (lambda/matching.ml[833,27776+2]..[833,27776+38])
                core_type (lambda/matching.ml[833,27776+12]..[833,27776+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[833,27776+12]..[833,27776+15])
                    Ptyp_constr "int" (lambda/matching.ml[833,27776+12]..[833,27776+15])
                    []
                  core_type (lambda/matching.ml[833,27776+19]..[833,27776+38])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[833,27776+19]..[833,27776+28])
                      Ptyp_constr "Context.t" (lambda/matching.ml[833,27776+19]..[833,27776+28])
                      []
                    core_type (lambda/matching.ml[833,27776+32]..[833,27776+38])
                      Ptyp_arrow
                      Nolabel
                      core_type (lambda/matching.ml[833,27776+32]..[833,27776+33])
                        Ptyp_constr "t" (lambda/matching.ml[833,27776+32]..[833,27776+33])
                        []
                      core_type (lambda/matching.ml[833,27776+37]..[833,27776+38])
                        Ptyp_constr "t" (lambda/matching.ml[833,27776+37]..[833,27776+38])
                        []
                []
            signature_item (lambda/matching.ml[835,27816+2]..[835,27816+25])
              Psig_value
              value_description "union" (lambda/matching.ml[835,27816+6]..[835,27816+11]) (lambda/matching.ml[835,27816+2]..[835,27816+25])
                core_type (lambda/matching.ml[835,27816+14]..[835,27816+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[835,27816+14]..[835,27816+15])
                    Ptyp_constr "t" (lambda/matching.ml[835,27816+14]..[835,27816+15])
                    []
                  core_type (lambda/matching.ml[835,27816+19]..[835,27816+25])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[835,27816+19]..[835,27816+20])
                      Ptyp_constr "t" (lambda/matching.ml[835,27816+19]..[835,27816+20])
                      []
                    core_type (lambda/matching.ml[835,27816+24]..[835,27816+25])
                      Ptyp_constr "t" (lambda/matching.ml[835,27816+24]..[835,27816+25])
                      []
                []
            signature_item (lambda/matching.ml[837,27843+2]..[837,27843+26])
              Psig_value
              value_description "unions" (lambda/matching.ml[837,27843+6]..[837,27843+12]) (lambda/matching.ml[837,27843+2]..[837,27843+26])
                core_type (lambda/matching.ml[837,27843+15]..[837,27843+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[837,27843+15]..[837,27843+21])
                    Ptyp_constr "list" (lambda/matching.ml[837,27843+17]..[837,27843+21])
                    [
                      core_type (lambda/matching.ml[837,27843+15]..[837,27843+16])
                        Ptyp_constr "t" (lambda/matching.ml[837,27843+15]..[837,27843+16])
                        []
                    ]
                  core_type (lambda/matching.ml[837,27843+25]..[837,27843+26])
                    Ptyp_constr "t" (lambda/matching.ml[837,27843+25]..[837,27843+26])
                    []
                []
            signature_item (lambda/matching.ml[839,27871+2]..[839,27871+46])
              Psig_value
              value_description "map" (lambda/matching.ml[839,27871+6]..[839,27871+9]) (lambda/matching.ml[839,27871+2]..[839,27871+46])
                core_type (lambda/matching.ml[839,27871+12]..[839,27871+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[839,27871+13]..[839,27871+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[839,27871+13]..[839,27871+22])
                      Ptyp_constr "Context.t" (lambda/matching.ml[839,27871+13]..[839,27871+22])
                      []
                    core_type (lambda/matching.ml[839,27871+26]..[839,27871+35])
                      Ptyp_constr "Context.t" (lambda/matching.ml[839,27871+26]..[839,27871+35])
                      []
                  core_type (lambda/matching.ml[839,27871+40]..[839,27871+46])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[839,27871+40]..[839,27871+41])
                      Ptyp_constr "t" (lambda/matching.ml[839,27871+40]..[839,27871+41])
                      []
                    core_type (lambda/matching.ml[839,27871+45]..[839,27871+46])
                      Ptyp_constr "t" (lambda/matching.ml[839,27871+45]..[839,27871+46])
                      []
                []
            signature_item (lambda/matching.ml[841,27919+2]..[841,27919+28])
              Psig_value
              value_description "remove" (lambda/matching.ml[841,27919+6]..[841,27919+12]) (lambda/matching.ml[841,27919+2]..[841,27919+28])
                core_type (lambda/matching.ml[841,27919+15]..[841,27919+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[841,27919+15]..[841,27919+18])
                    Ptyp_constr "int" (lambda/matching.ml[841,27919+15]..[841,27919+18])
                    []
                  core_type (lambda/matching.ml[841,27919+22]..[841,27919+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[841,27919+22]..[841,27919+23])
                      Ptyp_constr "t" (lambda/matching.ml[841,27919+22]..[841,27919+23])
                      []
                    core_type (lambda/matching.ml[841,27919+27]..[841,27919+28])
                      Ptyp_constr "t" (lambda/matching.ml[841,27919+27]..[841,27919+28])
                      []
                []
            signature_item (lambda/matching.ml[843,27949+2]..[843,27949+41])
              Psig_value
              value_description "extract" (lambda/matching.ml[843,27949+6]..[843,27949+13]) (lambda/matching.ml[843,27949+2]..[843,27949+41])
                core_type (lambda/matching.ml[843,27949+16]..[843,27949+41])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[843,27949+16]..[843,27949+19])
                    Ptyp_constr "int" (lambda/matching.ml[843,27949+16]..[843,27949+19])
                    []
                  core_type (lambda/matching.ml[843,27949+23]..[843,27949+41])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/matching.ml[843,27949+23]..[843,27949+24])
                      Ptyp_constr "t" (lambda/matching.ml[843,27949+23]..[843,27949+24])
                      []
                    core_type (lambda/matching.ml[843,27949+28]..[843,27949+41])
                      Ptyp_tuple
                      [
                        core_type (lambda/matching.ml[843,27949+28]..[843,27949+37])
                          Ptyp_constr "Context.t" (lambda/matching.ml[843,27949+28]..[843,27949+37])
                          []
                        core_type (lambda/matching.ml[843,27949+40]..[843,27949+41])
                          Ptyp_constr "t" (lambda/matching.ml[843,27949+40]..[843,27949+41])
                          []
                      ]
                []
            signature_item (lambda/matching.ml[845,27992+2]..[845,27992+25])
              Psig_value
              value_description "eprintf" (lambda/matching.ml[845,27992+6]..[845,27992+13]) (lambda/matching.ml[845,27992+2]..[845,27992+25])
                core_type (lambda/matching.ml[845,27992+16]..[845,27992+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/matching.ml[845,27992+16]..[845,27992+17])
                    Ptyp_constr "t" (lambda/matching.ml[845,27992+16]..[845,27992+17])
                    []
                  core_type (lambda/matching.ml[845,27992+21]..[845,27992+25])
                    Ptyp_constr "unit" (lambda/matching.ml[845,27992+21]..[845,27992+25])
                    []
                []
          ]
  structure_item (lambda/matching.ml[927,29835+0]..[936,30255+1])
    Pstr_type Rec
    [
      type_declaration "pattern_matching" (lambda/matching.ml[927,29835+10]..[927,29835+26]) (lambda/matching.ml[927,29835+0]..[936,30255+1])
        ptype_params =
          [
            core_type (lambda/matching.ml[927,29835+5]..[927,29835+9])
              Ptyp_var row
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[928,29866+2]..[928,29866+28])
                Mutable
                "cases" (lambda/matching.ml[928,29866+10]..[928,29866+15])                core_type (lambda/matching.ml[928,29866+18]..[928,29866+27])
                  Ptyp_constr "list" (lambda/matching.ml[928,29866+23]..[928,29866+27])
                  [
                    core_type (lambda/matching.ml[928,29866+18]..[928,29866+22])
                      Ptyp_var row
                  ]
              (lambda/matching.ml[929,29895+2]..[929,29895+34])
                attribute "ocaml.doc"
                  [
                    structure_item (lambda/matching.ml[930,29930+6]..[934,30187+33])
                      Pstr_eval
                      expression (lambda/matching.ml[930,29930+6]..[934,30187+33])
                        Pexp_constant PConst_string(" args are not just Ident.t in at least the following cases:\n        - when matching the arguments of a constructor,\n          direct field projections are used (make_field_args)\n        - with lazy patterns args can be of the form [Lazy.force ...]\n          (inline_lazy_force). ",(lambda/matching.ml[930,29930+6]..[934,30187+33]),None)
                  ]
                Immutable
                "args" (lambda/matching.ml[929,29895+2]..[929,29895+6])                core_type (lambda/matching.ml[929,29895+9]..[929,29895+33])
                  Ptyp_constr "list" (lambda/matching.ml[929,29895+29]..[929,29895+33])
                  [
                    core_type (lambda/matching.ml[929,29895+10]..[929,29895+27])
                      Ptyp_tuple
                      [
                        core_type (lambda/matching.ml[929,29895+10]..[929,29895+16])
                          Ptyp_constr "lambda" (lambda/matching.ml[929,29895+10]..[929,29895+16])
                          []
                        core_type (lambda/matching.ml[929,29895+19]..[929,29895+27])
                          Ptyp_constr "let_kind" (lambda/matching.ml[929,29895+19]..[929,29895+27])
                          []
                      ]
                  ]
              (lambda/matching.ml[935,30221+2]..[935,30221+33])
                Immutable
                "default" (lambda/matching.ml[935,30221+2]..[935,30221+9])                core_type (lambda/matching.ml[935,30221+12]..[935,30221+33])
                  Ptyp_constr "Default_environment.t" (lambda/matching.ml[935,30221+12]..[935,30221+33])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[938,30258+0]..[943,30396+1])
    Pstr_type Rec
    [
      type_declaration "handler" (lambda/matching.ml[938,30258+5]..[938,30258+12]) (lambda/matching.ml[938,30258+0]..[943,30396+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[939,30275+2]..[939,30275+22])
                Immutable
                "provenance" (lambda/matching.ml[939,30275+2]..[939,30275+12])                core_type (lambda/matching.ml[939,30275+15]..[939,30275+21])
                  Ptyp_constr "matrix" (lambda/matching.ml[939,30275+15]..[939,30275+21])
                  []
              (lambda/matching.ml[940,30298+2]..[940,30298+13])
                Immutable
                "exit" (lambda/matching.ml[940,30298+2]..[940,30298+6])                core_type (lambda/matching.ml[940,30298+9]..[940,30298+12])
                  Ptyp_constr "int" (lambda/matching.ml[940,30298+9]..[940,30298+12])
                  []
              (lambda/matching.ml[941,30312+2]..[941,30312+44])
                Immutable
                "vars" (lambda/matching.ml[941,30312+2]..[941,30312+6])                core_type (lambda/matching.ml[941,30312+9]..[941,30312+43])
                  Ptyp_constr "list" (lambda/matching.ml[941,30312+39]..[941,30312+43])
                  [
                    core_type (lambda/matching.ml[941,30312+10]..[941,30312+37])
                      Ptyp_tuple
                      [
                        core_type (lambda/matching.ml[941,30312+10]..[941,30312+17])
                          Ptyp_constr "Ident.t" (lambda/matching.ml[941,30312+10]..[941,30312+17])
                          []
                        core_type (lambda/matching.ml[941,30312+20]..[941,30312+37])
                          Ptyp_constr "Lambda.value_kind" (lambda/matching.ml[941,30312+20]..[941,30312+37])
                          []
                      ]
                  ]
              (lambda/matching.ml[942,30357+2]..[942,30357+38])
                Immutable
                "pm" (lambda/matching.ml[942,30357+2]..[942,30357+4])                core_type (lambda/matching.ml[942,30357+7]..[942,30357+38])
                  Ptyp_constr "pattern_matching" (lambda/matching.ml[942,30357+22]..[942,30357+38])
                  [
                    core_type (lambda/matching.ml[942,30357+7]..[942,30357+21])
                      Ptyp_constr "initial_clause" (lambda/matching.ml[942,30357+7]..[942,30357+21])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[945,30399+0]..[949,30553+1])
    Pstr_type Rec
    [
      type_declaration "pm_or_compiled" (lambda/matching.ml[945,30399+26]..[945,30399+40]) (lambda/matching.ml[945,30399+0]..[949,30553+1])
        ptype_params =
          [
            core_type (lambda/matching.ml[945,30399+6]..[945,30399+15])
              Ptyp_var head_pat
            core_type (lambda/matching.ml[945,30399+17]..[945,30399+24])
              Ptyp_var matrix
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[946,30444+2]..[946,30444+59])
                Immutable
                "body" (lambda/matching.ml[946,30444+2]..[946,30444+6])                core_type (lambda/matching.ml[946,30444+9]..[946,30444+58])
                  Ptyp_constr "pattern_matching" (lambda/matching.ml[946,30444+42]..[946,30444+58])
                  [
                    core_type (lambda/matching.ml[946,30444+9]..[946,30444+41])
                      Ptyp_constr "clause" (lambda/matching.ml[946,30444+35]..[946,30444+41])
                      [
                        core_type (lambda/matching.ml[946,30444+9]..[946,30444+34])
                          Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[946,30444+19]..[946,30444+34])
                          [
                            core_type (lambda/matching.ml[946,30444+9]..[946,30444+18])
                              Ptyp_var head_pat
                          ]
                      ]
                  ]
              (lambda/matching.ml[947,30504+2]..[947,30504+26])
                Immutable
                "handlers" (lambda/matching.ml[947,30504+2]..[947,30504+10])                core_type (lambda/matching.ml[947,30504+13]..[947,30504+25])
                  Ptyp_constr "list" (lambda/matching.ml[947,30504+21]..[947,30504+25])
                  [
                    core_type (lambda/matching.ml[947,30504+13]..[947,30504+20])
                      Ptyp_constr "handler" (lambda/matching.ml[947,30504+13]..[947,30504+20])
                      []
                  ]
              (lambda/matching.ml[948,30531+2]..[948,30531+21])
                Immutable
                "or_matrix" (lambda/matching.ml[948,30531+2]..[948,30531+11])                core_type (lambda/matching.ml[948,30531+14]..[948,30531+21])
                  Ptyp_var matrix
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[954,30646+0]..[957,30765+40])
    Pstr_type Rec
    [
      type_declaration "pm_half_compiled" (lambda/matching.ml[954,30646+5]..[954,30646+21]) (lambda/matching.ml[954,30646+0]..[957,30765+40])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/matching.ml[955,30670+2]..[955,30670+51])
                "PmOr" (lambda/matching.ml[955,30670+4]..[955,30670+8])
                [
                  core_type (lambda/matching.ml[955,30670+12]..[955,30670+51])
                    Ptyp_constr "pm_or_compiled" (lambda/matching.ml[955,30670+37]..[955,30670+51])
                    [
                      core_type (lambda/matching.ml[955,30670+13]..[955,30670+27])
                        Ptyp_constr "Simple.pattern" (lambda/matching.ml[955,30670+13]..[955,30670+27])
                        []
                      core_type (lambda/matching.ml[955,30670+29]..[955,30670+35])
                        Ptyp_constr "matrix" (lambda/matching.ml[955,30670+29]..[955,30670+35])
                        []
                    ]
                ]
                None
              (lambda/matching.ml[956,30722+2]..[956,30722+42])
                "PmVar" (lambda/matching.ml[956,30722+4]..[956,30722+9])
                [
                  (lambda/matching.ml[956,30722+15]..[956,30722+40])
                    Immutable
                    "inside" (lambda/matching.ml[956,30722+15]..[956,30722+21])                    core_type (lambda/matching.ml[956,30722+24]..[956,30722+40])
                      Ptyp_constr "pm_half_compiled" (lambda/matching.ml[956,30722+24]..[956,30722+40])
                      []
                ]
                None
              (lambda/matching.ml[957,30765+2]..[957,30765+40])
                "Pm" (lambda/matching.ml[957,30765+4]..[957,30765+6])
                [
                  core_type (lambda/matching.ml[957,30765+10]..[957,30765+40])
                    Ptyp_constr "pattern_matching" (lambda/matching.ml[957,30765+24]..[957,30765+40])
                    [
                      core_type (lambda/matching.ml[957,30765+10]..[957,30765+23])
                        Ptyp_constr "Simple.clause" (lambda/matching.ml[957,30765+10]..[957,30765+23])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[961,30922+0]..[968,31207+1])
    Pstr_type Rec
    [
      type_declaration "pm_half_compiled_info" (lambda/matching.ml[961,30922+5]..[961,30922+26]) (lambda/matching.ml[961,30922+0]..[968,31207+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[962,30953+2]..[962,30953+24])
                Immutable
                "me" (lambda/matching.ml[962,30953+2]..[962,30953+4])                core_type (lambda/matching.ml[962,30953+7]..[962,30953+23])
                  Ptyp_constr "pm_half_compiled" (lambda/matching.ml[962,30953+7]..[962,30953+23])
                  []
              (lambda/matching.ml[963,30978+2]..[963,30978+18])
                Immutable
                "matrix" (lambda/matching.ml[963,30978+2]..[963,30978+8])                core_type (lambda/matching.ml[963,30978+11]..[963,30978+17])
                  Ptyp_constr "matrix" (lambda/matching.ml[963,30978+11]..[963,30978+17])
                  []
              (lambda/matching.ml[967,31169+2]..[967,31169+37])
                Immutable
                "top_default" (lambda/matching.ml[967,31169+2]..[967,31169+13])                core_type (lambda/matching.ml[967,31169+16]..[967,31169+37])
                  Ptyp_constr "Default_environment.t" (lambda/matching.ml[967,31169+16]..[967,31169+37])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[970,31210+0]..[971,31236+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[970,31210+4]..[970,31210+15])
          Ppat_var "erase_cases" (lambda/matching.ml[970,31210+4]..[970,31210+15])
        expression (lambda/matching.ml[970,31210+16]..[971,31236+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[970,31210+16]..[970,31210+17])
            Ppat_var "f" (lambda/matching.ml[970,31210+16]..[970,31210+17])
          expression (lambda/matching.ml[970,31210+18]..[971,31236+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[970,31210+18]..[970,31210+23])
              Ppat_var "cases" (lambda/matching.ml[970,31210+18]..[970,31210+23])
            expression (lambda/matching.ml[971,31236+2]..[971,31236+57])
              Pexp_apply
              expression (lambda/matching.ml[971,31236+2]..[971,31236+10])
                Pexp_ident "List.map" (lambda/matching.ml[971,31236+2]..[971,31236+10])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[971,31236+11]..[971,31236+51])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[971,31236+16]..[971,31236+30])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[971,31236+17]..[971,31236+24])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[971,31236+18]..[971,31236+19])
                              Ppat_var "p" (lambda/matching.ml[971,31236+18]..[971,31236+19])
                            pattern (lambda/matching.ml[971,31236+21]..[971,31236+23])
                              Ppat_var "ps" (lambda/matching.ml[971,31236+21]..[971,31236+23])
                          ]
                        pattern (lambda/matching.ml[971,31236+26]..[971,31236+29])
                          Ppat_var "act" (lambda/matching.ml[971,31236+26]..[971,31236+29])
                      ]
                    expression (lambda/matching.ml[971,31236+34]..[971,31236+50])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[971,31236+35]..[971,31236+44])
                          Pexp_construct "::" (lambda/matching.ml[971,31236+39]..[971,31236+41])
                          Some
                            expression (lambda/matching.ml[971,31236+35]..[971,31236+44]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[971,31236+35]..[971,31236+38])
                                  Pexp_apply
                                  expression (lambda/matching.ml[971,31236+35]..[971,31236+36])
                                    Pexp_ident "f" (lambda/matching.ml[971,31236+35]..[971,31236+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[971,31236+37]..[971,31236+38])
                                        Pexp_ident "p" (lambda/matching.ml[971,31236+37]..[971,31236+38])
                                  ]
                                expression (lambda/matching.ml[971,31236+42]..[971,31236+44])
                                  Pexp_ident "ps" (lambda/matching.ml[971,31236+42]..[971,31236+44])
                              ]
                        expression (lambda/matching.ml[971,31236+46]..[971,31236+49])
                          Pexp_ident "act" (lambda/matching.ml[971,31236+46]..[971,31236+49])
                      ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[971,31236+52]..[971,31236+57])
                    Pexp_ident "cases" (lambda/matching.ml[971,31236+52]..[971,31236+57])
              ]
    ]
  structure_item (lambda/matching.ml[973,31295+0]..[974,31313+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[973,31295+4]..[973,31295+12])
          Ppat_var "erase_pm" (lambda/matching.ml[973,31295+4]..[973,31295+12])
        expression (lambda/matching.ml[973,31295+13]..[974,31313+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[973,31295+13]..[973,31295+15])
            Ppat_var "pm" (lambda/matching.ml[973,31295+13]..[973,31295+15])
          expression (lambda/matching.ml[974,31313+2]..[974,31313+56])
            Pexp_record
            [
              "cases" (lambda/matching.ml[974,31313+12]..[974,31313+17])
                expression (lambda/matching.ml[974,31313+20]..[974,31313+54])
                  Pexp_apply
                  expression (lambda/matching.ml[974,31313+20]..[974,31313+31])
                    Pexp_ident "erase_cases" (lambda/matching.ml[974,31313+20]..[974,31313+31])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[974,31313+32]..[974,31313+45])
                        Pexp_ident "General.erase" (lambda/matching.ml[974,31313+32]..[974,31313+45])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[974,31313+46]..[974,31313+54])
                        Pexp_field
                        expression (lambda/matching.ml[974,31313+46]..[974,31313+48])
                          Pexp_ident "pm" (lambda/matching.ml[974,31313+46]..[974,31313+48])
                        "cases" (lambda/matching.ml[974,31313+49]..[974,31313+54])
                  ]
            ]
            Some
              expression (lambda/matching.ml[974,31313+4]..[974,31313+6])
                Pexp_ident "pm" (lambda/matching.ml[974,31313+4]..[974,31313+6])
    ]
  structure_item (lambda/matching.ml[976,31371+0]..[981,31523+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[976,31371+4]..[976,31371+16])
          Ppat_var "pretty_cases" (lambda/matching.ml[976,31371+4]..[976,31371+16])
        expression (lambda/matching.ml[976,31371+17]..[981,31523+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[976,31371+17]..[976,31371+22])
            Ppat_var "cases" (lambda/matching.ml[976,31371+17]..[976,31371+22])
          expression (lambda/matching.ml[977,31396+2]..[981,31523+9])
            Pexp_apply
            expression (lambda/matching.ml[977,31396+2]..[977,31396+11])
              Pexp_ident "List.iter" (lambda/matching.ml[977,31396+2]..[977,31396+11])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[978,31408+4]..[980,31496+26])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[978,31408+9]..[978,31408+17])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[978,31408+10]..[978,31408+12])
                        Ppat_var "ps" (lambda/matching.ml[978,31408+10]..[978,31408+12])
                      pattern (lambda/matching.ml[978,31408+14]..[978,31408+16])
                        Ppat_var "_l" (lambda/matching.ml[978,31408+14]..[978,31408+16])
                    ]
                  expression (lambda/matching.ml[979,31429+6]..[980,31496+25])
                    Pexp_sequence
                    expression (lambda/matching.ml[979,31429+6]..[979,31429+65])
                      Pexp_apply
                      expression (lambda/matching.ml[979,31429+6]..[979,31429+15])
                        Pexp_ident "List.iter" (lambda/matching.ml[979,31429+6]..[979,31429+15])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[979,31429+16]..[979,31429+62])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[979,31429+21]..[979,31429+22])
                              Ppat_var "p" (lambda/matching.ml[979,31429+21]..[979,31429+22])
                            expression (lambda/matching.ml[979,31429+26]..[979,31429+61])
                              Pexp_apply
                              expression (lambda/matching.ml[979,31429+26]..[979,31429+40])
                                Pexp_ident "Format.eprintf" (lambda/matching.ml[979,31429+26]..[979,31429+40])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[979,31429+41]..[979,31429+48])
                                    Pexp_constant PConst_string(" %a%!",(lambda/matching.ml[979,31429+42]..[979,31429+47]),None)
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[979,31429+49]..[979,31429+59])
                                    Pexp_ident "top_pretty" (lambda/matching.ml[979,31429+49]..[979,31429+59])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[979,31429+60]..[979,31429+61])
                                    Pexp_ident "p" (lambda/matching.ml[979,31429+60]..[979,31429+61])
                              ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[979,31429+63]..[979,31429+65])
                            Pexp_ident "ps" (lambda/matching.ml[979,31429+63]..[979,31429+65])
                      ]
                    expression (lambda/matching.ml[980,31496+6]..[980,31496+25])
                      Pexp_apply
                      expression (lambda/matching.ml[980,31496+6]..[980,31496+20])
                        Pexp_ident "Format.eprintf" (lambda/matching.ml[980,31496+6]..[980,31496+20])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[980,31496+21]..[980,31496+25])
                            Pexp_constant PConst_string("\n",(lambda/matching.ml[980,31496+22]..[980,31496+24]),None)
                      ]
              <arg>
              Nolabel
                expression (lambda/matching.ml[981,31523+4]..[981,31523+9])
                  Pexp_ident "cases" (lambda/matching.ml[981,31523+4]..[981,31523+9])
            ]
    ]
  structure_item (lambda/matching.ml[983,31534+0]..[986,31634+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[983,31534+4]..[983,31534+13])
          Ppat_var "pretty_pm" (lambda/matching.ml[983,31534+4]..[983,31534+13])
        expression (lambda/matching.ml[983,31534+14]..[986,31634+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[983,31534+14]..[983,31534+16])
            Ppat_var "pm" (lambda/matching.ml[983,31534+14]..[983,31534+16])
          expression (lambda/matching.ml[984,31553+2]..[986,31634+37])
            Pexp_sequence
            expression (lambda/matching.ml[984,31553+2]..[984,31553+23])
              Pexp_apply
              expression (lambda/matching.ml[984,31553+2]..[984,31553+14])
                Pexp_ident "pretty_cases" (lambda/matching.ml[984,31553+2]..[984,31553+14])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[984,31553+15]..[984,31553+23])
                    Pexp_field
                    expression (lambda/matching.ml[984,31553+15]..[984,31553+17])
                      Pexp_ident "pm" (lambda/matching.ml[984,31553+15]..[984,31553+17])
                    "cases" (lambda/matching.ml[984,31553+18]..[984,31553+23])
              ]
            expression (lambda/matching.ml[985,31578+2]..[986,31634+37])
              Pexp_ifthenelse
              expression (lambda/matching.ml[985,31578+5]..[985,31578+50])
                Pexp_apply
                expression (lambda/matching.ml[985,31578+5]..[985,31578+8])
                  Pexp_ident "not" (lambda/matching.ml[985,31578+5]..[985,31578+8])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[985,31578+9]..[985,31578+50])
                      Pexp_apply
                      expression (lambda/matching.ml[985,31578+10]..[985,31578+38])
                        Pexp_ident "Default_environment.is_empty" (lambda/matching.ml[985,31578+10]..[985,31578+38])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[985,31578+39]..[985,31578+49])
                            Pexp_field
                            expression (lambda/matching.ml[985,31578+39]..[985,31578+41])
                              Pexp_ident "pm" (lambda/matching.ml[985,31578+39]..[985,31578+41])
                            "default" (lambda/matching.ml[985,31578+42]..[985,31578+49])
                      ]
                ]
              expression (lambda/matching.ml[986,31634+4]..[986,31634+37])
                Pexp_apply
                expression (lambda/matching.ml[986,31634+4]..[986,31634+26])
                  Pexp_ident "Default_environment.pp" (lambda/matching.ml[986,31634+4]..[986,31634+26])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[986,31634+27]..[986,31634+37])
                      Pexp_field
                      expression (lambda/matching.ml[986,31634+27]..[986,31634+29])
                        Pexp_ident "pm" (lambda/matching.ml[986,31634+27]..[986,31634+29])
                      "default" (lambda/matching.ml[986,31634+30]..[986,31634+37])
                ]
              None
    ]
  structure_item (lambda/matching.ml[988,31673+0]..[1003,32142+18])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[988,31673+8]..[988,31673+26])
          Ppat_var "pretty_precompiled" (lambda/matching.ml[988,31673+8]..[988,31673+26])
        expression (lambda/matching.ml[988,31673+29]..[1003,32142+18])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[989,31711+4]..[989,31711+9])
                Ppat_construct "Pm" (lambda/matching.ml[989,31711+4]..[989,31711+6])
                Some
                  []
                  pattern (lambda/matching.ml[989,31711+7]..[989,31711+9])
                    Ppat_var "pm" (lambda/matching.ml[989,31711+7]..[989,31711+9])
              expression (lambda/matching.ml[990,31724+6]..[991,31763+29])
                Pexp_sequence
                expression (lambda/matching.ml[990,31724+6]..[990,31724+37])
                  Pexp_apply
                  expression (lambda/matching.ml[990,31724+6]..[990,31724+20])
                    Pexp_ident "Format.eprintf" (lambda/matching.ml[990,31724+6]..[990,31724+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[990,31724+21]..[990,31724+37])
                        Pexp_constant PConst_string("++++ PM ++++\n",(lambda/matching.ml[990,31724+22]..[990,31724+36]),None)
                  ]
                expression (lambda/matching.ml[991,31763+6]..[991,31763+29])
                  Pexp_apply
                  expression (lambda/matching.ml[991,31763+6]..[991,31763+15])
                    Pexp_ident "pretty_pm" (lambda/matching.ml[991,31763+6]..[991,31763+15])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[991,31763+16]..[991,31763+29])
                        Pexp_apply
                        expression (lambda/matching.ml[991,31763+17]..[991,31763+25])
                          Pexp_ident "erase_pm" (lambda/matching.ml[991,31763+17]..[991,31763+25])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[991,31763+26]..[991,31763+28])
                              Pexp_ident "pm" (lambda/matching.ml[991,31763+26]..[991,31763+28])
                        ]
                  ]
            <case>
              pattern (lambda/matching.ml[992,31793+4]..[992,31793+11])
                Ppat_construct "PmVar" (lambda/matching.ml[992,31793+4]..[992,31793+9])
                Some
                  []
                  pattern (lambda/matching.ml[992,31793+10]..[992,31793+11])
                    Ppat_var "x" (lambda/matching.ml[992,31793+10]..[992,31793+11])
              expression (lambda/matching.ml[993,31808+6]..[994,31848+33])
                Pexp_sequence
                expression (lambda/matching.ml[993,31808+6]..[993,31808+38])
                  Pexp_apply
                  expression (lambda/matching.ml[993,31808+6]..[993,31808+20])
                    Pexp_ident "Format.eprintf" (lambda/matching.ml[993,31808+6]..[993,31808+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[993,31808+21]..[993,31808+38])
                        Pexp_constant PConst_string("++++ VAR ++++\n",(lambda/matching.ml[993,31808+22]..[993,31808+37]),None)
                  ]
                expression (lambda/matching.ml[994,31848+6]..[994,31848+33])
                  Pexp_apply
                  expression (lambda/matching.ml[994,31848+6]..[994,31848+24])
                    Pexp_ident "pretty_precompiled" (lambda/matching.ml[994,31848+6]..[994,31848+24])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[994,31848+25]..[994,31848+33])
                        Pexp_field
                        expression (lambda/matching.ml[994,31848+25]..[994,31848+26])
                          Pexp_ident "x" (lambda/matching.ml[994,31848+25]..[994,31848+26])
                        "inside" (lambda/matching.ml[994,31848+27]..[994,31848+33])
                  ]
            <case>
              pattern (lambda/matching.ml[995,31882+4]..[995,31882+10])
                Ppat_construct "PmOr" (lambda/matching.ml[995,31882+4]..[995,31882+8])
                Some
                  []
                  pattern (lambda/matching.ml[995,31882+9]..[995,31882+10])
                    Ppat_var "x" (lambda/matching.ml[995,31882+9]..[995,31882+10])
              expression (lambda/matching.ml[996,31896+6]..[1003,32142+18])
                Pexp_sequence
                expression (lambda/matching.ml[996,31896+6]..[996,31896+37])
                  Pexp_apply
                  expression (lambda/matching.ml[996,31896+6]..[996,31896+20])
                    Pexp_ident "Format.eprintf" (lambda/matching.ml[996,31896+6]..[996,31896+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[996,31896+21]..[996,31896+37])
                        Pexp_constant PConst_string("++++ OR ++++\n",(lambda/matching.ml[996,31896+22]..[996,31896+36]),None)
                  ]
                expression (lambda/matching.ml[997,31935+6]..[1003,32142+18])
                  Pexp_sequence
                  expression (lambda/matching.ml[997,31935+6]..[997,31935+33])
                    Pexp_apply
                    expression (lambda/matching.ml[997,31935+6]..[997,31935+15])
                      Pexp_ident "pretty_pm" (lambda/matching.ml[997,31935+6]..[997,31935+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[997,31935+16]..[997,31935+33])
                          Pexp_apply
                          expression (lambda/matching.ml[997,31935+17]..[997,31935+25])
                            Pexp_ident "erase_pm" (lambda/matching.ml[997,31935+17]..[997,31935+25])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[997,31935+26]..[997,31935+32])
                                Pexp_field
                                expression (lambda/matching.ml[997,31935+26]..[997,31935+27])
                                  Pexp_ident "x" (lambda/matching.ml[997,31935+26]..[997,31935+27])
                                "body" (lambda/matching.ml[997,31935+28]..[997,31935+32])
                          ]
                    ]
                  expression (lambda/matching.ml[998,31970+6]..[1003,32142+18])
                    Pexp_sequence
                    expression (lambda/matching.ml[998,31970+6]..[998,31970+52])
                      Pexp_apply
                      expression (lambda/matching.ml[998,31970+6]..[998,31970+19])
                        Pexp_ident "pretty_matrix" (lambda/matching.ml[998,31970+6]..[998,31970+19])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[998,31970+20]..[998,31970+40])
                            Pexp_ident "Format.err_formatter" (lambda/matching.ml[998,31970+20]..[998,31970+40])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[998,31970+41]..[998,31970+52])
                            Pexp_field
                            expression (lambda/matching.ml[998,31970+41]..[998,31970+42])
                              Pexp_ident "x" (lambda/matching.ml[998,31970+41]..[998,31970+42])
                            "or_matrix" (lambda/matching.ml[998,31970+43]..[998,31970+52])
                      ]
                    expression (lambda/matching.ml[999,32024+6]..[1003,32142+18])
                      Pexp_apply
                      expression (lambda/matching.ml[999,32024+6]..[999,32024+15])
                        Pexp_ident "List.iter" (lambda/matching.ml[999,32024+6]..[999,32024+15])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1000,32040+8]..[1002,32118+23])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1000,32040+13]..[1000,32040+32])
                              Ppat_record Open
                              [
                                "exit" (lambda/matching.ml[1000,32040+15]..[1000,32040+19])
                                  pattern (lambda/matching.ml[1000,32040+22]..[1000,32040+23])
                                    Ppat_var "i" (lambda/matching.ml[1000,32040+22]..[1000,32040+23])
                                "pm" (lambda/matching.ml[1000,32040+25]..[1000,32040+27]) ghost
                                  pattern (lambda/matching.ml[1000,32040+25]..[1000,32040+27])
                                    Ppat_var "pm" (lambda/matching.ml[1000,32040+25]..[1000,32040+27])
                              ]
                            expression (lambda/matching.ml[1001,32076+10]..[1002,32118+22])
                              Pexp_sequence
                              expression (lambda/matching.ml[1001,32076+10]..[1001,32076+40])
                                Pexp_apply
                                expression (lambda/matching.ml[1001,32076+10]..[1001,32076+17])
                                  Pexp_ident "eprintf" (lambda/matching.ml[1001,32076+10]..[1001,32076+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1001,32076+18]..[1001,32076+38])
                                      Pexp_constant PConst_string("++ Handler %d ++\n",(lambda/matching.ml[1001,32076+19]..[1001,32076+37]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1001,32076+39]..[1001,32076+40])
                                      Pexp_ident "i" (lambda/matching.ml[1001,32076+39]..[1001,32076+40])
                                ]
                              expression (lambda/matching.ml[1002,32118+10]..[1002,32118+22])
                                Pexp_apply
                                expression (lambda/matching.ml[1002,32118+10]..[1002,32118+19])
                                  Pexp_ident "pretty_pm" (lambda/matching.ml[1002,32118+10]..[1002,32118+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1002,32118+20]..[1002,32118+22])
                                      Pexp_ident "pm" (lambda/matching.ml[1002,32118+20]..[1002,32118+22])
                                ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1003,32142+8]..[1003,32142+18])
                            Pexp_field
                            expression (lambda/matching.ml[1003,32142+8]..[1003,32142+9])
                              Pexp_ident "x" (lambda/matching.ml[1003,32142+8]..[1003,32142+9])
                            "handlers" (lambda/matching.ml[1003,32142+10]..[1003,32142+18])
                      ]
          ]
    ]
  structure_item (lambda/matching.ml[1005,32162+0]..[1011,32332+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1005,32162+4]..[1005,32162+26])
          Ppat_var "pretty_precompiled_res" (lambda/matching.ml[1005,32162+4]..[1005,32162+26])
        expression (lambda/matching.ml[1005,32162+27]..[1011,32332+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1005,32162+27]..[1005,32162+32])
            Ppat_var "first" (lambda/matching.ml[1005,32162+27]..[1005,32162+32])
          expression (lambda/matching.ml[1005,32162+33]..[1011,32332+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1005,32162+33]..[1005,32162+38])
              Ppat_var "nexts" (lambda/matching.ml[1005,32162+33]..[1005,32162+38])
            expression (lambda/matching.ml[1006,32203+2]..[1011,32332+9])
              Pexp_sequence
              expression (lambda/matching.ml[1006,32203+2]..[1006,32203+26])
                Pexp_apply
                expression (lambda/matching.ml[1006,32203+2]..[1006,32203+20])
                  Pexp_ident "pretty_precompiled" (lambda/matching.ml[1006,32203+2]..[1006,32203+20])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1006,32203+21]..[1006,32203+26])
                      Pexp_ident "first" (lambda/matching.ml[1006,32203+21]..[1006,32203+26])
                ]
              expression (lambda/matching.ml[1007,32231+2]..[1011,32332+9])
                Pexp_apply
                expression (lambda/matching.ml[1007,32231+2]..[1007,32231+11])
                  Pexp_ident "List.iter" (lambda/matching.ml[1007,32231+2]..[1007,32231+11])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1008,32243+4]..[1010,32302+29])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1008,32243+9]..[1008,32243+17])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1008,32243+10]..[1008,32243+11])
                            Ppat_var "e" (lambda/matching.ml[1008,32243+10]..[1008,32243+11])
                          pattern (lambda/matching.ml[1008,32243+13]..[1008,32243+16])
                            Ppat_var "pmh" (lambda/matching.ml[1008,32243+13]..[1008,32243+16])
                        ]
                      expression (lambda/matching.ml[1009,32264+6]..[1010,32302+28])
                        Pexp_sequence
                        expression (lambda/matching.ml[1009,32264+6]..[1009,32264+36])
                          Pexp_apply
                          expression (lambda/matching.ml[1009,32264+6]..[1009,32264+13])
                            Pexp_ident "eprintf" (lambda/matching.ml[1009,32264+6]..[1009,32264+13])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1009,32264+14]..[1009,32264+34])
                                Pexp_constant PConst_string("** DEFAULT %d **\n",(lambda/matching.ml[1009,32264+15]..[1009,32264+33]),None)
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1009,32264+35]..[1009,32264+36])
                                Pexp_ident "e" (lambda/matching.ml[1009,32264+35]..[1009,32264+36])
                          ]
                        expression (lambda/matching.ml[1010,32302+6]..[1010,32302+28])
                          Pexp_apply
                          expression (lambda/matching.ml[1010,32302+6]..[1010,32302+24])
                            Pexp_ident "pretty_precompiled" (lambda/matching.ml[1010,32302+6]..[1010,32302+24])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1010,32302+25]..[1010,32302+28])
                                Pexp_ident "pmh" (lambda/matching.ml[1010,32302+25]..[1010,32302+28])
                          ]
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1011,32332+4]..[1011,32332+9])
                      Pexp_ident "nexts" (lambda/matching.ml[1011,32332+4]..[1011,32332+9])
                ]
    ]
  structure_item (lambda/matching.ml[1024,32757+0]..[1032,32905+4])
    Pstr_module
    "StoreExp" (lambda/matching.ml[1024,32757+7]..[1024,32757+15])
      module_expr (lambda/matching.ml[1024,32757+18]..[1032,32905+4])
        Pmod_apply
        module_expr (lambda/matching.ml[1024,32757+18]..[1024,32757+30])
          Pmod_ident "Switch.Store" (lambda/matching.ml[1024,32757+18]..[1024,32757+30])
        module_expr (lambda/matching.ml[1024,32757+32]..[1032,32905+3])
          Pmod_structure
          [
            structure_item (lambda/matching.ml[1025,32796+2]..[1025,32796+17])
              Pstr_type Rec
              [
                type_declaration "t" (lambda/matching.ml[1025,32796+7]..[1025,32796+8]) (lambda/matching.ml[1025,32796+2]..[1025,32796+17])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[1025,32796+11]..[1025,32796+17])
                        Ptyp_constr "lambda" (lambda/matching.ml[1025,32796+11]..[1025,32796+17])
                        []
              ]
            structure_item (lambda/matching.ml[1027,32815+2]..[1027,32815+19])
              Pstr_type Rec
              [
                type_declaration "key" (lambda/matching.ml[1027,32815+7]..[1027,32815+10]) (lambda/matching.ml[1027,32815+2]..[1027,32815+19])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lambda/matching.ml[1027,32815+13]..[1027,32815+19])
                        Ptyp_constr "lambda" (lambda/matching.ml[1027,32815+13]..[1027,32815+19])
                        []
              ]
            structure_item (lambda/matching.ml[1029,32836+2]..[1029,32836+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1029,32836+6]..[1029,32836+17])
                    Ppat_var "compare_key" (lambda/matching.ml[1029,32836+6]..[1029,32836+17])
                  expression (lambda/matching.ml[1029,32836+20]..[1029,32836+34])
                    Pexp_ident "Stdlib.compare" (lambda/matching.ml[1029,32836+20]..[1029,32836+34])
              ]
            structure_item (lambda/matching.ml[1031,32872+2]..[1031,32872+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1031,32872+6]..[1031,32872+14])
                    Ppat_var "make_key" (lambda/matching.ml[1031,32872+6]..[1031,32872+14])
                  expression (lambda/matching.ml[1031,32872+17]..[1031,32872+32])
                    Pexp_ident "Lambda.make_key" (lambda/matching.ml[1031,32872+17]..[1031,32872+32])
              ]
          ]
  structure_item (lambda/matching.ml[1034,32911+0]..[1034,32911+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1034,32911+4]..[1034,32911+13])
          Ppat_var "make_exit" (lambda/matching.ml[1034,32911+4]..[1034,32911+13])
        expression (lambda/matching.ml[1034,32911+14]..[1034,32911+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1034,32911+14]..[1034,32911+15])
            Ppat_var "i" (lambda/matching.ml[1034,32911+14]..[1034,32911+15])
          expression (lambda/matching.ml[1034,32911+18]..[1034,32911+38])
            Pexp_construct "Lstaticraise" (lambda/matching.ml[1034,32911+18]..[1034,32911+30])
            Some
              expression (lambda/matching.ml[1034,32911+31]..[1034,32911+38])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[1034,32911+32]..[1034,32911+33])
                    Pexp_ident "i" (lambda/matching.ml[1034,32911+32]..[1034,32911+33])
                  expression (lambda/matching.ml[1034,32911+35]..[1034,32911+37])
                    Pexp_construct "[]" (lambda/matching.ml[1034,32911+35]..[1034,32911+37])
                    None
                ]
    ]
  structure_item (lambda/matching.ml[1037,32988+0]..[1042,33102+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1037,32988+4]..[1037,32988+14])
          Ppat_var "make_catch" (lambda/matching.ml[1037,32988+4]..[1037,32988+14])
        expression (lambda/matching.ml[1037,32988+15]..[1042,33102+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1037,32988+15]..[1037,32988+16])
            Ppat_var "d" (lambda/matching.ml[1037,32988+15]..[1037,32988+16])
          expression (lambda/matching.ml[1037,32988+17]..[1042,33102+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1037,32988+17]..[1037,32988+18])
              Ppat_var "k" (lambda/matching.ml[1037,32988+17]..[1037,32988+18])
            expression (lambda/matching.ml[1038,33009+2]..[1042,33102+48])
              Pexp_match
              expression (lambda/matching.ml[1038,33009+8]..[1038,33009+9])
                Pexp_ident "d" (lambda/matching.ml[1038,33009+8]..[1038,33009+9])
              [
                <case>
                  pattern (lambda/matching.ml[1039,33024+4]..[1039,33024+24])
                    Ppat_construct "Lstaticraise" (lambda/matching.ml[1039,33024+4]..[1039,33024+16])
                    Some
                      []
                      pattern (lambda/matching.ml[1039,33024+17]..[1039,33024+24])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1039,33024+18]..[1039,33024+19])
                            Ppat_any
                          pattern (lambda/matching.ml[1039,33024+21]..[1039,33024+23])
                            Ppat_construct "[]" (lambda/matching.ml[1039,33024+21]..[1039,33024+23])
                            None
                        ]
                  expression (lambda/matching.ml[1039,33024+28]..[1039,33024+31])
                    Pexp_apply
                    expression (lambda/matching.ml[1039,33024+28]..[1039,33024+29])
                      Pexp_ident "k" (lambda/matching.ml[1039,33024+28]..[1039,33024+29])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1039,33024+30]..[1039,33024+31])
                          Pexp_ident "d" (lambda/matching.ml[1039,33024+30]..[1039,33024+31])
                    ]
                <case>
                  pattern (lambda/matching.ml[1040,33056+4]..[1040,33056+5])
                    Ppat_any
                  expression (lambda/matching.ml[1041,33065+6]..[1042,33102+48])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[1041,33065+10]..[1041,33065+11])
                          Ppat_var "e" (lambda/matching.ml[1041,33065+10]..[1041,33065+11])
                        expression (lambda/matching.ml[1041,33065+14]..[1041,33065+33])
                          Pexp_apply
                          expression (lambda/matching.ml[1041,33065+14]..[1041,33065+30])
                            Pexp_ident "next_raise_count" (lambda/matching.ml[1041,33065+14]..[1041,33065+30])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1041,33065+31]..[1041,33065+33])
                                Pexp_construct "()" (lambda/matching.ml[1041,33065+31]..[1041,33065+33])
                                None
                          ]
                    ]
                    expression (lambda/matching.ml[1042,33102+6]..[1042,33102+48])
                      Pexp_construct "Lstaticcatch" (lambda/matching.ml[1042,33102+6]..[1042,33102+18])
                      Some
                        expression (lambda/matching.ml[1042,33102+19]..[1042,33102+48])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[1042,33102+20]..[1042,33102+35])
                              Pexp_apply
                              expression (lambda/matching.ml[1042,33102+20]..[1042,33102+21])
                                Pexp_ident "k" (lambda/matching.ml[1042,33102+20]..[1042,33102+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1042,33102+22]..[1042,33102+35])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1042,33102+23]..[1042,33102+32])
                                      Pexp_ident "make_exit" (lambda/matching.ml[1042,33102+23]..[1042,33102+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1042,33102+33]..[1042,33102+34])
                                          Pexp_ident "e" (lambda/matching.ml[1042,33102+33]..[1042,33102+34])
                                    ]
                              ]
                            expression (lambda/matching.ml[1042,33102+37]..[1042,33102+44])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[1042,33102+38]..[1042,33102+39])
                                  Pexp_ident "e" (lambda/matching.ml[1042,33102+38]..[1042,33102+39])
                                expression (lambda/matching.ml[1042,33102+41]..[1042,33102+43])
                                  Pexp_construct "[]" (lambda/matching.ml[1042,33102+41]..[1042,33102+43])
                                  None
                              ]
                            expression (lambda/matching.ml[1042,33102+46]..[1042,33102+47])
                              Pexp_ident "d" (lambda/matching.ml[1042,33102+46]..[1042,33102+47])
                          ]
              ]
    ]
  structure_item (lambda/matching.ml[1045,33206+0]..[1048,33325+13])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[1045,33206+8]..[1045,33206+22])
          Ppat_var "as_simple_exit" (lambda/matching.ml[1045,33206+8]..[1045,33206+22])
        expression (lambda/matching.ml[1045,33206+25]..[1048,33325+13])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[1046,33240+4]..[1046,33240+24])
                Ppat_construct "Lstaticraise" (lambda/matching.ml[1046,33240+4]..[1046,33240+16])
                Some
                  []
                  pattern (lambda/matching.ml[1046,33240+17]..[1046,33240+24])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1046,33240+18]..[1046,33240+19])
                        Ppat_var "i" (lambda/matching.ml[1046,33240+18]..[1046,33240+19])
                      pattern (lambda/matching.ml[1046,33240+21]..[1046,33240+23])
                        Ppat_construct "[]" (lambda/matching.ml[1046,33240+21]..[1046,33240+23])
                        None
                    ]
              expression (lambda/matching.ml[1046,33240+28]..[1046,33240+34])
                Pexp_construct "Some" (lambda/matching.ml[1046,33240+28]..[1046,33240+32])
                Some
                  expression (lambda/matching.ml[1046,33240+33]..[1046,33240+34])
                    Pexp_ident "i" (lambda/matching.ml[1046,33240+33]..[1046,33240+34])
            <case>
              pattern (lambda/matching.ml[1047,33275+4]..[1047,33275+29])
                Ppat_construct "Llet" (lambda/matching.ml[1047,33275+4]..[1047,33275+8])
                Some
                  []
                  pattern (lambda/matching.ml[1047,33275+9]..[1047,33275+29])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1047,33275+10]..[1047,33275+15])
                        Ppat_construct "Alias" (lambda/matching.ml[1047,33275+10]..[1047,33275+15])
                        None
                      pattern (lambda/matching.ml[1047,33275+17]..[1047,33275+19])
                        Ppat_var "_k" (lambda/matching.ml[1047,33275+17]..[1047,33275+19])
                      pattern (lambda/matching.ml[1047,33275+21]..[1047,33275+22])
                        Ppat_any
                      pattern (lambda/matching.ml[1047,33275+24]..[1047,33275+25])
                        Ppat_any
                      pattern (lambda/matching.ml[1047,33275+27]..[1047,33275+28])
                        Ppat_var "e" (lambda/matching.ml[1047,33275+27]..[1047,33275+28])
                    ]
              expression (lambda/matching.ml[1047,33275+33]..[1047,33275+49])
                Pexp_apply
                expression (lambda/matching.ml[1047,33275+33]..[1047,33275+47])
                  Pexp_ident "as_simple_exit" (lambda/matching.ml[1047,33275+33]..[1047,33275+47])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1047,33275+48]..[1047,33275+49])
                      Pexp_ident "e" (lambda/matching.ml[1047,33275+48]..[1047,33275+49])
                ]
            <case>
              pattern (lambda/matching.ml[1048,33325+4]..[1048,33325+5])
                Ppat_any
              expression (lambda/matching.ml[1048,33325+9]..[1048,33325+13])
                Pexp_construct "None" (lambda/matching.ml[1048,33325+9]..[1048,33325+13])
                None
          ]
    ]
  structure_item (lambda/matching.ml[1050,33340+0]..[1067,33818+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1050,33340+4]..[1050,33340+22])
          Ppat_var "make_catch_delayed" (lambda/matching.ml[1050,33340+4]..[1050,33340+22])
        expression (lambda/matching.ml[1050,33340+23]..[1067,33818+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1050,33340+23]..[1050,33340+30])
            Ppat_var "handler" (lambda/matching.ml[1050,33340+23]..[1050,33340+30])
          expression (lambda/matching.ml[1051,33373+2]..[1067,33818+5])
            Pexp_match
            expression (lambda/matching.ml[1051,33373+8]..[1051,33373+30])
              Pexp_apply
              expression (lambda/matching.ml[1051,33373+8]..[1051,33373+22])
                Pexp_ident "as_simple_exit" (lambda/matching.ml[1051,33373+8]..[1051,33373+22])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1051,33373+23]..[1051,33373+30])
                    Pexp_ident "handler" (lambda/matching.ml[1051,33373+23]..[1051,33373+30])
              ]
            [
              <case>
                pattern (lambda/matching.ml[1052,33409+4]..[1052,33409+10])
                  Ppat_construct "Some" (lambda/matching.ml[1052,33409+4]..[1052,33409+8])
                  Some
                    []
                    pattern (lambda/matching.ml[1052,33409+9]..[1052,33409+10])
                      Ppat_var "i" (lambda/matching.ml[1052,33409+9]..[1052,33409+10])
                expression (lambda/matching.ml[1052,33409+14]..[1052,33409+33])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[1052,33409+15]..[1052,33409+16])
                      Pexp_ident "i" (lambda/matching.ml[1052,33409+15]..[1052,33409+16])
                    expression (lambda/matching.ml[1052,33409+18]..[1052,33409+32])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1052,33409+22]..[1052,33409+25])
                        Ppat_var "act" (lambda/matching.ml[1052,33409+22]..[1052,33409+25])
                      expression (lambda/matching.ml[1052,33409+29]..[1052,33409+32])
                        Pexp_ident "act" (lambda/matching.ml[1052,33409+29]..[1052,33409+32])
                  ]
              <case>
                pattern (lambda/matching.ml[1053,33443+4]..[1053,33443+8])
                  Ppat_construct "None" (lambda/matching.ml[1053,33443+4]..[1053,33443+8])
                  None
                expression (lambda/matching.ml[1053,33443+12]..[1067,33818+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1054,33457+10]..[1054,33457+11])
                        Ppat_var "i" (lambda/matching.ml[1054,33457+10]..[1054,33457+11])
                      expression (lambda/matching.ml[1054,33457+14]..[1054,33457+33])
                        Pexp_apply
                        expression (lambda/matching.ml[1054,33457+14]..[1054,33457+30])
                          Pexp_ident "next_raise_count" (lambda/matching.ml[1054,33457+14]..[1054,33457+30])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1054,33457+31]..[1054,33457+33])
                              Pexp_construct "()" (lambda/matching.ml[1054,33457+31]..[1054,33457+33])
                              None
                        ]
                  ]
                  expression (lambda/matching.ml[1058,33577+6]..[1066,33761+56])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[1058,33577+8]..[1058,33577+9])
                        Pexp_ident "i" (lambda/matching.ml[1058,33577+8]..[1058,33577+9])
                      expression (lambda/matching.ml[1059,33588+8]..[1066,33761+54])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1059,33588+12]..[1059,33588+16])
                          Ppat_var "body" (lambda/matching.ml[1059,33588+12]..[1059,33588+16])
                        expression (lambda/matching.ml[1060,33608+10]..[1066,33761+54])
                          Pexp_match
                          expression (lambda/matching.ml[1060,33608+16]..[1060,33608+20])
                            Pexp_ident "body" (lambda/matching.ml[1060,33608+16]..[1060,33608+20])
                          [
                            <case>
                              pattern (lambda/matching.ml[1061,33634+12]..[1061,33634+31])
                                Ppat_construct "Lstaticraise" (lambda/matching.ml[1061,33634+12]..[1061,33634+24])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1061,33634+25]..[1061,33634+31])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1061,33634+26]..[1061,33634+27])
                                        Ppat_var "j" (lambda/matching.ml[1061,33634+26]..[1061,33634+27])
                                      pattern (lambda/matching.ml[1061,33634+29]..[1061,33634+30])
                                        Ppat_any
                                    ]
                              expression (lambda/matching.ml[1062,33669+14]..[1065,33740+20])
                                Pexp_ifthenelse
                                expression (lambda/matching.ml[1062,33669+17]..[1062,33669+22])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1062,33669+19]..[1062,33669+20])
                                    Pexp_ident "=" (lambda/matching.ml[1062,33669+19]..[1062,33669+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1062,33669+17]..[1062,33669+18])
                                        Pexp_ident "i" (lambda/matching.ml[1062,33669+17]..[1062,33669+18])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1062,33669+21]..[1062,33669+22])
                                        Pexp_ident "j" (lambda/matching.ml[1062,33669+21]..[1062,33669+22])
                                  ]
                                expression (lambda/matching.ml[1063,33697+16]..[1063,33697+23])
                                  Pexp_ident "handler" (lambda/matching.ml[1063,33697+16]..[1063,33697+23])
                                Some
                                  expression (lambda/matching.ml[1065,33740+16]..[1065,33740+20])
                                    Pexp_ident "body" (lambda/matching.ml[1065,33740+16]..[1065,33740+20])
                            <case>
                              pattern (lambda/matching.ml[1066,33761+12]..[1066,33761+13])
                                Ppat_any
                              expression (lambda/matching.ml[1066,33761+17]..[1066,33761+54])
                                Pexp_construct "Lstaticcatch" (lambda/matching.ml[1066,33761+17]..[1066,33761+29])
                                Some
                                  expression (lambda/matching.ml[1066,33761+30]..[1066,33761+54])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[1066,33761+31]..[1066,33761+35])
                                        Pexp_ident "body" (lambda/matching.ml[1066,33761+31]..[1066,33761+35])
                                      expression (lambda/matching.ml[1066,33761+37]..[1066,33761+44])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1066,33761+38]..[1066,33761+39])
                                            Pexp_ident "i" (lambda/matching.ml[1066,33761+38]..[1066,33761+39])
                                          expression (lambda/matching.ml[1066,33761+41]..[1066,33761+43])
                                            Pexp_construct "[]" (lambda/matching.ml[1066,33761+41]..[1066,33761+43])
                                            None
                                        ]
                                      expression (lambda/matching.ml[1066,33761+46]..[1066,33761+53])
                                        Pexp_ident "handler" (lambda/matching.ml[1066,33761+46]..[1066,33761+53])
                                    ]
                          ]
                    ]
            ]
    ]
  structure_item (lambda/matching.ml[1069,33825+0]..[1072,33884+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1069,33825+4]..[1069,33825+14])
          Ppat_var "raw_action" (lambda/matching.ml[1069,33825+4]..[1069,33825+14])
        expression (lambda/matching.ml[1069,33825+15]..[1072,33884+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1069,33825+15]..[1069,33825+16])
            Ppat_var "l" (lambda/matching.ml[1069,33825+15]..[1069,33825+16])
          expression (lambda/matching.ml[1070,33844+2]..[1072,33884+13])
            Pexp_match
            expression (lambda/matching.ml[1070,33844+8]..[1070,33844+18])
              Pexp_apply
              expression (lambda/matching.ml[1070,33844+8]..[1070,33844+16])
                Pexp_ident "make_key" (lambda/matching.ml[1070,33844+8]..[1070,33844+16])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1070,33844+17]..[1070,33844+18])
                    Pexp_ident "l" (lambda/matching.ml[1070,33844+17]..[1070,33844+18])
              ]
            [
              <case>
                pattern (lambda/matching.ml[1071,33868+4]..[1071,33868+10])
                  Ppat_construct "Some" (lambda/matching.ml[1071,33868+4]..[1071,33868+8])
                  Some
                    []
                    pattern (lambda/matching.ml[1071,33868+9]..[1071,33868+10])
                      Ppat_var "l" (lambda/matching.ml[1071,33868+9]..[1071,33868+10])
                expression (lambda/matching.ml[1071,33868+14]..[1071,33868+15])
                  Pexp_ident "l" (lambda/matching.ml[1071,33868+14]..[1071,33868+15])
              <case>
                pattern (lambda/matching.ml[1072,33884+4]..[1072,33884+8])
                  Ppat_construct "None" (lambda/matching.ml[1072,33884+4]..[1072,33884+8])
                  None
                expression (lambda/matching.ml[1072,33884+12]..[1072,33884+13])
                  Pexp_ident "l" (lambda/matching.ml[1072,33884+12]..[1072,33884+13])
            ]
    ]
  structure_item (lambda/matching.ml[1074,33899+0]..[1086,34228+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1074,33899+4]..[1074,33899+16])
          Ppat_var "same_actions" (lambda/matching.ml[1074,33899+4]..[1074,33899+16])
        expression (lambda/matching.ml[1074,33899+19]..[1086,34228+5])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[1075,33927+4]..[1075,33927+6])
                Ppat_construct "[]" (lambda/matching.ml[1075,33927+4]..[1075,33927+6])
                None
              expression (lambda/matching.ml[1075,33927+10]..[1075,33927+14])
                Pexp_construct "None" (lambda/matching.ml[1075,33927+10]..[1075,33927+14])
                None
            <case>
              pattern (lambda/matching.ml[1076,33942+4]..[1076,33942+16])
                Ppat_construct "::" (lambda/matching.ml[1076,33942+6]..[1076,33942+16]) ghost
                Some
                  []
                  pattern (lambda/matching.ml[1076,33942+6]..[1076,33942+16]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1076,33942+6]..[1076,33942+14])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1076,33942+7]..[1076,33942+8])
                            Ppat_any
                          pattern (lambda/matching.ml[1076,33942+10]..[1076,33942+13])
                            Ppat_var "act" (lambda/matching.ml[1076,33942+10]..[1076,33942+13])
                        ]
                      pattern (lambda/matching.ml[1076,33942+15]..[1076,33942+16]) ghost
                        Ppat_construct "[]" (lambda/matching.ml[1076,33942+15]..[1076,33942+16]) ghost
                        None
                    ]
              expression (lambda/matching.ml[1076,33942+20]..[1076,33942+28])
                Pexp_construct "Some" (lambda/matching.ml[1076,33942+20]..[1076,33942+24])
                Some
                  expression (lambda/matching.ml[1076,33942+25]..[1076,33942+28])
                    Pexp_ident "act" (lambda/matching.ml[1076,33942+25]..[1076,33942+28])
            <case>
              pattern (lambda/matching.ml[1077,33971+4]..[1077,33971+20])
                Ppat_construct "::" (lambda/matching.ml[1077,33971+14]..[1077,33971+16])
                Some
                  []
                  pattern (lambda/matching.ml[1077,33971+4]..[1077,33971+20]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1077,33971+4]..[1077,33971+13])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1077,33971+5]..[1077,33971+6])
                            Ppat_any
                          pattern (lambda/matching.ml[1077,33971+8]..[1077,33971+12])
                            Ppat_var "act0" (lambda/matching.ml[1077,33971+8]..[1077,33971+12])
                        ]
                      pattern (lambda/matching.ml[1077,33971+17]..[1077,33971+20])
                        Ppat_var "rem" (lambda/matching.ml[1077,33971+17]..[1077,33971+20])
                    ]
              expression (lambda/matching.ml[1077,33971+24]..[1086,34228+5])
                Pexp_match
                expression (lambda/matching.ml[1078,33997+12]..[1078,33997+25])
                  Pexp_apply
                  expression (lambda/matching.ml[1078,33997+12]..[1078,33997+20])
                    Pexp_ident "make_key" (lambda/matching.ml[1078,33997+12]..[1078,33997+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1078,33997+21]..[1078,33997+25])
                        Pexp_ident "act0" (lambda/matching.ml[1078,33997+21]..[1078,33997+25])
                  ]
                [
                  <case>
                    pattern (lambda/matching.ml[1079,34028+8]..[1079,34028+12])
                      Ppat_construct "None" (lambda/matching.ml[1079,34028+8]..[1079,34028+12])
                      None
                    expression (lambda/matching.ml[1079,34028+16]..[1079,34028+20])
                      Pexp_construct "None" (lambda/matching.ml[1079,34028+16]..[1079,34028+20])
                      None
                  <case>
                    pattern (lambda/matching.ml[1080,34049+8]..[1080,34049+16])
                      Ppat_var "key0_opt" (lambda/matching.ml[1080,34049+8]..[1080,34049+16])
                    expression (lambda/matching.ml[1081,34069+10]..[1085,34211+16])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1081,34069+14]..[1081,34069+22])
                            Ppat_var "same_act" (lambda/matching.ml[1081,34069+14]..[1081,34069+22])
                          expression (lambda/matching.ml[1081,34069+23]..[1081,34069+57]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1081,34069+23]..[1081,34069+31])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1081,34069+24]..[1081,34069+25])
                                  Ppat_any
                                pattern (lambda/matching.ml[1081,34069+27]..[1081,34069+30])
                                  Ppat_var "act" (lambda/matching.ml[1081,34069+27]..[1081,34069+30])
                              ]
                            expression (lambda/matching.ml[1081,34069+34]..[1081,34069+57])
                              Pexp_apply
                              expression (lambda/matching.ml[1081,34069+47]..[1081,34069+48])
                                Pexp_ident "=" (lambda/matching.ml[1081,34069+47]..[1081,34069+48])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1081,34069+34]..[1081,34069+46])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1081,34069+34]..[1081,34069+42])
                                      Pexp_ident "make_key" (lambda/matching.ml[1081,34069+34]..[1081,34069+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1081,34069+43]..[1081,34069+46])
                                          Pexp_ident "act" (lambda/matching.ml[1081,34069+43]..[1081,34069+46])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1081,34069+49]..[1081,34069+57])
                                    Pexp_ident "key0_opt" (lambda/matching.ml[1081,34069+49]..[1081,34069+57])
                              ]
                      ]
                      expression (lambda/matching.ml[1082,34130+10]..[1085,34211+16])
                        Pexp_ifthenelse
                        expression (lambda/matching.ml[1082,34130+13]..[1082,34130+38])
                          Pexp_apply
                          expression (lambda/matching.ml[1082,34130+13]..[1082,34130+25])
                            Pexp_ident "List.for_all" (lambda/matching.ml[1082,34130+13]..[1082,34130+25])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1082,34130+26]..[1082,34130+34])
                                Pexp_ident "same_act" (lambda/matching.ml[1082,34130+26]..[1082,34130+34])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1082,34130+35]..[1082,34130+38])
                                Pexp_ident "rem" (lambda/matching.ml[1082,34130+35]..[1082,34130+38])
                          ]
                        expression (lambda/matching.ml[1083,34174+12]..[1083,34174+21])
                          Pexp_construct "Some" (lambda/matching.ml[1083,34174+12]..[1083,34174+16])
                          Some
                            expression (lambda/matching.ml[1083,34174+17]..[1083,34174+21])
                              Pexp_ident "act0" (lambda/matching.ml[1083,34174+17]..[1083,34174+21])
                        Some
                          expression (lambda/matching.ml[1085,34211+12]..[1085,34211+16])
                            Pexp_construct "None" (lambda/matching.ml[1085,34211+12]..[1085,34211+16])
                            None
                ]
          ]
    ]
  structure_item (lambda/matching.ml[1088,34235+0]..[1101,34630+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1088,34235+4]..[1088,34235+15])
          Ppat_var "safe_before" (lambda/matching.ml[1088,34235+4]..[1088,34235+15])
        expression (lambda/matching.ml[1088,34235+16]..[1101,34630+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1088,34235+16]..[1088,34235+32])
            Ppat_tuple
            [
              pattern (lambda/matching.ml[1088,34235+17]..[1088,34235+24])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[1088,34235+18]..[1088,34235+19])
                    Ppat_var "p" (lambda/matching.ml[1088,34235+18]..[1088,34235+19])
                  pattern (lambda/matching.ml[1088,34235+21]..[1088,34235+23])
                    Ppat_var "ps" (lambda/matching.ml[1088,34235+21]..[1088,34235+23])
                ]
              pattern (lambda/matching.ml[1088,34235+26]..[1088,34235+31])
                Ppat_var "act_p" (lambda/matching.ml[1088,34235+26]..[1088,34235+31])
            ]
          expression (lambda/matching.ml[1088,34235+33]..[1101,34630+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1088,34235+33]..[1088,34235+34])
              Ppat_var "l" (lambda/matching.ml[1088,34235+33]..[1088,34235+34])
            expression (lambda/matching.ml[1090,34310+2]..[1101,34630+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1090,34310+6]..[1090,34310+18])
                    Ppat_var "same_actions" (lambda/matching.ml[1090,34310+6]..[1090,34310+18])
                  expression (lambda/matching.ml[1090,34310+19]..[1095,34460+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1090,34310+19]..[1090,34310+23])
                      Ppat_var "act1" (lambda/matching.ml[1090,34310+19]..[1090,34310+23])
                    expression (lambda/matching.ml[1090,34310+24]..[1095,34460+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1090,34310+24]..[1090,34310+28])
                        Ppat_var "act2" (lambda/matching.ml[1090,34310+24]..[1090,34310+28])
                      expression (lambda/matching.ml[1091,34341+4]..[1095,34460+13])
                        Pexp_match
                        expression (lambda/matching.ml[1091,34341+10]..[1091,34341+40])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[1091,34341+11]..[1091,34341+24])
                              Pexp_apply
                              expression (lambda/matching.ml[1091,34341+11]..[1091,34341+19])
                                Pexp_ident "make_key" (lambda/matching.ml[1091,34341+11]..[1091,34341+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1091,34341+20]..[1091,34341+24])
                                    Pexp_ident "act1" (lambda/matching.ml[1091,34341+20]..[1091,34341+24])
                              ]
                            expression (lambda/matching.ml[1091,34341+26]..[1091,34341+39])
                              Pexp_apply
                              expression (lambda/matching.ml[1091,34341+26]..[1091,34341+34])
                                Pexp_ident "make_key" (lambda/matching.ml[1091,34341+26]..[1091,34341+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1091,34341+35]..[1091,34341+39])
                                    Pexp_ident "act2" (lambda/matching.ml[1091,34341+35]..[1091,34341+39])
                              ]
                          ]
                        [
                          <case>
                            pattern (lambda/matching.ml[1092,34387+6]..[1092,34387+26])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1092,34387+6]..[1092,34387+15])
                                  Ppat_construct "Some" (lambda/matching.ml[1092,34387+6]..[1092,34387+10])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1092,34387+11]..[1092,34387+15])
                                      Ppat_var "key1" (lambda/matching.ml[1092,34387+11]..[1092,34387+15])
                                pattern (lambda/matching.ml[1092,34387+17]..[1092,34387+26])
                                  Ppat_construct "Some" (lambda/matching.ml[1092,34387+17]..[1092,34387+21])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1092,34387+22]..[1092,34387+26])
                                      Ppat_var "key2" (lambda/matching.ml[1092,34387+22]..[1092,34387+26])
                              ]
                            expression (lambda/matching.ml[1092,34387+30]..[1092,34387+41])
                              Pexp_apply
                              expression (lambda/matching.ml[1092,34387+35]..[1092,34387+36])
                                Pexp_ident "=" (lambda/matching.ml[1092,34387+35]..[1092,34387+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1092,34387+30]..[1092,34387+34])
                                    Pexp_ident "key1" (lambda/matching.ml[1092,34387+30]..[1092,34387+34])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1092,34387+37]..[1092,34387+41])
                                    Pexp_ident "key2" (lambda/matching.ml[1092,34387+37]..[1092,34387+41])
                              ]
                          <case>
                            pattern (lambda/matching.ml[1093,34429+6]..[1094,34443+13])
                              Ppat_or
                              pattern (lambda/matching.ml[1093,34429+6]..[1093,34429+13])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1093,34429+6]..[1093,34429+10])
                                    Ppat_construct "None" (lambda/matching.ml[1093,34429+6]..[1093,34429+10])
                                    None
                                  pattern (lambda/matching.ml[1093,34429+12]..[1093,34429+13])
                                    Ppat_any
                                ]
                              pattern (lambda/matching.ml[1094,34443+6]..[1094,34443+13])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1094,34443+6]..[1094,34443+7])
                                    Ppat_any
                                  pattern (lambda/matching.ml[1094,34443+9]..[1094,34443+13])
                                    Ppat_construct "None" (lambda/matching.ml[1094,34443+9]..[1094,34443+13])
                                    None
                                ]
                            expression (lambda/matching.ml[1095,34460+8]..[1095,34460+13])
                              Pexp_construct "false" (lambda/matching.ml[1095,34460+8]..[1095,34460+13])
                              None
                        ]
              ]
              expression (lambda/matching.ml[1097,34479+2]..[1101,34630+5])
                Pexp_apply
                expression (lambda/matching.ml[1097,34479+2]..[1097,34479+14])
                  Pexp_ident "List.for_all" (lambda/matching.ml[1097,34479+2]..[1097,34479+14])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1098,34494+4]..[1100,34554+75])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1098,34494+9]..[1098,34494+25])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1098,34494+10]..[1098,34494+17])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1098,34494+11]..[1098,34494+12])
                                Ppat_var "q" (lambda/matching.ml[1098,34494+11]..[1098,34494+12])
                              pattern (lambda/matching.ml[1098,34494+14]..[1098,34494+16])
                                Ppat_var "qs" (lambda/matching.ml[1098,34494+14]..[1098,34494+16])
                            ]
                          pattern (lambda/matching.ml[1098,34494+19]..[1098,34494+24])
                            Ppat_var "act_q" (lambda/matching.ml[1098,34494+19]..[1098,34494+24])
                        ]
                      expression (lambda/matching.ml[1099,34523+6]..[1100,34554+74])
                        Pexp_apply
                        expression (lambda/matching.ml[1100,34554+6]..[1100,34554+8])
                          Pexp_ident "||" (lambda/matching.ml[1100,34554+6]..[1100,34554+8])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1099,34523+6]..[1099,34523+30])
                              Pexp_apply
                              expression (lambda/matching.ml[1099,34523+6]..[1099,34523+18])
                                Pexp_ident "same_actions" (lambda/matching.ml[1099,34523+6]..[1099,34523+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1099,34523+19]..[1099,34523+24])
                                    Pexp_ident "act_p" (lambda/matching.ml[1099,34523+19]..[1099,34523+24])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1099,34523+25]..[1099,34523+30])
                                    Pexp_ident "act_q" (lambda/matching.ml[1099,34523+25]..[1099,34523+30])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1100,34554+9]..[1100,34554+74])
                              Pexp_apply
                              expression (lambda/matching.ml[1100,34554+9]..[1100,34554+12])
                                Pexp_ident "not" (lambda/matching.ml[1100,34554+9]..[1100,34554+12])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1100,34554+13]..[1100,34554+74])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1100,34554+14]..[1100,34554+25])
                                      Pexp_ident "may_compats" (lambda/matching.ml[1100,34554+14]..[1100,34554+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1100,34554+26]..[1100,34554+49])
                                          Pexp_construct "::" (lambda/matching.ml[1100,34554+43]..[1100,34554+45])
                                          Some
                                            expression (lambda/matching.ml[1100,34554+27]..[1100,34554+48]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[1100,34554+27]..[1100,34554+42])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1100,34554+27]..[1100,34554+40])
                                                    Pexp_ident "General.erase" (lambda/matching.ml[1100,34554+27]..[1100,34554+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1100,34554+41]..[1100,34554+42])
                                                        Pexp_ident "p" (lambda/matching.ml[1100,34554+41]..[1100,34554+42])
                                                  ]
                                                expression (lambda/matching.ml[1100,34554+46]..[1100,34554+48])
                                                  Pexp_ident "ps" (lambda/matching.ml[1100,34554+46]..[1100,34554+48])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1100,34554+50]..[1100,34554+73])
                                          Pexp_construct "::" (lambda/matching.ml[1100,34554+67]..[1100,34554+69])
                                          Some
                                            expression (lambda/matching.ml[1100,34554+51]..[1100,34554+72]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[1100,34554+51]..[1100,34554+66])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1100,34554+51]..[1100,34554+64])
                                                    Pexp_ident "General.erase" (lambda/matching.ml[1100,34554+51]..[1100,34554+64])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1100,34554+65]..[1100,34554+66])
                                                        Pexp_ident "q" (lambda/matching.ml[1100,34554+65]..[1100,34554+66])
                                                  ]
                                                expression (lambda/matching.ml[1100,34554+70]..[1100,34554+72])
                                                  Pexp_ident "qs" (lambda/matching.ml[1100,34554+70]..[1100,34554+72])
                                              ]
                                    ]
                              ]
                        ]
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1101,34630+4]..[1101,34630+5])
                      Pexp_ident "l" (lambda/matching.ml[1101,34630+4]..[1101,34630+5])
                ]
    ]
  structure_item (lambda/matching.ml[1103,34637+0]..[1107,34804+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1103,34637+4]..[1103,34637+26])
          Ppat_var "half_simplify_nonempty" (lambda/matching.ml[1103,34637+4]..[1103,34637+26])
        expression (lambda/matching.ml[1103,34637+27]..[1107,34804+31]) ghost
          Pexp_fun
          Labelled "arg"
          None
          pattern (lambda/matching.ml[1103,34637+28]..[1103,34637+31])
            Ppat_var "arg" (lambda/matching.ml[1103,34637+28]..[1103,34637+31])
          expression (lambda/matching.ml[1103,34637+32]..[1107,34804+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1103,34637+32]..[1103,34637+80])
              Ppat_constraint
              pattern (lambda/matching.ml[1103,34637+33]..[1103,34637+36])
                Ppat_var "cls" (lambda/matching.ml[1103,34637+33]..[1103,34637+36])
              core_type (lambda/matching.ml[1103,34637+39]..[1103,34637+79])
                Ptyp_constr "clause" (lambda/matching.ml[1103,34637+73]..[1103,34637+79])
                [
                  core_type (lambda/matching.ml[1103,34637+39]..[1103,34637+72])
                    Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[1103,34637+57]..[1103,34637+72])
                    [
                      core_type (lambda/matching.ml[1103,34637+39]..[1103,34637+56])
                        Ptyp_constr "Typedtree.pattern" (lambda/matching.ml[1103,34637+39]..[1103,34637+56])
                        []
                    ]
                ]
            expression (lambda/matching.ml[1104,34718+2]..[1107,34804+31])
              Pexp_constraint
              expression (lambda/matching.ml[1105,34743+2]..[1107,34804+31])
                Pexp_apply
                expression (lambda/matching.ml[1107,34804+2]..[1107,34804+4])
                  Pexp_ident "|>" (lambda/matching.ml[1107,34804+2]..[1107,34804+4])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1105,34743+2]..[1106,34749+54])
                      Pexp_apply
                      expression (lambda/matching.ml[1106,34749+2]..[1106,34749+4])
                        Pexp_ident "|>" (lambda/matching.ml[1106,34749+2]..[1106,34749+4])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1105,34743+2]..[1105,34743+5])
                            Pexp_ident "cls" (lambda/matching.ml[1105,34743+2]..[1105,34743+5])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1106,34749+5]..[1106,34749+54])
                            Pexp_apply
                            expression (lambda/matching.ml[1106,34749+5]..[1106,34749+15])
                              Pexp_ident "map_on_row" (lambda/matching.ml[1106,34749+5]..[1106,34749+15])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1106,34749+16]..[1106,34749+54])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1106,34749+17]..[1106,34749+40])
                                    Pexp_ident "Non_empty_row.map_first" (lambda/matching.ml[1106,34749+17]..[1106,34749+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1106,34749+41]..[1106,34749+53])
                                        Pexp_ident "General.view" (lambda/matching.ml[1106,34749+41]..[1106,34749+53])
                                  ]
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1107,34804+5]..[1107,34804+31])
                      Pexp_apply
                      expression (lambda/matching.ml[1107,34804+5]..[1107,34804+26])
                        Pexp_ident "Half_simple.of_clause" (lambda/matching.ml[1107,34804+5]..[1107,34804+26])
                      [
                        <arg>
                        Labelled "arg"
                          expression (lambda/matching.ml[1107,34804+28]..[1107,34804+31])
                            Pexp_ident "arg" (lambda/matching.ml[1107,34804+28]..[1107,34804+31])
                      ]
                ]
              core_type (lambda/matching.ml[1104,34718+4]..[1104,34718+22])
                Ptyp_constr "Half_simple.clause" (lambda/matching.ml[1104,34718+4]..[1104,34718+22])
                []
    ]
  structure_item (lambda/matching.ml[1109,34837+0]..[1112,34954+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1109,34837+4]..[1109,34837+24])
          Ppat_var "half_simplify_clause" (lambda/matching.ml[1109,34837+4]..[1109,34837+24])
        expression (lambda/matching.ml[1109,34837+25]..[1112,34954+32]) ghost
          Pexp_fun
          Labelled "arg"
          None
          pattern (lambda/matching.ml[1109,34837+26]..[1109,34837+29])
            Ppat_var "arg" (lambda/matching.ml[1109,34837+26]..[1109,34837+29])
          expression (lambda/matching.ml[1109,34837+30]..[1112,34954+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1109,34837+30]..[1109,34837+67])
              Ppat_constraint
              pattern (lambda/matching.ml[1109,34837+31]..[1109,34837+34])
                Ppat_var "cls" (lambda/matching.ml[1109,34837+31]..[1109,34837+34])
              core_type (lambda/matching.ml[1109,34837+37]..[1109,34837+66])
                Ptyp_constr "clause" (lambda/matching.ml[1109,34837+60]..[1109,34837+66])
                [
                  core_type (lambda/matching.ml[1109,34837+37]..[1109,34837+59])
                    Ptyp_constr "list" (lambda/matching.ml[1109,34837+55]..[1109,34837+59])
                    [
                      core_type (lambda/matching.ml[1109,34837+37]..[1109,34837+54])
                        Ptyp_constr "Typedtree.pattern" (lambda/matching.ml[1109,34837+37]..[1109,34837+54])
                        []
                    ]
                ]
            expression (lambda/matching.ml[1110,34907+2]..[1112,34954+32])
              Pexp_apply
              expression (lambda/matching.ml[1112,34954+2]..[1112,34954+4])
                Pexp_ident "|>" (lambda/matching.ml[1112,34954+2]..[1112,34954+4])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1110,34907+2]..[1111,34913+40])
                    Pexp_apply
                    expression (lambda/matching.ml[1111,34913+2]..[1111,34913+4])
                      Pexp_ident "|>" (lambda/matching.ml[1111,34913+2]..[1111,34913+4])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1110,34907+2]..[1110,34907+5])
                          Pexp_ident "cls" (lambda/matching.ml[1110,34907+2]..[1110,34907+5])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1111,34913+5]..[1111,34913+40])
                          Pexp_apply
                          expression (lambda/matching.ml[1111,34913+5]..[1111,34913+15])
                            Pexp_ident "map_on_row" (lambda/matching.ml[1111,34913+5]..[1111,34913+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1111,34913+16]..[1111,34913+40])
                                Pexp_ident "Non_empty_row.of_initial" (lambda/matching.ml[1111,34913+16]..[1111,34913+40])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1112,34954+5]..[1112,34954+32])
                    Pexp_apply
                    expression (lambda/matching.ml[1112,34954+5]..[1112,34954+27])
                      Pexp_ident "half_simplify_nonempty" (lambda/matching.ml[1112,34954+5]..[1112,34954+27])
                    [
                      <arg>
                      Labelled "arg"
                        expression (lambda/matching.ml[1112,34954+29]..[1112,34954+32])
                          Pexp_ident "arg" (lambda/matching.ml[1112,34954+29]..[1112,34954+32])
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[1117,35071+0]..[1125,35342+5])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[1117,35071+8]..[1117,35071+21])
          Ppat_var "what_is_cases" (lambda/matching.ml[1117,35071+8]..[1117,35071+21])
        expression (lambda/matching.ml[1117,35071+22]..[1125,35342+5]) ghost
          Pexp_fun
          Labelled "skip_any"
          None
          pattern (lambda/matching.ml[1117,35071+23]..[1117,35071+31])
            Ppat_var "skip_any" (lambda/matching.ml[1117,35071+23]..[1117,35071+31])
          expression (lambda/matching.ml[1117,35071+32]..[1125,35342+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1117,35071+32]..[1117,35071+37])
              Ppat_var "cases" (lambda/matching.ml[1117,35071+32]..[1117,35071+37])
            expression (lambda/matching.ml[1118,35111+2]..[1125,35342+5])
              Pexp_match
              expression (lambda/matching.ml[1118,35111+8]..[1118,35111+13])
                Pexp_ident "cases" (lambda/matching.ml[1118,35111+8]..[1118,35111+13])
              [
                <case>
                  pattern (lambda/matching.ml[1119,35130+4]..[1119,35130+6])
                    Ppat_construct "[]" (lambda/matching.ml[1119,35130+4]..[1119,35130+6])
                    None
                  expression (lambda/matching.ml[1119,35130+10]..[1119,35130+29])
                    Pexp_ident "Patterns.Head.omega" (lambda/matching.ml[1119,35130+10]..[1119,35130+29])
                <case>
                  pattern (lambda/matching.ml[1120,35160+4]..[1120,35160+22])
                    Ppat_construct "::" (lambda/matching.ml[1120,35160+16]..[1120,35160+18])
                    Some
                      []
                      pattern (lambda/matching.ml[1120,35160+4]..[1120,35160+22]) ghost
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1120,35160+4]..[1120,35160+15])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1120,35160+5]..[1120,35160+11])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1120,35160+6]..[1120,35160+7])
                                    Ppat_var "p" (lambda/matching.ml[1120,35160+6]..[1120,35160+7])
                                  pattern (lambda/matching.ml[1120,35160+9]..[1120,35160+10])
                                    Ppat_any
                                ]
                              pattern (lambda/matching.ml[1120,35160+13]..[1120,35160+14])
                                Ppat_any
                            ]
                          pattern (lambda/matching.ml[1120,35160+19]..[1120,35160+22])
                            Ppat_var "rem" (lambda/matching.ml[1120,35160+19]..[1120,35160+22])
                        ]
                  expression (lambda/matching.ml[1120,35160+26]..[1125,35342+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[1121,35188+10]..[1121,35188+14])
                          Ppat_var "head" (lambda/matching.ml[1121,35188+10]..[1121,35188+14])
                        expression (lambda/matching.ml[1121,35188+17]..[1121,35188+30])
                          Pexp_apply
                          expression (lambda/matching.ml[1121,35188+17]..[1121,35188+28])
                            Pexp_ident "Simple.head" (lambda/matching.ml[1121,35188+17]..[1121,35188+28])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1121,35188+29]..[1121,35188+30])
                                Pexp_ident "p" (lambda/matching.ml[1121,35188+29]..[1121,35188+30])
                          ]
                    ]
                    expression (lambda/matching.ml[1122,35222+6]..[1124,35324+17])
                      Pexp_match
                      expression (lambda/matching.ml[1122,35222+12]..[1122,35222+25])
                        Pexp_field
                        expression (lambda/matching.ml[1122,35222+12]..[1122,35222+16])
                          Pexp_ident "head" (lambda/matching.ml[1122,35222+12]..[1122,35222+16])
                        "pat_desc" (lambda/matching.ml[1122,35222+17]..[1122,35222+25])
                      [
                        <case>
                          pattern (lambda/matching.ml[1123,35253+8]..[1123,35253+25])
                            Ppat_construct "Patterns.Head.Any" (lambda/matching.ml[1123,35253+8]..[1123,35253+25])
                            None
                          <when>
                            expression (lambda/matching.ml[1123,35253+31]..[1123,35253+39])
                              Pexp_ident "skip_any" (lambda/matching.ml[1123,35253+31]..[1123,35253+39])
                          expression (lambda/matching.ml[1123,35253+43]..[1123,35253+70])
                            Pexp_apply
                            expression (lambda/matching.ml[1123,35253+43]..[1123,35253+56])
                              Pexp_ident "what_is_cases" (lambda/matching.ml[1123,35253+43]..[1123,35253+56])
                            [
                              <arg>
                              Labelled "skip_any"
                                expression (lambda/matching.ml[1123,35253+58]..[1123,35253+66])
                                  Pexp_ident "skip_any" (lambda/matching.ml[1123,35253+58]..[1123,35253+66])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1123,35253+67]..[1123,35253+70])
                                  Pexp_ident "rem" (lambda/matching.ml[1123,35253+67]..[1123,35253+70])
                            ]
                        <case>
                          pattern (lambda/matching.ml[1124,35324+8]..[1124,35324+9])
                            Ppat_any
                          expression (lambda/matching.ml[1124,35324+13]..[1124,35324+17])
                            Pexp_ident "head" (lambda/matching.ml[1124,35324+13]..[1124,35324+17])
                      ]
              ]
    ]
  structure_item (lambda/matching.ml[1127,35349+0]..[1127,35349+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1127,35349+4]..[1127,35349+22])
          Ppat_var "what_is_first_case" (lambda/matching.ml[1127,35349+4]..[1127,35349+22])
        expression (lambda/matching.ml[1127,35349+25]..[1127,35349+54])
          Pexp_apply
          expression (lambda/matching.ml[1127,35349+25]..[1127,35349+38])
            Pexp_ident "what_is_cases" (lambda/matching.ml[1127,35349+25]..[1127,35349+38])
          [
            <arg>
            Labelled "skip_any"
              expression (lambda/matching.ml[1127,35349+49]..[1127,35349+54])
                Pexp_construct "false" (lambda/matching.ml[1127,35349+49]..[1127,35349+54])
                None
          ]
    ]
  structure_item (lambda/matching.ml[1129,35405+0]..[1129,35405+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1129,35405+4]..[1129,35405+17])
          Ppat_var "what_is_cases" (lambda/matching.ml[1129,35405+4]..[1129,35405+17])
        expression (lambda/matching.ml[1129,35405+20]..[1129,35405+48])
          Pexp_apply
          expression (lambda/matching.ml[1129,35405+20]..[1129,35405+33])
            Pexp_ident "what_is_cases" (lambda/matching.ml[1129,35405+20]..[1129,35405+33])
          [
            <arg>
            Labelled "skip_any"
              expression (lambda/matching.ml[1129,35405+44]..[1129,35405+48])
                Pexp_construct "true" (lambda/matching.ml[1129,35405+44]..[1129,35405+48])
                None
          ]
    ]
  structure_item (lambda/matching.ml[1131,35455+0]..[1134,35570+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1131,35455+4]..[1131,35455+21])
          Ppat_var "pm_free_variables" (lambda/matching.ml[1131,35455+4]..[1131,35455+21])
        expression (lambda/matching.ml[1131,35455+22]..[1134,35570+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1131,35455+22]..[1131,35455+31])
            Ppat_record Closed
            [
              "cases" (lambda/matching.ml[1131,35455+24]..[1131,35455+29]) ghost
                pattern (lambda/matching.ml[1131,35455+24]..[1131,35455+29])
                  Ppat_var "cases" (lambda/matching.ml[1131,35455+24]..[1131,35455+29])
            ]
          expression (lambda/matching.ml[1132,35489+2]..[1134,35570+25])
            Pexp_apply
            expression (lambda/matching.ml[1132,35489+2]..[1132,35489+17])
              Pexp_ident "List.fold_right" (lambda/matching.ml[1132,35489+2]..[1132,35489+17])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[1133,35507+4]..[1133,35507+62])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1133,35507+9]..[1133,35507+17])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1133,35507+10]..[1133,35507+11])
                        Ppat_any
                      pattern (lambda/matching.ml[1133,35507+13]..[1133,35507+16])
                        Ppat_var "act" (lambda/matching.ml[1133,35507+13]..[1133,35507+16])
                    ]
                  expression (lambda/matching.ml[1133,35507+18]..[1133,35507+61]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1133,35507+18]..[1133,35507+19])
                      Ppat_var "r" (lambda/matching.ml[1133,35507+18]..[1133,35507+19])
                    expression (lambda/matching.ml[1133,35507+23]..[1133,35507+61])
                      Pexp_apply
                      expression (lambda/matching.ml[1133,35507+23]..[1133,35507+38])
                        Pexp_ident "Ident.Set.union" (lambda/matching.ml[1133,35507+23]..[1133,35507+38])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1133,35507+39]..[1133,35507+59])
                            Pexp_apply
                            expression (lambda/matching.ml[1133,35507+40]..[1133,35507+54])
                              Pexp_ident "free_variables" (lambda/matching.ml[1133,35507+40]..[1133,35507+54])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1133,35507+55]..[1133,35507+58])
                                  Pexp_ident "act" (lambda/matching.ml[1133,35507+55]..[1133,35507+58])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1133,35507+60]..[1133,35507+61])
                            Pexp_ident "r" (lambda/matching.ml[1133,35507+60]..[1133,35507+61])
                      ]
              <arg>
              Nolabel
                expression (lambda/matching.ml[1134,35570+4]..[1134,35570+9])
                  Pexp_ident "cases" (lambda/matching.ml[1134,35570+4]..[1134,35570+9])
              <arg>
              Nolabel
                expression (lambda/matching.ml[1134,35570+10]..[1134,35570+25])
                  Pexp_ident "Ident.Set.empty" (lambda/matching.ml[1134,35570+10]..[1134,35570+25])
            ]
    ]
  structure_item (lambda/matching.ml[1138,35630+0]..[1171,37053+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1138,35630+4]..[1138,35630+13])
          Ppat_var "can_group" (lambda/matching.ml[1138,35630+4]..[1138,35630+13])
        expression (lambda/matching.ml[1138,35630+14]..[1171,37053+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1138,35630+14]..[1138,35630+19])
            Ppat_var "discr" (lambda/matching.ml[1138,35630+14]..[1138,35630+19])
          expression (lambda/matching.ml[1138,35630+20]..[1171,37053+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1138,35630+20]..[1138,35630+23])
              Ppat_var "pat" (lambda/matching.ml[1138,35630+20]..[1138,35630+23])
            expression (lambda/matching.ml[1139,35656+2]..[1171,37053+11])
              Pexp_open Fresh
              module_expr (lambda/matching.ml[1139,35656+11]..[1139,35656+24])
                Pmod_ident "Patterns.Head" (lambda/matching.ml[1139,35656+11]..[1139,35656+24])
              expression (lambda/matching.ml[1140,35684+2]..[1171,37053+11])
                Pexp_match
                expression (lambda/matching.ml[1140,35684+8]..[1140,35684+52])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[1140,35684+9]..[1140,35684+23])
                      Pexp_field
                      expression (lambda/matching.ml[1140,35684+9]..[1140,35684+14])
                        Pexp_ident "discr" (lambda/matching.ml[1140,35684+9]..[1140,35684+14])
                      "pat_desc" (lambda/matching.ml[1140,35684+15]..[1140,35684+23])
                    expression (lambda/matching.ml[1140,35684+25]..[1140,35684+51])
                      Pexp_field
                      expression (lambda/matching.ml[1140,35684+25]..[1140,35684+42])
                        Pexp_apply
                        expression (lambda/matching.ml[1140,35684+26]..[1140,35684+37])
                          Pexp_ident "Simple.head" (lambda/matching.ml[1140,35684+26]..[1140,35684+37])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1140,35684+38]..[1140,35684+41])
                              Pexp_ident "pat" (lambda/matching.ml[1140,35684+38]..[1140,35684+41])
                        ]
                      "pat_desc" (lambda/matching.ml[1140,35684+43]..[1140,35684+51])
                  ]
                [
                  <case>
                    pattern (lambda/matching.ml[1141,35742+4]..[1148,36081+62])
                      Ppat_or
                      pattern (lambda/matching.ml[1141,35742+4]..[1147,36026+54])
                        Ppat_or
                        pattern (lambda/matching.ml[1141,35742+4]..[1146,35971+54])
                          Ppat_or
                          pattern (lambda/matching.ml[1141,35742+4]..[1145,35916+54])
                            Ppat_or
                            pattern (lambda/matching.ml[1141,35742+4]..[1144,35859+56])
                              Ppat_or
                              pattern (lambda/matching.ml[1141,35742+4]..[1143,35806+52])
                                Ppat_or
                                pattern (lambda/matching.ml[1141,35742+4]..[1142,35755+50])
                                  Ppat_or
                                  pattern (lambda/matching.ml[1141,35742+4]..[1141,35742+12])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1141,35742+4]..[1141,35742+7])
                                        Ppat_construct "Any" (lambda/matching.ml[1141,35742+4]..[1141,35742+7])
                                        None
                                      pattern (lambda/matching.ml[1141,35742+9]..[1141,35742+12])
                                        Ppat_construct "Any" (lambda/matching.ml[1141,35742+9]..[1141,35742+12])
                                        None
                                    ]
                                  pattern (lambda/matching.ml[1142,35755+4]..[1142,35755+50])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1142,35755+4]..[1142,35755+26])
                                        Ppat_construct "Constant" (lambda/matching.ml[1142,35755+4]..[1142,35755+12])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1142,35755+13]..[1142,35755+26])
                                            Ppat_construct "Const_int" (lambda/matching.ml[1142,35755+14]..[1142,35755+23])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[1142,35755+24]..[1142,35755+25])
                                                Ppat_any
                                      pattern (lambda/matching.ml[1142,35755+28]..[1142,35755+50])
                                        Ppat_construct "Constant" (lambda/matching.ml[1142,35755+28]..[1142,35755+36])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1142,35755+37]..[1142,35755+50])
                                            Ppat_construct "Const_int" (lambda/matching.ml[1142,35755+38]..[1142,35755+47])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[1142,35755+48]..[1142,35755+49])
                                                Ppat_any
                                    ]
                                pattern (lambda/matching.ml[1143,35806+4]..[1143,35806+52])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1143,35806+4]..[1143,35806+27])
                                      Ppat_construct "Constant" (lambda/matching.ml[1143,35806+4]..[1143,35806+12])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1143,35806+13]..[1143,35806+27])
                                          Ppat_construct "Const_char" (lambda/matching.ml[1143,35806+14]..[1143,35806+24])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[1143,35806+25]..[1143,35806+26])
                                              Ppat_any
                                    pattern (lambda/matching.ml[1143,35806+29]..[1143,35806+52])
                                      Ppat_construct "Constant" (lambda/matching.ml[1143,35806+29]..[1143,35806+37])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1143,35806+38]..[1143,35806+52])
                                          Ppat_construct "Const_char" (lambda/matching.ml[1143,35806+39]..[1143,35806+49])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[1143,35806+50]..[1143,35806+51])
                                              Ppat_any
                                  ]
                              pattern (lambda/matching.ml[1144,35859+4]..[1144,35859+56])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1144,35859+4]..[1144,35859+29])
                                    Ppat_construct "Constant" (lambda/matching.ml[1144,35859+4]..[1144,35859+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1144,35859+13]..[1144,35859+29])
                                        Ppat_construct "Const_string" (lambda/matching.ml[1144,35859+14]..[1144,35859+26])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1144,35859+27]..[1144,35859+28])
                                            Ppat_any
                                  pattern (lambda/matching.ml[1144,35859+31]..[1144,35859+56])
                                    Ppat_construct "Constant" (lambda/matching.ml[1144,35859+31]..[1144,35859+39])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1144,35859+40]..[1144,35859+56])
                                        Ppat_construct "Const_string" (lambda/matching.ml[1144,35859+41]..[1144,35859+53])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1144,35859+54]..[1144,35859+55])
                                            Ppat_any
                                ]
                            pattern (lambda/matching.ml[1145,35916+4]..[1145,35916+54])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1145,35916+4]..[1145,35916+28])
                                  Ppat_construct "Constant" (lambda/matching.ml[1145,35916+4]..[1145,35916+12])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1145,35916+13]..[1145,35916+28])
                                      Ppat_construct "Const_float" (lambda/matching.ml[1145,35916+14]..[1145,35916+25])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1145,35916+26]..[1145,35916+27])
                                          Ppat_any
                                pattern (lambda/matching.ml[1145,35916+30]..[1145,35916+54])
                                  Ppat_construct "Constant" (lambda/matching.ml[1145,35916+30]..[1145,35916+38])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1145,35916+39]..[1145,35916+54])
                                      Ppat_construct "Const_float" (lambda/matching.ml[1145,35916+40]..[1145,35916+51])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1145,35916+52]..[1145,35916+53])
                                          Ppat_any
                              ]
                          pattern (lambda/matching.ml[1146,35971+4]..[1146,35971+54])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1146,35971+4]..[1146,35971+28])
                                Ppat_construct "Constant" (lambda/matching.ml[1146,35971+4]..[1146,35971+12])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1146,35971+13]..[1146,35971+28])
                                    Ppat_construct "Const_int32" (lambda/matching.ml[1146,35971+14]..[1146,35971+25])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1146,35971+26]..[1146,35971+27])
                                        Ppat_any
                              pattern (lambda/matching.ml[1146,35971+30]..[1146,35971+54])
                                Ppat_construct "Constant" (lambda/matching.ml[1146,35971+30]..[1146,35971+38])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1146,35971+39]..[1146,35971+54])
                                    Ppat_construct "Const_int32" (lambda/matching.ml[1146,35971+40]..[1146,35971+51])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1146,35971+52]..[1146,35971+53])
                                        Ppat_any
                            ]
                        pattern (lambda/matching.ml[1147,36026+4]..[1147,36026+54])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[1147,36026+4]..[1147,36026+28])
                              Ppat_construct "Constant" (lambda/matching.ml[1147,36026+4]..[1147,36026+12])
                              Some
                                []
                                pattern (lambda/matching.ml[1147,36026+13]..[1147,36026+28])
                                  Ppat_construct "Const_int64" (lambda/matching.ml[1147,36026+14]..[1147,36026+25])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1147,36026+26]..[1147,36026+27])
                                      Ppat_any
                            pattern (lambda/matching.ml[1147,36026+30]..[1147,36026+54])
                              Ppat_construct "Constant" (lambda/matching.ml[1147,36026+30]..[1147,36026+38])
                              Some
                                []
                                pattern (lambda/matching.ml[1147,36026+39]..[1147,36026+54])
                                  Ppat_construct "Const_int64" (lambda/matching.ml[1147,36026+40]..[1147,36026+51])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1147,36026+52]..[1147,36026+53])
                                      Ppat_any
                          ]
                      pattern (lambda/matching.ml[1148,36081+4]..[1148,36081+62])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1148,36081+4]..[1148,36081+32])
                            Ppat_construct "Constant" (lambda/matching.ml[1148,36081+4]..[1148,36081+12])
                            Some
                              []
                              pattern (lambda/matching.ml[1148,36081+13]..[1148,36081+32])
                                Ppat_construct "Const_nativeint" (lambda/matching.ml[1148,36081+14]..[1148,36081+29])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1148,36081+30]..[1148,36081+31])
                                    Ppat_any
                          pattern (lambda/matching.ml[1148,36081+34]..[1148,36081+62])
                            Ppat_construct "Constant" (lambda/matching.ml[1148,36081+34]..[1148,36081+42])
                            Some
                              []
                              pattern (lambda/matching.ml[1148,36081+43]..[1148,36081+62])
                                Ppat_construct "Const_nativeint" (lambda/matching.ml[1148,36081+44]..[1148,36081+59])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1148,36081+60]..[1148,36081+61])
                                    Ppat_any
                        ]
                    expression (lambda/matching.ml[1149,36147+6]..[1149,36147+10])
                      Pexp_construct "true" (lambda/matching.ml[1149,36147+6]..[1149,36147+10])
                      None
                  <case>
                    pattern (lambda/matching.ml[1150,36158+4]..[1150,36158+78])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[1150,36158+4]..[1150,36158+58])
                          Ppat_construct "Construct" (lambda/matching.ml[1150,36158+4]..[1150,36158+13])
                          Some
                            []
                            pattern (lambda/matching.ml[1150,36158+14]..[1150,36158+58])
                              Ppat_record Closed
                              [
                                "cstr_tag" (lambda/matching.ml[1150,36158+16]..[1150,36158+24])
                                  pattern (lambda/matching.ml[1150,36158+27]..[1150,36158+56])
                                    Ppat_alias "discr_tag" (lambda/matching.ml[1150,36158+47]..[1150,36158+56])
                                    pattern (lambda/matching.ml[1150,36158+27]..[1150,36158+43])
                                      Ppat_construct "Cstr_extension" (lambda/matching.ml[1150,36158+27]..[1150,36158+41])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1150,36158+42]..[1150,36158+43])
                                          Ppat_any
                              ]
                        pattern (lambda/matching.ml[1150,36158+60]..[1150,36158+78])
                          Ppat_construct "Construct" (lambda/matching.ml[1150,36158+60]..[1150,36158+69])
                          Some
                            []
                            pattern (lambda/matching.ml[1150,36158+70]..[1150,36158+78])
                              Ppat_var "pat_cstr" (lambda/matching.ml[1150,36158+70]..[1150,36158+78])
                      ]
                    expression (lambda/matching.ml[1157,36588+6]..[1157,36588+49])
                      Pexp_apply
                      expression (lambda/matching.ml[1157,36588+6]..[1157,36588+21])
                        Pexp_ident "Types.equal_tag" (lambda/matching.ml[1157,36588+6]..[1157,36588+21])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1157,36588+22]..[1157,36588+31])
                            Pexp_ident "discr_tag" (lambda/matching.ml[1157,36588+22]..[1157,36588+31])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1157,36588+32]..[1157,36588+49])
                            Pexp_field
                            expression (lambda/matching.ml[1157,36588+32]..[1157,36588+40])
                              Pexp_ident "pat_cstr" (lambda/matching.ml[1157,36588+32]..[1157,36588+40])
                            "cstr_tag" (lambda/matching.ml[1157,36588+41]..[1157,36588+49])
                      ]
                  <case>
                    pattern (lambda/matching.ml[1158,36638+4]..[1163,36773+14])
                      Ppat_or
                      pattern (lambda/matching.ml[1158,36638+4]..[1162,36748+24])
                        Ppat_or
                        pattern (lambda/matching.ml[1158,36638+4]..[1161,36727+20])
                          Ppat_or
                          pattern (lambda/matching.ml[1158,36638+4]..[1160,36696+30])
                            Ppat_or
                            pattern (lambda/matching.ml[1158,36638+4]..[1159,36667+28])
                              Ppat_or
                              pattern (lambda/matching.ml[1158,36638+4]..[1158,36638+28])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1158,36638+4]..[1158,36638+15])
                                    Ppat_construct "Construct" (lambda/matching.ml[1158,36638+4]..[1158,36638+13])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1158,36638+14]..[1158,36638+15])
                                        Ppat_any
                                  pattern (lambda/matching.ml[1158,36638+17]..[1158,36638+28])
                                    Ppat_construct "Construct" (lambda/matching.ml[1158,36638+17]..[1158,36638+26])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1158,36638+27]..[1158,36638+28])
                                        Ppat_any
                                ]
                              pattern (lambda/matching.ml[1159,36667+4]..[1159,36667+28])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1159,36667+4]..[1159,36667+11])
                                    Ppat_construct "Tuple" (lambda/matching.ml[1159,36667+4]..[1159,36667+9])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1159,36667+10]..[1159,36667+11])
                                        Ppat_any
                                  pattern (lambda/matching.ml[1159,36667+13]..[1159,36667+28])
                                    Ppat_or
                                    pattern (lambda/matching.ml[1159,36667+14]..[1159,36667+21])
                                      Ppat_construct "Tuple" (lambda/matching.ml[1159,36667+14]..[1159,36667+19])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1159,36667+20]..[1159,36667+21])
                                          Ppat_any
                                    pattern (lambda/matching.ml[1159,36667+24]..[1159,36667+27])
                                      Ppat_construct "Any" (lambda/matching.ml[1159,36667+24]..[1159,36667+27])
                                      None
                                ]
                            pattern (lambda/matching.ml[1160,36696+4]..[1160,36696+30])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1160,36696+4]..[1160,36696+12])
                                  Ppat_construct "Record" (lambda/matching.ml[1160,36696+4]..[1160,36696+10])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1160,36696+11]..[1160,36696+12])
                                      Ppat_any
                                pattern (lambda/matching.ml[1160,36696+14]..[1160,36696+30])
                                  Ppat_or
                                  pattern (lambda/matching.ml[1160,36696+15]..[1160,36696+23])
                                    Ppat_construct "Record" (lambda/matching.ml[1160,36696+15]..[1160,36696+21])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1160,36696+22]..[1160,36696+23])
                                        Ppat_any
                                  pattern (lambda/matching.ml[1160,36696+26]..[1160,36696+29])
                                    Ppat_construct "Any" (lambda/matching.ml[1160,36696+26]..[1160,36696+29])
                                    None
                              ]
                          pattern (lambda/matching.ml[1161,36727+4]..[1161,36727+20])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1161,36727+4]..[1161,36727+11])
                                Ppat_construct "Array" (lambda/matching.ml[1161,36727+4]..[1161,36727+9])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1161,36727+10]..[1161,36727+11])
                                    Ppat_any
                              pattern (lambda/matching.ml[1161,36727+13]..[1161,36727+20])
                                Ppat_construct "Array" (lambda/matching.ml[1161,36727+13]..[1161,36727+18])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1161,36727+19]..[1161,36727+20])
                                    Ppat_any
                            ]
                        pattern (lambda/matching.ml[1162,36748+4]..[1162,36748+24])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[1162,36748+4]..[1162,36748+13])
                              Ppat_construct "Variant" (lambda/matching.ml[1162,36748+4]..[1162,36748+11])
                              Some
                                []
                                pattern (lambda/matching.ml[1162,36748+12]..[1162,36748+13])
                                  Ppat_any
                            pattern (lambda/matching.ml[1162,36748+15]..[1162,36748+24])
                              Ppat_construct "Variant" (lambda/matching.ml[1162,36748+15]..[1162,36748+22])
                              Some
                                []
                                pattern (lambda/matching.ml[1162,36748+23]..[1162,36748+24])
                                  Ppat_any
                          ]
                      pattern (lambda/matching.ml[1163,36773+4]..[1163,36773+14])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1163,36773+4]..[1163,36773+8])
                            Ppat_construct "Lazy" (lambda/matching.ml[1163,36773+4]..[1163,36773+8])
                            None
                          pattern (lambda/matching.ml[1163,36773+10]..[1163,36773+14])
                            Ppat_construct "Lazy" (lambda/matching.ml[1163,36773+10]..[1163,36773+14])
                            None
                        ]
                    expression (lambda/matching.ml[1164,36791+6]..[1164,36791+10])
                      Pexp_construct "true" (lambda/matching.ml[1164,36791+6]..[1164,36791+10])
                      None
                  <case>
                    pattern (lambda/matching.ml[1165,36802+4]..[1170,36976+73])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[1165,36802+6]..[1165,36802+7])
                          Ppat_any
                        pattern (lambda/matching.ml[1166,36811+6]..[1170,36976+71])
                          Ppat_or
                          pattern (lambda/matching.ml[1166,36811+8]..[1170,36976+62])
                            Ppat_or
                            pattern (lambda/matching.ml[1166,36811+8]..[1170,36976+50])
                              Ppat_or
                              pattern (lambda/matching.ml[1166,36811+8]..[1170,36976+40])
                                Ppat_or
                                pattern (lambda/matching.ml[1166,36811+8]..[1170,36976+29])
                                  Ppat_or
                                  pattern (lambda/matching.ml[1166,36811+8]..[1170,36976+19])
                                    Ppat_or
                                    pattern (lambda/matching.ml[1166,36811+8]..[1169,36912+63])
                                      Ppat_or
                                      pattern (lambda/matching.ml[1166,36811+8]..[1166,36811+11])
                                        Ppat_construct "Any" (lambda/matching.ml[1166,36811+8]..[1166,36811+11])
                                        None
                                      pattern (lambda/matching.ml[1167,36823+8]..[1169,36912+63])
                                        Ppat_construct "Constant" (lambda/matching.ml[1167,36823+8]..[1167,36823+16])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1168,36840+10]..[1169,36912+63])
                                            Ppat_or
                                            pattern (lambda/matching.ml[1168,36840+12]..[1169,36912+41])
                                              Ppat_or
                                              pattern (lambda/matching.ml[1168,36840+12]..[1169,36912+25])
                                                Ppat_or
                                                pattern (lambda/matching.ml[1168,36840+12]..[1168,36840+71])
                                                  Ppat_or
                                                  pattern (lambda/matching.ml[1168,36840+12]..[1168,36840+55])
                                                    Ppat_or
                                                    pattern (lambda/matching.ml[1168,36840+12]..[1168,36840+38])
                                                      Ppat_or
                                                      pattern (lambda/matching.ml[1168,36840+12]..[1168,36840+23])
                                                        Ppat_construct "Const_int" (lambda/matching.ml[1168,36840+12]..[1168,36840+21])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[1168,36840+22]..[1168,36840+23])
                                                            Ppat_any
                                                      pattern (lambda/matching.ml[1168,36840+26]..[1168,36840+38])
                                                        Ppat_construct "Const_char" (lambda/matching.ml[1168,36840+26]..[1168,36840+36])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[1168,36840+37]..[1168,36840+38])
                                                            Ppat_any
                                                    pattern (lambda/matching.ml[1168,36840+41]..[1168,36840+55])
                                                      Ppat_construct "Const_string" (lambda/matching.ml[1168,36840+41]..[1168,36840+53])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[1168,36840+54]..[1168,36840+55])
                                                          Ppat_any
                                                  pattern (lambda/matching.ml[1168,36840+58]..[1168,36840+71])
                                                    Ppat_construct "Const_float" (lambda/matching.ml[1168,36840+58]..[1168,36840+69])
                                                    Some
                                                      []
                                                      pattern (lambda/matching.ml[1168,36840+70]..[1168,36840+71])
                                                        Ppat_any
                                                pattern (lambda/matching.ml[1169,36912+12]..[1169,36912+25])
                                                  Ppat_construct "Const_int32" (lambda/matching.ml[1169,36912+12]..[1169,36912+23])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[1169,36912+24]..[1169,36912+25])
                                                      Ppat_any
                                              pattern (lambda/matching.ml[1169,36912+28]..[1169,36912+41])
                                                Ppat_construct "Const_int64" (lambda/matching.ml[1169,36912+28]..[1169,36912+39])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[1169,36912+40]..[1169,36912+41])
                                                    Ppat_any
                                            pattern (lambda/matching.ml[1169,36912+44]..[1169,36912+61])
                                              Ppat_construct "Const_nativeint" (lambda/matching.ml[1169,36912+44]..[1169,36912+59])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[1169,36912+60]..[1169,36912+61])
                                                  Ppat_any
                                    pattern (lambda/matching.ml[1170,36976+8]..[1170,36976+19])
                                      Ppat_construct "Construct" (lambda/matching.ml[1170,36976+8]..[1170,36976+17])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1170,36976+18]..[1170,36976+19])
                                          Ppat_any
                                  pattern (lambda/matching.ml[1170,36976+22]..[1170,36976+29])
                                    Ppat_construct "Tuple" (lambda/matching.ml[1170,36976+22]..[1170,36976+27])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1170,36976+28]..[1170,36976+29])
                                        Ppat_any
                                pattern (lambda/matching.ml[1170,36976+32]..[1170,36976+40])
                                  Ppat_construct "Record" (lambda/matching.ml[1170,36976+32]..[1170,36976+38])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1170,36976+39]..[1170,36976+40])
                                      Ppat_any
                              pattern (lambda/matching.ml[1170,36976+43]..[1170,36976+50])
                                Ppat_construct "Array" (lambda/matching.ml[1170,36976+43]..[1170,36976+48])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1170,36976+49]..[1170,36976+50])
                                    Ppat_any
                            pattern (lambda/matching.ml[1170,36976+53]..[1170,36976+62])
                              Ppat_construct "Variant" (lambda/matching.ml[1170,36976+53]..[1170,36976+60])
                              Some
                                []
                                pattern (lambda/matching.ml[1170,36976+61]..[1170,36976+62])
                                  Ppat_any
                          pattern (lambda/matching.ml[1170,36976+65]..[1170,36976+69])
                            Ppat_construct "Lazy" (lambda/matching.ml[1170,36976+65]..[1170,36976+69])
                            None
                      ]
                    expression (lambda/matching.ml[1171,37053+6]..[1171,37053+11])
                      Pexp_construct "false" (lambda/matching.ml[1171,37053+6]..[1171,37053+11])
                      None
                ]
    ]
  structure_item (lambda/matching.ml[1173,37066+0]..[1176,37126+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1173,37066+4]..[1173,37066+9])
          Ppat_var "is_or" (lambda/matching.ml[1173,37066+4]..[1173,37066+9])
        expression (lambda/matching.ml[1173,37066+10]..[1176,37126+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1173,37066+10]..[1173,37066+11])
            Ppat_var "p" (lambda/matching.ml[1173,37066+10]..[1173,37066+11])
          expression (lambda/matching.ml[1174,37080+2]..[1176,37126+14])
            Pexp_match
            expression (lambda/matching.ml[1174,37080+8]..[1174,37080+18])
              Pexp_field
              expression (lambda/matching.ml[1174,37080+8]..[1174,37080+9])
                Pexp_ident "p" (lambda/matching.ml[1174,37080+8]..[1174,37080+9])
              "pat_desc" (lambda/matching.ml[1174,37080+10]..[1174,37080+18])
            [
              <case>
                pattern (lambda/matching.ml[1175,37104+4]..[1175,37104+13])
                  Ppat_construct "Tpat_or" (lambda/matching.ml[1175,37104+4]..[1175,37104+11])
                  Some
                    []
                    pattern (lambda/matching.ml[1175,37104+12]..[1175,37104+13])
                      Ppat_any
                expression (lambda/matching.ml[1175,37104+17]..[1175,37104+21])
                  Pexp_construct "true" (lambda/matching.ml[1175,37104+17]..[1175,37104+21])
                  None
              <case>
                pattern (lambda/matching.ml[1176,37126+4]..[1176,37126+5])
                  Ppat_any
                expression (lambda/matching.ml[1176,37126+9]..[1176,37126+14])
                  Pexp_construct "false" (lambda/matching.ml[1176,37126+9]..[1176,37126+14])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[1178,37142+0]..[1185,37330+14])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[1178,37142+8]..[1178,37142+18])
          Ppat_var "omega_like" (lambda/matching.ml[1178,37142+8]..[1178,37142+18])
        expression (lambda/matching.ml[1178,37142+19]..[1185,37330+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1178,37142+19]..[1178,37142+20])
            Ppat_var "p" (lambda/matching.ml[1178,37142+19]..[1178,37142+20])
          expression (lambda/matching.ml[1179,37165+2]..[1185,37330+14])
            Pexp_match
            expression (lambda/matching.ml[1179,37165+8]..[1179,37165+18])
              Pexp_field
              expression (lambda/matching.ml[1179,37165+8]..[1179,37165+9])
                Pexp_ident "p" (lambda/matching.ml[1179,37165+8]..[1179,37165+9])
              "pat_desc" (lambda/matching.ml[1179,37165+10]..[1179,37165+18])
            [
              <case>
                pattern (lambda/matching.ml[1180,37189+4]..[1181,37202+14])
                  Ppat_or
                  pattern (lambda/matching.ml[1180,37189+4]..[1180,37189+12])
                    Ppat_construct "Tpat_any" (lambda/matching.ml[1180,37189+4]..[1180,37189+12])
                    None
                  pattern (lambda/matching.ml[1181,37202+4]..[1181,37202+14])
                    Ppat_construct "Tpat_var" (lambda/matching.ml[1181,37202+4]..[1181,37202+12])
                    Some
                      []
                      pattern (lambda/matching.ml[1181,37202+13]..[1181,37202+14])
                        Ppat_any
                expression (lambda/matching.ml[1182,37220+6]..[1182,37220+10])
                  Pexp_construct "true" (lambda/matching.ml[1182,37220+6]..[1182,37220+10])
                  None
              <case>
                pattern (lambda/matching.ml[1183,37231+4]..[1183,37231+24])
                  Ppat_construct "Tpat_alias" (lambda/matching.ml[1183,37231+4]..[1183,37231+14])
                  Some
                    []
                    pattern (lambda/matching.ml[1183,37231+15]..[1183,37231+24])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[1183,37231+16]..[1183,37231+17])
                          Ppat_var "p" (lambda/matching.ml[1183,37231+16]..[1183,37231+17])
                        pattern (lambda/matching.ml[1183,37231+19]..[1183,37231+20])
                          Ppat_any
                        pattern (lambda/matching.ml[1183,37231+22]..[1183,37231+23])
                          Ppat_any
                      ]
                expression (lambda/matching.ml[1183,37231+28]..[1183,37231+40])
                  Pexp_apply
                  expression (lambda/matching.ml[1183,37231+28]..[1183,37231+38])
                    Pexp_ident "omega_like" (lambda/matching.ml[1183,37231+28]..[1183,37231+38])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1183,37231+39]..[1183,37231+40])
                        Pexp_ident "p" (lambda/matching.ml[1183,37231+39]..[1183,37231+40])
                  ]
              <case>
                pattern (lambda/matching.ml[1184,37272+4]..[1184,37272+23])
                  Ppat_construct "Tpat_or" (lambda/matching.ml[1184,37272+4]..[1184,37272+11])
                  Some
                    []
                    pattern (lambda/matching.ml[1184,37272+12]..[1184,37272+23])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[1184,37272+13]..[1184,37272+15])
                          Ppat_var "p1" (lambda/matching.ml[1184,37272+13]..[1184,37272+15])
                        pattern (lambda/matching.ml[1184,37272+17]..[1184,37272+19])
                          Ppat_var "p2" (lambda/matching.ml[1184,37272+17]..[1184,37272+19])
                        pattern (lambda/matching.ml[1184,37272+21]..[1184,37272+22])
                          Ppat_any
                      ]
                expression (lambda/matching.ml[1184,37272+27]..[1184,37272+57])
                  Pexp_apply
                  expression (lambda/matching.ml[1184,37272+41]..[1184,37272+43])
                    Pexp_ident "||" (lambda/matching.ml[1184,37272+41]..[1184,37272+43])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1184,37272+27]..[1184,37272+40])
                        Pexp_apply
                        expression (lambda/matching.ml[1184,37272+27]..[1184,37272+37])
                          Pexp_ident "omega_like" (lambda/matching.ml[1184,37272+27]..[1184,37272+37])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1184,37272+38]..[1184,37272+40])
                              Pexp_ident "p1" (lambda/matching.ml[1184,37272+38]..[1184,37272+40])
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1184,37272+44]..[1184,37272+57])
                        Pexp_apply
                        expression (lambda/matching.ml[1184,37272+44]..[1184,37272+54])
                          Pexp_ident "omega_like" (lambda/matching.ml[1184,37272+44]..[1184,37272+54])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1184,37272+55]..[1184,37272+57])
                              Pexp_ident "p2" (lambda/matching.ml[1184,37272+55]..[1184,37272+57])
                        ]
                  ]
              <case>
                pattern (lambda/matching.ml[1185,37330+4]..[1185,37330+5])
                  Ppat_any
                expression (lambda/matching.ml[1185,37330+9]..[1185,37330+14])
                  Pexp_construct "false" (lambda/matching.ml[1185,37330+9]..[1185,37330+14])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[1187,37346+0]..[1190,37426+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1187,37346+4]..[1187,37346+21])
          Ppat_var "simple_omega_like" (lambda/matching.ml[1187,37346+4]..[1187,37346+21])
        expression (lambda/matching.ml[1187,37346+22]..[1190,37426+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1187,37346+22]..[1187,37346+23])
            Ppat_var "p" (lambda/matching.ml[1187,37346+22]..[1187,37346+23])
          expression (lambda/matching.ml[1188,37372+2]..[1190,37426+14])
            Pexp_match
            expression (lambda/matching.ml[1188,37372+8]..[1188,37372+32])
              Pexp_field
              expression (lambda/matching.ml[1188,37372+8]..[1188,37372+23])
                Pexp_apply
                expression (lambda/matching.ml[1188,37372+9]..[1188,37372+20])
                  Pexp_ident "Simple.head" (lambda/matching.ml[1188,37372+9]..[1188,37372+20])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1188,37372+21]..[1188,37372+22])
                      Pexp_ident "p" (lambda/matching.ml[1188,37372+21]..[1188,37372+22])
                ]
              "pat_desc" (lambda/matching.ml[1188,37372+24]..[1188,37372+32])
            [
              <case>
                pattern (lambda/matching.ml[1189,37410+4]..[1189,37410+7])
                  Ppat_construct "Any" (lambda/matching.ml[1189,37410+4]..[1189,37410+7])
                  None
                expression (lambda/matching.ml[1189,37410+11]..[1189,37410+15])
                  Pexp_construct "true" (lambda/matching.ml[1189,37410+11]..[1189,37410+15])
                  None
              <case>
                pattern (lambda/matching.ml[1190,37426+4]..[1190,37426+5])
                  Ppat_any
                expression (lambda/matching.ml[1190,37426+9]..[1190,37426+14])
                  Pexp_construct "false" (lambda/matching.ml[1190,37426+9]..[1190,37426+14])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[1192,37442+0]..[1192,37442+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1192,37442+4]..[1192,37442+13])
          Ppat_var "equiv_pat" (lambda/matching.ml[1192,37442+4]..[1192,37442+13])
        expression (lambda/matching.ml[1192,37442+14]..[1192,37442+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1192,37442+14]..[1192,37442+15])
            Ppat_var "p" (lambda/matching.ml[1192,37442+14]..[1192,37442+15])
          expression (lambda/matching.ml[1192,37442+16]..[1192,37442+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1192,37442+16]..[1192,37442+17])
              Ppat_var "q" (lambda/matching.ml[1192,37442+16]..[1192,37442+17])
            expression (lambda/matching.ml[1192,37442+20]..[1192,37442+44])
              Pexp_apply
              expression (lambda/matching.ml[1192,37442+31]..[1192,37442+33])
                Pexp_ident "&&" (lambda/matching.ml[1192,37442+31]..[1192,37442+33])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1192,37442+20]..[1192,37442+30])
                    Pexp_apply
                    expression (lambda/matching.ml[1192,37442+20]..[1192,37442+26])
                      Pexp_ident "le_pat" (lambda/matching.ml[1192,37442+20]..[1192,37442+26])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1192,37442+27]..[1192,37442+28])
                          Pexp_ident "p" (lambda/matching.ml[1192,37442+27]..[1192,37442+28])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1192,37442+29]..[1192,37442+30])
                          Pexp_ident "q" (lambda/matching.ml[1192,37442+29]..[1192,37442+30])
                    ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1192,37442+34]..[1192,37442+44])
                    Pexp_apply
                    expression (lambda/matching.ml[1192,37442+34]..[1192,37442+40])
                      Pexp_ident "le_pat" (lambda/matching.ml[1192,37442+34]..[1192,37442+40])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1192,37442+41]..[1192,37442+42])
                          Pexp_ident "q" (lambda/matching.ml[1192,37442+41]..[1192,37442+42])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1192,37442+43]..[1192,37442+44])
                          Pexp_ident "p" (lambda/matching.ml[1192,37442+43]..[1192,37442+44])
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[1194,37488+0]..[1202,37723+16])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[1194,37488+8]..[1194,37488+26])
          Ppat_var "extract_equiv_head" (lambda/matching.ml[1194,37488+8]..[1194,37488+26])
        expression (lambda/matching.ml[1194,37488+27]..[1202,37723+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1194,37488+27]..[1194,37488+28])
            Ppat_var "p" (lambda/matching.ml[1194,37488+27]..[1194,37488+28])
          expression (lambda/matching.ml[1194,37488+29]..[1202,37723+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1194,37488+29]..[1194,37488+30])
              Ppat_var "l" (lambda/matching.ml[1194,37488+29]..[1194,37488+30])
            expression (lambda/matching.ml[1195,37521+2]..[1202,37723+16])
              Pexp_match
              expression (lambda/matching.ml[1195,37521+8]..[1195,37521+9])
                Pexp_ident "l" (lambda/matching.ml[1195,37521+8]..[1195,37521+9])
              [
                <case>
                  pattern (lambda/matching.ml[1196,37536+4]..[1196,37536+30])
                    Ppat_construct "::" (lambda/matching.ml[1196,37536+24]..[1196,37536+26])
                    Some
                      []
                      pattern (lambda/matching.ml[1196,37536+4]..[1196,37536+30]) ghost
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[1196,37536+4]..[1196,37536+23])
                            Ppat_alias "cl" (lambda/matching.ml[1196,37536+20]..[1196,37536+22])
                            pattern (lambda/matching.ml[1196,37536+5]..[1196,37536+16])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1196,37536+6]..[1196,37536+12])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1196,37536+7]..[1196,37536+8])
                                      Ppat_var "q" (lambda/matching.ml[1196,37536+7]..[1196,37536+8])
                                    pattern (lambda/matching.ml[1196,37536+10]..[1196,37536+11])
                                      Ppat_any
                                  ]
                                pattern (lambda/matching.ml[1196,37536+14]..[1196,37536+15])
                                  Ppat_any
                              ]
                          pattern (lambda/matching.ml[1196,37536+27]..[1196,37536+30])
                            Ppat_var "rem" (lambda/matching.ml[1196,37536+27]..[1196,37536+30])
                        ]
                  expression (lambda/matching.ml[1197,37570+6]..[1201,37707+15])
                    Pexp_ifthenelse
                    expression (lambda/matching.ml[1197,37570+9]..[1197,37570+38])
                      Pexp_apply
                      expression (lambda/matching.ml[1197,37570+9]..[1197,37570+18])
                        Pexp_ident "equiv_pat" (lambda/matching.ml[1197,37570+9]..[1197,37570+18])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1197,37570+19]..[1197,37570+20])
                            Pexp_ident "p" (lambda/matching.ml[1197,37570+19]..[1197,37570+20])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1197,37570+21]..[1197,37570+38])
                            Pexp_apply
                            expression (lambda/matching.ml[1197,37570+22]..[1197,37570+35])
                              Pexp_ident "General.erase" (lambda/matching.ml[1197,37570+22]..[1197,37570+35])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1197,37570+36]..[1197,37570+37])
                                  Pexp_ident "q" (lambda/matching.ml[1197,37570+36]..[1197,37570+37])
                            ]
                      ]
                    expression (lambda/matching.ml[1198,37614+8]..[1199,37668+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1198,37614+12]..[1198,37614+23])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1198,37614+12]..[1198,37614+18])
                                Ppat_var "others" (lambda/matching.ml[1198,37614+12]..[1198,37614+18])
                              pattern (lambda/matching.ml[1198,37614+20]..[1198,37614+23])
                                Ppat_var "rem" (lambda/matching.ml[1198,37614+20]..[1198,37614+23])
                            ]
                          expression (lambda/matching.ml[1198,37614+26]..[1198,37614+50])
                            Pexp_apply
                            expression (lambda/matching.ml[1198,37614+26]..[1198,37614+44])
                              Pexp_ident "extract_equiv_head" (lambda/matching.ml[1198,37614+26]..[1198,37614+44])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1198,37614+45]..[1198,37614+46])
                                  Pexp_ident "p" (lambda/matching.ml[1198,37614+45]..[1198,37614+46])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1198,37614+47]..[1198,37614+50])
                                  Pexp_ident "rem" (lambda/matching.ml[1198,37614+47]..[1198,37614+50])
                            ]
                      ]
                      expression (lambda/matching.ml[1199,37668+8]..[1199,37668+27])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1199,37668+9]..[1199,37668+21])
                            Pexp_construct "::" (lambda/matching.ml[1199,37668+12]..[1199,37668+14])
                            Some
                              expression (lambda/matching.ml[1199,37668+9]..[1199,37668+21]) ghost
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[1199,37668+9]..[1199,37668+11])
                                    Pexp_ident "cl" (lambda/matching.ml[1199,37668+9]..[1199,37668+11])
                                  expression (lambda/matching.ml[1199,37668+15]..[1199,37668+21])
                                    Pexp_ident "others" (lambda/matching.ml[1199,37668+15]..[1199,37668+21])
                                ]
                          expression (lambda/matching.ml[1199,37668+23]..[1199,37668+26])
                            Pexp_ident "rem" (lambda/matching.ml[1199,37668+23]..[1199,37668+26])
                        ]
                    Some
                      expression (lambda/matching.ml[1201,37707+8]..[1201,37707+15])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1201,37707+9]..[1201,37707+11])
                            Pexp_construct "[]" (lambda/matching.ml[1201,37707+9]..[1201,37707+11])
                            None
                          expression (lambda/matching.ml[1201,37707+13]..[1201,37707+14])
                            Pexp_ident "l" (lambda/matching.ml[1201,37707+13]..[1201,37707+14])
                        ]
                <case>
                  pattern (lambda/matching.ml[1202,37723+4]..[1202,37723+5])
                    Ppat_any
                  expression (lambda/matching.ml[1202,37723+9]..[1202,37723+16])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[1202,37723+10]..[1202,37723+12])
                        Pexp_construct "[]" (lambda/matching.ml[1202,37723+10]..[1202,37723+12])
                        None
                      expression (lambda/matching.ml[1202,37723+14]..[1202,37723+15])
                        Pexp_ident "l" (lambda/matching.ml[1202,37723+14]..[1202,37723+15])
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[1204,37741+0]..[1276,40647+3])
    Pstr_module
    "Or_matrix" (lambda/matching.ml[1204,37741+7]..[1204,37741+16])
      module_expr (lambda/matching.ml[1204,37741+19]..[1276,40647+3])
        Pmod_structure
        [
          structure_item (lambda/matching.ml[1222,38577+2]..[1222,38577+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[1222,38577+6]..[1222,38577+14])
                  Ppat_var "disjoint" (lambda/matching.ml[1222,38577+6]..[1222,38577+14])
                expression (lambda/matching.ml[1222,38577+15]..[1222,38577+41]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1222,38577+15]..[1222,38577+16])
                    Ppat_var "p" (lambda/matching.ml[1222,38577+15]..[1222,38577+16])
                  expression (lambda/matching.ml[1222,38577+17]..[1222,38577+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1222,38577+17]..[1222,38577+18])
                      Ppat_var "q" (lambda/matching.ml[1222,38577+17]..[1222,38577+18])
                    expression (lambda/matching.ml[1222,38577+21]..[1222,38577+41])
                      Pexp_apply
                      expression (lambda/matching.ml[1222,38577+21]..[1222,38577+24])
                        Pexp_ident "not" (lambda/matching.ml[1222,38577+21]..[1222,38577+24])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1222,38577+25]..[1222,38577+41])
                            Pexp_apply
                            expression (lambda/matching.ml[1222,38577+26]..[1222,38577+36])
                              Pexp_ident "may_compat" (lambda/matching.ml[1222,38577+26]..[1222,38577+36])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1222,38577+37]..[1222,38577+38])
                                  Pexp_ident "p" (lambda/matching.ml[1222,38577+37]..[1222,38577+38])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1222,38577+39]..[1222,38577+40])
                                  Pexp_ident "q" (lambda/matching.ml[1222,38577+39]..[1222,38577+40])
                            ]
                      ]
            ]
          structure_item (lambda/matching.ml[1224,38620+2]..[1225,38652+52])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[1224,38620+6]..[1224,38620+16])
                  Ppat_var "safe_below" (lambda/matching.ml[1224,38620+6]..[1224,38620+16])
                expression (lambda/matching.ml[1224,38620+17]..[1225,38652+52]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1224,38620+17]..[1224,38620+26])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1224,38620+18]..[1224,38620+20])
                        Ppat_var "ps" (lambda/matching.ml[1224,38620+18]..[1224,38620+20])
                      pattern (lambda/matching.ml[1224,38620+22]..[1224,38620+25])
                        Ppat_var "act" (lambda/matching.ml[1224,38620+22]..[1224,38620+25])
                    ]
                  expression (lambda/matching.ml[1224,38620+27]..[1225,38652+52]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1224,38620+27]..[1224,38620+29])
                      Ppat_var "qs" (lambda/matching.ml[1224,38620+27]..[1224,38620+29])
                    expression (lambda/matching.ml[1225,38652+4]..[1225,38652+52])
                      Pexp_apply
                      expression (lambda/matching.ml[1225,38652+27]..[1225,38652+29])
                        Pexp_ident "&&" (lambda/matching.ml[1225,38652+27]..[1225,38652+29])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1225,38652+4]..[1225,38652+26])
                            Pexp_apply
                            expression (lambda/matching.ml[1225,38652+5]..[1225,38652+8])
                              Pexp_ident "not" (lambda/matching.ml[1225,38652+5]..[1225,38652+8])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1225,38652+9]..[1225,38652+25])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1225,38652+10]..[1225,38652+20])
                                    Pexp_ident "is_guarded" (lambda/matching.ml[1225,38652+10]..[1225,38652+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1225,38652+21]..[1225,38652+24])
                                        Pexp_ident "act" (lambda/matching.ml[1225,38652+21]..[1225,38652+24])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1225,38652+30]..[1225,38652+52])
                            Pexp_apply
                            expression (lambda/matching.ml[1225,38652+30]..[1225,38652+46])
                              Pexp_ident "Parmatch.le_pats" (lambda/matching.ml[1225,38652+30]..[1225,38652+46])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1225,38652+47]..[1225,38652+49])
                                  Pexp_ident "ps" (lambda/matching.ml[1225,38652+47]..[1225,38652+49])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1225,38652+50]..[1225,38652+52])
                                  Pexp_ident "qs" (lambda/matching.ml[1225,38652+50]..[1225,38652+52])
                            ]
                      ]
            ]
          structure_item (lambda/matching.ml[1227,38706+2]..[1234,38944+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[1227,38706+6]..[1227,38706+26])
                  Ppat_var "safe_below_or_matrix" (lambda/matching.ml[1227,38706+6]..[1227,38706+26])
                expression (lambda/matching.ml[1227,38706+27]..[1234,38944+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1227,38706+27]..[1227,38706+28])
                    Ppat_var "l" (lambda/matching.ml[1227,38706+27]..[1227,38706+28])
                  expression (lambda/matching.ml[1227,38706+29]..[1234,38944+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1227,38706+29]..[1227,38706+36])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[1227,38706+30]..[1227,38706+31])
                          Ppat_var "q" (lambda/matching.ml[1227,38706+30]..[1227,38706+31])
                        pattern (lambda/matching.ml[1227,38706+33]..[1227,38706+35])
                          Ppat_var "qs" (lambda/matching.ml[1227,38706+33]..[1227,38706+35])
                      ]
                    expression (lambda/matching.ml[1228,38745+4]..[1234,38944+7])
                      Pexp_apply
                      expression (lambda/matching.ml[1228,38745+4]..[1228,38745+16])
                        Pexp_ident "List.for_all" (lambda/matching.ml[1228,38745+4]..[1228,38745+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1229,38762+6]..[1233,38923+20])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1229,38762+11]..[1229,38762+27])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1229,38762+12]..[1229,38762+19])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1229,38762+13]..[1229,38762+14])
                                      Ppat_var "p" (lambda/matching.ml[1229,38762+13]..[1229,38762+14])
                                    pattern (lambda/matching.ml[1229,38762+16]..[1229,38762+18])
                                      Ppat_var "ps" (lambda/matching.ml[1229,38762+16]..[1229,38762+18])
                                  ]
                                pattern (lambda/matching.ml[1229,38762+21]..[1229,38762+26])
                                  Ppat_var "act_p" (lambda/matching.ml[1229,38762+21]..[1229,38762+26])
                              ]
                            expression (lambda/matching.ml[1230,38793+8]..[1233,38923+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[1230,38793+12]..[1230,38793+13])
                                    Ppat_var "p" (lambda/matching.ml[1230,38793+12]..[1230,38793+13])
                                  expression (lambda/matching.ml[1230,38793+16]..[1230,38793+31])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1230,38793+16]..[1230,38793+29])
                                      Pexp_ident "General.erase" (lambda/matching.ml[1230,38793+16]..[1230,38793+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1230,38793+30]..[1230,38793+31])
                                          Pexp_ident "p" (lambda/matching.ml[1230,38793+30]..[1230,38793+31])
                                    ]
                              ]
                              expression (lambda/matching.ml[1231,38828+8]..[1233,38923+19])
                                Pexp_match
                                expression (lambda/matching.ml[1231,38828+14]..[1231,38828+24])
                                  Pexp_field
                                  expression (lambda/matching.ml[1231,38828+14]..[1231,38828+15])
                                    Pexp_ident "p" (lambda/matching.ml[1231,38828+14]..[1231,38828+15])
                                  "pat_desc" (lambda/matching.ml[1231,38828+16]..[1231,38828+24])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[1232,38858+10]..[1232,38858+19])
                                      Ppat_construct "Tpat_or" (lambda/matching.ml[1232,38858+10]..[1232,38858+17])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[1232,38858+18]..[1232,38858+19])
                                          Ppat_any
                                    expression (lambda/matching.ml[1232,38858+23]..[1232,38858+64])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1232,38858+36]..[1232,38858+38])
                                        Pexp_ident "||" (lambda/matching.ml[1232,38858+36]..[1232,38858+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1232,38858+23]..[1232,38858+35])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1232,38858+23]..[1232,38858+31])
                                              Pexp_ident "disjoint" (lambda/matching.ml[1232,38858+23]..[1232,38858+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1232,38858+32]..[1232,38858+33])
                                                  Pexp_ident "p" (lambda/matching.ml[1232,38858+32]..[1232,38858+33])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1232,38858+34]..[1232,38858+35])
                                                  Pexp_ident "q" (lambda/matching.ml[1232,38858+34]..[1232,38858+35])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1232,38858+39]..[1232,38858+64])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1232,38858+39]..[1232,38858+49])
                                              Pexp_ident "safe_below" (lambda/matching.ml[1232,38858+39]..[1232,38858+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1232,38858+50]..[1232,38858+61])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[1232,38858+51]..[1232,38858+53])
                                                      Pexp_ident "ps" (lambda/matching.ml[1232,38858+51]..[1232,38858+53])
                                                    expression (lambda/matching.ml[1232,38858+55]..[1232,38858+60])
                                                      Pexp_ident "act_p" (lambda/matching.ml[1232,38858+55]..[1232,38858+60])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1232,38858+62]..[1232,38858+64])
                                                  Pexp_ident "qs" (lambda/matching.ml[1232,38858+62]..[1232,38858+64])
                                            ]
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[1233,38923+10]..[1233,38923+11])
                                      Ppat_any
                                    expression (lambda/matching.ml[1233,38923+15]..[1233,38923+19])
                                      Pexp_construct "true" (lambda/matching.ml[1233,38923+15]..[1233,38923+19])
                                      None
                                ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1234,38944+6]..[1234,38944+7])
                            Pexp_ident "l" (lambda/matching.ml[1234,38944+6]..[1234,38944+7])
                      ]
            ]
          structure_item (lambda/matching.ml[1242,39205+2]..[1275,40624+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[1242,39205+6]..[1242,39205+22])
                  Ppat_var "insert_or_append" (lambda/matching.ml[1242,39205+6]..[1242,39205+22])
                expression (lambda/matching.ml[1242,39205+23]..[1275,40624+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1242,39205+23]..[1242,39205+38])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1242,39205+24]..[1242,39205+28])
                        Ppat_var "head" (lambda/matching.ml[1242,39205+24]..[1242,39205+28])
                      pattern (lambda/matching.ml[1242,39205+30]..[1242,39205+32])
                        Ppat_var "ps" (lambda/matching.ml[1242,39205+30]..[1242,39205+32])
                      pattern (lambda/matching.ml[1242,39205+34]..[1242,39205+37])
                        Ppat_var "act" (lambda/matching.ml[1242,39205+34]..[1242,39205+37])
                    ]
                  expression (lambda/matching.ml[1242,39205+39]..[1275,40624+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1242,39205+39]..[1242,39205+46])
                      Ppat_var "rev_ors" (lambda/matching.ml[1242,39205+39]..[1242,39205+46])
                    expression (lambda/matching.ml[1242,39205+47]..[1275,40624+22]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1242,39205+47]..[1242,39205+53])
                        Ppat_var "rev_no" (lambda/matching.ml[1242,39205+47]..[1242,39205+53])
                      expression (lambda/matching.ml[1243,39261+4]..[1275,40624+22])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[1243,39261+8]..[1243,39261+22])
                              Ppat_var "safe_to_insert" (lambda/matching.ml[1243,39261+8]..[1243,39261+22])
                            expression (lambda/matching.ml[1243,39261+23]..[1248,39494+76]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[1243,39261+23]..[1243,39261+26])
                                Ppat_var "rem" (lambda/matching.ml[1243,39261+23]..[1243,39261+26])
                              expression (lambda/matching.ml[1243,39261+27]..[1248,39494+76]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[1243,39261+27]..[1243,39261+34])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1243,39261+28]..[1243,39261+29])
                                      Ppat_var "p" (lambda/matching.ml[1243,39261+28]..[1243,39261+29])
                                    pattern (lambda/matching.ml[1243,39261+31]..[1243,39261+33])
                                      Ppat_var "ps" (lambda/matching.ml[1243,39261+31]..[1243,39261+33])
                                  ]
                                expression (lambda/matching.ml[1243,39261+35]..[1248,39494+76]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[1243,39261+35]..[1243,39261+39])
                                    Ppat_var "seen" (lambda/matching.ml[1243,39261+35]..[1243,39261+39])
                                  expression (lambda/matching.ml[1244,39303+6]..[1248,39494+76])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[1244,39303+10]..[1244,39303+18])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[1244,39303+10]..[1244,39303+11])
                                              Ppat_any
                                            pattern (lambda/matching.ml[1244,39303+13]..[1244,39303+18])
                                              Ppat_var "not_e" (lambda/matching.ml[1244,39303+13]..[1244,39303+18])
                                          ]
                                        expression (lambda/matching.ml[1244,39303+21]..[1244,39303+45])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1244,39303+21]..[1244,39303+39])
                                            Pexp_ident "extract_equiv_head" (lambda/matching.ml[1244,39303+21]..[1244,39303+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1244,39303+40]..[1244,39303+41])
                                                Pexp_ident "p" (lambda/matching.ml[1244,39303+40]..[1244,39303+41])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1244,39303+42]..[1244,39303+45])
                                                Pexp_ident "rem" (lambda/matching.ml[1244,39303+42]..[1244,39303+45])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[1246,39401+6]..[1248,39494+76])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1247,39442+6]..[1247,39442+8])
                                        Pexp_ident "&&" (lambda/matching.ml[1247,39442+6]..[1247,39442+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1246,39401+6]..[1246,39401+40])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1246,39401+6]..[1246,39401+26])
                                              Pexp_ident "safe_below_or_matrix" (lambda/matching.ml[1246,39401+6]..[1246,39401+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1246,39401+27]..[1246,39401+32])
                                                  Pexp_ident "not_e" (lambda/matching.ml[1246,39401+27]..[1246,39401+32])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1246,39401+33]..[1246,39401+40])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[1246,39401+34]..[1246,39401+35])
                                                      Pexp_ident "p" (lambda/matching.ml[1246,39401+34]..[1246,39401+35])
                                                    expression (lambda/matching.ml[1246,39401+37]..[1246,39401+39])
                                                      Pexp_ident "ps" (lambda/matching.ml[1246,39401+37]..[1246,39401+39])
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1248,39494+9]..[1248,39494+76])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1248,39494+9]..[1248,39494+21])
                                              Pexp_ident "List.for_all" (lambda/matching.ml[1248,39494+9]..[1248,39494+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1248,39494+22]..[1248,39494+71])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/matching.ml[1248,39494+27]..[1248,39494+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[1248,39494+28]..[1248,39494+34])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[1248,39494+29]..[1248,39494+30])
                                                            Ppat_var "q" (lambda/matching.ml[1248,39494+29]..[1248,39494+30])
                                                          pattern (lambda/matching.ml[1248,39494+32]..[1248,39494+33])
                                                            Ppat_any
                                                        ]
                                                      pattern (lambda/matching.ml[1248,39494+36]..[1248,39494+37])
                                                        Ppat_any
                                                    ]
                                                  expression (lambda/matching.ml[1248,39494+42]..[1248,39494+70])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1248,39494+42]..[1248,39494+50])
                                                      Pexp_ident "disjoint" (lambda/matching.ml[1248,39494+42]..[1248,39494+50])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1248,39494+51]..[1248,39494+52])
                                                          Pexp_ident "p" (lambda/matching.ml[1248,39494+51]..[1248,39494+52])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1248,39494+53]..[1248,39494+70])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[1248,39494+54]..[1248,39494+67])
                                                            Pexp_ident "General.erase" (lambda/matching.ml[1248,39494+54]..[1248,39494+67])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[1248,39494+68]..[1248,39494+69])
                                                                Pexp_ident "q" (lambda/matching.ml[1248,39494+68]..[1248,39494+69])
                                                          ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1248,39494+72]..[1248,39494+76])
                                                  Pexp_ident "seen" (lambda/matching.ml[1248,39494+72]..[1248,39494+76])
                                            ]
                                      ]
                        ]
                        expression (lambda/matching.ml[1250,39578+4]..[1275,40624+22])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[1250,39578+12]..[1250,39578+19])
                                Ppat_var "attempt" (lambda/matching.ml[1250,39578+12]..[1250,39578+19])
                              expression (lambda/matching.ml[1250,39578+20]..[1273,40566+50]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[1250,39578+20]..[1250,39578+24])
                                  Ppat_var "seen" (lambda/matching.ml[1250,39578+20]..[1250,39578+24])
                                expression (lambda/matching.ml[1250,39578+27]..[1273,40566+50])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[1253,39726+8]..[1253,39726+10])
                                        Ppat_construct "[]" (lambda/matching.ml[1253,39726+8]..[1253,39726+10])
                                        None
                                      expression (lambda/matching.ml[1253,39726+14]..[1253,39726+52])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1253,39726+15]..[1253,39726+43])
                                            Pexp_construct "::" (lambda/matching.ml[1253,39726+33]..[1253,39726+35])
                                            Some
                                              expression (lambda/matching.ml[1253,39726+15]..[1253,39726+43]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[1253,39726+15]..[1253,39726+32])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1253,39726+16]..[1253,39726+26])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1253,39726+17]..[1253,39726+21])
                                                            Pexp_ident "head" (lambda/matching.ml[1253,39726+17]..[1253,39726+21])
                                                          expression (lambda/matching.ml[1253,39726+23]..[1253,39726+25])
                                                            Pexp_ident "ps" (lambda/matching.ml[1253,39726+23]..[1253,39726+25])
                                                        ]
                                                      expression (lambda/matching.ml[1253,39726+28]..[1253,39726+31])
                                                        Pexp_ident "act" (lambda/matching.ml[1253,39726+28]..[1253,39726+31])
                                                    ]
                                                  expression (lambda/matching.ml[1253,39726+36]..[1253,39726+43])
                                                    Pexp_ident "rev_ors" (lambda/matching.ml[1253,39726+36]..[1253,39726+43])
                                                ]
                                          expression (lambda/matching.ml[1253,39726+45]..[1253,39726+51])
                                            Pexp_ident "rev_no" (lambda/matching.ml[1253,39726+45]..[1253,39726+51])
                                        ]
                                    <case>
                                      pattern (lambda/matching.ml[1254,39779+8]..[1254,39779+39])
                                        Ppat_construct "::" (lambda/matching.ml[1254,39779+33]..[1254,39779+35])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[1254,39779+8]..[1254,39779+39]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[1254,39779+8]..[1254,39779+32])
                                                Ppat_alias "cl" (lambda/matching.ml[1254,39779+29]..[1254,39779+31])
                                                pattern (lambda/matching.ml[1254,39779+9]..[1254,39779+25])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[1254,39779+10]..[1254,39779+17])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[1254,39779+11]..[1254,39779+12])
                                                          Ppat_var "q" (lambda/matching.ml[1254,39779+11]..[1254,39779+12])
                                                        pattern (lambda/matching.ml[1254,39779+14]..[1254,39779+16])
                                                          Ppat_var "qs" (lambda/matching.ml[1254,39779+14]..[1254,39779+16])
                                                      ]
                                                    pattern (lambda/matching.ml[1254,39779+19]..[1254,39779+24])
                                                      Ppat_var "act_q" (lambda/matching.ml[1254,39779+19]..[1254,39779+24])
                                                  ]
                                              pattern (lambda/matching.ml[1254,39779+36]..[1254,39779+39])
                                                Ppat_var "rem" (lambda/matching.ml[1254,39779+36]..[1254,39779+39])
                                            ]
                                      expression (lambda/matching.ml[1255,39822+10]..[1273,40566+50])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[1255,39822+14]..[1255,39822+15])
                                              Ppat_var "p" (lambda/matching.ml[1255,39822+14]..[1255,39822+15])
                                            expression (lambda/matching.ml[1255,39822+18]..[1255,39822+36])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1255,39822+18]..[1255,39822+31])
                                                Pexp_ident "General.erase" (lambda/matching.ml[1255,39822+18]..[1255,39822+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1255,39822+32]..[1255,39822+36])
                                                    Pexp_ident "head" (lambda/matching.ml[1255,39822+32]..[1255,39822+36])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[1256,39862+10]..[1273,40566+50])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1256,39862+14]..[1256,39862+15])
                                                Ppat_var "q" (lambda/matching.ml[1256,39862+14]..[1256,39862+15])
                                              expression (lambda/matching.ml[1256,39862+18]..[1256,39862+33])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1256,39862+18]..[1256,39862+31])
                                                  Pexp_ident "General.erase" (lambda/matching.ml[1256,39862+18]..[1256,39862+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1256,39862+32]..[1256,39862+33])
                                                      Pexp_ident "q" (lambda/matching.ml[1256,39862+32]..[1256,39862+33])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1257,39899+10]..[1273,40566+50])
                                            Pexp_ifthenelse
                                            expression (lambda/matching.ml[1257,39899+13]..[1257,39899+44])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1257,39899+29]..[1257,39899+31])
                                                Pexp_ident "||" (lambda/matching.ml[1257,39899+29]..[1257,39899+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1257,39899+13]..[1257,39899+28])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1257,39899+14]..[1257,39899+17])
                                                      Pexp_ident "not" (lambda/matching.ml[1257,39899+14]..[1257,39899+17])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1257,39899+18]..[1257,39899+27])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[1257,39899+19]..[1257,39899+24])
                                                            Pexp_ident "is_or" (lambda/matching.ml[1257,39899+19]..[1257,39899+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[1257,39899+25]..[1257,39899+26])
                                                                Pexp_ident "q" (lambda/matching.ml[1257,39899+25]..[1257,39899+26])
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1257,39899+32]..[1257,39899+44])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1257,39899+32]..[1257,39899+40])
                                                      Pexp_ident "disjoint" (lambda/matching.ml[1257,39899+32]..[1257,39899+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1257,39899+41]..[1257,39899+42])
                                                          Pexp_ident "p" (lambda/matching.ml[1257,39899+41]..[1257,39899+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1257,39899+43]..[1257,39899+44])
                                                          Pexp_ident "q" (lambda/matching.ml[1257,39899+43]..[1257,39899+44])
                                                    ]
                                              ]
                                            expression (lambda/matching.ml[1258,39949+12]..[1258,39949+36])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1258,39949+12]..[1258,39949+19])
                                                Pexp_ident "attempt" (lambda/matching.ml[1258,39949+12]..[1258,39949+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1258,39949+20]..[1258,39949+32])
                                                    Pexp_construct "::" (lambda/matching.ml[1258,39949+24]..[1258,39949+26])
                                                    Some
                                                      expression (lambda/matching.ml[1258,39949+21]..[1258,39949+31]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1258,39949+21]..[1258,39949+23])
                                                            Pexp_ident "cl" (lambda/matching.ml[1258,39949+21]..[1258,39949+23])
                                                          expression (lambda/matching.ml[1258,39949+27]..[1258,39949+31])
                                                            Pexp_ident "seen" (lambda/matching.ml[1258,39949+27]..[1258,39949+31])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1258,39949+33]..[1258,39949+36])
                                                    Pexp_ident "rem" (lambda/matching.ml[1258,39949+33]..[1258,39949+36])
                                              ]
                                            Some
                                              expression (lambda/matching.ml[1259,39986+15]..[1273,40566+50])
                                                Pexp_ifthenelse
                                                expression (lambda/matching.ml[1260,40004+12]..[1262,40099+28])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1261,40050+12]..[1261,40050+14])
                                                    Pexp_ident "&&" (lambda/matching.ml[1261,40050+12]..[1261,40050+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1260,40004+12]..[1260,40004+45])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1260,40004+41]..[1260,40004+42])
                                                          Pexp_ident "=" (lambda/matching.ml[1260,40004+41]..[1260,40004+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1260,40004+12]..[1260,40004+40])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1260,40004+12]..[1260,40004+38])
                                                                Pexp_ident "Typedtree.pat_bound_idents" (lambda/matching.ml[1260,40004+12]..[1260,40004+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1260,40004+39]..[1260,40004+40])
                                                                    Pexp_ident "p" (lambda/matching.ml[1260,40004+39]..[1260,40004+40])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1260,40004+43]..[1260,40004+45])
                                                              Pexp_construct "[]" (lambda/matching.ml[1260,40004+43]..[1260,40004+45])
                                                              None
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1261,40050+15]..[1262,40099+28])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1262,40099+12]..[1262,40099+14])
                                                          Pexp_ident "&&" (lambda/matching.ml[1262,40099+12]..[1262,40099+14])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1261,40050+15]..[1261,40050+48])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1261,40050+44]..[1261,40050+45])
                                                                Pexp_ident "=" (lambda/matching.ml[1261,40050+44]..[1261,40050+45])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1261,40050+15]..[1261,40050+43])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[1261,40050+15]..[1261,40050+41])
                                                                      Pexp_ident "Typedtree.pat_bound_idents" (lambda/matching.ml[1261,40050+15]..[1261,40050+41])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[1261,40050+42]..[1261,40050+43])
  Pexp_ident "q" (lambda/matching.ml[1261,40050+42]..[1261,40050+43])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1261,40050+46]..[1261,40050+48])
                                                                    Pexp_construct "[]" (lambda/matching.ml[1261,40050+46]..[1261,40050+48])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1262,40099+15]..[1262,40099+28])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1262,40099+15]..[1262,40099+24])
                                                                Pexp_ident "equiv_pat" (lambda/matching.ml[1262,40099+15]..[1262,40099+24])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1262,40099+25]..[1262,40099+26])
                                                                    Pexp_ident "p" (lambda/matching.ml[1262,40099+25]..[1262,40099+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1262,40099+27]..[1262,40099+28])
                                                                    Pexp_ident "q" (lambda/matching.ml[1262,40099+27]..[1262,40099+28])
                                                              ]
                                                        ]
                                                  ]
                                                expression (lambda/matching.ml[1265,40220+12]..[1269,40412+52])
                                                  Pexp_ifthenelse
                                                  expression (lambda/matching.ml[1265,40220+15]..[1265,40220+46])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1265,40220+15]..[1265,40220+29])
                                                      Pexp_ident "safe_to_insert" (lambda/matching.ml[1265,40220+15]..[1265,40220+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1265,40220+30]..[1265,40220+33])
                                                          Pexp_ident "rem" (lambda/matching.ml[1265,40220+30]..[1265,40220+33])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1265,40220+34]..[1265,40220+41])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[1265,40220+35]..[1265,40220+36])
                                                              Pexp_ident "p" (lambda/matching.ml[1265,40220+35]..[1265,40220+36])
                                                            expression (lambda/matching.ml[1265,40220+38]..[1265,40220+40])
                                                              Pexp_ident "ps" (lambda/matching.ml[1265,40220+38]..[1265,40220+40])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1265,40220+42]..[1265,40220+46])
                                                          Pexp_ident "seen" (lambda/matching.ml[1265,40220+42]..[1265,40220+46])
                                                    ]
                                                  expression (lambda/matching.ml[1266,40272+14]..[1266,40272+77])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1266,40272+15]..[1266,40272+68])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1266,40272+15]..[1266,40272+30])
                                                          Pexp_ident "List.rev_append" (lambda/matching.ml[1266,40272+15]..[1266,40272+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1266,40272+31]..[1266,40272+35])
                                                              Pexp_ident "seen" (lambda/matching.ml[1266,40272+31]..[1266,40272+35])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1266,40272+36]..[1266,40272+68])
                                                              Pexp_construct "::" (lambda/matching.ml[1266,40272+55]..[1266,40272+57])
                                                              Some
                                                                expression (lambda/matching.ml[1266,40272+37]..[1266,40272+67]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[1266,40272+37]..[1266,40272+54])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[1266,40272+38]..[1266,40272+48])
  Pexp_tuple
  [
    expression (lambda/matching.ml[1266,40272+39]..[1266,40272+43])
      Pexp_ident "head" (lambda/matching.ml[1266,40272+39]..[1266,40272+43])
    expression (lambda/matching.ml[1266,40272+45]..[1266,40272+47])
      Pexp_ident "ps" (lambda/matching.ml[1266,40272+45]..[1266,40272+47])
  ]
expression (lambda/matching.ml[1266,40272+50]..[1266,40272+53])
  Pexp_ident "act" (lambda/matching.ml[1266,40272+50]..[1266,40272+53])
                                                                      ]
                                                                    expression (lambda/matching.ml[1266,40272+58]..[1266,40272+67])
                                                                      Pexp_construct "::" (lambda/matching.ml[1266,40272+61]..[1266,40272+63])
                                                                      Some
expression (lambda/matching.ml[1266,40272+58]..[1266,40272+67]) ghost
  Pexp_tuple
  [
    expression (lambda/matching.ml[1266,40272+58]..[1266,40272+60])
      Pexp_ident "cl" (lambda/matching.ml[1266,40272+58]..[1266,40272+60])
    expression (lambda/matching.ml[1266,40272+64]..[1266,40272+67])
      Pexp_ident "rem" (lambda/matching.ml[1266,40272+64]..[1266,40272+67])
  ]
                                                                  ]
                                                        ]
                                                      expression (lambda/matching.ml[1266,40272+70]..[1266,40272+76])
                                                        Pexp_ident "rev_no" (lambda/matching.ml[1266,40272+70]..[1266,40272+76])
                                                    ]
                                                  Some
                                                    expression (lambda/matching.ml[1269,40412+14]..[1269,40412+52])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1269,40412+15]..[1269,40412+22])
                                                          Pexp_ident "rev_ors" (lambda/matching.ml[1269,40412+15]..[1269,40412+22])
                                                        expression (lambda/matching.ml[1269,40412+24]..[1269,40412+51])
                                                          Pexp_construct "::" (lambda/matching.ml[1269,40412+42]..[1269,40412+44])
                                                          Some
                                                            expression (lambda/matching.ml[1269,40412+24]..[1269,40412+51]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[1269,40412+24]..[1269,40412+41])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[1269,40412+25]..[1269,40412+35])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[1269,40412+26]..[1269,40412+30])
  Pexp_ident "head" (lambda/matching.ml[1269,40412+26]..[1269,40412+30])
expression (lambda/matching.ml[1269,40412+32]..[1269,40412+34])
  Pexp_ident "ps" (lambda/matching.ml[1269,40412+32]..[1269,40412+34])
                                                                      ]
                                                                    expression (lambda/matching.ml[1269,40412+37]..[1269,40412+40])
                                                                      Pexp_ident "act" (lambda/matching.ml[1269,40412+37]..[1269,40412+40])
                                                                  ]
                                                                expression (lambda/matching.ml[1269,40412+45]..[1269,40412+51])
                                                                  Pexp_ident "rev_no" (lambda/matching.ml[1269,40412+45]..[1269,40412+51])
                                                              ]
                                                      ]
                                                Some
                                                  expression (lambda/matching.ml[1270,40465+15]..[1273,40566+50])
                                                    Pexp_ifthenelse
                                                    expression (lambda/matching.ml[1270,40465+18]..[1270,40465+43])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1270,40465+18]..[1270,40465+28])
                                                        Pexp_ident "safe_below" (lambda/matching.ml[1270,40465+18]..[1270,40465+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1270,40465+29]..[1270,40465+40])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1270,40465+30]..[1270,40465+32])
                                                                Pexp_ident "qs" (lambda/matching.ml[1270,40465+30]..[1270,40465+32])
                                                              expression (lambda/matching.ml[1270,40465+34]..[1270,40465+39])
                                                                Pexp_ident "act_q" (lambda/matching.ml[1270,40465+34]..[1270,40465+39])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1270,40465+41]..[1270,40465+43])
                                                            Pexp_ident "ps" (lambda/matching.ml[1270,40465+41]..[1270,40465+43])
                                                      ]
                                                    expression (lambda/matching.ml[1271,40514+12]..[1271,40514+36])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1271,40514+12]..[1271,40514+19])
                                                        Pexp_ident "attempt" (lambda/matching.ml[1271,40514+12]..[1271,40514+19])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1271,40514+20]..[1271,40514+32])
                                                            Pexp_construct "::" (lambda/matching.ml[1271,40514+24]..[1271,40514+26])
                                                            Some
                                                              expression (lambda/matching.ml[1271,40514+21]..[1271,40514+31]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1271,40514+21]..[1271,40514+23])
                                                                    Pexp_ident "cl" (lambda/matching.ml[1271,40514+21]..[1271,40514+23])
                                                                  expression (lambda/matching.ml[1271,40514+27]..[1271,40514+31])
                                                                    Pexp_ident "seen" (lambda/matching.ml[1271,40514+27]..[1271,40514+31])
                                                                ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1271,40514+33]..[1271,40514+36])
                                                            Pexp_ident "rem" (lambda/matching.ml[1271,40514+33]..[1271,40514+36])
                                                      ]
                                                    Some
                                                      expression (lambda/matching.ml[1273,40566+12]..[1273,40566+50])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1273,40566+13]..[1273,40566+20])
                                                            Pexp_ident "rev_ors" (lambda/matching.ml[1273,40566+13]..[1273,40566+20])
                                                          expression (lambda/matching.ml[1273,40566+22]..[1273,40566+49])
                                                            Pexp_construct "::" (lambda/matching.ml[1273,40566+40]..[1273,40566+42])
                                                            Some
                                                              expression (lambda/matching.ml[1273,40566+22]..[1273,40566+49]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1273,40566+22]..[1273,40566+39])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[1273,40566+23]..[1273,40566+33])
Pexp_tuple
[
  expression (lambda/matching.ml[1273,40566+24]..[1273,40566+28])
    Pexp_ident "head" (lambda/matching.ml[1273,40566+24]..[1273,40566+28])
  expression (lambda/matching.ml[1273,40566+30]..[1273,40566+32])
    Pexp_ident "ps" (lambda/matching.ml[1273,40566+30]..[1273,40566+32])
]
                                                                      expression (lambda/matching.ml[1273,40566+35]..[1273,40566+38])
Pexp_ident "act" (lambda/matching.ml[1273,40566+35]..[1273,40566+38])
                                                                    ]
                                                                  expression (lambda/matching.ml[1273,40566+43]..[1273,40566+49])
                                                                    Pexp_ident "rev_no" (lambda/matching.ml[1273,40566+43]..[1273,40566+49])
                                                                ]
                                                        ]
                                  ]
                          ]
                          expression (lambda/matching.ml[1275,40624+4]..[1275,40624+22])
                            Pexp_apply
                            expression (lambda/matching.ml[1275,40624+4]..[1275,40624+11])
                              Pexp_ident "attempt" (lambda/matching.ml[1275,40624+4]..[1275,40624+11])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1275,40624+12]..[1275,40624+14])
                                  Pexp_construct "[]" (lambda/matching.ml[1275,40624+12]..[1275,40624+14])
                                  None
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1275,40624+15]..[1275,40624+22])
                                  Pexp_ident "rev_ors" (lambda/matching.ml[1275,40624+15]..[1275,40624+22])
                            ]
            ]
        ]
  structure_item (lambda/matching.ml[1280,40719+0]..[1281,40741+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1280,40719+4]..[1280,40719+13])
          Ppat_var "as_matrix" (lambda/matching.ml[1280,40719+4]..[1280,40719+13])
        expression (lambda/matching.ml[1280,40719+14]..[1281,40741+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1280,40719+14]..[1280,40719+19])
            Ppat_var "cases" (lambda/matching.ml[1280,40719+14]..[1280,40719+19])
          expression (lambda/matching.ml[1281,40741+2]..[1281,40741+79])
            Pexp_apply
            expression (lambda/matching.ml[1281,40741+2]..[1281,40741+10])
              Pexp_ident "get_mins" (lambda/matching.ml[1281,40741+2]..[1281,40741+10])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[1281,40741+11]..[1281,40741+18])
                  Pexp_ident "le_pats" (lambda/matching.ml[1281,40741+11]..[1281,40741+18])
              <arg>
              Nolabel
                expression (lambda/matching.ml[1281,40741+19]..[1281,40741+79])
                  Pexp_apply
                  expression (lambda/matching.ml[1281,40741+20]..[1281,40741+28])
                    Pexp_ident "List.map" (lambda/matching.ml[1281,40741+20]..[1281,40741+28])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1281,40741+29]..[1281,40741+72])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1281,40741+34]..[1281,40741+46])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[1281,40741+35]..[1281,40741+42])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1281,40741+36]..[1281,40741+37])
                                  Ppat_var "p" (lambda/matching.ml[1281,40741+36]..[1281,40741+37])
                                pattern (lambda/matching.ml[1281,40741+39]..[1281,40741+41])
                                  Ppat_var "ps" (lambda/matching.ml[1281,40741+39]..[1281,40741+41])
                              ]
                            pattern (lambda/matching.ml[1281,40741+44]..[1281,40741+45])
                              Ppat_any
                          ]
                        expression (lambda/matching.ml[1281,40741+50]..[1281,40741+71])
                          Pexp_construct "::" (lambda/matching.ml[1281,40741+66]..[1281,40741+68])
                          Some
                            expression (lambda/matching.ml[1281,40741+50]..[1281,40741+71]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[1281,40741+50]..[1281,40741+65])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1281,40741+50]..[1281,40741+63])
                                    Pexp_ident "General.erase" (lambda/matching.ml[1281,40741+50]..[1281,40741+63])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1281,40741+64]..[1281,40741+65])
                                        Pexp_ident "p" (lambda/matching.ml[1281,40741+64]..[1281,40741+65])
                                  ]
                                expression (lambda/matching.ml[1281,40741+69]..[1281,40741+71])
                                  Pexp_ident "ps" (lambda/matching.ml[1281,40741+69]..[1281,40741+71])
                              ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1281,40741+73]..[1281,40741+78])
                        Pexp_ident "cases" (lambda/matching.ml[1281,40741+73]..[1281,40741+78])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[1328,42737+0]..[1613,53702+7])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[1328,42737+8]..[1328,42737+16])
          Ppat_var "split_or" (lambda/matching.ml[1328,42737+8]..[1328,42737+16])
        expression (lambda/matching.ml[1328,42737+17]..[1361,43996+23]) ghost
          Pexp_fun
          Labelled "arg"
          None
          pattern (lambda/matching.ml[1328,42737+18]..[1328,42737+21])
            Ppat_var "arg" (lambda/matching.ml[1328,42737+18]..[1328,42737+21])
          expression (lambda/matching.ml[1328,42737+22]..[1361,43996+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1328,42737+22]..[1328,42737+53])
              Ppat_constraint
              pattern (lambda/matching.ml[1328,42737+23]..[1328,42737+26])
                Ppat_var "cls" (lambda/matching.ml[1328,42737+23]..[1328,42737+26])
              core_type (lambda/matching.ml[1328,42737+29]..[1328,42737+52])
                Ptyp_constr "list" (lambda/matching.ml[1328,42737+48]..[1328,42737+52])
                [
                  core_type (lambda/matching.ml[1328,42737+29]..[1328,42737+47])
                    Ptyp_constr "Half_simple.clause" (lambda/matching.ml[1328,42737+29]..[1328,42737+47])
                    []
                ]
            expression (lambda/matching.ml[1328,42737+54]..[1361,43996+23]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1328,42737+54]..[1328,42737+58])
                Ppat_var "args" (lambda/matching.ml[1328,42737+54]..[1328,42737+58])
              expression (lambda/matching.ml[1328,42737+59]..[1361,43996+23]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1328,42737+59]..[1328,42737+62])
                  Ppat_var "def" (lambda/matching.ml[1328,42737+59]..[1328,42737+62])
                expression (lambda/matching.ml[1329,42802+2]..[1361,43996+23])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (lambda/matching.ml[1329,42802+10]..[1329,42802+18])
                        Ppat_var "do_split" (lambda/matching.ml[1329,42802+10]..[1329,42802+18])
                      expression (lambda/matching.ml[1329,42802+19]..[1345,43518+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1329,42802+19]..[1329,42802+52])
                          Ppat_constraint
                          pattern (lambda/matching.ml[1329,42802+20]..[1329,42802+30])
                            Ppat_var "rev_before" (lambda/matching.ml[1329,42802+20]..[1329,42802+30])
                          core_type (lambda/matching.ml[1329,42802+33]..[1329,42802+51])
                            Ptyp_constr "list" (lambda/matching.ml[1329,42802+47]..[1329,42802+51])
                            [
                              core_type (lambda/matching.ml[1329,42802+33]..[1329,42802+46])
                                Ptyp_constr "Simple.clause" (lambda/matching.ml[1329,42802+33]..[1329,42802+46])
                                []
                            ]
                        expression (lambda/matching.ml[1329,42802+53]..[1345,43518+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[1329,42802+53]..[1329,42802+60])
                            Ppat_var "rev_ors" (lambda/matching.ml[1329,42802+53]..[1329,42802+60])
                          expression (lambda/matching.ml[1329,42802+61]..[1345,43518+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1329,42802+61]..[1329,42802+67])
                              Ppat_var "rev_no" (lambda/matching.ml[1329,42802+61]..[1329,42802+67])
                            expression (lambda/matching.ml[1329,42802+70]..[1345,43518+7])
                              Pexp_function
                              [
                                <case>
                                  pattern (lambda/matching.ml[1330,42881+6]..[1330,42881+8])
                                    Ppat_construct "[]" (lambda/matching.ml[1330,42881+6]..[1330,42881+8])
                                    None
                                  expression (lambda/matching.ml[1331,42893+8]..[1331,42893+76])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1331,42893+8]..[1331,42893+17])
                                      Pexp_ident "cons_next" (lambda/matching.ml[1331,42893+8]..[1331,42893+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1331,42893+18]..[1331,42893+39])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1331,42893+19]..[1331,42893+27])
                                            Pexp_ident "List.rev" (lambda/matching.ml[1331,42893+19]..[1331,42893+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1331,42893+28]..[1331,42893+38])
                                                Pexp_ident "rev_before" (lambda/matching.ml[1331,42893+28]..[1331,42893+38])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1331,42893+40]..[1331,42893+58])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1331,42893+41]..[1331,42893+49])
                                            Pexp_ident "List.rev" (lambda/matching.ml[1331,42893+41]..[1331,42893+49])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1331,42893+50]..[1331,42893+57])
                                                Pexp_ident "rev_ors" (lambda/matching.ml[1331,42893+50]..[1331,42893+57])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1331,42893+59]..[1331,42893+76])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1331,42893+60]..[1331,42893+68])
                                            Pexp_ident "List.rev" (lambda/matching.ml[1331,42893+60]..[1331,42893+68])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1331,42893+69]..[1331,42893+75])
                                                Pexp_ident "rev_no" (lambda/matching.ml[1331,42893+69]..[1331,42893+75])
                                          ]
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[1332,42970+6]..[1332,42970+15])
                                    Ppat_construct "::" (lambda/matching.ml[1332,42970+9]..[1332,42970+11])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1332,42970+6]..[1332,42970+15]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1332,42970+6]..[1332,42970+8])
                                            Ppat_var "cl" (lambda/matching.ml[1332,42970+6]..[1332,42970+8])
                                          pattern (lambda/matching.ml[1332,42970+12]..[1332,42970+15])
                                            Ppat_var "rem" (lambda/matching.ml[1332,42970+12]..[1332,42970+15])
                                        ]
                                  <when>
                                    expression (lambda/matching.ml[1332,42970+21]..[1332,42970+48])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1332,42970+21]..[1332,42970+24])
                                        Pexp_ident "not" (lambda/matching.ml[1332,42970+21]..[1332,42970+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1332,42970+25]..[1332,42970+48])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1332,42970+26]..[1332,42970+37])
                                              Pexp_ident "safe_before" (lambda/matching.ml[1332,42970+26]..[1332,42970+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1332,42970+38]..[1332,42970+40])
                                                  Pexp_ident "cl" (lambda/matching.ml[1332,42970+38]..[1332,42970+40])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1332,42970+41]..[1332,42970+47])
                                                  Pexp_ident "rev_no" (lambda/matching.ml[1332,42970+41]..[1332,42970+47])
                                            ]
                                      ]
                                  expression (lambda/matching.ml[1333,43022+8]..[1333,43022+54])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1333,43022+8]..[1333,43022+16])
                                      Pexp_ident "do_split" (lambda/matching.ml[1333,43022+8]..[1333,43022+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1333,43022+17]..[1333,43022+27])
                                          Pexp_ident "rev_before" (lambda/matching.ml[1333,43022+17]..[1333,43022+27])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1333,43022+28]..[1333,43022+35])
                                          Pexp_ident "rev_ors" (lambda/matching.ml[1333,43022+28]..[1333,43022+35])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1333,43022+36]..[1333,43022+50])
                                          Pexp_construct "::" (lambda/matching.ml[1333,43022+40]..[1333,43022+42])
                                          Some
                                            expression (lambda/matching.ml[1333,43022+37]..[1333,43022+49]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[1333,43022+37]..[1333,43022+39])
                                                  Pexp_ident "cl" (lambda/matching.ml[1333,43022+37]..[1333,43022+39])
                                                expression (lambda/matching.ml[1333,43022+43]..[1333,43022+49])
                                                  Pexp_ident "rev_no" (lambda/matching.ml[1333,43022+43]..[1333,43022+49])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1333,43022+51]..[1333,43022+54])
                                          Pexp_ident "rem" (lambda/matching.ml[1333,43022+51]..[1333,43022+54])
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[1334,43077+6]..[1334,43077+35])
                                    Ppat_construct "::" (lambda/matching.ml[1334,43077+29]..[1334,43077+31])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1334,43077+6]..[1334,43077+35]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1334,43077+6]..[1334,43077+28])
                                            Ppat_alias "cl" (lambda/matching.ml[1334,43077+25]..[1334,43077+27])
                                            pattern (lambda/matching.ml[1334,43077+7]..[1334,43077+21])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1334,43077+8]..[1334,43077+15])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[1334,43077+9]..[1334,43077+10])
                                                      Ppat_var "p" (lambda/matching.ml[1334,43077+9]..[1334,43077+10])
                                                    pattern (lambda/matching.ml[1334,43077+12]..[1334,43077+14])
                                                      Ppat_var "ps" (lambda/matching.ml[1334,43077+12]..[1334,43077+14])
                                                  ]
                                                pattern (lambda/matching.ml[1334,43077+17]..[1334,43077+20])
                                                  Ppat_var "act" (lambda/matching.ml[1334,43077+17]..[1334,43077+20])
                                              ]
                                          pattern (lambda/matching.ml[1334,43077+32]..[1334,43077+35])
                                            Ppat_var "rem" (lambda/matching.ml[1334,43077+32]..[1334,43077+35])
                                        ]
                                  expression (lambda/matching.ml[1334,43077+39]..[1345,43518+7])
                                    Pexp_match
                                    expression (lambda/matching.ml[1335,43118+14]..[1335,43118+24])
                                      Pexp_field
                                      expression (lambda/matching.ml[1335,43118+14]..[1335,43118+15])
                                        Pexp_ident "p" (lambda/matching.ml[1335,43118+14]..[1335,43118+15])
                                      "pat_desc" (lambda/matching.ml[1335,43118+16]..[1335,43118+24])
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[1336,43148+10]..[1336,43148+30])
                                          Ppat_alias "view" (lambda/matching.ml[1336,43148+26]..[1336,43148+30])
                                          pattern (lambda/matching.ml[1336,43148+10]..[1336,43148+22])
                                            Ppat_type
                                            "Simple.view" (lambda/matching.ml[1336,43148+11]..[1336,43148+22])
                                        <when>
                                          expression (lambda/matching.ml[1336,43148+36]..[1336,43148+58])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1336,43148+36]..[1336,43148+47])
                                              Pexp_ident "safe_before" (lambda/matching.ml[1336,43148+36]..[1336,43148+47])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1336,43148+48]..[1336,43148+50])
                                                  Pexp_ident "cl" (lambda/matching.ml[1336,43148+48]..[1336,43148+50])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1336,43148+51]..[1336,43148+58])
                                                  Pexp_ident "rev_ors" (lambda/matching.ml[1336,43148+51]..[1336,43148+58])
                                            ]
                                        expression (lambda/matching.ml[1337,43210+12]..[1339,43301+32])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1337,43210+12]..[1337,43210+20])
                                            Pexp_ident "do_split" (lambda/matching.ml[1337,43210+12]..[1337,43210+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1338,43231+14]..[1338,43231+69])
                                                Pexp_construct "::" (lambda/matching.ml[1338,43231+55]..[1338,43231+57])
                                                Some
                                                  expression (lambda/matching.ml[1338,43231+15]..[1338,43231+68]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1338,43231+15]..[1338,43231+54])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1338,43231+16]..[1338,43231+48])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1338,43231+17]..[1338,43231+43])
                                                                Pexp_record
                                                                [
                                                                  "pat_desc" (lambda/matching.ml[1338,43231+26]..[1338,43231+34])
                                                                    expression (lambda/matching.ml[1338,43231+37]..[1338,43231+41])
                                                                      Pexp_ident "view" (lambda/matching.ml[1338,43231+37]..[1338,43231+41])
                                                                ]
                                                                Some
                                                                  expression (lambda/matching.ml[1338,43231+19]..[1338,43231+20])
                                                                    Pexp_ident "p" (lambda/matching.ml[1338,43231+19]..[1338,43231+20])
                                                              expression (lambda/matching.ml[1338,43231+45]..[1338,43231+47])
                                                                Pexp_ident "ps" (lambda/matching.ml[1338,43231+45]..[1338,43231+47])
                                                            ]
                                                          expression (lambda/matching.ml[1338,43231+50]..[1338,43231+53])
                                                            Pexp_ident "act" (lambda/matching.ml[1338,43231+50]..[1338,43231+53])
                                                        ]
                                                      expression (lambda/matching.ml[1338,43231+58]..[1338,43231+68])
                                                        Pexp_ident "rev_before" (lambda/matching.ml[1338,43231+58]..[1338,43231+68])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1339,43301+14]..[1339,43301+21])
                                                Pexp_ident "rev_ors" (lambda/matching.ml[1339,43301+14]..[1339,43301+21])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1339,43301+22]..[1339,43301+28])
                                                Pexp_ident "rev_no" (lambda/matching.ml[1339,43301+22]..[1339,43301+28])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1339,43301+29]..[1339,43301+32])
                                                Pexp_ident "rem" (lambda/matching.ml[1339,43301+29]..[1339,43301+32])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[1340,43334+10]..[1340,43334+11])
                                          Ppat_any
                                        expression (lambda/matching.ml[1341,43349+12]..[1344,43467+50])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1341,43349+16]..[1341,43349+31])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[1341,43349+16]..[1341,43349+23])
                                                    Ppat_var "rev_ors" (lambda/matching.ml[1341,43349+16]..[1341,43349+23])
                                                  pattern (lambda/matching.ml[1341,43349+25]..[1341,43349+31])
                                                    Ppat_var "rev_no" (lambda/matching.ml[1341,43349+25]..[1341,43349+31])
                                                ]
                                              expression (lambda/matching.ml[1342,43383+14]..[1342,43383+68])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1342,43383+14]..[1342,43383+40])
                                                  Pexp_ident "Or_matrix.insert_or_append" (lambda/matching.ml[1342,43383+14]..[1342,43383+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1342,43383+41]..[1342,43383+53])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1342,43383+42]..[1342,43383+43])
                                                          Pexp_ident "p" (lambda/matching.ml[1342,43383+42]..[1342,43383+43])
                                                        expression (lambda/matching.ml[1342,43383+45]..[1342,43383+47])
                                                          Pexp_ident "ps" (lambda/matching.ml[1342,43383+45]..[1342,43383+47])
                                                        expression (lambda/matching.ml[1342,43383+49]..[1342,43383+52])
                                                          Pexp_ident "act" (lambda/matching.ml[1342,43383+49]..[1342,43383+52])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1342,43383+54]..[1342,43383+61])
                                                      Pexp_ident "rev_ors" (lambda/matching.ml[1342,43383+54]..[1342,43383+61])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1342,43383+62]..[1342,43383+68])
                                                      Pexp_ident "rev_no" (lambda/matching.ml[1342,43383+62]..[1342,43383+68])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1344,43467+12]..[1344,43467+50])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1344,43467+12]..[1344,43467+20])
                                              Pexp_ident "do_split" (lambda/matching.ml[1344,43467+12]..[1344,43467+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1344,43467+21]..[1344,43467+31])
                                                  Pexp_ident "rev_before" (lambda/matching.ml[1344,43467+21]..[1344,43467+31])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1344,43467+32]..[1344,43467+39])
                                                  Pexp_ident "rev_ors" (lambda/matching.ml[1344,43467+32]..[1344,43467+39])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1344,43467+40]..[1344,43467+46])
                                                  Pexp_ident "rev_no" (lambda/matching.ml[1344,43467+40]..[1344,43467+46])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1344,43467+47]..[1344,43467+50])
                                                  Pexp_ident "rem" (lambda/matching.ml[1344,43467+47]..[1344,43467+50])
                                            ]
                                    ]
                              ]
                    <def>
                      pattern (lambda/matching.ml[1346,43526+6]..[1346,43526+15])
                        Ppat_var "cons_next" (lambda/matching.ml[1346,43526+6]..[1346,43526+15])
                      expression (lambda/matching.ml[1346,43526+16]..[1359,43936+54]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1346,43526+16]..[1346,43526+19])
                          Ppat_var "yes" (lambda/matching.ml[1346,43526+16]..[1346,43526+19])
                        expression (lambda/matching.ml[1346,43526+20]..[1359,43936+54]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[1346,43526+20]..[1346,43526+25])
                            Ppat_var "yesor" (lambda/matching.ml[1346,43526+20]..[1346,43526+25])
                          expression (lambda/matching.ml[1346,43526+26]..[1359,43936+54]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1346,43526+26]..[1346,43526+28])
                              Ppat_var "no" (lambda/matching.ml[1346,43526+26]..[1346,43526+28])
                            expression (lambda/matching.ml[1347,43557+4]..[1359,43936+54])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[1347,43557+8]..[1347,43557+18])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1347,43557+8]..[1347,43557+11])
                                        Ppat_var "def" (lambda/matching.ml[1347,43557+8]..[1347,43557+11])
                                      pattern (lambda/matching.ml[1347,43557+13]..[1347,43557+18])
                                        Ppat_var "nexts" (lambda/matching.ml[1347,43557+13]..[1347,43557+18])
                                    ]
                                  expression (lambda/matching.ml[1348,43578+6]..[1355,43789+75])
                                    Pexp_match
                                    expression (lambda/matching.ml[1348,43578+12]..[1348,43578+14])
                                      Pexp_ident "no" (lambda/matching.ml[1348,43578+12]..[1348,43578+14])
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[1349,43598+8]..[1349,43598+10])
                                          Ppat_construct "[]" (lambda/matching.ml[1349,43598+8]..[1349,43598+10])
                                          None
                                        expression (lambda/matching.ml[1349,43598+14]..[1349,43598+23])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[1349,43598+15]..[1349,43598+18])
                                              Pexp_ident "def" (lambda/matching.ml[1349,43598+15]..[1349,43598+18])
                                            expression (lambda/matching.ml[1349,43598+20]..[1349,43598+22])
                                              Pexp_construct "[]" (lambda/matching.ml[1349,43598+20]..[1349,43598+22])
                                              None
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[1350,43622+8]..[1350,43622+9])
                                          Ppat_any
                                        expression (lambda/matching.ml[1351,43635+10]..[1355,43789+75])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1351,43635+14]..[1351,43635+61])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[1351,43635+14]..[1351,43635+54])
                                                    Ppat_record Closed
                                                    [
                                                      "me" (lambda/matching.ml[1351,43635+16]..[1351,43635+18])
                                                        pattern (lambda/matching.ml[1351,43635+21]..[1351,43635+25])
                                                          Ppat_var "next" (lambda/matching.ml[1351,43635+21]..[1351,43635+25])
                                                      "matrix" (lambda/matching.ml[1351,43635+27]..[1351,43635+33]) ghost
                                                        pattern (lambda/matching.ml[1351,43635+27]..[1351,43635+33])
                                                          Ppat_var "matrix" (lambda/matching.ml[1351,43635+27]..[1351,43635+33])
                                                      "top_default" (lambda/matching.ml[1351,43635+35]..[1351,43635+46])
                                                        pattern (lambda/matching.ml[1351,43635+49]..[1351,43635+52])
                                                          Ppat_var "def" (lambda/matching.ml[1351,43635+49]..[1351,43635+52])
                                                    ]
                                                  pattern (lambda/matching.ml[1351,43635+56]..[1351,43635+61])
                                                    Ppat_var "nexts" (lambda/matching.ml[1351,43635+56]..[1351,43635+61])
                                                ]
                                              expression (lambda/matching.ml[1352,43699+12]..[1352,43699+32])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1352,43699+12]..[1352,43699+20])
                                                  Pexp_ident "do_split" (lambda/matching.ml[1352,43699+12]..[1352,43699+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1352,43699+21]..[1352,43699+23])
                                                      Pexp_construct "[]" (lambda/matching.ml[1352,43699+21]..[1352,43699+23])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1352,43699+24]..[1352,43699+26])
                                                      Pexp_construct "[]" (lambda/matching.ml[1352,43699+24]..[1352,43699+26])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1352,43699+27]..[1352,43699+29])
                                                      Pexp_construct "[]" (lambda/matching.ml[1352,43699+27]..[1352,43699+29])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1352,43699+30]..[1352,43699+32])
                                                      Pexp_ident "no" (lambda/matching.ml[1352,43699+30]..[1352,43699+32])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1354,43745+10]..[1355,43789+75])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[1354,43745+14]..[1354,43745+18])
                                                  Ppat_var "idef" (lambda/matching.ml[1354,43745+14]..[1354,43745+18])
                                                expression (lambda/matching.ml[1354,43745+21]..[1354,43745+40])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1354,43745+21]..[1354,43745+37])
                                                    Pexp_ident "next_raise_count" (lambda/matching.ml[1354,43745+21]..[1354,43745+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1354,43745+38]..[1354,43745+40])
                                                        Pexp_construct "()" (lambda/matching.ml[1354,43745+38]..[1354,43745+40])
                                                        None
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[1355,43789+10]..[1355,43789+75])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[1355,43789+11]..[1355,43789+51])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1355,43789+11]..[1355,43789+35])
                                                    Pexp_ident "Default_environment.cons" (lambda/matching.ml[1355,43789+11]..[1355,43789+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1355,43789+36]..[1355,43789+42])
                                                        Pexp_ident "matrix" (lambda/matching.ml[1355,43789+36]..[1355,43789+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1355,43789+43]..[1355,43789+47])
                                                        Pexp_ident "idef" (lambda/matching.ml[1355,43789+43]..[1355,43789+47])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1355,43789+48]..[1355,43789+51])
                                                        Pexp_ident "def" (lambda/matching.ml[1355,43789+48]..[1355,43789+51])
                                                  ]
                                                expression (lambda/matching.ml[1355,43789+53]..[1355,43789+74])
                                                  Pexp_construct "::" (lambda/matching.ml[1355,43789+66]..[1355,43789+68])
                                                  Some
                                                    expression (lambda/matching.ml[1355,43789+53]..[1355,43789+74]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1355,43789+53]..[1355,43789+65])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[1355,43789+54]..[1355,43789+58])
                                                              Pexp_ident "idef" (lambda/matching.ml[1355,43789+54]..[1355,43789+58])
                                                            expression (lambda/matching.ml[1355,43789+60]..[1355,43789+64])
                                                              Pexp_ident "next" (lambda/matching.ml[1355,43789+60]..[1355,43789+64])
                                                          ]
                                                        expression (lambda/matching.ml[1355,43789+69]..[1355,43789+74])
                                                          Pexp_ident "nexts" (lambda/matching.ml[1355,43789+69]..[1355,43789+74])
                                                      ]
                                              ]
                                    ]
                              ]
                              expression (lambda/matching.ml[1357,43872+4]..[1359,43936+54])
                                Pexp_match
                                expression (lambda/matching.ml[1357,43872+10]..[1357,43872+15])
                                  Pexp_ident "yesor" (lambda/matching.ml[1357,43872+10]..[1357,43872+15])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[1358,43893+6]..[1358,43893+8])
                                      Ppat_construct "[]" (lambda/matching.ml[1358,43893+6]..[1358,43893+8])
                                      None
                                    expression (lambda/matching.ml[1358,43893+12]..[1358,43893+42])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1358,43893+12]..[1358,43893+23])
                                        Pexp_ident "split_no_or" (lambda/matching.ml[1358,43893+12]..[1358,43893+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1358,43893+24]..[1358,43893+27])
                                            Pexp_ident "yes" (lambda/matching.ml[1358,43893+24]..[1358,43893+27])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1358,43893+28]..[1358,43893+32])
                                            Pexp_ident "args" (lambda/matching.ml[1358,43893+28]..[1358,43893+32])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1358,43893+33]..[1358,43893+36])
                                            Pexp_ident "def" (lambda/matching.ml[1358,43893+33]..[1358,43893+36])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1358,43893+37]..[1358,43893+42])
                                            Pexp_ident "nexts" (lambda/matching.ml[1358,43893+37]..[1358,43893+42])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[1359,43936+6]..[1359,43936+7])
                                      Ppat_any
                                    expression (lambda/matching.ml[1359,43936+11]..[1359,43936+54])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1359,43936+11]..[1359,43936+24])
                                        Pexp_ident "precompile_or" (lambda/matching.ml[1359,43936+11]..[1359,43936+24])
                                      [
                                        <arg>
                                        Labelled "arg"
                                          expression (lambda/matching.ml[1359,43936+26]..[1359,43936+29])
                                            Pexp_ident "arg" (lambda/matching.ml[1359,43936+26]..[1359,43936+29])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1359,43936+30]..[1359,43936+33])
                                            Pexp_ident "yes" (lambda/matching.ml[1359,43936+30]..[1359,43936+33])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1359,43936+34]..[1359,43936+39])
                                            Pexp_ident "yesor" (lambda/matching.ml[1359,43936+34]..[1359,43936+39])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1359,43936+40]..[1359,43936+44])
                                            Pexp_ident "args" (lambda/matching.ml[1359,43936+40]..[1359,43936+44])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1359,43936+45]..[1359,43936+48])
                                            Pexp_ident "def" (lambda/matching.ml[1359,43936+45]..[1359,43936+48])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1359,43936+49]..[1359,43936+54])
                                            Pexp_ident "nexts" (lambda/matching.ml[1359,43936+49]..[1359,43936+54])
                                      ]
                                ]
                  ]
                  expression (lambda/matching.ml[1361,43996+2]..[1361,43996+23])
                    Pexp_apply
                    expression (lambda/matching.ml[1361,43996+2]..[1361,43996+10])
                      Pexp_ident "do_split" (lambda/matching.ml[1361,43996+2]..[1361,43996+10])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1361,43996+11]..[1361,43996+13])
                          Pexp_construct "[]" (lambda/matching.ml[1361,43996+11]..[1361,43996+13])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1361,43996+14]..[1361,43996+16])
                          Pexp_construct "[]" (lambda/matching.ml[1361,43996+14]..[1361,43996+16])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1361,43996+17]..[1361,43996+19])
                          Pexp_construct "[]" (lambda/matching.ml[1361,43996+17]..[1361,43996+19])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1361,43996+20]..[1361,43996+23])
                          Pexp_ident "cls" (lambda/matching.ml[1361,43996+20]..[1361,43996+23])
                    ]
      <def>
        pattern (lambda/matching.ml[1363,44021+4]..[1363,44021+15])
          Ppat_var "split_no_or" (lambda/matching.ml[1363,44021+4]..[1363,44021+15])
        expression (lambda/matching.ml[1363,44021+16]..[1427,46930+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1363,44021+16]..[1363,44021+19])
            Ppat_var "cls" (lambda/matching.ml[1363,44021+16]..[1363,44021+19])
          expression (lambda/matching.ml[1363,44021+20]..[1427,46930+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1363,44021+20]..[1363,44021+24])
              Ppat_var "args" (lambda/matching.ml[1363,44021+20]..[1363,44021+24])
            expression (lambda/matching.ml[1363,44021+25]..[1427,46930+11]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1363,44021+25]..[1363,44021+28])
                Ppat_var "def" (lambda/matching.ml[1363,44021+25]..[1363,44021+28])
              expression (lambda/matching.ml[1363,44021+29]..[1427,46930+11]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1363,44021+29]..[1363,44021+30])
                  Ppat_var "k" (lambda/matching.ml[1363,44021+29]..[1363,44021+30])
                expression (lambda/matching.ml[1377,44782+2]..[1427,46930+11])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (lambda/matching.ml[1377,44782+10]..[1377,44782+15])
                        Ppat_var "split" (lambda/matching.ml[1377,44782+10]..[1377,44782+15])
                      expression (lambda/matching.ml[1377,44782+16]..[1379,44869+27]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1377,44782+16]..[1377,44782+42])
                          Ppat_constraint
                          pattern (lambda/matching.ml[1377,44782+17]..[1377,44782+20])
                            Ppat_var "cls" (lambda/matching.ml[1377,44782+17]..[1377,44782+20])
                          core_type (lambda/matching.ml[1377,44782+23]..[1377,44782+41])
                            Ptyp_constr "list" (lambda/matching.ml[1377,44782+37]..[1377,44782+41])
                            [
                              core_type (lambda/matching.ml[1377,44782+23]..[1377,44782+36])
                                Ptyp_constr "Simple.clause" (lambda/matching.ml[1377,44782+23]..[1377,44782+36])
                                []
                            ]
                        expression (lambda/matching.ml[1378,44827+4]..[1379,44869+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[1378,44827+8]..[1378,44827+13])
                                Ppat_var "discr" (lambda/matching.ml[1378,44827+8]..[1378,44827+13])
                              expression (lambda/matching.ml[1378,44827+16]..[1378,44827+38])
                                Pexp_apply
                                expression (lambda/matching.ml[1378,44827+16]..[1378,44827+34])
                                  Pexp_ident "what_is_first_case" (lambda/matching.ml[1378,44827+16]..[1378,44827+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1378,44827+35]..[1378,44827+38])
                                      Pexp_ident "cls" (lambda/matching.ml[1378,44827+35]..[1378,44827+38])
                                ]
                          ]
                          expression (lambda/matching.ml[1379,44869+4]..[1379,44869+27])
                            Pexp_apply
                            expression (lambda/matching.ml[1379,44869+4]..[1379,44869+11])
                              Pexp_ident "collect" (lambda/matching.ml[1379,44869+4]..[1379,44869+11])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1379,44869+12]..[1379,44869+17])
                                  Pexp_ident "discr" (lambda/matching.ml[1379,44869+12]..[1379,44869+17])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1379,44869+18]..[1379,44869+20])
                                  Pexp_construct "[]" (lambda/matching.ml[1379,44869+18]..[1379,44869+20])
                                  None
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1379,44869+21]..[1379,44869+23])
                                  Pexp_construct "[]" (lambda/matching.ml[1379,44869+21]..[1379,44869+23])
                                  None
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1379,44869+24]..[1379,44869+27])
                                  Pexp_ident "cls" (lambda/matching.ml[1379,44869+24]..[1379,44869+27])
                            ]
                    <def>
                      pattern (lambda/matching.ml[1380,44897+6]..[1380,44897+13])
                        Ppat_var "collect" (lambda/matching.ml[1380,44897+6]..[1380,44897+13])
                      expression (lambda/matching.ml[1380,44897+14]..[1405,46138+45]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1380,44897+14]..[1380,44897+25])
                          Ppat_var "group_discr" (lambda/matching.ml[1380,44897+14]..[1380,44897+25])
                        expression (lambda/matching.ml[1380,44897+26]..[1405,46138+45]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[1380,44897+26]..[1380,44897+33])
                            Ppat_var "rev_yes" (lambda/matching.ml[1380,44897+26]..[1380,44897+33])
                          expression (lambda/matching.ml[1380,44897+34]..[1405,46138+45]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1380,44897+34]..[1380,44897+40])
                              Ppat_var "rev_no" (lambda/matching.ml[1380,44897+34]..[1380,44897+40])
                            expression (lambda/matching.ml[1380,44897+43]..[1405,46138+45])
                              Pexp_function
                              [
                                <case>
                                  pattern (lambda/matching.ml[1381,44949+6]..[1381,44949+30])
                                    Ppat_construct "::" (lambda/matching.ml[1381,44949+8]..[1381,44949+30]) ghost
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1381,44949+8]..[1381,44949+30]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1381,44949+8]..[1381,44949+28])
                                            Ppat_alias "cl" (lambda/matching.ml[1381,44949+25]..[1381,44949+27])
                                            pattern (lambda/matching.ml[1381,44949+9]..[1381,44949+21])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1381,44949+10]..[1381,44949+17])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[1381,44949+11]..[1381,44949+12])
                                                      Ppat_var "p" (lambda/matching.ml[1381,44949+11]..[1381,44949+12])
                                                    pattern (lambda/matching.ml[1381,44949+14]..[1381,44949+16])
                                                      Ppat_var "ps" (lambda/matching.ml[1381,44949+14]..[1381,44949+16])
                                                  ]
                                                pattern (lambda/matching.ml[1381,44949+19]..[1381,44949+20])
                                                  Ppat_any
                                              ]
                                          pattern (lambda/matching.ml[1381,44949+29]..[1381,44949+30]) ghost
                                            Ppat_construct "[]" (lambda/matching.ml[1381,44949+29]..[1381,44949+30]) ghost
                                            None
                                        ]
                                  <when>
                                    expression (lambda/matching.ml[1382,44980+11]..[1382,44980+77])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1382,44980+25]..[1382,44980+27])
                                        Pexp_ident "&&" (lambda/matching.ml[1382,44980+25]..[1382,44980+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1382,44980+11]..[1382,44980+24])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1382,44980+19]..[1382,44980+21])
                                              Pexp_ident "<>" (lambda/matching.ml[1382,44980+19]..[1382,44980+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1382,44980+11]..[1382,44980+18])
                                                  Pexp_ident "rev_yes" (lambda/matching.ml[1382,44980+11]..[1382,44980+18])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1382,44980+22]..[1382,44980+24])
                                                  Pexp_construct "[]" (lambda/matching.ml[1382,44980+22]..[1382,44980+24])
                                                  None
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1382,44980+28]..[1382,44980+77])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1382,44980+48]..[1382,44980+50])
                                              Pexp_ident "&&" (lambda/matching.ml[1382,44980+48]..[1382,44980+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1382,44980+28]..[1382,44980+47])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1382,44980+28]..[1382,44980+45])
                                                    Pexp_ident "simple_omega_like" (lambda/matching.ml[1382,44980+28]..[1382,44980+45])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1382,44980+46]..[1382,44980+47])
                                                        Pexp_ident "p" (lambda/matching.ml[1382,44980+46]..[1382,44980+47])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1382,44980+51]..[1382,44980+77])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1382,44980+51]..[1382,44980+63])
                                                    Pexp_ident "List.for_all" (lambda/matching.ml[1382,44980+51]..[1382,44980+63])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1382,44980+64]..[1382,44980+74])
                                                        Pexp_ident "omega_like" (lambda/matching.ml[1382,44980+64]..[1382,44980+74])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1382,44980+75]..[1382,44980+77])
                                                        Pexp_ident "ps" (lambda/matching.ml[1382,44980+75]..[1382,44980+77])
                                                  ]
                                            ]
                                      ]
                                  expression (lambda/matching.ml[1393,45602+8]..[1393,45602+53])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1393,45602+8]..[1393,45602+15])
                                      Pexp_ident "collect" (lambda/matching.ml[1393,45602+8]..[1393,45602+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1393,45602+16]..[1393,45602+27])
                                          Pexp_ident "group_discr" (lambda/matching.ml[1393,45602+16]..[1393,45602+27])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1393,45602+28]..[1393,45602+35])
                                          Pexp_ident "rev_yes" (lambda/matching.ml[1393,45602+28]..[1393,45602+35])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1393,45602+36]..[1393,45602+50])
                                          Pexp_construct "::" (lambda/matching.ml[1393,45602+40]..[1393,45602+42])
                                          Some
                                            expression (lambda/matching.ml[1393,45602+37]..[1393,45602+49]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[1393,45602+37]..[1393,45602+39])
                                                  Pexp_ident "cl" (lambda/matching.ml[1393,45602+37]..[1393,45602+39])
                                                expression (lambda/matching.ml[1393,45602+43]..[1393,45602+49])
                                                  Pexp_ident "rev_no" (lambda/matching.ml[1393,45602+43]..[1393,45602+49])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1393,45602+51]..[1393,45602+53])
                                          Pexp_construct "[]" (lambda/matching.ml[1393,45602+51]..[1393,45602+53])
                                          None
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[1394,45656+6]..[1394,45656+32])
                                    Ppat_construct "::" (lambda/matching.ml[1394,45656+26]..[1394,45656+28])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1394,45656+6]..[1394,45656+32]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1394,45656+6]..[1394,45656+25])
                                            Ppat_alias "cl" (lambda/matching.ml[1394,45656+22]..[1394,45656+24])
                                            pattern (lambda/matching.ml[1394,45656+7]..[1394,45656+18])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1394,45656+8]..[1394,45656+14])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[1394,45656+9]..[1394,45656+10])
                                                      Ppat_var "p" (lambda/matching.ml[1394,45656+9]..[1394,45656+10])
                                                    pattern (lambda/matching.ml[1394,45656+12]..[1394,45656+13])
                                                      Ppat_any
                                                  ]
                                                pattern (lambda/matching.ml[1394,45656+16]..[1394,45656+17])
                                                  Ppat_any
                                              ]
                                          pattern (lambda/matching.ml[1394,45656+29]..[1394,45656+32])
                                            Ppat_var "rem" (lambda/matching.ml[1394,45656+29]..[1394,45656+32])
                                        ]
                                  expression (lambda/matching.ml[1395,45692+8]..[1402,46006+56])
                                    Pexp_ifthenelse
                                    expression (lambda/matching.ml[1395,45692+11]..[1395,45692+59])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1395,45692+35]..[1395,45692+37])
                                        Pexp_ident "&&" (lambda/matching.ml[1395,45692+35]..[1395,45692+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1395,45692+11]..[1395,45692+34])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1395,45692+11]..[1395,45692+20])
                                              Pexp_ident "can_group" (lambda/matching.ml[1395,45692+11]..[1395,45692+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1395,45692+21]..[1395,45692+32])
                                                  Pexp_ident "group_discr" (lambda/matching.ml[1395,45692+21]..[1395,45692+32])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1395,45692+33]..[1395,45692+34])
                                                  Pexp_ident "p" (lambda/matching.ml[1395,45692+33]..[1395,45692+34])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1395,45692+38]..[1395,45692+59])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1395,45692+38]..[1395,45692+49])
                                              Pexp_ident "safe_before" (lambda/matching.ml[1395,45692+38]..[1395,45692+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1395,45692+50]..[1395,45692+52])
                                                  Pexp_ident "cl" (lambda/matching.ml[1395,45692+50]..[1395,45692+52])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1395,45692+53]..[1395,45692+59])
                                                  Pexp_ident "rev_no" (lambda/matching.ml[1395,45692+53]..[1395,45692+59])
                                            ]
                                      ]
                                    expression (lambda/matching.ml[1396,45757+10]..[1396,45757+56])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1396,45757+10]..[1396,45757+17])
                                        Pexp_ident "collect" (lambda/matching.ml[1396,45757+10]..[1396,45757+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1396,45757+18]..[1396,45757+29])
                                            Pexp_ident "group_discr" (lambda/matching.ml[1396,45757+18]..[1396,45757+29])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1396,45757+30]..[1396,45757+45])
                                            Pexp_construct "::" (lambda/matching.ml[1396,45757+34]..[1396,45757+36])
                                            Some
                                              expression (lambda/matching.ml[1396,45757+31]..[1396,45757+44]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[1396,45757+31]..[1396,45757+33])
                                                    Pexp_ident "cl" (lambda/matching.ml[1396,45757+31]..[1396,45757+33])
                                                  expression (lambda/matching.ml[1396,45757+37]..[1396,45757+44])
                                                    Pexp_ident "rev_yes" (lambda/matching.ml[1396,45757+37]..[1396,45757+44])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1396,45757+46]..[1396,45757+52])
                                            Pexp_ident "rev_no" (lambda/matching.ml[1396,45757+46]..[1396,45757+52])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1396,45757+53]..[1396,45757+56])
                                            Pexp_ident "rem" (lambda/matching.ml[1396,45757+53]..[1396,45757+56])
                                      ]
                                    Some
                                      expression (lambda/matching.ml[1397,45814+13]..[1402,46006+56])
                                        Pexp_ifthenelse
                                        expression (lambda/matching.ml[1397,45814+16]..[1397,45814+40])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1397,45814+16]..[1397,45814+28])
                                            Pexp_ident "should_split" (lambda/matching.ml[1397,45814+16]..[1397,45814+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1397,45814+29]..[1397,45814+40])
                                                Pexp_ident "group_discr" (lambda/matching.ml[1397,45814+29]..[1397,45814+40])
                                          ]
                                        expression (lambda/matching.ml[1397,45814+46]..[1401,45991+9])
                                          Pexp_sequence
                                          expression (lambda/matching.ml[1398,45862+10]..[1398,45862+30])
                                            Pexp_assert
                                            expression (lambda/matching.ml[1398,45862+17]..[1398,45862+30])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1398,45862+25]..[1398,45862+26])
                                                Pexp_ident "=" (lambda/matching.ml[1398,45862+25]..[1398,45862+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1398,45862+18]..[1398,45862+24])
                                                    Pexp_ident "rev_no" (lambda/matching.ml[1398,45862+18]..[1398,45862+24])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1398,45862+27]..[1398,45862+29])
                                                    Pexp_construct "[]" (lambda/matching.ml[1398,45862+27]..[1398,45862+29])
                                                    None
                                              ]
                                          expression (lambda/matching.ml[1399,45894+10]..[1400,45934+56])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[1399,45894+14]..[1399,45894+17])
                                                  Ppat_var "yes" (lambda/matching.ml[1399,45894+14]..[1399,45894+17])
                                                expression (lambda/matching.ml[1399,45894+20]..[1399,45894+36])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1399,45894+20]..[1399,45894+28])
                                                    Pexp_ident "List.rev" (lambda/matching.ml[1399,45894+20]..[1399,45894+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1399,45894+29]..[1399,45894+36])
                                                        Pexp_ident "rev_yes" (lambda/matching.ml[1399,45894+29]..[1399,45894+36])
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[1400,45934+10]..[1400,45934+56])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1400,45934+10]..[1400,45934+22])
                                                Pexp_ident "insert_split" (lambda/matching.ml[1400,45934+10]..[1400,45934+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1400,45934+23]..[1400,45934+34])
                                                    Pexp_ident "group_discr" (lambda/matching.ml[1400,45934+23]..[1400,45934+34])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1400,45934+35]..[1400,45934+38])
                                                    Pexp_ident "yes" (lambda/matching.ml[1400,45934+35]..[1400,45934+38])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1400,45934+39]..[1400,45934+50])
                                                    Pexp_construct "::" (lambda/matching.ml[1400,45934+43]..[1400,45934+45])
                                                    Some
                                                      expression (lambda/matching.ml[1400,45934+40]..[1400,45934+49]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1400,45934+40]..[1400,45934+42])
                                                            Pexp_ident "cl" (lambda/matching.ml[1400,45934+40]..[1400,45934+42])
                                                          expression (lambda/matching.ml[1400,45934+46]..[1400,45934+49])
                                                            Pexp_ident "rem" (lambda/matching.ml[1400,45934+46]..[1400,45934+49])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1400,45934+51]..[1400,45934+54])
                                                    Pexp_ident "def" (lambda/matching.ml[1400,45934+51]..[1400,45934+54])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1400,45934+55]..[1400,45934+56])
                                                    Pexp_ident "k" (lambda/matching.ml[1400,45934+55]..[1400,45934+56])
                                              ]
                                        Some
                                          expression (lambda/matching.ml[1402,46006+10]..[1402,46006+56])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1402,46006+10]..[1402,46006+17])
                                              Pexp_ident "collect" (lambda/matching.ml[1402,46006+10]..[1402,46006+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1402,46006+18]..[1402,46006+29])
                                                  Pexp_ident "group_discr" (lambda/matching.ml[1402,46006+18]..[1402,46006+29])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1402,46006+30]..[1402,46006+37])
                                                  Pexp_ident "rev_yes" (lambda/matching.ml[1402,46006+30]..[1402,46006+37])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1402,46006+38]..[1402,46006+52])
                                                  Pexp_construct "::" (lambda/matching.ml[1402,46006+42]..[1402,46006+44])
                                                  Some
                                                    expression (lambda/matching.ml[1402,46006+39]..[1402,46006+51]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1402,46006+39]..[1402,46006+41])
                                                          Pexp_ident "cl" (lambda/matching.ml[1402,46006+39]..[1402,46006+41])
                                                        expression (lambda/matching.ml[1402,46006+45]..[1402,46006+51])
                                                          Pexp_ident "rev_no" (lambda/matching.ml[1402,46006+45]..[1402,46006+51])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1402,46006+53]..[1402,46006+56])
                                                  Pexp_ident "rem" (lambda/matching.ml[1402,46006+53]..[1402,46006+56])
                                            ]
                                <case>
                                  pattern (lambda/matching.ml[1403,46063+6]..[1403,46063+8])
                                    Ppat_construct "[]" (lambda/matching.ml[1403,46063+6]..[1403,46063+8])
                                    None
                                  expression (lambda/matching.ml[1404,46075+8]..[1405,46138+45])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[1404,46075+12]..[1404,46075+15])
                                          Ppat_var "yes" (lambda/matching.ml[1404,46075+12]..[1404,46075+15])
                                        expression (lambda/matching.ml[1404,46075+18]..[1404,46075+34])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1404,46075+18]..[1404,46075+26])
                                            Pexp_ident "List.rev" (lambda/matching.ml[1404,46075+18]..[1404,46075+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1404,46075+27]..[1404,46075+34])
                                                Pexp_ident "rev_yes" (lambda/matching.ml[1404,46075+27]..[1404,46075+34])
                                          ]
                                      <def>
                                        pattern (lambda/matching.ml[1404,46075+39]..[1404,46075+41])
                                          Ppat_var "no" (lambda/matching.ml[1404,46075+39]..[1404,46075+41])
                                        expression (lambda/matching.ml[1404,46075+44]..[1404,46075+59])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1404,46075+44]..[1404,46075+52])
                                            Pexp_ident "List.rev" (lambda/matching.ml[1404,46075+44]..[1404,46075+52])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1404,46075+53]..[1404,46075+59])
                                                Pexp_ident "rev_no" (lambda/matching.ml[1404,46075+53]..[1404,46075+59])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[1405,46138+8]..[1405,46138+45])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1405,46138+8]..[1405,46138+20])
                                        Pexp_ident "insert_split" (lambda/matching.ml[1405,46138+8]..[1405,46138+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1405,46138+21]..[1405,46138+32])
                                            Pexp_ident "group_discr" (lambda/matching.ml[1405,46138+21]..[1405,46138+32])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1405,46138+33]..[1405,46138+36])
                                            Pexp_ident "yes" (lambda/matching.ml[1405,46138+33]..[1405,46138+36])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1405,46138+37]..[1405,46138+39])
                                            Pexp_ident "no" (lambda/matching.ml[1405,46138+37]..[1405,46138+39])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1405,46138+40]..[1405,46138+43])
                                            Pexp_ident "def" (lambda/matching.ml[1405,46138+40]..[1405,46138+43])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1405,46138+44]..[1405,46138+45])
                                            Pexp_ident "k" (lambda/matching.ml[1405,46138+44]..[1405,46138+45])
                                      ]
                              ]
                    <def>
                      pattern (lambda/matching.ml[1406,46184+6]..[1406,46184+18])
                        Ppat_var "insert_split" (lambda/matching.ml[1406,46184+6]..[1406,46184+18])
                      expression (lambda/matching.ml[1406,46184+19]..[1419,46653+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1406,46184+19]..[1406,46184+30])
                          Ppat_var "group_discr" (lambda/matching.ml[1406,46184+19]..[1406,46184+30])
                        expression (lambda/matching.ml[1406,46184+31]..[1419,46653+33]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[1406,46184+31]..[1406,46184+34])
                            Ppat_var "yes" (lambda/matching.ml[1406,46184+31]..[1406,46184+34])
                          expression (lambda/matching.ml[1406,46184+35]..[1419,46653+33]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1406,46184+35]..[1406,46184+37])
                              Ppat_var "no" (lambda/matching.ml[1406,46184+35]..[1406,46184+37])
                            expression (lambda/matching.ml[1406,46184+38]..[1419,46653+33]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[1406,46184+38]..[1406,46184+41])
                                Ppat_var "def" (lambda/matching.ml[1406,46184+38]..[1406,46184+41])
                              expression (lambda/matching.ml[1406,46184+42]..[1419,46653+33]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[1406,46184+42]..[1406,46184+43])
                                  Ppat_var "k" (lambda/matching.ml[1406,46184+42]..[1406,46184+43])
                                expression (lambda/matching.ml[1407,46230+4]..[1419,46653+33])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[1407,46230+8]..[1407,46230+24])
                                        Ppat_var "precompile_group" (lambda/matching.ml[1407,46230+8]..[1407,46230+24])
                                      expression (lambda/matching.ml[1408,46257+6]..[1410,46339+30])
                                        Pexp_match
                                        expression (lambda/matching.ml[1408,46257+12]..[1408,46257+32])
                                          Pexp_field
                                          expression (lambda/matching.ml[1408,46257+12]..[1408,46257+23])
                                            Pexp_ident "group_discr" (lambda/matching.ml[1408,46257+12]..[1408,46257+23])
                                          "pat_desc" (lambda/matching.ml[1408,46257+24]..[1408,46257+32])
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[1409,46295+8]..[1409,46295+25])
                                              Ppat_construct "Patterns.Head.Any" (lambda/matching.ml[1409,46295+8]..[1409,46295+25])
                                              None
                                            expression (lambda/matching.ml[1409,46295+29]..[1409,46295+43])
                                              Pexp_ident "precompile_var" (lambda/matching.ml[1409,46295+29]..[1409,46295+43])
                                          <case>
                                            pattern (lambda/matching.ml[1410,46339+8]..[1410,46339+9])
                                              Ppat_any
                                            expression (lambda/matching.ml[1410,46339+13]..[1410,46339+30])
                                              Pexp_ident "do_not_precompile" (lambda/matching.ml[1410,46339+13]..[1410,46339+30])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[1412,46377+4]..[1419,46653+33])
                                    Pexp_match
                                    expression (lambda/matching.ml[1412,46377+10]..[1412,46377+12])
                                      Pexp_ident "no" (lambda/matching.ml[1412,46377+10]..[1412,46377+12])
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[1413,46395+6]..[1413,46395+8])
                                          Ppat_construct "[]" (lambda/matching.ml[1413,46395+6]..[1413,46395+8])
                                          None
                                        expression (lambda/matching.ml[1413,46395+12]..[1413,46395+43])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1413,46395+12]..[1413,46395+28])
                                            Pexp_ident "precompile_group" (lambda/matching.ml[1413,46395+12]..[1413,46395+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1413,46395+29]..[1413,46395+33])
                                                Pexp_ident "args" (lambda/matching.ml[1413,46395+29]..[1413,46395+33])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1413,46395+34]..[1413,46395+37])
                                                Pexp_ident "yes" (lambda/matching.ml[1413,46395+34]..[1413,46395+37])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1413,46395+38]..[1413,46395+41])
                                                Pexp_ident "def" (lambda/matching.ml[1413,46395+38]..[1413,46395+41])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1413,46395+42]..[1413,46395+43])
                                                Pexp_ident "k" (lambda/matching.ml[1413,46395+42]..[1413,46395+43])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[1414,46439+6]..[1414,46439+7])
                                          Ppat_any
                                        expression (lambda/matching.ml[1415,46450+8]..[1419,46653+33])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1415,46450+12]..[1415,46450+59])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[1415,46450+12]..[1415,46450+52])
                                                    Ppat_record Closed
                                                    [
                                                      "me" (lambda/matching.ml[1415,46450+14]..[1415,46450+16])
                                                        pattern (lambda/matching.ml[1415,46450+19]..[1415,46450+23])
                                                          Ppat_var "next" (lambda/matching.ml[1415,46450+19]..[1415,46450+23])
                                                      "matrix" (lambda/matching.ml[1415,46450+25]..[1415,46450+31]) ghost
                                                        pattern (lambda/matching.ml[1415,46450+25]..[1415,46450+31])
                                                          Ppat_var "matrix" (lambda/matching.ml[1415,46450+25]..[1415,46450+31])
                                                      "top_default" (lambda/matching.ml[1415,46450+33]..[1415,46450+44])
                                                        pattern (lambda/matching.ml[1415,46450+47]..[1415,46450+50])
                                                          Ppat_var "def" (lambda/matching.ml[1415,46450+47]..[1415,46450+50])
                                                    ]
                                                  pattern (lambda/matching.ml[1415,46450+54]..[1415,46450+59])
                                                    Ppat_var "nexts" (lambda/matching.ml[1415,46450+54]..[1415,46450+59])
                                                ]
                                              expression (lambda/matching.ml[1415,46450+62]..[1415,46450+70])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1415,46450+62]..[1415,46450+67])
                                                  Pexp_ident "split" (lambda/matching.ml[1415,46450+62]..[1415,46450+67])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1415,46450+68]..[1415,46450+70])
                                                      Pexp_ident "no" (lambda/matching.ml[1415,46450+68]..[1415,46450+70])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1416,46524+8]..[1419,46653+33])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[1416,46524+12]..[1416,46524+16])
                                                  Ppat_var "idef" (lambda/matching.ml[1416,46524+12]..[1416,46524+16])
                                                expression (lambda/matching.ml[1416,46524+19]..[1416,46524+38])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1416,46524+19]..[1416,46524+35])
                                                    Pexp_ident "next_raise_count" (lambda/matching.ml[1416,46524+19]..[1416,46524+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1416,46524+36]..[1416,46524+38])
                                                        Pexp_construct "()" (lambda/matching.ml[1416,46524+36]..[1416,46524+38])
                                                        None
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[1417,46566+8]..[1419,46653+33])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1417,46566+8]..[1417,46566+24])
                                                Pexp_ident "precompile_group" (lambda/matching.ml[1417,46566+8]..[1417,46566+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1417,46566+25]..[1417,46566+29])
                                                    Pexp_ident "args" (lambda/matching.ml[1417,46566+25]..[1417,46566+29])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1417,46566+30]..[1417,46566+33])
                                                    Pexp_ident "yes" (lambda/matching.ml[1417,46566+30]..[1417,46566+33])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1418,46600+10]..[1418,46600+52])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1418,46600+11]..[1418,46600+35])
                                                      Pexp_ident "Default_environment.cons" (lambda/matching.ml[1418,46600+11]..[1418,46600+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1418,46600+36]..[1418,46600+42])
                                                          Pexp_ident "matrix" (lambda/matching.ml[1418,46600+36]..[1418,46600+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1418,46600+43]..[1418,46600+47])
                                                          Pexp_ident "idef" (lambda/matching.ml[1418,46600+43]..[1418,46600+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1418,46600+48]..[1418,46600+51])
                                                          Pexp_ident "def" (lambda/matching.ml[1418,46600+48]..[1418,46600+51])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1419,46653+10]..[1419,46653+33])
                                                    Pexp_construct "::" (lambda/matching.ml[1419,46653+24]..[1419,46653+26])
                                                    Some
                                                      expression (lambda/matching.ml[1419,46653+11]..[1419,46653+32]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1419,46653+11]..[1419,46653+23])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1419,46653+12]..[1419,46653+16])
                                                                Pexp_ident "idef" (lambda/matching.ml[1419,46653+12]..[1419,46653+16])
                                                              expression (lambda/matching.ml[1419,46653+18]..[1419,46653+22])
                                                                Pexp_ident "next" (lambda/matching.ml[1419,46653+18]..[1419,46653+22])
                                                            ]
                                                          expression (lambda/matching.ml[1419,46653+27]..[1419,46653+32])
                                                            Pexp_ident "nexts" (lambda/matching.ml[1419,46653+27]..[1419,46653+32])
                                                        ]
                                              ]
                                    ]
                    <def>
                      pattern (lambda/matching.ml[1420,46687+6]..[1420,46687+18])
                        Ppat_var "should_split" (lambda/matching.ml[1420,46687+6]..[1420,46687+18])
                      expression (lambda/matching.ml[1420,46687+19]..[1425,46908+16]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1420,46687+19]..[1420,46687+30])
                          Ppat_var "group_discr" (lambda/matching.ml[1420,46687+19]..[1420,46687+30])
                        expression (lambda/matching.ml[1421,46720+4]..[1425,46908+16])
                          Pexp_match
                          expression (lambda/matching.ml[1421,46720+10]..[1421,46720+30])
                            Pexp_field
                            expression (lambda/matching.ml[1421,46720+10]..[1421,46720+21])
                              Pexp_ident "group_discr" (lambda/matching.ml[1421,46720+10]..[1421,46720+21])
                            "pat_desc" (lambda/matching.ml[1421,46720+22]..[1421,46720+30])
                          [
                            <case>
                              pattern (lambda/matching.ml[1422,46756+6]..[1422,46756+61])
                                Ppat_construct "Patterns.Head.Construct" (lambda/matching.ml[1422,46756+6]..[1422,46756+29])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1422,46756+30]..[1422,46756+61])
                                    Ppat_record Closed
                                    [
                                      "cstr_tag" (lambda/matching.ml[1422,46756+32]..[1422,46756+40])
                                        pattern (lambda/matching.ml[1422,46756+43]..[1422,46756+59])
                                          Ppat_construct "Cstr_extension" (lambda/matching.ml[1422,46756+43]..[1422,46756+57])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[1422,46756+58]..[1422,46756+59])
                                              Ppat_any
                                    ]
                              expression (lambda/matching.ml[1424,46895+8]..[1424,46895+12])
                                Pexp_construct "true" (lambda/matching.ml[1424,46895+8]..[1424,46895+12])
                                None
                            <case>
                              pattern (lambda/matching.ml[1425,46908+6]..[1425,46908+7])
                                Ppat_any
                              expression (lambda/matching.ml[1425,46908+11]..[1425,46908+16])
                                Pexp_construct "false" (lambda/matching.ml[1425,46908+11]..[1425,46908+16])
                                None
                          ]
                  ]
                  expression (lambda/matching.ml[1427,46930+2]..[1427,46930+11])
                    Pexp_apply
                    expression (lambda/matching.ml[1427,46930+2]..[1427,46930+7])
                      Pexp_ident "split" (lambda/matching.ml[1427,46930+2]..[1427,46930+7])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1427,46930+8]..[1427,46930+11])
                          Pexp_ident "cls" (lambda/matching.ml[1427,46930+8]..[1427,46930+11])
                    ]
      <def>
        pattern (lambda/matching.ml[1429,46943+4]..[1429,46943+18])
          Ppat_var "precompile_var" (lambda/matching.ml[1429,46943+4]..[1429,46943+18])
        expression (lambda/matching.ml[1429,46943+19]..[1500,49693+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1429,46943+19]..[1429,46943+23])
            Ppat_var "args" (lambda/matching.ml[1429,46943+19]..[1429,46943+23])
          expression (lambda/matching.ml[1429,46943+24]..[1500,49693+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1429,46943+24]..[1429,46943+27])
              Ppat_var "cls" (lambda/matching.ml[1429,46943+24]..[1429,46943+27])
            expression (lambda/matching.ml[1429,46943+28]..[1500,49693+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1429,46943+28]..[1429,46943+31])
                Ppat_var "def" (lambda/matching.ml[1429,46943+28]..[1429,46943+31])
              expression (lambda/matching.ml[1429,46943+32]..[1500,49693+41]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1429,46943+32]..[1429,46943+33])
                  Ppat_var "k" (lambda/matching.ml[1429,46943+32]..[1429,46943+33])
                expression (lambda/matching.ml[1434,47164+2]..[1500,49693+41])
                  Pexp_match
                  expression (lambda/matching.ml[1434,47164+8]..[1434,47164+12])
                    Pexp_ident "args" (lambda/matching.ml[1434,47164+8]..[1434,47164+12])
                  [
                    <case>
                      pattern (lambda/matching.ml[1435,47182+4]..[1435,47182+6])
                        Ppat_construct "[]" (lambda/matching.ml[1435,47182+4]..[1435,47182+6])
                        None
                      expression (lambda/matching.ml[1435,47182+10]..[1435,47182+22])
                        Pexp_assert
                        expression (lambda/matching.ml[1435,47182+17]..[1435,47182+22])
                          Pexp_construct "false" (lambda/matching.ml[1435,47182+17]..[1435,47182+22])
                          None
                    <case>
                      pattern (lambda/matching.ml[1436,47205+4]..[1436,47205+38])
                        Ppat_construct "::" (lambda/matching.ml[1436,47205+6]..[1436,47205+8])
                        Some
                          []
                          pattern (lambda/matching.ml[1436,47205+4]..[1436,47205+38]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1436,47205+4]..[1436,47205+5])
                                Ppat_any
                              pattern (lambda/matching.ml[1436,47205+9]..[1436,47205+38])
                                Ppat_construct "::" (lambda/matching.ml[1436,47205+30]..[1436,47205+32])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1436,47205+9]..[1436,47205+38]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1436,47205+9]..[1436,47205+29])
                                        Ppat_alias "arg" (lambda/matching.ml[1436,47205+25]..[1436,47205+28])
                                        pattern (lambda/matching.ml[1436,47205+10]..[1436,47205+21])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[1436,47205+11]..[1436,47205+17])
                                              Ppat_construct "Lvar" (lambda/matching.ml[1436,47205+11]..[1436,47205+15])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[1436,47205+16]..[1436,47205+17])
                                                  Ppat_var "v" (lambda/matching.ml[1436,47205+16]..[1436,47205+17])
                                            pattern (lambda/matching.ml[1436,47205+19]..[1436,47205+20])
                                              Ppat_any
                                          ]
                                      pattern (lambda/matching.ml[1436,47205+33]..[1436,47205+38])
                                        Ppat_var "rargs" (lambda/matching.ml[1436,47205+33]..[1436,47205+38])
                                    ]
                            ]
                      expression (lambda/matching.ml[1436,47205+42]..[1499,49687+5])
                        Pexp_match
                        expression (lambda/matching.ml[1439,47388+12]..[1439,47388+15])
                          Pexp_ident "cls" (lambda/matching.ml[1439,47388+12]..[1439,47388+15])
                        [
                          <case>
                            pattern (lambda/matching.ml[1440,47409+8]..[1440,47409+13])
                              Ppat_construct "::" (lambda/matching.ml[1440,47409+10]..[1440,47409+13]) ghost
                              Some
                                []
                                pattern (lambda/matching.ml[1440,47409+10]..[1440,47409+13]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1440,47409+10]..[1440,47409+11])
                                      Ppat_any
                                    pattern (lambda/matching.ml[1440,47409+12]..[1440,47409+13]) ghost
                                      Ppat_construct "[]" (lambda/matching.ml[1440,47409+12]..[1440,47409+13]) ghost
                                      None
                                  ]
                            expression (lambda/matching.ml[1442,47461+10]..[1442,47461+42])
                              Pexp_apply
                              expression (lambda/matching.ml[1442,47461+10]..[1442,47461+27])
                                Pexp_ident "do_not_precompile" (lambda/matching.ml[1442,47461+10]..[1442,47461+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1442,47461+28]..[1442,47461+32])
                                    Pexp_ident "args" (lambda/matching.ml[1442,47461+28]..[1442,47461+32])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1442,47461+33]..[1442,47461+36])
                                    Pexp_ident "cls" (lambda/matching.ml[1442,47461+33]..[1442,47461+36])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1442,47461+37]..[1442,47461+40])
                                    Pexp_ident "def" (lambda/matching.ml[1442,47461+37]..[1442,47461+40])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1442,47461+41]..[1442,47461+42])
                                    Pexp_ident "k" (lambda/matching.ml[1442,47461+41]..[1442,47461+42])
                              ]
                          <case>
                            pattern (lambda/matching.ml[1443,47504+8]..[1443,47504+9])
                              Ppat_any
                            expression (lambda/matching.ml[1443,47504+13]..[1498,49677+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[1445,47546+14]..[1445,47546+22])
                                    Ppat_var "var_args" (lambda/matching.ml[1445,47546+14]..[1445,47546+22])
                                  expression (lambda/matching.ml[1445,47546+25]..[1445,47546+37])
                                    Pexp_construct "::" (lambda/matching.ml[1445,47546+29]..[1445,47546+31])
                                    Some
                                      expression (lambda/matching.ml[1445,47546+25]..[1445,47546+37]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1445,47546+25]..[1445,47546+28])
                                            Pexp_ident "arg" (lambda/matching.ml[1445,47546+25]..[1445,47546+28])
                                          expression (lambda/matching.ml[1445,47546+32]..[1445,47546+37])
                                            Pexp_ident "rargs" (lambda/matching.ml[1445,47546+32]..[1445,47546+37])
                                        ]
                              ]
                              expression (lambda/matching.ml[1446,47587+10]..[1497,49646+30])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[1446,47587+14]..[1446,47587+21])
                                      Ppat_var "var_cls" (lambda/matching.ml[1446,47587+14]..[1446,47587+21])
                                    expression (lambda/matching.ml[1447,47611+12]..[1455,47947+17])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1447,47611+12]..[1447,47611+20])
                                        Pexp_ident "List.map" (lambda/matching.ml[1447,47611+12]..[1447,47611+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1448,47632+14]..[1454,47884+62])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[1448,47632+19]..[1448,47632+33])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1448,47632+20]..[1448,47632+27])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[1448,47632+21]..[1448,47632+22])
                                                      Ppat_var "p" (lambda/matching.ml[1448,47632+21]..[1448,47632+22])
                                                    pattern (lambda/matching.ml[1448,47632+24]..[1448,47632+26])
                                                      Ppat_var "ps" (lambda/matching.ml[1448,47632+24]..[1448,47632+26])
                                                  ]
                                                pattern (lambda/matching.ml[1448,47632+29]..[1448,47632+32])
                                                  Ppat_var "act" (lambda/matching.ml[1448,47632+29]..[1448,47632+32])
                                              ]
                                            expression (lambda/matching.ml[1449,47669+16]..[1454,47884+61])
                                              Pexp_sequence
                                              expression (lambda/matching.ml[1449,47669+16]..[1449,47669+44])
                                                Pexp_assert
                                                expression (lambda/matching.ml[1449,47669+23]..[1449,47669+44])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1449,47669+24]..[1449,47669+41])
                                                    Pexp_ident "simple_omega_like" (lambda/matching.ml[1449,47669+24]..[1449,47669+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1449,47669+42]..[1449,47669+43])
                                                        Pexp_ident "p" (lambda/matching.ml[1449,47669+42]..[1449,47669+43])
                                                  ]
                                              expression (lambda/matching.ml[1454,47884+16]..[1454,47884+61])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1454,47884+16]..[1454,47884+36])
                                                  Pexp_ident "half_simplify_clause" (lambda/matching.ml[1454,47884+16]..[1454,47884+36])
                                                [
                                                  <arg>
                                                  Labelled "arg"
                                                    expression (lambda/matching.ml[1454,47884+42]..[1454,47884+51])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1454,47884+43]..[1454,47884+46])
                                                        Pexp_ident "fst" (lambda/matching.ml[1454,47884+43]..[1454,47884+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1454,47884+47]..[1454,47884+50])
                                                            Pexp_ident "arg" (lambda/matching.ml[1454,47884+47]..[1454,47884+50])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1454,47884+52]..[1454,47884+61])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1454,47884+53]..[1454,47884+55])
                                                          Pexp_ident "ps" (lambda/matching.ml[1454,47884+53]..[1454,47884+55])
                                                        expression (lambda/matching.ml[1454,47884+57]..[1454,47884+60])
                                                          Pexp_ident "act" (lambda/matching.ml[1454,47884+57]..[1454,47884+60])
                                                      ]
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1455,47947+14]..[1455,47947+17])
                                            Pexp_ident "cls" (lambda/matching.ml[1455,47947+14]..[1455,47947+17])
                                      ]
                                  <def>
                                    pattern (lambda/matching.ml[1456,47965+14]..[1456,47965+21])
                                      Ppat_var "var_def" (lambda/matching.ml[1456,47965+14]..[1456,47965+21])
                                    expression (lambda/matching.ml[1456,47965+24]..[1456,47965+58])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1456,47965+24]..[1456,47965+54])
                                        Pexp_ident "Default_environment.pop_column" (lambda/matching.ml[1456,47965+24]..[1456,47965+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1456,47965+55]..[1456,47965+58])
                                            Pexp_ident "def" (lambda/matching.ml[1456,47965+55]..[1456,47965+58])
                                      ]
                                ]
                                expression (lambda/matching.ml[1457,48027+10]..[1497,49646+30])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[1457,48027+14]..[1457,48027+43])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1457,48027+14]..[1457,48027+36])
                                            Ppat_record Closed
                                            [
                                              "me" (lambda/matching.ml[1457,48027+16]..[1457,48027+18])
                                                pattern (lambda/matching.ml[1457,48027+21]..[1457,48027+26])
                                                  Ppat_var "first" (lambda/matching.ml[1457,48027+21]..[1457,48027+26])
                                              "matrix" (lambda/matching.ml[1457,48027+28]..[1457,48027+34]) ghost
                                                pattern (lambda/matching.ml[1457,48027+28]..[1457,48027+34])
                                                  Ppat_var "matrix" (lambda/matching.ml[1457,48027+28]..[1457,48027+34])
                                            ]
                                          pattern (lambda/matching.ml[1457,48027+38]..[1457,48027+43])
                                            Ppat_var "nexts" (lambda/matching.ml[1457,48027+38]..[1457,48027+43])
                                        ]
                                      expression (lambda/matching.ml[1458,48073+12]..[1458,48073+59])
                                        Pexp_apply
                                        expression (lambda/matching.ml[1458,48073+12]..[1458,48073+20])
                                          Pexp_ident "split_or" (lambda/matching.ml[1458,48073+12]..[1458,48073+20])
                                        [
                                          <arg>
                                          Labelled "arg"
                                            expression (lambda/matching.ml[1458,48073+26]..[1458,48073+34])
                                              Pexp_construct "Lvar" (lambda/matching.ml[1458,48073+27]..[1458,48073+31])
                                              Some
                                                expression (lambda/matching.ml[1458,48073+32]..[1458,48073+33])
                                                  Pexp_ident "v" (lambda/matching.ml[1458,48073+32]..[1458,48073+33])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1458,48073+35]..[1458,48073+42])
                                              Pexp_ident "var_cls" (lambda/matching.ml[1458,48073+35]..[1458,48073+42])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1458,48073+43]..[1458,48073+51])
                                              Pexp_ident "var_args" (lambda/matching.ml[1458,48073+43]..[1458,48073+51])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1458,48073+52]..[1458,48073+59])
                                              Pexp_ident "var_def" (lambda/matching.ml[1458,48073+52]..[1458,48073+59])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[1461,48186+10]..[1497,49646+30])
                                    Pexp_match
                                    expression (lambda/matching.ml[1461,48186+16]..[1461,48186+21])
                                      Pexp_ident "nexts" (lambda/matching.ml[1461,48186+16]..[1461,48186+21])
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[1462,48213+12]..[1462,48213+14])
                                          Ppat_construct "[]" (lambda/matching.ml[1462,48213+12]..[1462,48213+14])
                                          None
                                        expression (lambda/matching.ml[1464,48263+14]..[1464,48263+46])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1464,48263+14]..[1464,48263+31])
                                            Pexp_ident "do_not_precompile" (lambda/matching.ml[1464,48263+14]..[1464,48263+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1464,48263+32]..[1464,48263+36])
                                                Pexp_ident "args" (lambda/matching.ml[1464,48263+32]..[1464,48263+36])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1464,48263+37]..[1464,48263+40])
                                                Pexp_ident "cls" (lambda/matching.ml[1464,48263+37]..[1464,48263+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1464,48263+41]..[1464,48263+44])
                                                Pexp_ident "def" (lambda/matching.ml[1464,48263+41]..[1464,48263+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1464,48263+45]..[1464,48263+46])
                                                Pexp_ident "k" (lambda/matching.ml[1464,48263+45]..[1464,48263+46])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[1465,48310+12]..[1465,48310+13])
                                          Ppat_any
                                        expression (lambda/matching.ml[1466,48327+14]..[1497,49646+30])
                                          Pexp_let Rec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1466,48327+22]..[1466,48327+36])
                                                Ppat_var "rebuild_matrix" (lambda/matching.ml[1466,48327+22]..[1466,48327+36])
                                              expression (lambda/matching.ml[1466,48327+37]..[1470,48493+71]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lambda/matching.ml[1466,48327+37]..[1466,48327+40])
                                                  Ppat_var "pmh" (lambda/matching.ml[1466,48327+37]..[1466,48327+40])
                                                expression (lambda/matching.ml[1467,48370+16]..[1470,48493+71])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[1467,48370+22]..[1467,48370+25])
                                                    Pexp_ident "pmh" (lambda/matching.ml[1467,48370+22]..[1467,48370+25])
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[1468,48401+18]..[1468,48401+23])
                                                        Ppat_construct "Pm" (lambda/matching.ml[1468,48401+18]..[1468,48401+20])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[1468,48401+21]..[1468,48401+23])
                                                            Ppat_var "pm" (lambda/matching.ml[1468,48401+21]..[1468,48401+23])
                                                      expression (lambda/matching.ml[1468,48401+27]..[1468,48401+45])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1468,48401+27]..[1468,48401+36])
                                                          Pexp_ident "as_matrix" (lambda/matching.ml[1468,48401+27]..[1468,48401+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1468,48401+37]..[1468,48401+45])
                                                              Pexp_field
                                                              expression (lambda/matching.ml[1468,48401+37]..[1468,48401+39])
                                                                Pexp_ident "pm" (lambda/matching.ml[1468,48401+37]..[1468,48401+39])
                                                              "cases" (lambda/matching.ml[1468,48401+40]..[1468,48401+45])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[1469,48447+18]..[1469,48447+40])
                                                        Ppat_construct "PmOr" (lambda/matching.ml[1469,48447+18]..[1469,48447+22])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[1469,48447+23]..[1469,48447+40])
                                                            Ppat_record Closed
                                                            [
                                                              "or_matrix" (lambda/matching.ml[1469,48447+25]..[1469,48447+34])
                                                                pattern (lambda/matching.ml[1469,48447+37]..[1469,48447+38])
                                                                  Ppat_var "m" (lambda/matching.ml[1469,48447+37]..[1469,48447+38])
                                                            ]
                                                      expression (lambda/matching.ml[1469,48447+44]..[1469,48447+45])
                                                        Pexp_ident "m" (lambda/matching.ml[1469,48447+44]..[1469,48447+45])
                                                    <case>
                                                      pattern (lambda/matching.ml[1470,48493+18]..[1470,48493+25])
                                                        Ppat_construct "PmVar" (lambda/matching.ml[1470,48493+18]..[1470,48493+23])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[1470,48493+24]..[1470,48493+25])
                                                            Ppat_var "x" (lambda/matching.ml[1470,48493+24]..[1470,48493+25])
                                                      expression (lambda/matching.ml[1470,48493+29]..[1470,48493+71])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1470,48493+29]..[1470,48493+45])
                                                          Pexp_ident "add_omega_column" (lambda/matching.ml[1470,48493+29]..[1470,48493+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1470,48493+46]..[1470,48493+71])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1470,48493+47]..[1470,48493+61])
                                                                Pexp_ident "rebuild_matrix" (lambda/matching.ml[1470,48493+47]..[1470,48493+61])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1470,48493+62]..[1470,48493+70])
                                                                    Pexp_field
                                                                    expression (lambda/matching.ml[1470,48493+62]..[1470,48493+63])
                                                                      Pexp_ident "x" (lambda/matching.ml[1470,48493+62]..[1470,48493+63])
                                                                    "inside" (lambda/matching.ml[1470,48493+64]..[1470,48493+70])
                                                              ]
                                                        ]
                                                  ]
                                          ]
                                          expression (lambda/matching.ml[1472,48582+14]..[1497,49646+30])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[1472,48582+18]..[1472,48582+33])
                                                  Ppat_var "rebuild_default" (lambda/matching.ml[1472,48582+18]..[1472,48582+33])
                                                expression (lambda/matching.ml[1472,48582+34]..[1486,49210+27]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/matching.ml[1472,48582+34]..[1472,48582+39])
                                                    Ppat_var "nexts" (lambda/matching.ml[1472,48582+34]..[1472,48582+39])
                                                  expression (lambda/matching.ml[1472,48582+40]..[1486,49210+27]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/matching.ml[1472,48582+40]..[1472,48582+43])
                                                      Ppat_var "def" (lambda/matching.ml[1472,48582+40]..[1472,48582+43])
                                                    expression (lambda/matching.ml[1481,49011+16]..[1486,49210+27])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1481,49011+16]..[1481,49011+31])
                                                        Pexp_ident "List.fold_right" (lambda/matching.ml[1481,49011+16]..[1481,49011+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1482,49043+18]..[1485,49185+24])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/matching.ml[1482,49043+23]..[1482,49043+31])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[1482,49043+24]..[1482,49043+25])
                                                                  Ppat_var "e" (lambda/matching.ml[1482,49043+24]..[1482,49043+25])
                                                                pattern (lambda/matching.ml[1482,49043+27]..[1482,49043+30])
                                                                  Ppat_var "pmh" (lambda/matching.ml[1482,49043+27]..[1482,49043+30])
                                                              ]
                                                            expression (lambda/matching.ml[1483,49078+20]..[1485,49185+23])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1483,49078+20]..[1483,49078+44])
                                                                Pexp_ident "Default_environment.cons" (lambda/matching.ml[1483,49078+20]..[1483,49078+44])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1484,49123+22]..[1484,49123+61])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[1484,49123+23]..[1484,49123+39])
                                                                      Pexp_ident "add_omega_column" (lambda/matching.ml[1484,49123+23]..[1484,49123+39])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[1484,49123+40]..[1484,49123+60])
  Pexp_apply
  expression (lambda/matching.ml[1484,49123+41]..[1484,49123+55])
    Pexp_ident "rebuild_matrix" (lambda/matching.ml[1484,49123+41]..[1484,49123+55])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[1484,49123+56]..[1484,49123+59])
        Pexp_ident "pmh" (lambda/matching.ml[1484,49123+56]..[1484,49123+59])
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1485,49185+22]..[1485,49185+23])
                                                                    Pexp_ident "e" (lambda/matching.ml[1485,49185+22]..[1485,49185+23])
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1486,49210+18]..[1486,49210+23])
                                                            Pexp_ident "nexts" (lambda/matching.ml[1486,49210+18]..[1486,49210+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1486,49210+24]..[1486,49210+27])
                                                            Pexp_ident "def" (lambda/matching.ml[1486,49210+24]..[1486,49210+27])
                                                      ]
                                            ]
                                            expression (lambda/matching.ml[1488,49255+14]..[1497,49646+30])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/matching.ml[1488,49255+18]..[1488,49255+31])
                                                    Ppat_var "rebuild_nexts" (lambda/matching.ml[1488,49255+18]..[1488,49255+31])
                                                  expression (lambda/matching.ml[1488,49255+32]..[1489,49297+75]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/matching.ml[1488,49255+32]..[1488,49255+37])
                                                      Ppat_var "nexts" (lambda/matching.ml[1488,49255+32]..[1488,49255+37])
                                                    expression (lambda/matching.ml[1488,49255+38]..[1489,49297+75]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/matching.ml[1488,49255+38]..[1488,49255+39])
                                                        Ppat_var "k" (lambda/matching.ml[1488,49255+38]..[1488,49255+39])
                                                      expression (lambda/matching.ml[1489,49297+16]..[1489,49297+75])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1489,49297+16]..[1489,49297+23])
                                                          Pexp_ident "map_end" (lambda/matching.ml[1489,49297+16]..[1489,49297+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1489,49297+24]..[1489,49297+67])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (lambda/matching.ml[1489,49297+29]..[1489,49297+36])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lambda/matching.ml[1489,49297+30]..[1489,49297+31])
                                                                    Ppat_var "e" (lambda/matching.ml[1489,49297+30]..[1489,49297+31])
                                                                  pattern (lambda/matching.ml[1489,49297+33]..[1489,49297+35])
                                                                    Ppat_var "pm" (lambda/matching.ml[1489,49297+33]..[1489,49297+35])
                                                                ]
                                                              expression (lambda/matching.ml[1489,49297+40]..[1489,49297+66])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1489,49297+41]..[1489,49297+42])
                                                                    Pexp_ident "e" (lambda/matching.ml[1489,49297+41]..[1489,49297+42])
                                                                  expression (lambda/matching.ml[1489,49297+44]..[1489,49297+65])
                                                                    Pexp_construct "PmVar" (lambda/matching.ml[1489,49297+44]..[1489,49297+49])
                                                                    Some
                                                                      expression (lambda/matching.ml[1489,49297+50]..[1489,49297+65])
Pexp_record
[
  "inside" (lambda/matching.ml[1489,49297+52]..[1489,49297+58])
    expression (lambda/matching.ml[1489,49297+61]..[1489,49297+63])
      Pexp_ident "pm" (lambda/matching.ml[1489,49297+61]..[1489,49297+63])
]
None
                                                                ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1489,49297+68]..[1489,49297+73])
                                                              Pexp_ident "nexts" (lambda/matching.ml[1489,49297+68]..[1489,49297+73])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1489,49297+74]..[1489,49297+75])
                                                              Pexp_ident "k" (lambda/matching.ml[1489,49297+74]..[1489,49297+75])
                                                        ]
                                              ]
                                              expression (lambda/matching.ml[1491,49390+14]..[1497,49646+30])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[1491,49390+18]..[1491,49390+24])
                                                      Ppat_var "rfirst" (lambda/matching.ml[1491,49390+18]..[1491,49390+24])
                                                    expression (lambda/matching.ml[1492,49417+16]..[1495,49576+17])
                                                      Pexp_record
                                                      [
                                                        "me" (lambda/matching.ml[1492,49417+18]..[1492,49417+20])
                                                          expression (lambda/matching.ml[1492,49417+23]..[1492,49417+47])
                                                            Pexp_construct "PmVar" (lambda/matching.ml[1492,49417+23]..[1492,49417+28])
                                                            Some
                                                              expression (lambda/matching.ml[1492,49417+29]..[1492,49417+47])
                                                                Pexp_record
                                                                [
                                                                  "inside" (lambda/matching.ml[1492,49417+31]..[1492,49417+37])
                                                                    expression (lambda/matching.ml[1492,49417+40]..[1492,49417+45])
                                                                      Pexp_ident "first" (lambda/matching.ml[1492,49417+40]..[1492,49417+45])
                                                                ]
                                                                None
                                                        "matrix" (lambda/matching.ml[1493,49466+18]..[1493,49466+24])
                                                          expression (lambda/matching.ml[1493,49466+27]..[1493,49466+50])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[1493,49466+27]..[1493,49466+43])
                                                              Pexp_ident "add_omega_column" (lambda/matching.ml[1493,49466+27]..[1493,49466+43])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1493,49466+44]..[1493,49466+50])
                                                                  Pexp_ident "matrix" (lambda/matching.ml[1493,49466+44]..[1493,49466+50])
                                                            ]
                                                        "top_default" (lambda/matching.ml[1494,49518+18]..[1494,49518+29])
                                                          expression (lambda/matching.ml[1494,49518+32]..[1494,49518+57])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[1494,49518+32]..[1494,49518+47])
                                                              Pexp_ident "rebuild_default" (lambda/matching.ml[1494,49518+32]..[1494,49518+47])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1494,49518+48]..[1494,49518+53])
                                                                  Pexp_ident "nexts" (lambda/matching.ml[1494,49518+48]..[1494,49518+53])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1494,49518+54]..[1494,49518+57])
                                                                  Pexp_ident "def" (lambda/matching.ml[1494,49518+54]..[1494,49518+57])
                                                            ]
                                                      ]
                                                      None
                                                  <def>
                                                    pattern (lambda/matching.ml[1496,49594+18]..[1496,49594+24])
                                                      Ppat_var "rnexts" (lambda/matching.ml[1496,49594+18]..[1496,49594+24])
                                                    expression (lambda/matching.ml[1496,49594+27]..[1496,49594+48])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1496,49594+27]..[1496,49594+40])
                                                        Pexp_ident "rebuild_nexts" (lambda/matching.ml[1496,49594+27]..[1496,49594+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1496,49594+41]..[1496,49594+46])
                                                            Pexp_ident "nexts" (lambda/matching.ml[1496,49594+41]..[1496,49594+46])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1496,49594+47]..[1496,49594+48])
                                                            Pexp_ident "k" (lambda/matching.ml[1496,49594+47]..[1496,49594+48])
                                                      ]
                                                ]
                                                expression (lambda/matching.ml[1497,49646+14]..[1497,49646+30])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[1497,49646+15]..[1497,49646+21])
                                                      Pexp_ident "rfirst" (lambda/matching.ml[1497,49646+15]..[1497,49646+21])
                                                    expression (lambda/matching.ml[1497,49646+23]..[1497,49646+29])
                                                      Pexp_ident "rnexts" (lambda/matching.ml[1497,49646+23]..[1497,49646+29])
                                                  ]
                                    ]
                        ]
                    <case>
                      pattern (lambda/matching.ml[1500,49693+4]..[1500,49693+5])
                        Ppat_any
                      expression (lambda/matching.ml[1500,49693+9]..[1500,49693+41])
                        Pexp_apply
                        expression (lambda/matching.ml[1500,49693+9]..[1500,49693+26])
                          Pexp_ident "do_not_precompile" (lambda/matching.ml[1500,49693+9]..[1500,49693+26])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1500,49693+27]..[1500,49693+31])
                              Pexp_ident "args" (lambda/matching.ml[1500,49693+27]..[1500,49693+31])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1500,49693+32]..[1500,49693+35])
                              Pexp_ident "cls" (lambda/matching.ml[1500,49693+32]..[1500,49693+35])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1500,49693+36]..[1500,49693+39])
                              Pexp_ident "def" (lambda/matching.ml[1500,49693+36]..[1500,49693+39])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1500,49693+40]..[1500,49693+41])
                              Pexp_ident "k" (lambda/matching.ml[1500,49693+40]..[1500,49693+41])
                        ]
                  ]
      <def>
        pattern (lambda/matching.ml[1502,49736+4]..[1502,49736+21])
          Ppat_var "do_not_precompile" (lambda/matching.ml[1502,49736+4]..[1502,49736+21])
        expression (lambda/matching.ml[1502,49736+22]..[1507,49888+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1502,49736+22]..[1502,49736+26])
            Ppat_var "args" (lambda/matching.ml[1502,49736+22]..[1502,49736+26])
          expression (lambda/matching.ml[1502,49736+27]..[1507,49888+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1502,49736+27]..[1502,49736+30])
              Ppat_var "cls" (lambda/matching.ml[1502,49736+27]..[1502,49736+30])
            expression (lambda/matching.ml[1502,49736+31]..[1507,49888+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1502,49736+31]..[1502,49736+34])
                Ppat_var "def" (lambda/matching.ml[1502,49736+31]..[1502,49736+34])
              expression (lambda/matching.ml[1502,49736+35]..[1507,49888+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1502,49736+35]..[1502,49736+36])
                  Ppat_var "k" (lambda/matching.ml[1502,49736+35]..[1502,49736+36])
                expression (lambda/matching.ml[1503,49775+2]..[1507,49888+7])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[1503,49775+4]..[1506,49881+5])
                      Pexp_record
                      [
                        "me" (lambda/matching.ml[1503,49775+6]..[1503,49775+8])
                          expression (lambda/matching.ml[1503,49775+11]..[1503,49775+50])
                            Pexp_construct "Pm" (lambda/matching.ml[1503,49775+11]..[1503,49775+13])
                            Some
                              expression (lambda/matching.ml[1503,49775+14]..[1503,49775+50])
                                Pexp_record
                                [
                                  "cases" (lambda/matching.ml[1503,49775+16]..[1503,49775+21])
                                    expression (lambda/matching.ml[1503,49775+24]..[1503,49775+27])
                                      Pexp_ident "cls" (lambda/matching.ml[1503,49775+24]..[1503,49775+27])
                                  "args" (lambda/matching.ml[1503,49775+29]..[1503,49775+33]) ghost
                                    expression (lambda/matching.ml[1503,49775+29]..[1503,49775+33])
                                      Pexp_ident "args" (lambda/matching.ml[1503,49775+29]..[1503,49775+33])
                                  "default" (lambda/matching.ml[1503,49775+35]..[1503,49775+42])
                                    expression (lambda/matching.ml[1503,49775+45]..[1503,49775+48])
                                      Pexp_ident "def" (lambda/matching.ml[1503,49775+45]..[1503,49775+48])
                                ]
                                None
                        "matrix" (lambda/matching.ml[1504,49827+6]..[1504,49827+12])
                          expression (lambda/matching.ml[1504,49827+15]..[1504,49827+28])
                            Pexp_apply
                            expression (lambda/matching.ml[1504,49827+15]..[1504,49827+24])
                              Pexp_ident "as_matrix" (lambda/matching.ml[1504,49827+15]..[1504,49827+24])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1504,49827+25]..[1504,49827+28])
                                  Pexp_ident "cls" (lambda/matching.ml[1504,49827+25]..[1504,49827+28])
                            ]
                        "top_default" (lambda/matching.ml[1505,49857+6]..[1505,49857+17])
                          expression (lambda/matching.ml[1505,49857+20]..[1505,49857+23])
                            Pexp_ident "def" (lambda/matching.ml[1505,49857+20]..[1505,49857+23])
                      ]
                      None
                    expression (lambda/matching.ml[1507,49888+4]..[1507,49888+5])
                      Pexp_ident "k" (lambda/matching.ml[1507,49888+4]..[1507,49888+5])
                  ]
      <def>
        pattern (lambda/matching.ml[1509,49897+4]..[1509,49897+17])
          Ppat_var "precompile_or" (lambda/matching.ml[1509,49897+4]..[1509,49897+17])
        expression (lambda/matching.ml[1509,49897+18]..[1613,53702+7]) ghost
          Pexp_fun
          Labelled "arg"
          None
          pattern (lambda/matching.ml[1509,49897+19]..[1509,49897+22])
            Ppat_var "arg" (lambda/matching.ml[1509,49897+19]..[1509,49897+22])
          expression (lambda/matching.ml[1509,49897+23]..[1613,53702+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1509,49897+23]..[1509,49897+49])
              Ppat_constraint
              pattern (lambda/matching.ml[1509,49897+24]..[1509,49897+27])
                Ppat_var "cls" (lambda/matching.ml[1509,49897+24]..[1509,49897+27])
              core_type (lambda/matching.ml[1509,49897+30]..[1509,49897+48])
                Ptyp_constr "list" (lambda/matching.ml[1509,49897+44]..[1509,49897+48])
                [
                  core_type (lambda/matching.ml[1509,49897+30]..[1509,49897+43])
                    Ptyp_constr "Simple.clause" (lambda/matching.ml[1509,49897+30]..[1509,49897+43])
                    []
                ]
            expression (lambda/matching.ml[1509,49897+50]..[1613,53702+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1509,49897+50]..[1509,49897+53])
                Ppat_var "ors" (lambda/matching.ml[1509,49897+50]..[1509,49897+53])
              expression (lambda/matching.ml[1509,49897+54]..[1613,53702+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1509,49897+54]..[1509,49897+58])
                  Ppat_var "args" (lambda/matching.ml[1509,49897+54]..[1509,49897+58])
                expression (lambda/matching.ml[1509,49897+59]..[1613,53702+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1509,49897+59]..[1509,49897+62])
                    Ppat_var "def" (lambda/matching.ml[1509,49897+59]..[1509,49897+62])
                  expression (lambda/matching.ml[1509,49897+63]..[1613,53702+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1509,49897+63]..[1509,49897+64])
                      Ppat_var "k" (lambda/matching.ml[1509,49897+63]..[1509,49897+64])
                    expression (lambda/matching.ml[1549,51259+2]..[1613,53702+7])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (lambda/matching.ml[1549,51259+10]..[1549,51259+18])
                            Ppat_var "do_cases" (lambda/matching.ml[1549,51259+10]..[1549,51259+18])
                          expression (lambda/matching.ml[1549,51259+21]..[1600,53330+7])
                            Pexp_function
                            [
                              <case>
                                pattern (lambda/matching.ml[1550,51289+6]..[1550,51289+8])
                                  Ppat_construct "[]" (lambda/matching.ml[1550,51289+6]..[1550,51289+8])
                                  None
                                expression (lambda/matching.ml[1550,51289+12]..[1550,51289+20])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[1550,51289+13]..[1550,51289+15])
                                      Pexp_construct "[]" (lambda/matching.ml[1550,51289+13]..[1550,51289+15])
                                      None
                                    expression (lambda/matching.ml[1550,51289+17]..[1550,51289+19])
                                      Pexp_construct "[]" (lambda/matching.ml[1550,51289+17]..[1550,51289+19])
                                      None
                                  ]
                              <case>
                                pattern (lambda/matching.ml[1551,51310+6]..[1551,51310+32])
                                  Ppat_construct "::" (lambda/matching.ml[1551,51310+26]..[1551,51310+28])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1551,51310+6]..[1551,51310+32]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[1551,51310+6]..[1551,51310+25])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[1551,51310+7]..[1551,51310+16])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1551,51310+8]..[1551,51310+9])
                                                  Ppat_var "p" (lambda/matching.ml[1551,51310+8]..[1551,51310+9])
                                                pattern (lambda/matching.ml[1551,51310+11]..[1551,51310+15])
                                                  Ppat_var "patl" (lambda/matching.ml[1551,51310+11]..[1551,51310+15])
                                              ]
                                            pattern (lambda/matching.ml[1551,51310+18]..[1551,51310+24])
                                              Ppat_var "action" (lambda/matching.ml[1551,51310+18]..[1551,51310+24])
                                          ]
                                        pattern (lambda/matching.ml[1551,51310+29]..[1551,51310+32])
                                          Ppat_var "rem" (lambda/matching.ml[1551,51310+29]..[1551,51310+32])
                                      ]
                                expression (lambda/matching.ml[1551,51310+36]..[1600,53330+7])
                                  Pexp_match
                                  expression (lambda/matching.ml[1552,51348+14]..[1552,51348+24])
                                    Pexp_field
                                    expression (lambda/matching.ml[1552,51348+14]..[1552,51348+15])
                                      Pexp_ident "p" (lambda/matching.ml[1552,51348+14]..[1552,51348+15])
                                    "pat_desc" (lambda/matching.ml[1552,51348+16]..[1552,51348+24])
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[1553,51378+10]..[1553,51378+30])
                                        Ppat_alias "view" (lambda/matching.ml[1553,51378+26]..[1553,51378+30])
                                        pattern (lambda/matching.ml[1553,51378+10]..[1553,51378+22])
                                          Ppat_type
                                          "Simple.view" (lambda/matching.ml[1553,51378+11]..[1553,51378+22])
                                      expression (lambda/matching.ml[1554,51412+12]..[1556,51539+28])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[1554,51412+16]..[1554,51412+37])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[1554,51412+16]..[1554,51412+23])
                                                  Ppat_var "new_ord" (lambda/matching.ml[1554,51412+16]..[1554,51412+23])
                                                pattern (lambda/matching.ml[1554,51412+25]..[1554,51412+37])
                                                  Ppat_var "new_to_catch" (lambda/matching.ml[1554,51412+25]..[1554,51412+37])
                                              ]
                                            expression (lambda/matching.ml[1554,51412+40]..[1554,51412+52])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1554,51412+40]..[1554,51412+48])
                                                Pexp_ident "do_cases" (lambda/matching.ml[1554,51412+40]..[1554,51412+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1554,51412+49]..[1554,51412+52])
                                                    Pexp_ident "rem" (lambda/matching.ml[1554,51412+49]..[1554,51412+52])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[1555,51468+12]..[1556,51539+28])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[1555,51468+14]..[1555,51468+69])
                                              Pexp_construct "::" (lambda/matching.ml[1555,51468+59]..[1555,51468+61])
                                              Some
                                                expression (lambda/matching.ml[1555,51468+14]..[1555,51468+69]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[1555,51468+14]..[1555,51468+58])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1555,51468+15]..[1555,51468+49])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[1555,51468+16]..[1555,51468+42])
                                                              Pexp_record
                                                              [
                                                                "pat_desc" (lambda/matching.ml[1555,51468+25]..[1555,51468+33])
                                                                  expression (lambda/matching.ml[1555,51468+36]..[1555,51468+40])
                                                                    Pexp_ident "view" (lambda/matching.ml[1555,51468+36]..[1555,51468+40])
                                                              ]
                                                              Some
                                                                expression (lambda/matching.ml[1555,51468+18]..[1555,51468+19])
                                                                  Pexp_ident "p" (lambda/matching.ml[1555,51468+18]..[1555,51468+19])
                                                            expression (lambda/matching.ml[1555,51468+44]..[1555,51468+48])
                                                              Pexp_ident "patl" (lambda/matching.ml[1555,51468+44]..[1555,51468+48])
                                                          ]
                                                        expression (lambda/matching.ml[1555,51468+51]..[1555,51468+57])
                                                          Pexp_ident "action" (lambda/matching.ml[1555,51468+51]..[1555,51468+57])
                                                      ]
                                                    expression (lambda/matching.ml[1555,51468+62]..[1555,51468+69])
                                                      Pexp_ident "new_ord" (lambda/matching.ml[1555,51468+62]..[1555,51468+69])
                                                  ]
                                            expression (lambda/matching.ml[1556,51539+14]..[1556,51539+26])
                                              Pexp_ident "new_to_catch" (lambda/matching.ml[1556,51539+14]..[1556,51539+26])
                                          ]
                                    <case>
                                      pattern (lambda/matching.ml[1557,51568+10]..[1557,51568+15])
                                        Ppat_variant "Or"
                                        Some
                                          pattern (lambda/matching.ml[1557,51568+14]..[1557,51568+15])
                                            Ppat_any
                                      expression (lambda/matching.ml[1558,51587+12]..[1599,53269+60])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[1558,51587+16]..[1558,51587+19])
                                              Ppat_var "orp" (lambda/matching.ml[1558,51587+16]..[1558,51587+19])
                                            expression (lambda/matching.ml[1558,51587+22]..[1558,51587+37])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1558,51587+22]..[1558,51587+35])
                                                Pexp_ident "General.erase" (lambda/matching.ml[1558,51587+22]..[1558,51587+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1558,51587+36]..[1558,51587+37])
                                                    Pexp_ident "p" (lambda/matching.ml[1558,51587+36]..[1558,51587+37])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[1559,51628+12]..[1599,53269+60])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1559,51628+16]..[1559,51628+27])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[1559,51628+16]..[1559,51628+22])
                                                    Ppat_var "others" (lambda/matching.ml[1559,51628+16]..[1559,51628+22])
                                                  pattern (lambda/matching.ml[1559,51628+24]..[1559,51628+27])
                                                    Ppat_var "rem" (lambda/matching.ml[1559,51628+24]..[1559,51628+27])
                                                ]
                                              expression (lambda/matching.ml[1559,51628+30]..[1559,51628+56])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1559,51628+30]..[1559,51628+48])
                                                  Pexp_ident "extract_equiv_head" (lambda/matching.ml[1559,51628+30]..[1559,51628+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1559,51628+49]..[1559,51628+52])
                                                      Pexp_ident "orp" (lambda/matching.ml[1559,51628+49]..[1559,51628+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1559,51628+53]..[1559,51628+56])
                                                      Pexp_ident "rem" (lambda/matching.ml[1559,51628+53]..[1559,51628+56])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1560,51688+12]..[1599,53269+60])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[1560,51688+16]..[1560,51688+20])
                                                  Ppat_var "orpm" (lambda/matching.ml[1560,51688+16]..[1560,51688+20])
                                                expression (lambda/matching.ml[1561,51711+14]..[1570,52061+15])
                                                  Pexp_record
                                                  [
                                                    "cases" (lambda/matching.ml[1561,51711+16]..[1561,51711+21])
                                                      expression (lambda/matching.ml[1562,51735+18]..[1563,51768+76])
                                                        Pexp_construct "::" (lambda/matching.ml[1563,51768+18]..[1563,51768+20])
                                                        Some
                                                          expression (lambda/matching.ml[1562,51735+18]..[1563,51768+76]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1562,51735+18]..[1562,51735+32])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1562,51735+19]..[1562,51735+23])
                                                                    Pexp_ident "patl" (lambda/matching.ml[1562,51735+19]..[1562,51735+23])
                                                                  expression (lambda/matching.ml[1562,51735+25]..[1562,51735+31])
                                                                    Pexp_ident "action" (lambda/matching.ml[1562,51735+25]..[1562,51735+31])
                                                                ]
                                                              expression (lambda/matching.ml[1563,51768+21]..[1563,51768+76])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[1563,51768+21]..[1563,51768+29])
                                                                  Pexp_ident "List.map" (lambda/matching.ml[1563,51768+21]..[1563,51768+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[1563,51768+30]..[1563,51768+69])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (lambda/matching.ml[1563,51768+35]..[1563,51768+52])
Ppat_tuple
[
  pattern (lambda/matching.ml[1563,51768+36]..[1563,51768+43])
    Ppat_tuple
    [
      pattern (lambda/matching.ml[1563,51768+37]..[1563,51768+38])
        Ppat_any
      pattern (lambda/matching.ml[1563,51768+40]..[1563,51768+42])
        Ppat_var "ps" (lambda/matching.ml[1563,51768+40]..[1563,51768+42])
    ]
  pattern (lambda/matching.ml[1563,51768+45]..[1563,51768+51])
    Ppat_var "action" (lambda/matching.ml[1563,51768+45]..[1563,51768+51])
]
                                                                      expression (lambda/matching.ml[1563,51768+56]..[1563,51768+68])
Pexp_tuple
[
  expression (lambda/matching.ml[1563,51768+57]..[1563,51768+59])
    Pexp_ident "ps" (lambda/matching.ml[1563,51768+57]..[1563,51768+59])
  expression (lambda/matching.ml[1563,51768+61]..[1563,51768+67])
    Pexp_ident "action" (lambda/matching.ml[1563,51768+61]..[1563,51768+67])
]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[1563,51768+70]..[1563,51768+76])
                                                                      Pexp_ident "others" (lambda/matching.ml[1563,51768+70]..[1563,51768+76])
                                                                ]
                                                            ]
                                                    "args" (lambda/matching.ml[1564,51846+16]..[1564,51846+20])
                                                      expression (lambda/matching.ml[1565,51869+18]..[1568,51975+19])
                                                        Pexp_match
                                                        expression (lambda/matching.ml[1565,51869+26]..[1565,51869+30])
                                                          Pexp_ident "args" (lambda/matching.ml[1565,51869+26]..[1565,51869+30])
                                                        [
                                                          <case>
                                                            pattern (lambda/matching.ml[1566,51905+20]..[1566,51905+26])
                                                              Ppat_construct "::" (lambda/matching.ml[1566,51905+22]..[1566,51905+24])
                                                              Some
                                                                []
                                                                pattern (lambda/matching.ml[1566,51905+20]..[1566,51905+26]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (lambda/matching.ml[1566,51905+20]..[1566,51905+21])
                                                                      Ppat_any
                                                                    pattern (lambda/matching.ml[1566,51905+25]..[1566,51905+26])
                                                                      Ppat_var "r" (lambda/matching.ml[1566,51905+25]..[1566,51905+26])
                                                                  ]
                                                            expression (lambda/matching.ml[1566,51905+30]..[1566,51905+31])
                                                              Pexp_ident "r" (lambda/matching.ml[1566,51905+30]..[1566,51905+31])
                                                          <case>
                                                            pattern (lambda/matching.ml[1567,51937+20]..[1567,51937+21])
                                                              Ppat_any
                                                            expression (lambda/matching.ml[1567,51937+25]..[1567,51937+37])
                                                              Pexp_assert
                                                              expression (lambda/matching.ml[1567,51937+32]..[1567,51937+37])
                                                                Pexp_construct "false" (lambda/matching.ml[1567,51937+32]..[1567,51937+37])
                                                                None
                                                        ]
                                                    "default" (lambda/matching.ml[1569,51996+16]..[1569,51996+23])
                                                      expression (lambda/matching.ml[1569,51996+26]..[1569,51996+64])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1569,51996+26]..[1569,51996+56])
                                                          Pexp_ident "Default_environment.pop_compat" (lambda/matching.ml[1569,51996+26]..[1569,51996+56])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1569,51996+57]..[1569,51996+60])
                                                              Pexp_ident "orp" (lambda/matching.ml[1569,51996+57]..[1569,51996+60])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1569,51996+61]..[1569,51996+64])
                                                              Pexp_ident "def" (lambda/matching.ml[1569,51996+61]..[1569,51996+64])
                                                        ]
                                                  ]
                                                  None
                                            ]
                                            expression (lambda/matching.ml[1572,52092+12]..[1599,53269+60])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/matching.ml[1572,52092+16]..[1572,52092+21])
                                                    Ppat_var "pm_fv" (lambda/matching.ml[1572,52092+16]..[1572,52092+21])
                                                  expression (lambda/matching.ml[1572,52092+24]..[1572,52092+46])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[1572,52092+24]..[1572,52092+41])
                                                      Pexp_ident "pm_free_variables" (lambda/matching.ml[1572,52092+24]..[1572,52092+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[1572,52092+42]..[1572,52092+46])
                                                          Pexp_ident "orpm" (lambda/matching.ml[1572,52092+42]..[1572,52092+46])
                                                    ]
                                              ]
                                              expression (lambda/matching.ml[1573,52142+12]..[1599,53269+60])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[1573,52142+16]..[1573,52142+36])
                                                      Ppat_var "patbound_action_vars" (lambda/matching.ml[1573,52142+16]..[1573,52142+36])
                                                    expression (lambda/matching.ml[1576,52286+14]..[1579,52454+61])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1578,52408+14]..[1578,52408+16])
                                                        Pexp_ident "|>" (lambda/matching.ml[1578,52408+14]..[1578,52408+16])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1576,52286+14]..[1577,52336+71])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[1577,52336+14]..[1577,52336+16])
                                                              Pexp_ident "|>" (lambda/matching.ml[1577,52336+14]..[1577,52336+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1576,52286+14]..[1576,52286+49])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[1576,52286+14]..[1576,52286+45])
                                                                    Pexp_ident "Typedtree.pat_bound_idents_full" (lambda/matching.ml[1576,52286+14]..[1576,52286+45])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[1576,52286+46]..[1576,52286+49])
Pexp_ident "orp" (lambda/matching.ml[1576,52286+46]..[1576,52286+49])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1577,52336+17]..[1577,52336+71])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[1577,52336+17]..[1577,52336+28])
                                                                    Pexp_ident "List.filter" (lambda/matching.ml[1577,52336+17]..[1577,52336+28])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[1577,52336+29]..[1577,52336+71])
Pexp_fun
Nolabel
None
pattern (lambda/matching.ml[1577,52336+34]..[1577,52336+44])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[1577,52336+35]..[1577,52336+37])
      Ppat_var "id" (lambda/matching.ml[1577,52336+35]..[1577,52336+37])
    pattern (lambda/matching.ml[1577,52336+39]..[1577,52336+40])
      Ppat_any
    pattern (lambda/matching.ml[1577,52336+42]..[1577,52336+43])
      Ppat_any
  ]
expression (lambda/matching.ml[1577,52336+48]..[1577,52336+70])
  Pexp_apply
  expression (lambda/matching.ml[1577,52336+48]..[1577,52336+61])
    Pexp_ident "Ident.Set.mem" (lambda/matching.ml[1577,52336+48]..[1577,52336+61])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[1577,52336+62]..[1577,52336+64])
        Pexp_ident "id" (lambda/matching.ml[1577,52336+62]..[1577,52336+64])
    <arg>
    Nolabel
      expression (lambda/matching.ml[1577,52336+65]..[1577,52336+70])
        Pexp_ident "pm_fv" (lambda/matching.ml[1577,52336+65]..[1577,52336+70])
  ]
                                                                  ]
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1578,52408+17]..[1579,52454+61])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[1578,52408+17]..[1578,52408+25])
                                                              Pexp_ident "List.map" (lambda/matching.ml[1578,52408+17]..[1578,52408+25])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[1578,52408+26]..[1579,52454+61])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (lambda/matching.ml[1578,52408+31]..[1578,52408+42])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (lambda/matching.ml[1578,52408+32]..[1578,52408+34])
Ppat_var "id" (lambda/matching.ml[1578,52408+32]..[1578,52408+34])
                                                                      pattern (lambda/matching.ml[1578,52408+36]..[1578,52408+37])
Ppat_any
                                                                      pattern (lambda/matching.ml[1578,52408+39]..[1578,52408+41])
Ppat_var "ty" (lambda/matching.ml[1578,52408+39]..[1578,52408+41])
                                                                    ]
                                                                  expression (lambda/matching.ml[1579,52454+21]..[1579,52454+60])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[1579,52454+22]..[1579,52454+24])
Pexp_ident "id" (lambda/matching.ml[1579,52454+22]..[1579,52454+24])
                                                                      expression (lambda/matching.ml[1579,52454+26]..[1579,52454+59])
Pexp_apply
expression (lambda/matching.ml[1579,52454+26]..[1579,52454+44])
  Pexp_ident "Typeopt.value_kind" (lambda/matching.ml[1579,52454+26]..[1579,52454+44])
[
  <arg>
  Nolabel
    expression (lambda/matching.ml[1579,52454+45]..[1579,52454+56])
      Pexp_field
      expression (lambda/matching.ml[1579,52454+45]..[1579,52454+48])
        Pexp_ident "orp" (lambda/matching.ml[1579,52454+45]..[1579,52454+48])
      "pat_env" (lambda/matching.ml[1579,52454+49]..[1579,52454+56])
  <arg>
  Nolabel
    expression (lambda/matching.ml[1579,52454+57]..[1579,52454+59])
      Pexp_ident "ty" (lambda/matching.ml[1579,52454+57]..[1579,52454+59])
]
                                                                    ]
                                                            ]
                                                      ]
                                                ]
                                                expression (lambda/matching.ml[1581,52531+12]..[1599,53269+60])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lambda/matching.ml[1581,52531+16]..[1581,52531+22])
                                                        Ppat_var "or_num" (lambda/matching.ml[1581,52531+16]..[1581,52531+22])
                                                      expression (lambda/matching.ml[1581,52531+25]..[1581,52531+44])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1581,52531+25]..[1581,52531+41])
                                                          Pexp_ident "next_raise_count" (lambda/matching.ml[1581,52531+25]..[1581,52531+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1581,52531+42]..[1581,52531+44])
                                                              Pexp_construct "()" (lambda/matching.ml[1581,52531+42]..[1581,52531+44])
                                                              None
                                                        ]
                                                  ]
                                                  expression (lambda/matching.ml[1582,52579+12]..[1599,53269+60])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lambda/matching.ml[1582,52579+16]..[1582,52579+24])
                                                          Ppat_var "new_patl" (lambda/matching.ml[1582,52579+16]..[1582,52579+24])
                                                        expression (lambda/matching.ml[1582,52579+27]..[1582,52579+51])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[1582,52579+27]..[1582,52579+46])
                                                            Pexp_ident "Patterns.omega_list" (lambda/matching.ml[1582,52579+27]..[1582,52579+46])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[1582,52579+47]..[1582,52579+51])
                                                                Pexp_ident "patl" (lambda/matching.ml[1582,52579+47]..[1582,52579+51])
                                                          ]
                                                    ]
                                                    expression (lambda/matching.ml[1583,52634+12]..[1599,53269+60])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lambda/matching.ml[1583,52634+16]..[1583,52634+29])
                                                            Ppat_var "mk_new_action" (lambda/matching.ml[1583,52634+16]..[1583,52634+29])
                                                          expression (lambda/matching.ml[1583,52634+30]..[1584,52672+68]) ghost
                                                            Pexp_fun
                                                            Labelled "vars"
                                                            None
                                                            pattern (lambda/matching.ml[1583,52634+31]..[1583,52634+35])
                                                              Ppat_var "vars" (lambda/matching.ml[1583,52634+31]..[1583,52634+35])
                                                            expression (lambda/matching.ml[1584,52672+14]..[1584,52672+68])
                                                              Pexp_construct "Lstaticraise" (lambda/matching.ml[1584,52672+14]..[1584,52672+26])
                                                              Some
                                                                expression (lambda/matching.ml[1584,52672+27]..[1584,52672+68])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[1584,52672+28]..[1584,52672+34])
                                                                      Pexp_ident "or_num" (lambda/matching.ml[1584,52672+28]..[1584,52672+34])
                                                                    expression (lambda/matching.ml[1584,52672+36]..[1584,52672+67])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[1584,52672+36]..[1584,52672+44])
Pexp_ident "List.map" (lambda/matching.ml[1584,52672+36]..[1584,52672+44])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[1584,52672+45]..[1584,52672+62])
    Pexp_fun
    Nolabel
    None
    pattern (lambda/matching.ml[1584,52672+50]..[1584,52672+51])
      Ppat_var "v" (lambda/matching.ml[1584,52672+50]..[1584,52672+51])
    expression (lambda/matching.ml[1584,52672+55]..[1584,52672+61])
      Pexp_construct "Lvar" (lambda/matching.ml[1584,52672+55]..[1584,52672+59])
      Some
        expression (lambda/matching.ml[1584,52672+60]..[1584,52672+61])
          Pexp_ident "v" (lambda/matching.ml[1584,52672+60]..[1584,52672+61])
<arg>
Nolabel
  expression (lambda/matching.ml[1584,52672+63]..[1584,52672+67])
    Pexp_ident "vars" (lambda/matching.ml[1584,52672+63]..[1584,52672+67])
                                                                      ]
                                                                  ]
                                                      ]
                                                      expression (lambda/matching.ml[1586,52756+12]..[1599,53269+60])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lambda/matching.ml[1586,52756+16]..[1586,52756+25])
                                                              Ppat_var "new_cases" (lambda/matching.ml[1586,52756+16]..[1586,52756+25])
                                                            expression (lambda/matching.ml[1587,52784+14]..[1590,52942+64])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1590,52942+14]..[1590,52942+16])
                                                                Pexp_ident "|>" (lambda/matching.ml[1590,52942+14]..[1590,52942+16])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1587,52784+14]..[1589,52868+73])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[1587,52784+14]..[1587,52784+35])
                                                                      Pexp_ident "Simple.explode_or_pat" (lambda/matching.ml[1587,52784+14]..[1587,52784+35])
                                                                    [
                                                                      <arg>
                                                                      Labelled "arg"
expression (lambda/matching.ml[1587,52784+37]..[1587,52784+40])
  Pexp_ident "arg" (lambda/matching.ml[1587,52784+37]..[1587,52784+40])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[1587,52784+41]..[1587,52784+42])
  Pexp_ident "p" (lambda/matching.ml[1587,52784+41]..[1587,52784+42])
                                                                      <arg>
                                                                      Labelled "mk_action"
expression (lambda/matching.ml[1588,52827+27]..[1588,52827+40])
  Pexp_ident "mk_new_action" (lambda/matching.ml[1588,52827+27]..[1588,52827+40])
                                                                      <arg>
                                                                      Labelled "patbound_action_vars"
expression (lambda/matching.ml[1589,52868+38]..[1589,52868+73])
  Pexp_apply
  expression (lambda/matching.ml[1589,52868+39]..[1589,52868+47])
    Pexp_ident "List.map" (lambda/matching.ml[1589,52868+39]..[1589,52868+47])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[1589,52868+48]..[1589,52868+51])
        Pexp_ident "fst" (lambda/matching.ml[1589,52868+48]..[1589,52868+51])
    <arg>
    Nolabel
      expression (lambda/matching.ml[1589,52868+52]..[1589,52868+72])
        Pexp_ident "patbound_action_vars" (lambda/matching.ml[1589,52868+52]..[1589,52868+72])
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1590,52942+17]..[1590,52942+64])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[1590,52942+17]..[1590,52942+25])
                                                                      Pexp_ident "List.map" (lambda/matching.ml[1590,52942+17]..[1590,52942+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[1590,52942+26]..[1590,52942+64])
  Pexp_fun
  Nolabel
  None
  pattern (lambda/matching.ml[1590,52942+31]..[1590,52942+39])
    Ppat_tuple
    [
      pattern (lambda/matching.ml[1590,52942+32]..[1590,52942+33])
        Ppat_var "p" (lambda/matching.ml[1590,52942+32]..[1590,52942+33])
      pattern (lambda/matching.ml[1590,52942+35]..[1590,52942+38])
        Ppat_var "act" (lambda/matching.ml[1590,52942+35]..[1590,52942+38])
    ]
  expression (lambda/matching.ml[1590,52942+43]..[1590,52942+63])
    Pexp_tuple
    [
      expression (lambda/matching.ml[1590,52942+44]..[1590,52942+57])
        Pexp_tuple
        [
          expression (lambda/matching.ml[1590,52942+45]..[1590,52942+46])
            Pexp_ident "p" (lambda/matching.ml[1590,52942+45]..[1590,52942+46])
          expression (lambda/matching.ml[1590,52942+48]..[1590,52942+56])
            Pexp_ident "new_patl" (lambda/matching.ml[1590,52942+48]..[1590,52942+56])
        ]
      expression (lambda/matching.ml[1590,52942+59]..[1590,52942+62])
        Pexp_ident "act" (lambda/matching.ml[1590,52942+59]..[1590,52942+62])
    ]
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (lambda/matching.ml[1591,53010+12]..[1599,53269+60])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lambda/matching.ml[1591,53010+16]..[1591,53010+23])
                                                                Ppat_var "handler" (lambda/matching.ml[1591,53010+16]..[1591,53010+23])
                                                              expression (lambda/matching.ml[1592,53036+14]..[1596,53180+15])
                                                                Pexp_record
                                                                [
                                                                  "provenance" (lambda/matching.ml[1592,53036+16]..[1592,53036+26])
                                                                    expression (lambda/matching.ml[1592,53036+29]..[1592,53036+40])
                                                                      Pexp_construct "::" (lambda/matching.ml[1592,53036+31]..[1592,53036+40]) ghost
                                                                      Some
expression (lambda/matching.ml[1592,53036+31]..[1592,53036+40]) ghost
  Pexp_tuple
  [
    expression (lambda/matching.ml[1592,53036+31]..[1592,53036+38])
      Pexp_construct "::" (lambda/matching.ml[1592,53036+33]..[1592,53036+38]) ghost
      Some
        expression (lambda/matching.ml[1592,53036+33]..[1592,53036+38]) ghost
          Pexp_tuple
          [
            expression (lambda/matching.ml[1592,53036+33]..[1592,53036+36])
              Pexp_ident "orp" (lambda/matching.ml[1592,53036+33]..[1592,53036+36])
            expression (lambda/matching.ml[1592,53036+37]..[1592,53036+38]) ghost
              Pexp_construct "[]" (lambda/matching.ml[1592,53036+37]..[1592,53036+38]) ghost
              None
          ]
    expression (lambda/matching.ml[1592,53036+39]..[1592,53036+40]) ghost
      Pexp_construct "[]" (lambda/matching.ml[1592,53036+39]..[1592,53036+40]) ghost
      None
  ]
                                                                  "exit" (lambda/matching.ml[1593,53078+16]..[1593,53078+20])
                                                                    expression (lambda/matching.ml[1593,53078+23]..[1593,53078+29])
                                                                      Pexp_ident "or_num" (lambda/matching.ml[1593,53078+23]..[1593,53078+29])
                                                                  "vars" (lambda/matching.ml[1594,53109+16]..[1594,53109+20])
                                                                    expression (lambda/matching.ml[1594,53109+23]..[1594,53109+43])
                                                                      Pexp_ident "patbound_action_vars" (lambda/matching.ml[1594,53109+23]..[1594,53109+43])
                                                                  "pm" (lambda/matching.ml[1595,53154+16]..[1595,53154+18])
                                                                    expression (lambda/matching.ml[1595,53154+21]..[1595,53154+25])
                                                                      Pexp_ident "orpm" (lambda/matching.ml[1595,53154+21]..[1595,53154+25])
                                                                ]
                                                                None
                                                          ]
                                                          expression (lambda/matching.ml[1598,53211+12]..[1599,53269+60])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lambda/matching.ml[1598,53211+16]..[1598,53211+39])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (lambda/matching.ml[1598,53211+16]..[1598,53211+25])
                                                                      Ppat_var "rem_cases" (lambda/matching.ml[1598,53211+16]..[1598,53211+25])
                                                                    pattern (lambda/matching.ml[1598,53211+27]..[1598,53211+39])
                                                                      Ppat_var "rem_handlers" (lambda/matching.ml[1598,53211+27]..[1598,53211+39])
                                                                  ]
                                                                expression (lambda/matching.ml[1598,53211+42]..[1598,53211+54])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[1598,53211+42]..[1598,53211+50])
                                                                    Pexp_ident "do_cases" (lambda/matching.ml[1598,53211+42]..[1598,53211+50])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[1598,53211+51]..[1598,53211+54])
Pexp_ident "rem" (lambda/matching.ml[1598,53211+51]..[1598,53211+54])
                                                                  ]
                                                            ]
                                                            expression (lambda/matching.ml[1599,53269+12]..[1599,53269+60])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[1599,53269+13]..[1599,53269+34])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[1599,53269+23]..[1599,53269+24])
                                                                    Pexp_ident "@" (lambda/matching.ml[1599,53269+23]..[1599,53269+24])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[1599,53269+13]..[1599,53269+22])
Pexp_ident "new_cases" (lambda/matching.ml[1599,53269+13]..[1599,53269+22])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[1599,53269+25]..[1599,53269+34])
Pexp_ident "rem_cases" (lambda/matching.ml[1599,53269+25]..[1599,53269+34])
                                                                  ]
                                                                expression (lambda/matching.ml[1599,53269+36]..[1599,53269+59])
                                                                  Pexp_construct "::" (lambda/matching.ml[1599,53269+44]..[1599,53269+46])
                                                                  Some
                                                                    expression (lambda/matching.ml[1599,53269+36]..[1599,53269+59]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[1599,53269+36]..[1599,53269+43])
  Pexp_ident "handler" (lambda/matching.ml[1599,53269+36]..[1599,53269+43])
expression (lambda/matching.ml[1599,53269+47]..[1599,53269+59])
  Pexp_ident "rem_handlers" (lambda/matching.ml[1599,53269+47]..[1599,53269+59])
                                                                      ]
                                                              ]
                                  ]
                            ]
                      ]
                      expression (lambda/matching.ml[1602,53343+2]..[1613,53702+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[1602,53343+6]..[1602,53343+21])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1602,53343+6]..[1602,53343+11])
                                  Ppat_var "cases" (lambda/matching.ml[1602,53343+6]..[1602,53343+11])
                                pattern (lambda/matching.ml[1602,53343+13]..[1602,53343+21])
                                  Ppat_var "handlers" (lambda/matching.ml[1602,53343+13]..[1602,53343+21])
                              ]
                            expression (lambda/matching.ml[1602,53343+24]..[1602,53343+36])
                              Pexp_apply
                              expression (lambda/matching.ml[1602,53343+24]..[1602,53343+32])
                                Pexp_ident "do_cases" (lambda/matching.ml[1602,53343+24]..[1602,53343+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1602,53343+33]..[1602,53343+36])
                                    Pexp_ident "ors" (lambda/matching.ml[1602,53343+33]..[1602,53343+36])
                              ]
                        ]
                        expression (lambda/matching.ml[1603,53383+2]..[1613,53702+7])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[1603,53383+6]..[1603,53383+12])
                                Ppat_var "matrix" (lambda/matching.ml[1603,53383+6]..[1603,53383+12])
                              expression (lambda/matching.ml[1604,53398+4]..[1607,53532+7])
                                Pexp_apply
                                expression (lambda/matching.ml[1604,53398+4]..[1604,53398+13])
                                  Pexp_ident "as_matrix" (lambda/matching.ml[1604,53398+4]..[1604,53398+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1605,53412+6]..[1607,53532+7])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1606,53469+6]..[1606,53469+7])
                                        Pexp_ident "@" (lambda/matching.ml[1606,53469+6]..[1606,53469+7])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1605,53412+7]..[1605,53412+56])
                                            Pexp_coerce
                                            expression (lambda/matching.ml[1605,53412+8]..[1605,53412+11])
                                              Pexp_ident "cls" (lambda/matching.ml[1605,53412+8]..[1605,53412+11])
                                            Some
                                              core_type (lambda/matching.ml[1605,53412+14]..[1605,53412+32])
                                                Ptyp_constr "list" (lambda/matching.ml[1605,53412+28]..[1605,53412+32])
                                                [
                                                  core_type (lambda/matching.ml[1605,53412+14]..[1605,53412+27])
                                                    Ptyp_constr "Simple.clause" (lambda/matching.ml[1605,53412+14]..[1605,53412+27])
                                                    []
                                                ]
                                            core_type (lambda/matching.ml[1605,53412+36]..[1605,53412+55])
                                              Ptyp_constr "list" (lambda/matching.ml[1605,53412+51]..[1605,53412+55])
                                              [
                                                core_type (lambda/matching.ml[1605,53412+36]..[1605,53412+50])
                                                  Ptyp_constr "General.clause" (lambda/matching.ml[1605,53412+36]..[1605,53412+50])
                                                  []
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1606,53469+8]..[1606,53469+62])
                                            Pexp_coerce
                                            expression (lambda/matching.ml[1606,53469+9]..[1606,53469+12])
                                              Pexp_ident "ors" (lambda/matching.ml[1606,53469+9]..[1606,53469+12])
                                            Some
                                              core_type (lambda/matching.ml[1606,53469+15]..[1606,53469+38])
                                                Ptyp_constr "list" (lambda/matching.ml[1606,53469+34]..[1606,53469+38])
                                                [
                                                  core_type (lambda/matching.ml[1606,53469+15]..[1606,53469+33])
                                                    Ptyp_constr "Half_simple.clause" (lambda/matching.ml[1606,53469+15]..[1606,53469+33])
                                                    []
                                                ]
                                            core_type (lambda/matching.ml[1606,53469+42]..[1606,53469+61])
                                              Ptyp_constr "list" (lambda/matching.ml[1606,53469+57]..[1606,53469+61])
                                              [
                                                core_type (lambda/matching.ml[1606,53469+42]..[1606,53469+56])
                                                  Ptyp_constr "General.clause" (lambda/matching.ml[1606,53469+42]..[1606,53469+56])
                                                  []
                                              ]
                                      ]
                                ]
                            <def>
                              pattern (lambda/matching.ml[1608,53540+6]..[1608,53540+10])
                                Ppat_var "body" (lambda/matching.ml[1608,53540+6]..[1608,53540+10])
                              expression (lambda/matching.ml[1608,53540+13]..[1608,53540+57])
                                Pexp_record
                                [
                                  "cases" (lambda/matching.ml[1608,53540+15]..[1608,53540+20])
                                    expression (lambda/matching.ml[1608,53540+23]..[1608,53540+34])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1608,53540+27]..[1608,53540+28])
                                        Pexp_ident "@" (lambda/matching.ml[1608,53540+27]..[1608,53540+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1608,53540+23]..[1608,53540+26])
                                            Pexp_ident "cls" (lambda/matching.ml[1608,53540+23]..[1608,53540+26])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1608,53540+29]..[1608,53540+34])
                                            Pexp_ident "cases" (lambda/matching.ml[1608,53540+29]..[1608,53540+34])
                                      ]
                                  "args" (lambda/matching.ml[1608,53540+36]..[1608,53540+40]) ghost
                                    expression (lambda/matching.ml[1608,53540+36]..[1608,53540+40])
                                      Pexp_ident "args" (lambda/matching.ml[1608,53540+36]..[1608,53540+40])
                                  "default" (lambda/matching.ml[1608,53540+42]..[1608,53540+49])
                                    expression (lambda/matching.ml[1608,53540+52]..[1608,53540+55])
                                      Pexp_ident "def" (lambda/matching.ml[1608,53540+52]..[1608,53540+55])
                                ]
                                None
                          ]
                          expression (lambda/matching.ml[1609,53601+2]..[1613,53702+7])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[1609,53601+4]..[1612,53695+5])
                                Pexp_record
                                [
                                  "me" (lambda/matching.ml[1609,53601+6]..[1609,53601+8])
                                    expression (lambda/matching.ml[1609,53601+11]..[1609,53601+54])
                                      Pexp_construct "PmOr" (lambda/matching.ml[1609,53601+11]..[1609,53601+15])
                                      Some
                                        expression (lambda/matching.ml[1609,53601+16]..[1609,53601+54])
                                          Pexp_record
                                          [
                                            "body" (lambda/matching.ml[1609,53601+18]..[1609,53601+22]) ghost
                                              expression (lambda/matching.ml[1609,53601+18]..[1609,53601+22])
                                                Pexp_ident "body" (lambda/matching.ml[1609,53601+18]..[1609,53601+22])
                                            "handlers" (lambda/matching.ml[1609,53601+24]..[1609,53601+32]) ghost
                                              expression (lambda/matching.ml[1609,53601+24]..[1609,53601+32])
                                                Pexp_ident "handlers" (lambda/matching.ml[1609,53601+24]..[1609,53601+32])
                                            "or_matrix" (lambda/matching.ml[1609,53601+34]..[1609,53601+43])
                                              expression (lambda/matching.ml[1609,53601+46]..[1609,53601+52])
                                                Pexp_ident "matrix" (lambda/matching.ml[1609,53601+46]..[1609,53601+52])
                                          ]
                                          None
                                  "matrix" (lambda/matching.ml[1610,53657+6]..[1610,53657+12]) ghost
                                    expression (lambda/matching.ml[1610,53657+6]..[1610,53657+12])
                                      Pexp_ident "matrix" (lambda/matching.ml[1610,53657+6]..[1610,53657+12])
                                  "top_default" (lambda/matching.ml[1611,53671+6]..[1611,53671+17])
                                    expression (lambda/matching.ml[1611,53671+20]..[1611,53671+23])
                                      Pexp_ident "def" (lambda/matching.ml[1611,53671+20]..[1611,53671+23])
                                ]
                                None
                              expression (lambda/matching.ml[1613,53702+4]..[1613,53702+5])
                                Pexp_ident "k" (lambda/matching.ml[1613,53702+4]..[1613,53702+5])
                            ]
    ]
  structure_item (lambda/matching.ml[1615,53711+0]..[1628,53987+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1615,53711+4]..[1615,53711+28])
          Ppat_var "dbg_split_and_precompile" (lambda/matching.ml[1615,53711+4]..[1615,53711+28])
        expression (lambda/matching.ml[1615,53711+29]..[1628,53987+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1615,53711+29]..[1615,53711+31])
            Ppat_var "pm" (lambda/matching.ml[1615,53711+29]..[1615,53711+31])
          expression (lambda/matching.ml[1615,53711+32]..[1628,53987+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1615,53711+32]..[1615,53711+36])
              Ppat_var "next" (lambda/matching.ml[1615,53711+32]..[1615,53711+36])
            expression (lambda/matching.ml[1615,53711+37]..[1628,53987+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1615,53711+37]..[1615,53711+42])
                Ppat_var "nexts" (lambda/matching.ml[1615,53711+37]..[1615,53711+42])
              expression (lambda/matching.ml[1616,53756+2]..[1628,53987+3])
                Pexp_ifthenelse
                expression (lambda/matching.ml[1617,53761+4]..[1623,53866+8])
                  Pexp_apply
                  expression (lambda/matching.ml[1618,53769+4]..[1618,53769+6])
                    Pexp_ident "&&" (lambda/matching.ml[1618,53769+4]..[1618,53769+6])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1617,53761+4]..[1617,53761+7])
                        Pexp_ident "dbg" (lambda/matching.ml[1617,53761+4]..[1617,53761+7])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1618,53769+7]..[1623,53866+8])
                        Pexp_apply
                        expression (lambda/matching.ml[1619,53789+7]..[1619,53789+9])
                          Pexp_ident "||" (lambda/matching.ml[1619,53789+7]..[1619,53789+9])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1618,53769+8]..[1618,53769+19])
                              Pexp_apply
                              expression (lambda/matching.ml[1618,53769+14]..[1618,53769+16])
                                Pexp_ident "<>" (lambda/matching.ml[1618,53769+14]..[1618,53769+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1618,53769+8]..[1618,53769+13])
                                    Pexp_ident "nexts" (lambda/matching.ml[1618,53769+8]..[1618,53769+13])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1618,53769+17]..[1618,53769+19])
                                    Pexp_construct "[]" (lambda/matching.ml[1618,53769+17]..[1618,53769+19])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1620,53799+7]..[1622,53846+19])
                              Pexp_match
                              expression (lambda/matching.ml[1620,53799+13]..[1620,53799+17])
                                Pexp_ident "next" (lambda/matching.ml[1620,53799+13]..[1620,53799+17])
                              [
                                <case>
                                  pattern (lambda/matching.ml[1621,53822+9]..[1621,53822+15])
                                    Ppat_construct "PmOr" (lambda/matching.ml[1621,53822+9]..[1621,53822+13])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1621,53822+14]..[1621,53822+15])
                                        Ppat_any
                                  expression (lambda/matching.ml[1621,53822+19]..[1621,53822+23])
                                    Pexp_construct "true" (lambda/matching.ml[1621,53822+19]..[1621,53822+23])
                                    None
                                <case>
                                  pattern (lambda/matching.ml[1622,53846+9]..[1622,53846+10])
                                    Ppat_any
                                  expression (lambda/matching.ml[1622,53846+14]..[1622,53846+19])
                                    Pexp_construct "false" (lambda/matching.ml[1622,53846+14]..[1622,53846+19])
                                    None
                              ]
                        ]
                  ]
                expression (lambda/matching.ml[1624,53875+7]..[1628,53987+3])
                  Pexp_sequence
                  expression (lambda/matching.ml[1625,53884+4]..[1625,53884+34])
                    Pexp_apply
                    expression (lambda/matching.ml[1625,53884+4]..[1625,53884+18])
                      Pexp_ident "Format.eprintf" (lambda/matching.ml[1625,53884+4]..[1625,53884+18])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1625,53884+19]..[1625,53884+34])
                          Pexp_constant PConst_string("** SPLIT **\n",(lambda/matching.ml[1625,53884+20]..[1625,53884+33]),None)
                    ]
                  expression (lambda/matching.ml[1626,53920+4]..[1627,53949+37])
                    Pexp_sequence
                    expression (lambda/matching.ml[1626,53920+4]..[1626,53920+27])
                      Pexp_apply
                      expression (lambda/matching.ml[1626,53920+4]..[1626,53920+13])
                        Pexp_ident "pretty_pm" (lambda/matching.ml[1626,53920+4]..[1626,53920+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1626,53920+14]..[1626,53920+27])
                            Pexp_apply
                            expression (lambda/matching.ml[1626,53920+15]..[1626,53920+23])
                              Pexp_ident "erase_pm" (lambda/matching.ml[1626,53920+15]..[1626,53920+23])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1626,53920+24]..[1626,53920+26])
                                  Pexp_ident "pm" (lambda/matching.ml[1626,53920+24]..[1626,53920+26])
                            ]
                      ]
                    expression (lambda/matching.ml[1627,53949+4]..[1627,53949+37])
                      Pexp_apply
                      expression (lambda/matching.ml[1627,53949+4]..[1627,53949+26])
                        Pexp_ident "pretty_precompiled_res" (lambda/matching.ml[1627,53949+4]..[1627,53949+26])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1627,53949+27]..[1627,53949+31])
                            Pexp_ident "next" (lambda/matching.ml[1627,53949+27]..[1627,53949+31])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1627,53949+32]..[1627,53949+37])
                            Pexp_ident "nexts" (lambda/matching.ml[1627,53949+32]..[1627,53949+37])
                      ]
                None
    ]
  structure_item (lambda/matching.ml[1630,53992+0]..[1633,54150+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1630,53992+4]..[1630,53992+35])
          Ppat_var "split_and_precompile_simplified" (lambda/matching.ml[1630,53992+4]..[1630,53992+35])
        expression (lambda/matching.ml[1630,53992+36]..[1633,54150+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1630,53992+36]..[1630,53992+38])
            Ppat_var "pm" (lambda/matching.ml[1630,53992+36]..[1630,53992+38])
          expression (lambda/matching.ml[1631,54033+2]..[1633,54150+15])
            Pexp_let Nonrec
            [
              <def>
                pattern (lambda/matching.ml[1631,54033+6]..[1631,54033+26])
                  Ppat_tuple
                  [
                    pattern (lambda/matching.ml[1631,54033+6]..[1631,54033+19])
                      Ppat_record Closed
                      [
                        "me" (lambda/matching.ml[1631,54033+8]..[1631,54033+10])
                          pattern (lambda/matching.ml[1631,54033+13]..[1631,54033+17])
                            Ppat_var "next" (lambda/matching.ml[1631,54033+13]..[1631,54033+17])
                      ]
                    pattern (lambda/matching.ml[1631,54033+21]..[1631,54033+26])
                      Ppat_var "nexts" (lambda/matching.ml[1631,54033+21]..[1631,54033+26])
                  ]
                expression (lambda/matching.ml[1631,54033+29]..[1631,54033+71])
                  Pexp_apply
                  expression (lambda/matching.ml[1631,54033+29]..[1631,54033+40])
                    Pexp_ident "split_no_or" (lambda/matching.ml[1631,54033+29]..[1631,54033+40])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1631,54033+41]..[1631,54033+49])
                        Pexp_field
                        expression (lambda/matching.ml[1631,54033+41]..[1631,54033+43])
                          Pexp_ident "pm" (lambda/matching.ml[1631,54033+41]..[1631,54033+43])
                        "cases" (lambda/matching.ml[1631,54033+44]..[1631,54033+49])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1631,54033+50]..[1631,54033+57])
                        Pexp_field
                        expression (lambda/matching.ml[1631,54033+50]..[1631,54033+52])
                          Pexp_ident "pm" (lambda/matching.ml[1631,54033+50]..[1631,54033+52])
                        "args" (lambda/matching.ml[1631,54033+53]..[1631,54033+57])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1631,54033+58]..[1631,54033+68])
                        Pexp_field
                        expression (lambda/matching.ml[1631,54033+58]..[1631,54033+60])
                          Pexp_ident "pm" (lambda/matching.ml[1631,54033+58]..[1631,54033+60])
                        "default" (lambda/matching.ml[1631,54033+61]..[1631,54033+68])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1631,54033+69]..[1631,54033+71])
                        Pexp_construct "[]" (lambda/matching.ml[1631,54033+69]..[1631,54033+71])
                        None
                  ]
            ]
            expression (lambda/matching.ml[1632,54108+2]..[1633,54150+15])
              Pexp_sequence
              expression (lambda/matching.ml[1632,54108+2]..[1632,54108+40])
                Pexp_apply
                expression (lambda/matching.ml[1632,54108+2]..[1632,54108+26])
                  Pexp_ident "dbg_split_and_precompile" (lambda/matching.ml[1632,54108+2]..[1632,54108+26])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1632,54108+27]..[1632,54108+29])
                      Pexp_ident "pm" (lambda/matching.ml[1632,54108+27]..[1632,54108+29])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1632,54108+30]..[1632,54108+34])
                      Pexp_ident "next" (lambda/matching.ml[1632,54108+30]..[1632,54108+34])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1632,54108+35]..[1632,54108+40])
                      Pexp_ident "nexts" (lambda/matching.ml[1632,54108+35]..[1632,54108+40])
                ]
              expression (lambda/matching.ml[1633,54150+2]..[1633,54150+15])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[1633,54150+3]..[1633,54150+7])
                    Pexp_ident "next" (lambda/matching.ml[1633,54150+3]..[1633,54150+7])
                  expression (lambda/matching.ml[1633,54150+9]..[1633,54150+14])
                    Pexp_ident "nexts" (lambda/matching.ml[1633,54150+9]..[1633,54150+14])
                ]
    ]
  structure_item (lambda/matching.ml[1635,54167+0]..[1638,54334+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1635,54167+4]..[1635,54167+40])
          Ppat_var "split_and_precompile_half_simplified" (lambda/matching.ml[1635,54167+4]..[1635,54167+40])
        expression (lambda/matching.ml[1635,54167+41]..[1638,54334+15]) ghost
          Pexp_fun
          Labelled "arg"
          None
          pattern (lambda/matching.ml[1635,54167+42]..[1635,54167+45])
            Ppat_var "arg" (lambda/matching.ml[1635,54167+42]..[1635,54167+45])
          expression (lambda/matching.ml[1635,54167+46]..[1638,54334+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1635,54167+46]..[1635,54167+48])
              Ppat_var "pm" (lambda/matching.ml[1635,54167+46]..[1635,54167+48])
            expression (lambda/matching.ml[1636,54218+2]..[1638,54334+15])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1636,54218+6]..[1636,54218+26])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[1636,54218+6]..[1636,54218+19])
                        Ppat_record Closed
                        [
                          "me" (lambda/matching.ml[1636,54218+8]..[1636,54218+10])
                            pattern (lambda/matching.ml[1636,54218+13]..[1636,54218+17])
                              Ppat_var "next" (lambda/matching.ml[1636,54218+13]..[1636,54218+17])
                        ]
                      pattern (lambda/matching.ml[1636,54218+21]..[1636,54218+26])
                        Ppat_var "nexts" (lambda/matching.ml[1636,54218+21]..[1636,54218+26])
                    ]
                  expression (lambda/matching.ml[1636,54218+29]..[1636,54218+70])
                    Pexp_apply
                    expression (lambda/matching.ml[1636,54218+29]..[1636,54218+37])
                      Pexp_ident "split_or" (lambda/matching.ml[1636,54218+29]..[1636,54218+37])
                    [
                      <arg>
                      Labelled "arg"
                        expression (lambda/matching.ml[1636,54218+39]..[1636,54218+42])
                          Pexp_ident "arg" (lambda/matching.ml[1636,54218+39]..[1636,54218+42])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1636,54218+43]..[1636,54218+51])
                          Pexp_field
                          expression (lambda/matching.ml[1636,54218+43]..[1636,54218+45])
                            Pexp_ident "pm" (lambda/matching.ml[1636,54218+43]..[1636,54218+45])
                          "cases" (lambda/matching.ml[1636,54218+46]..[1636,54218+51])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1636,54218+52]..[1636,54218+59])
                          Pexp_field
                          expression (lambda/matching.ml[1636,54218+52]..[1636,54218+54])
                            Pexp_ident "pm" (lambda/matching.ml[1636,54218+52]..[1636,54218+54])
                          "args" (lambda/matching.ml[1636,54218+55]..[1636,54218+59])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1636,54218+60]..[1636,54218+70])
                          Pexp_field
                          expression (lambda/matching.ml[1636,54218+60]..[1636,54218+62])
                            Pexp_ident "pm" (lambda/matching.ml[1636,54218+60]..[1636,54218+62])
                          "default" (lambda/matching.ml[1636,54218+63]..[1636,54218+70])
                    ]
              ]
              expression (lambda/matching.ml[1637,54292+2]..[1638,54334+15])
                Pexp_sequence
                expression (lambda/matching.ml[1637,54292+2]..[1637,54292+40])
                  Pexp_apply
                  expression (lambda/matching.ml[1637,54292+2]..[1637,54292+26])
                    Pexp_ident "dbg_split_and_precompile" (lambda/matching.ml[1637,54292+2]..[1637,54292+26])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1637,54292+27]..[1637,54292+29])
                        Pexp_ident "pm" (lambda/matching.ml[1637,54292+27]..[1637,54292+29])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1637,54292+30]..[1637,54292+34])
                        Pexp_ident "next" (lambda/matching.ml[1637,54292+30]..[1637,54292+34])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1637,54292+35]..[1637,54292+40])
                        Pexp_ident "nexts" (lambda/matching.ml[1637,54292+35]..[1637,54292+40])
                  ]
                expression (lambda/matching.ml[1638,54334+2]..[1638,54334+15])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[1638,54334+3]..[1638,54334+7])
                      Pexp_ident "next" (lambda/matching.ml[1638,54334+3]..[1638,54334+7])
                    expression (lambda/matching.ml[1638,54334+9]..[1638,54334+14])
                      Pexp_ident "nexts" (lambda/matching.ml[1638,54334+9]..[1638,54334+14])
                  ]
    ]
  structure_item (lambda/matching.ml[1642,54383+0]..[1646,54482+1])
    Pstr_type Rec
    [
      type_declaration "cell" (lambda/matching.ml[1642,54383+5]..[1642,54383+9]) (lambda/matching.ml[1642,54383+0]..[1646,54482+1])
        attribute "ocaml.doc"
          [
            structure_item (lambda/matching.ml[1647,54484+0]..[1648,54544+47])
              Pstr_eval
              expression (lambda/matching.ml[1647,54484+0]..[1648,54544+47])
                Pexp_constant PConst_string(" a submatrix after specializing by discriminant pattern;\n    [ctx] is the context shared by all rows. ",(lambda/matching.ml[1647,54484+0]..[1648,54544+47]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[1643,54397+2]..[1643,54397+39])
                Immutable
                "pm" (lambda/matching.ml[1643,54397+2]..[1643,54397+4])                core_type (lambda/matching.ml[1643,54397+7]..[1643,54397+38])
                  Ptyp_constr "pattern_matching" (lambda/matching.ml[1643,54397+22]..[1643,54397+38])
                  [
                    core_type (lambda/matching.ml[1643,54397+7]..[1643,54397+21])
                      Ptyp_constr "initial_clause" (lambda/matching.ml[1643,54397+7]..[1643,54397+21])
                      []
                  ]
              (lambda/matching.ml[1644,54437+2]..[1644,54437+18])
                Immutable
                "ctx" (lambda/matching.ml[1644,54437+2]..[1644,54437+5])                core_type (lambda/matching.ml[1644,54437+8]..[1644,54437+17])
                  Ptyp_constr "Context.t" (lambda/matching.ml[1644,54437+8]..[1644,54437+17])
                  []
              (lambda/matching.ml[1645,54456+2]..[1645,54456+25])
                Immutable
                "discr" (lambda/matching.ml[1645,54456+2]..[1645,54456+7])                core_type (lambda/matching.ml[1645,54456+10]..[1645,54456+25])
                  Ptyp_constr "Patterns.Head.t" (lambda/matching.ml[1645,54456+10]..[1645,54456+25])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[1650,54593+0]..[1656,54861+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1650,54593+4]..[1650,54593+17])
          Ppat_var "make_matching" (lambda/matching.ml[1650,54593+4]..[1650,54593+17])
        expression (lambda/matching.ml[1650,54593+18]..[1656,54861+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1650,54593+18]..[1650,54593+31])
            Ppat_var "get_expr_args" (lambda/matching.ml[1650,54593+18]..[1650,54593+31])
          expression (lambda/matching.ml[1650,54593+32]..[1656,54861+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1650,54593+32]..[1650,54593+36])
              Ppat_var "head" (lambda/matching.ml[1650,54593+32]..[1650,54593+36])
            expression (lambda/matching.ml[1650,54593+37]..[1656,54861+69]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1650,54593+37]..[1650,54593+40])
                Ppat_var "def" (lambda/matching.ml[1650,54593+37]..[1650,54593+40])
              expression (lambda/matching.ml[1650,54593+41]..[1656,54861+69]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1650,54593+41]..[1650,54593+44])
                  Ppat_var "ctx" (lambda/matching.ml[1650,54593+41]..[1650,54593+44])
                expression (lambda/matching.ml[1650,54593+47]..[1656,54861+69])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/matching.ml[1651,54649+4]..[1651,54649+6])
                        Ppat_construct "[]" (lambda/matching.ml[1651,54649+4]..[1651,54649+6])
                        None
                      expression (lambda/matching.ml[1651,54649+10]..[1651,54649+46])
                        Pexp_apply
                        expression (lambda/matching.ml[1651,54649+10]..[1651,54649+21])
                          Pexp_ident "fatal_error" (lambda/matching.ml[1651,54649+10]..[1651,54649+21])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1651,54649+22]..[1651,54649+46])
                              Pexp_constant PConst_string("Matching.make_matching",(lambda/matching.ml[1651,54649+23]..[1651,54649+45]),None)
                        ]
                    <case>
                      pattern (lambda/matching.ml[1652,54696+4]..[1652,54696+14])
                        Ppat_construct "::" (lambda/matching.ml[1652,54696+8]..[1652,54696+10])
                        Some
                          []
                          pattern (lambda/matching.ml[1652,54696+4]..[1652,54696+14]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[1652,54696+4]..[1652,54696+7])
                                Ppat_var "arg" (lambda/matching.ml[1652,54696+4]..[1652,54696+7])
                              pattern (lambda/matching.ml[1652,54696+11]..[1652,54696+14])
                                Ppat_var "rem" (lambda/matching.ml[1652,54696+11]..[1652,54696+14])
                            ]
                      expression (lambda/matching.ml[1653,54714+6]..[1656,54861+69])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[1653,54714+10]..[1653,54714+13])
                              Ppat_var "def" (lambda/matching.ml[1653,54714+10]..[1653,54714+13])
                            expression (lambda/matching.ml[1653,54714+16]..[1653,54714+55])
                              Pexp_apply
                              expression (lambda/matching.ml[1653,54714+16]..[1653,54714+46])
                                Pexp_ident "Default_environment.specialize" (lambda/matching.ml[1653,54714+16]..[1653,54714+46])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1653,54714+47]..[1653,54714+51])
                                    Pexp_ident "head" (lambda/matching.ml[1653,54714+47]..[1653,54714+51])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1653,54714+52]..[1653,54714+55])
                                    Pexp_ident "def" (lambda/matching.ml[1653,54714+52]..[1653,54714+55])
                              ]
                          <def>
                            pattern (lambda/matching.ml[1654,54770+10]..[1654,54770+14])
                              Ppat_var "args" (lambda/matching.ml[1654,54770+10]..[1654,54770+14])
                            expression (lambda/matching.ml[1654,54770+17]..[1654,54770+43])
                              Pexp_apply
                              expression (lambda/matching.ml[1654,54770+17]..[1654,54770+30])
                                Pexp_ident "get_expr_args" (lambda/matching.ml[1654,54770+17]..[1654,54770+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1654,54770+31]..[1654,54770+35])
                                    Pexp_ident "head" (lambda/matching.ml[1654,54770+31]..[1654,54770+35])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1654,54770+36]..[1654,54770+39])
                                    Pexp_ident "arg" (lambda/matching.ml[1654,54770+36]..[1654,54770+39])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1654,54770+40]..[1654,54770+43])
                                    Pexp_ident "rem" (lambda/matching.ml[1654,54770+40]..[1654,54770+43])
                              ]
                          <def>
                            pattern (lambda/matching.ml[1655,54814+10]..[1655,54814+13])
                              Ppat_var "ctx" (lambda/matching.ml[1655,54814+10]..[1655,54814+13])
                            expression (lambda/matching.ml[1655,54814+16]..[1655,54814+43])
                              Pexp_apply
                              expression (lambda/matching.ml[1655,54814+16]..[1655,54814+34])
                                Pexp_ident "Context.specialize" (lambda/matching.ml[1655,54814+16]..[1655,54814+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1655,54814+35]..[1655,54814+39])
                                    Pexp_ident "head" (lambda/matching.ml[1655,54814+35]..[1655,54814+39])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1655,54814+40]..[1655,54814+43])
                                    Pexp_ident "ctx" (lambda/matching.ml[1655,54814+40]..[1655,54814+43])
                              ]
                        ]
                        expression (lambda/matching.ml[1656,54861+6]..[1656,54861+69])
                          Pexp_record
                          [
                            "pm" (lambda/matching.ml[1656,54861+8]..[1656,54861+10])
                              expression (lambda/matching.ml[1656,54861+13]..[1656,54861+48])
                                Pexp_record
                                [
                                  "cases" (lambda/matching.ml[1656,54861+15]..[1656,54861+20])
                                    expression (lambda/matching.ml[1656,54861+23]..[1656,54861+25])
                                      Pexp_construct "[]" (lambda/matching.ml[1656,54861+23]..[1656,54861+25])
                                      None
                                  "args" (lambda/matching.ml[1656,54861+27]..[1656,54861+31]) ghost
                                    expression (lambda/matching.ml[1656,54861+27]..[1656,54861+31])
                                      Pexp_ident "args" (lambda/matching.ml[1656,54861+27]..[1656,54861+31])
                                  "default" (lambda/matching.ml[1656,54861+33]..[1656,54861+40])
                                    expression (lambda/matching.ml[1656,54861+43]..[1656,54861+46])
                                      Pexp_ident "def" (lambda/matching.ml[1656,54861+43]..[1656,54861+46])
                                ]
                                None
                            "ctx" (lambda/matching.ml[1656,54861+50]..[1656,54861+53]) ghost
                              expression (lambda/matching.ml[1656,54861+50]..[1656,54861+53])
                                Pexp_ident "ctx" (lambda/matching.ml[1656,54861+50]..[1656,54861+53])
                            "discr" (lambda/matching.ml[1656,54861+55]..[1656,54861+60])
                              expression (lambda/matching.ml[1656,54861+63]..[1656,54861+67])
                                Pexp_ident "head" (lambda/matching.ml[1656,54861+63]..[1656,54861+67])
                          ]
                          None
                  ]
    ]
  structure_item (lambda/matching.ml[1658,54932+0]..[1664,55180+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1658,54932+4]..[1658,54932+22])
          Ppat_var "make_line_matching" (lambda/matching.ml[1658,54932+4]..[1658,54932+22])
        expression (lambda/matching.ml[1658,54932+23]..[1664,55180+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1658,54932+23]..[1658,54932+36])
            Ppat_var "get_expr_args" (lambda/matching.ml[1658,54932+23]..[1658,54932+36])
          expression (lambda/matching.ml[1658,54932+37]..[1664,55180+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1658,54932+37]..[1658,54932+41])
              Ppat_var "head" (lambda/matching.ml[1658,54932+37]..[1658,54932+41])
            expression (lambda/matching.ml[1658,54932+42]..[1664,55180+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1658,54932+42]..[1658,54932+45])
                Ppat_var "def" (lambda/matching.ml[1658,54932+42]..[1658,54932+45])
              expression (lambda/matching.ml[1658,54932+48]..[1664,55180+7])
                Pexp_function
                [
                  <case>
                    pattern (lambda/matching.ml[1659,54989+4]..[1659,54989+6])
                      Ppat_construct "[]" (lambda/matching.ml[1659,54989+4]..[1659,54989+6])
                      None
                    expression (lambda/matching.ml[1659,54989+10]..[1659,54989+51])
                      Pexp_apply
                      expression (lambda/matching.ml[1659,54989+10]..[1659,54989+21])
                        Pexp_ident "fatal_error" (lambda/matching.ml[1659,54989+10]..[1659,54989+21])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1659,54989+22]..[1659,54989+51])
                            Pexp_constant PConst_string("Matching.make_line_matching",(lambda/matching.ml[1659,54989+23]..[1659,54989+50]),None)
                      ]
                  <case>
                    pattern (lambda/matching.ml[1660,55041+4]..[1660,55041+14])
                      Ppat_construct "::" (lambda/matching.ml[1660,55041+8]..[1660,55041+10])
                      Some
                        []
                        pattern (lambda/matching.ml[1660,55041+4]..[1660,55041+14]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[1660,55041+4]..[1660,55041+7])
                              Ppat_var "arg" (lambda/matching.ml[1660,55041+4]..[1660,55041+7])
                            pattern (lambda/matching.ml[1660,55041+11]..[1660,55041+14])
                              Ppat_var "rem" (lambda/matching.ml[1660,55041+11]..[1660,55041+14])
                          ]
                    expression (lambda/matching.ml[1661,55059+6]..[1664,55180+7])
                      Pexp_record
                      [
                        "cases" (lambda/matching.ml[1661,55059+8]..[1661,55059+13])
                          expression (lambda/matching.ml[1661,55059+16]..[1661,55059+18])
                            Pexp_construct "[]" (lambda/matching.ml[1661,55059+16]..[1661,55059+18])
                            None
                        "args" (lambda/matching.ml[1662,55079+8]..[1662,55079+12])
                          expression (lambda/matching.ml[1662,55079+15]..[1662,55079+41])
                            Pexp_apply
                            expression (lambda/matching.ml[1662,55079+15]..[1662,55079+28])
                              Pexp_ident "get_expr_args" (lambda/matching.ml[1662,55079+15]..[1662,55079+28])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1662,55079+29]..[1662,55079+33])
                                  Pexp_ident "head" (lambda/matching.ml[1662,55079+29]..[1662,55079+33])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1662,55079+34]..[1662,55079+37])
                                  Pexp_ident "arg" (lambda/matching.ml[1662,55079+34]..[1662,55079+37])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1662,55079+38]..[1662,55079+41])
                                  Pexp_ident "rem" (lambda/matching.ml[1662,55079+38]..[1662,55079+41])
                            ]
                        "default" (lambda/matching.ml[1663,55122+8]..[1663,55122+15])
                          expression (lambda/matching.ml[1663,55122+18]..[1663,55122+57])
                            Pexp_apply
                            expression (lambda/matching.ml[1663,55122+18]..[1663,55122+48])
                              Pexp_ident "Default_environment.specialize" (lambda/matching.ml[1663,55122+18]..[1663,55122+48])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1663,55122+49]..[1663,55122+53])
                                  Pexp_ident "head" (lambda/matching.ml[1663,55122+49]..[1663,55122+53])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1663,55122+54]..[1663,55122+57])
                                  Pexp_ident "def" (lambda/matching.ml[1663,55122+54]..[1663,55122+57])
                            ]
                      ]
                      None
                ]
    ]
  structure_item (lambda/matching.ml[1666,55189+0]..[1669,55272+1])
    Pstr_type Rec
    [
      type_declaration "division" (lambda/matching.ml[1666,55189+8]..[1666,55189+16]) (lambda/matching.ml[1666,55189+0]..[1669,55272+1])
        ptype_params =
          [
            core_type (lambda/matching.ml[1666,55189+5]..[1666,55189+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/matching.ml[1667,55210+2]..[1667,55210+34])
                Immutable
                "args" (lambda/matching.ml[1667,55210+2]..[1667,55210+6])                core_type (lambda/matching.ml[1667,55210+9]..[1667,55210+33])
                  Ptyp_constr "list" (lambda/matching.ml[1667,55210+29]..[1667,55210+33])
                  [
                    core_type (lambda/matching.ml[1667,55210+10]..[1667,55210+27])
                      Ptyp_tuple
                      [
                        core_type (lambda/matching.ml[1667,55210+10]..[1667,55210+16])
                          Ptyp_constr "lambda" (lambda/matching.ml[1667,55210+10]..[1667,55210+16])
                          []
                        core_type (lambda/matching.ml[1667,55210+19]..[1667,55210+27])
                          Ptyp_constr "let_kind" (lambda/matching.ml[1667,55210+19]..[1667,55210+27])
                          []
                      ]
                  ]
              (lambda/matching.ml[1668,55245+2]..[1668,55245+26])
                Immutable
                "cells" (lambda/matching.ml[1668,55245+2]..[1668,55245+7])                core_type (lambda/matching.ml[1668,55245+10]..[1668,55245+26])
                  Ptyp_constr "list" (lambda/matching.ml[1668,55245+22]..[1668,55245+26])
                  [
                    core_type (lambda/matching.ml[1668,55245+11]..[1668,55245+20])
                      Ptyp_tuple
                      [
                        core_type (lambda/matching.ml[1668,55245+11]..[1668,55245+13])
                          Ptyp_var a
                        core_type (lambda/matching.ml[1668,55245+16]..[1668,55245+20])
                          Ptyp_constr "cell" (lambda/matching.ml[1668,55245+16]..[1668,55245+20])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[1671,55275+0]..[1682,55684+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1671,55275+4]..[1671,55275+14])
          Ppat_var "add_in_div" (lambda/matching.ml[1671,55275+4]..[1671,55275+14])
        expression (lambda/matching.ml[1671,55275+15]..[1682,55684+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1671,55275+15]..[1671,55275+32])
            Ppat_var "make_matching_fun" (lambda/matching.ml[1671,55275+15]..[1671,55275+32])
          expression (lambda/matching.ml[1671,55275+33]..[1682,55684+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1671,55275+33]..[1671,55275+39])
              Ppat_var "eq_key" (lambda/matching.ml[1671,55275+33]..[1671,55275+39])
            expression (lambda/matching.ml[1671,55275+40]..[1682,55684+25]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1671,55275+40]..[1671,55275+43])
                Ppat_var "key" (lambda/matching.ml[1671,55275+40]..[1671,55275+43])
              expression (lambda/matching.ml[1671,55275+44]..[1682,55684+25]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1671,55275+44]..[1671,55275+55])
                  Ppat_var "patl_action" (lambda/matching.ml[1671,55275+44]..[1671,55275+55])
                expression (lambda/matching.ml[1671,55275+56]..[1682,55684+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1671,55275+56]..[1671,55275+64])
                    Ppat_var "division" (lambda/matching.ml[1671,55275+56]..[1671,55275+64])
                  expression (lambda/matching.ml[1672,55342+2]..[1682,55684+25])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[1672,55342+6]..[1672,55342+11])
                          Ppat_var "cells" (lambda/matching.ml[1672,55342+6]..[1672,55342+11])
                        expression (lambda/matching.ml[1673,55356+4]..[1680,55656+22])
                          Pexp_match
                          expression (lambda/matching.ml[1673,55356+10]..[1673,55356+67])
                            Pexp_apply
                            expression (lambda/matching.ml[1673,55356+10]..[1673,55356+23])
                              Pexp_ident "List.find_opt" (lambda/matching.ml[1673,55356+10]..[1673,55356+23])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1673,55356+24]..[1673,55356+52])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[1673,55356+29]..[1673,55356+35])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1673,55356+30]..[1673,55356+31])
                                        Ppat_var "k" (lambda/matching.ml[1673,55356+30]..[1673,55356+31])
                                      pattern (lambda/matching.ml[1673,55356+33]..[1673,55356+34])
                                        Ppat_any
                                    ]
                                  expression (lambda/matching.ml[1673,55356+39]..[1673,55356+51])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1673,55356+39]..[1673,55356+45])
                                      Pexp_ident "eq_key" (lambda/matching.ml[1673,55356+39]..[1673,55356+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1673,55356+46]..[1673,55356+49])
                                          Pexp_ident "key" (lambda/matching.ml[1673,55356+46]..[1673,55356+49])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1673,55356+50]..[1673,55356+51])
                                          Pexp_ident "k" (lambda/matching.ml[1673,55356+50]..[1673,55356+51])
                                    ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1673,55356+53]..[1673,55356+67])
                                  Pexp_field
                                  expression (lambda/matching.ml[1673,55356+53]..[1673,55356+61])
                                    Pexp_ident "division" (lambda/matching.ml[1673,55356+53]..[1673,55356+61])
                                  "cells" (lambda/matching.ml[1673,55356+62]..[1673,55356+67])
                            ]
                          [
                            <case>
                              pattern (lambda/matching.ml[1674,55429+6]..[1674,55429+10])
                                Ppat_construct "None" (lambda/matching.ml[1674,55429+6]..[1674,55429+10])
                                None
                              expression (lambda/matching.ml[1675,55443+8]..[1677,55539+37])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[1675,55443+12]..[1675,55443+16])
                                      Ppat_var "cell" (lambda/matching.ml[1675,55443+12]..[1675,55443+16])
                                    expression (lambda/matching.ml[1675,55443+19]..[1675,55443+50])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1675,55443+19]..[1675,55443+36])
                                        Pexp_ident "make_matching_fun" (lambda/matching.ml[1675,55443+19]..[1675,55443+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1675,55443+37]..[1675,55443+50])
                                            Pexp_field
                                            expression (lambda/matching.ml[1675,55443+37]..[1675,55443+45])
                                              Pexp_ident "division" (lambda/matching.ml[1675,55443+37]..[1675,55443+45])
                                            "args" (lambda/matching.ml[1675,55443+46]..[1675,55443+50])
                                      ]
                                ]
                                expression (lambda/matching.ml[1676,55497+8]..[1677,55539+37])
                                  Pexp_sequence
                                  expression (lambda/matching.ml[1676,55497+8]..[1676,55497+40])
                                    Pexp_setfield
                                    expression (lambda/matching.ml[1676,55497+8]..[1676,55497+15])
                                      Pexp_field
                                      expression (lambda/matching.ml[1676,55497+8]..[1676,55497+12])
                                        Pexp_ident "cell" (lambda/matching.ml[1676,55497+8]..[1676,55497+12])
                                      "pm" (lambda/matching.ml[1676,55497+13]..[1676,55497+15])
                                    "cases" (lambda/matching.ml[1676,55497+16]..[1676,55497+21])
                                    expression (lambda/matching.ml[1676,55497+25]..[1676,55497+40])
                                      Pexp_construct "::" (lambda/matching.ml[1676,55497+27]..[1676,55497+40]) ghost
                                      Some
                                        expression (lambda/matching.ml[1676,55497+27]..[1676,55497+40]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[1676,55497+27]..[1676,55497+38])
                                              Pexp_ident "patl_action" (lambda/matching.ml[1676,55497+27]..[1676,55497+38])
                                            expression (lambda/matching.ml[1676,55497+39]..[1676,55497+40]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[1676,55497+39]..[1676,55497+40]) ghost
                                              None
                                          ]
                                  expression (lambda/matching.ml[1677,55539+8]..[1677,55539+37])
                                    Pexp_construct "::" (lambda/matching.ml[1677,55539+20]..[1677,55539+22])
                                    Some
                                      expression (lambda/matching.ml[1677,55539+8]..[1677,55539+37]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1677,55539+8]..[1677,55539+19])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[1677,55539+9]..[1677,55539+12])
                                                Pexp_ident "key" (lambda/matching.ml[1677,55539+9]..[1677,55539+12])
                                              expression (lambda/matching.ml[1677,55539+14]..[1677,55539+18])
                                                Pexp_ident "cell" (lambda/matching.ml[1677,55539+14]..[1677,55539+18])
                                            ]
                                          expression (lambda/matching.ml[1677,55539+23]..[1677,55539+37])
                                            Pexp_field
                                            expression (lambda/matching.ml[1677,55539+23]..[1677,55539+31])
                                              Pexp_ident "division" (lambda/matching.ml[1677,55539+23]..[1677,55539+31])
                                            "cells" (lambda/matching.ml[1677,55539+32]..[1677,55539+37])
                                        ]
                            <case>
                              pattern (lambda/matching.ml[1678,55577+6]..[1678,55577+20])
                                Ppat_construct "Some" (lambda/matching.ml[1678,55577+6]..[1678,55577+10])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1678,55577+11]..[1678,55577+20])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1678,55577+12]..[1678,55577+13])
                                        Ppat_any
                                      pattern (lambda/matching.ml[1678,55577+15]..[1678,55577+19])
                                        Ppat_var "cell" (lambda/matching.ml[1678,55577+15]..[1678,55577+19])
                                    ]
                              expression (lambda/matching.ml[1679,55601+8]..[1680,55656+22])
                                Pexp_sequence
                                expression (lambda/matching.ml[1679,55601+8]..[1679,55601+53])
                                  Pexp_setfield
                                  expression (lambda/matching.ml[1679,55601+8]..[1679,55601+15])
                                    Pexp_field
                                    expression (lambda/matching.ml[1679,55601+8]..[1679,55601+12])
                                      Pexp_ident "cell" (lambda/matching.ml[1679,55601+8]..[1679,55601+12])
                                    "pm" (lambda/matching.ml[1679,55601+13]..[1679,55601+15])
                                  "cases" (lambda/matching.ml[1679,55601+16]..[1679,55601+21])
                                  expression (lambda/matching.ml[1679,55601+25]..[1679,55601+53])
                                    Pexp_construct "::" (lambda/matching.ml[1679,55601+37]..[1679,55601+39])
                                    Some
                                      expression (lambda/matching.ml[1679,55601+25]..[1679,55601+53]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1679,55601+25]..[1679,55601+36])
                                            Pexp_ident "patl_action" (lambda/matching.ml[1679,55601+25]..[1679,55601+36])
                                          expression (lambda/matching.ml[1679,55601+40]..[1679,55601+53])
                                            Pexp_field
                                            expression (lambda/matching.ml[1679,55601+40]..[1679,55601+47])
                                              Pexp_field
                                              expression (lambda/matching.ml[1679,55601+40]..[1679,55601+44])
                                                Pexp_ident "cell" (lambda/matching.ml[1679,55601+40]..[1679,55601+44])
                                              "pm" (lambda/matching.ml[1679,55601+45]..[1679,55601+47])
                                            "cases" (lambda/matching.ml[1679,55601+48]..[1679,55601+53])
                                        ]
                                expression (lambda/matching.ml[1680,55656+8]..[1680,55656+22])
                                  Pexp_field
                                  expression (lambda/matching.ml[1680,55656+8]..[1680,55656+16])
                                    Pexp_ident "division" (lambda/matching.ml[1680,55656+8]..[1680,55656+16])
                                  "cells" (lambda/matching.ml[1680,55656+17]..[1680,55656+22])
                          ]
                    ]
                    expression (lambda/matching.ml[1682,55684+2]..[1682,55684+25])
                      Pexp_record
                      [
                        "cells" (lambda/matching.ml[1682,55684+18]..[1682,55684+23]) ghost
                          expression (lambda/matching.ml[1682,55684+18]..[1682,55684+23])
                            Pexp_ident "cells" (lambda/matching.ml[1682,55684+18]..[1682,55684+23])
                      ]
                      Some
                        expression (lambda/matching.ml[1682,55684+4]..[1682,55684+12])
                          Pexp_ident "division" (lambda/matching.ml[1682,55684+4]..[1682,55684+12])
    ]
  structure_item (lambda/matching.ml[1684,55711+0]..[1695,56064+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1684,55711+4]..[1684,55711+10])
          Ppat_var "divide" (lambda/matching.ml[1684,55711+4]..[1684,55711+10])
        expression (lambda/matching.ml[1684,55711+11]..[1695,56064+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1684,55711+11]..[1684,55711+24])
            Ppat_var "get_expr_args" (lambda/matching.ml[1684,55711+11]..[1684,55711+24])
          expression (lambda/matching.ml[1684,55711+25]..[1695,56064+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1684,55711+25]..[1684,55711+31])
              Ppat_var "eq_key" (lambda/matching.ml[1684,55711+25]..[1684,55711+31])
            expression (lambda/matching.ml[1684,55711+32]..[1695,56064+61]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1684,55711+32]..[1684,55711+39])
                Ppat_var "get_key" (lambda/matching.ml[1684,55711+32]..[1684,55711+39])
              expression (lambda/matching.ml[1684,55711+40]..[1695,56064+61]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1684,55711+40]..[1684,55711+52])
                  Ppat_var "get_pat_args" (lambda/matching.ml[1684,55711+40]..[1684,55711+52])
                expression (lambda/matching.ml[1684,55711+53]..[1695,56064+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1684,55711+53]..[1684,55711+56])
                    Ppat_var "ctx" (lambda/matching.ml[1684,55711+53]..[1684,55711+56])
                  expression (lambda/matching.ml[1685,55768+4]..[1695,56064+61]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1685,55768+4]..[1685,55768+41])
                      Ppat_constraint
                      pattern (lambda/matching.ml[1685,55768+5]..[1685,55768+7])
                        Ppat_var "pm" (lambda/matching.ml[1685,55768+5]..[1685,55768+7])
                      core_type (lambda/matching.ml[1685,55768+10]..[1685,55768+40])
                        Ptyp_constr "pattern_matching" (lambda/matching.ml[1685,55768+24]..[1685,55768+40])
                        [
                          core_type (lambda/matching.ml[1685,55768+10]..[1685,55768+23])
                            Ptyp_constr "Simple.clause" (lambda/matching.ml[1685,55768+10]..[1685,55768+23])
                            []
                        ]
                    expression (lambda/matching.ml[1686,55812+2]..[1695,56064+61])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1686,55812+6]..[1686,55812+9])
                            Ppat_var "add" (lambda/matching.ml[1686,55812+6]..[1686,55812+9])
                          expression (lambda/matching.ml[1686,55812+10]..[1693,56044+14]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1686,55812+10]..[1686,55812+29])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1686,55812+11]..[1686,55812+20])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1686,55812+12]..[1686,55812+13])
                                      Ppat_var "p" (lambda/matching.ml[1686,55812+12]..[1686,55812+13])
                                    pattern (lambda/matching.ml[1686,55812+15]..[1686,55812+19])
                                      Ppat_var "patl" (lambda/matching.ml[1686,55812+15]..[1686,55812+19])
                                  ]
                                pattern (lambda/matching.ml[1686,55812+22]..[1686,55812+28])
                                  Ppat_var "action" (lambda/matching.ml[1686,55812+22]..[1686,55812+28])
                              ]
                            expression (lambda/matching.ml[1686,55812+30]..[1693,56044+14]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[1686,55812+30]..[1686,55812+38])
                                Ppat_var "division" (lambda/matching.ml[1686,55812+30]..[1686,55812+38])
                              expression (lambda/matching.ml[1687,55853+4]..[1693,56044+14])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[1687,55853+8]..[1687,55853+10])
                                      Ppat_var "ph" (lambda/matching.ml[1687,55853+8]..[1687,55853+10])
                                    expression (lambda/matching.ml[1687,55853+13]..[1687,55853+26])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1687,55853+13]..[1687,55853+24])
                                        Pexp_ident "Simple.head" (lambda/matching.ml[1687,55853+13]..[1687,55853+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1687,55853+25]..[1687,55853+26])
                                            Pexp_ident "p" (lambda/matching.ml[1687,55853+25]..[1687,55853+26])
                                      ]
                                ]
                                expression (lambda/matching.ml[1688,55883+4]..[1693,56044+14])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[1688,55883+8]..[1688,55883+9])
                                        Ppat_var "p" (lambda/matching.ml[1688,55883+8]..[1688,55883+9])
                                      expression (lambda/matching.ml[1688,55883+12]..[1688,55883+27])
                                        Pexp_apply
                                        expression (lambda/matching.ml[1688,55883+12]..[1688,55883+25])
                                          Pexp_ident "General.erase" (lambda/matching.ml[1688,55883+12]..[1688,55883+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1688,55883+26]..[1688,55883+27])
                                              Pexp_ident "p" (lambda/matching.ml[1688,55883+26]..[1688,55883+27])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[1689,55914+4]..[1693,56044+14])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1689,55914+4]..[1689,55914+14])
                                      Pexp_ident "add_in_div" (lambda/matching.ml[1689,55914+4]..[1689,55914+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1690,55929+6]..[1690,55929+53])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1690,55929+7]..[1690,55929+20])
                                            Pexp_ident "make_matching" (lambda/matching.ml[1690,55929+7]..[1690,55929+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1690,55929+21]..[1690,55929+34])
                                                Pexp_ident "get_expr_args" (lambda/matching.ml[1690,55929+21]..[1690,55929+34])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1690,55929+35]..[1690,55929+37])
                                                Pexp_ident "ph" (lambda/matching.ml[1690,55929+35]..[1690,55929+37])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1690,55929+38]..[1690,55929+48])
                                                Pexp_field
                                                expression (lambda/matching.ml[1690,55929+38]..[1690,55929+40])
                                                  Pexp_ident "pm" (lambda/matching.ml[1690,55929+38]..[1690,55929+40])
                                                "default" (lambda/matching.ml[1690,55929+41]..[1690,55929+48])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1690,55929+49]..[1690,55929+52])
                                                Pexp_ident "ctx" (lambda/matching.ml[1690,55929+49]..[1690,55929+52])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1691,55983+6]..[1691,55983+12])
                                          Pexp_ident "eq_key" (lambda/matching.ml[1691,55983+6]..[1691,55983+12])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1691,55983+13]..[1691,55983+24])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1691,55983+14]..[1691,55983+21])
                                            Pexp_ident "get_key" (lambda/matching.ml[1691,55983+14]..[1691,55983+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1691,55983+22]..[1691,55983+23])
                                                Pexp_ident "p" (lambda/matching.ml[1691,55983+22]..[1691,55983+23])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1692,56008+6]..[1692,56008+35])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[1692,56008+7]..[1692,56008+26])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1692,56008+7]..[1692,56008+19])
                                                Pexp_ident "get_pat_args" (lambda/matching.ml[1692,56008+7]..[1692,56008+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1692,56008+20]..[1692,56008+21])
                                                    Pexp_ident "p" (lambda/matching.ml[1692,56008+20]..[1692,56008+21])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1692,56008+22]..[1692,56008+26])
                                                    Pexp_ident "patl" (lambda/matching.ml[1692,56008+22]..[1692,56008+26])
                                              ]
                                            expression (lambda/matching.ml[1692,56008+28]..[1692,56008+34])
                                              Pexp_ident "action" (lambda/matching.ml[1692,56008+28]..[1692,56008+34])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1693,56044+6]..[1693,56044+14])
                                          Pexp_ident "division" (lambda/matching.ml[1693,56044+6]..[1693,56044+14])
                                    ]
                      ]
                      expression (lambda/matching.ml[1695,56064+2]..[1695,56064+61])
                        Pexp_apply
                        expression (lambda/matching.ml[1695,56064+2]..[1695,56064+17])
                          Pexp_ident "List.fold_right" (lambda/matching.ml[1695,56064+2]..[1695,56064+17])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1695,56064+18]..[1695,56064+21])
                              Pexp_ident "add" (lambda/matching.ml[1695,56064+18]..[1695,56064+21])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1695,56064+22]..[1695,56064+30])
                              Pexp_field
                              expression (lambda/matching.ml[1695,56064+22]..[1695,56064+24])
                                Pexp_ident "pm" (lambda/matching.ml[1695,56064+22]..[1695,56064+24])
                              "cases" (lambda/matching.ml[1695,56064+25]..[1695,56064+30])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1695,56064+31]..[1695,56064+61])
                              Pexp_record
                              [
                                "args" (lambda/matching.ml[1695,56064+33]..[1695,56064+37])
                                  expression (lambda/matching.ml[1695,56064+40]..[1695,56064+47])
                                    Pexp_field
                                    expression (lambda/matching.ml[1695,56064+40]..[1695,56064+42])
                                      Pexp_ident "pm" (lambda/matching.ml[1695,56064+40]..[1695,56064+42])
                                    "args" (lambda/matching.ml[1695,56064+43]..[1695,56064+47])
                                "cells" (lambda/matching.ml[1695,56064+49]..[1695,56064+54])
                                  expression (lambda/matching.ml[1695,56064+57]..[1695,56064+59])
                                    Pexp_construct "[]" (lambda/matching.ml[1695,56064+57]..[1695,56064+59])
                                    None
                              ]
                              None
                        ]
    ]
  structure_item (lambda/matching.ml[1697,56127+0]..[1699,56196+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1697,56127+4]..[1697,56127+12])
          Ppat_var "add_line" (lambda/matching.ml[1697,56127+4]..[1697,56127+12])
        expression (lambda/matching.ml[1697,56127+13]..[1699,56196+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1697,56127+13]..[1697,56127+24])
            Ppat_var "patl_action" (lambda/matching.ml[1697,56127+13]..[1697,56127+24])
          expression (lambda/matching.ml[1697,56127+25]..[1699,56196+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1697,56127+25]..[1697,56127+27])
              Ppat_var "pm" (lambda/matching.ml[1697,56127+25]..[1697,56127+27])
            expression (lambda/matching.ml[1698,56157+2]..[1699,56196+4])
              Pexp_sequence
              expression (lambda/matching.ml[1698,56157+2]..[1698,56157+37])
                Pexp_setfield
                expression (lambda/matching.ml[1698,56157+2]..[1698,56157+4])
                  Pexp_ident "pm" (lambda/matching.ml[1698,56157+2]..[1698,56157+4])
                "cases" (lambda/matching.ml[1698,56157+5]..[1698,56157+10])
                expression (lambda/matching.ml[1698,56157+14]..[1698,56157+37])
                  Pexp_construct "::" (lambda/matching.ml[1698,56157+26]..[1698,56157+28])
                  Some
                    expression (lambda/matching.ml[1698,56157+14]..[1698,56157+37]) ghost
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[1698,56157+14]..[1698,56157+25])
                          Pexp_ident "patl_action" (lambda/matching.ml[1698,56157+14]..[1698,56157+25])
                        expression (lambda/matching.ml[1698,56157+29]..[1698,56157+37])
                          Pexp_field
                          expression (lambda/matching.ml[1698,56157+29]..[1698,56157+31])
                            Pexp_ident "pm" (lambda/matching.ml[1698,56157+29]..[1698,56157+31])
                          "cases" (lambda/matching.ml[1698,56157+32]..[1698,56157+37])
                      ]
              expression (lambda/matching.ml[1699,56196+2]..[1699,56196+4])
                Pexp_ident "pm" (lambda/matching.ml[1699,56196+2]..[1699,56196+4])
    ]
  structure_item (lambda/matching.ml[1701,56202+0]..[1711,56554+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1701,56202+4]..[1701,56202+15])
          Ppat_var "divide_line" (lambda/matching.ml[1701,56202+4]..[1701,56202+15])
        expression (lambda/matching.ml[1701,56202+16]..[1711,56554+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1701,56202+16]..[1701,56202+24])
            Ppat_var "make_ctx" (lambda/matching.ml[1701,56202+16]..[1701,56202+24])
          expression (lambda/matching.ml[1701,56202+25]..[1711,56554+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1701,56202+25]..[1701,56202+38])
              Ppat_var "get_expr_args" (lambda/matching.ml[1701,56202+25]..[1701,56202+38])
            expression (lambda/matching.ml[1701,56202+39]..[1711,56554+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1701,56202+39]..[1701,56202+51])
                Ppat_var "get_pat_args" (lambda/matching.ml[1701,56202+39]..[1701,56202+51])
              expression (lambda/matching.ml[1701,56202+52]..[1711,56554+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1701,56202+52]..[1701,56202+57])
                  Ppat_var "discr" (lambda/matching.ml[1701,56202+52]..[1701,56202+57])
                expression (lambda/matching.ml[1701,56202+58]..[1711,56554+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[1701,56202+58]..[1701,56202+61])
                    Ppat_var "ctx" (lambda/matching.ml[1701,56202+58]..[1701,56202+61])
                  expression (lambda/matching.ml[1702,56264+4]..[1711,56554+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1702,56264+4]..[1702,56264+41])
                      Ppat_constraint
                      pattern (lambda/matching.ml[1702,56264+5]..[1702,56264+7])
                        Ppat_var "pm" (lambda/matching.ml[1702,56264+5]..[1702,56264+7])
                      core_type (lambda/matching.ml[1702,56264+10]..[1702,56264+40])
                        Ptyp_constr "pattern_matching" (lambda/matching.ml[1702,56264+24]..[1702,56264+40])
                        [
                          core_type (lambda/matching.ml[1702,56264+10]..[1702,56264+23])
                            Ptyp_constr "Simple.clause" (lambda/matching.ml[1702,56264+10]..[1702,56264+23])
                            []
                        ]
                    expression (lambda/matching.ml[1703,56308+2]..[1711,56554+35])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1703,56308+6]..[1703,56308+9])
                            Ppat_var "add" (lambda/matching.ml[1703,56308+6]..[1703,56308+9])
                          expression (lambda/matching.ml[1703,56308+10]..[1705,56381+52]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1703,56308+10]..[1703,56308+29])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1703,56308+11]..[1703,56308+20])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[1703,56308+12]..[1703,56308+13])
                                      Ppat_var "p" (lambda/matching.ml[1703,56308+12]..[1703,56308+13])
                                    pattern (lambda/matching.ml[1703,56308+15]..[1703,56308+19])
                                      Ppat_var "patl" (lambda/matching.ml[1703,56308+15]..[1703,56308+19])
                                  ]
                                pattern (lambda/matching.ml[1703,56308+22]..[1703,56308+28])
                                  Ppat_var "action" (lambda/matching.ml[1703,56308+22]..[1703,56308+28])
                              ]
                            expression (lambda/matching.ml[1703,56308+30]..[1705,56381+52]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[1703,56308+30]..[1703,56308+39])
                                Ppat_var "submatrix" (lambda/matching.ml[1703,56308+30]..[1703,56308+39])
                              expression (lambda/matching.ml[1704,56350+4]..[1705,56381+52])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[1704,56350+8]..[1704,56350+9])
                                      Ppat_var "p" (lambda/matching.ml[1704,56350+8]..[1704,56350+9])
                                    expression (lambda/matching.ml[1704,56350+12]..[1704,56350+27])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1704,56350+12]..[1704,56350+25])
                                        Pexp_ident "General.erase" (lambda/matching.ml[1704,56350+12]..[1704,56350+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1704,56350+26]..[1704,56350+27])
                                            Pexp_ident "p" (lambda/matching.ml[1704,56350+26]..[1704,56350+27])
                                      ]
                                ]
                                expression (lambda/matching.ml[1705,56381+4]..[1705,56381+52])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1705,56381+4]..[1705,56381+12])
                                    Pexp_ident "add_line" (lambda/matching.ml[1705,56381+4]..[1705,56381+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1705,56381+13]..[1705,56381+42])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1705,56381+14]..[1705,56381+33])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1705,56381+14]..[1705,56381+26])
                                              Pexp_ident "get_pat_args" (lambda/matching.ml[1705,56381+14]..[1705,56381+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1705,56381+27]..[1705,56381+28])
                                                  Pexp_ident "p" (lambda/matching.ml[1705,56381+27]..[1705,56381+28])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1705,56381+29]..[1705,56381+33])
                                                  Pexp_ident "patl" (lambda/matching.ml[1705,56381+29]..[1705,56381+33])
                                            ]
                                          expression (lambda/matching.ml[1705,56381+35]..[1705,56381+41])
                                            Pexp_ident "action" (lambda/matching.ml[1705,56381+35]..[1705,56381+41])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1705,56381+43]..[1705,56381+52])
                                        Pexp_ident "submatrix" (lambda/matching.ml[1705,56381+43]..[1705,56381+52])
                                  ]
                      ]
                      expression (lambda/matching.ml[1707,56439+2]..[1711,56554+35])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[1707,56439+6]..[1707,56439+8])
                              Ppat_var "pm" (lambda/matching.ml[1707,56439+6]..[1707,56439+8])
                            expression (lambda/matching.ml[1708,56450+4]..[1709,56483+65])
                              Pexp_apply
                              expression (lambda/matching.ml[1708,56450+4]..[1708,56450+19])
                                Pexp_ident "List.fold_right" (lambda/matching.ml[1708,56450+4]..[1708,56450+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1708,56450+20]..[1708,56450+23])
                                    Pexp_ident "add" (lambda/matching.ml[1708,56450+20]..[1708,56450+23])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1708,56450+24]..[1708,56450+32])
                                    Pexp_field
                                    expression (lambda/matching.ml[1708,56450+24]..[1708,56450+26])
                                      Pexp_ident "pm" (lambda/matching.ml[1708,56450+24]..[1708,56450+26])
                                    "cases" (lambda/matching.ml[1708,56450+27]..[1708,56450+32])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1709,56483+6]..[1709,56483+65])
                                    Pexp_apply
                                    expression (lambda/matching.ml[1709,56483+7]..[1709,56483+25])
                                      Pexp_ident "make_line_matching" (lambda/matching.ml[1709,56483+7]..[1709,56483+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1709,56483+26]..[1709,56483+39])
                                          Pexp_ident "get_expr_args" (lambda/matching.ml[1709,56483+26]..[1709,56483+39])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1709,56483+40]..[1709,56483+45])
                                          Pexp_ident "discr" (lambda/matching.ml[1709,56483+40]..[1709,56483+45])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1709,56483+46]..[1709,56483+56])
                                          Pexp_field
                                          expression (lambda/matching.ml[1709,56483+46]..[1709,56483+48])
                                            Pexp_ident "pm" (lambda/matching.ml[1709,56483+46]..[1709,56483+48])
                                          "default" (lambda/matching.ml[1709,56483+49]..[1709,56483+56])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[1709,56483+57]..[1709,56483+64])
                                          Pexp_field
                                          expression (lambda/matching.ml[1709,56483+57]..[1709,56483+59])
                                            Pexp_ident "pm" (lambda/matching.ml[1709,56483+57]..[1709,56483+59])
                                          "args" (lambda/matching.ml[1709,56483+60]..[1709,56483+64])
                                    ]
                              ]
                        ]
                        expression (lambda/matching.ml[1711,56554+2]..[1711,56554+35])
                          Pexp_record
                          [
                            "pm" (lambda/matching.ml[1711,56554+4]..[1711,56554+6]) ghost
                              expression (lambda/matching.ml[1711,56554+4]..[1711,56554+6])
                                Pexp_ident "pm" (lambda/matching.ml[1711,56554+4]..[1711,56554+6])
                            "ctx" (lambda/matching.ml[1711,56554+8]..[1711,56554+11])
                              expression (lambda/matching.ml[1711,56554+14]..[1711,56554+26])
                                Pexp_apply
                                expression (lambda/matching.ml[1711,56554+14]..[1711,56554+22])
                                  Pexp_ident "make_ctx" (lambda/matching.ml[1711,56554+14]..[1711,56554+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1711,56554+23]..[1711,56554+26])
                                      Pexp_ident "ctx" (lambda/matching.ml[1711,56554+23]..[1711,56554+26])
                                ]
                            "discr" (lambda/matching.ml[1711,56554+28]..[1711,56554+33]) ghost
                              expression (lambda/matching.ml[1711,56554+28]..[1711,56554+33])
                                Pexp_ident "discr" (lambda/matching.ml[1711,56554+28]..[1711,56554+33])
                          ]
                          None
    ]
  structure_item (lambda/matching.ml[1713,56591+0]..[1713,56591+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1713,56591+4]..[1713,56591+16])
          Ppat_var "drop_pat_arg" (lambda/matching.ml[1713,56591+4]..[1713,56591+16])
        expression (lambda/matching.ml[1713,56591+17]..[1713,56591+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1713,56591+17]..[1713,56591+19])
            Ppat_var "_p" (lambda/matching.ml[1713,56591+17]..[1713,56591+19])
          expression (lambda/matching.ml[1713,56591+20]..[1713,56591+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1713,56591+20]..[1713,56591+23])
              Ppat_var "rem" (lambda/matching.ml[1713,56591+20]..[1713,56591+23])
            expression (lambda/matching.ml[1713,56591+26]..[1713,56591+29])
              Pexp_ident "rem" (lambda/matching.ml[1713,56591+26]..[1713,56591+29])
    ]
  structure_item (lambda/matching.ml[1714,56621+0]..[1714,56621+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1714,56621+4]..[1714,56621+17])
          Ppat_var "drop_expr_arg" (lambda/matching.ml[1714,56621+4]..[1714,56621+17])
        expression (lambda/matching.ml[1714,56621+18]..[1714,56621+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1714,56621+18]..[1714,56621+23])
            Ppat_var "_head" (lambda/matching.ml[1714,56621+18]..[1714,56621+23])
          expression (lambda/matching.ml[1714,56621+24]..[1714,56621+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1714,56621+24]..[1714,56621+28])
              Ppat_var "_arg" (lambda/matching.ml[1714,56621+24]..[1714,56621+28])
            expression (lambda/matching.ml[1714,56621+29]..[1714,56621+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1714,56621+29]..[1714,56621+32])
                Ppat_var "rem" (lambda/matching.ml[1714,56621+29]..[1714,56621+32])
              expression (lambda/matching.ml[1714,56621+35]..[1714,56621+38])
                Pexp_ident "rem" (lambda/matching.ml[1714,56621+35]..[1714,56621+38])
    ]
  structure_item (lambda/matching.ml[1729,57055+0]..[1734,57206+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1729,57055+4]..[1729,57055+20])
          Ppat_var "get_key_constant" (lambda/matching.ml[1729,57055+4]..[1729,57055+20])
        expression (lambda/matching.ml[1729,57055+21]..[1734,57206+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1729,57055+21]..[1729,57055+27])
            Ppat_var "caller" (lambda/matching.ml[1729,57055+21]..[1729,57055+27])
          expression (lambda/matching.ml[1729,57055+30]..[1734,57206+18])
            Pexp_function
            [
              <case>
                pattern (lambda/matching.ml[1730,57094+4]..[1730,57094+36])
                  Ppat_record Closed
                  [
                    "pat_desc" (lambda/matching.ml[1730,57094+6]..[1730,57094+14])
                      pattern (lambda/matching.ml[1730,57094+17]..[1730,57094+34])
                        Ppat_construct "Tpat_constant" (lambda/matching.ml[1730,57094+17]..[1730,57094+30])
                        Some
                          []
                          pattern (lambda/matching.ml[1730,57094+31]..[1730,57094+34])
                            Ppat_var "cst" (lambda/matching.ml[1730,57094+31]..[1730,57094+34])
                  ]
                expression (lambda/matching.ml[1730,57094+40]..[1730,57094+43])
                  Pexp_ident "cst" (lambda/matching.ml[1730,57094+40]..[1730,57094+43])
              <case>
                pattern (lambda/matching.ml[1731,57138+4]..[1731,57138+5])
                  Ppat_var "p" (lambda/matching.ml[1731,57138+4]..[1731,57138+5])
                expression (lambda/matching.ml[1732,57147+6]..[1734,57206+18])
                  Pexp_sequence
                  expression (lambda/matching.ml[1732,57147+6]..[1732,57147+37])
                    Pexp_apply
                    expression (lambda/matching.ml[1732,57147+6]..[1732,57147+20])
                      Pexp_ident "Format.eprintf" (lambda/matching.ml[1732,57147+6]..[1732,57147+20])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1732,57147+21]..[1732,57147+30])
                          Pexp_constant PConst_string("BAD: %s",(lambda/matching.ml[1732,57147+22]..[1732,57147+29]),None)
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1732,57147+31]..[1732,57147+37])
                          Pexp_ident "caller" (lambda/matching.ml[1732,57147+31]..[1732,57147+37])
                    ]
                  expression (lambda/matching.ml[1733,57186+6]..[1734,57206+18])
                    Pexp_sequence
                    expression (lambda/matching.ml[1733,57186+6]..[1733,57186+18])
                      Pexp_apply
                      expression (lambda/matching.ml[1733,57186+6]..[1733,57186+16])
                        Pexp_ident "pretty_pat" (lambda/matching.ml[1733,57186+6]..[1733,57186+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1733,57186+17]..[1733,57186+18])
                            Pexp_ident "p" (lambda/matching.ml[1733,57186+17]..[1733,57186+18])
                      ]
                    expression (lambda/matching.ml[1734,57206+6]..[1734,57206+18])
                      Pexp_assert
                      expression (lambda/matching.ml[1734,57206+13]..[1734,57206+18])
                        Pexp_construct "false" (lambda/matching.ml[1734,57206+13]..[1734,57206+18])
                        None
            ]
    ]
  structure_item (lambda/matching.ml[1736,57226+0]..[1736,57226+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1736,57226+4]..[1736,57226+25])
          Ppat_var "get_pat_args_constant" (lambda/matching.ml[1736,57226+4]..[1736,57226+25])
        expression (lambda/matching.ml[1736,57226+28]..[1736,57226+40])
          Pexp_ident "drop_pat_arg" (lambda/matching.ml[1736,57226+28]..[1736,57226+40])
    ]
  structure_item (lambda/matching.ml[1737,57267+0]..[1737,57267+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1737,57267+4]..[1737,57267+26])
          Ppat_var "get_expr_args_constant" (lambda/matching.ml[1737,57267+4]..[1737,57267+26])
        expression (lambda/matching.ml[1737,57267+29]..[1737,57267+42])
          Pexp_ident "drop_expr_arg" (lambda/matching.ml[1737,57267+29]..[1737,57267+42])
    ]
  structure_item (lambda/matching.ml[1739,57311+0]..[1744,57446+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1739,57311+4]..[1739,57311+19])
          Ppat_var "divide_constant" (lambda/matching.ml[1739,57311+4]..[1739,57311+19])
        expression (lambda/matching.ml[1739,57311+20]..[1744,57446+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1739,57311+20]..[1739,57311+23])
            Ppat_var "ctx" (lambda/matching.ml[1739,57311+20]..[1739,57311+23])
          expression (lambda/matching.ml[1739,57311+24]..[1744,57446+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1739,57311+24]..[1739,57311+25])
              Ppat_var "m" (lambda/matching.ml[1739,57311+24]..[1739,57311+25])
            expression (lambda/matching.ml[1740,57339+2]..[1744,57446+31])
              Pexp_apply
              expression (lambda/matching.ml[1740,57339+2]..[1740,57339+8])
                Pexp_ident "divide" (lambda/matching.ml[1740,57339+2]..[1740,57339+8])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1741,57348+4]..[1741,57348+26])
                    Pexp_ident "get_expr_args_constant" (lambda/matching.ml[1741,57348+4]..[1741,57348+26])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1742,57375+4]..[1742,57375+38])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[1742,57375+9]..[1742,57375+10])
                      Ppat_var "c" (lambda/matching.ml[1742,57375+9]..[1742,57375+10])
                    expression (lambda/matching.ml[1742,57375+11]..[1742,57375+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1742,57375+11]..[1742,57375+12])
                        Ppat_var "d" (lambda/matching.ml[1742,57375+11]..[1742,57375+12])
                      expression (lambda/matching.ml[1742,57375+16]..[1742,57375+37])
                        Pexp_apply
                        expression (lambda/matching.ml[1742,57375+34]..[1742,57375+35])
                          Pexp_ident "=" (lambda/matching.ml[1742,57375+34]..[1742,57375+35])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1742,57375+16]..[1742,57375+33])
                              Pexp_apply
                              expression (lambda/matching.ml[1742,57375+16]..[1742,57375+29])
                                Pexp_ident "const_compare" (lambda/matching.ml[1742,57375+16]..[1742,57375+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1742,57375+30]..[1742,57375+31])
                                    Pexp_ident "c" (lambda/matching.ml[1742,57375+30]..[1742,57375+31])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1742,57375+32]..[1742,57375+33])
                                    Pexp_ident "d" (lambda/matching.ml[1742,57375+32]..[1742,57375+33])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1742,57375+36]..[1742,57375+37])
                              Pexp_constant PConst_int (0,None)
                        ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1743,57414+4]..[1743,57414+31])
                    Pexp_apply
                    expression (lambda/matching.ml[1743,57414+5]..[1743,57414+21])
                      Pexp_ident "get_key_constant" (lambda/matching.ml[1743,57414+5]..[1743,57414+21])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1743,57414+22]..[1743,57414+30])
                          Pexp_constant PConst_string("divide",(lambda/matching.ml[1743,57414+23]..[1743,57414+29]),None)
                    ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1744,57446+4]..[1744,57446+25])
                    Pexp_ident "get_pat_args_constant" (lambda/matching.ml[1744,57446+4]..[1744,57446+25])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1744,57446+26]..[1744,57446+29])
                    Pexp_ident "ctx" (lambda/matching.ml[1744,57446+26]..[1744,57446+29])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1744,57446+30]..[1744,57446+31])
                    Pexp_ident "m" (lambda/matching.ml[1744,57446+30]..[1744,57446+31])
              ]
    ]
  structure_item (lambda/matching.ml[1748,57517+0]..[1750,57605+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1748,57517+4]..[1748,57517+18])
          Ppat_var "get_key_constr" (lambda/matching.ml[1748,57517+4]..[1748,57517+18])
        expression (lambda/matching.ml[1748,57517+21]..[1750,57605+21])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[1749,57547+4]..[1749,57547+49])
                Ppat_record Closed
                [
                  "pat_desc" (lambda/matching.ml[1749,57547+6]..[1749,57547+14])
                    pattern (lambda/matching.ml[1749,57547+17]..[1749,57547+47])
                      Ppat_construct "Tpat_construct" (lambda/matching.ml[1749,57547+17]..[1749,57547+31])
                      Some
                        []
                        pattern (lambda/matching.ml[1749,57547+32]..[1749,57547+47])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[1749,57547+33]..[1749,57547+34])
                              Ppat_any
                            pattern (lambda/matching.ml[1749,57547+36]..[1749,57547+40])
                              Ppat_var "cstr" (lambda/matching.ml[1749,57547+36]..[1749,57547+40])
                            pattern (lambda/matching.ml[1749,57547+42]..[1749,57547+43])
                              Ppat_any
                            pattern (lambda/matching.ml[1749,57547+45]..[1749,57547+46])
                              Ppat_any
                          ]
                ]
              expression (lambda/matching.ml[1749,57547+53]..[1749,57547+57])
                Pexp_ident "cstr" (lambda/matching.ml[1749,57547+53]..[1749,57547+57])
            <case>
              pattern (lambda/matching.ml[1750,57605+4]..[1750,57605+5])
                Ppat_any
              expression (lambda/matching.ml[1750,57605+9]..[1750,57605+21])
                Pexp_assert
                expression (lambda/matching.ml[1750,57605+16]..[1750,57605+21])
                  Pexp_construct "false" (lambda/matching.ml[1750,57605+16]..[1750,57605+21])
                  None
          ]
    ]
  structure_item (lambda/matching.ml[1752,57628+0]..[1755,57739+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1752,57628+4]..[1752,57628+23])
          Ppat_var "get_pat_args_constr" (lambda/matching.ml[1752,57628+4]..[1752,57628+23])
        expression (lambda/matching.ml[1752,57628+24]..[1755,57739+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1752,57628+24]..[1752,57628+25])
            Ppat_var "p" (lambda/matching.ml[1752,57628+24]..[1752,57628+25])
          expression (lambda/matching.ml[1752,57628+26]..[1755,57739+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1752,57628+26]..[1752,57628+29])
              Ppat_var "rem" (lambda/matching.ml[1752,57628+26]..[1752,57628+29])
            expression (lambda/matching.ml[1753,57660+2]..[1755,57739+21])
              Pexp_match
              expression (lambda/matching.ml[1753,57660+8]..[1753,57660+9])
                Pexp_ident "p" (lambda/matching.ml[1753,57660+8]..[1753,57660+9])
              [
                <case>
                  pattern (lambda/matching.ml[1754,57675+4]..[1754,57675+49])
                    Ppat_record Closed
                    [
                      "pat_desc" (lambda/matching.ml[1754,57675+6]..[1754,57675+14])
                        pattern (lambda/matching.ml[1754,57675+17]..[1754,57675+47])
                          Ppat_construct "Tpat_construct" (lambda/matching.ml[1754,57675+17]..[1754,57675+31])
                          Some
                            []
                            pattern (lambda/matching.ml[1754,57675+32]..[1754,57675+47])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[1754,57675+33]..[1754,57675+34])
                                  Ppat_any
                                pattern (lambda/matching.ml[1754,57675+36]..[1754,57675+37])
                                  Ppat_any
                                pattern (lambda/matching.ml[1754,57675+39]..[1754,57675+43])
                                  Ppat_var "args" (lambda/matching.ml[1754,57675+39]..[1754,57675+43])
                                pattern (lambda/matching.ml[1754,57675+45]..[1754,57675+46])
                                  Ppat_any
                              ]
                    ]
                  expression (lambda/matching.ml[1754,57675+53]..[1754,57675+63])
                    Pexp_apply
                    expression (lambda/matching.ml[1754,57675+58]..[1754,57675+59])
                      Pexp_ident "@" (lambda/matching.ml[1754,57675+58]..[1754,57675+59])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1754,57675+53]..[1754,57675+57])
                          Pexp_ident "args" (lambda/matching.ml[1754,57675+53]..[1754,57675+57])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1754,57675+60]..[1754,57675+63])
                          Pexp_ident "rem" (lambda/matching.ml[1754,57675+60]..[1754,57675+63])
                    ]
                <case>
                  pattern (lambda/matching.ml[1755,57739+4]..[1755,57739+5])
                    Ppat_any
                  expression (lambda/matching.ml[1755,57739+9]..[1755,57739+21])
                    Pexp_assert
                    expression (lambda/matching.ml[1755,57739+16]..[1755,57739+21])
                      Pexp_construct "false" (lambda/matching.ml[1755,57739+16]..[1755,57739+21])
                      None
              ]
    ]
  structure_item (lambda/matching.ml[1757,57762+0]..[1781,58506+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1757,57762+4]..[1757,57762+24])
          Ppat_var "get_expr_args_constr" (lambda/matching.ml[1757,57762+4]..[1757,57762+24])
        expression (lambda/matching.ml[1757,57762+25]..[1781,58506+73]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1757,57762+26]..[1757,57762+32])
            Ppat_var "scopes" (lambda/matching.ml[1757,57762+26]..[1757,57762+32])
          expression (lambda/matching.ml[1757,57762+33]..[1781,58506+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1757,57762+33]..[1757,57762+37])
              Ppat_var "head" (lambda/matching.ml[1757,57762+33]..[1757,57762+37])
            expression (lambda/matching.ml[1757,57762+38]..[1781,58506+73]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1757,57762+38]..[1757,57762+49])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[1757,57762+39]..[1757,57762+42])
                    Ppat_var "arg" (lambda/matching.ml[1757,57762+39]..[1757,57762+42])
                  pattern (lambda/matching.ml[1757,57762+44]..[1757,57762+48])
                    Ppat_var "_mut" (lambda/matching.ml[1757,57762+44]..[1757,57762+48])
                ]
              expression (lambda/matching.ml[1757,57762+50]..[1781,58506+73]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1757,57762+50]..[1757,57762+53])
                  Ppat_var "rem" (lambda/matching.ml[1757,57762+50]..[1757,57762+53])
                expression (lambda/matching.ml[1758,57818+2]..[1781,58506+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1758,57818+6]..[1758,57818+10])
                        Ppat_var "cstr" (lambda/matching.ml[1758,57818+6]..[1758,57818+10])
                      expression (lambda/matching.ml[1759,57831+4]..[1761,57903+54])
                        Pexp_match
                        expression (lambda/matching.ml[1759,57831+10]..[1759,57831+23])
                          Pexp_field
                          expression (lambda/matching.ml[1759,57831+10]..[1759,57831+14])
                            Pexp_ident "head" (lambda/matching.ml[1759,57831+10]..[1759,57831+14])
                          "pat_desc" (lambda/matching.ml[1759,57831+15]..[1759,57831+23])
                        [
                          <case>
                            pattern (lambda/matching.ml[1760,57860+6]..[1760,57860+34])
                              Ppat_construct "Patterns.Head.Construct" (lambda/matching.ml[1760,57860+6]..[1760,57860+29])
                              Some
                                []
                                pattern (lambda/matching.ml[1760,57860+30]..[1760,57860+34])
                                  Ppat_var "cstr" (lambda/matching.ml[1760,57860+30]..[1760,57860+34])
                            expression (lambda/matching.ml[1760,57860+38]..[1760,57860+42])
                              Pexp_ident "cstr" (lambda/matching.ml[1760,57860+38]..[1760,57860+42])
                          <case>
                            pattern (lambda/matching.ml[1761,57903+6]..[1761,57903+7])
                              Ppat_any
                            expression (lambda/matching.ml[1761,57903+11]..[1761,57903+54])
                              Pexp_apply
                              expression (lambda/matching.ml[1761,57903+11]..[1761,57903+22])
                                Pexp_ident "fatal_error" (lambda/matching.ml[1761,57903+11]..[1761,57903+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[1761,57903+23]..[1761,57903+54])
                                    Pexp_constant PConst_string("Matching.get_expr_args_constr",(lambda/matching.ml[1761,57903+24]..[1761,57903+53]),None)
                              ]
                        ]
                  ]
                  expression (lambda/matching.ml[1763,57963+2]..[1781,58506+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[1763,57963+6]..[1763,57963+9])
                          Ppat_var "loc" (lambda/matching.ml[1763,57963+6]..[1763,57963+9])
                        expression (lambda/matching.ml[1763,57963+12]..[1763,57963+33])
                          Pexp_apply
                          expression (lambda/matching.ml[1763,57963+12]..[1763,57963+20])
                            Pexp_ident "head_loc" (lambda/matching.ml[1763,57963+12]..[1763,57963+20])
                          [
                            <arg>
                            Labelled "scopes"
                              expression (lambda/matching.ml[1763,57963+22]..[1763,57963+28])
                                Pexp_ident "scopes" (lambda/matching.ml[1763,57963+22]..[1763,57963+28])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1763,57963+29]..[1763,57963+33])
                                Pexp_ident "head" (lambda/matching.ml[1763,57963+29]..[1763,57963+33])
                          ]
                    ]
                    expression (lambda/matching.ml[1764,58000+2]..[1781,58506+73])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1764,58000+6]..[1764,58000+25])
                            Ppat_var "make_field_accesses" (lambda/matching.ml[1764,58000+6]..[1764,58000+25])
                          expression (lambda/matching.ml[1764,58000+26]..[1771,58233+23]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[1764,58000+26]..[1764,58000+38])
                              Ppat_var "binding_kind" (lambda/matching.ml[1764,58000+26]..[1764,58000+38])
                            expression (lambda/matching.ml[1764,58000+39]..[1771,58233+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[1764,58000+39]..[1764,58000+48])
                                Ppat_var "first_pos" (lambda/matching.ml[1764,58000+39]..[1764,58000+48])
                              expression (lambda/matching.ml[1764,58000+49]..[1771,58233+23]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[1764,58000+49]..[1764,58000+57])
                                  Ppat_var "last_pos" (lambda/matching.ml[1764,58000+49]..[1764,58000+57])
                                expression (lambda/matching.ml[1764,58000+58]..[1771,58233+23]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[1764,58000+58]..[1764,58000+62])
                                    Ppat_var "argl" (lambda/matching.ml[1764,58000+58]..[1764,58000+62])
                                  expression (lambda/matching.ml[1765,58065+4]..[1771,58233+23])
                                    Pexp_let Rec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[1765,58065+12]..[1765,58065+21])
                                          Ppat_var "make_args" (lambda/matching.ml[1765,58065+12]..[1765,58065+21])
                                        expression (lambda/matching.ml[1765,58065+22]..[1769,58146+79]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[1765,58065+22]..[1765,58065+25])
                                            Ppat_var "pos" (lambda/matching.ml[1765,58065+22]..[1765,58065+25])
                                          expression (lambda/matching.ml[1766,58093+6]..[1769,58146+79])
                                            Pexp_ifthenelse
                                            expression (lambda/matching.ml[1766,58093+9]..[1766,58093+23])
                                              Pexp_apply
                                              expression (lambda/matching.ml[1766,58093+13]..[1766,58093+14])
                                                Pexp_ident ">" (lambda/matching.ml[1766,58093+13]..[1766,58093+14])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1766,58093+9]..[1766,58093+12])
                                                    Pexp_ident "pos" (lambda/matching.ml[1766,58093+9]..[1766,58093+12])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[1766,58093+15]..[1766,58093+23])
                                                    Pexp_ident "last_pos" (lambda/matching.ml[1766,58093+15]..[1766,58093+23])
                                              ]
                                            expression (lambda/matching.ml[1767,58122+8]..[1767,58122+12])
                                              Pexp_ident "argl" (lambda/matching.ml[1767,58122+8]..[1767,58122+12])
                                            Some
                                              expression (lambda/matching.ml[1769,58146+8]..[1769,58146+79])
                                                Pexp_construct "::" (lambda/matching.ml[1769,58146+57]..[1769,58146+59])
                                                Some
                                                  expression (lambda/matching.ml[1769,58146+8]..[1769,58146+79]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1769,58146+8]..[1769,58146+56])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1769,58146+9]..[1769,58146+41])
                                                            Pexp_construct "Lprim" (lambda/matching.ml[1769,58146+9]..[1769,58146+14])
                                                            Some
                                                              expression (lambda/matching.ml[1769,58146+15]..[1769,58146+41])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1769,58146+16]..[1769,58146+26])
                                                                    Pexp_construct "Pfield" (lambda/matching.ml[1769,58146+16]..[1769,58146+22])
                                                                    Some
                                                                      expression (lambda/matching.ml[1769,58146+23]..[1769,58146+26])
Pexp_ident "pos" (lambda/matching.ml[1769,58146+23]..[1769,58146+26])
                                                                  expression (lambda/matching.ml[1769,58146+28]..[1769,58146+35])
                                                                    Pexp_construct "::" (lambda/matching.ml[1769,58146+30]..[1769,58146+35]) ghost
                                                                    Some
                                                                      expression (lambda/matching.ml[1769,58146+30]..[1769,58146+35]) ghost
Pexp_tuple
[
  expression (lambda/matching.ml[1769,58146+30]..[1769,58146+33])
    Pexp_ident "arg" (lambda/matching.ml[1769,58146+30]..[1769,58146+33])
  expression (lambda/matching.ml[1769,58146+34]..[1769,58146+35]) ghost
    Pexp_construct "[]" (lambda/matching.ml[1769,58146+34]..[1769,58146+35]) ghost
    None
]
                                                                  expression (lambda/matching.ml[1769,58146+37]..[1769,58146+40])
                                                                    Pexp_ident "loc" (lambda/matching.ml[1769,58146+37]..[1769,58146+40])
                                                                ]
                                                          expression (lambda/matching.ml[1769,58146+43]..[1769,58146+55])
                                                            Pexp_ident "binding_kind" (lambda/matching.ml[1769,58146+43]..[1769,58146+55])
                                                        ]
                                                      expression (lambda/matching.ml[1769,58146+60]..[1769,58146+79])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1769,58146+60]..[1769,58146+69])
                                                          Pexp_ident "make_args" (lambda/matching.ml[1769,58146+60]..[1769,58146+69])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1769,58146+70]..[1769,58146+79])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1769,58146+75]..[1769,58146+76])
                                                                Pexp_ident "+" (lambda/matching.ml[1769,58146+75]..[1769,58146+76])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1769,58146+71]..[1769,58146+74])
                                                                    Pexp_ident "pos" (lambda/matching.ml[1769,58146+71]..[1769,58146+74])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[1769,58146+77]..[1769,58146+78])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                    ]
                                    ]
                                    expression (lambda/matching.ml[1771,58233+4]..[1771,58233+23])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1771,58233+4]..[1771,58233+13])
                                        Pexp_ident "make_args" (lambda/matching.ml[1771,58233+4]..[1771,58233+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1771,58233+14]..[1771,58233+23])
                                            Pexp_ident "first_pos" (lambda/matching.ml[1771,58233+14]..[1771,58233+23])
                                      ]
                      ]
                      expression (lambda/matching.ml[1773,58262+2]..[1781,58506+73])
                        Pexp_ifthenelse
                        expression (lambda/matching.ml[1773,58262+5]..[1773,58262+30])
                          Pexp_apply
                          expression (lambda/matching.ml[1773,58262+23]..[1773,58262+25])
                            Pexp_ident "<>" (lambda/matching.ml[1773,58262+23]..[1773,58262+25])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1773,58262+5]..[1773,58262+22])
                                Pexp_field
                                expression (lambda/matching.ml[1773,58262+5]..[1773,58262+9])
                                  Pexp_ident "cstr" (lambda/matching.ml[1773,58262+5]..[1773,58262+9])
                                "cstr_inlined" (lambda/matching.ml[1773,58262+10]..[1773,58262+22])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1773,58262+26]..[1773,58262+30])
                                Pexp_construct "None" (lambda/matching.ml[1773,58262+26]..[1773,58262+30])
                                None
                          ]
                        expression (lambda/matching.ml[1774,58298+4]..[1774,58298+23])
                          Pexp_construct "::" (lambda/matching.ml[1774,58298+17]..[1774,58298+19])
                          Some
                            expression (lambda/matching.ml[1774,58298+4]..[1774,58298+23]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[1774,58298+4]..[1774,58298+16])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[1774,58298+5]..[1774,58298+8])
                                      Pexp_ident "arg" (lambda/matching.ml[1774,58298+5]..[1774,58298+8])
                                    expression (lambda/matching.ml[1774,58298+10]..[1774,58298+15])
                                      Pexp_construct "Alias" (lambda/matching.ml[1774,58298+10]..[1774,58298+15])
                                      None
                                  ]
                                expression (lambda/matching.ml[1774,58298+20]..[1774,58298+23])
                                  Pexp_ident "rem" (lambda/matching.ml[1774,58298+20]..[1774,58298+23])
                              ]
                        Some
                          expression (lambda/matching.ml[1776,58329+4]..[1781,58506+73])
                            Pexp_match
                            expression (lambda/matching.ml[1776,58329+10]..[1776,58329+23])
                              Pexp_field
                              expression (lambda/matching.ml[1776,58329+10]..[1776,58329+14])
                                Pexp_ident "cstr" (lambda/matching.ml[1776,58329+10]..[1776,58329+14])
                              "cstr_tag" (lambda/matching.ml[1776,58329+15]..[1776,58329+23])
                            [
                              <case>
                                pattern (lambda/matching.ml[1777,58358+6]..[1778,58380+18])
                                  Ppat_or
                                  pattern (lambda/matching.ml[1777,58358+6]..[1777,58358+21])
                                    Ppat_construct "Cstr_constant" (lambda/matching.ml[1777,58358+6]..[1777,58358+19])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1777,58358+20]..[1777,58358+21])
                                        Ppat_any
                                  pattern (lambda/matching.ml[1778,58380+6]..[1778,58380+18])
                                    Ppat_construct "Cstr_block" (lambda/matching.ml[1778,58380+6]..[1778,58380+16])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[1778,58380+17]..[1778,58380+18])
                                        Ppat_any
                                expression (lambda/matching.ml[1779,58402+8]..[1779,58402+61])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1779,58402+8]..[1779,58402+27])
                                    Pexp_ident "make_field_accesses" (lambda/matching.ml[1779,58402+8]..[1779,58402+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1779,58402+28]..[1779,58402+33])
                                        Pexp_construct "Alias" (lambda/matching.ml[1779,58402+28]..[1779,58402+33])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1779,58402+34]..[1779,58402+35])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1779,58402+36]..[1779,58402+57])
                                        Pexp_apply
                                        expression (lambda/matching.ml[1779,58402+53]..[1779,58402+54])
                                          Pexp_ident "-" (lambda/matching.ml[1779,58402+53]..[1779,58402+54])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1779,58402+37]..[1779,58402+52])
                                              Pexp_field
                                              expression (lambda/matching.ml[1779,58402+37]..[1779,58402+41])
                                                Pexp_ident "cstr" (lambda/matching.ml[1779,58402+37]..[1779,58402+41])
                                              "cstr_arity" (lambda/matching.ml[1779,58402+42]..[1779,58402+52])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1779,58402+55]..[1779,58402+56])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1779,58402+58]..[1779,58402+61])
                                        Pexp_ident "rem" (lambda/matching.ml[1779,58402+58]..[1779,58402+61])
                                  ]
                              <case>
                                pattern (lambda/matching.ml[1780,58464+6]..[1780,58464+18])
                                  Ppat_construct "Cstr_unboxed" (lambda/matching.ml[1780,58464+6]..[1780,58464+18])
                                  None
                                expression (lambda/matching.ml[1780,58464+22]..[1780,58464+41])
                                  Pexp_construct "::" (lambda/matching.ml[1780,58464+35]..[1780,58464+37])
                                  Some
                                    expression (lambda/matching.ml[1780,58464+22]..[1780,58464+41]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[1780,58464+22]..[1780,58464+34])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[1780,58464+23]..[1780,58464+26])
                                              Pexp_ident "arg" (lambda/matching.ml[1780,58464+23]..[1780,58464+26])
                                            expression (lambda/matching.ml[1780,58464+28]..[1780,58464+33])
                                              Pexp_construct "Alias" (lambda/matching.ml[1780,58464+28]..[1780,58464+33])
                                              None
                                          ]
                                        expression (lambda/matching.ml[1780,58464+38]..[1780,58464+41])
                                          Pexp_ident "rem" (lambda/matching.ml[1780,58464+38]..[1780,58464+41])
                                      ]
                              <case>
                                pattern (lambda/matching.ml[1781,58506+6]..[1781,58506+22])
                                  Ppat_construct "Cstr_extension" (lambda/matching.ml[1781,58506+6]..[1781,58506+20])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[1781,58506+21]..[1781,58506+22])
                                      Ppat_any
                                expression (lambda/matching.ml[1781,58506+26]..[1781,58506+73])
                                  Pexp_apply
                                  expression (lambda/matching.ml[1781,58506+26]..[1781,58506+45])
                                    Pexp_ident "make_field_accesses" (lambda/matching.ml[1781,58506+26]..[1781,58506+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1781,58506+46]..[1781,58506+51])
                                        Pexp_construct "Alias" (lambda/matching.ml[1781,58506+46]..[1781,58506+51])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1781,58506+52]..[1781,58506+53])
                                        Pexp_constant PConst_int (1,None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1781,58506+54]..[1781,58506+69])
                                        Pexp_field
                                        expression (lambda/matching.ml[1781,58506+54]..[1781,58506+58])
                                          Pexp_ident "cstr" (lambda/matching.ml[1781,58506+54]..[1781,58506+58])
                                        "cstr_arity" (lambda/matching.ml[1781,58506+59]..[1781,58506+69])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[1781,58506+70]..[1781,58506+73])
                                        Pexp_ident "rem" (lambda/matching.ml[1781,58506+70]..[1781,58506+73])
                                  ]
                            ]
    ]
  structure_item (lambda/matching.ml[1783,58581+0]..[1789,58779+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1783,58581+4]..[1783,58581+22])
          Ppat_var "divide_constructor" (lambda/matching.ml[1783,58581+4]..[1783,58581+22])
        expression (lambda/matching.ml[1783,58581+23]..[1789,58779+10]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1783,58581+24]..[1783,58581+30])
            Ppat_var "scopes" (lambda/matching.ml[1783,58581+24]..[1783,58581+30])
          expression (lambda/matching.ml[1783,58581+31]..[1789,58779+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1783,58581+31]..[1783,58581+34])
              Ppat_var "ctx" (lambda/matching.ml[1783,58581+31]..[1783,58581+34])
            expression (lambda/matching.ml[1783,58581+35]..[1789,58779+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1783,58581+35]..[1783,58581+37])
                Ppat_var "pm" (lambda/matching.ml[1783,58581+35]..[1783,58581+37])
              expression (lambda/matching.ml[1784,58621+2]..[1789,58779+10])
                Pexp_apply
                expression (lambda/matching.ml[1784,58621+2]..[1784,58621+8])
                  Pexp_ident "divide" (lambda/matching.ml[1784,58621+2]..[1784,58621+8])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1785,58630+4]..[1785,58630+34])
                      Pexp_apply
                      expression (lambda/matching.ml[1785,58630+5]..[1785,58630+25])
                        Pexp_ident "get_expr_args_constr" (lambda/matching.ml[1785,58630+5]..[1785,58630+25])
                      [
                        <arg>
                        Labelled "scopes"
                          expression (lambda/matching.ml[1785,58630+27]..[1785,58630+33])
                            Pexp_ident "scopes" (lambda/matching.ml[1785,58630+27]..[1785,58630+33])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1786,58665+4]..[1786,58665+70])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[1786,58665+9]..[1786,58665+14])
                        Ppat_var "cstr1" (lambda/matching.ml[1786,58665+9]..[1786,58665+14])
                      expression (lambda/matching.ml[1786,58665+15]..[1786,58665+69]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[1786,58665+15]..[1786,58665+20])
                          Ppat_var "cstr2" (lambda/matching.ml[1786,58665+15]..[1786,58665+20])
                        expression (lambda/matching.ml[1786,58665+24]..[1786,58665+69])
                          Pexp_apply
                          expression (lambda/matching.ml[1786,58665+24]..[1786,58665+39])
                            Pexp_ident "Types.equal_tag" (lambda/matching.ml[1786,58665+24]..[1786,58665+39])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1786,58665+40]..[1786,58665+54])
                                Pexp_field
                                expression (lambda/matching.ml[1786,58665+40]..[1786,58665+45])
                                  Pexp_ident "cstr1" (lambda/matching.ml[1786,58665+40]..[1786,58665+45])
                                "cstr_tag" (lambda/matching.ml[1786,58665+46]..[1786,58665+54])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1786,58665+55]..[1786,58665+69])
                                Pexp_field
                                expression (lambda/matching.ml[1786,58665+55]..[1786,58665+60])
                                  Pexp_ident "cstr2" (lambda/matching.ml[1786,58665+55]..[1786,58665+60])
                                "cstr_tag" (lambda/matching.ml[1786,58665+61]..[1786,58665+69])
                          ]
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1787,58736+4]..[1787,58736+18])
                      Pexp_ident "get_key_constr" (lambda/matching.ml[1787,58736+4]..[1787,58736+18])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1788,58755+4]..[1788,58755+23])
                      Pexp_ident "get_pat_args_constr" (lambda/matching.ml[1788,58755+4]..[1788,58755+23])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1789,58779+4]..[1789,58779+7])
                      Pexp_ident "ctx" (lambda/matching.ml[1789,58779+4]..[1789,58779+7])
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1789,58779+8]..[1789,58779+10])
                      Pexp_ident "pm" (lambda/matching.ml[1789,58779+8]..[1789,58779+10])
                ]
    ]
  structure_item (lambda/matching.ml[1793,58825+0]..[1793,58825+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1793,58825+4]..[1793,58825+34])
          Ppat_var "get_expr_args_variant_constant" (lambda/matching.ml[1793,58825+4]..[1793,58825+34])
        expression (lambda/matching.ml[1793,58825+37]..[1793,58825+50])
          Pexp_ident "drop_expr_arg" (lambda/matching.ml[1793,58825+37]..[1793,58825+50])
    ]
  structure_item (lambda/matching.ml[1795,58877+0]..[1797,58980+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1795,58877+4]..[1795,58877+34])
          Ppat_var "get_expr_args_variant_nonconst" (lambda/matching.ml[1795,58877+4]..[1795,58877+34])
        expression (lambda/matching.ml[1795,58877+35]..[1797,58980+48]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1795,58877+36]..[1795,58877+42])
            Ppat_var "scopes" (lambda/matching.ml[1795,58877+36]..[1795,58877+42])
          expression (lambda/matching.ml[1795,58877+43]..[1797,58980+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1795,58877+43]..[1795,58877+47])
              Ppat_var "head" (lambda/matching.ml[1795,58877+43]..[1795,58877+47])
            expression (lambda/matching.ml[1795,58877+48]..[1797,58980+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1795,58877+48]..[1795,58877+59])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[1795,58877+49]..[1795,58877+52])
                    Ppat_var "arg" (lambda/matching.ml[1795,58877+49]..[1795,58877+52])
                  pattern (lambda/matching.ml[1795,58877+54]..[1795,58877+58])
                    Ppat_var "_mut" (lambda/matching.ml[1795,58877+54]..[1795,58877+58])
                ]
              expression (lambda/matching.ml[1795,58877+60]..[1797,58980+48]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1795,58877+60]..[1795,58877+63])
                  Ppat_var "rem" (lambda/matching.ml[1795,58877+60]..[1795,58877+63])
                expression (lambda/matching.ml[1796,58943+2]..[1797,58980+48])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1796,58943+6]..[1796,58943+9])
                        Ppat_var "loc" (lambda/matching.ml[1796,58943+6]..[1796,58943+9])
                      expression (lambda/matching.ml[1796,58943+12]..[1796,58943+33])
                        Pexp_apply
                        expression (lambda/matching.ml[1796,58943+12]..[1796,58943+20])
                          Pexp_ident "head_loc" (lambda/matching.ml[1796,58943+12]..[1796,58943+20])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[1796,58943+22]..[1796,58943+28])
                              Pexp_ident "scopes" (lambda/matching.ml[1796,58943+22]..[1796,58943+28])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1796,58943+29]..[1796,58943+33])
                              Pexp_ident "head" (lambda/matching.ml[1796,58943+29]..[1796,58943+33])
                        ]
                  ]
                  expression (lambda/matching.ml[1797,58980+2]..[1797,58980+48])
                    Pexp_construct "::" (lambda/matching.ml[1797,58980+42]..[1797,58980+44])
                    Some
                      expression (lambda/matching.ml[1797,58980+2]..[1797,58980+48]) ghost
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1797,58980+2]..[1797,58980+41])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[1797,58980+3]..[1797,58980+33])
                                Pexp_construct "Lprim" (lambda/matching.ml[1797,58980+3]..[1797,58980+8])
                                Some
                                  expression (lambda/matching.ml[1797,58980+9]..[1797,58980+33])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[1797,58980+10]..[1797,58980+18])
                                        Pexp_construct "Pfield" (lambda/matching.ml[1797,58980+10]..[1797,58980+16])
                                        Some
                                          expression (lambda/matching.ml[1797,58980+17]..[1797,58980+18])
                                            Pexp_constant PConst_int (1,None)
                                      expression (lambda/matching.ml[1797,58980+20]..[1797,58980+27])
                                        Pexp_construct "::" (lambda/matching.ml[1797,58980+22]..[1797,58980+27]) ghost
                                        Some
                                          expression (lambda/matching.ml[1797,58980+22]..[1797,58980+27]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[1797,58980+22]..[1797,58980+25])
                                                Pexp_ident "arg" (lambda/matching.ml[1797,58980+22]..[1797,58980+25])
                                              expression (lambda/matching.ml[1797,58980+26]..[1797,58980+27]) ghost
                                                Pexp_construct "[]" (lambda/matching.ml[1797,58980+26]..[1797,58980+27]) ghost
                                                None
                                            ]
                                      expression (lambda/matching.ml[1797,58980+29]..[1797,58980+32])
                                        Pexp_ident "loc" (lambda/matching.ml[1797,58980+29]..[1797,58980+32])
                                    ]
                              expression (lambda/matching.ml[1797,58980+35]..[1797,58980+40])
                                Pexp_construct "Alias" (lambda/matching.ml[1797,58980+35]..[1797,58980+40])
                                None
                            ]
                          expression (lambda/matching.ml[1797,58980+45]..[1797,58980+48])
                            Pexp_ident "rem" (lambda/matching.ml[1797,58980+45]..[1797,58980+48])
                        ]
    ]
  structure_item (lambda/matching.ml[1799,59030+0]..[1833,60164+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1799,59030+4]..[1799,59030+18])
          Ppat_var "divide_variant" (lambda/matching.ml[1799,59030+4]..[1799,59030+18])
        expression (lambda/matching.ml[1799,59030+19]..[1833,60164+11]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1799,59030+20]..[1799,59030+26])
            Ppat_var "scopes" (lambda/matching.ml[1799,59030+20]..[1799,59030+26])
          expression (lambda/matching.ml[1799,59030+27]..[1833,60164+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1799,59030+27]..[1799,59030+30])
              Ppat_var "row" (lambda/matching.ml[1799,59030+27]..[1799,59030+30])
            expression (lambda/matching.ml[1799,59030+31]..[1833,60164+11]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1799,59030+31]..[1799,59030+34])
                Ppat_var "ctx" (lambda/matching.ml[1799,59030+31]..[1799,59030+34])
              expression (lambda/matching.ml[1799,59030+35]..[1833,60164+11]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1799,59030+35]..[1799,59030+70])
                  Ppat_record Closed
                  [
                    "cases" (lambda/matching.ml[1799,59030+37]..[1799,59030+42])
                      pattern (lambda/matching.ml[1799,59030+45]..[1799,59030+47])
                        Ppat_var "cl" (lambda/matching.ml[1799,59030+45]..[1799,59030+47])
                    "args" (lambda/matching.ml[1799,59030+49]..[1799,59030+53]) ghost
                      pattern (lambda/matching.ml[1799,59030+49]..[1799,59030+53])
                        Ppat_var "args" (lambda/matching.ml[1799,59030+49]..[1799,59030+53])
                    "default" (lambda/matching.ml[1799,59030+55]..[1799,59030+62])
                      pattern (lambda/matching.ml[1799,59030+65]..[1799,59030+68])
                        Ppat_var "def" (lambda/matching.ml[1799,59030+65]..[1799,59030+68])
                  ]
                expression (lambda/matching.ml[1800,59103+2]..[1833,60164+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1800,59103+6]..[1800,59103+9])
                        Ppat_var "row" (lambda/matching.ml[1800,59103+6]..[1800,59103+9])
                      expression (lambda/matching.ml[1800,59103+12]..[1800,59103+30])
                        Pexp_apply
                        expression (lambda/matching.ml[1800,59103+12]..[1800,59103+26])
                          Pexp_ident "Btype.row_repr" (lambda/matching.ml[1800,59103+12]..[1800,59103+26])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1800,59103+27]..[1800,59103+30])
                              Pexp_ident "row" (lambda/matching.ml[1800,59103+27]..[1800,59103+30])
                        ]
                  ]
                  expression (lambda/matching.ml[1801,59137+2]..[1833,60164+11])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lambda/matching.ml[1801,59137+10]..[1801,59137+16])
                          Ppat_var "divide" (lambda/matching.ml[1801,59137+10]..[1801,59137+16])
                        expression (lambda/matching.ml[1801,59137+19]..[1831,60151+7])
                          Pexp_function
                          [
                            <case>
                              pattern (lambda/matching.ml[1802,59165+6]..[1802,59165+8])
                                Ppat_construct "[]" (lambda/matching.ml[1802,59165+6]..[1802,59165+8])
                                None
                              expression (lambda/matching.ml[1802,59165+12]..[1802,59165+32])
                                Pexp_record
                                [
                                  "args" (lambda/matching.ml[1802,59165+14]..[1802,59165+18]) ghost
                                    expression (lambda/matching.ml[1802,59165+14]..[1802,59165+18])
                                      Pexp_ident "args" (lambda/matching.ml[1802,59165+14]..[1802,59165+18])
                                  "cells" (lambda/matching.ml[1802,59165+20]..[1802,59165+25])
                                    expression (lambda/matching.ml[1802,59165+28]..[1802,59165+30])
                                      Pexp_construct "[]" (lambda/matching.ml[1802,59165+28]..[1802,59165+30])
                                      None
                                ]
                                None
                            <case>
                              pattern (lambda/matching.ml[1803,59198+6]..[1803,59198+32])
                                Ppat_construct "::" (lambda/matching.ml[1803,59198+26]..[1803,59198+28])
                                Some
                                  []
                                  pattern (lambda/matching.ml[1803,59198+6]..[1803,59198+32]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[1803,59198+6]..[1803,59198+25])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[1803,59198+7]..[1803,59198+16])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[1803,59198+8]..[1803,59198+9])
                                                Ppat_var "p" (lambda/matching.ml[1803,59198+8]..[1803,59198+9])
                                              pattern (lambda/matching.ml[1803,59198+11]..[1803,59198+15])
                                                Ppat_var "patl" (lambda/matching.ml[1803,59198+11]..[1803,59198+15])
                                            ]
                                          pattern (lambda/matching.ml[1803,59198+18]..[1803,59198+24])
                                            Ppat_var "action" (lambda/matching.ml[1803,59198+18]..[1803,59198+24])
                                        ]
                                      pattern (lambda/matching.ml[1803,59198+29]..[1803,59198+32])
                                        Ppat_var "rem" (lambda/matching.ml[1803,59198+29]..[1803,59198+32])
                                    ]
                              expression (lambda/matching.ml[1804,59231+9]..[1831,60151+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[1805,59242+12]..[1805,59242+21])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[1805,59242+12]..[1805,59242+15])
                                          Ppat_var "lab" (lambda/matching.ml[1805,59242+12]..[1805,59242+15])
                                        pattern (lambda/matching.ml[1805,59242+17]..[1805,59242+21])
                                          Ppat_var "pato" (lambda/matching.ml[1805,59242+17]..[1805,59242+21])
                                      ]
                                    expression (lambda/matching.ml[1805,59242+24]..[1807,59337+29])
                                      Pexp_match
                                      expression (lambda/matching.ml[1805,59242+30]..[1805,59242+40])
                                        Pexp_field
                                        expression (lambda/matching.ml[1805,59242+30]..[1805,59242+31])
                                          Pexp_ident "p" (lambda/matching.ml[1805,59242+30]..[1805,59242+31])
                                        "pat_desc" (lambda/matching.ml[1805,59242+32]..[1805,59242+40])
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[1806,59288+12]..[1806,59288+35])
                                            Ppat_variant "Variant"
                                            Some
                                              pattern (lambda/matching.ml[1806,59288+21]..[1806,59288+35])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[1806,59288+22]..[1806,59288+25])
                                                    Ppat_var "lab" (lambda/matching.ml[1806,59288+22]..[1806,59288+25])
                                                  pattern (lambda/matching.ml[1806,59288+27]..[1806,59288+31])
                                                    Ppat_var "pato" (lambda/matching.ml[1806,59288+27]..[1806,59288+31])
                                                  pattern (lambda/matching.ml[1806,59288+33]..[1806,59288+34])
                                                    Ppat_any
                                                ]
                                          expression (lambda/matching.ml[1806,59288+39]..[1806,59288+48])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[1806,59288+39]..[1806,59288+42])
                                                Pexp_ident "lab" (lambda/matching.ml[1806,59288+39]..[1806,59288+42])
                                              expression (lambda/matching.ml[1806,59288+44]..[1806,59288+48])
                                                Pexp_ident "pato" (lambda/matching.ml[1806,59288+44]..[1806,59288+48])
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[1807,59337+12]..[1807,59337+13])
                                            Ppat_any
                                          expression (lambda/matching.ml[1807,59337+17]..[1807,59337+29])
                                            Pexp_assert
                                            expression (lambda/matching.ml[1807,59337+24]..[1807,59337+29])
                                              Pexp_construct "false" (lambda/matching.ml[1807,59337+24]..[1807,59337+29])
                                              None
                                      ]
                                ]
                                expression (lambda/matching.ml[1809,59378+8]..[1830,60126+24])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[1809,59378+12]..[1809,59378+16])
                                        Ppat_var "head" (lambda/matching.ml[1809,59378+12]..[1809,59378+16])
                                      expression (lambda/matching.ml[1809,59378+19]..[1809,59378+32])
                                        Pexp_apply
                                        expression (lambda/matching.ml[1809,59378+19]..[1809,59378+30])
                                          Pexp_ident "Simple.head" (lambda/matching.ml[1809,59378+19]..[1809,59378+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[1809,59378+31]..[1809,59378+32])
                                              Pexp_ident "p" (lambda/matching.ml[1809,59378+31]..[1809,59378+32])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[1810,59414+8]..[1830,60126+24])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[1810,59414+12]..[1810,59414+20])
                                          Ppat_var "variants" (lambda/matching.ml[1810,59414+12]..[1810,59414+20])
                                        expression (lambda/matching.ml[1810,59414+23]..[1810,59414+33])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1810,59414+23]..[1810,59414+29])
                                            Pexp_ident "divide" (lambda/matching.ml[1810,59414+23]..[1810,59414+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1810,59414+30]..[1810,59414+33])
                                                Pexp_ident "rem" (lambda/matching.ml[1810,59414+30]..[1810,59414+33])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[1811,59451+8]..[1830,60126+24])
                                      Pexp_ifthenelse
                                      expression (lambda/matching.ml[1812,59462+10]..[1813,59539+32])
                                        Pexp_try
                                        expression (lambda/matching.ml[1812,59462+14]..[1812,59462+76])
                                          Pexp_apply
                                          expression (lambda/matching.ml[1812,59462+67]..[1812,59462+68])
                                            Pexp_ident "=" (lambda/matching.ml[1812,59462+67]..[1812,59462+68])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1812,59462+14]..[1812,59462+66])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1812,59462+14]..[1812,59462+34])
                                                  Pexp_ident "Btype.row_field_repr" (lambda/matching.ml[1812,59462+14]..[1812,59462+34])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1812,59462+35]..[1812,59462+66])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[1812,59462+36]..[1812,59462+46])
                                                        Pexp_ident "List.assoc" (lambda/matching.ml[1812,59462+36]..[1812,59462+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1812,59462+47]..[1812,59462+50])
                                                            Pexp_ident "lab" (lambda/matching.ml[1812,59462+47]..[1812,59462+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[1812,59462+51]..[1812,59462+65])
                                                            Pexp_field
                                                            expression (lambda/matching.ml[1812,59462+51]..[1812,59462+54])
                                                              Pexp_ident "row" (lambda/matching.ml[1812,59462+51]..[1812,59462+54])
                                                            "row_fields" (lambda/matching.ml[1812,59462+55]..[1812,59462+65])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[1812,59462+69]..[1812,59462+76])
                                                Pexp_construct "Rabsent" (lambda/matching.ml[1812,59462+69]..[1812,59462+76])
                                                None
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[1813,59539+15]..[1813,59539+24])
                                              Ppat_construct "Not_found" (lambda/matching.ml[1813,59539+15]..[1813,59539+24])
                                              None
                                            expression (lambda/matching.ml[1813,59539+28]..[1813,59539+32])
                                              Pexp_construct "true" (lambda/matching.ml[1813,59539+28]..[1813,59539+32])
                                              None
                                        ]
                                      expression (lambda/matching.ml[1815,59585+10]..[1815,59585+18])
                                        Pexp_ident "variants" (lambda/matching.ml[1815,59585+10]..[1815,59585+18])
                                      Some
                                        expression (lambda/matching.ml[1817,59617+10]..[1830,60126+24])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[1817,59617+14]..[1817,59617+17])
                                                Ppat_var "tag" (lambda/matching.ml[1817,59617+14]..[1817,59617+17])
                                              expression (lambda/matching.ml[1817,59617+20]..[1817,59617+42])
                                                Pexp_apply
                                                expression (lambda/matching.ml[1817,59617+20]..[1817,59617+38])
                                                  Pexp_ident "Btype.hash_variant" (lambda/matching.ml[1817,59617+20]..[1817,59617+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[1817,59617+39]..[1817,59617+42])
                                                      Pexp_ident "lab" (lambda/matching.ml[1817,59617+39]..[1817,59617+42])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[1818,59663+10]..[1830,60126+24])
                                            Pexp_match
                                            expression (lambda/matching.ml[1818,59663+16]..[1818,59663+20])
                                              Pexp_ident "pato" (lambda/matching.ml[1818,59663+16]..[1818,59663+20])
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[1819,59689+12]..[1819,59689+16])
                                                  Ppat_construct "None" (lambda/matching.ml[1819,59689+12]..[1819,59689+16])
                                                  None
                                                expression (lambda/matching.ml[1820,59709+14]..[1822,59810+65])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1820,59709+14]..[1820,59709+24])
                                                    Pexp_ident "add_in_div" (lambda/matching.ml[1820,59709+14]..[1820,59709+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1821,59734+16]..[1821,59734+75])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1821,59734+17]..[1821,59734+30])
                                                          Pexp_ident "make_matching" (lambda/matching.ml[1821,59734+17]..[1821,59734+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1821,59734+31]..[1821,59734+61])
                                                              Pexp_ident "get_expr_args_variant_constant" (lambda/matching.ml[1821,59734+31]..[1821,59734+61])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1821,59734+62]..[1821,59734+66])
                                                              Pexp_ident "head" (lambda/matching.ml[1821,59734+62]..[1821,59734+66])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1821,59734+67]..[1821,59734+70])
                                                              Pexp_ident "def" (lambda/matching.ml[1821,59734+67]..[1821,59734+70])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1821,59734+71]..[1821,59734+74])
                                                              Pexp_ident "ctx" (lambda/matching.ml[1821,59734+71]..[1821,59734+74])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1822,59810+16]..[1822,59810+21])
                                                        Pexp_ident "=" (lambda/matching.ml[1822,59810+16]..[1822,59810+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1822,59810+22]..[1822,59810+41])
                                                        Pexp_construct "Cstr_constant" (lambda/matching.ml[1822,59810+23]..[1822,59810+36])
                                                        Some
                                                          expression (lambda/matching.ml[1822,59810+37]..[1822,59810+40])
                                                            Pexp_ident "tag" (lambda/matching.ml[1822,59810+37]..[1822,59810+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1822,59810+42]..[1822,59810+56])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1822,59810+43]..[1822,59810+47])
                                                            Pexp_ident "patl" (lambda/matching.ml[1822,59810+43]..[1822,59810+47])
                                                          expression (lambda/matching.ml[1822,59810+49]..[1822,59810+55])
                                                            Pexp_ident "action" (lambda/matching.ml[1822,59810+49]..[1822,59810+55])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1822,59810+57]..[1822,59810+65])
                                                        Pexp_ident "variants" (lambda/matching.ml[1822,59810+57]..[1822,59810+65])
                                                  ]
                                              <case>
                                                pattern (lambda/matching.ml[1823,59876+12]..[1823,59876+20])
                                                  Ppat_construct "Some" (lambda/matching.ml[1823,59876+12]..[1823,59876+16])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[1823,59876+17]..[1823,59876+20])
                                                      Ppat_var "pat" (lambda/matching.ml[1823,59876+17]..[1823,59876+20])
                                                expression (lambda/matching.ml[1824,59900+14]..[1830,60126+24])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1824,59900+14]..[1824,59900+24])
                                                    Pexp_ident "add_in_div" (lambda/matching.ml[1824,59900+14]..[1824,59900+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1825,59925+16]..[1827,60016+32])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1825,59925+17]..[1825,59925+30])
                                                          Pexp_ident "make_matching" (lambda/matching.ml[1825,59925+17]..[1825,59925+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1826,59956+19]..[1826,59956+59])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[1826,59956+20]..[1826,59956+50])
                                                                Pexp_ident "get_expr_args_variant_nonconst" (lambda/matching.ml[1826,59956+20]..[1826,59956+50])
                                                              [
                                                                <arg>
                                                                Labelled "scopes"
                                                                  expression (lambda/matching.ml[1826,59956+52]..[1826,59956+58])
                                                                    Pexp_ident "scopes" (lambda/matching.ml[1826,59956+52]..[1826,59956+58])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1827,60016+19]..[1827,60016+23])
                                                              Pexp_ident "head" (lambda/matching.ml[1827,60016+19]..[1827,60016+23])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1827,60016+24]..[1827,60016+27])
                                                              Pexp_ident "def" (lambda/matching.ml[1827,60016+24]..[1827,60016+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1827,60016+28]..[1827,60016+31])
                                                              Pexp_ident "ctx" (lambda/matching.ml[1827,60016+28]..[1827,60016+31])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1828,60049+16]..[1828,60049+21])
                                                        Pexp_ident "=" (lambda/matching.ml[1828,60049+16]..[1828,60049+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1828,60049+22]..[1828,60049+38])
                                                        Pexp_construct "Cstr_block" (lambda/matching.ml[1828,60049+23]..[1828,60049+33])
                                                        Some
                                                          expression (lambda/matching.ml[1828,60049+34]..[1828,60049+37])
                                                            Pexp_ident "tag" (lambda/matching.ml[1828,60049+34]..[1828,60049+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1829,60088+16]..[1829,60088+37])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[1829,60088+17]..[1829,60088+28])
                                                            Pexp_construct "::" (lambda/matching.ml[1829,60088+21]..[1829,60088+23])
                                                            Some
                                                              expression (lambda/matching.ml[1829,60088+17]..[1829,60088+28]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[1829,60088+17]..[1829,60088+20])
                                                                    Pexp_ident "pat" (lambda/matching.ml[1829,60088+17]..[1829,60088+20])
                                                                  expression (lambda/matching.ml[1829,60088+24]..[1829,60088+28])
                                                                    Pexp_ident "patl" (lambda/matching.ml[1829,60088+24]..[1829,60088+28])
                                                                ]
                                                          expression (lambda/matching.ml[1829,60088+30]..[1829,60088+36])
                                                            Pexp_ident "action" (lambda/matching.ml[1829,60088+30]..[1829,60088+36])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1830,60126+16]..[1830,60126+24])
                                                        Pexp_ident "variants" (lambda/matching.ml[1830,60126+16]..[1830,60126+24])
                                                  ]
                                            ]
                          ]
                    ]
                    expression (lambda/matching.ml[1833,60164+2]..[1833,60164+11])
                      Pexp_apply
                      expression (lambda/matching.ml[1833,60164+2]..[1833,60164+8])
                        Pexp_ident "divide" (lambda/matching.ml[1833,60164+2]..[1833,60164+8])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1833,60164+9]..[1833,60164+11])
                            Pexp_ident "cl" (lambda/matching.ml[1833,60164+9]..[1833,60164+11])
                      ]
    ]
  structure_item (lambda/matching.ml[1841,60247+0]..[1841,60247+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1841,60247+4]..[1841,60247+20])
          Ppat_var "get_pat_args_var" (lambda/matching.ml[1841,60247+4]..[1841,60247+20])
        expression (lambda/matching.ml[1841,60247+23]..[1841,60247+35])
          Pexp_ident "drop_pat_arg" (lambda/matching.ml[1841,60247+23]..[1841,60247+35])
    ]
  structure_item (lambda/matching.ml[1842,60283+0]..[1842,60283+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1842,60283+4]..[1842,60283+21])
          Ppat_var "get_expr_args_var" (lambda/matching.ml[1842,60283+4]..[1842,60283+21])
        expression (lambda/matching.ml[1842,60283+24]..[1842,60283+37])
          Pexp_ident "drop_expr_arg" (lambda/matching.ml[1842,60283+24]..[1842,60283+37])
    ]
  structure_item (lambda/matching.ml[1844,60322+0]..[1848,60418+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1844,60322+4]..[1844,60322+14])
          Ppat_var "divide_var" (lambda/matching.ml[1844,60322+4]..[1844,60322+14])
        expression (lambda/matching.ml[1844,60322+15]..[1848,60418+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1844,60322+15]..[1844,60322+18])
            Ppat_var "ctx" (lambda/matching.ml[1844,60322+15]..[1844,60322+18])
          expression (lambda/matching.ml[1844,60322+19]..[1848,60418+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1844,60322+19]..[1844,60322+21])
              Ppat_var "pm" (lambda/matching.ml[1844,60322+19]..[1844,60322+21])
            expression (lambda/matching.ml[1845,60346+2]..[1848,60418+30])
              Pexp_apply
              expression (lambda/matching.ml[1845,60346+2]..[1845,60346+13])
                Pexp_ident "divide_line" (lambda/matching.ml[1845,60346+2]..[1845,60346+13])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1845,60346+14]..[1845,60346+28])
                    Pexp_ident "Context.lshift" (lambda/matching.ml[1845,60346+14]..[1845,60346+28])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1846,60375+4]..[1846,60375+21])
                    Pexp_ident "get_expr_args_var" (lambda/matching.ml[1846,60375+4]..[1846,60375+21])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1847,60397+4]..[1847,60397+20])
                    Pexp_ident "get_pat_args_var" (lambda/matching.ml[1847,60397+4]..[1847,60397+20])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1848,60418+4]..[1848,60418+23])
                    Pexp_ident "Patterns.Head.omega" (lambda/matching.ml[1848,60418+4]..[1848,60418+23])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1848,60418+24]..[1848,60418+27])
                    Pexp_ident "ctx" (lambda/matching.ml[1848,60418+24]..[1848,60418+27])
                <arg>
                Nolabel
                  expression (lambda/matching.ml[1848,60418+28]..[1848,60418+30])
                    Pexp_ident "pm" (lambda/matching.ml[1848,60418+28]..[1848,60418+30])
              ]
    ]
  structure_item (lambda/matching.ml[1852,60491+0]..[1856,60636+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1852,60491+4]..[1852,60491+21])
          Ppat_var "get_pat_args_lazy" (lambda/matching.ml[1852,60491+4]..[1852,60491+21])
        expression (lambda/matching.ml[1852,60491+22]..[1856,60636+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1852,60491+22]..[1852,60491+23])
            Ppat_var "p" (lambda/matching.ml[1852,60491+22]..[1852,60491+23])
          expression (lambda/matching.ml[1852,60491+24]..[1856,60636+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1852,60491+24]..[1852,60491+27])
              Ppat_var "rem" (lambda/matching.ml[1852,60491+24]..[1852,60491+27])
            expression (lambda/matching.ml[1853,60521+2]..[1856,60636+21])
              Pexp_match
              expression (lambda/matching.ml[1853,60521+8]..[1853,60521+9])
                Pexp_ident "p" (lambda/matching.ml[1853,60521+8]..[1853,60521+9])
              [
                <case>
                  pattern (lambda/matching.ml[1854,60536+4]..[1854,60536+27])
                    Ppat_record Closed
                    [
                      "pat_desc" (lambda/matching.ml[1854,60536+6]..[1854,60536+14])
                        pattern (lambda/matching.ml[1854,60536+17]..[1854,60536+25])
                          Ppat_construct "Tpat_any" (lambda/matching.ml[1854,60536+17]..[1854,60536+25])
                          None
                    ]
                  expression (lambda/matching.ml[1854,60536+31]..[1854,60536+52])
                    Pexp_construct "::" (lambda/matching.ml[1854,60536+46]..[1854,60536+48])
                    Some
                      expression (lambda/matching.ml[1854,60536+31]..[1854,60536+52]) ghost
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1854,60536+31]..[1854,60536+45])
                            Pexp_ident "Patterns.omega" (lambda/matching.ml[1854,60536+31]..[1854,60536+45])
                          expression (lambda/matching.ml[1854,60536+49]..[1854,60536+52])
                            Pexp_ident "rem" (lambda/matching.ml[1854,60536+49]..[1854,60536+52])
                        ]
                <case>
                  pattern (lambda/matching.ml[1855,60589+4]..[1855,60589+32])
                    Ppat_record Closed
                    [
                      "pat_desc" (lambda/matching.ml[1855,60589+6]..[1855,60589+14])
                        pattern (lambda/matching.ml[1855,60589+17]..[1855,60589+30])
                          Ppat_construct "Tpat_lazy" (lambda/matching.ml[1855,60589+17]..[1855,60589+26])
                          Some
                            []
                            pattern (lambda/matching.ml[1855,60589+27]..[1855,60589+30])
                              Ppat_var "arg" (lambda/matching.ml[1855,60589+27]..[1855,60589+30])
                    ]
                  expression (lambda/matching.ml[1855,60589+36]..[1855,60589+46])
                    Pexp_construct "::" (lambda/matching.ml[1855,60589+40]..[1855,60589+42])
                    Some
                      expression (lambda/matching.ml[1855,60589+36]..[1855,60589+46]) ghost
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1855,60589+36]..[1855,60589+39])
                            Pexp_ident "arg" (lambda/matching.ml[1855,60589+36]..[1855,60589+39])
                          expression (lambda/matching.ml[1855,60589+43]..[1855,60589+46])
                            Pexp_ident "rem" (lambda/matching.ml[1855,60589+43]..[1855,60589+46])
                        ]
                <case>
                  pattern (lambda/matching.ml[1856,60636+4]..[1856,60636+5])
                    Ppat_any
                  expression (lambda/matching.ml[1856,60636+9]..[1856,60636+21])
                    Pexp_assert
                    expression (lambda/matching.ml[1856,60636+16]..[1856,60636+21])
                      Pexp_construct "false" (lambda/matching.ml[1856,60636+16]..[1856,60636+21])
                      None
              ]
    ]
  structure_item (lambda/matching.ml[1863,60853+0]..[1863,60853+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1863,60853+4]..[1863,60853+16])
          Ppat_var "prim_obj_tag" (lambda/matching.ml[1863,60853+4]..[1863,60853+16])
        expression (lambda/matching.ml[1863,60853+19]..[1863,60853+78])
          Pexp_apply
          expression (lambda/matching.ml[1863,60853+19]..[1863,60853+35])
            Pexp_ident "Primitive.simple" (lambda/matching.ml[1863,60853+19]..[1863,60853+35])
          [
            <arg>
            Labelled "name"
              expression (lambda/matching.ml[1863,60853+42]..[1863,60853+56])
                Pexp_constant PConst_string("caml_obj_tag",(lambda/matching.ml[1863,60853+43]..[1863,60853+55]),None)
            <arg>
            Labelled "arity"
              expression (lambda/matching.ml[1863,60853+64]..[1863,60853+65])
                Pexp_constant PConst_int (1,None)
            <arg>
            Labelled "alloc"
              expression (lambda/matching.ml[1863,60853+73]..[1863,60853+78])
                Pexp_construct "false" (lambda/matching.ml[1863,60853+73]..[1863,60853+78])
                None
          ]
    ]
  structure_item (lambda/matching.ml[1865,60933+0]..[1879,61529+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1865,60933+4]..[1865,60933+17])
          Ppat_var "get_mod_field" (lambda/matching.ml[1865,60933+4]..[1865,60933+17])
        expression (lambda/matching.ml[1865,60933+18]..[1879,61529+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1865,60933+18]..[1865,60933+25])
            Ppat_var "modname" (lambda/matching.ml[1865,60933+18]..[1865,60933+25])
          expression (lambda/matching.ml[1865,60933+26]..[1879,61529+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1865,60933+26]..[1865,60933+31])
              Ppat_var "field" (lambda/matching.ml[1865,60933+26]..[1865,60933+31])
            expression (lambda/matching.ml[1866,60967+2]..[1879,61529+9])
              Pexp_lazy
              expression (lambda/matching.ml[1867,60974+4]..[1879,61529+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[1867,60974+9]..[1867,60974+18])
                      Ppat_var "mod_ident" (lambda/matching.ml[1867,60974+9]..[1867,60974+18])
                    expression (lambda/matching.ml[1867,60974+21]..[1867,60974+52])
                      Pexp_apply
                      expression (lambda/matching.ml[1867,60974+21]..[1867,60974+44])
                        Pexp_ident "Ident.create_persistent" (lambda/matching.ml[1867,60974+21]..[1867,60974+44])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1867,60974+45]..[1867,60974+52])
                            Pexp_ident "modname" (lambda/matching.ml[1867,60974+45]..[1867,60974+52])
                      ]
                ]
                expression (lambda/matching.ml[1868,61030+5]..[1879,61529+8])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1868,61030+9]..[1868,61030+12])
                        Ppat_var "env" (lambda/matching.ml[1868,61030+9]..[1868,61030+12])
                      expression (lambda/matching.ml[1869,61045+7]..[1869,61045+69])
                        Pexp_apply
                        expression (lambda/matching.ml[1869,61045+7]..[1869,61045+35])
                          Pexp_ident "Env.add_persistent_structure" (lambda/matching.ml[1869,61045+7]..[1869,61045+35])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1869,61045+36]..[1869,61045+45])
                              Pexp_ident "mod_ident" (lambda/matching.ml[1869,61045+36]..[1869,61045+45])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1869,61045+46]..[1869,61045+69])
                              Pexp_ident "Env.initial_safe_string" (lambda/matching.ml[1869,61045+46]..[1869,61045+69])
                        ]
                  ]
                  expression (lambda/matching.ml[1871,61123+5]..[1879,61529+8])
                    Pexp_match
                    expression (lambda/matching.ml[1871,61123+11]..[1871,61123+46])
                      Pexp_apply
                      expression (lambda/matching.ml[1871,61123+11]..[1871,61123+34])
                        Pexp_ident "Env.open_pers_signature" (lambda/matching.ml[1871,61123+11]..[1871,61123+34])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1871,61123+35]..[1871,61123+42])
                            Pexp_ident "modname" (lambda/matching.ml[1871,61123+35]..[1871,61123+42])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1871,61123+43]..[1871,61123+46])
                            Pexp_ident "env" (lambda/matching.ml[1871,61123+43]..[1871,61123+46])
                      ]
                    [
                      <case>
                        pattern (lambda/matching.ml[1872,61175+7]..[1872,61175+23])
                          Ppat_construct "Error" (lambda/matching.ml[1872,61175+7]..[1872,61175+12])
                          Some
                            []
                            pattern (lambda/matching.ml[1872,61175+13]..[1872,61175+23])
                              Ppat_variant "Not_found"
                              None
                        expression (lambda/matching.ml[1873,61202+9]..[1873,61202+60])
                          Pexp_apply
                          expression (lambda/matching.ml[1873,61202+9]..[1873,61202+20])
                            Pexp_ident "fatal_error" (lambda/matching.ml[1873,61202+9]..[1873,61202+20])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1873,61202+21]..[1873,61202+60])
                                Pexp_apply
                                expression (lambda/matching.ml[1873,61202+32]..[1873,61202+33])
                                  Pexp_ident "^" (lambda/matching.ml[1873,61202+32]..[1873,61202+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1873,61202+22]..[1873,61202+31])
                                      Pexp_constant PConst_string("Module ",(lambda/matching.ml[1873,61202+23]..[1873,61202+30]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1873,61202+34]..[1873,61202+59])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1873,61202+42]..[1873,61202+43])
                                        Pexp_ident "^" (lambda/matching.ml[1873,61202+42]..[1873,61202+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1873,61202+34]..[1873,61202+41])
                                            Pexp_ident "modname" (lambda/matching.ml[1873,61202+34]..[1873,61202+41])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1873,61202+44]..[1873,61202+59])
                                            Pexp_constant PConst_string(" unavailable.",(lambda/matching.ml[1873,61202+45]..[1873,61202+58]),None)
                                      ]
                                ]
                          ]
                      <case>
                        pattern (lambda/matching.ml[1874,61263+7]..[1874,61263+13])
                          Ppat_construct "Ok" (lambda/matching.ml[1874,61263+7]..[1874,61263+9])
                          Some
                            []
                            pattern (lambda/matching.ml[1874,61263+10]..[1874,61263+13])
                              Ppat_var "env" (lambda/matching.ml[1874,61263+10]..[1874,61263+13])
                        expression (lambda/matching.ml[1874,61263+17]..[1879,61529+8])
                          Pexp_match
                          expression (lambda/matching.ml[1875,61282+15]..[1875,61282+66])
                            Pexp_apply
                            expression (lambda/matching.ml[1875,61282+15]..[1875,61282+37])
                              Pexp_ident "Env.find_value_by_name" (lambda/matching.ml[1875,61282+15]..[1875,61282+37])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1875,61282+38]..[1875,61282+62])
                                  Pexp_construct "Longident.Lident" (lambda/matching.ml[1875,61282+39]..[1875,61282+55])
                                  Some
                                    expression (lambda/matching.ml[1875,61282+56]..[1875,61282+61])
                                      Pexp_ident "field" (lambda/matching.ml[1875,61282+56]..[1875,61282+61])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1875,61282+63]..[1875,61282+66])
                                  Pexp_ident "env" (lambda/matching.ml[1875,61282+63]..[1875,61282+66])
                            ]
                          [
                            <case>
                              pattern (lambda/matching.ml[1876,61354+11]..[1876,61354+30])
                                Ppat_exception
                                pattern (lambda/matching.ml[1876,61354+21]..[1876,61354+30])
                                  Ppat_construct "Not_found" (lambda/matching.ml[1876,61354+21]..[1876,61354+30])
                                  None
                              expression (lambda/matching.ml[1877,61388+13]..[1877,61388+79])
                                Pexp_apply
                                expression (lambda/matching.ml[1877,61388+13]..[1877,61388+24])
                                  Pexp_ident "fatal_error" (lambda/matching.ml[1877,61388+13]..[1877,61388+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1877,61388+25]..[1877,61388+79])
                                      Pexp_apply
                                      expression (lambda/matching.ml[1877,61388+39]..[1877,61388+40])
                                        Pexp_ident "^" (lambda/matching.ml[1877,61388+39]..[1877,61388+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1877,61388+26]..[1877,61388+38])
                                            Pexp_constant PConst_string("Primitive ",(lambda/matching.ml[1877,61388+27]..[1877,61388+37]),None)
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[1877,61388+41]..[1877,61388+78])
                                            Pexp_apply
                                            expression (lambda/matching.ml[1877,61388+49]..[1877,61388+50])
                                              Pexp_ident "^" (lambda/matching.ml[1877,61388+49]..[1877,61388+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1877,61388+41]..[1877,61388+48])
                                                  Pexp_ident "modname" (lambda/matching.ml[1877,61388+41]..[1877,61388+48])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[1877,61388+51]..[1877,61388+78])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[1877,61388+55]..[1877,61388+56])
                                                    Pexp_ident "^" (lambda/matching.ml[1877,61388+55]..[1877,61388+56])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1877,61388+51]..[1877,61388+54])
                                                        Pexp_constant PConst_string(".",(lambda/matching.ml[1877,61388+52]..[1877,61388+53]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[1877,61388+57]..[1877,61388+78])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[1877,61388+63]..[1877,61388+64])
                                                          Pexp_ident "^" (lambda/matching.ml[1877,61388+63]..[1877,61388+64])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1877,61388+57]..[1877,61388+62])
                                                              Pexp_ident "field" (lambda/matching.ml[1877,61388+57]..[1877,61388+62])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[1877,61388+65]..[1877,61388+78])
                                                              Pexp_constant PConst_string(" not found.",(lambda/matching.ml[1877,61388+66]..[1877,61388+77]),None)
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                            <case>
                              pattern (lambda/matching.ml[1878,61468+11]..[1878,61468+18])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[1878,61468+11]..[1878,61468+15])
                                    Ppat_var "path" (lambda/matching.ml[1878,61468+11]..[1878,61468+15])
                                  pattern (lambda/matching.ml[1878,61468+17]..[1878,61468+18])
                                    Ppat_any
                                ]
                              expression (lambda/matching.ml[1878,61468+22]..[1878,61468+60])
                                Pexp_apply
                                expression (lambda/matching.ml[1878,61468+22]..[1878,61468+39])
                                  Pexp_ident "transl_value_path" (lambda/matching.ml[1878,61468+22]..[1878,61468+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1878,61468+40]..[1878,61468+51])
                                      Pexp_construct "Loc_unknown" (lambda/matching.ml[1878,61468+40]..[1878,61468+51])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1878,61468+52]..[1878,61468+55])
                                      Pexp_ident "env" (lambda/matching.ml[1878,61468+52]..[1878,61468+55])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1878,61468+56]..[1878,61468+60])
                                      Pexp_ident "path" (lambda/matching.ml[1878,61468+56]..[1878,61468+60])
                                ]
                          ]
                    ]
    ]
  structure_item (lambda/matching.ml[1881,61540+0]..[1881,61540+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1881,61540+4]..[1881,61540+25])
          Ppat_var "code_force_lazy_block" (lambda/matching.ml[1881,61540+4]..[1881,61540+25])
        expression (lambda/matching.ml[1881,61540+28]..[1881,61540+79])
          Pexp_apply
          expression (lambda/matching.ml[1881,61540+28]..[1881,61540+41])
            Pexp_ident "get_mod_field" (lambda/matching.ml[1881,61540+28]..[1881,61540+41])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[1881,61540+42]..[1881,61540+60])
                Pexp_constant PConst_string("CamlinternalLazy",(lambda/matching.ml[1881,61540+43]..[1881,61540+59]),None)
            <arg>
            Nolabel
              expression (lambda/matching.ml[1881,61540+61]..[1881,61540+79])
                Pexp_constant PConst_string("force_lazy_block",(lambda/matching.ml[1881,61540+62]..[1881,61540+78]),None)
          ]
    ]
  structure_item (lambda/matching.ml[1883,61621+0]..[1883,61621+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1883,61621+4]..[1883,61621+19])
          Ppat_var "code_force_lazy" (lambda/matching.ml[1883,61621+4]..[1883,61621+19])
        expression (lambda/matching.ml[1883,61621+22]..[1883,61621+62])
          Pexp_apply
          expression (lambda/matching.ml[1883,61621+22]..[1883,61621+35])
            Pexp_ident "get_mod_field" (lambda/matching.ml[1883,61621+22]..[1883,61621+35])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[1883,61621+36]..[1883,61621+54])
                Pexp_constant PConst_string("CamlinternalLazy",(lambda/matching.ml[1883,61621+37]..[1883,61621+53]),None)
            <arg>
            Nolabel
              expression (lambda/matching.ml[1883,61621+55]..[1883,61621+62])
                Pexp_constant PConst_string("force",(lambda/matching.ml[1883,61621+56]..[1883,61621+61]),None)
          ]
    ]
  structure_item (lambda/matching.ml[1895,62033+0]..[1933,63371+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1895,62033+4]..[1895,62033+26])
          Ppat_var "inline_lazy_force_cond" (lambda/matching.ml[1895,62033+4]..[1895,62033+26])
        expression (lambda/matching.ml[1895,62033+27]..[1933,63371+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1895,62033+27]..[1895,62033+30])
            Ppat_var "arg" (lambda/matching.ml[1895,62033+27]..[1895,62033+30])
          expression (lambda/matching.ml[1895,62033+31]..[1933,63371+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1895,62033+31]..[1895,62033+34])
              Ppat_var "loc" (lambda/matching.ml[1895,62033+31]..[1895,62033+34])
            expression (lambda/matching.ml[1896,62070+2]..[1933,63371+30])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1896,62070+6]..[1896,62070+11])
                    Ppat_var "idarg" (lambda/matching.ml[1896,62070+6]..[1896,62070+11])
                  expression (lambda/matching.ml[1896,62070+14]..[1896,62070+40])
                    Pexp_apply
                    expression (lambda/matching.ml[1896,62070+14]..[1896,62070+32])
                      Pexp_ident "Ident.create_local" (lambda/matching.ml[1896,62070+14]..[1896,62070+32])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1896,62070+33]..[1896,62070+40])
                          Pexp_constant PConst_string("lzarg",(lambda/matching.ml[1896,62070+34]..[1896,62070+39]),None)
                    ]
              ]
              expression (lambda/matching.ml[1897,62114+2]..[1933,63371+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[1897,62114+6]..[1897,62114+10])
                      Ppat_var "varg" (lambda/matching.ml[1897,62114+6]..[1897,62114+10])
                    expression (lambda/matching.ml[1897,62114+13]..[1897,62114+23])
                      Pexp_construct "Lvar" (lambda/matching.ml[1897,62114+13]..[1897,62114+17])
                      Some
                        expression (lambda/matching.ml[1897,62114+18]..[1897,62114+23])
                          Pexp_ident "idarg" (lambda/matching.ml[1897,62114+18]..[1897,62114+23])
                ]
                expression (lambda/matching.ml[1898,62141+2]..[1933,63371+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1898,62141+6]..[1898,62141+9])
                        Ppat_var "tag" (lambda/matching.ml[1898,62141+6]..[1898,62141+9])
                      expression (lambda/matching.ml[1898,62141+12]..[1898,62141+36])
                        Pexp_apply
                        expression (lambda/matching.ml[1898,62141+12]..[1898,62141+30])
                          Pexp_ident "Ident.create_local" (lambda/matching.ml[1898,62141+12]..[1898,62141+30])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1898,62141+31]..[1898,62141+36])
                              Pexp_constant PConst_string("tag",(lambda/matching.ml[1898,62141+32]..[1898,62141+35]),None)
                        ]
                  ]
                  expression (lambda/matching.ml[1899,62181+2]..[1933,63371+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[1899,62181+6]..[1899,62181+13])
                          Ppat_var "tag_var" (lambda/matching.ml[1899,62181+6]..[1899,62181+13])
                        expression (lambda/matching.ml[1899,62181+16]..[1899,62181+24])
                          Pexp_construct "Lvar" (lambda/matching.ml[1899,62181+16]..[1899,62181+20])
                          Some
                            expression (lambda/matching.ml[1899,62181+21]..[1899,62181+24])
                              Pexp_ident "tag" (lambda/matching.ml[1899,62181+21]..[1899,62181+24])
                    ]
                    expression (lambda/matching.ml[1900,62209+2]..[1933,63371+30])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[1900,62209+6]..[1900,62209+15])
                            Ppat_var "force_fun" (lambda/matching.ml[1900,62209+6]..[1900,62209+15])
                          expression (lambda/matching.ml[1900,62209+18]..[1900,62209+50])
                            Pexp_apply
                            expression (lambda/matching.ml[1900,62209+18]..[1900,62209+28])
                              Pexp_ident "Lazy.force" (lambda/matching.ml[1900,62209+18]..[1900,62209+28])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[1900,62209+29]..[1900,62209+50])
                                  Pexp_ident "code_force_lazy_block" (lambda/matching.ml[1900,62209+29]..[1900,62209+50])
                            ]
                      ]
                      expression (lambda/matching.ml[1901,62263+2]..[1933,63371+30])
                        Pexp_construct "Llet" (lambda/matching.ml[1901,62263+2]..[1901,62263+6])
                        Some
                          expression (lambda/matching.ml[1902,62270+4]..[1933,63371+30])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[1902,62270+6]..[1902,62270+12])
                                Pexp_construct "Strict" (lambda/matching.ml[1902,62270+6]..[1902,62270+12])
                                None
                              expression (lambda/matching.ml[1903,62284+6]..[1903,62284+13])
                                Pexp_construct "Pgenval" (lambda/matching.ml[1903,62284+6]..[1903,62284+13])
                                None
                              expression (lambda/matching.ml[1904,62299+6]..[1904,62299+11])
                                Pexp_ident "idarg" (lambda/matching.ml[1904,62299+6]..[1904,62299+11])
                              expression (lambda/matching.ml[1905,62312+6]..[1905,62312+9])
                                Pexp_ident "arg" (lambda/matching.ml[1905,62312+6]..[1905,62312+9])
                              expression (lambda/matching.ml[1906,62323+6]..[1933,63371+28])
                                Pexp_construct "Llet" (lambda/matching.ml[1906,62323+6]..[1906,62323+10])
                                Some
                                  expression (lambda/matching.ml[1907,62334+8]..[1933,63371+28])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[1907,62334+10]..[1907,62334+15])
                                        Pexp_construct "Alias" (lambda/matching.ml[1907,62334+10]..[1907,62334+15])
                                        None
                                      expression (lambda/matching.ml[1908,62351+10]..[1908,62351+17])
                                        Pexp_construct "Pgenval" (lambda/matching.ml[1908,62351+10]..[1908,62351+17])
                                        None
                                      expression (lambda/matching.ml[1909,62370+10]..[1909,62370+13])
                                        Pexp_ident "tag" (lambda/matching.ml[1909,62370+10]..[1909,62370+13])
                                      expression (lambda/matching.ml[1910,62385+10]..[1910,62385+52])
                                        Pexp_construct "Lprim" (lambda/matching.ml[1910,62385+10]..[1910,62385+15])
                                        Some
                                          expression (lambda/matching.ml[1910,62385+16]..[1910,62385+52])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[1910,62385+17]..[1910,62385+36])
                                                Pexp_construct "Pccall" (lambda/matching.ml[1910,62385+17]..[1910,62385+23])
                                                Some
                                                  expression (lambda/matching.ml[1910,62385+24]..[1910,62385+36])
                                                    Pexp_ident "prim_obj_tag" (lambda/matching.ml[1910,62385+24]..[1910,62385+36])
                                              expression (lambda/matching.ml[1910,62385+38]..[1910,62385+46])
                                                Pexp_construct "::" (lambda/matching.ml[1910,62385+40]..[1910,62385+46]) ghost
                                                Some
                                                  expression (lambda/matching.ml[1910,62385+40]..[1910,62385+46]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1910,62385+40]..[1910,62385+44])
                                                        Pexp_ident "varg" (lambda/matching.ml[1910,62385+40]..[1910,62385+44])
                                                      expression (lambda/matching.ml[1910,62385+45]..[1910,62385+46]) ghost
                                                        Pexp_construct "[]" (lambda/matching.ml[1910,62385+45]..[1910,62385+46]) ghost
                                                        None
                                                    ]
                                              expression (lambda/matching.ml[1910,62385+48]..[1910,62385+51])
                                                Pexp_ident "loc" (lambda/matching.ml[1910,62385+48]..[1910,62385+51])
                                            ]
                                      expression (lambda/matching.ml[1911,62439+10]..[1933,63371+26])
                                        Pexp_construct "Lifthenelse" (lambda/matching.ml[1911,62439+10]..[1911,62439+21])
                                        Some
                                          expression (lambda/matching.ml[1913,62530+12]..[1933,63371+26])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[1913,62530+14]..[1916,62662+23])
                                                Pexp_construct "Lprim" (lambda/matching.ml[1913,62530+14]..[1913,62530+19])
                                                Some
                                                  expression (lambda/matching.ml[1914,62550+16]..[1916,62662+23])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1914,62550+18]..[1914,62550+30])
                                                        Pexp_construct "Pintcomp" (lambda/matching.ml[1914,62550+18]..[1914,62550+26])
                                                        Some
                                                          expression (lambda/matching.ml[1914,62550+27]..[1914,62550+30])
                                                            Pexp_construct "Ceq" (lambda/matching.ml[1914,62550+27]..[1914,62550+30])
                                                            None
                                                      expression (lambda/matching.ml[1915,62582+18]..[1915,62582+78])
                                                        Pexp_construct "::" (lambda/matching.ml[1915,62582+20]..[1915,62582+78]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[1915,62582+20]..[1915,62582+78]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1915,62582+20]..[1915,62582+27])
                                                                Pexp_ident "tag_var" (lambda/matching.ml[1915,62582+20]..[1915,62582+27])
                                                              expression (lambda/matching.ml[1915,62582+29]..[1915,62582+78]) ghost
                                                                Pexp_construct "::" (lambda/matching.ml[1915,62582+29]..[1915,62582+78]) ghost
                                                                Some
                                                                  expression (lambda/matching.ml[1915,62582+29]..[1915,62582+78]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[1915,62582+29]..[1915,62582+76])
Pexp_construct "Lconst" (lambda/matching.ml[1915,62582+29]..[1915,62582+35])
Some
  expression (lambda/matching.ml[1915,62582+36]..[1915,62582+76])
    Pexp_construct "Const_base" (lambda/matching.ml[1915,62582+37]..[1915,62582+47])
    Some
      expression (lambda/matching.ml[1915,62582+48]..[1915,62582+75])
        Pexp_construct "Const_int" (lambda/matching.ml[1915,62582+49]..[1915,62582+58])
        Some
          expression (lambda/matching.ml[1915,62582+59]..[1915,62582+74])
            Pexp_ident "Obj.forward_tag" (lambda/matching.ml[1915,62582+59]..[1915,62582+74])
                                                                      expression (lambda/matching.ml[1915,62582+77]..[1915,62582+78]) ghost
Pexp_construct "[]" (lambda/matching.ml[1915,62582+77]..[1915,62582+78]) ghost
None
                                                                    ]
                                                            ]
                                                      expression (lambda/matching.ml[1916,62662+18]..[1916,62662+21])
                                                        Pexp_ident "loc" (lambda/matching.ml[1916,62662+18]..[1916,62662+21])
                                                    ]
                                              expression (lambda/matching.ml[1917,62687+14]..[1917,62687+45])
                                                Pexp_construct "Lprim" (lambda/matching.ml[1917,62687+14]..[1917,62687+19])
                                                Some
                                                  expression (lambda/matching.ml[1917,62687+20]..[1917,62687+45])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1917,62687+21]..[1917,62687+29])
                                                        Pexp_construct "Pfield" (lambda/matching.ml[1917,62687+21]..[1917,62687+27])
                                                        Some
                                                          expression (lambda/matching.ml[1917,62687+28]..[1917,62687+29])
                                                            Pexp_constant PConst_int (0,None)
                                                      expression (lambda/matching.ml[1917,62687+31]..[1917,62687+39])
                                                        Pexp_construct "::" (lambda/matching.ml[1917,62687+33]..[1917,62687+39]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[1917,62687+33]..[1917,62687+39]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1917,62687+33]..[1917,62687+37])
                                                                Pexp_ident "varg" (lambda/matching.ml[1917,62687+33]..[1917,62687+37])
                                                              expression (lambda/matching.ml[1917,62687+38]..[1917,62687+39]) ghost
                                                                Pexp_construct "[]" (lambda/matching.ml[1917,62687+38]..[1917,62687+39]) ghost
                                                                None
                                                            ]
                                                      expression (lambda/matching.ml[1917,62687+41]..[1917,62687+44])
                                                        Pexp_ident "loc" (lambda/matching.ml[1917,62687+41]..[1917,62687+44])
                                                    ]
                                              expression (lambda/matching.ml[1918,62734+14]..[1933,63371+24])
                                                Pexp_construct "Lifthenelse" (lambda/matching.ml[1918,62734+14]..[1918,62734+25])
                                                Some
                                                  expression (lambda/matching.ml[1920,62837+16]..[1933,63371+24])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[1920,62837+18]..[1923,62978+27])
                                                        Pexp_construct "Lprim" (lambda/matching.ml[1920,62837+18]..[1920,62837+23])
                                                        Some
                                                          expression (lambda/matching.ml[1921,62861+20]..[1923,62978+27])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[1921,62861+22]..[1921,62861+34])
                                                                Pexp_construct "Pintcomp" (lambda/matching.ml[1921,62861+22]..[1921,62861+30])
                                                                Some
                                                                  expression (lambda/matching.ml[1921,62861+31]..[1921,62861+34])
                                                                    Pexp_construct "Ceq" (lambda/matching.ml[1921,62861+31]..[1921,62861+34])
                                                                    None
                                                              expression (lambda/matching.ml[1922,62897+22]..[1922,62897+79])
                                                                Pexp_construct "::" (lambda/matching.ml[1922,62897+24]..[1922,62897+79]) ghost
                                                                Some
                                                                  expression (lambda/matching.ml[1922,62897+24]..[1922,62897+79]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[1922,62897+24]..[1922,62897+31])
Pexp_ident "tag_var" (lambda/matching.ml[1922,62897+24]..[1922,62897+31])
                                                                      expression (lambda/matching.ml[1922,62897+33]..[1922,62897+79]) ghost
Pexp_construct "::" (lambda/matching.ml[1922,62897+33]..[1922,62897+79]) ghost
Some
  expression (lambda/matching.ml[1922,62897+33]..[1922,62897+79]) ghost
    Pexp_tuple
    [
      expression (lambda/matching.ml[1922,62897+33]..[1922,62897+77])
        Pexp_construct "Lconst" (lambda/matching.ml[1922,62897+33]..[1922,62897+39])
        Some
          expression (lambda/matching.ml[1922,62897+40]..[1922,62897+77])
            Pexp_construct "Const_base" (lambda/matching.ml[1922,62897+41]..[1922,62897+51])
            Some
              expression (lambda/matching.ml[1922,62897+52]..[1922,62897+76])
                Pexp_construct "Const_int" (lambda/matching.ml[1922,62897+53]..[1922,62897+62])
                Some
                  expression (lambda/matching.ml[1922,62897+63]..[1922,62897+75])
                    Pexp_ident "Obj.lazy_tag" (lambda/matching.ml[1922,62897+63]..[1922,62897+75])
      expression (lambda/matching.ml[1922,62897+78]..[1922,62897+79]) ghost
        Pexp_construct "[]" (lambda/matching.ml[1922,62897+78]..[1922,62897+79]) ghost
        None
    ]
                                                                    ]
                                                              expression (lambda/matching.ml[1923,62978+22]..[1923,62978+25])
                                                                Pexp_ident "loc" (lambda/matching.ml[1923,62978+22]..[1923,62978+25])
                                                            ]
                                                      expression (lambda/matching.ml[1924,63007+18]..[1931,63316+21])
                                                        Pexp_construct "Lapply" (lambda/matching.ml[1924,63007+18]..[1924,63007+24])
                                                        Some
                                                          expression (lambda/matching.ml[1925,63032+20]..[1931,63316+21])
                                                            Pexp_record
                                                            [
                                                              "ap_tailcall" (lambda/matching.ml[1925,63032+22]..[1925,63032+33])
                                                                expression (lambda/matching.ml[1925,63032+36]..[1925,63032+52])
                                                                  Pexp_construct "Default_tailcall" (lambda/matching.ml[1925,63032+36]..[1925,63032+52])
                                                                  None
                                                              "ap_loc" (lambda/matching.ml[1926,63086+22]..[1926,63086+28])
                                                                expression (lambda/matching.ml[1926,63086+31]..[1926,63086+34])
                                                                  Pexp_ident "loc" (lambda/matching.ml[1926,63086+31]..[1926,63086+34])
                                                              "ap_func" (lambda/matching.ml[1927,63122+22]..[1927,63122+29])
                                                                expression (lambda/matching.ml[1927,63122+32]..[1927,63122+41])
                                                                  Pexp_ident "force_fun" (lambda/matching.ml[1927,63122+32]..[1927,63122+41])
                                                              "ap_args" (lambda/matching.ml[1928,63165+22]..[1928,63165+29])
                                                                expression (lambda/matching.ml[1928,63165+32]..[1928,63165+40])
                                                                  Pexp_construct "::" (lambda/matching.ml[1928,63165+34]..[1928,63165+40]) ghost
                                                                  Some
                                                                    expression (lambda/matching.ml[1928,63165+34]..[1928,63165+40]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[1928,63165+34]..[1928,63165+38])
  Pexp_ident "varg" (lambda/matching.ml[1928,63165+34]..[1928,63165+38])
expression (lambda/matching.ml[1928,63165+39]..[1928,63165+40]) ghost
  Pexp_construct "[]" (lambda/matching.ml[1928,63165+39]..[1928,63165+40]) ghost
  None
                                                                      ]
                                                              "ap_inlined" (lambda/matching.ml[1929,63207+22]..[1929,63207+32])
                                                                expression (lambda/matching.ml[1929,63207+35]..[1929,63207+49])
                                                                  Pexp_construct "Default_inline" (lambda/matching.ml[1929,63207+35]..[1929,63207+49])
                                                                  None
                                                              "ap_specialised" (lambda/matching.ml[1930,63258+22]..[1930,63258+36])
                                                                expression (lambda/matching.ml[1930,63258+39]..[1930,63258+57])
                                                                  Pexp_construct "Default_specialise" (lambda/matching.ml[1930,63258+39]..[1930,63258+57])
                                                                  None
                                                            ]
                                                            None
                                                      expression (lambda/matching.ml[1933,63371+18]..[1933,63371+22])
                                                        Pexp_ident "varg" (lambda/matching.ml[1933,63371+18]..[1933,63371+22])
                                                    ]
                                            ]
                                    ]
                            ]
    ]
  structure_item (lambda/matching.ml[1935,63403+0]..[1967,64480+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1935,63403+4]..[1935,63403+28])
          Ppat_var "inline_lazy_force_switch" (lambda/matching.ml[1935,63403+4]..[1935,63403+28])
        expression (lambda/matching.ml[1935,63403+29]..[1967,64480+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1935,63403+29]..[1935,63403+32])
            Ppat_var "arg" (lambda/matching.ml[1935,63403+29]..[1935,63403+32])
          expression (lambda/matching.ml[1935,63403+33]..[1967,64480+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1935,63403+33]..[1935,63403+36])
              Ppat_var "loc" (lambda/matching.ml[1935,63403+33]..[1935,63403+36])
            expression (lambda/matching.ml[1936,63442+2]..[1967,64480+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[1936,63442+6]..[1936,63442+11])
                    Ppat_var "idarg" (lambda/matching.ml[1936,63442+6]..[1936,63442+11])
                  expression (lambda/matching.ml[1936,63442+14]..[1936,63442+40])
                    Pexp_apply
                    expression (lambda/matching.ml[1936,63442+14]..[1936,63442+32])
                      Pexp_ident "Ident.create_local" (lambda/matching.ml[1936,63442+14]..[1936,63442+32])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1936,63442+33]..[1936,63442+40])
                          Pexp_constant PConst_string("lzarg",(lambda/matching.ml[1936,63442+34]..[1936,63442+39]),None)
                    ]
              ]
              expression (lambda/matching.ml[1937,63486+2]..[1967,64480+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[1937,63486+6]..[1937,63486+10])
                      Ppat_var "varg" (lambda/matching.ml[1937,63486+6]..[1937,63486+10])
                    expression (lambda/matching.ml[1937,63486+13]..[1937,63486+23])
                      Pexp_construct "Lvar" (lambda/matching.ml[1937,63486+13]..[1937,63486+17])
                      Some
                        expression (lambda/matching.ml[1937,63486+18]..[1937,63486+23])
                          Pexp_ident "idarg" (lambda/matching.ml[1937,63486+18]..[1937,63486+23])
                ]
                expression (lambda/matching.ml[1938,63513+2]..[1967,64480+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1938,63513+6]..[1938,63513+15])
                        Ppat_var "force_fun" (lambda/matching.ml[1938,63513+6]..[1938,63513+15])
                      expression (lambda/matching.ml[1938,63513+18]..[1938,63513+50])
                        Pexp_apply
                        expression (lambda/matching.ml[1938,63513+18]..[1938,63513+28])
                          Pexp_ident "Lazy.force" (lambda/matching.ml[1938,63513+18]..[1938,63513+28])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1938,63513+29]..[1938,63513+50])
                              Pexp_ident "code_force_lazy_block" (lambda/matching.ml[1938,63513+29]..[1938,63513+50])
                        ]
                  ]
                  expression (lambda/matching.ml[1939,63567+2]..[1967,64480+23])
                    Pexp_construct "Llet" (lambda/matching.ml[1939,63567+2]..[1939,63567+6])
                    Some
                      expression (lambda/matching.ml[1940,63574+4]..[1967,64480+23])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1940,63574+6]..[1940,63574+12])
                            Pexp_construct "Strict" (lambda/matching.ml[1940,63574+6]..[1940,63574+12])
                            None
                          expression (lambda/matching.ml[1941,63588+6]..[1941,63588+13])
                            Pexp_construct "Pgenval" (lambda/matching.ml[1941,63588+6]..[1941,63588+13])
                            None
                          expression (lambda/matching.ml[1942,63603+6]..[1942,63603+11])
                            Pexp_ident "idarg" (lambda/matching.ml[1942,63603+6]..[1942,63603+11])
                          expression (lambda/matching.ml[1943,63616+6]..[1943,63616+9])
                            Pexp_ident "arg" (lambda/matching.ml[1943,63616+6]..[1943,63616+9])
                          expression (lambda/matching.ml[1944,63627+6]..[1967,64480+21])
                            Pexp_construct "Lifthenelse" (lambda/matching.ml[1944,63627+6]..[1944,63627+17])
                            Some
                              expression (lambda/matching.ml[1945,63645+8]..[1967,64480+21])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[1945,63645+10]..[1945,63645+39])
                                    Pexp_construct "Lprim" (lambda/matching.ml[1945,63645+10]..[1945,63645+15])
                                    Some
                                      expression (lambda/matching.ml[1945,63645+16]..[1945,63645+39])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1945,63645+17]..[1945,63645+23])
                                            Pexp_construct "Pisint" (lambda/matching.ml[1945,63645+17]..[1945,63645+23])
                                            None
                                          expression (lambda/matching.ml[1945,63645+25]..[1945,63645+33])
                                            Pexp_construct "::" (lambda/matching.ml[1945,63645+27]..[1945,63645+33]) ghost
                                            Some
                                              expression (lambda/matching.ml[1945,63645+27]..[1945,63645+33]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[1945,63645+27]..[1945,63645+31])
                                                    Pexp_ident "varg" (lambda/matching.ml[1945,63645+27]..[1945,63645+31])
                                                  expression (lambda/matching.ml[1945,63645+32]..[1945,63645+33]) ghost
                                                    Pexp_construct "[]" (lambda/matching.ml[1945,63645+32]..[1945,63645+33]) ghost
                                                    None
                                                ]
                                          expression (lambda/matching.ml[1945,63645+35]..[1945,63645+38])
                                            Pexp_ident "loc" (lambda/matching.ml[1945,63645+35]..[1945,63645+38])
                                        ]
                                  expression (lambda/matching.ml[1946,63686+10]..[1946,63686+14])
                                    Pexp_ident "varg" (lambda/matching.ml[1946,63686+10]..[1946,63686+14])
                                  expression (lambda/matching.ml[1947,63702+10]..[1967,64480+19])
                                    Pexp_construct "Lswitch" (lambda/matching.ml[1947,63702+10]..[1947,63702+17])
                                    Some
                                      expression (lambda/matching.ml[1948,63720+12]..[1967,64480+19])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[1948,63720+14]..[1948,63720+18])
                                            Pexp_ident "varg" (lambda/matching.ml[1948,63720+14]..[1948,63720+18])
                                          expression (lambda/matching.ml[1949,63740+14]..[1966,64463+15])
                                            Pexp_record
                                            [
                                              "sw_numconsts" (lambda/matching.ml[1949,63740+16]..[1949,63740+28])
                                                expression (lambda/matching.ml[1949,63740+31]..[1949,63740+32])
                                                  Pexp_constant PConst_int (0,None)
                                              "sw_consts" (lambda/matching.ml[1950,63774+16]..[1950,63774+25])
                                                expression (lambda/matching.ml[1950,63774+28]..[1950,63774+30])
                                                  Pexp_construct "[]" (lambda/matching.ml[1950,63774+28]..[1950,63774+30])
                                                  None
                                              "sw_numblocks" (lambda/matching.ml[1951,63806+16]..[1951,63806+28])
                                                expression (lambda/matching.ml[1951,63806+31]..[1951,63806+34])
                                                  Pexp_constant PConst_int (256,None)
                                              "sw_blocks" (lambda/matching.ml[1953,63899+16]..[1953,63899+25])
                                                expression (lambda/matching.ml[1954,63927+18]..[1964,64400+19])
                                                  Pexp_construct "::" (lambda/matching.ml[1954,63927+20]..[1964,64400+19]) ghost
                                                  Some
                                                    expression (lambda/matching.ml[1954,63927+20]..[1964,64400+19]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[1954,63927+20]..[1954,63927+70])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[1954,63927+21]..[1954,63927+36])
                                                              Pexp_ident "Obj.forward_tag" (lambda/matching.ml[1954,63927+21]..[1954,63927+36])
                                                            expression (lambda/matching.ml[1954,63927+38]..[1954,63927+69])
                                                              Pexp_construct "Lprim" (lambda/matching.ml[1954,63927+38]..[1954,63927+43])
                                                              Some
                                                                expression (lambda/matching.ml[1954,63927+44]..[1954,63927+69])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[1954,63927+45]..[1954,63927+53])
                                                                      Pexp_construct "Pfield" (lambda/matching.ml[1954,63927+45]..[1954,63927+51])
                                                                      Some
expression (lambda/matching.ml[1954,63927+52]..[1954,63927+53])
  Pexp_constant PConst_int (0,None)
                                                                    expression (lambda/matching.ml[1954,63927+55]..[1954,63927+63])
                                                                      Pexp_construct "::" (lambda/matching.ml[1954,63927+57]..[1954,63927+63]) ghost
                                                                      Some
expression (lambda/matching.ml[1954,63927+57]..[1954,63927+63]) ghost
  Pexp_tuple
  [
    expression (lambda/matching.ml[1954,63927+57]..[1954,63927+61])
      Pexp_ident "varg" (lambda/matching.ml[1954,63927+57]..[1954,63927+61])
    expression (lambda/matching.ml[1954,63927+62]..[1954,63927+63]) ghost
      Pexp_construct "[]" (lambda/matching.ml[1954,63927+62]..[1954,63927+63]) ghost
      None
  ]
                                                                    expression (lambda/matching.ml[1954,63927+65]..[1954,63927+68])
                                                                      Pexp_ident "loc" (lambda/matching.ml[1954,63927+65]..[1954,63927+68])
                                                                  ]
                                                          ]
                                                        expression (lambda/matching.ml[1955,63999+20]..[1964,64400+19]) ghost
                                                          Pexp_construct "::" (lambda/matching.ml[1955,63999+20]..[1964,64400+19]) ghost
                                                          Some
                                                            expression (lambda/matching.ml[1955,63999+20]..[1964,64400+19]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[1955,63999+20]..[1963,64372+27])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[1955,63999+22]..[1955,63999+34])
                                                                      Pexp_ident "Obj.lazy_tag" (lambda/matching.ml[1955,63999+22]..[1955,63999+34])
                                                                    expression (lambda/matching.ml[1956,64035+22]..[1963,64372+25])
                                                                      Pexp_construct "Lapply" (lambda/matching.ml[1956,64035+22]..[1956,64035+28])
                                                                      Some
expression (lambda/matching.ml[1957,64064+24]..[1963,64372+25])
  Pexp_record
  [
    "ap_tailcall" (lambda/matching.ml[1957,64064+26]..[1957,64064+37])
      expression (lambda/matching.ml[1957,64064+40]..[1957,64064+56])
        Pexp_construct "Default_tailcall" (lambda/matching.ml[1957,64064+40]..[1957,64064+56])
        None
    "ap_loc" (lambda/matching.ml[1958,64122+26]..[1958,64122+32])
      expression (lambda/matching.ml[1958,64122+35]..[1958,64122+38])
        Pexp_ident "loc" (lambda/matching.ml[1958,64122+35]..[1958,64122+38])
    "ap_func" (lambda/matching.ml[1959,64162+26]..[1959,64162+33])
      expression (lambda/matching.ml[1959,64162+36]..[1959,64162+45])
        Pexp_ident "force_fun" (lambda/matching.ml[1959,64162+36]..[1959,64162+45])
    "ap_args" (lambda/matching.ml[1960,64209+26]..[1960,64209+33])
      expression (lambda/matching.ml[1960,64209+36]..[1960,64209+44])
        Pexp_construct "::" (lambda/matching.ml[1960,64209+38]..[1960,64209+44]) ghost
        Some
          expression (lambda/matching.ml[1960,64209+38]..[1960,64209+44]) ghost
            Pexp_tuple
            [
              expression (lambda/matching.ml[1960,64209+38]..[1960,64209+42])
                Pexp_ident "varg" (lambda/matching.ml[1960,64209+38]..[1960,64209+42])
              expression (lambda/matching.ml[1960,64209+43]..[1960,64209+44]) ghost
                Pexp_construct "[]" (lambda/matching.ml[1960,64209+43]..[1960,64209+44]) ghost
                None
            ]
    "ap_inlined" (lambda/matching.ml[1961,64255+26]..[1961,64255+36])
      expression (lambda/matching.ml[1961,64255+39]..[1961,64255+53])
        Pexp_construct "Default_inline" (lambda/matching.ml[1961,64255+39]..[1961,64255+53])
        None
    "ap_specialised" (lambda/matching.ml[1962,64310+26]..[1962,64310+40])
      expression (lambda/matching.ml[1962,64310+43]..[1962,64310+61])
        Pexp_construct "Default_specialise" (lambda/matching.ml[1962,64310+43]..[1962,64310+61])
        None
  ]
  None
                                                                  ]
                                                                expression (lambda/matching.ml[1964,64400+18]..[1964,64400+19]) ghost
                                                                  Pexp_construct "[]" (lambda/matching.ml[1964,64400+18]..[1964,64400+19]) ghost
                                                                  None
                                                              ]
                                                      ]
                                              "sw_failaction" (lambda/matching.ml[1965,64421+16]..[1965,64421+29])
                                                expression (lambda/matching.ml[1965,64421+32]..[1965,64421+41])
                                                  Pexp_construct "Some" (lambda/matching.ml[1965,64421+32]..[1965,64421+36])
                                                  Some
                                                    expression (lambda/matching.ml[1965,64421+37]..[1965,64421+41])
                                                      Pexp_ident "varg" (lambda/matching.ml[1965,64421+37]..[1965,64421+41])
                                            ]
                                            None
                                          expression (lambda/matching.ml[1967,64480+14]..[1967,64480+17])
                                            Pexp_ident "loc" (lambda/matching.ml[1967,64480+14]..[1967,64480+17])
                                        ]
                                ]
                        ]
    ]
  structure_item (lambda/matching.ml[1969,64505+0]..[1989,65305+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1969,64505+4]..[1969,64505+21])
          Ppat_var "inline_lazy_force" (lambda/matching.ml[1969,64505+4]..[1969,64505+21])
        expression (lambda/matching.ml[1969,64505+22]..[1989,65305+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[1969,64505+22]..[1969,64505+25])
            Ppat_var "arg" (lambda/matching.ml[1969,64505+22]..[1969,64505+25])
          expression (lambda/matching.ml[1969,64505+26]..[1989,65305+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1969,64505+26]..[1969,64505+29])
              Ppat_var "loc" (lambda/matching.ml[1969,64505+26]..[1969,64505+29])
            expression (lambda/matching.ml[1970,64537+2]..[1989,65305+34])
              Pexp_ifthenelse
              expression (lambda/matching.ml[1970,64537+5]..[1970,64537+28])
                Pexp_apply
                expression (lambda/matching.ml[1970,64537+5]..[1970,64537+6])
                  Pexp_ident "!" (lambda/matching.ml[1970,64537+5]..[1970,64537+6])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[1970,64537+6]..[1970,64537+28])
                      Pexp_ident "Clflags.afl_instrument" (lambda/matching.ml[1970,64537+6]..[1970,64537+28])
                ]
              expression (lambda/matching.ml[1975,64800+4]..[1982,65027+7])
                Pexp_construct "Lapply" (lambda/matching.ml[1975,64800+4]..[1975,64800+10])
                Some
                  expression (lambda/matching.ml[1976,64811+6]..[1982,65027+7])
                    Pexp_record
                    [
                      "ap_tailcall" (lambda/matching.ml[1976,64811+8]..[1976,64811+19])
                        expression (lambda/matching.ml[1976,64811+22]..[1976,64811+38])
                          Pexp_construct "Default_tailcall" (lambda/matching.ml[1976,64811+22]..[1976,64811+38])
                          None
                      "ap_loc" (lambda/matching.ml[1977,64851+8]..[1977,64851+14])
                        expression (lambda/matching.ml[1977,64851+17]..[1977,64851+20])
                          Pexp_ident "loc" (lambda/matching.ml[1977,64851+17]..[1977,64851+20])
                      "ap_func" (lambda/matching.ml[1978,64873+8]..[1978,64873+15])
                        expression (lambda/matching.ml[1978,64873+18]..[1978,64873+44])
                          Pexp_apply
                          expression (lambda/matching.ml[1978,64873+18]..[1978,64873+28])
                            Pexp_ident "Lazy.force" (lambda/matching.ml[1978,64873+18]..[1978,64873+28])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[1978,64873+29]..[1978,64873+44])
                                Pexp_ident "code_force_lazy" (lambda/matching.ml[1978,64873+29]..[1978,64873+44])
                          ]
                      "ap_args" (lambda/matching.ml[1979,64919+8]..[1979,64919+15])
                        expression (lambda/matching.ml[1979,64919+18]..[1979,64919+25])
                          Pexp_construct "::" (lambda/matching.ml[1979,64919+20]..[1979,64919+25]) ghost
                          Some
                            expression (lambda/matching.ml[1979,64919+20]..[1979,64919+25]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[1979,64919+20]..[1979,64919+23])
                                  Pexp_ident "arg" (lambda/matching.ml[1979,64919+20]..[1979,64919+23])
                                expression (lambda/matching.ml[1979,64919+24]..[1979,64919+25]) ghost
                                  Pexp_construct "[]" (lambda/matching.ml[1979,64919+24]..[1979,64919+25]) ghost
                                  None
                              ]
                      "ap_inlined" (lambda/matching.ml[1980,64946+8]..[1980,64946+18])
                        expression (lambda/matching.ml[1980,64946+21]..[1980,64946+35])
                          Pexp_construct "Default_inline" (lambda/matching.ml[1980,64946+21]..[1980,64946+35])
                          None
                      "ap_specialised" (lambda/matching.ml[1981,64983+8]..[1981,64983+22])
                        expression (lambda/matching.ml[1981,64983+25]..[1981,64983+43])
                          Pexp_construct "Default_specialise" (lambda/matching.ml[1981,64983+25]..[1981,64983+43])
                          None
                    ]
                    None
              Some
                expression (lambda/matching.ml[1983,65035+7]..[1989,65305+34])
                  Pexp_ifthenelse
                  expression (lambda/matching.ml[1983,65035+10]..[1983,65035+30])
                    Pexp_apply
                    expression (lambda/matching.ml[1983,65035+10]..[1983,65035+11])
                      Pexp_ident "!" (lambda/matching.ml[1983,65035+10]..[1983,65035+11])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1983,65035+11]..[1983,65035+30])
                          Pexp_ident "Clflags.native_code" (lambda/matching.ml[1983,65035+11]..[1983,65035+30])
                    ]
                  expression (lambda/matching.ml[1985,65133+4]..[1985,65133+36])
                    Pexp_apply
                    expression (lambda/matching.ml[1985,65133+4]..[1985,65133+28])
                      Pexp_ident "inline_lazy_force_switch" (lambda/matching.ml[1985,65133+4]..[1985,65133+28])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1985,65133+29]..[1985,65133+32])
                          Pexp_ident "arg" (lambda/matching.ml[1985,65133+29]..[1985,65133+32])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[1985,65133+33]..[1985,65133+36])
                          Pexp_ident "loc" (lambda/matching.ml[1985,65133+33]..[1985,65133+36])
                    ]
                  Some
                    expression (lambda/matching.ml[1989,65305+4]..[1989,65305+34])
                      Pexp_apply
                      expression (lambda/matching.ml[1989,65305+4]..[1989,65305+26])
                        Pexp_ident "inline_lazy_force_cond" (lambda/matching.ml[1989,65305+4]..[1989,65305+26])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1989,65305+27]..[1989,65305+30])
                            Pexp_ident "arg" (lambda/matching.ml[1989,65305+27]..[1989,65305+30])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[1989,65305+31]..[1989,65305+34])
                            Pexp_ident "loc" (lambda/matching.ml[1989,65305+31]..[1989,65305+34])
                      ]
    ]
  structure_item (lambda/matching.ml[1991,65341+0]..[1993,65432+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1991,65341+4]..[1991,65341+22])
          Ppat_var "get_expr_args_lazy" (lambda/matching.ml[1991,65341+4]..[1991,65341+22])
        expression (lambda/matching.ml[1991,65341+23]..[1993,65432+44]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1991,65341+24]..[1991,65341+30])
            Ppat_var "scopes" (lambda/matching.ml[1991,65341+24]..[1991,65341+30])
          expression (lambda/matching.ml[1991,65341+31]..[1993,65432+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1991,65341+31]..[1991,65341+35])
              Ppat_var "head" (lambda/matching.ml[1991,65341+31]..[1991,65341+35])
            expression (lambda/matching.ml[1991,65341+36]..[1993,65432+44]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1991,65341+36]..[1991,65341+47])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[1991,65341+37]..[1991,65341+40])
                    Ppat_var "arg" (lambda/matching.ml[1991,65341+37]..[1991,65341+40])
                  pattern (lambda/matching.ml[1991,65341+42]..[1991,65341+46])
                    Ppat_var "_mut" (lambda/matching.ml[1991,65341+42]..[1991,65341+46])
                ]
              expression (lambda/matching.ml[1991,65341+48]..[1993,65432+44]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1991,65341+48]..[1991,65341+51])
                  Ppat_var "rem" (lambda/matching.ml[1991,65341+48]..[1991,65341+51])
                expression (lambda/matching.ml[1992,65395+2]..[1993,65432+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[1992,65395+6]..[1992,65395+9])
                        Ppat_var "loc" (lambda/matching.ml[1992,65395+6]..[1992,65395+9])
                      expression (lambda/matching.ml[1992,65395+12]..[1992,65395+33])
                        Pexp_apply
                        expression (lambda/matching.ml[1992,65395+12]..[1992,65395+20])
                          Pexp_ident "head_loc" (lambda/matching.ml[1992,65395+12]..[1992,65395+20])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[1992,65395+22]..[1992,65395+28])
                              Pexp_ident "scopes" (lambda/matching.ml[1992,65395+22]..[1992,65395+28])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1992,65395+29]..[1992,65395+33])
                              Pexp_ident "head" (lambda/matching.ml[1992,65395+29]..[1992,65395+33])
                        ]
                  ]
                  expression (lambda/matching.ml[1993,65432+2]..[1993,65432+44])
                    Pexp_construct "::" (lambda/matching.ml[1993,65432+38]..[1993,65432+40])
                    Some
                      expression (lambda/matching.ml[1993,65432+2]..[1993,65432+44]) ghost
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[1993,65432+2]..[1993,65432+37])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[1993,65432+3]..[1993,65432+28])
                                Pexp_apply
                                expression (lambda/matching.ml[1993,65432+3]..[1993,65432+20])
                                  Pexp_ident "inline_lazy_force" (lambda/matching.ml[1993,65432+3]..[1993,65432+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1993,65432+21]..[1993,65432+24])
                                      Pexp_ident "arg" (lambda/matching.ml[1993,65432+21]..[1993,65432+24])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[1993,65432+25]..[1993,65432+28])
                                      Pexp_ident "loc" (lambda/matching.ml[1993,65432+25]..[1993,65432+28])
                                ]
                              expression (lambda/matching.ml[1993,65432+30]..[1993,65432+36])
                                Pexp_construct "Strict" (lambda/matching.ml[1993,65432+30]..[1993,65432+36])
                                None
                            ]
                          expression (lambda/matching.ml[1993,65432+41]..[1993,65432+44])
                            Pexp_ident "rem" (lambda/matching.ml[1993,65432+41]..[1993,65432+44])
                        ]
    ]
  structure_item (lambda/matching.ml[1995,65478+0]..[1999,65611+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[1995,65478+4]..[1995,65478+15])
          Ppat_var "divide_lazy" (lambda/matching.ml[1995,65478+4]..[1995,65478+15])
        expression (lambda/matching.ml[1995,65478+16]..[1999,65611+15]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[1995,65478+17]..[1995,65478+23])
            Ppat_var "scopes" (lambda/matching.ml[1995,65478+17]..[1995,65478+23])
          expression (lambda/matching.ml[1995,65478+24]..[1999,65611+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[1995,65478+24]..[1995,65478+28])
              Ppat_var "head" (lambda/matching.ml[1995,65478+24]..[1995,65478+28])
            expression (lambda/matching.ml[1995,65478+29]..[1999,65611+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[1995,65478+29]..[1995,65478+32])
                Ppat_var "ctx" (lambda/matching.ml[1995,65478+29]..[1995,65478+32])
              expression (lambda/matching.ml[1995,65478+33]..[1999,65611+15]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[1995,65478+33]..[1995,65478+35])
                  Ppat_var "pm" (lambda/matching.ml[1995,65478+33]..[1995,65478+35])
                expression (lambda/matching.ml[1996,65516+2]..[1999,65611+15])
                  Pexp_apply
                  expression (lambda/matching.ml[1996,65516+2]..[1996,65516+13])
                    Pexp_ident "divide_line" (lambda/matching.ml[1996,65516+2]..[1996,65516+13])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1996,65516+14]..[1996,65516+39])
                        Pexp_apply
                        expression (lambda/matching.ml[1996,65516+15]..[1996,65516+33])
                          Pexp_ident "Context.specialize" (lambda/matching.ml[1996,65516+15]..[1996,65516+33])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[1996,65516+34]..[1996,65516+38])
                              Pexp_ident "head" (lambda/matching.ml[1996,65516+34]..[1996,65516+38])
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1997,65556+4]..[1997,65556+32])
                        Pexp_apply
                        expression (lambda/matching.ml[1997,65556+5]..[1997,65556+23])
                          Pexp_ident "get_expr_args_lazy" (lambda/matching.ml[1997,65556+5]..[1997,65556+23])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[1997,65556+25]..[1997,65556+31])
                              Pexp_ident "scopes" (lambda/matching.ml[1997,65556+25]..[1997,65556+31])
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1998,65589+4]..[1998,65589+21])
                        Pexp_ident "get_pat_args_lazy" (lambda/matching.ml[1998,65589+4]..[1998,65589+21])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1999,65611+4]..[1999,65611+8])
                        Pexp_ident "head" (lambda/matching.ml[1999,65611+4]..[1999,65611+8])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1999,65611+9]..[1999,65611+12])
                        Pexp_ident "ctx" (lambda/matching.ml[1999,65611+9]..[1999,65611+12])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[1999,65611+13]..[1999,65611+15])
                        Pexp_ident "pm" (lambda/matching.ml[1999,65611+13]..[1999,65611+15])
                  ]
    ]
  structure_item (lambda/matching.ml[2003,65668+0]..[2007,65828+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2003,65668+4]..[2003,65668+22])
          Ppat_var "get_pat_args_tuple" (lambda/matching.ml[2003,65668+4]..[2003,65668+22])
        expression (lambda/matching.ml[2003,65668+23]..[2007,65828+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2003,65668+23]..[2003,65668+28])
            Ppat_var "arity" (lambda/matching.ml[2003,65668+23]..[2003,65668+28])
          expression (lambda/matching.ml[2003,65668+29]..[2007,65828+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2003,65668+29]..[2003,65668+30])
              Ppat_var "p" (lambda/matching.ml[2003,65668+29]..[2003,65668+30])
            expression (lambda/matching.ml[2003,65668+31]..[2007,65828+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2003,65668+31]..[2003,65668+34])
                Ppat_var "rem" (lambda/matching.ml[2003,65668+31]..[2003,65668+34])
              expression (lambda/matching.ml[2004,65705+2]..[2007,65828+21])
                Pexp_match
                expression (lambda/matching.ml[2004,65705+8]..[2004,65705+9])
                  Pexp_ident "p" (lambda/matching.ml[2004,65705+8]..[2004,65705+9])
                [
                  <case>
                    pattern (lambda/matching.ml[2005,65720+4]..[2005,65720+27])
                      Ppat_record Closed
                      [
                        "pat_desc" (lambda/matching.ml[2005,65720+6]..[2005,65720+14])
                          pattern (lambda/matching.ml[2005,65720+17]..[2005,65720+25])
                            Ppat_construct "Tpat_any" (lambda/matching.ml[2005,65720+17]..[2005,65720+25])
                            None
                      ]
                    expression (lambda/matching.ml[2005,65720+31]..[2005,65720+58])
                      Pexp_apply
                      expression (lambda/matching.ml[2005,65720+53]..[2005,65720+54])
                        Pexp_ident "@" (lambda/matching.ml[2005,65720+53]..[2005,65720+54])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2005,65720+31]..[2005,65720+52])
                            Pexp_apply
                            expression (lambda/matching.ml[2005,65720+31]..[2005,65720+46])
                              Pexp_ident "Patterns.omegas" (lambda/matching.ml[2005,65720+31]..[2005,65720+46])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2005,65720+47]..[2005,65720+52])
                                  Pexp_ident "arity" (lambda/matching.ml[2005,65720+47]..[2005,65720+52])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2005,65720+55]..[2005,65720+58])
                            Pexp_ident "rem" (lambda/matching.ml[2005,65720+55]..[2005,65720+58])
                      ]
                  <case>
                    pattern (lambda/matching.ml[2006,65779+4]..[2006,65779+34])
                      Ppat_record Closed
                      [
                        "pat_desc" (lambda/matching.ml[2006,65779+6]..[2006,65779+14])
                          pattern (lambda/matching.ml[2006,65779+17]..[2006,65779+32])
                            Ppat_construct "Tpat_tuple" (lambda/matching.ml[2006,65779+17]..[2006,65779+27])
                            Some
                              []
                              pattern (lambda/matching.ml[2006,65779+28]..[2006,65779+32])
                                Ppat_var "args" (lambda/matching.ml[2006,65779+28]..[2006,65779+32])
                      ]
                    expression (lambda/matching.ml[2006,65779+38]..[2006,65779+48])
                      Pexp_apply
                      expression (lambda/matching.ml[2006,65779+43]..[2006,65779+44])
                        Pexp_ident "@" (lambda/matching.ml[2006,65779+43]..[2006,65779+44])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2006,65779+38]..[2006,65779+42])
                            Pexp_ident "args" (lambda/matching.ml[2006,65779+38]..[2006,65779+42])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2006,65779+45]..[2006,65779+48])
                            Pexp_ident "rem" (lambda/matching.ml[2006,65779+45]..[2006,65779+48])
                      ]
                  <case>
                    pattern (lambda/matching.ml[2007,65828+4]..[2007,65828+5])
                      Ppat_any
                    expression (lambda/matching.ml[2007,65828+9]..[2007,65828+21])
                      Pexp_assert
                      expression (lambda/matching.ml[2007,65828+16]..[2007,65828+21])
                        Pexp_construct "false" (lambda/matching.ml[2007,65828+16]..[2007,65828+21])
                        None
                ]
    ]
  structure_item (lambda/matching.ml[2009,65851+0]..[2018,66131+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2009,65851+4]..[2009,65851+23])
          Ppat_var "get_expr_args_tuple" (lambda/matching.ml[2009,65851+4]..[2009,65851+23])
        expression (lambda/matching.ml[2009,65851+24]..[2018,66131+13]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[2009,65851+25]..[2009,65851+31])
            Ppat_var "scopes" (lambda/matching.ml[2009,65851+25]..[2009,65851+31])
          expression (lambda/matching.ml[2009,65851+32]..[2018,66131+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2009,65851+32]..[2009,65851+36])
              Ppat_var "head" (lambda/matching.ml[2009,65851+32]..[2009,65851+36])
            expression (lambda/matching.ml[2009,65851+37]..[2018,66131+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2009,65851+37]..[2009,65851+48])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[2009,65851+38]..[2009,65851+41])
                    Ppat_var "arg" (lambda/matching.ml[2009,65851+38]..[2009,65851+41])
                  pattern (lambda/matching.ml[2009,65851+43]..[2009,65851+47])
                    Ppat_var "_mut" (lambda/matching.ml[2009,65851+43]..[2009,65851+47])
                ]
              expression (lambda/matching.ml[2009,65851+49]..[2018,66131+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2009,65851+49]..[2009,65851+52])
                  Ppat_var "rem" (lambda/matching.ml[2009,65851+49]..[2009,65851+52])
                expression (lambda/matching.ml[2010,65906+2]..[2018,66131+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2010,65906+6]..[2010,65906+9])
                        Ppat_var "loc" (lambda/matching.ml[2010,65906+6]..[2010,65906+9])
                      expression (lambda/matching.ml[2010,65906+12]..[2010,65906+33])
                        Pexp_apply
                        expression (lambda/matching.ml[2010,65906+12]..[2010,65906+20])
                          Pexp_ident "head_loc" (lambda/matching.ml[2010,65906+12]..[2010,65906+20])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[2010,65906+22]..[2010,65906+28])
                              Pexp_ident "scopes" (lambda/matching.ml[2010,65906+22]..[2010,65906+28])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2010,65906+29]..[2010,65906+33])
                              Pexp_ident "head" (lambda/matching.ml[2010,65906+29]..[2010,65906+33])
                        ]
                  ]
                  expression (lambda/matching.ml[2011,65943+2]..[2018,66131+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2011,65943+6]..[2011,65943+11])
                          Ppat_var "arity" (lambda/matching.ml[2011,65943+6]..[2011,65943+11])
                        expression (lambda/matching.ml[2011,65943+14]..[2011,65943+38])
                          Pexp_apply
                          expression (lambda/matching.ml[2011,65943+14]..[2011,65943+33])
                            Pexp_ident "Patterns.Head.arity" (lambda/matching.ml[2011,65943+14]..[2011,65943+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2011,65943+34]..[2011,65943+38])
                                Pexp_ident "head" (lambda/matching.ml[2011,65943+34]..[2011,65943+38])
                          ]
                    ]
                    expression (lambda/matching.ml[2012,65985+2]..[2018,66131+13])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (lambda/matching.ml[2012,65985+10]..[2012,65985+19])
                            Ppat_var "make_args" (lambda/matching.ml[2012,65985+10]..[2012,65985+19])
                          expression (lambda/matching.ml[2012,65985+20]..[2016,66055+70]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2012,65985+20]..[2012,65985+23])
                              Ppat_var "pos" (lambda/matching.ml[2012,65985+20]..[2012,65985+23])
                            expression (lambda/matching.ml[2013,66011+4]..[2016,66055+70])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2013,66011+7]..[2013,66011+19])
                                Pexp_apply
                                expression (lambda/matching.ml[2013,66011+11]..[2013,66011+13])
                                  Pexp_ident ">=" (lambda/matching.ml[2013,66011+11]..[2013,66011+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2013,66011+7]..[2013,66011+10])
                                      Pexp_ident "pos" (lambda/matching.ml[2013,66011+7]..[2013,66011+10])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2013,66011+14]..[2013,66011+19])
                                      Pexp_ident "arity" (lambda/matching.ml[2013,66011+14]..[2013,66011+19])
                                ]
                              expression (lambda/matching.ml[2014,66036+6]..[2014,66036+9])
                                Pexp_ident "rem" (lambda/matching.ml[2014,66036+6]..[2014,66036+9])
                              Some
                                expression (lambda/matching.ml[2016,66055+6]..[2016,66055+70])
                                  Pexp_construct "::" (lambda/matching.ml[2016,66055+48]..[2016,66055+50])
                                  Some
                                    expression (lambda/matching.ml[2016,66055+6]..[2016,66055+70]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[2016,66055+6]..[2016,66055+47])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2016,66055+7]..[2016,66055+39])
                                              Pexp_construct "Lprim" (lambda/matching.ml[2016,66055+7]..[2016,66055+12])
                                              Some
                                                expression (lambda/matching.ml[2016,66055+13]..[2016,66055+39])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[2016,66055+14]..[2016,66055+24])
                                                      Pexp_construct "Pfield" (lambda/matching.ml[2016,66055+14]..[2016,66055+20])
                                                      Some
                                                        expression (lambda/matching.ml[2016,66055+21]..[2016,66055+24])
                                                          Pexp_ident "pos" (lambda/matching.ml[2016,66055+21]..[2016,66055+24])
                                                    expression (lambda/matching.ml[2016,66055+26]..[2016,66055+33])
                                                      Pexp_construct "::" (lambda/matching.ml[2016,66055+28]..[2016,66055+33]) ghost
                                                      Some
                                                        expression (lambda/matching.ml[2016,66055+28]..[2016,66055+33]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2016,66055+28]..[2016,66055+31])
                                                              Pexp_ident "arg" (lambda/matching.ml[2016,66055+28]..[2016,66055+31])
                                                            expression (lambda/matching.ml[2016,66055+32]..[2016,66055+33]) ghost
                                                              Pexp_construct "[]" (lambda/matching.ml[2016,66055+32]..[2016,66055+33]) ghost
                                                              None
                                                          ]
                                                    expression (lambda/matching.ml[2016,66055+35]..[2016,66055+38])
                                                      Pexp_ident "loc" (lambda/matching.ml[2016,66055+35]..[2016,66055+38])
                                                  ]
                                            expression (lambda/matching.ml[2016,66055+41]..[2016,66055+46])
                                              Pexp_construct "Alias" (lambda/matching.ml[2016,66055+41]..[2016,66055+46])
                                              None
                                          ]
                                        expression (lambda/matching.ml[2016,66055+51]..[2016,66055+70])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2016,66055+51]..[2016,66055+60])
                                            Pexp_ident "make_args" (lambda/matching.ml[2016,66055+51]..[2016,66055+60])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2016,66055+61]..[2016,66055+70])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2016,66055+66]..[2016,66055+67])
                                                  Pexp_ident "+" (lambda/matching.ml[2016,66055+66]..[2016,66055+67])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2016,66055+62]..[2016,66055+65])
                                                      Pexp_ident "pos" (lambda/matching.ml[2016,66055+62]..[2016,66055+65])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2016,66055+68]..[2016,66055+69])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                          ]
                                      ]
                      ]
                      expression (lambda/matching.ml[2018,66131+2]..[2018,66131+13])
                        Pexp_apply
                        expression (lambda/matching.ml[2018,66131+2]..[2018,66131+11])
                          Pexp_ident "make_args" (lambda/matching.ml[2018,66131+2]..[2018,66131+11])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2018,66131+12]..[2018,66131+13])
                              Pexp_constant PConst_int (0,None)
                        ]
    ]
  structure_item (lambda/matching.ml[2020,66146+0]..[2025,66332+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2020,66146+4]..[2020,66146+16])
          Ppat_var "divide_tuple" (lambda/matching.ml[2020,66146+4]..[2020,66146+16])
        expression (lambda/matching.ml[2020,66146+17]..[2025,66332+15]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[2020,66146+18]..[2020,66146+24])
            Ppat_var "scopes" (lambda/matching.ml[2020,66146+18]..[2020,66146+24])
          expression (lambda/matching.ml[2020,66146+25]..[2025,66332+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2020,66146+25]..[2020,66146+29])
              Ppat_var "head" (lambda/matching.ml[2020,66146+25]..[2020,66146+29])
            expression (lambda/matching.ml[2020,66146+30]..[2025,66332+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2020,66146+30]..[2020,66146+33])
                Ppat_var "ctx" (lambda/matching.ml[2020,66146+30]..[2020,66146+33])
              expression (lambda/matching.ml[2020,66146+34]..[2025,66332+15]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2020,66146+34]..[2020,66146+36])
                  Ppat_var "pm" (lambda/matching.ml[2020,66146+34]..[2020,66146+36])
                expression (lambda/matching.ml[2021,66185+2]..[2025,66332+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2021,66185+6]..[2021,66185+11])
                        Ppat_var "arity" (lambda/matching.ml[2021,66185+6]..[2021,66185+11])
                      expression (lambda/matching.ml[2021,66185+14]..[2021,66185+38])
                        Pexp_apply
                        expression (lambda/matching.ml[2021,66185+14]..[2021,66185+33])
                          Pexp_ident "Patterns.Head.arity" (lambda/matching.ml[2021,66185+14]..[2021,66185+33])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2021,66185+34]..[2021,66185+38])
                              Pexp_ident "head" (lambda/matching.ml[2021,66185+34]..[2021,66185+38])
                        ]
                  ]
                  expression (lambda/matching.ml[2022,66227+2]..[2025,66332+15])
                    Pexp_apply
                    expression (lambda/matching.ml[2022,66227+2]..[2022,66227+13])
                      Pexp_ident "divide_line" (lambda/matching.ml[2022,66227+2]..[2022,66227+13])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2022,66227+14]..[2022,66227+39])
                          Pexp_apply
                          expression (lambda/matching.ml[2022,66227+15]..[2022,66227+33])
                            Pexp_ident "Context.specialize" (lambda/matching.ml[2022,66227+15]..[2022,66227+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2022,66227+34]..[2022,66227+38])
                                Pexp_ident "head" (lambda/matching.ml[2022,66227+34]..[2022,66227+38])
                          ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2023,66267+4]..[2023,66267+33])
                          Pexp_apply
                          expression (lambda/matching.ml[2023,66267+5]..[2023,66267+24])
                            Pexp_ident "get_expr_args_tuple" (lambda/matching.ml[2023,66267+5]..[2023,66267+24])
                          [
                            <arg>
                            Labelled "scopes"
                              expression (lambda/matching.ml[2023,66267+26]..[2023,66267+32])
                                Pexp_ident "scopes" (lambda/matching.ml[2023,66267+26]..[2023,66267+32])
                          ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2024,66301+4]..[2024,66301+30])
                          Pexp_apply
                          expression (lambda/matching.ml[2024,66301+5]..[2024,66301+23])
                            Pexp_ident "get_pat_args_tuple" (lambda/matching.ml[2024,66301+5]..[2024,66301+23])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2024,66301+24]..[2024,66301+29])
                                Pexp_ident "arity" (lambda/matching.ml[2024,66301+24]..[2024,66301+29])
                          ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2025,66332+4]..[2025,66332+8])
                          Pexp_ident "head" (lambda/matching.ml[2025,66332+4]..[2025,66332+8])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2025,66332+9]..[2025,66332+12])
                          Pexp_ident "ctx" (lambda/matching.ml[2025,66332+9]..[2025,66332+12])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2025,66332+13]..[2025,66332+15])
                          Pexp_ident "pm" (lambda/matching.ml[2025,66332+13]..[2025,66332+15])
                    ]
    ]
  structure_item (lambda/matching.ml[2029,66390+0]..[2032,66569+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2029,66390+4]..[2029,66390+24])
          Ppat_var "record_matching_line" (lambda/matching.ml[2029,66390+4]..[2029,66390+24])
        expression (lambda/matching.ml[2029,66390+25]..[2032,66569+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2029,66390+25]..[2029,66390+35])
            Ppat_var "num_fields" (lambda/matching.ml[2029,66390+25]..[2029,66390+35])
          expression (lambda/matching.ml[2029,66390+36]..[2032,66569+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2029,66390+36]..[2029,66390+48])
              Ppat_var "lbl_pat_list" (lambda/matching.ml[2029,66390+36]..[2029,66390+48])
            expression (lambda/matching.ml[2030,66441+2]..[2032,66569+20])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[2030,66441+6]..[2030,66441+10])
                    Ppat_var "patv" (lambda/matching.ml[2030,66441+6]..[2030,66441+10])
                  expression (lambda/matching.ml[2030,66441+13]..[2030,66441+49])
                    Pexp_apply
                    expression (lambda/matching.ml[2030,66441+13]..[2030,66441+23])
                      Pexp_ident "Array.make" (lambda/matching.ml[2030,66441+13]..[2030,66441+23])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2030,66441+24]..[2030,66441+34])
                          Pexp_ident "num_fields" (lambda/matching.ml[2030,66441+24]..[2030,66441+34])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2030,66441+35]..[2030,66441+49])
                          Pexp_ident "Patterns.omega" (lambda/matching.ml[2030,66441+35]..[2030,66441+49])
                    ]
              ]
              expression (lambda/matching.ml[2031,66494+2]..[2032,66569+20])
                Pexp_sequence
                expression (lambda/matching.ml[2031,66494+2]..[2031,66494+73])
                  Pexp_apply
                  expression (lambda/matching.ml[2031,66494+2]..[2031,66494+11])
                    Pexp_ident "List.iter" (lambda/matching.ml[2031,66494+2]..[2031,66494+11])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2031,66494+12]..[2031,66494+60])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2031,66494+17]..[2031,66494+30])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2031,66494+18]..[2031,66494+19])
                              Ppat_any
                            pattern (lambda/matching.ml[2031,66494+21]..[2031,66494+24])
                              Ppat_var "lbl" (lambda/matching.ml[2031,66494+21]..[2031,66494+24])
                            pattern (lambda/matching.ml[2031,66494+26]..[2031,66494+29])
                              Ppat_var "pat" (lambda/matching.ml[2031,66494+26]..[2031,66494+29])
                          ]
                        expression (lambda/matching.ml[2031,66494+34]..[2031,66494+59])
                          Pexp_apply
                          expression (lambda/matching.ml[2031,66494+34]..[2031,66494+59]) ghost
                            Pexp_ident "Array.set" (lambda/matching.ml[2031,66494+34]..[2031,66494+59]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2031,66494+34]..[2031,66494+38])
                                Pexp_ident "patv" (lambda/matching.ml[2031,66494+34]..[2031,66494+38])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2031,66494+40]..[2031,66494+51])
                                Pexp_field
                                expression (lambda/matching.ml[2031,66494+40]..[2031,66494+43])
                                  Pexp_ident "lbl" (lambda/matching.ml[2031,66494+40]..[2031,66494+43])
                                "lbl_pos" (lambda/matching.ml[2031,66494+44]..[2031,66494+51])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2031,66494+56]..[2031,66494+59])
                                Pexp_ident "pat" (lambda/matching.ml[2031,66494+56]..[2031,66494+59])
                          ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2031,66494+61]..[2031,66494+73])
                        Pexp_ident "lbl_pat_list" (lambda/matching.ml[2031,66494+61]..[2031,66494+73])
                  ]
                expression (lambda/matching.ml[2032,66569+2]..[2032,66569+20])
                  Pexp_apply
                  expression (lambda/matching.ml[2032,66569+2]..[2032,66569+15])
                    Pexp_ident "Array.to_list" (lambda/matching.ml[2032,66569+2]..[2032,66569+15])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2032,66569+16]..[2032,66569+20])
                        Pexp_ident "patv" (lambda/matching.ml[2032,66569+16]..[2032,66569+20])
                  ]
    ]
  structure_item (lambda/matching.ml[2034,66591+0]..[2039,66830+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2034,66591+4]..[2034,66591+23])
          Ppat_var "get_pat_args_record" (lambda/matching.ml[2034,66591+4]..[2034,66591+23])
        expression (lambda/matching.ml[2034,66591+24]..[2039,66830+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2034,66591+24]..[2034,66591+34])
            Ppat_var "num_fields" (lambda/matching.ml[2034,66591+24]..[2034,66591+34])
          expression (lambda/matching.ml[2034,66591+35]..[2039,66830+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2034,66591+35]..[2034,66591+36])
              Ppat_var "p" (lambda/matching.ml[2034,66591+35]..[2034,66591+36])
            expression (lambda/matching.ml[2034,66591+37]..[2039,66830+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2034,66591+37]..[2034,66591+40])
                Ppat_var "rem" (lambda/matching.ml[2034,66591+37]..[2034,66591+40])
              expression (lambda/matching.ml[2035,66634+2]..[2039,66830+21])
                Pexp_match
                expression (lambda/matching.ml[2035,66634+8]..[2035,66634+9])
                  Pexp_ident "p" (lambda/matching.ml[2035,66634+8]..[2035,66634+9])
                [
                  <case>
                    pattern (lambda/matching.ml[2036,66649+4]..[2036,66649+27])
                      Ppat_record Closed
                      [
                        "pat_desc" (lambda/matching.ml[2036,66649+6]..[2036,66649+14])
                          pattern (lambda/matching.ml[2036,66649+17]..[2036,66649+25])
                            Ppat_construct "Tpat_any" (lambda/matching.ml[2036,66649+17]..[2036,66649+25])
                            None
                      ]
                    expression (lambda/matching.ml[2036,66649+31]..[2036,66649+71])
                      Pexp_apply
                      expression (lambda/matching.ml[2036,66649+66]..[2036,66649+67])
                        Pexp_ident "@" (lambda/matching.ml[2036,66649+66]..[2036,66649+67])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2036,66649+31]..[2036,66649+65])
                            Pexp_apply
                            expression (lambda/matching.ml[2036,66649+31]..[2036,66649+51])
                              Pexp_ident "record_matching_line" (lambda/matching.ml[2036,66649+31]..[2036,66649+51])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2036,66649+52]..[2036,66649+62])
                                  Pexp_ident "num_fields" (lambda/matching.ml[2036,66649+52]..[2036,66649+62])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2036,66649+63]..[2036,66649+65])
                                  Pexp_construct "[]" (lambda/matching.ml[2036,66649+63]..[2036,66649+65])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2036,66649+68]..[2036,66649+71])
                            Pexp_ident "rem" (lambda/matching.ml[2036,66649+68]..[2036,66649+71])
                      ]
                  <case>
                    pattern (lambda/matching.ml[2037,66721+4]..[2037,66721+48])
                      Ppat_record Closed
                      [
                        "pat_desc" (lambda/matching.ml[2037,66721+6]..[2037,66721+14])
                          pattern (lambda/matching.ml[2037,66721+17]..[2037,66721+46])
                            Ppat_construct "Tpat_record" (lambda/matching.ml[2037,66721+17]..[2037,66721+28])
                            Some
                              []
                              pattern (lambda/matching.ml[2037,66721+29]..[2037,66721+46])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2037,66721+30]..[2037,66721+42])
                                    Ppat_var "lbl_pat_list" (lambda/matching.ml[2037,66721+30]..[2037,66721+42])
                                  pattern (lambda/matching.ml[2037,66721+44]..[2037,66721+45])
                                    Ppat_any
                                ]
                      ]
                    expression (lambda/matching.ml[2038,66773+6]..[2038,66773+56])
                      Pexp_apply
                      expression (lambda/matching.ml[2038,66773+51]..[2038,66773+52])
                        Pexp_ident "@" (lambda/matching.ml[2038,66773+51]..[2038,66773+52])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2038,66773+6]..[2038,66773+50])
                            Pexp_apply
                            expression (lambda/matching.ml[2038,66773+6]..[2038,66773+26])
                              Pexp_ident "record_matching_line" (lambda/matching.ml[2038,66773+6]..[2038,66773+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2038,66773+27]..[2038,66773+37])
                                  Pexp_ident "num_fields" (lambda/matching.ml[2038,66773+27]..[2038,66773+37])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2038,66773+38]..[2038,66773+50])
                                  Pexp_ident "lbl_pat_list" (lambda/matching.ml[2038,66773+38]..[2038,66773+50])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2038,66773+53]..[2038,66773+56])
                            Pexp_ident "rem" (lambda/matching.ml[2038,66773+53]..[2038,66773+56])
                      ]
                  <case>
                    pattern (lambda/matching.ml[2039,66830+4]..[2039,66830+5])
                      Ppat_any
                    expression (lambda/matching.ml[2039,66830+9]..[2039,66830+21])
                      Pexp_assert
                      expression (lambda/matching.ml[2039,66830+16]..[2039,66830+21])
                        Pexp_construct "false" (lambda/matching.ml[2039,66830+16]..[2039,66830+21])
                        None
                ]
    ]
  structure_item (lambda/matching.ml[2041,66853+0]..[2072,67759+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2041,66853+4]..[2041,66853+24])
          Ppat_var "get_expr_args_record" (lambda/matching.ml[2041,66853+4]..[2041,66853+24])
        expression (lambda/matching.ml[2041,66853+25]..[2072,67759+13]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[2041,66853+26]..[2041,66853+32])
            Ppat_var "scopes" (lambda/matching.ml[2041,66853+26]..[2041,66853+32])
          expression (lambda/matching.ml[2041,66853+33]..[2072,67759+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2041,66853+33]..[2041,66853+37])
              Ppat_var "head" (lambda/matching.ml[2041,66853+33]..[2041,66853+37])
            expression (lambda/matching.ml[2041,66853+38]..[2072,67759+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2041,66853+38]..[2041,66853+49])
                Ppat_tuple
                [
                  pattern (lambda/matching.ml[2041,66853+39]..[2041,66853+42])
                    Ppat_var "arg" (lambda/matching.ml[2041,66853+39]..[2041,66853+42])
                  pattern (lambda/matching.ml[2041,66853+44]..[2041,66853+48])
                    Ppat_var "_mut" (lambda/matching.ml[2041,66853+44]..[2041,66853+48])
                ]
              expression (lambda/matching.ml[2041,66853+50]..[2072,67759+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2041,66853+50]..[2041,66853+53])
                  Ppat_var "rem" (lambda/matching.ml[2041,66853+50]..[2041,66853+53])
                expression (lambda/matching.ml[2042,66909+2]..[2072,67759+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2042,66909+6]..[2042,66909+9])
                        Ppat_var "loc" (lambda/matching.ml[2042,66909+6]..[2042,66909+9])
                      expression (lambda/matching.ml[2042,66909+12]..[2042,66909+33])
                        Pexp_apply
                        expression (lambda/matching.ml[2042,66909+12]..[2042,66909+20])
                          Pexp_ident "head_loc" (lambda/matching.ml[2042,66909+12]..[2042,66909+20])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[2042,66909+22]..[2042,66909+28])
                              Pexp_ident "scopes" (lambda/matching.ml[2042,66909+22]..[2042,66909+28])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2042,66909+29]..[2042,66909+33])
                              Pexp_ident "head" (lambda/matching.ml[2042,66909+29]..[2042,66909+33])
                        ]
                  ]
                  expression (lambda/matching.ml[2043,66946+2]..[2072,67759+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2043,66946+6]..[2043,66946+16])
                          Ppat_var "all_labels" (lambda/matching.ml[2043,66946+6]..[2043,66946+16])
                        expression (lambda/matching.ml[2044,66965+4]..[2049,67090+20])
                          Pexp_open Fresh
                          module_expr (lambda/matching.ml[2044,66965+13]..[2044,66965+26])
                            Pmod_ident "Patterns.Head" (lambda/matching.ml[2044,66965+13]..[2044,66965+26])
                          expression (lambda/matching.ml[2045,66995+4]..[2049,67090+20])
                            Pexp_match
                            expression (lambda/matching.ml[2045,66995+10]..[2045,66995+23])
                              Pexp_field
                              expression (lambda/matching.ml[2045,66995+10]..[2045,66995+14])
                                Pexp_ident "head" (lambda/matching.ml[2045,66995+10]..[2045,66995+14])
                              "pat_desc" (lambda/matching.ml[2045,66995+15]..[2045,66995+23])
                            [
                              <case>
                                pattern (lambda/matching.ml[2046,67024+6]..[2046,67024+23])
                                  Ppat_construct "Record" (lambda/matching.ml[2046,67024+6]..[2046,67024+12])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2046,67024+13]..[2046,67024+23])
                                      Ppat_construct "::" (lambda/matching.ml[2046,67024+18]..[2046,67024+20])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2046,67024+14]..[2046,67024+22]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[2046,67024+14]..[2046,67024+17])
                                              Ppat_var "lbl" (lambda/matching.ml[2046,67024+14]..[2046,67024+17])
                                            pattern (lambda/matching.ml[2046,67024+21]..[2046,67024+22])
                                              Ppat_any
                                          ]
                                expression (lambda/matching.ml[2046,67024+27]..[2046,67024+38])
                                  Pexp_field
                                  expression (lambda/matching.ml[2046,67024+27]..[2046,67024+30])
                                    Pexp_ident "lbl" (lambda/matching.ml[2046,67024+27]..[2046,67024+30])
                                  "lbl_all" (lambda/matching.ml[2046,67024+31]..[2046,67024+38])
                              <case>
                                pattern (lambda/matching.ml[2047,67063+6]..[2048,67079+7])
                                  Ppat_or
                                  pattern (lambda/matching.ml[2047,67063+6]..[2047,67063+15])
                                    Ppat_construct "Record" (lambda/matching.ml[2047,67063+6]..[2047,67063+12])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[2047,67063+13]..[2047,67063+15])
                                        Ppat_construct "[]" (lambda/matching.ml[2047,67063+13]..[2047,67063+15])
                                        None
                                  pattern (lambda/matching.ml[2048,67079+6]..[2048,67079+7])
                                    Ppat_any
                                expression (lambda/matching.ml[2049,67090+8]..[2049,67090+20])
                                  Pexp_assert
                                  expression (lambda/matching.ml[2049,67090+15]..[2049,67090+20])
                                    Pexp_construct "false" (lambda/matching.ml[2049,67090+15]..[2049,67090+20])
                                    None
                            ]
                    ]
                    expression (lambda/matching.ml[2051,67116+2]..[2072,67759+13])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (lambda/matching.ml[2051,67116+10]..[2051,67116+19])
                            Ppat_var "make_args" (lambda/matching.ml[2051,67116+10]..[2051,67116+19])
                          expression (lambda/matching.ml[2051,67116+20]..[2070,67711+42]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2051,67116+20]..[2051,67116+23])
                              Ppat_var "pos" (lambda/matching.ml[2051,67116+20]..[2051,67116+23])
                            expression (lambda/matching.ml[2052,67142+4]..[2070,67711+42])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2052,67142+7]..[2052,67142+37])
                                Pexp_apply
                                expression (lambda/matching.ml[2052,67142+11]..[2052,67142+13])
                                  Pexp_ident ">=" (lambda/matching.ml[2052,67142+11]..[2052,67142+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2052,67142+7]..[2052,67142+10])
                                      Pexp_ident "pos" (lambda/matching.ml[2052,67142+7]..[2052,67142+10])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2052,67142+14]..[2052,67142+37])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2052,67142+14]..[2052,67142+26])
                                        Pexp_ident "Array.length" (lambda/matching.ml[2052,67142+14]..[2052,67142+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2052,67142+27]..[2052,67142+37])
                                            Pexp_ident "all_labels" (lambda/matching.ml[2052,67142+27]..[2052,67142+37])
                                      ]
                                ]
                              expression (lambda/matching.ml[2053,67185+6]..[2053,67185+9])
                                Pexp_ident "rem" (lambda/matching.ml[2053,67185+6]..[2053,67185+9])
                              Some
                                expression (lambda/matching.ml[2055,67204+6]..[2070,67711+42])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2055,67204+10]..[2055,67204+13])
                                        Ppat_var "lbl" (lambda/matching.ml[2055,67204+10]..[2055,67204+13])
                                      expression (lambda/matching.ml[2055,67204+16]..[2055,67204+32])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2055,67204+16]..[2055,67204+32]) ghost
                                          Pexp_ident "Array.get" (lambda/matching.ml[2055,67204+16]..[2055,67204+32]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2055,67204+16]..[2055,67204+26])
                                              Pexp_ident "all_labels" (lambda/matching.ml[2055,67204+16]..[2055,67204+26])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2055,67204+28]..[2055,67204+31])
                                              Pexp_ident "pos" (lambda/matching.ml[2055,67204+28]..[2055,67204+31])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2056,67240+6]..[2070,67711+42])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[2056,67240+10]..[2056,67240+16])
                                          Ppat_var "access" (lambda/matching.ml[2056,67240+10]..[2056,67240+16])
                                        expression (lambda/matching.ml[2057,67259+8]..[2063,67507+78])
                                          Pexp_match
                                          expression (lambda/matching.ml[2057,67259+14]..[2057,67259+28])
                                            Pexp_field
                                            expression (lambda/matching.ml[2057,67259+14]..[2057,67259+17])
                                              Pexp_ident "lbl" (lambda/matching.ml[2057,67259+14]..[2057,67259+17])
                                            "lbl_repres" (lambda/matching.ml[2057,67259+18]..[2057,67259+28])
                                          [
                                            <case>
                                              pattern (lambda/matching.ml[2058,67293+10]..[2059,67318+26])
                                                Ppat_or
                                                pattern (lambda/matching.ml[2058,67293+10]..[2058,67293+24])
                                                  Ppat_construct "Record_regular" (lambda/matching.ml[2058,67293+10]..[2058,67293+24])
                                                  None
                                                pattern (lambda/matching.ml[2059,67318+10]..[2059,67318+26])
                                                  Ppat_construct "Record_inlined" (lambda/matching.ml[2059,67318+10]..[2059,67318+24])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[2059,67318+25]..[2059,67318+26])
                                                      Ppat_any
                                              expression (lambda/matching.ml[2060,67348+12]..[2060,67348+52])
                                                Pexp_construct "Lprim" (lambda/matching.ml[2060,67348+12]..[2060,67348+17])
                                                Some
                                                  expression (lambda/matching.ml[2060,67348+18]..[2060,67348+52])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2060,67348+19]..[2060,67348+37])
                                                        Pexp_construct "Pfield" (lambda/matching.ml[2060,67348+19]..[2060,67348+25])
                                                        Some
                                                          expression (lambda/matching.ml[2060,67348+26]..[2060,67348+37])
                                                            Pexp_field
                                                            expression (lambda/matching.ml[2060,67348+26]..[2060,67348+29])
                                                              Pexp_ident "lbl" (lambda/matching.ml[2060,67348+26]..[2060,67348+29])
                                                            "lbl_pos" (lambda/matching.ml[2060,67348+30]..[2060,67348+37])
                                                      expression (lambda/matching.ml[2060,67348+39]..[2060,67348+46])
                                                        Pexp_construct "::" (lambda/matching.ml[2060,67348+41]..[2060,67348+46]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[2060,67348+41]..[2060,67348+46]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2060,67348+41]..[2060,67348+44])
                                                                Pexp_ident "arg" (lambda/matching.ml[2060,67348+41]..[2060,67348+44])
                                                              expression (lambda/matching.ml[2060,67348+45]..[2060,67348+46]) ghost
                                                                Pexp_construct "[]" (lambda/matching.ml[2060,67348+45]..[2060,67348+46]) ghost
                                                                None
                                                            ]
                                                      expression (lambda/matching.ml[2060,67348+48]..[2060,67348+51])
                                                        Pexp_ident "loc" (lambda/matching.ml[2060,67348+48]..[2060,67348+51])
                                                    ]
                                            <case>
                                              pattern (lambda/matching.ml[2061,67401+10]..[2061,67401+26])
                                                Ppat_construct "Record_unboxed" (lambda/matching.ml[2061,67401+10]..[2061,67401+24])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[2061,67401+25]..[2061,67401+26])
                                                    Ppat_any
                                              expression (lambda/matching.ml[2061,67401+30]..[2061,67401+33])
                                                Pexp_ident "arg" (lambda/matching.ml[2061,67401+30]..[2061,67401+33])
                                            <case>
                                              pattern (lambda/matching.ml[2062,67435+10]..[2062,67435+22])
                                                Ppat_construct "Record_float" (lambda/matching.ml[2062,67435+10]..[2062,67435+22])
                                                None
                                              expression (lambda/matching.ml[2062,67435+26]..[2062,67435+71])
                                                Pexp_construct "Lprim" (lambda/matching.ml[2062,67435+26]..[2062,67435+31])
                                                Some
                                                  expression (lambda/matching.ml[2062,67435+32]..[2062,67435+71])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2062,67435+33]..[2062,67435+56])
                                                        Pexp_construct "Pfloatfield" (lambda/matching.ml[2062,67435+33]..[2062,67435+44])
                                                        Some
                                                          expression (lambda/matching.ml[2062,67435+45]..[2062,67435+56])
                                                            Pexp_field
                                                            expression (lambda/matching.ml[2062,67435+45]..[2062,67435+48])
                                                              Pexp_ident "lbl" (lambda/matching.ml[2062,67435+45]..[2062,67435+48])
                                                            "lbl_pos" (lambda/matching.ml[2062,67435+49]..[2062,67435+56])
                                                      expression (lambda/matching.ml[2062,67435+58]..[2062,67435+65])
                                                        Pexp_construct "::" (lambda/matching.ml[2062,67435+60]..[2062,67435+65]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[2062,67435+60]..[2062,67435+65]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2062,67435+60]..[2062,67435+63])
                                                                Pexp_ident "arg" (lambda/matching.ml[2062,67435+60]..[2062,67435+63])
                                                              expression (lambda/matching.ml[2062,67435+64]..[2062,67435+65]) ghost
                                                                Pexp_construct "[]" (lambda/matching.ml[2062,67435+64]..[2062,67435+65]) ghost
                                                                None
                                                            ]
                                                      expression (lambda/matching.ml[2062,67435+67]..[2062,67435+70])
                                                        Pexp_ident "loc" (lambda/matching.ml[2062,67435+67]..[2062,67435+70])
                                                    ]
                                            <case>
                                              pattern (lambda/matching.ml[2063,67507+10]..[2063,67507+28])
                                                Ppat_construct "Record_extension" (lambda/matching.ml[2063,67507+10]..[2063,67507+26])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[2063,67507+27]..[2063,67507+28])
                                                    Ppat_any
                                              expression (lambda/matching.ml[2063,67507+32]..[2063,67507+78])
                                                Pexp_construct "Lprim" (lambda/matching.ml[2063,67507+32]..[2063,67507+37])
                                                Some
                                                  expression (lambda/matching.ml[2063,67507+38]..[2063,67507+78])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2063,67507+39]..[2063,67507+63])
                                                        Pexp_construct "Pfield" (lambda/matching.ml[2063,67507+39]..[2063,67507+45])
                                                        Some
                                                          expression (lambda/matching.ml[2063,67507+46]..[2063,67507+63])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[2063,67507+59]..[2063,67507+60])
                                                              Pexp_ident "+" (lambda/matching.ml[2063,67507+59]..[2063,67507+60])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2063,67507+47]..[2063,67507+58])
                                                                  Pexp_field
                                                                  expression (lambda/matching.ml[2063,67507+47]..[2063,67507+50])
                                                                    Pexp_ident "lbl" (lambda/matching.ml[2063,67507+47]..[2063,67507+50])
                                                                  "lbl_pos" (lambda/matching.ml[2063,67507+51]..[2063,67507+58])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2063,67507+61]..[2063,67507+62])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                      expression (lambda/matching.ml[2063,67507+65]..[2063,67507+72])
                                                        Pexp_construct "::" (lambda/matching.ml[2063,67507+67]..[2063,67507+72]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[2063,67507+67]..[2063,67507+72]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2063,67507+67]..[2063,67507+70])
                                                                Pexp_ident "arg" (lambda/matching.ml[2063,67507+67]..[2063,67507+70])
                                                              expression (lambda/matching.ml[2063,67507+71]..[2063,67507+72]) ghost
                                                                Pexp_construct "[]" (lambda/matching.ml[2063,67507+71]..[2063,67507+72]) ghost
                                                                None
                                                            ]
                                                      expression (lambda/matching.ml[2063,67507+74]..[2063,67507+77])
                                                        Pexp_ident "loc" (lambda/matching.ml[2063,67507+74]..[2063,67507+77])
                                                    ]
                                          ]
                                    ]
                                    expression (lambda/matching.ml[2065,67595+6]..[2070,67711+42])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2065,67595+10]..[2065,67595+13])
                                            Ppat_var "str" (lambda/matching.ml[2065,67595+10]..[2065,67595+13])
                                          expression (lambda/matching.ml[2066,67611+8]..[2068,67671+30])
                                            Pexp_match
                                            expression (lambda/matching.ml[2066,67611+14]..[2066,67611+25])
                                              Pexp_field
                                              expression (lambda/matching.ml[2066,67611+14]..[2066,67611+17])
                                                Pexp_ident "lbl" (lambda/matching.ml[2066,67611+14]..[2066,67611+17])
                                              "lbl_mut" (lambda/matching.ml[2066,67611+18]..[2066,67611+25])
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[2067,67642+10]..[2067,67642+19])
                                                  Ppat_construct "Immutable" (lambda/matching.ml[2067,67642+10]..[2067,67642+19])
                                                  None
                                                expression (lambda/matching.ml[2067,67642+23]..[2067,67642+28])
                                                  Pexp_construct "Alias" (lambda/matching.ml[2067,67642+23]..[2067,67642+28])
                                                  None
                                              <case>
                                                pattern (lambda/matching.ml[2068,67671+10]..[2068,67671+17])
                                                  Ppat_construct "Mutable" (lambda/matching.ml[2068,67671+10]..[2068,67671+17])
                                                  None
                                                expression (lambda/matching.ml[2068,67671+21]..[2068,67671+30])
                                                  Pexp_construct "StrictOpt" (lambda/matching.ml[2068,67671+21]..[2068,67671+30])
                                                  None
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2070,67711+6]..[2070,67711+42])
                                        Pexp_construct "::" (lambda/matching.ml[2070,67711+20]..[2070,67711+22])
                                        Some
                                          expression (lambda/matching.ml[2070,67711+6]..[2070,67711+42]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2070,67711+6]..[2070,67711+19])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2070,67711+7]..[2070,67711+13])
                                                    Pexp_ident "access" (lambda/matching.ml[2070,67711+7]..[2070,67711+13])
                                                  expression (lambda/matching.ml[2070,67711+15]..[2070,67711+18])
                                                    Pexp_ident "str" (lambda/matching.ml[2070,67711+15]..[2070,67711+18])
                                                ]
                                              expression (lambda/matching.ml[2070,67711+23]..[2070,67711+42])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2070,67711+23]..[2070,67711+32])
                                                  Pexp_ident "make_args" (lambda/matching.ml[2070,67711+23]..[2070,67711+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2070,67711+33]..[2070,67711+42])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[2070,67711+38]..[2070,67711+39])
                                                        Pexp_ident "+" (lambda/matching.ml[2070,67711+38]..[2070,67711+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2070,67711+34]..[2070,67711+37])
                                                            Pexp_ident "pos" (lambda/matching.ml[2070,67711+34]..[2070,67711+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2070,67711+40]..[2070,67711+41])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                ]
                                            ]
                      ]
                      expression (lambda/matching.ml[2072,67759+2]..[2072,67759+13])
                        Pexp_apply
                        expression (lambda/matching.ml[2072,67759+2]..[2072,67759+11])
                          Pexp_ident "make_args" (lambda/matching.ml[2072,67759+2]..[2072,67759+11])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2072,67759+12]..[2072,67759+13])
                              Pexp_constant PConst_int (0,None)
                        ]
    ]
  structure_item (lambda/matching.ml[2074,67774+0]..[2084,68282+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2074,67774+4]..[2074,67774+17])
          Ppat_var "divide_record" (lambda/matching.ml[2074,67774+4]..[2074,67774+17])
        expression (lambda/matching.ml[2074,67774+18]..[2084,68282+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2074,67774+18]..[2074,67774+28])
            Ppat_var "all_labels" (lambda/matching.ml[2074,67774+18]..[2074,67774+28])
          expression (lambda/matching.ml[2074,67774+29]..[2084,68282+15]) ghost
            Pexp_fun
            Labelled "scopes"
            None
            pattern (lambda/matching.ml[2074,67774+30]..[2074,67774+36])
              Ppat_var "scopes" (lambda/matching.ml[2074,67774+30]..[2074,67774+36])
            expression (lambda/matching.ml[2074,67774+37]..[2084,68282+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2074,67774+37]..[2074,67774+41])
                Ppat_var "head" (lambda/matching.ml[2074,67774+37]..[2074,67774+41])
              expression (lambda/matching.ml[2074,67774+42]..[2084,68282+15]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2074,67774+42]..[2074,67774+45])
                  Ppat_var "ctx" (lambda/matching.ml[2074,67774+42]..[2074,67774+45])
                expression (lambda/matching.ml[2074,67774+46]..[2084,68282+15]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2074,67774+46]..[2074,67774+48])
                    Ppat_var "pm" (lambda/matching.ml[2074,67774+46]..[2074,67774+48])
                  expression (lambda/matching.ml[2080,68115+2]..[2084,68282+15])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2080,68115+6]..[2080,68115+10])
                          Ppat_var "head" (lambda/matching.ml[2080,68115+6]..[2080,68115+10])
                        expression (lambda/matching.ml[2080,68115+13]..[2080,68115+36])
                          Pexp_apply
                          expression (lambda/matching.ml[2080,68115+13]..[2080,68115+31])
                            Pexp_ident "expand_record_head" (lambda/matching.ml[2080,68115+13]..[2080,68115+31])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2080,68115+32]..[2080,68115+36])
                                Pexp_ident "head" (lambda/matching.ml[2080,68115+32]..[2080,68115+36])
                          ]
                    ]
                    expression (lambda/matching.ml[2081,68155+2]..[2084,68282+15])
                      Pexp_apply
                      expression (lambda/matching.ml[2081,68155+2]..[2081,68155+13])
                        Pexp_ident "divide_line" (lambda/matching.ml[2081,68155+2]..[2081,68155+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2081,68155+14]..[2081,68155+39])
                            Pexp_apply
                            expression (lambda/matching.ml[2081,68155+15]..[2081,68155+33])
                              Pexp_ident "Context.specialize" (lambda/matching.ml[2081,68155+15]..[2081,68155+33])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2081,68155+34]..[2081,68155+38])
                                  Pexp_ident "head" (lambda/matching.ml[2081,68155+34]..[2081,68155+38])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2082,68195+4]..[2082,68195+34])
                            Pexp_apply
                            expression (lambda/matching.ml[2082,68195+5]..[2082,68195+25])
                              Pexp_ident "get_expr_args_record" (lambda/matching.ml[2082,68195+5]..[2082,68195+25])
                            [
                              <arg>
                              Labelled "scopes"
                                expression (lambda/matching.ml[2082,68195+27]..[2082,68195+33])
                                  Pexp_ident "scopes" (lambda/matching.ml[2082,68195+27]..[2082,68195+33])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2083,68230+4]..[2083,68230+51])
                            Pexp_apply
                            expression (lambda/matching.ml[2083,68230+5]..[2083,68230+24])
                              Pexp_ident "get_pat_args_record" (lambda/matching.ml[2083,68230+5]..[2083,68230+24])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2083,68230+25]..[2083,68230+50])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2083,68230+26]..[2083,68230+38])
                                    Pexp_ident "Array.length" (lambda/matching.ml[2083,68230+26]..[2083,68230+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2083,68230+39]..[2083,68230+49])
                                        Pexp_ident "all_labels" (lambda/matching.ml[2083,68230+39]..[2083,68230+49])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2084,68282+4]..[2084,68282+8])
                            Pexp_ident "head" (lambda/matching.ml[2084,68282+4]..[2084,68282+8])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2084,68282+9]..[2084,68282+12])
                            Pexp_ident "ctx" (lambda/matching.ml[2084,68282+9]..[2084,68282+12])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2084,68282+13]..[2084,68282+15])
                            Pexp_ident "pm" (lambda/matching.ml[2084,68282+13]..[2084,68282+15])
                      ]
    ]
  structure_item (lambda/matching.ml[2088,68340+0]..[2090,68424+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2088,68340+4]..[2088,68340+17])
          Ppat_var "get_key_array" (lambda/matching.ml[2088,68340+4]..[2088,68340+17])
        expression (lambda/matching.ml[2088,68340+20]..[2090,68424+21])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[2089,68369+4]..[2089,68369+34])
                Ppat_record Closed
                [
                  "pat_desc" (lambda/matching.ml[2089,68369+6]..[2089,68369+14])
                    pattern (lambda/matching.ml[2089,68369+17]..[2089,68369+32])
                      Ppat_construct "Tpat_array" (lambda/matching.ml[2089,68369+17]..[2089,68369+27])
                      Some
                        []
                        pattern (lambda/matching.ml[2089,68369+28]..[2089,68369+32])
                          Ppat_var "patl" (lambda/matching.ml[2089,68369+28]..[2089,68369+32])
                ]
              expression (lambda/matching.ml[2089,68369+38]..[2089,68369+54])
                Pexp_apply
                expression (lambda/matching.ml[2089,68369+38]..[2089,68369+49])
                  Pexp_ident "List.length" (lambda/matching.ml[2089,68369+38]..[2089,68369+49])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[2089,68369+50]..[2089,68369+54])
                      Pexp_ident "patl" (lambda/matching.ml[2089,68369+50]..[2089,68369+54])
                ]
            <case>
              pattern (lambda/matching.ml[2090,68424+4]..[2090,68424+5])
                Ppat_any
              expression (lambda/matching.ml[2090,68424+9]..[2090,68424+21])
                Pexp_assert
                expression (lambda/matching.ml[2090,68424+16]..[2090,68424+21])
                  Pexp_construct "false" (lambda/matching.ml[2090,68424+16]..[2090,68424+21])
                  None
          ]
    ]
  structure_item (lambda/matching.ml[2092,68447+0]..[2095,68542+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2092,68447+4]..[2092,68447+22])
          Ppat_var "get_pat_args_array" (lambda/matching.ml[2092,68447+4]..[2092,68447+22])
        expression (lambda/matching.ml[2092,68447+23]..[2095,68542+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2092,68447+23]..[2092,68447+24])
            Ppat_var "p" (lambda/matching.ml[2092,68447+23]..[2092,68447+24])
          expression (lambda/matching.ml[2092,68447+25]..[2095,68542+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2092,68447+25]..[2092,68447+28])
              Ppat_var "rem" (lambda/matching.ml[2092,68447+25]..[2092,68447+28])
            expression (lambda/matching.ml[2093,68478+2]..[2095,68542+21])
              Pexp_match
              expression (lambda/matching.ml[2093,68478+8]..[2093,68478+9])
                Pexp_ident "p" (lambda/matching.ml[2093,68478+8]..[2093,68478+9])
              [
                <case>
                  pattern (lambda/matching.ml[2094,68493+4]..[2094,68493+34])
                    Ppat_record Closed
                    [
                      "pat_desc" (lambda/matching.ml[2094,68493+6]..[2094,68493+14])
                        pattern (lambda/matching.ml[2094,68493+17]..[2094,68493+32])
                          Ppat_construct "Tpat_array" (lambda/matching.ml[2094,68493+17]..[2094,68493+27])
                          Some
                            []
                            pattern (lambda/matching.ml[2094,68493+28]..[2094,68493+32])
                              Ppat_var "patl" (lambda/matching.ml[2094,68493+28]..[2094,68493+32])
                    ]
                  expression (lambda/matching.ml[2094,68493+38]..[2094,68493+48])
                    Pexp_apply
                    expression (lambda/matching.ml[2094,68493+43]..[2094,68493+44])
                      Pexp_ident "@" (lambda/matching.ml[2094,68493+43]..[2094,68493+44])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2094,68493+38]..[2094,68493+42])
                          Pexp_ident "patl" (lambda/matching.ml[2094,68493+38]..[2094,68493+42])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2094,68493+45]..[2094,68493+48])
                          Pexp_ident "rem" (lambda/matching.ml[2094,68493+45]..[2094,68493+48])
                    ]
                <case>
                  pattern (lambda/matching.ml[2095,68542+4]..[2095,68542+5])
                    Ppat_any
                  expression (lambda/matching.ml[2095,68542+9]..[2095,68542+21])
                    Pexp_assert
                    expression (lambda/matching.ml[2095,68542+16]..[2095,68542+21])
                      Pexp_construct "false" (lambda/matching.ml[2095,68542+16]..[2095,68542+21])
                      None
              ]
    ]
  structure_item (lambda/matching.ml[2097,68565+0]..[2114,69001+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2097,68565+4]..[2097,68565+23])
          Ppat_var "get_expr_args_array" (lambda/matching.ml[2097,68565+4]..[2097,68565+23])
        expression (lambda/matching.ml[2097,68565+24]..[2114,69001+13]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[2097,68565+25]..[2097,68565+31])
            Ppat_var "scopes" (lambda/matching.ml[2097,68565+25]..[2097,68565+31])
          expression (lambda/matching.ml[2097,68565+32]..[2114,69001+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2097,68565+32]..[2097,68565+36])
              Ppat_var "kind" (lambda/matching.ml[2097,68565+32]..[2097,68565+36])
            expression (lambda/matching.ml[2097,68565+37]..[2114,69001+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2097,68565+37]..[2097,68565+41])
                Ppat_var "head" (lambda/matching.ml[2097,68565+37]..[2097,68565+41])
              expression (lambda/matching.ml[2097,68565+42]..[2114,69001+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2097,68565+42]..[2097,68565+53])
                  Ppat_tuple
                  [
                    pattern (lambda/matching.ml[2097,68565+43]..[2097,68565+46])
                      Ppat_var "arg" (lambda/matching.ml[2097,68565+43]..[2097,68565+46])
                    pattern (lambda/matching.ml[2097,68565+48]..[2097,68565+52])
                      Ppat_var "_mut" (lambda/matching.ml[2097,68565+48]..[2097,68565+52])
                  ]
                expression (lambda/matching.ml[2097,68565+54]..[2114,69001+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2097,68565+54]..[2097,68565+57])
                    Ppat_var "rem" (lambda/matching.ml[2097,68565+54]..[2097,68565+57])
                  expression (lambda/matching.ml[2098,68625+2]..[2114,69001+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2098,68625+6]..[2098,68625+9])
                          Ppat_var "len" (lambda/matching.ml[2098,68625+6]..[2098,68625+9])
                        expression (lambda/matching.ml[2099,68637+4]..[2102,68719+23])
                          Pexp_open Fresh
                          module_expr (lambda/matching.ml[2099,68637+13]..[2099,68637+26])
                            Pmod_ident "Patterns.Head" (lambda/matching.ml[2099,68637+13]..[2099,68637+26])
                          expression (lambda/matching.ml[2100,68667+4]..[2102,68719+23])
                            Pexp_match
                            expression (lambda/matching.ml[2100,68667+10]..[2100,68667+23])
                              Pexp_field
                              expression (lambda/matching.ml[2100,68667+10]..[2100,68667+14])
                                Pexp_ident "head" (lambda/matching.ml[2100,68667+10]..[2100,68667+14])
                              "pat_desc" (lambda/matching.ml[2100,68667+15]..[2100,68667+23])
                            [
                              <case>
                                pattern (lambda/matching.ml[2101,68696+6]..[2101,68696+15])
                                  Ppat_construct "Array" (lambda/matching.ml[2101,68696+6]..[2101,68696+11])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2101,68696+12]..[2101,68696+15])
                                      Ppat_var "len" (lambda/matching.ml[2101,68696+12]..[2101,68696+15])
                                expression (lambda/matching.ml[2101,68696+19]..[2101,68696+22])
                                  Pexp_ident "len" (lambda/matching.ml[2101,68696+19]..[2101,68696+22])
                              <case>
                                pattern (lambda/matching.ml[2102,68719+6]..[2102,68719+7])
                                  Ppat_any
                                expression (lambda/matching.ml[2102,68719+11]..[2102,68719+23])
                                  Pexp_assert
                                  expression (lambda/matching.ml[2102,68719+18]..[2102,68719+23])
                                    Pexp_construct "false" (lambda/matching.ml[2102,68719+18]..[2102,68719+23])
                                    None
                            ]
                    ]
                    expression (lambda/matching.ml[2104,68748+2]..[2114,69001+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2104,68748+6]..[2104,68748+9])
                            Ppat_var "loc" (lambda/matching.ml[2104,68748+6]..[2104,68748+9])
                          expression (lambda/matching.ml[2104,68748+12]..[2104,68748+33])
                            Pexp_apply
                            expression (lambda/matching.ml[2104,68748+12]..[2104,68748+20])
                              Pexp_ident "head_loc" (lambda/matching.ml[2104,68748+12]..[2104,68748+20])
                            [
                              <arg>
                              Labelled "scopes"
                                expression (lambda/matching.ml[2104,68748+22]..[2104,68748+28])
                                  Pexp_ident "scopes" (lambda/matching.ml[2104,68748+22]..[2104,68748+28])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2104,68748+29]..[2104,68748+33])
                                  Pexp_ident "head" (lambda/matching.ml[2104,68748+29]..[2104,68748+33])
                            ]
                      ]
                      expression (lambda/matching.ml[2105,68785+2]..[2114,69001+13])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lambda/matching.ml[2105,68785+10]..[2105,68785+19])
                              Ppat_var "make_args" (lambda/matching.ml[2105,68785+10]..[2105,68785+19])
                            expression (lambda/matching.ml[2105,68785+20]..[2112,68967+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2105,68785+20]..[2105,68785+23])
                                Ppat_var "pos" (lambda/matching.ml[2105,68785+20]..[2105,68785+23])
                              expression (lambda/matching.ml[2106,68811+4]..[2112,68967+28])
                                Pexp_ifthenelse
                                expression (lambda/matching.ml[2106,68811+7]..[2106,68811+17])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2106,68811+11]..[2106,68811+13])
                                    Pexp_ident ">=" (lambda/matching.ml[2106,68811+11]..[2106,68811+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2106,68811+7]..[2106,68811+10])
                                        Pexp_ident "pos" (lambda/matching.ml[2106,68811+7]..[2106,68811+10])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2106,68811+14]..[2106,68811+17])
                                        Pexp_ident "len" (lambda/matching.ml[2106,68811+14]..[2106,68811+17])
                                  ]
                                expression (lambda/matching.ml[2107,68834+6]..[2107,68834+9])
                                  Pexp_ident "rem" (lambda/matching.ml[2107,68834+6]..[2107,68834+9])
                                Some
                                  expression (lambda/matching.ml[2109,68853+6]..[2112,68967+28])
                                    Pexp_construct "::" (lambda/matching.ml[2112,68967+6]..[2112,68967+8])
                                    Some
                                      expression (lambda/matching.ml[2109,68853+6]..[2112,68967+28]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2109,68853+6]..[2111,68947+19])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2109,68853+8]..[2110,68867+78])
                                                Pexp_construct "Lprim" (lambda/matching.ml[2109,68853+8]..[2109,68853+13])
                                                Some
                                                  expression (lambda/matching.ml[2110,68867+10]..[2110,68867+78])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2110,68867+11]..[2110,68867+26])
                                                        Pexp_construct "Parrayrefu" (lambda/matching.ml[2110,68867+11]..[2110,68867+21])
                                                        Some
                                                          expression (lambda/matching.ml[2110,68867+22]..[2110,68867+26])
                                                            Pexp_ident "kind" (lambda/matching.ml[2110,68867+22]..[2110,68867+26])
                                                      expression (lambda/matching.ml[2110,68867+28]..[2110,68867+72])
                                                        Pexp_construct "::" (lambda/matching.ml[2110,68867+30]..[2110,68867+72]) ghost
                                                        Some
                                                          expression (lambda/matching.ml[2110,68867+30]..[2110,68867+72]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2110,68867+30]..[2110,68867+33])
                                                                Pexp_ident "arg" (lambda/matching.ml[2110,68867+30]..[2110,68867+33])
                                                              expression (lambda/matching.ml[2110,68867+35]..[2110,68867+72]) ghost
                                                                Pexp_construct "::" (lambda/matching.ml[2110,68867+35]..[2110,68867+72]) ghost
                                                                Some
                                                                  expression (lambda/matching.ml[2110,68867+35]..[2110,68867+72]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/matching.ml[2110,68867+35]..[2110,68867+70])
Pexp_construct "Lconst" (lambda/matching.ml[2110,68867+35]..[2110,68867+41])
Some
  expression (lambda/matching.ml[2110,68867+42]..[2110,68867+70])
    Pexp_construct "Const_base" (lambda/matching.ml[2110,68867+43]..[2110,68867+53])
    Some
      expression (lambda/matching.ml[2110,68867+54]..[2110,68867+69])
        Pexp_construct "Const_int" (lambda/matching.ml[2110,68867+55]..[2110,68867+64])
        Some
          expression (lambda/matching.ml[2110,68867+65]..[2110,68867+68])
            Pexp_ident "pos" (lambda/matching.ml[2110,68867+65]..[2110,68867+68])
                                                                      expression (lambda/matching.ml[2110,68867+71]..[2110,68867+72]) ghost
Pexp_construct "[]" (lambda/matching.ml[2110,68867+71]..[2110,68867+72]) ghost
None
                                                                    ]
                                                            ]
                                                      expression (lambda/matching.ml[2110,68867+74]..[2110,68867+77])
                                                        Pexp_ident "loc" (lambda/matching.ml[2110,68867+74]..[2110,68867+77])
                                                    ]
                                              expression (lambda/matching.ml[2111,68947+8]..[2111,68947+17])
                                                Pexp_construct "StrictOpt" (lambda/matching.ml[2111,68947+8]..[2111,68947+17])
                                                None
                                            ]
                                          expression (lambda/matching.ml[2112,68967+9]..[2112,68967+28])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2112,68967+9]..[2112,68967+18])
                                              Pexp_ident "make_args" (lambda/matching.ml[2112,68967+9]..[2112,68967+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2112,68967+19]..[2112,68967+28])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2112,68967+24]..[2112,68967+25])
                                                    Pexp_ident "+" (lambda/matching.ml[2112,68967+24]..[2112,68967+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2112,68967+20]..[2112,68967+23])
                                                        Pexp_ident "pos" (lambda/matching.ml[2112,68967+20]..[2112,68967+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2112,68967+26]..[2112,68967+27])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                        ]
                        ]
                        expression (lambda/matching.ml[2114,69001+2]..[2114,69001+13])
                          Pexp_apply
                          expression (lambda/matching.ml[2114,69001+2]..[2114,69001+11])
                            Pexp_ident "make_args" (lambda/matching.ml[2114,69001+2]..[2114,69001+11])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2114,69001+12]..[2114,69001+13])
                                Pexp_constant PConst_int (0,None)
                          ]
    ]
  structure_item (lambda/matching.ml[2116,69016+0]..[2121,69150+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2116,69016+4]..[2116,69016+16])
          Ppat_var "divide_array" (lambda/matching.ml[2116,69016+4]..[2116,69016+16])
        expression (lambda/matching.ml[2116,69016+17]..[2121,69150+10]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[2116,69016+18]..[2116,69016+24])
            Ppat_var "scopes" (lambda/matching.ml[2116,69016+18]..[2116,69016+24])
          expression (lambda/matching.ml[2116,69016+25]..[2121,69150+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2116,69016+25]..[2116,69016+29])
              Ppat_var "kind" (lambda/matching.ml[2116,69016+25]..[2116,69016+29])
            expression (lambda/matching.ml[2116,69016+30]..[2121,69150+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2116,69016+30]..[2116,69016+33])
                Ppat_var "ctx" (lambda/matching.ml[2116,69016+30]..[2116,69016+33])
              expression (lambda/matching.ml[2116,69016+34]..[2121,69150+10]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2116,69016+34]..[2116,69016+36])
                  Ppat_var "pm" (lambda/matching.ml[2116,69016+34]..[2116,69016+36])
                expression (lambda/matching.ml[2117,69055+2]..[2121,69150+10])
                  Pexp_apply
                  expression (lambda/matching.ml[2117,69055+2]..[2117,69055+8])
                    Pexp_ident "divide" (lambda/matching.ml[2117,69055+2]..[2117,69055+8])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2118,69064+4]..[2118,69064+38])
                        Pexp_apply
                        expression (lambda/matching.ml[2118,69064+5]..[2118,69064+24])
                          Pexp_ident "get_expr_args_array" (lambda/matching.ml[2118,69064+5]..[2118,69064+24])
                        [
                          <arg>
                          Labelled "scopes"
                            expression (lambda/matching.ml[2118,69064+26]..[2118,69064+32])
                              Pexp_ident "scopes" (lambda/matching.ml[2118,69064+26]..[2118,69064+32])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2118,69064+33]..[2118,69064+37])
                              Pexp_ident "kind" (lambda/matching.ml[2118,69064+33]..[2118,69064+37])
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2119,69103+4]..[2119,69103+9])
                        Pexp_ident "=" (lambda/matching.ml[2119,69103+4]..[2119,69103+9])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2120,69113+4]..[2120,69113+17])
                        Pexp_ident "get_key_array" (lambda/matching.ml[2120,69113+4]..[2120,69113+17])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2120,69113+18]..[2120,69113+36])
                        Pexp_ident "get_pat_args_array" (lambda/matching.ml[2120,69113+18]..[2120,69113+36])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2121,69150+4]..[2121,69150+7])
                        Pexp_ident "ctx" (lambda/matching.ml[2121,69150+4]..[2121,69150+7])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2121,69150+8]..[2121,69150+10])
                        Pexp_ident "pm" (lambda/matching.ml[2121,69150+8]..[2121,69150+10])
                  ]
    ]
  structure_item (lambda/matching.ml[2137,69607+0]..[2137,69607+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2137,69607+4]..[2137,69607+26])
          Ppat_var "strings_test_threshold" (lambda/matching.ml[2137,69607+4]..[2137,69607+26])
        expression (lambda/matching.ml[2137,69607+29]..[2137,69607+30])
          Pexp_constant PConst_int (8,None)
    ]
  structure_item (lambda/matching.ml[2139,69639+0]..[2140,69666+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2139,69639+4]..[2139,69639+24])
          Ppat_var "prim_string_notequal" (lambda/matching.ml[2139,69639+4]..[2139,69639+24])
        expression (lambda/matching.ml[2140,69666+2]..[2140,69666+78])
          Pexp_construct "Pccall" (lambda/matching.ml[2140,69666+2]..[2140,69666+8])
          Some
            expression (lambda/matching.ml[2140,69666+9]..[2140,69666+78])
              Pexp_apply
              expression (lambda/matching.ml[2140,69666+10]..[2140,69666+26])
                Pexp_ident "Primitive.simple" (lambda/matching.ml[2140,69666+10]..[2140,69666+26])
              [
                <arg>
                Labelled "name"
                  expression (lambda/matching.ml[2140,69666+33]..[2140,69666+55])
                    Pexp_constant PConst_string("caml_string_notequal",(lambda/matching.ml[2140,69666+34]..[2140,69666+54]),None)
                <arg>
                Labelled "arity"
                  expression (lambda/matching.ml[2140,69666+63]..[2140,69666+64])
                    Pexp_constant PConst_int (2,None)
                <arg>
                Labelled "alloc"
                  expression (lambda/matching.ml[2140,69666+72]..[2140,69666+77])
                    Pexp_construct "false" (lambda/matching.ml[2140,69666+72]..[2140,69666+77])
                    None
              ]
    ]
  structure_item (lambda/matching.ml[2142,69746+0]..[2143,69772+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2142,69746+4]..[2142,69746+23])
          Ppat_var "prim_string_compare" (lambda/matching.ml[2142,69746+4]..[2142,69746+23])
        expression (lambda/matching.ml[2143,69772+2]..[2143,69772+77])
          Pexp_construct "Pccall" (lambda/matching.ml[2143,69772+2]..[2143,69772+8])
          Some
            expression (lambda/matching.ml[2143,69772+9]..[2143,69772+77])
              Pexp_apply
              expression (lambda/matching.ml[2143,69772+10]..[2143,69772+26])
                Pexp_ident "Primitive.simple" (lambda/matching.ml[2143,69772+10]..[2143,69772+26])
              [
                <arg>
                Labelled "name"
                  expression (lambda/matching.ml[2143,69772+33]..[2143,69772+54])
                    Pexp_constant PConst_string("caml_string_compare",(lambda/matching.ml[2143,69772+34]..[2143,69772+53]),None)
                <arg>
                Labelled "arity"
                  expression (lambda/matching.ml[2143,69772+62]..[2143,69772+63])
                    Pexp_constant PConst_int (2,None)
                <arg>
                Labelled "alloc"
                  expression (lambda/matching.ml[2143,69772+71]..[2143,69772+76])
                    Pexp_construct "false" (lambda/matching.ml[2143,69772+71]..[2143,69772+76])
                    None
              ]
    ]
  structure_item (lambda/matching.ml[2145,69851+0]..[2150,69963+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2145,69851+4]..[2145,69851+11])
          Ppat_var "bind_sw" (lambda/matching.ml[2145,69851+4]..[2145,69851+11])
        expression (lambda/matching.ml[2145,69851+12]..[2150,69963+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2145,69851+12]..[2145,69851+15])
            Ppat_var "arg" (lambda/matching.ml[2145,69851+12]..[2145,69851+15])
          expression (lambda/matching.ml[2145,69851+16]..[2150,69963+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2145,69851+16]..[2145,69851+17])
              Ppat_var "k" (lambda/matching.ml[2145,69851+16]..[2145,69851+17])
            expression (lambda/matching.ml[2146,69871+2]..[2150,69963+50])
              Pexp_match
              expression (lambda/matching.ml[2146,69871+8]..[2146,69871+11])
                Pexp_ident "arg" (lambda/matching.ml[2146,69871+8]..[2146,69871+11])
              [
                <case>
                  pattern (lambda/matching.ml[2147,69888+4]..[2147,69888+10])
                    Ppat_construct "Lvar" (lambda/matching.ml[2147,69888+4]..[2147,69888+8])
                    Some
                      []
                      pattern (lambda/matching.ml[2147,69888+9]..[2147,69888+10])
                        Ppat_any
                  expression (lambda/matching.ml[2147,69888+14]..[2147,69888+19])
                    Pexp_apply
                    expression (lambda/matching.ml[2147,69888+14]..[2147,69888+15])
                      Pexp_ident "k" (lambda/matching.ml[2147,69888+14]..[2147,69888+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2147,69888+16]..[2147,69888+19])
                          Pexp_ident "arg" (lambda/matching.ml[2147,69888+16]..[2147,69888+19])
                    ]
                <case>
                  pattern (lambda/matching.ml[2148,69908+4]..[2148,69908+5])
                    Ppat_any
                  expression (lambda/matching.ml[2149,69917+6]..[2150,69963+50])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2149,69917+10]..[2149,69917+12])
                          Ppat_var "id" (lambda/matching.ml[2149,69917+10]..[2149,69917+12])
                        expression (lambda/matching.ml[2149,69917+15]..[2149,69917+42])
                          Pexp_apply
                          expression (lambda/matching.ml[2149,69917+15]..[2149,69917+33])
                            Pexp_ident "Ident.create_local" (lambda/matching.ml[2149,69917+15]..[2149,69917+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2149,69917+34]..[2149,69917+42])
                                Pexp_constant PConst_string("switch",(lambda/matching.ml[2149,69917+35]..[2149,69917+41]),None)
                          ]
                    ]
                    expression (lambda/matching.ml[2150,69963+6]..[2150,69963+50])
                      Pexp_construct "Llet" (lambda/matching.ml[2150,69963+6]..[2150,69963+10])
                      Some
                        expression (lambda/matching.ml[2150,69963+11]..[2150,69963+50])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2150,69963+12]..[2150,69963+18])
                              Pexp_construct "Strict" (lambda/matching.ml[2150,69963+12]..[2150,69963+18])
                              None
                            expression (lambda/matching.ml[2150,69963+20]..[2150,69963+27])
                              Pexp_construct "Pgenval" (lambda/matching.ml[2150,69963+20]..[2150,69963+27])
                              None
                            expression (lambda/matching.ml[2150,69963+29]..[2150,69963+31])
                              Pexp_ident "id" (lambda/matching.ml[2150,69963+29]..[2150,69963+31])
                            expression (lambda/matching.ml[2150,69963+33]..[2150,69963+36])
                              Pexp_ident "arg" (lambda/matching.ml[2150,69963+33]..[2150,69963+36])
                            expression (lambda/matching.ml[2150,69963+38]..[2150,69963+49])
                              Pexp_apply
                              expression (lambda/matching.ml[2150,69963+38]..[2150,69963+39])
                                Pexp_ident "k" (lambda/matching.ml[2150,69963+38]..[2150,69963+39])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2150,69963+40]..[2150,69963+49])
                                    Pexp_construct "Lvar" (lambda/matching.ml[2150,69963+41]..[2150,69963+45])
                                    Some
                                      expression (lambda/matching.ml[2150,69963+46]..[2150,69963+48])
                                        Pexp_ident "id" (lambda/matching.ml[2150,69963+46]..[2150,69963+48])
                              ]
                          ]
              ]
    ]
  structure_item (lambda/matching.ml[2154,70048+0]..[2174,70541+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2154,70048+4]..[2154,70048+29])
          Ppat_var "make_string_test_sequence" (lambda/matching.ml[2154,70048+4]..[2154,70048+29])
        expression (lambda/matching.ml[2154,70048+30]..[2174,70541+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2154,70048+30]..[2154,70048+33])
            Ppat_var "loc" (lambda/matching.ml[2154,70048+30]..[2154,70048+33])
          expression (lambda/matching.ml[2154,70048+34]..[2174,70541+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2154,70048+34]..[2154,70048+37])
              Ppat_var "arg" (lambda/matching.ml[2154,70048+34]..[2154,70048+37])
            expression (lambda/matching.ml[2154,70048+38]..[2174,70541+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2154,70048+38]..[2154,70048+40])
                Ppat_var "sw" (lambda/matching.ml[2154,70048+38]..[2154,70048+40])
              expression (lambda/matching.ml[2154,70048+41]..[2174,70541+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2154,70048+41]..[2154,70048+42])
                  Ppat_var "d" (lambda/matching.ml[2154,70048+41]..[2154,70048+42])
                expression (lambda/matching.ml[2155,70093+2]..[2174,70541+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2155,70093+6]..[2155,70093+11])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2155,70093+6]..[2155,70093+7])
                            Ppat_var "d" (lambda/matching.ml[2155,70093+6]..[2155,70093+7])
                          pattern (lambda/matching.ml[2155,70093+9]..[2155,70093+11])
                            Ppat_var "sw" (lambda/matching.ml[2155,70093+9]..[2155,70093+11])
                        ]
                      expression (lambda/matching.ml[2156,70107+4]..[2162,70233+23])
                        Pexp_match
                        expression (lambda/matching.ml[2156,70107+10]..[2156,70107+11])
                          Pexp_ident "d" (lambda/matching.ml[2156,70107+10]..[2156,70107+11])
                        [
                          <case>
                            pattern (lambda/matching.ml[2157,70124+6]..[2157,70124+10])
                              Ppat_construct "None" (lambda/matching.ml[2157,70124+6]..[2157,70124+10])
                              None
                            expression (lambda/matching.ml[2157,70124+14]..[2161,70225+7])
                              Pexp_match
                              expression (lambda/matching.ml[2158,70140+14]..[2158,70140+16])
                                Pexp_ident "sw" (lambda/matching.ml[2158,70140+14]..[2158,70140+16])
                              [
                                <case>
                                  pattern (lambda/matching.ml[2159,70162+10]..[2159,70162+22])
                                    Ppat_construct "::" (lambda/matching.ml[2159,70162+17]..[2159,70162+19])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[2159,70162+10]..[2159,70162+22]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2159,70162+10]..[2159,70162+16])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2159,70162+11]..[2159,70162+12])
                                                Ppat_any
                                              pattern (lambda/matching.ml[2159,70162+14]..[2159,70162+15])
                                                Ppat_var "d" (lambda/matching.ml[2159,70162+14]..[2159,70162+15])
                                            ]
                                          pattern (lambda/matching.ml[2159,70162+20]..[2159,70162+22])
                                            Ppat_var "sw" (lambda/matching.ml[2159,70162+20]..[2159,70162+22])
                                        ]
                                  expression (lambda/matching.ml[2159,70162+26]..[2159,70162+33])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[2159,70162+27]..[2159,70162+28])
                                        Pexp_ident "d" (lambda/matching.ml[2159,70162+27]..[2159,70162+28])
                                      expression (lambda/matching.ml[2159,70162+30]..[2159,70162+32])
                                        Pexp_ident "sw" (lambda/matching.ml[2159,70162+30]..[2159,70162+32])
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[2160,70196+10]..[2160,70196+12])
                                    Ppat_construct "[]" (lambda/matching.ml[2160,70196+10]..[2160,70196+12])
                                    None
                                  expression (lambda/matching.ml[2160,70196+16]..[2160,70196+28])
                                    Pexp_assert
                                    expression (lambda/matching.ml[2160,70196+23]..[2160,70196+28])
                                      Pexp_construct "false" (lambda/matching.ml[2160,70196+23]..[2160,70196+28])
                                      None
                              ]
                          <case>
                            pattern (lambda/matching.ml[2162,70233+6]..[2162,70233+12])
                              Ppat_construct "Some" (lambda/matching.ml[2162,70233+6]..[2162,70233+10])
                              Some
                                []
                                pattern (lambda/matching.ml[2162,70233+11]..[2162,70233+12])
                                  Ppat_var "d" (lambda/matching.ml[2162,70233+11]..[2162,70233+12])
                            expression (lambda/matching.ml[2162,70233+16]..[2162,70233+23])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2162,70233+17]..[2162,70233+18])
                                  Pexp_ident "d" (lambda/matching.ml[2162,70233+17]..[2162,70233+18])
                                expression (lambda/matching.ml[2162,70233+20]..[2162,70233+22])
                                  Pexp_ident "sw" (lambda/matching.ml[2162,70233+20]..[2162,70233+22])
                              ]
                        ]
                  ]
                  expression (lambda/matching.ml[2164,70262+2]..[2174,70541+13])
                    Pexp_apply
                    expression (lambda/matching.ml[2164,70262+2]..[2164,70262+9])
                      Pexp_ident "bind_sw" (lambda/matching.ml[2164,70262+2]..[2164,70262+9])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2164,70262+10]..[2164,70262+13])
                          Pexp_ident "arg" (lambda/matching.ml[2164,70262+10]..[2164,70262+13])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2164,70262+14]..[2174,70541+13])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2164,70262+19]..[2164,70262+22])
                            Ppat_var "arg" (lambda/matching.ml[2164,70262+19]..[2164,70262+22])
                          expression (lambda/matching.ml[2165,70288+6]..[2174,70541+12])
                            Pexp_apply
                            expression (lambda/matching.ml[2165,70288+6]..[2165,70288+21])
                              Pexp_ident "List.fold_right" (lambda/matching.ml[2165,70288+6]..[2165,70288+21])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2166,70310+8]..[2173,70520+20])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[2166,70310+13]..[2166,70310+23])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2166,70310+14]..[2166,70310+17])
                                        Ppat_var "str" (lambda/matching.ml[2166,70310+14]..[2166,70310+17])
                                      pattern (lambda/matching.ml[2166,70310+19]..[2166,70310+22])
                                        Ppat_var "lam" (lambda/matching.ml[2166,70310+19]..[2166,70310+22])
                                    ]
                                  expression (lambda/matching.ml[2166,70310+24]..[2173,70520+19]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[2166,70310+24]..[2166,70310+25])
                                      Ppat_var "k" (lambda/matching.ml[2166,70310+24]..[2166,70310+25])
                                    expression (lambda/matching.ml[2167,70339+10]..[2173,70520+19])
                                      Pexp_construct "Lifthenelse" (lambda/matching.ml[2167,70339+10]..[2167,70339+21])
                                      Some
                                        expression (lambda/matching.ml[2168,70361+12]..[2173,70520+19])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2168,70361+14]..[2171,70478+23])
                                              Pexp_construct "Lprim" (lambda/matching.ml[2168,70361+14]..[2168,70361+19])
                                              Some
                                                expression (lambda/matching.ml[2169,70381+16]..[2171,70478+23])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[2169,70381+18]..[2169,70381+38])
                                                      Pexp_ident "prim_string_notequal" (lambda/matching.ml[2169,70381+18]..[2169,70381+38])
                                                    expression (lambda/matching.ml[2170,70421+18]..[2170,70421+55])
                                                      Pexp_construct "::" (lambda/matching.ml[2170,70421+20]..[2170,70421+55]) ghost
                                                      Some
                                                        expression (lambda/matching.ml[2170,70421+20]..[2170,70421+55]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2170,70421+20]..[2170,70421+23])
                                                              Pexp_ident "arg" (lambda/matching.ml[2170,70421+20]..[2170,70421+23])
                                                            expression (lambda/matching.ml[2170,70421+25]..[2170,70421+55]) ghost
                                                              Pexp_construct "::" (lambda/matching.ml[2170,70421+25]..[2170,70421+55]) ghost
                                                              Some
                                                                expression (lambda/matching.ml[2170,70421+25]..[2170,70421+55]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[2170,70421+25]..[2170,70421+53])
                                                                      Pexp_construct "Lconst" (lambda/matching.ml[2170,70421+25]..[2170,70421+31])
                                                                      Some
expression (lambda/matching.ml[2170,70421+32]..[2170,70421+53])
  Pexp_construct "Const_immstring" (lambda/matching.ml[2170,70421+33]..[2170,70421+48])
  Some
    expression (lambda/matching.ml[2170,70421+49]..[2170,70421+52])
      Pexp_ident "str" (lambda/matching.ml[2170,70421+49]..[2170,70421+52])
                                                                    expression (lambda/matching.ml[2170,70421+54]..[2170,70421+55]) ghost
                                                                      Pexp_construct "[]" (lambda/matching.ml[2170,70421+54]..[2170,70421+55]) ghost
                                                                      None
                                                                  ]
                                                          ]
                                                    expression (lambda/matching.ml[2171,70478+18]..[2171,70478+21])
                                                      Pexp_ident "loc" (lambda/matching.ml[2171,70478+18]..[2171,70478+21])
                                                  ]
                                            expression (lambda/matching.ml[2172,70503+14]..[2172,70503+15])
                                              Pexp_ident "k" (lambda/matching.ml[2172,70503+14]..[2172,70503+15])
                                            expression (lambda/matching.ml[2173,70520+14]..[2173,70520+17])
                                              Pexp_ident "lam" (lambda/matching.ml[2173,70520+14]..[2173,70520+17])
                                          ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2174,70541+8]..[2174,70541+10])
                                  Pexp_ident "sw" (lambda/matching.ml[2174,70541+8]..[2174,70541+10])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2174,70541+11]..[2174,70541+12])
                                  Pexp_ident "d" (lambda/matching.ml[2174,70541+11]..[2174,70541+12])
                            ]
                    ]
    ]
  structure_item (lambda/matching.ml[2176,70556+0]..[2184,70730+26])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2176,70556+8]..[2176,70556+13])
          Ppat_var "split" (lambda/matching.ml[2176,70556+8]..[2176,70556+13])
        expression (lambda/matching.ml[2176,70556+14]..[2184,70730+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2176,70556+14]..[2176,70556+15])
            Ppat_var "k" (lambda/matching.ml[2176,70556+14]..[2176,70556+15])
          expression (lambda/matching.ml[2176,70556+16]..[2184,70730+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2176,70556+16]..[2176,70556+18])
              Ppat_var "xs" (lambda/matching.ml[2176,70556+16]..[2176,70556+18])
            expression (lambda/matching.ml[2177,70577+2]..[2184,70730+26])
              Pexp_match
              expression (lambda/matching.ml[2177,70577+8]..[2177,70577+10])
                Pexp_ident "xs" (lambda/matching.ml[2177,70577+8]..[2177,70577+10])
              [
                <case>
                  pattern (lambda/matching.ml[2178,70593+4]..[2178,70593+6])
                    Ppat_construct "[]" (lambda/matching.ml[2178,70593+4]..[2178,70593+6])
                    None
                  expression (lambda/matching.ml[2178,70593+10]..[2178,70593+22])
                    Pexp_assert
                    expression (lambda/matching.ml[2178,70593+17]..[2178,70593+22])
                      Pexp_construct "false" (lambda/matching.ml[2178,70593+17]..[2178,70593+22])
                      None
                <case>
                  pattern (lambda/matching.ml[2179,70616+4]..[2179,70616+12])
                    Ppat_construct "::" (lambda/matching.ml[2179,70616+7]..[2179,70616+9])
                    Some
                      []
                      pattern (lambda/matching.ml[2179,70616+4]..[2179,70616+12]) ghost
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2179,70616+4]..[2179,70616+6])
                            Ppat_var "x0" (lambda/matching.ml[2179,70616+4]..[2179,70616+6])
                          pattern (lambda/matching.ml[2179,70616+10]..[2179,70616+12])
                            Ppat_var "xs" (lambda/matching.ml[2179,70616+10]..[2179,70616+12])
                        ]
                  expression (lambda/matching.ml[2180,70632+6]..[2184,70730+26])
                    Pexp_ifthenelse
                    expression (lambda/matching.ml[2180,70632+9]..[2180,70632+15])
                      Pexp_apply
                      expression (lambda/matching.ml[2180,70632+11]..[2180,70632+13])
                        Pexp_ident "<=" (lambda/matching.ml[2180,70632+11]..[2180,70632+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2180,70632+9]..[2180,70632+10])
                            Pexp_ident "k" (lambda/matching.ml[2180,70632+9]..[2180,70632+10])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2180,70632+14]..[2180,70632+15])
                            Pexp_constant PConst_int (1,None)
                      ]
                    expression (lambda/matching.ml[2181,70653+8]..[2181,70653+20])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[2181,70653+9]..[2181,70653+11])
                          Pexp_construct "[]" (lambda/matching.ml[2181,70653+9]..[2181,70653+11])
                          None
                        expression (lambda/matching.ml[2181,70653+13]..[2181,70653+15])
                          Pexp_ident "x0" (lambda/matching.ml[2181,70653+13]..[2181,70653+15])
                        expression (lambda/matching.ml[2181,70653+17]..[2181,70653+19])
                          Pexp_ident "xs" (lambda/matching.ml[2181,70653+17]..[2181,70653+19])
                      ]
                    Some
                      expression (lambda/matching.ml[2183,70685+8]..[2184,70730+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2183,70685+12]..[2183,70685+22])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2183,70685+12]..[2183,70685+14])
                                  Ppat_var "xs" (lambda/matching.ml[2183,70685+12]..[2183,70685+14])
                                pattern (lambda/matching.ml[2183,70685+16]..[2183,70685+18])
                                  Ppat_var "y0" (lambda/matching.ml[2183,70685+16]..[2183,70685+18])
                                pattern (lambda/matching.ml[2183,70685+20]..[2183,70685+22])
                                  Ppat_var "ys" (lambda/matching.ml[2183,70685+20]..[2183,70685+22])
                              ]
                            expression (lambda/matching.ml[2183,70685+25]..[2183,70685+41])
                              Pexp_apply
                              expression (lambda/matching.ml[2183,70685+25]..[2183,70685+30])
                                Pexp_ident "split" (lambda/matching.ml[2183,70685+25]..[2183,70685+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2183,70685+31]..[2183,70685+38])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2183,70685+34]..[2183,70685+35])
                                      Pexp_ident "-" (lambda/matching.ml[2183,70685+34]..[2183,70685+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2183,70685+32]..[2183,70685+33])
                                          Pexp_ident "k" (lambda/matching.ml[2183,70685+32]..[2183,70685+33])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2183,70685+36]..[2183,70685+37])
                                          Pexp_constant PConst_int (2,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2183,70685+39]..[2183,70685+41])
                                    Pexp_ident "xs" (lambda/matching.ml[2183,70685+39]..[2183,70685+41])
                              ]
                        ]
                        expression (lambda/matching.ml[2184,70730+8]..[2184,70730+26])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2184,70730+9]..[2184,70730+17])
                              Pexp_construct "::" (lambda/matching.ml[2184,70730+12]..[2184,70730+14])
                              Some
                                expression (lambda/matching.ml[2184,70730+9]..[2184,70730+17]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2184,70730+9]..[2184,70730+11])
                                      Pexp_ident "x0" (lambda/matching.ml[2184,70730+9]..[2184,70730+11])
                                    expression (lambda/matching.ml[2184,70730+15]..[2184,70730+17])
                                      Pexp_ident "xs" (lambda/matching.ml[2184,70730+15]..[2184,70730+17])
                                  ]
                            expression (lambda/matching.ml[2184,70730+19]..[2184,70730+21])
                              Pexp_ident "y0" (lambda/matching.ml[2184,70730+19]..[2184,70730+21])
                            expression (lambda/matching.ml[2184,70730+23]..[2184,70730+25])
                              Pexp_ident "ys" (lambda/matching.ml[2184,70730+23]..[2184,70730+25])
                          ]
              ]
    ]
  structure_item (lambda/matching.ml[2186,70758+0]..[2186,70758+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2186,70758+4]..[2186,70758+12])
          Ppat_var "zero_lam" (lambda/matching.ml[2186,70758+4]..[2186,70758+12])
        expression (lambda/matching.ml[2186,70758+15]..[2186,70758+48])
          Pexp_construct "Lconst" (lambda/matching.ml[2186,70758+15]..[2186,70758+21])
          Some
            expression (lambda/matching.ml[2186,70758+22]..[2186,70758+48])
              Pexp_construct "Const_base" (lambda/matching.ml[2186,70758+23]..[2186,70758+33])
              Some
                expression (lambda/matching.ml[2186,70758+34]..[2186,70758+47])
                  Pexp_construct "Const_int" (lambda/matching.ml[2186,70758+35]..[2186,70758+44])
                  Some
                    expression (lambda/matching.ml[2186,70758+45]..[2186,70758+46])
                      Pexp_constant PConst_int (0,None)
    ]
  structure_item (lambda/matching.ml[2188,70808+0]..[2192,70921+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2188,70808+4]..[2188,70808+17])
          Ppat_var "tree_way_test" (lambda/matching.ml[2188,70808+4]..[2188,70808+17])
        expression (lambda/matching.ml[2188,70808+18]..[2192,70921+74]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2188,70808+18]..[2188,70808+21])
            Ppat_var "loc" (lambda/matching.ml[2188,70808+18]..[2188,70808+21])
          expression (lambda/matching.ml[2188,70808+22]..[2192,70921+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2188,70808+22]..[2188,70808+25])
              Ppat_var "arg" (lambda/matching.ml[2188,70808+22]..[2188,70808+25])
            expression (lambda/matching.ml[2188,70808+26]..[2192,70921+74]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2188,70808+26]..[2188,70808+28])
                Ppat_var "lt" (lambda/matching.ml[2188,70808+26]..[2188,70808+28])
              expression (lambda/matching.ml[2188,70808+29]..[2192,70921+74]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2188,70808+29]..[2188,70808+31])
                  Ppat_var "eq" (lambda/matching.ml[2188,70808+29]..[2188,70808+31])
                expression (lambda/matching.ml[2188,70808+32]..[2192,70921+74]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2188,70808+32]..[2188,70808+34])
                    Ppat_var "gt" (lambda/matching.ml[2188,70808+32]..[2188,70808+34])
                  expression (lambda/matching.ml[2189,70845+2]..[2192,70921+74])
                    Pexp_construct "Lifthenelse" (lambda/matching.ml[2189,70845+2]..[2189,70845+13])
                    Some
                      expression (lambda/matching.ml[2190,70859+4]..[2192,70921+74])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[2190,70859+6]..[2190,70859+50])
                            Pexp_construct "Lprim" (lambda/matching.ml[2190,70859+6]..[2190,70859+11])
                            Some
                              expression (lambda/matching.ml[2190,70859+12]..[2190,70859+50])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2190,70859+13]..[2190,70859+25])
                                    Pexp_construct "Pintcomp" (lambda/matching.ml[2190,70859+13]..[2190,70859+21])
                                    Some
                                      expression (lambda/matching.ml[2190,70859+22]..[2190,70859+25])
                                        Pexp_construct "Clt" (lambda/matching.ml[2190,70859+22]..[2190,70859+25])
                                        None
                                  expression (lambda/matching.ml[2190,70859+27]..[2190,70859+44])
                                    Pexp_construct "::" (lambda/matching.ml[2190,70859+29]..[2190,70859+44]) ghost
                                    Some
                                      expression (lambda/matching.ml[2190,70859+29]..[2190,70859+44]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2190,70859+29]..[2190,70859+32])
                                            Pexp_ident "arg" (lambda/matching.ml[2190,70859+29]..[2190,70859+32])
                                          expression (lambda/matching.ml[2190,70859+34]..[2190,70859+44]) ghost
                                            Pexp_construct "::" (lambda/matching.ml[2190,70859+34]..[2190,70859+44]) ghost
                                            Some
                                              expression (lambda/matching.ml[2190,70859+34]..[2190,70859+44]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2190,70859+34]..[2190,70859+42])
                                                    Pexp_ident "zero_lam" (lambda/matching.ml[2190,70859+34]..[2190,70859+42])
                                                  expression (lambda/matching.ml[2190,70859+43]..[2190,70859+44]) ghost
                                                    Pexp_construct "[]" (lambda/matching.ml[2190,70859+43]..[2190,70859+44]) ghost
                                                    None
                                                ]
                                        ]
                                  expression (lambda/matching.ml[2190,70859+46]..[2190,70859+49])
                                    Pexp_ident "loc" (lambda/matching.ml[2190,70859+46]..[2190,70859+49])
                                ]
                          expression (lambda/matching.ml[2191,70911+6]..[2191,70911+8])
                            Pexp_ident "lt" (lambda/matching.ml[2191,70911+6]..[2191,70911+8])
                          expression (lambda/matching.ml[2192,70921+6]..[2192,70921+72])
                            Pexp_construct "Lifthenelse" (lambda/matching.ml[2192,70921+6]..[2192,70921+17])
                            Some
                              expression (lambda/matching.ml[2192,70921+18]..[2192,70921+72])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2192,70921+19]..[2192,70921+63])
                                    Pexp_construct "Lprim" (lambda/matching.ml[2192,70921+19]..[2192,70921+24])
                                    Some
                                      expression (lambda/matching.ml[2192,70921+25]..[2192,70921+63])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2192,70921+26]..[2192,70921+38])
                                            Pexp_construct "Pintcomp" (lambda/matching.ml[2192,70921+26]..[2192,70921+34])
                                            Some
                                              expression (lambda/matching.ml[2192,70921+35]..[2192,70921+38])
                                                Pexp_construct "Clt" (lambda/matching.ml[2192,70921+35]..[2192,70921+38])
                                                None
                                          expression (lambda/matching.ml[2192,70921+40]..[2192,70921+57])
                                            Pexp_construct "::" (lambda/matching.ml[2192,70921+42]..[2192,70921+57]) ghost
                                            Some
                                              expression (lambda/matching.ml[2192,70921+42]..[2192,70921+57]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2192,70921+42]..[2192,70921+50])
                                                    Pexp_ident "zero_lam" (lambda/matching.ml[2192,70921+42]..[2192,70921+50])
                                                  expression (lambda/matching.ml[2192,70921+52]..[2192,70921+57]) ghost
                                                    Pexp_construct "::" (lambda/matching.ml[2192,70921+52]..[2192,70921+57]) ghost
                                                    Some
                                                      expression (lambda/matching.ml[2192,70921+52]..[2192,70921+57]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2192,70921+52]..[2192,70921+55])
                                                            Pexp_ident "arg" (lambda/matching.ml[2192,70921+52]..[2192,70921+55])
                                                          expression (lambda/matching.ml[2192,70921+56]..[2192,70921+57]) ghost
                                                            Pexp_construct "[]" (lambda/matching.ml[2192,70921+56]..[2192,70921+57]) ghost
                                                            None
                                                        ]
                                                ]
                                          expression (lambda/matching.ml[2192,70921+59]..[2192,70921+62])
                                            Pexp_ident "loc" (lambda/matching.ml[2192,70921+59]..[2192,70921+62])
                                        ]
                                  expression (lambda/matching.ml[2192,70921+65]..[2192,70921+67])
                                    Pexp_ident "gt" (lambda/matching.ml[2192,70921+65]..[2192,70921+67])
                                  expression (lambda/matching.ml[2192,70921+69]..[2192,70921+71])
                                    Pexp_ident "eq" (lambda/matching.ml[2192,70921+69]..[2192,70921+71])
                                ]
                        ]
    ]
  structure_item (lambda/matching.ml[2196,71020+0]..[2208,71449+56])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2196,71020+8]..[2196,71020+32])
          Ppat_var "do_make_string_test_tree" (lambda/matching.ml[2196,71020+8]..[2196,71020+32])
        expression (lambda/matching.ml[2196,71020+33]..[2208,71449+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2196,71020+33]..[2196,71020+36])
            Ppat_var "loc" (lambda/matching.ml[2196,71020+33]..[2196,71020+36])
          expression (lambda/matching.ml[2196,71020+37]..[2208,71449+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2196,71020+37]..[2196,71020+40])
              Ppat_var "arg" (lambda/matching.ml[2196,71020+37]..[2196,71020+40])
            expression (lambda/matching.ml[2196,71020+41]..[2208,71449+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2196,71020+41]..[2196,71020+43])
                Ppat_var "sw" (lambda/matching.ml[2196,71020+41]..[2196,71020+43])
              expression (lambda/matching.ml[2196,71020+44]..[2208,71449+56]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2196,71020+44]..[2196,71020+49])
                  Ppat_var "delta" (lambda/matching.ml[2196,71020+44]..[2196,71020+49])
                expression (lambda/matching.ml[2196,71020+50]..[2208,71449+56]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2196,71020+50]..[2196,71020+51])
                    Ppat_var "d" (lambda/matching.ml[2196,71020+50]..[2196,71020+51])
                  expression (lambda/matching.ml[2197,71074+2]..[2208,71449+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2197,71074+6]..[2197,71074+9])
                          Ppat_var "len" (lambda/matching.ml[2197,71074+6]..[2197,71074+9])
                        expression (lambda/matching.ml[2197,71074+12]..[2197,71074+26])
                          Pexp_apply
                          expression (lambda/matching.ml[2197,71074+12]..[2197,71074+23])
                            Pexp_ident "List.length" (lambda/matching.ml[2197,71074+12]..[2197,71074+23])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2197,71074+24]..[2197,71074+26])
                                Pexp_ident "sw" (lambda/matching.ml[2197,71074+24]..[2197,71074+26])
                          ]
                    ]
                    expression (lambda/matching.ml[2198,71104+2]..[2208,71449+56])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[2198,71104+5]..[2198,71104+42])
                        Pexp_apply
                        expression (lambda/matching.ml[2198,71104+9]..[2198,71104+11])
                          Pexp_ident "<=" (lambda/matching.ml[2198,71104+9]..[2198,71104+11])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2198,71104+5]..[2198,71104+8])
                              Pexp_ident "len" (lambda/matching.ml[2198,71104+5]..[2198,71104+8])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2198,71104+12]..[2198,71104+42])
                              Pexp_apply
                              expression (lambda/matching.ml[2198,71104+35]..[2198,71104+36])
                                Pexp_ident "+" (lambda/matching.ml[2198,71104+35]..[2198,71104+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2198,71104+12]..[2198,71104+34])
                                    Pexp_ident "strings_test_threshold" (lambda/matching.ml[2198,71104+12]..[2198,71104+34])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2198,71104+37]..[2198,71104+42])
                                    Pexp_ident "delta" (lambda/matching.ml[2198,71104+37]..[2198,71104+42])
                              ]
                        ]
                      expression (lambda/matching.ml[2199,71152+4]..[2199,71152+42])
                        Pexp_apply
                        expression (lambda/matching.ml[2199,71152+4]..[2199,71152+29])
                          Pexp_ident "make_string_test_sequence" (lambda/matching.ml[2199,71152+4]..[2199,71152+29])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2199,71152+30]..[2199,71152+33])
                              Pexp_ident "loc" (lambda/matching.ml[2199,71152+30]..[2199,71152+33])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2199,71152+34]..[2199,71152+37])
                              Pexp_ident "arg" (lambda/matching.ml[2199,71152+34]..[2199,71152+37])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2199,71152+38]..[2199,71152+40])
                              Pexp_ident "sw" (lambda/matching.ml[2199,71152+38]..[2199,71152+40])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2199,71152+41]..[2199,71152+42])
                              Pexp_ident "d" (lambda/matching.ml[2199,71152+41]..[2199,71152+42])
                        ]
                      Some
                        expression (lambda/matching.ml[2201,71202+4]..[2208,71449+56])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2201,71202+8]..[2201,71202+24])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2201,71202+8]..[2201,71202+10])
                                    Ppat_var "lt" (lambda/matching.ml[2201,71202+8]..[2201,71202+10])
                                  pattern (lambda/matching.ml[2201,71202+12]..[2201,71202+20])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2201,71202+13]..[2201,71202+14])
                                        Ppat_var "s" (lambda/matching.ml[2201,71202+13]..[2201,71202+14])
                                      pattern (lambda/matching.ml[2201,71202+16]..[2201,71202+19])
                                        Ppat_var "act" (lambda/matching.ml[2201,71202+16]..[2201,71202+19])
                                    ]
                                  pattern (lambda/matching.ml[2201,71202+22]..[2201,71202+24])
                                    Ppat_var "gt" (lambda/matching.ml[2201,71202+22]..[2201,71202+24])
                                ]
                              expression (lambda/matching.ml[2201,71202+27]..[2201,71202+39])
                                Pexp_apply
                                expression (lambda/matching.ml[2201,71202+27]..[2201,71202+32])
                                  Pexp_ident "split" (lambda/matching.ml[2201,71202+27]..[2201,71202+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2201,71202+33]..[2201,71202+36])
                                      Pexp_ident "len" (lambda/matching.ml[2201,71202+33]..[2201,71202+36])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2201,71202+37]..[2201,71202+39])
                                      Pexp_ident "sw" (lambda/matching.ml[2201,71202+37]..[2201,71202+39])
                                ]
                          ]
                          expression (lambda/matching.ml[2202,71245+4]..[2208,71449+56])
                            Pexp_apply
                            expression (lambda/matching.ml[2202,71245+4]..[2202,71245+11])
                              Pexp_ident "bind_sw" (lambda/matching.ml[2202,71245+4]..[2202,71245+11])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2203,71257+6]..[2203,71257+77])
                                  Pexp_construct "Lprim" (lambda/matching.ml[2203,71257+7]..[2203,71257+12])
                                  Some
                                    expression (lambda/matching.ml[2203,71257+13]..[2203,71257+76])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[2203,71257+14]..[2203,71257+33])
                                          Pexp_ident "prim_string_compare" (lambda/matching.ml[2203,71257+14]..[2203,71257+33])
                                        expression (lambda/matching.ml[2203,71257+35]..[2203,71257+70])
                                          Pexp_construct "::" (lambda/matching.ml[2203,71257+37]..[2203,71257+70]) ghost
                                          Some
                                            expression (lambda/matching.ml[2203,71257+37]..[2203,71257+70]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2203,71257+37]..[2203,71257+40])
                                                  Pexp_ident "arg" (lambda/matching.ml[2203,71257+37]..[2203,71257+40])
                                                expression (lambda/matching.ml[2203,71257+42]..[2203,71257+70]) ghost
                                                  Pexp_construct "::" (lambda/matching.ml[2203,71257+42]..[2203,71257+70]) ghost
                                                  Some
                                                    expression (lambda/matching.ml[2203,71257+42]..[2203,71257+70]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2203,71257+42]..[2203,71257+68])
                                                          Pexp_construct "Lconst" (lambda/matching.ml[2203,71257+42]..[2203,71257+48])
                                                          Some
                                                            expression (lambda/matching.ml[2203,71257+49]..[2203,71257+68])
                                                              Pexp_construct "Const_immstring" (lambda/matching.ml[2203,71257+50]..[2203,71257+65])
                                                              Some
                                                                expression (lambda/matching.ml[2203,71257+66]..[2203,71257+67])
                                                                  Pexp_ident "s" (lambda/matching.ml[2203,71257+66]..[2203,71257+67])
                                                        expression (lambda/matching.ml[2203,71257+69]..[2203,71257+70]) ghost
                                                          Pexp_construct "[]" (lambda/matching.ml[2203,71257+69]..[2203,71257+70]) ghost
                                                          None
                                                      ]
                                              ]
                                        expression (lambda/matching.ml[2203,71257+72]..[2203,71257+75])
                                          Pexp_ident "loc" (lambda/matching.ml[2203,71257+72]..[2203,71257+75])
                                      ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2204,71335+6]..[2208,71449+56])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[2204,71335+11]..[2204,71335+12])
                                    Ppat_var "r" (lambda/matching.ml[2204,71335+11]..[2204,71335+12])
                                  expression (lambda/matching.ml[2205,71351+8]..[2208,71449+55])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2205,71351+8]..[2205,71351+21])
                                      Pexp_ident "tree_way_test" (lambda/matching.ml[2205,71351+8]..[2205,71351+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2205,71351+22]..[2205,71351+25])
                                          Pexp_ident "loc" (lambda/matching.ml[2205,71351+22]..[2205,71351+25])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2205,71351+26]..[2205,71351+27])
                                          Pexp_ident "r" (lambda/matching.ml[2205,71351+26]..[2205,71351+27])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2206,71379+10]..[2206,71379+55])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2206,71379+11]..[2206,71379+35])
                                            Pexp_ident "do_make_string_test_tree" (lambda/matching.ml[2206,71379+11]..[2206,71379+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2206,71379+36]..[2206,71379+39])
                                                Pexp_ident "loc" (lambda/matching.ml[2206,71379+36]..[2206,71379+39])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2206,71379+40]..[2206,71379+43])
                                                Pexp_ident "arg" (lambda/matching.ml[2206,71379+40]..[2206,71379+43])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2206,71379+44]..[2206,71379+46])
                                                Pexp_ident "lt" (lambda/matching.ml[2206,71379+44]..[2206,71379+46])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2206,71379+47]..[2206,71379+52])
                                                Pexp_ident "delta" (lambda/matching.ml[2206,71379+47]..[2206,71379+52])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2206,71379+53]..[2206,71379+54])
                                                Pexp_ident "d" (lambda/matching.ml[2206,71379+53]..[2206,71379+54])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2207,71435+10]..[2207,71435+13])
                                          Pexp_ident "act" (lambda/matching.ml[2207,71435+10]..[2207,71435+13])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2208,71449+10]..[2208,71449+55])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2208,71449+11]..[2208,71449+35])
                                            Pexp_ident "do_make_string_test_tree" (lambda/matching.ml[2208,71449+11]..[2208,71449+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2208,71449+36]..[2208,71449+39])
                                                Pexp_ident "loc" (lambda/matching.ml[2208,71449+36]..[2208,71449+39])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2208,71449+40]..[2208,71449+43])
                                                Pexp_ident "arg" (lambda/matching.ml[2208,71449+40]..[2208,71449+43])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2208,71449+44]..[2208,71449+46])
                                                Pexp_ident "gt" (lambda/matching.ml[2208,71449+44]..[2208,71449+46])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2208,71449+47]..[2208,71449+52])
                                                Pexp_ident "delta" (lambda/matching.ml[2208,71449+47]..[2208,71449+52])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2208,71449+53]..[2208,71449+54])
                                                Pexp_ident "d" (lambda/matching.ml[2208,71449+53]..[2208,71449+54])
                                          ]
                                    ]
                            ]
    ]
  structure_item (lambda/matching.ml[2211,71525+0]..[2217,71736+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2211,71525+4]..[2211,71525+23])
          Ppat_var "expand_stringswitch" (lambda/matching.ml[2211,71525+4]..[2211,71525+23])
        expression (lambda/matching.ml[2211,71525+24]..[2217,71736+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2211,71525+24]..[2211,71525+27])
            Ppat_var "loc" (lambda/matching.ml[2211,71525+24]..[2211,71525+27])
          expression (lambda/matching.ml[2211,71525+28]..[2217,71736+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2211,71525+28]..[2211,71525+31])
              Ppat_var "arg" (lambda/matching.ml[2211,71525+28]..[2211,71525+31])
            expression (lambda/matching.ml[2211,71525+32]..[2217,71736+62]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2211,71525+32]..[2211,71525+34])
                Ppat_var "sw" (lambda/matching.ml[2211,71525+32]..[2211,71525+34])
              expression (lambda/matching.ml[2211,71525+35]..[2217,71736+62]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2211,71525+35]..[2211,71525+36])
                  Ppat_var "d" (lambda/matching.ml[2211,71525+35]..[2211,71525+36])
                expression (lambda/matching.ml[2212,71564+2]..[2217,71736+62])
                  Pexp_match
                  expression (lambda/matching.ml[2212,71564+8]..[2212,71564+9])
                    Pexp_ident "d" (lambda/matching.ml[2212,71564+8]..[2212,71564+9])
                  [
                    <case>
                      pattern (lambda/matching.ml[2213,71579+4]..[2213,71579+8])
                        Ppat_construct "None" (lambda/matching.ml[2213,71579+4]..[2213,71579+8])
                        None
                      expression (lambda/matching.ml[2213,71579+12]..[2213,71579+79])
                        Pexp_apply
                        expression (lambda/matching.ml[2213,71579+12]..[2213,71579+19])
                          Pexp_ident "bind_sw" (lambda/matching.ml[2213,71579+12]..[2213,71579+19])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2213,71579+20]..[2213,71579+23])
                              Pexp_ident "arg" (lambda/matching.ml[2213,71579+20]..[2213,71579+23])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2213,71579+24]..[2213,71579+79])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2213,71579+29]..[2213,71579+32])
                                Ppat_var "arg" (lambda/matching.ml[2213,71579+29]..[2213,71579+32])
                              expression (lambda/matching.ml[2213,71579+36]..[2213,71579+78])
                                Pexp_apply
                                expression (lambda/matching.ml[2213,71579+36]..[2213,71579+60])
                                  Pexp_ident "do_make_string_test_tree" (lambda/matching.ml[2213,71579+36]..[2213,71579+60])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2213,71579+61]..[2213,71579+64])
                                      Pexp_ident "loc" (lambda/matching.ml[2213,71579+61]..[2213,71579+64])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2213,71579+65]..[2213,71579+68])
                                      Pexp_ident "arg" (lambda/matching.ml[2213,71579+65]..[2213,71579+68])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2213,71579+69]..[2213,71579+71])
                                      Pexp_ident "sw" (lambda/matching.ml[2213,71579+69]..[2213,71579+71])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2213,71579+72]..[2213,71579+73])
                                      Pexp_constant PConst_int (0,None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2213,71579+74]..[2213,71579+78])
                                      Pexp_construct "None" (lambda/matching.ml[2213,71579+74]..[2213,71579+78])
                                      None
                                ]
                        ]
                    <case>
                      pattern (lambda/matching.ml[2214,71659+4]..[2214,71659+10])
                        Ppat_construct "Some" (lambda/matching.ml[2214,71659+4]..[2214,71659+8])
                        Some
                          []
                          pattern (lambda/matching.ml[2214,71659+9]..[2214,71659+10])
                            Ppat_var "e" (lambda/matching.ml[2214,71659+9]..[2214,71659+10])
                      expression (lambda/matching.ml[2215,71673+6]..[2217,71736+62])
                        Pexp_apply
                        expression (lambda/matching.ml[2215,71673+6]..[2215,71673+13])
                          Pexp_ident "bind_sw" (lambda/matching.ml[2215,71673+6]..[2215,71673+13])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2215,71673+14]..[2215,71673+17])
                              Pexp_ident "arg" (lambda/matching.ml[2215,71673+14]..[2215,71673+17])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2215,71673+18]..[2217,71736+62])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2215,71673+23]..[2215,71673+26])
                                Ppat_var "arg" (lambda/matching.ml[2215,71673+23]..[2215,71673+26])
                              expression (lambda/matching.ml[2216,71703+10]..[2217,71736+61])
                                Pexp_apply
                                expression (lambda/matching.ml[2216,71703+10]..[2216,71703+20])
                                  Pexp_ident "make_catch" (lambda/matching.ml[2216,71703+10]..[2216,71703+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2216,71703+21]..[2216,71703+22])
                                      Pexp_ident "e" (lambda/matching.ml[2216,71703+21]..[2216,71703+22])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2216,71703+23]..[2217,71736+61])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[2216,71703+28]..[2216,71703+29])
                                        Ppat_var "d" (lambda/matching.ml[2216,71703+28]..[2216,71703+29])
                                      expression (lambda/matching.ml[2217,71736+14]..[2217,71736+60])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2217,71736+14]..[2217,71736+38])
                                          Pexp_ident "do_make_string_test_tree" (lambda/matching.ml[2217,71736+14]..[2217,71736+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2217,71736+39]..[2217,71736+42])
                                              Pexp_ident "loc" (lambda/matching.ml[2217,71736+39]..[2217,71736+42])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2217,71736+43]..[2217,71736+46])
                                              Pexp_ident "arg" (lambda/matching.ml[2217,71736+43]..[2217,71736+46])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2217,71736+47]..[2217,71736+49])
                                              Pexp_ident "sw" (lambda/matching.ml[2217,71736+47]..[2217,71736+49])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2217,71736+50]..[2217,71736+51])
                                              Pexp_constant PConst_int (1,None)
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2217,71736+52]..[2217,71736+60])
                                              Pexp_construct "Some" (lambda/matching.ml[2217,71736+53]..[2217,71736+57])
                                              Some
                                                expression (lambda/matching.ml[2217,71736+58]..[2217,71736+59])
                                                  Pexp_ident "d" (lambda/matching.ml[2217,71736+58]..[2217,71736+59])
                                        ]
                                ]
                        ]
                  ]
    ]
  structure_item (lambda/matching.ml[2226,71920+0]..[2237,72212+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2226,71920+4]..[2226,71920+17])
          Ppat_var "handle_shared" (lambda/matching.ml[2226,71920+4]..[2226,71920+17])
        expression (lambda/matching.ml[2226,71920+18]..[2237,72212+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2226,71920+18]..[2226,71920+20])
            Ppat_construct "()" (lambda/matching.ml[2226,71920+18]..[2226,71920+20])
            None
          expression (lambda/matching.ml[2227,71943+2]..[2237,72212+21])
            Pexp_let Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2227,71943+6]..[2227,71943+8])
                  Ppat_var "hs" (lambda/matching.ml[2227,71943+6]..[2227,71943+8])
                expression (lambda/matching.ml[2227,71943+11]..[2227,71943+27])
                  Pexp_apply
                  expression (lambda/matching.ml[2227,71943+11]..[2227,71943+14])
                    Pexp_ident "ref" (lambda/matching.ml[2227,71943+11]..[2227,71943+14])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2227,71943+15]..[2227,71943+27])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2227,71943+20]..[2227,71943+21])
                          Ppat_var "x" (lambda/matching.ml[2227,71943+20]..[2227,71943+21])
                        expression (lambda/matching.ml[2227,71943+25]..[2227,71943+26])
                          Pexp_ident "x" (lambda/matching.ml[2227,71943+25]..[2227,71943+26])
                  ]
            ]
            expression (lambda/matching.ml[2228,71974+2]..[2237,72212+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[2228,71974+6]..[2228,71974+19])
                    Ppat_var "handle_shared" (lambda/matching.ml[2228,71974+6]..[2228,71974+19])
                  expression (lambda/matching.ml[2228,71974+20]..[2235,72187+19]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2228,71974+20]..[2228,71974+23])
                      Ppat_var "act" (lambda/matching.ml[2228,71974+20]..[2228,71974+23])
                    expression (lambda/matching.ml[2229,72000+4]..[2235,72187+19])
                      Pexp_match
                      expression (lambda/matching.ml[2229,72000+10]..[2229,72000+13])
                        Pexp_ident "act" (lambda/matching.ml[2229,72000+10]..[2229,72000+13])
                      [
                        <case>
                          pattern (lambda/matching.ml[2230,72019+6]..[2230,72019+23])
                            Ppat_construct "Switch.Single" (lambda/matching.ml[2230,72019+6]..[2230,72019+19])
                            Some
                              []
                              pattern (lambda/matching.ml[2230,72019+20]..[2230,72019+23])
                                Ppat_var "act" (lambda/matching.ml[2230,72019+20]..[2230,72019+23])
                          expression (lambda/matching.ml[2230,72019+27]..[2230,72019+30])
                            Pexp_ident "act" (lambda/matching.ml[2230,72019+27]..[2230,72019+30])
                        <case>
                          pattern (lambda/matching.ml[2231,72050+6]..[2231,72050+23])
                            Ppat_construct "Switch.Shared" (lambda/matching.ml[2231,72050+6]..[2231,72050+19])
                            Some
                              []
                              pattern (lambda/matching.ml[2231,72050+20]..[2231,72050+23])
                                Ppat_var "act" (lambda/matching.ml[2231,72050+20]..[2231,72050+23])
                          expression (lambda/matching.ml[2232,72077+8]..[2235,72187+19])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[2232,72077+12]..[2232,72077+16])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[2232,72077+12]..[2232,72077+13])
                                      Ppat_var "i" (lambda/matching.ml[2232,72077+12]..[2232,72077+13])
                                    pattern (lambda/matching.ml[2232,72077+15]..[2232,72077+16])
                                      Ppat_var "h" (lambda/matching.ml[2232,72077+15]..[2232,72077+16])
                                  ]
                                expression (lambda/matching.ml[2232,72077+19]..[2232,72077+41])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2232,72077+19]..[2232,72077+37])
                                    Pexp_ident "make_catch_delayed" (lambda/matching.ml[2232,72077+19]..[2232,72077+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2232,72077+38]..[2232,72077+41])
                                        Pexp_ident "act" (lambda/matching.ml[2232,72077+38]..[2232,72077+41])
                                  ]
                            ]
                            expression (lambda/matching.ml[2233,72122+8]..[2235,72187+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[2233,72122+12]..[2233,72122+15])
                                    Ppat_var "ohs" (lambda/matching.ml[2233,72122+12]..[2233,72122+15])
                                  expression (lambda/matching.ml[2233,72122+18]..[2233,72122+21])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2233,72122+18]..[2233,72122+19])
                                      Pexp_ident "!" (lambda/matching.ml[2233,72122+18]..[2233,72122+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2233,72122+19]..[2233,72122+21])
                                          Pexp_ident "hs" (lambda/matching.ml[2233,72122+19]..[2233,72122+21])
                                    ]
                              ]
                              expression (lambda/matching.ml[2234,72147+8]..[2235,72187+19])
                                Pexp_sequence
                                expression (lambda/matching.ml[2234,72147+8]..[2234,72147+38])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2234,72147+12]..[2234,72147+14])
                                    Pexp_ident ":=" (lambda/matching.ml[2234,72147+12]..[2234,72147+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2234,72147+9]..[2234,72147+11])
                                        Pexp_ident "hs" (lambda/matching.ml[2234,72147+9]..[2234,72147+11])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2234,72147+15]..[2234,72147+37])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[2234,72147+19]..[2234,72147+22])
                                          Ppat_var "act" (lambda/matching.ml[2234,72147+19]..[2234,72147+22])
                                        expression (lambda/matching.ml[2234,72147+26]..[2234,72147+37])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2234,72147+26]..[2234,72147+27])
                                            Pexp_ident "h" (lambda/matching.ml[2234,72147+26]..[2234,72147+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2234,72147+28]..[2234,72147+37])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2234,72147+29]..[2234,72147+32])
                                                  Pexp_ident "ohs" (lambda/matching.ml[2234,72147+29]..[2234,72147+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2234,72147+33]..[2234,72147+36])
                                                      Pexp_ident "act" (lambda/matching.ml[2234,72147+33]..[2234,72147+36])
                                                ]
                                          ]
                                  ]
                                expression (lambda/matching.ml[2235,72187+8]..[2235,72187+19])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2235,72187+8]..[2235,72187+17])
                                    Pexp_ident "make_exit" (lambda/matching.ml[2235,72187+8]..[2235,72187+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2235,72187+18]..[2235,72187+19])
                                        Pexp_ident "i" (lambda/matching.ml[2235,72187+18]..[2235,72187+19])
                                  ]
                      ]
              ]
              expression (lambda/matching.ml[2237,72212+2]..[2237,72212+21])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[2237,72212+3]..[2237,72212+5])
                    Pexp_ident "hs" (lambda/matching.ml[2237,72212+3]..[2237,72212+5])
                  expression (lambda/matching.ml[2237,72212+7]..[2237,72212+20])
                    Pexp_ident "handle_shared" (lambda/matching.ml[2237,72212+7]..[2237,72212+20])
                ]
    ]
  structure_item (lambda/matching.ml[2239,72235+0]..[2263,72986+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2239,72235+4]..[2239,72235+22])
          Ppat_var "share_actions_tree" (lambda/matching.ml[2239,72235+4]..[2239,72235+22])
        expression (lambda/matching.ml[2239,72235+23]..[2263,72986+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2239,72235+23]..[2239,72235+25])
            Ppat_var "sw" (lambda/matching.ml[2239,72235+23]..[2239,72235+25])
          expression (lambda/matching.ml[2239,72235+26]..[2263,72986+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2239,72235+26]..[2239,72235+27])
              Ppat_var "d" (lambda/matching.ml[2239,72235+26]..[2239,72235+27])
            expression (lambda/matching.ml[2240,72265+2]..[2263,72986+14])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[2240,72265+6]..[2240,72265+11])
                    Ppat_var "store" (lambda/matching.ml[2240,72265+6]..[2240,72265+11])
                  expression (lambda/matching.ml[2240,72265+14]..[2240,72265+34])
                    Pexp_apply
                    expression (lambda/matching.ml[2240,72265+14]..[2240,72265+31])
                      Pexp_ident "StoreExp.mk_store" (lambda/matching.ml[2240,72265+14]..[2240,72265+31])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2240,72265+32]..[2240,72265+34])
                          Pexp_construct "()" (lambda/matching.ml[2240,72265+32]..[2240,72265+34])
                          None
                    ]
              ]
              expression (lambda/matching.ml[2242,72343+2]..[2263,72986+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[2242,72343+6]..[2242,72343+7])
                      Ppat_var "d" (lambda/matching.ml[2242,72343+6]..[2242,72343+7])
                    expression (lambda/matching.ml[2243,72353+4]..[2245,72389+57])
                      Pexp_match
                      expression (lambda/matching.ml[2243,72353+10]..[2243,72353+11])
                        Pexp_ident "d" (lambda/matching.ml[2243,72353+10]..[2243,72353+11])
                      [
                        <case>
                          pattern (lambda/matching.ml[2244,72370+6]..[2244,72370+10])
                            Ppat_construct "None" (lambda/matching.ml[2244,72370+6]..[2244,72370+10])
                            None
                          expression (lambda/matching.ml[2244,72370+14]..[2244,72370+18])
                            Pexp_construct "None" (lambda/matching.ml[2244,72370+14]..[2244,72370+18])
                            None
                        <case>
                          pattern (lambda/matching.ml[2245,72389+6]..[2245,72389+12])
                            Ppat_construct "Some" (lambda/matching.ml[2245,72389+6]..[2245,72389+10])
                            Some
                              []
                              pattern (lambda/matching.ml[2245,72389+11]..[2245,72389+12])
                                Ppat_var "d" (lambda/matching.ml[2245,72389+11]..[2245,72389+12])
                          expression (lambda/matching.ml[2245,72389+16]..[2245,72389+57])
                            Pexp_construct "Some" (lambda/matching.ml[2245,72389+16]..[2245,72389+20])
                            Some
                              expression (lambda/matching.ml[2245,72389+21]..[2245,72389+57])
                                Pexp_apply
                                expression (lambda/matching.ml[2245,72389+22]..[2245,72389+51])
                                  Pexp_field
                                  expression (lambda/matching.ml[2245,72389+22]..[2245,72389+27])
                                    Pexp_ident "store" (lambda/matching.ml[2245,72389+22]..[2245,72389+27])
                                  "Switch.act_store_shared" (lambda/matching.ml[2245,72389+28]..[2245,72389+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2245,72389+52]..[2245,72389+54])
                                      Pexp_construct "()" (lambda/matching.ml[2245,72389+52]..[2245,72389+54])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2245,72389+55]..[2245,72389+56])
                                      Pexp_ident "d" (lambda/matching.ml[2245,72389+55]..[2245,72389+56])
                                ]
                      ]
                ]
                expression (lambda/matching.ml[2248,72484+2]..[2263,72986+14])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2248,72484+6]..[2248,72484+8])
                        Ppat_var "sw" (lambda/matching.ml[2248,72484+6]..[2248,72484+8])
                      expression (lambda/matching.ml[2249,72495+4]..[2249,72495+72])
                        Pexp_apply
                        expression (lambda/matching.ml[2249,72495+4]..[2249,72495+12])
                          Pexp_ident "List.map" (lambda/matching.ml[2249,72495+4]..[2249,72495+12])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2249,72495+13]..[2249,72495+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2249,72495+18]..[2249,72495+28])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2249,72495+19]..[2249,72495+22])
                                    Ppat_var "cst" (lambda/matching.ml[2249,72495+19]..[2249,72495+22])
                                  pattern (lambda/matching.ml[2249,72495+24]..[2249,72495+27])
                                    Ppat_var "act" (lambda/matching.ml[2249,72495+24]..[2249,72495+27])
                                ]
                              expression (lambda/matching.ml[2249,72495+32]..[2249,72495+68])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2249,72495+33]..[2249,72495+36])
                                    Pexp_ident "cst" (lambda/matching.ml[2249,72495+33]..[2249,72495+36])
                                  expression (lambda/matching.ml[2249,72495+38]..[2249,72495+67])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2249,72495+38]..[2249,72495+60])
                                      Pexp_field
                                      expression (lambda/matching.ml[2249,72495+38]..[2249,72495+43])
                                        Pexp_ident "store" (lambda/matching.ml[2249,72495+38]..[2249,72495+43])
                                      "Switch.act_store" (lambda/matching.ml[2249,72495+44]..[2249,72495+60])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2249,72495+61]..[2249,72495+63])
                                          Pexp_construct "()" (lambda/matching.ml[2249,72495+61]..[2249,72495+63])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2249,72495+64]..[2249,72495+67])
                                          Pexp_ident "act" (lambda/matching.ml[2249,72495+64]..[2249,72495+67])
                                    ]
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2249,72495+70]..[2249,72495+72])
                              Pexp_ident "sw" (lambda/matching.ml[2249,72495+70]..[2249,72495+72])
                        ]
                  ]
                  expression (lambda/matching.ml[2252,72631+2]..[2263,72986+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2252,72631+6]..[2252,72631+10])
                          Ppat_var "acts" (lambda/matching.ml[2252,72631+6]..[2252,72631+10])
                        expression (lambda/matching.ml[2252,72631+13]..[2252,72631+43])
                          Pexp_apply
                          expression (lambda/matching.ml[2252,72631+13]..[2252,72631+40])
                            Pexp_field
                            expression (lambda/matching.ml[2252,72631+13]..[2252,72631+18])
                              Pexp_ident "store" (lambda/matching.ml[2252,72631+13]..[2252,72631+18])
                            "Switch.act_get_shared" (lambda/matching.ml[2252,72631+19]..[2252,72631+40])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2252,72631+41]..[2252,72631+43])
                                Pexp_construct "()" (lambda/matching.ml[2252,72631+41]..[2252,72631+43])
                                None
                          ]
                    ]
                    expression (lambda/matching.ml[2254,72710+2]..[2263,72986+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2254,72710+6]..[2254,72710+23])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2254,72710+6]..[2254,72710+8])
                                Ppat_var "hs" (lambda/matching.ml[2254,72710+6]..[2254,72710+8])
                              pattern (lambda/matching.ml[2254,72710+10]..[2254,72710+23])
                                Ppat_var "handle_shared" (lambda/matching.ml[2254,72710+10]..[2254,72710+23])
                            ]
                          expression (lambda/matching.ml[2254,72710+26]..[2254,72710+42])
                            Pexp_apply
                            expression (lambda/matching.ml[2254,72710+26]..[2254,72710+39])
                              Pexp_ident "handle_shared" (lambda/matching.ml[2254,72710+26]..[2254,72710+39])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2254,72710+40]..[2254,72710+42])
                                  Pexp_construct "()" (lambda/matching.ml[2254,72710+40]..[2254,72710+42])
                                  None
                            ]
                      ]
                      expression (lambda/matching.ml[2255,72756+2]..[2263,72986+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2255,72756+6]..[2255,72756+10])
                              Ppat_var "acts" (lambda/matching.ml[2255,72756+6]..[2255,72756+10])
                            expression (lambda/matching.ml[2255,72756+13]..[2255,72756+41])
                              Pexp_apply
                              expression (lambda/matching.ml[2255,72756+13]..[2255,72756+22])
                                Pexp_ident "Array.map" (lambda/matching.ml[2255,72756+13]..[2255,72756+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2255,72756+23]..[2255,72756+36])
                                    Pexp_ident "handle_shared" (lambda/matching.ml[2255,72756+23]..[2255,72756+36])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2255,72756+37]..[2255,72756+41])
                                    Pexp_ident "acts" (lambda/matching.ml[2255,72756+37]..[2255,72756+41])
                              ]
                        ]
                        expression (lambda/matching.ml[2257,72845+2]..[2263,72986+14])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2257,72845+6]..[2257,72845+7])
                                Ppat_var "d" (lambda/matching.ml[2257,72845+6]..[2257,72845+7])
                              expression (lambda/matching.ml[2258,72855+4]..[2260,72891+29])
                                Pexp_match
                                expression (lambda/matching.ml[2258,72855+10]..[2258,72855+11])
                                  Pexp_ident "d" (lambda/matching.ml[2258,72855+10]..[2258,72855+11])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[2259,72872+6]..[2259,72872+10])
                                      Ppat_construct "None" (lambda/matching.ml[2259,72872+6]..[2259,72872+10])
                                      None
                                    expression (lambda/matching.ml[2259,72872+14]..[2259,72872+18])
                                      Pexp_construct "None" (lambda/matching.ml[2259,72872+14]..[2259,72872+18])
                                      None
                                  <case>
                                    pattern (lambda/matching.ml[2260,72891+6]..[2260,72891+12])
                                      Ppat_construct "Some" (lambda/matching.ml[2260,72891+6]..[2260,72891+10])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2260,72891+11]..[2260,72891+12])
                                          Ppat_var "d" (lambda/matching.ml[2260,72891+11]..[2260,72891+12])
                                    expression (lambda/matching.ml[2260,72891+16]..[2260,72891+29])
                                      Pexp_construct "Some" (lambda/matching.ml[2260,72891+16]..[2260,72891+20])
                                      Some
                                        expression (lambda/matching.ml[2260,72891+21]..[2260,72891+29])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2260,72891+21]..[2260,72891+29]) ghost
                                            Pexp_ident "Array.get" (lambda/matching.ml[2260,72891+21]..[2260,72891+29]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2260,72891+21]..[2260,72891+25])
                                                Pexp_ident "acts" (lambda/matching.ml[2260,72891+21]..[2260,72891+25])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2260,72891+27]..[2260,72891+28])
                                                Pexp_ident "d" (lambda/matching.ml[2260,72891+27]..[2260,72891+28])
                                          ]
                                ]
                          ]
                          expression (lambda/matching.ml[2262,72926+2]..[2263,72986+14])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[2262,72926+6]..[2262,72926+8])
                                  Ppat_var "sw" (lambda/matching.ml[2262,72926+6]..[2262,72926+8])
                                expression (lambda/matching.ml[2262,72926+11]..[2262,72926+56])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2262,72926+11]..[2262,72926+19])
                                    Pexp_ident "List.map" (lambda/matching.ml[2262,72926+11]..[2262,72926+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2262,72926+20]..[2262,72926+53])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[2262,72926+25]..[2262,72926+33])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[2262,72926+26]..[2262,72926+29])
                                              Ppat_var "cst" (lambda/matching.ml[2262,72926+26]..[2262,72926+29])
                                            pattern (lambda/matching.ml[2262,72926+31]..[2262,72926+32])
                                              Ppat_var "j" (lambda/matching.ml[2262,72926+31]..[2262,72926+32])
                                          ]
                                        expression (lambda/matching.ml[2262,72926+37]..[2262,72926+52])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2262,72926+38]..[2262,72926+41])
                                              Pexp_ident "cst" (lambda/matching.ml[2262,72926+38]..[2262,72926+41])
                                            expression (lambda/matching.ml[2262,72926+43]..[2262,72926+51])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2262,72926+43]..[2262,72926+51]) ghost
                                                Pexp_ident "Array.get" (lambda/matching.ml[2262,72926+43]..[2262,72926+51]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2262,72926+43]..[2262,72926+47])
                                                    Pexp_ident "acts" (lambda/matching.ml[2262,72926+43]..[2262,72926+47])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2262,72926+49]..[2262,72926+50])
                                                    Pexp_ident "j" (lambda/matching.ml[2262,72926+49]..[2262,72926+50])
                                              ]
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2262,72926+54]..[2262,72926+56])
                                        Pexp_ident "sw" (lambda/matching.ml[2262,72926+54]..[2262,72926+56])
                                  ]
                            ]
                            expression (lambda/matching.ml[2263,72986+2]..[2263,72986+14])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2263,72986+3]..[2263,72986+6])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2263,72986+3]..[2263,72986+4])
                                    Pexp_ident "!" (lambda/matching.ml[2263,72986+3]..[2263,72986+4])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2263,72986+4]..[2263,72986+6])
                                        Pexp_ident "hs" (lambda/matching.ml[2263,72986+4]..[2263,72986+6])
                                  ]
                                expression (lambda/matching.ml[2263,72986+8]..[2263,72986+10])
                                  Pexp_ident "sw" (lambda/matching.ml[2263,72986+8]..[2263,72986+10])
                                expression (lambda/matching.ml[2263,72986+12]..[2263,72986+13])
                                  Pexp_ident "d" (lambda/matching.ml[2263,72986+12]..[2263,72986+13])
                              ]
    ]
  structure_item (lambda/matching.ml[2266,73073+0]..[2275,73284+34])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2266,73073+8]..[2266,73073+24])
          Ppat_var "uniq_lambda_list" (lambda/matching.ml[2266,73073+8]..[2266,73073+24])
        expression (lambda/matching.ml[2266,73073+25]..[2275,73284+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2266,73073+25]..[2266,73073+27])
            Ppat_var "sw" (lambda/matching.ml[2266,73073+25]..[2266,73073+27])
          expression (lambda/matching.ml[2267,73103+2]..[2275,73284+34])
            Pexp_match
            expression (lambda/matching.ml[2267,73103+8]..[2267,73103+10])
              Pexp_ident "sw" (lambda/matching.ml[2267,73103+8]..[2267,73103+10])
            [
              <case>
                pattern (lambda/matching.ml[2268,73119+4]..[2269,73126+9])
                  Ppat_or
                  pattern (lambda/matching.ml[2268,73119+4]..[2268,73119+6])
                    Ppat_construct "[]" (lambda/matching.ml[2268,73119+4]..[2268,73119+6])
                    None
                  pattern (lambda/matching.ml[2269,73126+4]..[2269,73126+9])
                    Ppat_construct "::" (lambda/matching.ml[2269,73126+6]..[2269,73126+9]) ghost
                    Some
                      []
                      pattern (lambda/matching.ml[2269,73126+6]..[2269,73126+9]) ghost
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2269,73126+6]..[2269,73126+7])
                            Ppat_any
                          pattern (lambda/matching.ml[2269,73126+8]..[2269,73126+9]) ghost
                            Ppat_construct "[]" (lambda/matching.ml[2269,73126+8]..[2269,73126+9]) ghost
                            None
                        ]
                expression (lambda/matching.ml[2270,73139+6]..[2270,73139+8])
                  Pexp_ident "sw" (lambda/matching.ml[2270,73139+6]..[2270,73139+8])
              <case>
                pattern (lambda/matching.ml[2271,73148+4]..[2271,73148+46])
                  Ppat_construct "::" (lambda/matching.ml[2271,73148+20]..[2271,73148+22])
                  Some
                    []
                    pattern (lambda/matching.ml[2271,73148+4]..[2271,73148+46]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2271,73148+4]..[2271,73148+19])
                          Ppat_alias "p1" (lambda/matching.ml[2271,73148+16]..[2271,73148+18])
                          pattern (lambda/matching.ml[2271,73148+5]..[2271,73148+12])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2271,73148+6]..[2271,73148+8])
                                Ppat_var "c1" (lambda/matching.ml[2271,73148+6]..[2271,73148+8])
                              pattern (lambda/matching.ml[2271,73148+10]..[2271,73148+11])
                                Ppat_any
                            ]
                        pattern (lambda/matching.ml[2271,73148+23]..[2271,73148+46])
                          Ppat_alias "sw1" (lambda/matching.ml[2271,73148+42]..[2271,73148+45])
                          pattern (lambda/matching.ml[2271,73148+24]..[2271,73148+38])
                            Ppat_construct "::" (lambda/matching.ml[2271,73148+32]..[2271,73148+34])
                            Some
                              []
                              pattern (lambda/matching.ml[2271,73148+24]..[2271,73148+38]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2271,73148+24]..[2271,73148+31])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2271,73148+25]..[2271,73148+27])
                                        Ppat_var "c2" (lambda/matching.ml[2271,73148+25]..[2271,73148+27])
                                      pattern (lambda/matching.ml[2271,73148+29]..[2271,73148+30])
                                        Ppat_any
                                    ]
                                  pattern (lambda/matching.ml[2271,73148+35]..[2271,73148+38])
                                    Ppat_var "sw2" (lambda/matching.ml[2271,73148+35]..[2271,73148+38])
                                ]
                      ]
                expression (lambda/matching.ml[2272,73198+6]..[2275,73284+34])
                  Pexp_ifthenelse
                  expression (lambda/matching.ml[2272,73198+9]..[2272,73198+32])
                    Pexp_apply
                    expression (lambda/matching.ml[2272,73198+29]..[2272,73198+30])
                      Pexp_ident "=" (lambda/matching.ml[2272,73198+29]..[2272,73198+30])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2272,73198+9]..[2272,73198+28])
                          Pexp_apply
                          expression (lambda/matching.ml[2272,73198+9]..[2272,73198+22])
                            Pexp_ident "const_compare" (lambda/matching.ml[2272,73198+9]..[2272,73198+22])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2272,73198+23]..[2272,73198+25])
                                Pexp_ident "c1" (lambda/matching.ml[2272,73198+23]..[2272,73198+25])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2272,73198+26]..[2272,73198+28])
                                Pexp_ident "c2" (lambda/matching.ml[2272,73198+26]..[2272,73198+28])
                          ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2272,73198+31]..[2272,73198+32])
                          Pexp_constant PConst_int (0,None)
                    ]
                  expression (lambda/matching.ml[2273,73236+8]..[2273,73236+36])
                    Pexp_apply
                    expression (lambda/matching.ml[2273,73236+8]..[2273,73236+24])
                      Pexp_ident "uniq_lambda_list" (lambda/matching.ml[2273,73236+8]..[2273,73236+24])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2273,73236+25]..[2273,73236+36])
                          Pexp_construct "::" (lambda/matching.ml[2273,73236+29]..[2273,73236+31])
                          Some
                            expression (lambda/matching.ml[2273,73236+26]..[2273,73236+35]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2273,73236+26]..[2273,73236+28])
                                  Pexp_ident "p1" (lambda/matching.ml[2273,73236+26]..[2273,73236+28])
                                expression (lambda/matching.ml[2273,73236+32]..[2273,73236+35])
                                  Pexp_ident "sw2" (lambda/matching.ml[2273,73236+32]..[2273,73236+35])
                              ]
                    ]
                  Some
                    expression (lambda/matching.ml[2275,73284+8]..[2275,73284+34])
                      Pexp_construct "::" (lambda/matching.ml[2275,73284+11]..[2275,73284+13])
                      Some
                        expression (lambda/matching.ml[2275,73284+8]..[2275,73284+34]) ghost
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2275,73284+8]..[2275,73284+10])
                              Pexp_ident "p1" (lambda/matching.ml[2275,73284+8]..[2275,73284+10])
                            expression (lambda/matching.ml[2275,73284+14]..[2275,73284+34])
                              Pexp_apply
                              expression (lambda/matching.ml[2275,73284+14]..[2275,73284+30])
                                Pexp_ident "uniq_lambda_list" (lambda/matching.ml[2275,73284+14]..[2275,73284+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2275,73284+31]..[2275,73284+34])
                                    Pexp_ident "sw1" (lambda/matching.ml[2275,73284+31]..[2275,73284+34])
                              ]
                          ]
            ]
    ]
  structure_item (lambda/matching.ml[2277,73320+0]..[2279,73418+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2277,73320+4]..[2277,73320+20])
          Ppat_var "sort_lambda_list" (lambda/matching.ml[2277,73320+4]..[2277,73320+20])
        expression (lambda/matching.ml[2277,73320+21]..[2279,73418+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2277,73320+21]..[2277,73320+22])
            Ppat_var "l" (lambda/matching.ml[2277,73320+21]..[2277,73320+22])
          expression (lambda/matching.ml[2278,73345+2]..[2279,73418+20])
            Pexp_let Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2278,73345+6]..[2278,73345+7])
                  Ppat_var "l" (lambda/matching.ml[2278,73345+6]..[2278,73345+7])
                expression (lambda/matching.ml[2278,73345+10]..[2278,73345+69])
                  Pexp_apply
                  expression (lambda/matching.ml[2278,73345+10]..[2278,73345+26])
                    Pexp_ident "List.stable_sort" (lambda/matching.ml[2278,73345+10]..[2278,73345+26])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2278,73345+27]..[2278,73345+67])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2278,73345+32]..[2278,73345+38])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2278,73345+33]..[2278,73345+34])
                              Ppat_var "x" (lambda/matching.ml[2278,73345+33]..[2278,73345+34])
                            pattern (lambda/matching.ml[2278,73345+36]..[2278,73345+37])
                              Ppat_any
                          ]
                        expression (lambda/matching.ml[2278,73345+39]..[2278,73345+66]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2278,73345+39]..[2278,73345+45])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2278,73345+40]..[2278,73345+41])
                                Ppat_var "y" (lambda/matching.ml[2278,73345+40]..[2278,73345+41])
                              pattern (lambda/matching.ml[2278,73345+43]..[2278,73345+44])
                                Ppat_any
                            ]
                          expression (lambda/matching.ml[2278,73345+49]..[2278,73345+66])
                            Pexp_apply
                            expression (lambda/matching.ml[2278,73345+49]..[2278,73345+62])
                              Pexp_ident "const_compare" (lambda/matching.ml[2278,73345+49]..[2278,73345+62])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2278,73345+63]..[2278,73345+64])
                                  Pexp_ident "x" (lambda/matching.ml[2278,73345+63]..[2278,73345+64])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2278,73345+65]..[2278,73345+66])
                                  Pexp_ident "y" (lambda/matching.ml[2278,73345+65]..[2278,73345+66])
                            ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2278,73345+68]..[2278,73345+69])
                        Pexp_ident "l" (lambda/matching.ml[2278,73345+68]..[2278,73345+69])
                  ]
            ]
            expression (lambda/matching.ml[2279,73418+2]..[2279,73418+20])
              Pexp_apply
              expression (lambda/matching.ml[2279,73418+2]..[2279,73418+18])
                Pexp_ident "uniq_lambda_list" (lambda/matching.ml[2279,73418+2]..[2279,73418+18])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[2279,73418+19]..[2279,73418+20])
                    Pexp_ident "l" (lambda/matching.ml[2279,73418+19]..[2279,73418+20])
              ]
    ]
  structure_item (lambda/matching.ml[2281,73440+0]..[2287,73652+15])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2281,73440+8]..[2281,73440+21])
          Ppat_var "do_tests_fail" (lambda/matching.ml[2281,73440+8]..[2281,73440+21])
        expression (lambda/matching.ml[2281,73440+22]..[2287,73652+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2281,73440+22]..[2281,73440+25])
            Ppat_var "loc" (lambda/matching.ml[2281,73440+22]..[2281,73440+25])
          expression (lambda/matching.ml[2281,73440+26]..[2287,73652+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2281,73440+26]..[2281,73440+30])
              Ppat_var "fail" (lambda/matching.ml[2281,73440+26]..[2281,73440+30])
            expression (lambda/matching.ml[2281,73440+31]..[2287,73652+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2281,73440+31]..[2281,73440+34])
                Ppat_var "tst" (lambda/matching.ml[2281,73440+31]..[2281,73440+34])
              expression (lambda/matching.ml[2281,73440+35]..[2287,73652+15]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2281,73440+35]..[2281,73440+38])
                  Ppat_var "arg" (lambda/matching.ml[2281,73440+35]..[2281,73440+38])
                expression (lambda/matching.ml[2281,73440+41]..[2287,73652+15])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/matching.ml[2282,73490+4]..[2282,73490+6])
                        Ppat_construct "[]" (lambda/matching.ml[2282,73490+4]..[2282,73490+6])
                        None
                      expression (lambda/matching.ml[2282,73490+10]..[2282,73490+14])
                        Pexp_ident "fail" (lambda/matching.ml[2282,73490+10]..[2282,73490+14])
                    <case>
                      pattern (lambda/matching.ml[2283,73505+4]..[2283,73505+19])
                        Ppat_construct "::" (lambda/matching.ml[2283,73505+13]..[2283,73505+15])
                        Some
                          []
                          pattern (lambda/matching.ml[2283,73505+4]..[2283,73505+19]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2283,73505+4]..[2283,73505+12])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2283,73505+5]..[2283,73505+6])
                                    Ppat_var "c" (lambda/matching.ml[2283,73505+5]..[2283,73505+6])
                                  pattern (lambda/matching.ml[2283,73505+8]..[2283,73505+11])
                                    Ppat_var "act" (lambda/matching.ml[2283,73505+8]..[2283,73505+11])
                                ]
                              pattern (lambda/matching.ml[2283,73505+16]..[2283,73505+19])
                                Ppat_var "rem" (lambda/matching.ml[2283,73505+16]..[2283,73505+19])
                            ]
                      expression (lambda/matching.ml[2284,73528+6]..[2287,73652+15])
                        Pexp_construct "Lifthenelse" (lambda/matching.ml[2284,73528+6]..[2284,73528+17])
                        Some
                          expression (lambda/matching.ml[2285,73546+8]..[2287,73652+15])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2285,73546+10]..[2285,73546+58])
                                Pexp_construct "Lprim" (lambda/matching.ml[2285,73546+10]..[2285,73546+15])
                                Some
                                  expression (lambda/matching.ml[2285,73546+16]..[2285,73546+58])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[2285,73546+17]..[2285,73546+20])
                                        Pexp_ident "tst" (lambda/matching.ml[2285,73546+17]..[2285,73546+20])
                                      expression (lambda/matching.ml[2285,73546+22]..[2285,73546+52])
                                        Pexp_construct "::" (lambda/matching.ml[2285,73546+24]..[2285,73546+52]) ghost
                                        Some
                                          expression (lambda/matching.ml[2285,73546+24]..[2285,73546+52]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2285,73546+24]..[2285,73546+27])
                                                Pexp_ident "arg" (lambda/matching.ml[2285,73546+24]..[2285,73546+27])
                                              expression (lambda/matching.ml[2285,73546+29]..[2285,73546+52]) ghost
                                                Pexp_construct "::" (lambda/matching.ml[2285,73546+29]..[2285,73546+52]) ghost
                                                Some
                                                  expression (lambda/matching.ml[2285,73546+29]..[2285,73546+52]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2285,73546+29]..[2285,73546+50])
                                                        Pexp_construct "Lconst" (lambda/matching.ml[2285,73546+29]..[2285,73546+35])
                                                        Some
                                                          expression (lambda/matching.ml[2285,73546+36]..[2285,73546+50])
                                                            Pexp_construct "Const_base" (lambda/matching.ml[2285,73546+37]..[2285,73546+47])
                                                            Some
                                                              expression (lambda/matching.ml[2285,73546+48]..[2285,73546+49])
                                                                Pexp_ident "c" (lambda/matching.ml[2285,73546+48]..[2285,73546+49])
                                                      expression (lambda/matching.ml[2285,73546+51]..[2285,73546+52]) ghost
                                                        Pexp_construct "[]" (lambda/matching.ml[2285,73546+51]..[2285,73546+52]) ghost
                                                        None
                                                    ]
                                            ]
                                      expression (lambda/matching.ml[2285,73546+54]..[2285,73546+57])
                                        Pexp_ident "loc" (lambda/matching.ml[2285,73546+54]..[2285,73546+57])
                                    ]
                              expression (lambda/matching.ml[2286,73606+10]..[2286,73606+44])
                                Pexp_apply
                                expression (lambda/matching.ml[2286,73606+10]..[2286,73606+23])
                                  Pexp_ident "do_tests_fail" (lambda/matching.ml[2286,73606+10]..[2286,73606+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2286,73606+24]..[2286,73606+27])
                                      Pexp_ident "loc" (lambda/matching.ml[2286,73606+24]..[2286,73606+27])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2286,73606+28]..[2286,73606+32])
                                      Pexp_ident "fail" (lambda/matching.ml[2286,73606+28]..[2286,73606+32])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2286,73606+33]..[2286,73606+36])
                                      Pexp_ident "tst" (lambda/matching.ml[2286,73606+33]..[2286,73606+36])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2286,73606+37]..[2286,73606+40])
                                      Pexp_ident "arg" (lambda/matching.ml[2286,73606+37]..[2286,73606+40])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2286,73606+41]..[2286,73606+44])
                                      Pexp_ident "rem" (lambda/matching.ml[2286,73606+41]..[2286,73606+44])
                                ]
                              expression (lambda/matching.ml[2287,73652+10]..[2287,73652+13])
                                Pexp_ident "act" (lambda/matching.ml[2287,73652+10]..[2287,73652+13])
                            ]
                  ]
    ]
  structure_item (lambda/matching.ml[2289,73669+0]..[2296,73933+15])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2289,73669+8]..[2289,73669+23])
          Ppat_var "do_tests_nofail" (lambda/matching.ml[2289,73669+8]..[2289,73669+23])
        expression (lambda/matching.ml[2289,73669+24]..[2296,73933+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2289,73669+24]..[2289,73669+27])
            Ppat_var "loc" (lambda/matching.ml[2289,73669+24]..[2289,73669+27])
          expression (lambda/matching.ml[2289,73669+28]..[2296,73933+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2289,73669+28]..[2289,73669+31])
              Ppat_var "tst" (lambda/matching.ml[2289,73669+28]..[2289,73669+31])
            expression (lambda/matching.ml[2289,73669+32]..[2296,73933+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2289,73669+32]..[2289,73669+35])
                Ppat_var "arg" (lambda/matching.ml[2289,73669+32]..[2289,73669+35])
              expression (lambda/matching.ml[2289,73669+38]..[2296,73933+15])
                Pexp_function
                [
                  <case>
                    pattern (lambda/matching.ml[2290,73716+4]..[2290,73716+6])
                      Ppat_construct "[]" (lambda/matching.ml[2290,73716+4]..[2290,73716+6])
                      None
                    expression (lambda/matching.ml[2290,73716+10]..[2290,73716+48])
                      Pexp_apply
                      expression (lambda/matching.ml[2290,73716+10]..[2290,73716+21])
                        Pexp_ident "fatal_error" (lambda/matching.ml[2290,73716+10]..[2290,73716+21])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2290,73716+22]..[2290,73716+48])
                            Pexp_constant PConst_string("Matching.do_tests_nofail",(lambda/matching.ml[2290,73716+23]..[2290,73716+47]),None)
                      ]
                  <case>
                    pattern (lambda/matching.ml[2291,73765+4]..[2291,73765+16])
                      Ppat_construct "::" (lambda/matching.ml[2291,73765+6]..[2291,73765+16]) ghost
                      Some
                        []
                        pattern (lambda/matching.ml[2291,73765+6]..[2291,73765+16]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2291,73765+6]..[2291,73765+14])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2291,73765+7]..[2291,73765+8])
                                  Ppat_any
                                pattern (lambda/matching.ml[2291,73765+10]..[2291,73765+13])
                                  Ppat_var "act" (lambda/matching.ml[2291,73765+10]..[2291,73765+13])
                              ]
                            pattern (lambda/matching.ml[2291,73765+15]..[2291,73765+16]) ghost
                              Ppat_construct "[]" (lambda/matching.ml[2291,73765+15]..[2291,73765+16]) ghost
                              None
                          ]
                    expression (lambda/matching.ml[2291,73765+20]..[2291,73765+23])
                      Pexp_ident "act" (lambda/matching.ml[2291,73765+20]..[2291,73765+23])
                  <case>
                    pattern (lambda/matching.ml[2292,73789+4]..[2292,73789+19])
                      Ppat_construct "::" (lambda/matching.ml[2292,73789+13]..[2292,73789+15])
                      Some
                        []
                        pattern (lambda/matching.ml[2292,73789+4]..[2292,73789+19]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2292,73789+4]..[2292,73789+12])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2292,73789+5]..[2292,73789+6])
                                  Ppat_var "c" (lambda/matching.ml[2292,73789+5]..[2292,73789+6])
                                pattern (lambda/matching.ml[2292,73789+8]..[2292,73789+11])
                                  Ppat_var "act" (lambda/matching.ml[2292,73789+8]..[2292,73789+11])
                              ]
                            pattern (lambda/matching.ml[2292,73789+16]..[2292,73789+19])
                              Ppat_var "rem" (lambda/matching.ml[2292,73789+16]..[2292,73789+19])
                          ]
                    expression (lambda/matching.ml[2293,73812+6]..[2296,73933+15])
                      Pexp_construct "Lifthenelse" (lambda/matching.ml[2293,73812+6]..[2293,73812+17])
                      Some
                        expression (lambda/matching.ml[2294,73830+8]..[2296,73933+15])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2294,73830+10]..[2294,73830+58])
                              Pexp_construct "Lprim" (lambda/matching.ml[2294,73830+10]..[2294,73830+15])
                              Some
                                expression (lambda/matching.ml[2294,73830+16]..[2294,73830+58])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2294,73830+17]..[2294,73830+20])
                                      Pexp_ident "tst" (lambda/matching.ml[2294,73830+17]..[2294,73830+20])
                                    expression (lambda/matching.ml[2294,73830+22]..[2294,73830+52])
                                      Pexp_construct "::" (lambda/matching.ml[2294,73830+24]..[2294,73830+52]) ghost
                                      Some
                                        expression (lambda/matching.ml[2294,73830+24]..[2294,73830+52]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2294,73830+24]..[2294,73830+27])
                                              Pexp_ident "arg" (lambda/matching.ml[2294,73830+24]..[2294,73830+27])
                                            expression (lambda/matching.ml[2294,73830+29]..[2294,73830+52]) ghost
                                              Pexp_construct "::" (lambda/matching.ml[2294,73830+29]..[2294,73830+52]) ghost
                                              Some
                                                expression (lambda/matching.ml[2294,73830+29]..[2294,73830+52]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[2294,73830+29]..[2294,73830+50])
                                                      Pexp_construct "Lconst" (lambda/matching.ml[2294,73830+29]..[2294,73830+35])
                                                      Some
                                                        expression (lambda/matching.ml[2294,73830+36]..[2294,73830+50])
                                                          Pexp_construct "Const_base" (lambda/matching.ml[2294,73830+37]..[2294,73830+47])
                                                          Some
                                                            expression (lambda/matching.ml[2294,73830+48]..[2294,73830+49])
                                                              Pexp_ident "c" (lambda/matching.ml[2294,73830+48]..[2294,73830+49])
                                                    expression (lambda/matching.ml[2294,73830+51]..[2294,73830+52]) ghost
                                                      Pexp_construct "[]" (lambda/matching.ml[2294,73830+51]..[2294,73830+52]) ghost
                                                      None
                                                  ]
                                          ]
                                    expression (lambda/matching.ml[2294,73830+54]..[2294,73830+57])
                                      Pexp_ident "loc" (lambda/matching.ml[2294,73830+54]..[2294,73830+57])
                                  ]
                            expression (lambda/matching.ml[2295,73890+10]..[2295,73890+41])
                              Pexp_apply
                              expression (lambda/matching.ml[2295,73890+10]..[2295,73890+25])
                                Pexp_ident "do_tests_nofail" (lambda/matching.ml[2295,73890+10]..[2295,73890+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2295,73890+26]..[2295,73890+29])
                                    Pexp_ident "loc" (lambda/matching.ml[2295,73890+26]..[2295,73890+29])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2295,73890+30]..[2295,73890+33])
                                    Pexp_ident "tst" (lambda/matching.ml[2295,73890+30]..[2295,73890+33])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2295,73890+34]..[2295,73890+37])
                                    Pexp_ident "arg" (lambda/matching.ml[2295,73890+34]..[2295,73890+37])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2295,73890+38]..[2295,73890+41])
                                    Pexp_ident "rem" (lambda/matching.ml[2295,73890+38]..[2295,73890+41])
                              ]
                            expression (lambda/matching.ml[2296,73933+10]..[2296,73933+13])
                              Pexp_ident "act" (lambda/matching.ml[2296,73933+10]..[2296,73933+13])
                          ]
                ]
    ]
  structure_item (lambda/matching.ml[2298,73950+0]..[2319,74802+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2298,73950+4]..[2298,73950+22])
          Ppat_var "make_test_sequence" (lambda/matching.ml[2298,73950+4]..[2298,73950+22])
        expression (lambda/matching.ml[2298,73950+23]..[2319,74802+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2298,73950+23]..[2298,73950+26])
            Ppat_var "loc" (lambda/matching.ml[2298,73950+23]..[2298,73950+26])
          expression (lambda/matching.ml[2298,73950+27]..[2319,74802+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2298,73950+27]..[2298,73950+31])
              Ppat_var "fail" (lambda/matching.ml[2298,73950+27]..[2298,73950+31])
            expression (lambda/matching.ml[2298,73950+32]..[2319,74802+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2298,73950+32]..[2298,73950+35])
                Ppat_var "tst" (lambda/matching.ml[2298,73950+32]..[2298,73950+35])
              expression (lambda/matching.ml[2298,73950+36]..[2319,74802+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2298,73950+36]..[2298,73950+42])
                  Ppat_var "lt_tst" (lambda/matching.ml[2298,73950+36]..[2298,73950+42])
                expression (lambda/matching.ml[2298,73950+43]..[2319,74802+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2298,73950+43]..[2298,73950+46])
                    Ppat_var "arg" (lambda/matching.ml[2298,73950+43]..[2298,73950+46])
                  expression (lambda/matching.ml[2298,73950+47]..[2319,74802+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2298,73950+47]..[2298,73950+64])
                      Ppat_var "const_lambda_list" (lambda/matching.ml[2298,73950+47]..[2298,73950+64])
                    expression (lambda/matching.ml[2299,74017+2]..[2319,74802+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2299,74017+6]..[2299,74017+23])
                            Ppat_var "const_lambda_list" (lambda/matching.ml[2299,74017+6]..[2299,74017+23])
                          expression (lambda/matching.ml[2299,74017+26]..[2299,74017+60])
                            Pexp_apply
                            expression (lambda/matching.ml[2299,74017+26]..[2299,74017+42])
                              Pexp_ident "sort_lambda_list" (lambda/matching.ml[2299,74017+26]..[2299,74017+42])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2299,74017+43]..[2299,74017+60])
                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2299,74017+43]..[2299,74017+60])
                            ]
                      ]
                      expression (lambda/matching.ml[2300,74081+2]..[2319,74802+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2300,74081+6]..[2300,74081+33])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2300,74081+6]..[2300,74081+8])
                                  Ppat_var "hs" (lambda/matching.ml[2300,74081+6]..[2300,74081+8])
                                pattern (lambda/matching.ml[2300,74081+10]..[2300,74081+27])
                                  Ppat_var "const_lambda_list" (lambda/matching.ml[2300,74081+10]..[2300,74081+27])
                                pattern (lambda/matching.ml[2300,74081+29]..[2300,74081+33])
                                  Ppat_var "fail" (lambda/matching.ml[2300,74081+29]..[2300,74081+33])
                              ]
                            expression (lambda/matching.ml[2301,74117+4]..[2301,74117+45])
                              Pexp_apply
                              expression (lambda/matching.ml[2301,74117+4]..[2301,74117+22])
                                Pexp_ident "share_actions_tree" (lambda/matching.ml[2301,74117+4]..[2301,74117+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2301,74117+23]..[2301,74117+40])
                                    Pexp_ident "const_lambda_list" (lambda/matching.ml[2301,74117+23]..[2301,74117+40])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2301,74117+41]..[2301,74117+45])
                                    Pexp_ident "fail" (lambda/matching.ml[2301,74117+41]..[2301,74117+45])
                              ]
                        ]
                        expression (lambda/matching.ml[2303,74168+2]..[2319,74802+43])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[2303,74168+10]..[2303,74168+28])
                                Ppat_var "make_test_sequence" (lambda/matching.ml[2303,74168+10]..[2303,74168+28])
                              expression (lambda/matching.ml[2303,74168+29]..[2309,74417+69]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[2303,74168+29]..[2303,74168+46])
                                  Ppat_var "const_lambda_list" (lambda/matching.ml[2303,74168+29]..[2303,74168+46])
                                expression (lambda/matching.ml[2304,74217+4]..[2309,74417+69])
                                  Pexp_ifthenelse
                                  expression (lambda/matching.ml[2304,74217+7]..[2304,74217+62])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2304,74217+42]..[2304,74217+44])
                                      Pexp_ident "&&" (lambda/matching.ml[2304,74217+42]..[2304,74217+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2304,74217+7]..[2304,74217+41])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2304,74217+37]..[2304,74217+39])
                                            Pexp_ident ">=" (lambda/matching.ml[2304,74217+37]..[2304,74217+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2304,74217+7]..[2304,74217+36])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2304,74217+7]..[2304,74217+18])
                                                  Pexp_ident "List.length" (lambda/matching.ml[2304,74217+7]..[2304,74217+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2304,74217+19]..[2304,74217+36])
                                                      Pexp_ident "const_lambda_list" (lambda/matching.ml[2304,74217+19]..[2304,74217+36])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2304,74217+40]..[2304,74217+41])
                                                Pexp_constant PConst_int (4,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2304,74217+45]..[2304,74217+62])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2304,74217+52]..[2304,74217+54])
                                            Pexp_ident "<>" (lambda/matching.ml[2304,74217+52]..[2304,74217+54])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2304,74217+45]..[2304,74217+51])
                                                Pexp_ident "lt_tst" (lambda/matching.ml[2304,74217+45]..[2304,74217+51])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2304,74217+55]..[2304,74217+62])
                                                Pexp_construct "Pignore" (lambda/matching.ml[2304,74217+55]..[2304,74217+62])
                                                None
                                          ]
                                    ]
                                  expression (lambda/matching.ml[2305,74285+6]..[2305,74285+38])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2305,74285+6]..[2305,74285+20])
                                      Pexp_ident "split_sequence" (lambda/matching.ml[2305,74285+6]..[2305,74285+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2305,74285+21]..[2305,74285+38])
                                          Pexp_ident "const_lambda_list" (lambda/matching.ml[2305,74285+21]..[2305,74285+38])
                                    ]
                                  Some
                                    expression (lambda/matching.ml[2307,74333+6]..[2309,74417+69])
                                      Pexp_match
                                      expression (lambda/matching.ml[2307,74333+12]..[2307,74333+16])
                                        Pexp_ident "fail" (lambda/matching.ml[2307,74333+12]..[2307,74333+16])
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[2308,74355+8]..[2308,74355+12])
                                            Ppat_construct "None" (lambda/matching.ml[2308,74355+8]..[2308,74355+12])
                                            None
                                          expression (lambda/matching.ml[2308,74355+16]..[2308,74355+61])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2308,74355+16]..[2308,74355+31])
                                              Pexp_ident "do_tests_nofail" (lambda/matching.ml[2308,74355+16]..[2308,74355+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2308,74355+32]..[2308,74355+35])
                                                  Pexp_ident "loc" (lambda/matching.ml[2308,74355+32]..[2308,74355+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2308,74355+36]..[2308,74355+39])
                                                  Pexp_ident "tst" (lambda/matching.ml[2308,74355+36]..[2308,74355+39])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2308,74355+40]..[2308,74355+43])
                                                  Pexp_ident "arg" (lambda/matching.ml[2308,74355+40]..[2308,74355+43])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2308,74355+44]..[2308,74355+61])
                                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2308,74355+44]..[2308,74355+61])
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[2309,74417+8]..[2309,74417+17])
                                            Ppat_construct "Some" (lambda/matching.ml[2309,74417+8]..[2309,74417+12])
                                            Some
                                              []
                                              pattern (lambda/matching.ml[2309,74417+13]..[2309,74417+17])
                                                Ppat_var "fail" (lambda/matching.ml[2309,74417+13]..[2309,74417+17])
                                          expression (lambda/matching.ml[2309,74417+21]..[2309,74417+69])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2309,74417+21]..[2309,74417+34])
                                              Pexp_ident "do_tests_fail" (lambda/matching.ml[2309,74417+21]..[2309,74417+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2309,74417+35]..[2309,74417+38])
                                                  Pexp_ident "loc" (lambda/matching.ml[2309,74417+35]..[2309,74417+38])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2309,74417+39]..[2309,74417+43])
                                                  Pexp_ident "fail" (lambda/matching.ml[2309,74417+39]..[2309,74417+43])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2309,74417+44]..[2309,74417+47])
                                                  Pexp_ident "tst" (lambda/matching.ml[2309,74417+44]..[2309,74417+47])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2309,74417+48]..[2309,74417+51])
                                                  Pexp_ident "arg" (lambda/matching.ml[2309,74417+48]..[2309,74417+51])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2309,74417+52]..[2309,74417+69])
                                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2309,74417+52]..[2309,74417+69])
                                            ]
                                      ]
                            <def>
                              pattern (lambda/matching.ml[2310,74487+6]..[2310,74487+20])
                                Ppat_var "split_sequence" (lambda/matching.ml[2310,74487+6]..[2310,74487+20])
                              expression (lambda/matching.ml[2310,74487+21]..[2317,74762+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[2310,74487+21]..[2310,74487+38])
                                  Ppat_var "const_lambda_list" (lambda/matching.ml[2310,74487+21]..[2310,74487+38])
                                expression (lambda/matching.ml[2311,74528+4]..[2317,74762+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2311,74528+8]..[2311,74528+20])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2311,74528+8]..[2311,74528+13])
                                            Ppat_var "list1" (lambda/matching.ml[2311,74528+8]..[2311,74528+13])
                                          pattern (lambda/matching.ml[2311,74528+15]..[2311,74528+20])
                                            Ppat_var "list2" (lambda/matching.ml[2311,74528+15]..[2311,74528+20])
                                        ]
                                      expression (lambda/matching.ml[2312,74551+6]..[2312,74551+72])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2312,74551+6]..[2312,74551+18])
                                          Pexp_ident "rev_split_at" (lambda/matching.ml[2312,74551+6]..[2312,74551+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2312,74551+19]..[2312,74551+54])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2312,74551+50]..[2312,74551+51])
                                                Pexp_ident "/" (lambda/matching.ml[2312,74551+50]..[2312,74551+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2312,74551+20]..[2312,74551+49])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[2312,74551+20]..[2312,74551+31])
                                                      Pexp_ident "List.length" (lambda/matching.ml[2312,74551+20]..[2312,74551+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2312,74551+32]..[2312,74551+49])
                                                          Pexp_ident "const_lambda_list" (lambda/matching.ml[2312,74551+32]..[2312,74551+49])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2312,74551+52]..[2312,74551+53])
                                                    Pexp_constant PConst_int (2,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2312,74551+55]..[2312,74551+72])
                                              Pexp_ident "const_lambda_list" (lambda/matching.ml[2312,74551+55]..[2312,74551+72])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2314,74631+4]..[2317,74762+34])
                                    Pexp_construct "Lifthenelse" (lambda/matching.ml[2314,74631+4]..[2314,74631+15])
                                    Some
                                      expression (lambda/matching.ml[2315,74647+6]..[2317,74762+34])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2315,74647+8]..[2315,74647+79])
                                            Pexp_construct "Lprim" (lambda/matching.ml[2315,74647+8]..[2315,74647+13])
                                            Some
                                              expression (lambda/matching.ml[2315,74647+14]..[2315,74647+79])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2315,74647+15]..[2315,74647+21])
                                                    Pexp_ident "lt_tst" (lambda/matching.ml[2315,74647+15]..[2315,74647+21])
                                                  expression (lambda/matching.ml[2315,74647+23]..[2315,74647+73])
                                                    Pexp_construct "::" (lambda/matching.ml[2315,74647+25]..[2315,74647+73]) ghost
                                                    Some
                                                      expression (lambda/matching.ml[2315,74647+25]..[2315,74647+73]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2315,74647+25]..[2315,74647+28])
                                                            Pexp_ident "arg" (lambda/matching.ml[2315,74647+25]..[2315,74647+28])
                                                          expression (lambda/matching.ml[2315,74647+30]..[2315,74647+73]) ghost
                                                            Pexp_construct "::" (lambda/matching.ml[2315,74647+30]..[2315,74647+73]) ghost
                                                            Some
                                                              expression (lambda/matching.ml[2315,74647+30]..[2315,74647+73]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[2315,74647+30]..[2315,74647+71])
                                                                    Pexp_construct "Lconst" (lambda/matching.ml[2315,74647+30]..[2315,74647+36])
                                                                    Some
                                                                      expression (lambda/matching.ml[2315,74647+37]..[2315,74647+71])
Pexp_construct "Const_base" (lambda/matching.ml[2315,74647+38]..[2315,74647+48])
Some
  expression (lambda/matching.ml[2315,74647+49]..[2315,74647+70])
    Pexp_apply
    expression (lambda/matching.ml[2315,74647+50]..[2315,74647+53])
      Pexp_ident "fst" (lambda/matching.ml[2315,74647+50]..[2315,74647+53])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[2315,74647+54]..[2315,74647+69])
          Pexp_apply
          expression (lambda/matching.ml[2315,74647+55]..[2315,74647+62])
            Pexp_ident "List.hd" (lambda/matching.ml[2315,74647+55]..[2315,74647+62])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[2315,74647+63]..[2315,74647+68])
                Pexp_ident "list2" (lambda/matching.ml[2315,74647+63]..[2315,74647+68])
          ]
    ]
                                                                  expression (lambda/matching.ml[2315,74647+72]..[2315,74647+73]) ghost
                                                                    Pexp_construct "[]" (lambda/matching.ml[2315,74647+72]..[2315,74647+73]) ghost
                                                                    None
                                                                ]
                                                        ]
                                                  expression (lambda/matching.ml[2315,74647+75]..[2315,74647+78])
                                                    Pexp_ident "loc" (lambda/matching.ml[2315,74647+75]..[2315,74647+78])
                                                ]
                                          expression (lambda/matching.ml[2316,74728+8]..[2316,74728+32])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2316,74728+8]..[2316,74728+26])
                                              Pexp_ident "make_test_sequence" (lambda/matching.ml[2316,74728+8]..[2316,74728+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2316,74728+27]..[2316,74728+32])
                                                  Pexp_ident "list1" (lambda/matching.ml[2316,74728+27]..[2316,74728+32])
                                            ]
                                          expression (lambda/matching.ml[2317,74762+8]..[2317,74762+32])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2317,74762+8]..[2317,74762+26])
                                              Pexp_ident "make_test_sequence" (lambda/matching.ml[2317,74762+8]..[2317,74762+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2317,74762+27]..[2317,74762+32])
                                                  Pexp_ident "list2" (lambda/matching.ml[2317,74762+27]..[2317,74762+32])
                                            ]
                                        ]
                          ]
                          expression (lambda/matching.ml[2319,74802+2]..[2319,74802+43])
                            Pexp_apply
                            expression (lambda/matching.ml[2319,74802+2]..[2319,74802+4])
                              Pexp_ident "hs" (lambda/matching.ml[2319,74802+2]..[2319,74802+4])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2319,74802+5]..[2319,74802+43])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2319,74802+6]..[2319,74802+24])
                                    Pexp_ident "make_test_sequence" (lambda/matching.ml[2319,74802+6]..[2319,74802+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2319,74802+25]..[2319,74802+42])
                                        Pexp_ident "const_lambda_list" (lambda/matching.ml[2319,74802+25]..[2319,74802+42])
                                  ]
                            ]
    ]
  structure_item (lambda/matching.ml[2321,74847+0]..[2383,76241+3])
    Pstr_module
    "SArg" (lambda/matching.ml[2321,74847+7]..[2321,74847+11])
      module_expr (lambda/matching.ml[2321,74847+14]..[2383,76241+3])
        Pmod_structure
        [
          structure_item (lambda/matching.ml[2322,74868+2]..[2322,74868+35])
            Pstr_type Rec
            [
              type_declaration "primitive" (lambda/matching.ml[2322,74868+7]..[2322,74868+16]) (lambda/matching.ml[2322,74868+2]..[2322,74868+35])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lambda/matching.ml[2322,74868+19]..[2322,74868+35])
                      Ptyp_constr "Lambda.primitive" (lambda/matching.ml[2322,74868+19]..[2322,74868+35])
                      []
            ]
          structure_item (lambda/matching.ml[2324,74905+2]..[2324,74905+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2324,74905+6]..[2324,74905+11])
                  Ppat_var "eqint" (lambda/matching.ml[2324,74905+6]..[2324,74905+11])
                expression (lambda/matching.ml[2324,74905+14]..[2324,74905+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2324,74905+14]..[2324,74905+22])
                  Some
                    expression (lambda/matching.ml[2324,74905+23]..[2324,74905+26])
                      Pexp_construct "Ceq" (lambda/matching.ml[2324,74905+23]..[2324,74905+26])
                      None
            ]
          structure_item (lambda/matching.ml[2326,74933+2]..[2326,74933+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2326,74933+6]..[2326,74933+11])
                  Ppat_var "neint" (lambda/matching.ml[2326,74933+6]..[2326,74933+11])
                expression (lambda/matching.ml[2326,74933+14]..[2326,74933+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2326,74933+14]..[2326,74933+22])
                  Some
                    expression (lambda/matching.ml[2326,74933+23]..[2326,74933+26])
                      Pexp_construct "Cne" (lambda/matching.ml[2326,74933+23]..[2326,74933+26])
                      None
            ]
          structure_item (lambda/matching.ml[2328,74961+2]..[2328,74961+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2328,74961+6]..[2328,74961+11])
                  Ppat_var "leint" (lambda/matching.ml[2328,74961+6]..[2328,74961+11])
                expression (lambda/matching.ml[2328,74961+14]..[2328,74961+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2328,74961+14]..[2328,74961+22])
                  Some
                    expression (lambda/matching.ml[2328,74961+23]..[2328,74961+26])
                      Pexp_construct "Cle" (lambda/matching.ml[2328,74961+23]..[2328,74961+26])
                      None
            ]
          structure_item (lambda/matching.ml[2330,74989+2]..[2330,74989+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2330,74989+6]..[2330,74989+11])
                  Ppat_var "ltint" (lambda/matching.ml[2330,74989+6]..[2330,74989+11])
                expression (lambda/matching.ml[2330,74989+14]..[2330,74989+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2330,74989+14]..[2330,74989+22])
                  Some
                    expression (lambda/matching.ml[2330,74989+23]..[2330,74989+26])
                      Pexp_construct "Clt" (lambda/matching.ml[2330,74989+23]..[2330,74989+26])
                      None
            ]
          structure_item (lambda/matching.ml[2332,75017+2]..[2332,75017+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2332,75017+6]..[2332,75017+11])
                  Ppat_var "geint" (lambda/matching.ml[2332,75017+6]..[2332,75017+11])
                expression (lambda/matching.ml[2332,75017+14]..[2332,75017+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2332,75017+14]..[2332,75017+22])
                  Some
                    expression (lambda/matching.ml[2332,75017+23]..[2332,75017+26])
                      Pexp_construct "Cge" (lambda/matching.ml[2332,75017+23]..[2332,75017+26])
                      None
            ]
          structure_item (lambda/matching.ml[2334,75045+2]..[2334,75045+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2334,75045+6]..[2334,75045+11])
                  Ppat_var "gtint" (lambda/matching.ml[2334,75045+6]..[2334,75045+11])
                expression (lambda/matching.ml[2334,75045+14]..[2334,75045+26])
                  Pexp_construct "Pintcomp" (lambda/matching.ml[2334,75045+14]..[2334,75045+22])
                  Some
                    expression (lambda/matching.ml[2334,75045+23]..[2334,75045+26])
                      Pexp_construct "Cgt" (lambda/matching.ml[2334,75045+23]..[2334,75045+26])
                      None
            ]
          structure_item (lambda/matching.ml[2336,75073+2]..[2336,75073+26])
            Pstr_type Rec
            [
              type_declaration "act" (lambda/matching.ml[2336,75073+7]..[2336,75073+10]) (lambda/matching.ml[2336,75073+2]..[2336,75073+26])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lambda/matching.ml[2336,75073+13]..[2336,75073+26])
                      Ptyp_constr "Lambda.lambda" (lambda/matching.ml[2336,75073+13]..[2336,75073+26])
                      []
            ]
          structure_item (lambda/matching.ml[2338,75101+2]..[2338,75101+35])
            Pstr_type Rec
            [
              type_declaration "loc" (lambda/matching.ml[2338,75101+7]..[2338,75101+10]) (lambda/matching.ml[2338,75101+2]..[2338,75101+35])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lambda/matching.ml[2338,75101+13]..[2338,75101+35])
                      Ptyp_constr "Lambda.scoped_location" (lambda/matching.ml[2338,75101+13]..[2338,75101+35])
                      []
            ]
          structure_item (lambda/matching.ml[2340,75138+2]..[2340,75138+53])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2340,75138+6]..[2340,75138+15])
                  Ppat_var "make_prim" (lambda/matching.ml[2340,75138+6]..[2340,75138+15])
                expression (lambda/matching.ml[2340,75138+16]..[2340,75138+53]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2340,75138+16]..[2340,75138+17])
                    Ppat_var "p" (lambda/matching.ml[2340,75138+16]..[2340,75138+17])
                  expression (lambda/matching.ml[2340,75138+18]..[2340,75138+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2340,75138+18]..[2340,75138+22])
                      Ppat_var "args" (lambda/matching.ml[2340,75138+18]..[2340,75138+22])
                    expression (lambda/matching.ml[2340,75138+25]..[2340,75138+53])
                      Pexp_construct "Lprim" (lambda/matching.ml[2340,75138+25]..[2340,75138+30])
                      Some
                        expression (lambda/matching.ml[2340,75138+31]..[2340,75138+53])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2340,75138+32]..[2340,75138+33])
                              Pexp_ident "p" (lambda/matching.ml[2340,75138+32]..[2340,75138+33])
                            expression (lambda/matching.ml[2340,75138+35]..[2340,75138+39])
                              Pexp_ident "args" (lambda/matching.ml[2340,75138+35]..[2340,75138+39])
                            expression (lambda/matching.ml[2340,75138+41]..[2340,75138+52])
                              Pexp_construct "Loc_unknown" (lambda/matching.ml[2340,75138+41]..[2340,75138+52])
                              None
                          ]
            ]
          structure_item (lambda/matching.ml[2342,75193+2]..[2345,75251+53])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2342,75193+6]..[2342,75193+17])
                  Ppat_var "make_offset" (lambda/matching.ml[2342,75193+6]..[2342,75193+17])
                expression (lambda/matching.ml[2342,75193+18]..[2345,75251+53]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2342,75193+18]..[2342,75193+21])
                    Ppat_var "arg" (lambda/matching.ml[2342,75193+18]..[2342,75193+21])
                  expression (lambda/matching.ml[2342,75193+22]..[2345,75251+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2342,75193+22]..[2342,75193+23])
                      Ppat_var "n" (lambda/matching.ml[2342,75193+22]..[2342,75193+23])
                    expression (lambda/matching.ml[2343,75219+4]..[2345,75251+53])
                      Pexp_match
                      expression (lambda/matching.ml[2343,75219+10]..[2343,75219+11])
                        Pexp_ident "n" (lambda/matching.ml[2343,75219+10]..[2343,75219+11])
                      [
                        <case>
                          pattern (lambda/matching.ml[2344,75236+6]..[2344,75236+7])
                            Ppat_constant PConst_int (0,None)
                          expression (lambda/matching.ml[2344,75236+11]..[2344,75236+14])
                            Pexp_ident "arg" (lambda/matching.ml[2344,75236+11]..[2344,75236+14])
                        <case>
                          pattern (lambda/matching.ml[2345,75251+6]..[2345,75251+7])
                            Ppat_any
                          expression (lambda/matching.ml[2345,75251+11]..[2345,75251+53])
                            Pexp_construct "Lprim" (lambda/matching.ml[2345,75251+11]..[2345,75251+16])
                            Some
                              expression (lambda/matching.ml[2345,75251+17]..[2345,75251+53])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2345,75251+18]..[2345,75251+30])
                                    Pexp_construct "Poffsetint" (lambda/matching.ml[2345,75251+18]..[2345,75251+28])
                                    Some
                                      expression (lambda/matching.ml[2345,75251+29]..[2345,75251+30])
                                        Pexp_ident "n" (lambda/matching.ml[2345,75251+29]..[2345,75251+30])
                                  expression (lambda/matching.ml[2345,75251+32]..[2345,75251+39])
                                    Pexp_construct "::" (lambda/matching.ml[2345,75251+34]..[2345,75251+39]) ghost
                                    Some
                                      expression (lambda/matching.ml[2345,75251+34]..[2345,75251+39]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2345,75251+34]..[2345,75251+37])
                                            Pexp_ident "arg" (lambda/matching.ml[2345,75251+34]..[2345,75251+37])
                                          expression (lambda/matching.ml[2345,75251+38]..[2345,75251+39]) ghost
                                            Pexp_construct "[]" (lambda/matching.ml[2345,75251+38]..[2345,75251+39]) ghost
                                            None
                                        ]
                                  expression (lambda/matching.ml[2345,75251+41]..[2345,75251+52])
                                    Pexp_construct "Loc_unknown" (lambda/matching.ml[2345,75251+41]..[2345,75251+52])
                                    None
                                ]
                      ]
            ]
          structure_item (lambda/matching.ml[2347,75306+2]..[2355,75509+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2347,75306+6]..[2347,75306+10])
                  Ppat_var "bind" (lambda/matching.ml[2347,75306+6]..[2347,75306+10])
                expression (lambda/matching.ml[2347,75306+11]..[2355,75509+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2347,75306+11]..[2347,75306+14])
                    Ppat_var "arg" (lambda/matching.ml[2347,75306+11]..[2347,75306+14])
                  expression (lambda/matching.ml[2347,75306+15]..[2355,75509+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2347,75306+15]..[2347,75306+19])
                      Ppat_var "body" (lambda/matching.ml[2347,75306+15]..[2347,75306+19])
                    expression (lambda/matching.ml[2348,75328+4]..[2355,75509+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2348,75328+8]..[2348,75328+22])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2348,75328+8]..[2348,75328+14])
                                Ppat_var "newvar" (lambda/matching.ml[2348,75328+8]..[2348,75328+14])
                              pattern (lambda/matching.ml[2348,75328+16]..[2348,75328+22])
                                Ppat_var "newarg" (lambda/matching.ml[2348,75328+16]..[2348,75328+22])
                            ]
                          expression (lambda/matching.ml[2349,75353+6]..[2353,75470+31])
                            Pexp_match
                            expression (lambda/matching.ml[2349,75353+12]..[2349,75353+15])
                              Pexp_ident "arg" (lambda/matching.ml[2349,75353+12]..[2349,75353+15])
                            [
                              <case>
                                pattern (lambda/matching.ml[2350,75374+8]..[2350,75374+14])
                                  Ppat_construct "Lvar" (lambda/matching.ml[2350,75374+8]..[2350,75374+12])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2350,75374+13]..[2350,75374+14])
                                      Ppat_var "v" (lambda/matching.ml[2350,75374+13]..[2350,75374+14])
                                expression (lambda/matching.ml[2350,75374+18]..[2350,75374+26])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2350,75374+19]..[2350,75374+20])
                                      Pexp_ident "v" (lambda/matching.ml[2350,75374+19]..[2350,75374+20])
                                    expression (lambda/matching.ml[2350,75374+22]..[2350,75374+25])
                                      Pexp_ident "arg" (lambda/matching.ml[2350,75374+22]..[2350,75374+25])
                                  ]
                              <case>
                                pattern (lambda/matching.ml[2351,75401+8]..[2351,75401+9])
                                  Ppat_any
                                expression (lambda/matching.ml[2352,75414+10]..[2353,75470+31])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2352,75414+14]..[2352,75414+20])
                                        Ppat_var "newvar" (lambda/matching.ml[2352,75414+14]..[2352,75414+20])
                                      expression (lambda/matching.ml[2352,75414+23]..[2352,75414+52])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2352,75414+23]..[2352,75414+41])
                                          Pexp_ident "Ident.create_local" (lambda/matching.ml[2352,75414+23]..[2352,75414+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2352,75414+42]..[2352,75414+52])
                                              Pexp_constant PConst_string("switcher",(lambda/matching.ml[2352,75414+43]..[2352,75414+51]),None)
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2353,75470+10]..[2353,75470+31])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[2353,75470+11]..[2353,75470+17])
                                        Pexp_ident "newvar" (lambda/matching.ml[2353,75470+11]..[2353,75470+17])
                                      expression (lambda/matching.ml[2353,75470+19]..[2353,75470+30])
                                        Pexp_construct "Lvar" (lambda/matching.ml[2353,75470+19]..[2353,75470+23])
                                        Some
                                          expression (lambda/matching.ml[2353,75470+24]..[2353,75470+30])
                                            Pexp_ident "newvar" (lambda/matching.ml[2353,75470+24]..[2353,75470+30])
                                    ]
                            ]
                      ]
                      expression (lambda/matching.ml[2355,75509+4]..[2355,75509+39])
                        Pexp_apply
                        expression (lambda/matching.ml[2355,75509+4]..[2355,75509+8])
                          Pexp_ident "bind" (lambda/matching.ml[2355,75509+4]..[2355,75509+8])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2355,75509+9]..[2355,75509+14])
                              Pexp_construct "Alias" (lambda/matching.ml[2355,75509+9]..[2355,75509+14])
                              None
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2355,75509+15]..[2355,75509+21])
                              Pexp_ident "newvar" (lambda/matching.ml[2355,75509+15]..[2355,75509+21])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2355,75509+22]..[2355,75509+25])
                              Pexp_ident "arg" (lambda/matching.ml[2355,75509+22]..[2355,75509+25])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2355,75509+26]..[2355,75509+39])
                              Pexp_apply
                              expression (lambda/matching.ml[2355,75509+27]..[2355,75509+31])
                                Pexp_ident "body" (lambda/matching.ml[2355,75509+27]..[2355,75509+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2355,75509+32]..[2355,75509+38])
                                    Pexp_ident "newarg" (lambda/matching.ml[2355,75509+32]..[2355,75509+38])
                              ]
                        ]
            ]
          structure_item (lambda/matching.ml[2357,75550+2]..[2357,75550+54])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2357,75550+6]..[2357,75550+16])
                  Ppat_var "make_const" (lambda/matching.ml[2357,75550+6]..[2357,75550+16])
                expression (lambda/matching.ml[2357,75550+17]..[2357,75550+54]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2357,75550+17]..[2357,75550+18])
                    Ppat_var "i" (lambda/matching.ml[2357,75550+17]..[2357,75550+18])
                  expression (lambda/matching.ml[2357,75550+21]..[2357,75550+54])
                    Pexp_construct "Lconst" (lambda/matching.ml[2357,75550+21]..[2357,75550+27])
                    Some
                      expression (lambda/matching.ml[2357,75550+28]..[2357,75550+54])
                        Pexp_construct "Const_base" (lambda/matching.ml[2357,75550+29]..[2357,75550+39])
                        Some
                          expression (lambda/matching.ml[2357,75550+40]..[2357,75550+53])
                            Pexp_construct "Const_int" (lambda/matching.ml[2357,75550+41]..[2357,75550+50])
                            Some
                              expression (lambda/matching.ml[2357,75550+51]..[2357,75550+52])
                                Pexp_ident "i" (lambda/matching.ml[2357,75550+51]..[2357,75550+52])
            ]
          structure_item (lambda/matching.ml[2359,75606+2]..[2359,75606+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2359,75606+6]..[2359,75606+16])
                  Ppat_var "make_isout" (lambda/matching.ml[2359,75606+6]..[2359,75606+16])
                expression (lambda/matching.ml[2359,75606+17]..[2359,75606+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2359,75606+17]..[2359,75606+18])
                    Ppat_var "h" (lambda/matching.ml[2359,75606+17]..[2359,75606+18])
                  expression (lambda/matching.ml[2359,75606+19]..[2359,75606+64]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2359,75606+19]..[2359,75606+22])
                      Ppat_var "arg" (lambda/matching.ml[2359,75606+19]..[2359,75606+22])
                    expression (lambda/matching.ml[2359,75606+25]..[2359,75606+64])
                      Pexp_construct "Lprim" (lambda/matching.ml[2359,75606+25]..[2359,75606+30])
                      Some
                        expression (lambda/matching.ml[2359,75606+31]..[2359,75606+64])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2359,75606+32]..[2359,75606+38])
                              Pexp_construct "Pisout" (lambda/matching.ml[2359,75606+32]..[2359,75606+38])
                              None
                            expression (lambda/matching.ml[2359,75606+40]..[2359,75606+50])
                              Pexp_construct "::" (lambda/matching.ml[2359,75606+42]..[2359,75606+50]) ghost
                              Some
                                expression (lambda/matching.ml[2359,75606+42]..[2359,75606+50]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2359,75606+42]..[2359,75606+43])
                                      Pexp_ident "h" (lambda/matching.ml[2359,75606+42]..[2359,75606+43])
                                    expression (lambda/matching.ml[2359,75606+45]..[2359,75606+50]) ghost
                                      Pexp_construct "::" (lambda/matching.ml[2359,75606+45]..[2359,75606+50]) ghost
                                      Some
                                        expression (lambda/matching.ml[2359,75606+45]..[2359,75606+50]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2359,75606+45]..[2359,75606+48])
                                              Pexp_ident "arg" (lambda/matching.ml[2359,75606+45]..[2359,75606+48])
                                            expression (lambda/matching.ml[2359,75606+49]..[2359,75606+50]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[2359,75606+49]..[2359,75606+50]) ghost
                                              None
                                          ]
                                  ]
                            expression (lambda/matching.ml[2359,75606+52]..[2359,75606+63])
                              Pexp_construct "Loc_unknown" (lambda/matching.ml[2359,75606+52]..[2359,75606+63])
                              None
                          ]
            ]
          structure_item (lambda/matching.ml[2361,75672+2]..[2361,75672+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2361,75672+6]..[2361,75672+15])
                  Ppat_var "make_isin" (lambda/matching.ml[2361,75672+6]..[2361,75672+15])
                expression (lambda/matching.ml[2361,75672+16]..[2361,75672+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2361,75672+16]..[2361,75672+17])
                    Ppat_var "h" (lambda/matching.ml[2361,75672+16]..[2361,75672+17])
                  expression (lambda/matching.ml[2361,75672+18]..[2361,75672+71]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2361,75672+18]..[2361,75672+21])
                      Ppat_var "arg" (lambda/matching.ml[2361,75672+18]..[2361,75672+21])
                    expression (lambda/matching.ml[2361,75672+24]..[2361,75672+71])
                      Pexp_construct "Lprim" (lambda/matching.ml[2361,75672+24]..[2361,75672+29])
                      Some
                        expression (lambda/matching.ml[2361,75672+30]..[2361,75672+71])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2361,75672+31]..[2361,75672+35])
                              Pexp_construct "Pnot" (lambda/matching.ml[2361,75672+31]..[2361,75672+35])
                              None
                            expression (lambda/matching.ml[2361,75672+37]..[2361,75672+57])
                              Pexp_construct "::" (lambda/matching.ml[2361,75672+39]..[2361,75672+57]) ghost
                              Some
                                expression (lambda/matching.ml[2361,75672+39]..[2361,75672+57]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2361,75672+39]..[2361,75672+55])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2361,75672+39]..[2361,75672+49])
                                        Pexp_ident "make_isout" (lambda/matching.ml[2361,75672+39]..[2361,75672+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2361,75672+50]..[2361,75672+51])
                                            Pexp_ident "h" (lambda/matching.ml[2361,75672+50]..[2361,75672+51])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2361,75672+52]..[2361,75672+55])
                                            Pexp_ident "arg" (lambda/matching.ml[2361,75672+52]..[2361,75672+55])
                                      ]
                                    expression (lambda/matching.ml[2361,75672+56]..[2361,75672+57]) ghost
                                      Pexp_construct "[]" (lambda/matching.ml[2361,75672+56]..[2361,75672+57]) ghost
                                      None
                                  ]
                            expression (lambda/matching.ml[2361,75672+59]..[2361,75672+70])
                              Pexp_construct "Loc_unknown" (lambda/matching.ml[2361,75672+59]..[2361,75672+70])
                              None
                          ]
            ]
          structure_item (lambda/matching.ml[2363,75745+2]..[2363,75745+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2363,75745+6]..[2363,75745+13])
                  Ppat_var "make_if" (lambda/matching.ml[2363,75745+6]..[2363,75745+13])
                expression (lambda/matching.ml[2363,75745+14]..[2363,75745+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2363,75745+14]..[2363,75745+18])
                    Ppat_var "cond" (lambda/matching.ml[2363,75745+14]..[2363,75745+18])
                  expression (lambda/matching.ml[2363,75745+19]..[2363,75745+63]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2363,75745+19]..[2363,75745+23])
                      Ppat_var "ifso" (lambda/matching.ml[2363,75745+19]..[2363,75745+23])
                    expression (lambda/matching.ml[2363,75745+24]..[2363,75745+63]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2363,75745+24]..[2363,75745+29])
                        Ppat_var "ifnot" (lambda/matching.ml[2363,75745+24]..[2363,75745+29])
                      expression (lambda/matching.ml[2363,75745+32]..[2363,75745+63])
                        Pexp_construct "Lifthenelse" (lambda/matching.ml[2363,75745+32]..[2363,75745+43])
                        Some
                          expression (lambda/matching.ml[2363,75745+44]..[2363,75745+63])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2363,75745+45]..[2363,75745+49])
                                Pexp_ident "cond" (lambda/matching.ml[2363,75745+45]..[2363,75745+49])
                              expression (lambda/matching.ml[2363,75745+51]..[2363,75745+55])
                                Pexp_ident "ifso" (lambda/matching.ml[2363,75745+51]..[2363,75745+55])
                              expression (lambda/matching.ml[2363,75745+57]..[2363,75745+62])
                                Pexp_ident "ifnot" (lambda/matching.ml[2363,75745+57]..[2363,75745+62])
                            ]
            ]
          structure_item (lambda/matching.ml[2365,75810+2]..[2378,76159+13])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2365,75810+6]..[2365,75810+17])
                  Ppat_var "make_switch" (lambda/matching.ml[2365,75810+6]..[2365,75810+17])
                expression (lambda/matching.ml[2365,75810+18]..[2378,76159+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2365,75810+18]..[2365,75810+21])
                    Ppat_var "loc" (lambda/matching.ml[2365,75810+18]..[2365,75810+21])
                  expression (lambda/matching.ml[2365,75810+22]..[2378,76159+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2365,75810+22]..[2365,75810+25])
                      Ppat_var "arg" (lambda/matching.ml[2365,75810+22]..[2365,75810+25])
                    expression (lambda/matching.ml[2365,75810+26]..[2378,76159+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2365,75810+26]..[2365,75810+31])
                        Ppat_var "cases" (lambda/matching.ml[2365,75810+26]..[2365,75810+31])
                      expression (lambda/matching.ml[2365,75810+32]..[2378,76159+13]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2365,75810+32]..[2365,75810+36])
                          Ppat_var "acts" (lambda/matching.ml[2365,75810+32]..[2365,75810+36])
                        expression (lambda/matching.ml[2366,75849+4]..[2378,76159+13])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2366,75849+8]..[2366,75849+9])
                                Ppat_var "l" (lambda/matching.ml[2366,75849+8]..[2366,75849+9])
                              expression (lambda/matching.ml[2366,75849+12]..[2366,75849+18])
                                Pexp_apply
                                expression (lambda/matching.ml[2366,75849+12]..[2366,75849+15])
                                  Pexp_ident "ref" (lambda/matching.ml[2366,75849+12]..[2366,75849+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2366,75849+16]..[2366,75849+18])
                                      Pexp_construct "[]" (lambda/matching.ml[2366,75849+16]..[2366,75849+18])
                                      None
                                ]
                          ]
                          expression (lambda/matching.ml[2367,75871+4]..[2378,76159+13])
                            Pexp_sequence
                            expression (lambda/matching.ml[2367,75871+4]..[2369,75957+8])
                              Pexp_for Down
                              pattern (lambda/matching.ml[2367,75871+8]..[2367,75871+9])
                                Ppat_var "i" (lambda/matching.ml[2367,75871+8]..[2367,75871+9])
                              expression (lambda/matching.ml[2367,75871+12]..[2367,75871+34])
                                Pexp_apply
                                expression (lambda/matching.ml[2367,75871+31]..[2367,75871+32])
                                  Pexp_ident "-" (lambda/matching.ml[2367,75871+31]..[2367,75871+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2367,75871+12]..[2367,75871+30])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2367,75871+12]..[2367,75871+24])
                                        Pexp_ident "Array.length" (lambda/matching.ml[2367,75871+12]..[2367,75871+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2367,75871+25]..[2367,75871+30])
                                            Pexp_ident "cases" (lambda/matching.ml[2367,75871+25]..[2367,75871+30])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2367,75871+33]..[2367,75871+34])
                                      Pexp_constant PConst_int (1,None)
                                ]
                              expression (lambda/matching.ml[2367,75871+42]..[2367,75871+43])
                                Pexp_constant PConst_int (0,None)
                              expression (lambda/matching.ml[2368,75918+6]..[2368,75918+38])
                                Pexp_apply
                                expression (lambda/matching.ml[2368,75918+8]..[2368,75918+10])
                                  Pexp_ident ":=" (lambda/matching.ml[2368,75918+8]..[2368,75918+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2368,75918+6]..[2368,75918+7])
                                      Pexp_ident "l" (lambda/matching.ml[2368,75918+6]..[2368,75918+7])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2368,75918+11]..[2368,75918+38])
                                      Pexp_construct "::" (lambda/matching.ml[2368,75918+33]..[2368,75918+35])
                                      Some
                                        expression (lambda/matching.ml[2368,75918+11]..[2368,75918+38]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2368,75918+11]..[2368,75918+32])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2368,75918+12]..[2368,75918+13])
                                                  Pexp_ident "i" (lambda/matching.ml[2368,75918+12]..[2368,75918+13])
                                                expression (lambda/matching.ml[2368,75918+15]..[2368,75918+31])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2368,75918+15]..[2368,75918+31]) ghost
                                                    Pexp_ident "Array.get" (lambda/matching.ml[2368,75918+15]..[2368,75918+31]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2368,75918+15]..[2368,75918+19])
                                                        Pexp_ident "acts" (lambda/matching.ml[2368,75918+15]..[2368,75918+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2368,75918+21]..[2368,75918+30])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2368,75918+21]..[2368,75918+30]) ghost
                                                          Pexp_ident "Array.get" (lambda/matching.ml[2368,75918+21]..[2368,75918+30]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2368,75918+21]..[2368,75918+26])
                                                              Pexp_ident "cases" (lambda/matching.ml[2368,75918+21]..[2368,75918+26])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2368,75918+28]..[2368,75918+29])
                                                              Pexp_ident "i" (lambda/matching.ml[2368,75918+28]..[2368,75918+29])
                                                        ]
                                                  ]
                                              ]
                                            expression (lambda/matching.ml[2368,75918+36]..[2368,75918+38])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2368,75918+36]..[2368,75918+37])
                                                Pexp_ident "!" (lambda/matching.ml[2368,75918+36]..[2368,75918+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2368,75918+37]..[2368,75918+38])
                                                    Pexp_ident "l" (lambda/matching.ml[2368,75918+37]..[2368,75918+38])
                                              ]
                                          ]
                                ]
                            expression (lambda/matching.ml[2370,75967+4]..[2378,76159+13])
                              Pexp_construct "Lswitch" (lambda/matching.ml[2370,75967+4]..[2370,75967+11])
                              Some
                                expression (lambda/matching.ml[2371,75979+6]..[2378,76159+13])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2371,75979+8]..[2371,75979+11])
                                      Pexp_ident "arg" (lambda/matching.ml[2371,75979+8]..[2371,75979+11])
                                    expression (lambda/matching.ml[2372,75992+8]..[2377,76148+9])
                                      Pexp_record
                                      [
                                        "sw_numconsts" (lambda/matching.ml[2372,75992+10]..[2372,75992+22])
                                          expression (lambda/matching.ml[2372,75992+25]..[2372,75992+43])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2372,75992+25]..[2372,75992+37])
                                              Pexp_ident "Array.length" (lambda/matching.ml[2372,75992+25]..[2372,75992+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2372,75992+38]..[2372,75992+43])
                                                  Pexp_ident "cases" (lambda/matching.ml[2372,75992+38]..[2372,75992+43])
                                            ]
                                        "sw_consts" (lambda/matching.ml[2373,76037+10]..[2373,76037+19])
                                          expression (lambda/matching.ml[2373,76037+22]..[2373,76037+24])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2373,76037+22]..[2373,76037+23])
                                              Pexp_ident "!" (lambda/matching.ml[2373,76037+22]..[2373,76037+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2373,76037+23]..[2373,76037+24])
                                                  Pexp_ident "l" (lambda/matching.ml[2373,76037+23]..[2373,76037+24])
                                            ]
                                        "sw_numblocks" (lambda/matching.ml[2374,76063+10]..[2374,76063+22])
                                          expression (lambda/matching.ml[2374,76063+25]..[2374,76063+26])
                                            Pexp_constant PConst_int (0,None)
                                        "sw_blocks" (lambda/matching.ml[2375,76091+10]..[2375,76091+19])
                                          expression (lambda/matching.ml[2375,76091+22]..[2375,76091+24])
                                            Pexp_construct "[]" (lambda/matching.ml[2375,76091+22]..[2375,76091+24])
                                            None
                                        "sw_failaction" (lambda/matching.ml[2376,76117+10]..[2376,76117+23])
                                          expression (lambda/matching.ml[2376,76117+26]..[2376,76117+30])
                                            Pexp_construct "None" (lambda/matching.ml[2376,76117+26]..[2376,76117+30])
                                            None
                                      ]
                                      None
                                    expression (lambda/matching.ml[2378,76159+8]..[2378,76159+11])
                                      Pexp_ident "loc" (lambda/matching.ml[2378,76159+8]..[2378,76159+11])
                                  ]
            ]
          structure_item (lambda/matching.ml[2380,76174+2]..[2380,76174+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2380,76174+6]..[2380,76174+16])
                  Ppat_var "make_catch" (lambda/matching.ml[2380,76174+6]..[2380,76174+16])
                expression (lambda/matching.ml[2380,76174+19]..[2380,76174+37])
                  Pexp_ident "make_catch_delayed" (lambda/matching.ml[2380,76174+19]..[2380,76174+37])
            ]
          structure_item (lambda/matching.ml[2382,76213+2]..[2382,76213+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2382,76213+6]..[2382,76213+15])
                  Ppat_var "make_exit" (lambda/matching.ml[2382,76213+6]..[2382,76213+15])
                expression (lambda/matching.ml[2382,76213+18]..[2382,76213+27])
                  Pexp_ident "make_exit" (lambda/matching.ml[2382,76213+18]..[2382,76213+27])
            ]
        ]
  structure_item (lambda/matching.ml[2386,76288+0]..[2414,77187+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2386,76288+4]..[2386,76288+20])
          Ppat_var "share_actions_sw" (lambda/matching.ml[2386,76288+4]..[2386,76288+20])
        expression (lambda/matching.ml[2386,76288+21]..[2414,77187+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2386,76288+21]..[2386,76288+23])
            Ppat_var "sw" (lambda/matching.ml[2386,76288+21]..[2386,76288+23])
          expression (lambda/matching.ml[2388,76353+2]..[2414,77187+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2388,76353+6]..[2388,76353+11])
                  Ppat_var "store" (lambda/matching.ml[2388,76353+6]..[2388,76353+11])
                expression (lambda/matching.ml[2388,76353+14]..[2388,76353+34])
                  Pexp_apply
                  expression (lambda/matching.ml[2388,76353+14]..[2388,76353+31])
                    Pexp_ident "StoreExp.mk_store" (lambda/matching.ml[2388,76353+14]..[2388,76353+31])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2388,76353+32]..[2388,76353+34])
                        Pexp_construct "()" (lambda/matching.ml[2388,76353+32]..[2388,76353+34])
                        None
                  ]
            ]
            expression (lambda/matching.ml[2389,76391+2]..[2414,77187+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[2389,76391+6]..[2389,76391+10])
                    Ppat_var "fail" (lambda/matching.ml[2389,76391+6]..[2389,76391+10])
                  expression (lambda/matching.ml[2390,76404+4]..[2394,76533+52])
                    Pexp_match
                    expression (lambda/matching.ml[2390,76404+10]..[2390,76404+26])
                      Pexp_field
                      expression (lambda/matching.ml[2390,76404+10]..[2390,76404+12])
                        Pexp_ident "sw" (lambda/matching.ml[2390,76404+10]..[2390,76404+12])
                      "sw_failaction" (lambda/matching.ml[2390,76404+13]..[2390,76404+26])
                    [
                      <case>
                        pattern (lambda/matching.ml[2391,76436+6]..[2391,76436+10])
                          Ppat_construct "None" (lambda/matching.ml[2391,76436+6]..[2391,76436+10])
                          None
                        expression (lambda/matching.ml[2391,76436+14]..[2391,76436+18])
                          Pexp_construct "None" (lambda/matching.ml[2391,76436+14]..[2391,76436+18])
                          None
                      <case>
                        pattern (lambda/matching.ml[2392,76455+6]..[2392,76455+15])
                          Ppat_construct "Some" (lambda/matching.ml[2392,76455+6]..[2392,76455+10])
                          Some
                            []
                            pattern (lambda/matching.ml[2392,76455+11]..[2392,76455+15])
                              Ppat_var "fail" (lambda/matching.ml[2392,76455+11]..[2392,76455+15])
                        expression (lambda/matching.ml[2394,76533+8]..[2394,76533+52])
                          Pexp_construct "Some" (lambda/matching.ml[2394,76533+8]..[2394,76533+12])
                          Some
                            expression (lambda/matching.ml[2394,76533+13]..[2394,76533+52])
                              Pexp_apply
                              expression (lambda/matching.ml[2394,76533+14]..[2394,76533+43])
                                Pexp_field
                                expression (lambda/matching.ml[2394,76533+14]..[2394,76533+19])
                                  Pexp_ident "store" (lambda/matching.ml[2394,76533+14]..[2394,76533+19])
                                "Switch.act_store_shared" (lambda/matching.ml[2394,76533+20]..[2394,76533+43])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2394,76533+44]..[2394,76533+46])
                                    Pexp_construct "()" (lambda/matching.ml[2394,76533+44]..[2394,76533+46])
                                    None
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2394,76533+47]..[2394,76533+51])
                                    Pexp_ident "fail" (lambda/matching.ml[2394,76533+47]..[2394,76533+51])
                              ]
                    ]
              ]
              expression (lambda/matching.ml[2396,76591+2]..[2414,77187+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[2396,76591+6]..[2396,76591+12])
                      Ppat_var "consts" (lambda/matching.ml[2396,76591+6]..[2396,76591+12])
                    expression (lambda/matching.ml[2397,76606+4]..[2397,76606+74])
                      Pexp_apply
                      expression (lambda/matching.ml[2397,76606+4]..[2397,76606+12])
                        Pexp_ident "List.map" (lambda/matching.ml[2397,76606+4]..[2397,76606+12])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2397,76606+13]..[2397,76606+61])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2397,76606+18]..[2397,76606+24])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2397,76606+19]..[2397,76606+20])
                                  Ppat_var "i" (lambda/matching.ml[2397,76606+19]..[2397,76606+20])
                                pattern (lambda/matching.ml[2397,76606+22]..[2397,76606+23])
                                  Ppat_var "e" (lambda/matching.ml[2397,76606+22]..[2397,76606+23])
                              ]
                            expression (lambda/matching.ml[2397,76606+28]..[2397,76606+60])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2397,76606+29]..[2397,76606+30])
                                  Pexp_ident "i" (lambda/matching.ml[2397,76606+29]..[2397,76606+30])
                                expression (lambda/matching.ml[2397,76606+32]..[2397,76606+59])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2397,76606+32]..[2397,76606+54])
                                    Pexp_field
                                    expression (lambda/matching.ml[2397,76606+32]..[2397,76606+37])
                                      Pexp_ident "store" (lambda/matching.ml[2397,76606+32]..[2397,76606+37])
                                    "Switch.act_store" (lambda/matching.ml[2397,76606+38]..[2397,76606+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2397,76606+55]..[2397,76606+57])
                                        Pexp_construct "()" (lambda/matching.ml[2397,76606+55]..[2397,76606+57])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2397,76606+58]..[2397,76606+59])
                                        Pexp_ident "e" (lambda/matching.ml[2397,76606+58]..[2397,76606+59])
                                  ]
                              ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2397,76606+62]..[2397,76606+74])
                            Pexp_field
                            expression (lambda/matching.ml[2397,76606+62]..[2397,76606+64])
                              Pexp_ident "sw" (lambda/matching.ml[2397,76606+62]..[2397,76606+64])
                            "sw_consts" (lambda/matching.ml[2397,76606+65]..[2397,76606+74])
                      ]
                  <def>
                    pattern (lambda/matching.ml[2398,76681+6]..[2398,76681+12])
                      Ppat_var "blocks" (lambda/matching.ml[2398,76681+6]..[2398,76681+12])
                    expression (lambda/matching.ml[2399,76696+4]..[2399,76696+74])
                      Pexp_apply
                      expression (lambda/matching.ml[2399,76696+4]..[2399,76696+12])
                        Pexp_ident "List.map" (lambda/matching.ml[2399,76696+4]..[2399,76696+12])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2399,76696+13]..[2399,76696+61])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2399,76696+18]..[2399,76696+24])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2399,76696+19]..[2399,76696+20])
                                  Ppat_var "i" (lambda/matching.ml[2399,76696+19]..[2399,76696+20])
                                pattern (lambda/matching.ml[2399,76696+22]..[2399,76696+23])
                                  Ppat_var "e" (lambda/matching.ml[2399,76696+22]..[2399,76696+23])
                              ]
                            expression (lambda/matching.ml[2399,76696+28]..[2399,76696+60])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2399,76696+29]..[2399,76696+30])
                                  Pexp_ident "i" (lambda/matching.ml[2399,76696+29]..[2399,76696+30])
                                expression (lambda/matching.ml[2399,76696+32]..[2399,76696+59])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2399,76696+32]..[2399,76696+54])
                                    Pexp_field
                                    expression (lambda/matching.ml[2399,76696+32]..[2399,76696+37])
                                      Pexp_ident "store" (lambda/matching.ml[2399,76696+32]..[2399,76696+37])
                                    "Switch.act_store" (lambda/matching.ml[2399,76696+38]..[2399,76696+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2399,76696+55]..[2399,76696+57])
                                        Pexp_construct "()" (lambda/matching.ml[2399,76696+55]..[2399,76696+57])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2399,76696+58]..[2399,76696+59])
                                        Pexp_ident "e" (lambda/matching.ml[2399,76696+58]..[2399,76696+59])
                                  ]
                              ]
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2399,76696+62]..[2399,76696+74])
                            Pexp_field
                            expression (lambda/matching.ml[2399,76696+62]..[2399,76696+64])
                              Pexp_ident "sw" (lambda/matching.ml[2399,76696+62]..[2399,76696+64])
                            "sw_blocks" (lambda/matching.ml[2399,76696+65]..[2399,76696+74])
                      ]
                ]
                expression (lambda/matching.ml[2401,76776+2]..[2414,77187+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2401,76776+6]..[2401,76776+10])
                        Ppat_var "acts" (lambda/matching.ml[2401,76776+6]..[2401,76776+10])
                      expression (lambda/matching.ml[2401,76776+13]..[2401,76776+43])
                        Pexp_apply
                        expression (lambda/matching.ml[2401,76776+13]..[2401,76776+40])
                          Pexp_field
                          expression (lambda/matching.ml[2401,76776+13]..[2401,76776+18])
                            Pexp_ident "store" (lambda/matching.ml[2401,76776+13]..[2401,76776+18])
                          "Switch.act_get_shared" (lambda/matching.ml[2401,76776+19]..[2401,76776+40])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2401,76776+41]..[2401,76776+43])
                              Pexp_construct "()" (lambda/matching.ml[2401,76776+41]..[2401,76776+43])
                              None
                        ]
                  ]
                  expression (lambda/matching.ml[2402,76823+2]..[2414,77187+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2402,76823+6]..[2402,76823+23])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2402,76823+6]..[2402,76823+8])
                              Ppat_var "hs" (lambda/matching.ml[2402,76823+6]..[2402,76823+8])
                            pattern (lambda/matching.ml[2402,76823+10]..[2402,76823+23])
                              Ppat_var "handle_shared" (lambda/matching.ml[2402,76823+10]..[2402,76823+23])
                          ]
                        expression (lambda/matching.ml[2402,76823+26]..[2402,76823+42])
                          Pexp_apply
                          expression (lambda/matching.ml[2402,76823+26]..[2402,76823+39])
                            Pexp_ident "handle_shared" (lambda/matching.ml[2402,76823+26]..[2402,76823+39])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2402,76823+40]..[2402,76823+42])
                                Pexp_construct "()" (lambda/matching.ml[2402,76823+40]..[2402,76823+42])
                                None
                          ]
                    ]
                    expression (lambda/matching.ml[2403,76869+2]..[2414,77187+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2403,76869+6]..[2403,76869+10])
                            Ppat_var "acts" (lambda/matching.ml[2403,76869+6]..[2403,76869+10])
                          expression (lambda/matching.ml[2403,76869+13]..[2403,76869+41])
                            Pexp_apply
                            expression (lambda/matching.ml[2403,76869+13]..[2403,76869+22])
                              Pexp_ident "Array.map" (lambda/matching.ml[2403,76869+13]..[2403,76869+22])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2403,76869+23]..[2403,76869+36])
                                  Pexp_ident "handle_shared" (lambda/matching.ml[2403,76869+23]..[2403,76869+36])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2403,76869+37]..[2403,76869+41])
                                  Pexp_ident "acts" (lambda/matching.ml[2403,76869+37]..[2403,76869+41])
                            ]
                      ]
                      expression (lambda/matching.ml[2404,76914+2]..[2414,77187+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2404,76914+6]..[2404,76914+10])
                              Ppat_var "fail" (lambda/matching.ml[2404,76914+6]..[2404,76914+10])
                            expression (lambda/matching.ml[2405,76927+4]..[2407,76966+35])
                              Pexp_match
                              expression (lambda/matching.ml[2405,76927+10]..[2405,76927+14])
                                Pexp_ident "fail" (lambda/matching.ml[2405,76927+10]..[2405,76927+14])
                              [
                                <case>
                                  pattern (lambda/matching.ml[2406,76947+6]..[2406,76947+10])
                                    Ppat_construct "None" (lambda/matching.ml[2406,76947+6]..[2406,76947+10])
                                    None
                                  expression (lambda/matching.ml[2406,76947+14]..[2406,76947+18])
                                    Pexp_construct "None" (lambda/matching.ml[2406,76947+14]..[2406,76947+18])
                                    None
                                <case>
                                  pattern (lambda/matching.ml[2407,76966+6]..[2407,76966+15])
                                    Ppat_construct "Some" (lambda/matching.ml[2407,76966+6]..[2407,76966+10])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[2407,76966+11]..[2407,76966+15])
                                        Ppat_var "fail" (lambda/matching.ml[2407,76966+11]..[2407,76966+15])
                                  expression (lambda/matching.ml[2407,76966+19]..[2407,76966+35])
                                    Pexp_construct "Some" (lambda/matching.ml[2407,76966+19]..[2407,76966+23])
                                    Some
                                      expression (lambda/matching.ml[2407,76966+24]..[2407,76966+35])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2407,76966+24]..[2407,76966+35]) ghost
                                          Pexp_ident "Array.get" (lambda/matching.ml[2407,76966+24]..[2407,76966+35]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2407,76966+24]..[2407,76966+28])
                                              Pexp_ident "acts" (lambda/matching.ml[2407,76966+24]..[2407,76966+28])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2407,76966+30]..[2407,76966+34])
                                              Pexp_ident "fail" (lambda/matching.ml[2407,76966+30]..[2407,76966+34])
                                        ]
                              ]
                        ]
                        expression (lambda/matching.ml[2409,77007+2]..[2414,77187+7])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2409,77007+4]..[2409,77007+7])
                              Pexp_apply
                              expression (lambda/matching.ml[2409,77007+4]..[2409,77007+5])
                                Pexp_ident "!" (lambda/matching.ml[2409,77007+4]..[2409,77007+5])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2409,77007+5]..[2409,77007+7])
                                    Pexp_ident "hs" (lambda/matching.ml[2409,77007+5]..[2409,77007+7])
                              ]
                            expression (lambda/matching.ml[2410,77016+4]..[2414,77187+5])
                              Pexp_record
                              [
                                "sw_consts" (lambda/matching.ml[2411,77030+6]..[2411,77030+15])
                                  expression (lambda/matching.ml[2411,77030+18]..[2411,77030+63])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2411,77030+18]..[2411,77030+26])
                                      Pexp_ident "List.map" (lambda/matching.ml[2411,77030+18]..[2411,77030+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2411,77030+27]..[2411,77030+56])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[2411,77030+32]..[2411,77030+38])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2411,77030+33]..[2411,77030+34])
                                                Ppat_var "i" (lambda/matching.ml[2411,77030+33]..[2411,77030+34])
                                              pattern (lambda/matching.ml[2411,77030+36]..[2411,77030+37])
                                                Ppat_var "j" (lambda/matching.ml[2411,77030+36]..[2411,77030+37])
                                            ]
                                          expression (lambda/matching.ml[2411,77030+42]..[2411,77030+55])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2411,77030+43]..[2411,77030+44])
                                                Pexp_ident "i" (lambda/matching.ml[2411,77030+43]..[2411,77030+44])
                                              expression (lambda/matching.ml[2411,77030+46]..[2411,77030+54])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2411,77030+46]..[2411,77030+54]) ghost
                                                  Pexp_ident "Array.get" (lambda/matching.ml[2411,77030+46]..[2411,77030+54]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2411,77030+46]..[2411,77030+50])
                                                      Pexp_ident "acts" (lambda/matching.ml[2411,77030+46]..[2411,77030+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2411,77030+52]..[2411,77030+53])
                                                      Pexp_ident "j" (lambda/matching.ml[2411,77030+52]..[2411,77030+53])
                                                ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2411,77030+57]..[2411,77030+63])
                                          Pexp_ident "consts" (lambda/matching.ml[2411,77030+57]..[2411,77030+63])
                                    ]
                                "sw_blocks" (lambda/matching.ml[2412,77095+6]..[2412,77095+15])
                                  expression (lambda/matching.ml[2412,77095+18]..[2412,77095+63])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2412,77095+18]..[2412,77095+26])
                                      Pexp_ident "List.map" (lambda/matching.ml[2412,77095+18]..[2412,77095+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2412,77095+27]..[2412,77095+56])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[2412,77095+32]..[2412,77095+38])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2412,77095+33]..[2412,77095+34])
                                                Ppat_var "i" (lambda/matching.ml[2412,77095+33]..[2412,77095+34])
                                              pattern (lambda/matching.ml[2412,77095+36]..[2412,77095+37])
                                                Ppat_var "j" (lambda/matching.ml[2412,77095+36]..[2412,77095+37])
                                            ]
                                          expression (lambda/matching.ml[2412,77095+42]..[2412,77095+55])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2412,77095+43]..[2412,77095+44])
                                                Pexp_ident "i" (lambda/matching.ml[2412,77095+43]..[2412,77095+44])
                                              expression (lambda/matching.ml[2412,77095+46]..[2412,77095+54])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2412,77095+46]..[2412,77095+54]) ghost
                                                  Pexp_ident "Array.get" (lambda/matching.ml[2412,77095+46]..[2412,77095+54]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2412,77095+46]..[2412,77095+50])
                                                      Pexp_ident "acts" (lambda/matching.ml[2412,77095+46]..[2412,77095+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2412,77095+52]..[2412,77095+53])
                                                      Pexp_ident "j" (lambda/matching.ml[2412,77095+52]..[2412,77095+53])
                                                ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2412,77095+57]..[2412,77095+63])
                                          Pexp_ident "blocks" (lambda/matching.ml[2412,77095+57]..[2412,77095+63])
                                    ]
                                "sw_failaction" (lambda/matching.ml[2413,77160+6]..[2413,77160+19])
                                  expression (lambda/matching.ml[2413,77160+22]..[2413,77160+26])
                                    Pexp_ident "fail" (lambda/matching.ml[2413,77160+22]..[2413,77160+26])
                              ]
                              Some
                                expression (lambda/matching.ml[2410,77016+6]..[2410,77016+8])
                                  Pexp_ident "sw" (lambda/matching.ml[2410,77016+6]..[2410,77016+8])
                          ]
    ]
  structure_item (lambda/matching.ml[2419,77303+0]..[2455,78307+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2419,77303+4]..[2419,77303+20])
          Ppat_var "reintroduce_fail" (lambda/matching.ml[2419,77303+4]..[2419,77303+20])
        expression (lambda/matching.ml[2419,77303+21]..[2455,78307+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2419,77303+21]..[2419,77303+23])
            Ppat_var "sw" (lambda/matching.ml[2419,77303+21]..[2419,77303+23])
          expression (lambda/matching.ml[2420,77329+2]..[2455,78307+16])
            Pexp_match
            expression (lambda/matching.ml[2420,77329+8]..[2420,77329+24])
              Pexp_field
              expression (lambda/matching.ml[2420,77329+8]..[2420,77329+10])
                Pexp_ident "sw" (lambda/matching.ml[2420,77329+8]..[2420,77329+10])
              "sw_failaction" (lambda/matching.ml[2420,77329+11]..[2420,77329+24])
            [
              <case>
                pattern (lambda/matching.ml[2421,77359+4]..[2421,77359+8])
                  Ppat_construct "None" (lambda/matching.ml[2421,77359+4]..[2421,77359+8])
                  None
                expression (lambda/matching.ml[2422,77371+6]..[2454,78296+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2422,77371+10]..[2422,77371+11])
                        Ppat_var "t" (lambda/matching.ml[2422,77371+10]..[2422,77371+11])
                      expression (lambda/matching.ml[2422,77371+14]..[2422,77371+31])
                        Pexp_apply
                        expression (lambda/matching.ml[2422,77371+14]..[2422,77371+28])
                          Pexp_ident "Hashtbl.create" (lambda/matching.ml[2422,77371+14]..[2422,77371+28])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2422,77371+29]..[2422,77371+31])
                              Pexp_constant PConst_int (17,None)
                        ]
                  ]
                  expression (lambda/matching.ml[2423,77406+6]..[2454,78296+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2423,77406+10]..[2423,77406+14])
                          Ppat_var "seen" (lambda/matching.ml[2423,77406+10]..[2423,77406+14])
                        expression (lambda/matching.ml[2423,77406+15]..[2428,77594+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2423,77406+15]..[2423,77406+21])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2423,77406+16]..[2423,77406+17])
                                Ppat_any
                              pattern (lambda/matching.ml[2423,77406+19]..[2423,77406+20])
                                Ppat_var "l" (lambda/matching.ml[2423,77406+19]..[2423,77406+20])
                            ]
                          expression (lambda/matching.ml[2424,77430+8]..[2428,77594+20])
                            Pexp_match
                            expression (lambda/matching.ml[2424,77430+14]..[2424,77430+30])
                              Pexp_apply
                              expression (lambda/matching.ml[2424,77430+14]..[2424,77430+28])
                                Pexp_ident "as_simple_exit" (lambda/matching.ml[2424,77430+14]..[2424,77430+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2424,77430+29]..[2424,77430+30])
                                    Pexp_ident "l" (lambda/matching.ml[2424,77430+29]..[2424,77430+30])
                              ]
                            [
                              <case>
                                pattern (lambda/matching.ml[2425,77466+10]..[2425,77466+16])
                                  Ppat_construct "Some" (lambda/matching.ml[2425,77466+10]..[2425,77466+14])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2425,77466+15]..[2425,77466+16])
                                      Ppat_var "i" (lambda/matching.ml[2425,77466+15]..[2425,77466+16])
                                expression (lambda/matching.ml[2426,77486+12]..[2427,77552+41])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2426,77486+16]..[2426,77486+19])
                                        Ppat_var "old" (lambda/matching.ml[2426,77486+16]..[2426,77486+19])
                                      expression (lambda/matching.ml[2426,77486+22]..[2426,77486+62])
                                        Pexp_try
                                        expression (lambda/matching.ml[2426,77486+26]..[2426,77486+42])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2426,77486+26]..[2426,77486+38])
                                            Pexp_ident "Hashtbl.find" (lambda/matching.ml[2426,77486+26]..[2426,77486+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2426,77486+39]..[2426,77486+40])
                                                Pexp_ident "t" (lambda/matching.ml[2426,77486+39]..[2426,77486+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2426,77486+41]..[2426,77486+42])
                                                Pexp_ident "i" (lambda/matching.ml[2426,77486+41]..[2426,77486+42])
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[2426,77486+48]..[2426,77486+57])
                                              Ppat_construct "Not_found" (lambda/matching.ml[2426,77486+48]..[2426,77486+57])
                                              None
                                            expression (lambda/matching.ml[2426,77486+61]..[2426,77486+62])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2427,77552+12]..[2427,77552+41])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2427,77552+12]..[2427,77552+27])
                                      Pexp_ident "Hashtbl.replace" (lambda/matching.ml[2427,77552+12]..[2427,77552+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2427,77552+28]..[2427,77552+29])
                                          Pexp_ident "t" (lambda/matching.ml[2427,77552+28]..[2427,77552+29])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2427,77552+30]..[2427,77552+31])
                                          Pexp_ident "i" (lambda/matching.ml[2427,77552+30]..[2427,77552+31])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2427,77552+32]..[2427,77552+41])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2427,77552+37]..[2427,77552+38])
                                            Pexp_ident "+" (lambda/matching.ml[2427,77552+37]..[2427,77552+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2427,77552+33]..[2427,77552+36])
                                                Pexp_ident "old" (lambda/matching.ml[2427,77552+33]..[2427,77552+36])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2427,77552+39]..[2427,77552+40])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              <case>
                                pattern (lambda/matching.ml[2428,77594+10]..[2428,77594+14])
                                  Ppat_construct "None" (lambda/matching.ml[2428,77594+10]..[2428,77594+14])
                                  None
                                expression (lambda/matching.ml[2428,77594+18]..[2428,77594+20])
                                  Pexp_construct "()" (lambda/matching.ml[2428,77594+18]..[2428,77594+20])
                                  None
                            ]
                    ]
                    expression (lambda/matching.ml[2430,77624+6]..[2454,78296+10])
                      Pexp_sequence
                      expression (lambda/matching.ml[2430,77624+6]..[2430,77624+33])
                        Pexp_apply
                        expression (lambda/matching.ml[2430,77624+6]..[2430,77624+15])
                          Pexp_ident "List.iter" (lambda/matching.ml[2430,77624+6]..[2430,77624+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2430,77624+16]..[2430,77624+20])
                              Pexp_ident "seen" (lambda/matching.ml[2430,77624+16]..[2430,77624+20])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2430,77624+21]..[2430,77624+33])
                              Pexp_field
                              expression (lambda/matching.ml[2430,77624+21]..[2430,77624+23])
                                Pexp_ident "sw" (lambda/matching.ml[2430,77624+21]..[2430,77624+23])
                              "sw_consts" (lambda/matching.ml[2430,77624+24]..[2430,77624+33])
                        ]
                      expression (lambda/matching.ml[2431,77659+6]..[2454,78296+10])
                        Pexp_sequence
                        expression (lambda/matching.ml[2431,77659+6]..[2431,77659+33])
                          Pexp_apply
                          expression (lambda/matching.ml[2431,77659+6]..[2431,77659+15])
                            Pexp_ident "List.iter" (lambda/matching.ml[2431,77659+6]..[2431,77659+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2431,77659+16]..[2431,77659+20])
                                Pexp_ident "seen" (lambda/matching.ml[2431,77659+16]..[2431,77659+20])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2431,77659+21]..[2431,77659+33])
                                Pexp_field
                                expression (lambda/matching.ml[2431,77659+21]..[2431,77659+23])
                                  Pexp_ident "sw" (lambda/matching.ml[2431,77659+21]..[2431,77659+23])
                                "sw_blocks" (lambda/matching.ml[2431,77659+24]..[2431,77659+33])
                          ]
                        expression (lambda/matching.ml[2432,77694+6]..[2454,78296+10])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2432,77694+10]..[2432,77694+15])
                                Ppat_var "i_max" (lambda/matching.ml[2432,77694+10]..[2432,77694+15])
                              expression (lambda/matching.ml[2432,77694+18]..[2432,77694+26])
                                Pexp_apply
                                expression (lambda/matching.ml[2432,77694+18]..[2432,77694+21])
                                  Pexp_ident "ref" (lambda/matching.ml[2432,77694+18]..[2432,77694+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2432,77694+22]..[2432,77694+26])
                                      Pexp_constant PConst_int (-1,None)
                                ]
                            <def>
                              pattern (lambda/matching.ml[2432,77694+31]..[2432,77694+34])
                                Ppat_var "max" (lambda/matching.ml[2432,77694+31]..[2432,77694+34])
                              expression (lambda/matching.ml[2432,77694+37]..[2432,77694+45])
                                Pexp_apply
                                expression (lambda/matching.ml[2432,77694+37]..[2432,77694+40])
                                  Pexp_ident "ref" (lambda/matching.ml[2432,77694+37]..[2432,77694+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2432,77694+41]..[2432,77694+45])
                                      Pexp_constant PConst_int (-1,None)
                                ]
                          ]
                          expression (lambda/matching.ml[2433,77743+6]..[2454,78296+10])
                            Pexp_sequence
                            expression (lambda/matching.ml[2433,77743+6]..[2439,77869+9])
                              Pexp_apply
                              expression (lambda/matching.ml[2433,77743+6]..[2433,77743+18])
                                Pexp_ident "Hashtbl.iter" (lambda/matching.ml[2433,77743+6]..[2433,77743+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2434,77762+8]..[2438,77856+12])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[2434,77762+13]..[2434,77762+14])
                                      Ppat_var "i" (lambda/matching.ml[2434,77762+13]..[2434,77762+14])
                                    expression (lambda/matching.ml[2434,77762+15]..[2438,77856+11]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[2434,77762+15]..[2434,77762+16])
                                        Ppat_var "c" (lambda/matching.ml[2434,77762+15]..[2434,77762+16])
                                      expression (lambda/matching.ml[2435,77782+10]..[2438,77856+11])
                                        Pexp_ifthenelse
                                        expression (lambda/matching.ml[2435,77782+13]..[2435,77782+21])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2435,77782+15]..[2435,77782+16])
                                            Pexp_ident ">" (lambda/matching.ml[2435,77782+15]..[2435,77782+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2435,77782+13]..[2435,77782+14])
                                                Pexp_ident "c" (lambda/matching.ml[2435,77782+13]..[2435,77782+14])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2435,77782+17]..[2435,77782+21])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2435,77782+17]..[2435,77782+18])
                                                  Pexp_ident "!" (lambda/matching.ml[2435,77782+17]..[2435,77782+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2435,77782+18]..[2435,77782+21])
                                                      Pexp_ident "max" (lambda/matching.ml[2435,77782+18]..[2435,77782+21])
                                                ]
                                          ]
                                        expression (lambda/matching.ml[2435,77782+27]..[2438,77856+11])
                                          Pexp_sequence
                                          expression (lambda/matching.ml[2436,77811+12]..[2436,77811+22])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2436,77811+18]..[2436,77811+20])
                                              Pexp_ident ":=" (lambda/matching.ml[2436,77811+18]..[2436,77811+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2436,77811+12]..[2436,77811+17])
                                                  Pexp_ident "i_max" (lambda/matching.ml[2436,77811+12]..[2436,77811+17])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2436,77811+21]..[2436,77811+22])
                                                  Pexp_ident "i" (lambda/matching.ml[2436,77811+21]..[2436,77811+22])
                                            ]
                                          expression (lambda/matching.ml[2437,77835+12]..[2437,77835+20])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2437,77835+16]..[2437,77835+18])
                                              Pexp_ident ":=" (lambda/matching.ml[2437,77835+16]..[2437,77835+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2437,77835+12]..[2437,77835+15])
                                                  Pexp_ident "max" (lambda/matching.ml[2437,77835+12]..[2437,77835+15])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2437,77835+19]..[2437,77835+20])
                                                  Pexp_ident "c" (lambda/matching.ml[2437,77835+19]..[2437,77835+20])
                                            ]
                                        None
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2439,77869+8]..[2439,77869+9])
                                    Pexp_ident "t" (lambda/matching.ml[2439,77869+8]..[2439,77869+9])
                              ]
                            expression (lambda/matching.ml[2440,77880+6]..[2454,78296+10])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2440,77880+9]..[2440,77880+18])
                                Pexp_apply
                                expression (lambda/matching.ml[2440,77880+14]..[2440,77880+16])
                                  Pexp_ident ">=" (lambda/matching.ml[2440,77880+14]..[2440,77880+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2440,77880+9]..[2440,77880+13])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2440,77880+9]..[2440,77880+10])
                                        Pexp_ident "!" (lambda/matching.ml[2440,77880+9]..[2440,77880+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2440,77880+10]..[2440,77880+13])
                                            Pexp_ident "max" (lambda/matching.ml[2440,77880+10]..[2440,77880+13])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2440,77880+17]..[2440,77880+18])
                                      Pexp_constant PConst_int (3,None)
                                ]
                              expression (lambda/matching.ml[2441,77904+8]..[2452,78275+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[2441,77904+12]..[2441,77904+19])
                                      Ppat_var "default" (lambda/matching.ml[2441,77904+12]..[2441,77904+19])
                                    expression (lambda/matching.ml[2441,77904+22]..[2441,77904+28])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2441,77904+22]..[2441,77904+23])
                                        Pexp_ident "!" (lambda/matching.ml[2441,77904+22]..[2441,77904+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2441,77904+23]..[2441,77904+28])
                                            Pexp_ident "i_max" (lambda/matching.ml[2441,77904+23]..[2441,77904+28])
                                      ]
                                ]
                                expression (lambda/matching.ml[2442,77936+8]..[2452,78275+9])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2442,77936+12]..[2442,77936+18])
                                        Ppat_var "remove" (lambda/matching.ml[2442,77936+12]..[2442,77936+18])
                                      expression (lambda/matching.ml[2443,77957+10]..[2446,78079+29])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2443,77957+10]..[2443,77957+21])
                                          Pexp_ident "List.filter" (lambda/matching.ml[2443,77957+10]..[2443,77957+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2443,77957+22]..[2446,78079+29])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/matching.ml[2443,77957+27]..[2443,77957+35])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[2443,77957+28]..[2443,77957+29])
                                                    Ppat_any
                                                  pattern (lambda/matching.ml[2443,77957+31]..[2443,77957+34])
                                                    Ppat_var "lam" (lambda/matching.ml[2443,77957+31]..[2443,77957+34])
                                                ]
                                              expression (lambda/matching.ml[2444,77996+14]..[2446,78079+28])
                                                Pexp_match
                                                expression (lambda/matching.ml[2444,77996+20]..[2444,77996+38])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2444,77996+20]..[2444,77996+34])
                                                    Pexp_ident "as_simple_exit" (lambda/matching.ml[2444,77996+20]..[2444,77996+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2444,77996+35]..[2444,77996+38])
                                                        Pexp_ident "lam" (lambda/matching.ml[2444,77996+35]..[2444,77996+38])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lambda/matching.ml[2445,78040+16]..[2445,78040+22])
                                                      Ppat_construct "Some" (lambda/matching.ml[2445,78040+16]..[2445,78040+20])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[2445,78040+21]..[2445,78040+22])
                                                          Ppat_var "j" (lambda/matching.ml[2445,78040+21]..[2445,78040+22])
                                                    expression (lambda/matching.ml[2445,78040+26]..[2445,78040+38])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[2445,78040+28]..[2445,78040+30])
                                                        Pexp_ident "<>" (lambda/matching.ml[2445,78040+28]..[2445,78040+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2445,78040+26]..[2445,78040+27])
                                                            Pexp_ident "j" (lambda/matching.ml[2445,78040+26]..[2445,78040+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2445,78040+31]..[2445,78040+38])
                                                            Pexp_ident "default" (lambda/matching.ml[2445,78040+31]..[2445,78040+38])
                                                      ]
                                                  <case>
                                                    pattern (lambda/matching.ml[2446,78079+16]..[2446,78079+20])
                                                      Ppat_construct "None" (lambda/matching.ml[2446,78079+16]..[2446,78079+20])
                                                      None
                                                    expression (lambda/matching.ml[2446,78079+24]..[2446,78079+28])
                                                      Pexp_construct "true" (lambda/matching.ml[2446,78079+24]..[2446,78079+28])
                                                      None
                                                ]
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2448,78120+8]..[2452,78275+9])
                                    Pexp_record
                                    [
                                      "sw_consts" (lambda/matching.ml[2449,78138+10]..[2449,78138+19])
                                        expression (lambda/matching.ml[2449,78138+22]..[2449,78138+41])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2449,78138+22]..[2449,78138+28])
                                            Pexp_ident "remove" (lambda/matching.ml[2449,78138+22]..[2449,78138+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2449,78138+29]..[2449,78138+41])
                                                Pexp_field
                                                expression (lambda/matching.ml[2449,78138+29]..[2449,78138+31])
                                                  Pexp_ident "sw" (lambda/matching.ml[2449,78138+29]..[2449,78138+31])
                                                "sw_consts" (lambda/matching.ml[2449,78138+32]..[2449,78138+41])
                                          ]
                                      "sw_blocks" (lambda/matching.ml[2450,78181+10]..[2450,78181+19])
                                        expression (lambda/matching.ml[2450,78181+22]..[2450,78181+41])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2450,78181+22]..[2450,78181+28])
                                            Pexp_ident "remove" (lambda/matching.ml[2450,78181+22]..[2450,78181+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2450,78181+29]..[2450,78181+41])
                                                Pexp_field
                                                expression (lambda/matching.ml[2450,78181+29]..[2450,78181+31])
                                                  Pexp_ident "sw" (lambda/matching.ml[2450,78181+29]..[2450,78181+31])
                                                "sw_blocks" (lambda/matching.ml[2450,78181+32]..[2450,78181+41])
                                          ]
                                      "sw_failaction" (lambda/matching.ml[2451,78224+10]..[2451,78224+23])
                                        expression (lambda/matching.ml[2451,78224+26]..[2451,78224+50])
                                          Pexp_construct "Some" (lambda/matching.ml[2451,78224+26]..[2451,78224+30])
                                          Some
                                            expression (lambda/matching.ml[2451,78224+31]..[2451,78224+50])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2451,78224+32]..[2451,78224+41])
                                                Pexp_ident "make_exit" (lambda/matching.ml[2451,78224+32]..[2451,78224+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2451,78224+42]..[2451,78224+49])
                                                    Pexp_ident "default" (lambda/matching.ml[2451,78224+42]..[2451,78224+49])
                                              ]
                                    ]
                                    Some
                                      expression (lambda/matching.ml[2448,78120+10]..[2448,78120+12])
                                        Pexp_ident "sw" (lambda/matching.ml[2448,78120+10]..[2448,78120+12])
                              Some
                                expression (lambda/matching.ml[2454,78296+8]..[2454,78296+10])
                                  Pexp_ident "sw" (lambda/matching.ml[2454,78296+8]..[2454,78296+10])
              <case>
                pattern (lambda/matching.ml[2455,78307+4]..[2455,78307+10])
                  Ppat_construct "Some" (lambda/matching.ml[2455,78307+4]..[2455,78307+8])
                  Some
                    []
                    pattern (lambda/matching.ml[2455,78307+9]..[2455,78307+10])
                      Ppat_any
                expression (lambda/matching.ml[2455,78307+14]..[2455,78307+16])
                  Pexp_ident "sw" (lambda/matching.ml[2455,78307+14]..[2455,78307+16])
            ]
    ]
  structure_item (lambda/matching.ml[2457,78325+0]..[2457,78325+36])
    Pstr_module
    "Switcher" (lambda/matching.ml[2457,78325+7]..[2457,78325+15])
      module_expr (lambda/matching.ml[2457,78325+18]..[2457,78325+36])
        Pmod_apply
        module_expr (lambda/matching.ml[2457,78325+18]..[2457,78325+29])
          Pmod_ident "Switch.Make" (lambda/matching.ml[2457,78325+18]..[2457,78325+29])
        module_expr (lambda/matching.ml[2457,78325+31]..[2457,78325+35])
          Pmod_ident "SArg" (lambda/matching.ml[2457,78325+31]..[2457,78325+35])
  structure_item (lambda/matching.ml[2458,78362+0]..[2458,78362+11])
    Pstr_open Fresh
    module_expr (lambda/matching.ml[2458,78362+5]..[2458,78362+11])
      Pmod_ident "Switch" (lambda/matching.ml[2458,78362+5]..[2458,78362+11])
  structure_item (lambda/matching.ml[2460,78375+0]..[2463,78437+28])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2460,78375+8]..[2460,78375+12])
          Ppat_var "last" (lambda/matching.ml[2460,78375+8]..[2460,78375+12])
        expression (lambda/matching.ml[2460,78375+13]..[2463,78437+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2460,78375+13]..[2460,78375+16])
            Ppat_var "def" (lambda/matching.ml[2460,78375+13]..[2460,78375+16])
          expression (lambda/matching.ml[2460,78375+19]..[2463,78437+28])
            Pexp_function
            [
              <case>
                pattern (lambda/matching.ml[2461,78403+4]..[2461,78403+6])
                  Ppat_construct "[]" (lambda/matching.ml[2461,78403+4]..[2461,78403+6])
                  None
                expression (lambda/matching.ml[2461,78403+10]..[2461,78403+13])
                  Pexp_ident "def" (lambda/matching.ml[2461,78403+10]..[2461,78403+13])
              <case>
                pattern (lambda/matching.ml[2462,78417+4]..[2462,78417+14])
                  Ppat_construct "::" (lambda/matching.ml[2462,78417+6]..[2462,78417+14]) ghost
                  Some
                    []
                    pattern (lambda/matching.ml[2462,78417+6]..[2462,78417+14]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2462,78417+6]..[2462,78417+12])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2462,78417+7]..[2462,78417+8])
                              Ppat_var "x" (lambda/matching.ml[2462,78417+7]..[2462,78417+8])
                            pattern (lambda/matching.ml[2462,78417+10]..[2462,78417+11])
                              Ppat_any
                          ]
                        pattern (lambda/matching.ml[2462,78417+13]..[2462,78417+14]) ghost
                          Ppat_construct "[]" (lambda/matching.ml[2462,78417+13]..[2462,78417+14]) ghost
                          None
                      ]
                expression (lambda/matching.ml[2462,78417+18]..[2462,78417+19])
                  Pexp_ident "x" (lambda/matching.ml[2462,78417+18]..[2462,78417+19])
              <case>
                pattern (lambda/matching.ml[2463,78437+4]..[2463,78437+12])
                  Ppat_construct "::" (lambda/matching.ml[2463,78437+6]..[2463,78437+8])
                  Some
                    []
                    pattern (lambda/matching.ml[2463,78437+4]..[2463,78437+12]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2463,78437+4]..[2463,78437+5])
                          Ppat_any
                        pattern (lambda/matching.ml[2463,78437+9]..[2463,78437+12])
                          Ppat_var "rem" (lambda/matching.ml[2463,78437+9]..[2463,78437+12])
                      ]
                expression (lambda/matching.ml[2463,78437+16]..[2463,78437+28])
                  Pexp_apply
                  expression (lambda/matching.ml[2463,78437+16]..[2463,78437+20])
                    Pexp_ident "last" (lambda/matching.ml[2463,78437+16]..[2463,78437+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2463,78437+21]..[2463,78437+24])
                        Pexp_ident "def" (lambda/matching.ml[2463,78437+21]..[2463,78437+24])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2463,78437+25]..[2463,78437+28])
                        Pexp_ident "rem" (lambda/matching.ml[2463,78437+25]..[2463,78437+28])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[2465,78467+0]..[2468,78531+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2465,78467+4]..[2465,78467+13])
          Ppat_var "get_edges" (lambda/matching.ml[2465,78467+4]..[2465,78467+13])
        expression (lambda/matching.ml[2465,78467+14]..[2468,78531+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2465,78467+14]..[2465,78467+17])
            Ppat_var "low" (lambda/matching.ml[2465,78467+14]..[2465,78467+17])
          expression (lambda/matching.ml[2465,78467+18]..[2468,78531+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2465,78467+18]..[2465,78467+22])
              Ppat_var "high" (lambda/matching.ml[2465,78467+18]..[2465,78467+22])
            expression (lambda/matching.ml[2465,78467+23]..[2468,78531+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2465,78467+23]..[2465,78467+24])
                Ppat_var "l" (lambda/matching.ml[2465,78467+23]..[2465,78467+24])
              expression (lambda/matching.ml[2466,78494+2]..[2468,78531+35])
                Pexp_match
                expression (lambda/matching.ml[2466,78494+8]..[2466,78494+9])
                  Pexp_ident "l" (lambda/matching.ml[2466,78494+8]..[2466,78494+9])
                [
                  <case>
                    pattern (lambda/matching.ml[2467,78509+4]..[2467,78509+6])
                      Ppat_construct "[]" (lambda/matching.ml[2467,78509+4]..[2467,78509+6])
                      None
                    expression (lambda/matching.ml[2467,78509+10]..[2467,78509+21])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[2467,78509+11]..[2467,78509+14])
                          Pexp_ident "low" (lambda/matching.ml[2467,78509+11]..[2467,78509+14])
                        expression (lambda/matching.ml[2467,78509+16]..[2467,78509+20])
                          Pexp_ident "high" (lambda/matching.ml[2467,78509+16]..[2467,78509+20])
                      ]
                  <case>
                    pattern (lambda/matching.ml[2468,78531+4]..[2468,78531+15])
                      Ppat_construct "::" (lambda/matching.ml[2468,78531+11]..[2468,78531+13])
                      Some
                        []
                        pattern (lambda/matching.ml[2468,78531+4]..[2468,78531+15]) ghost
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2468,78531+4]..[2468,78531+10])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2468,78531+5]..[2468,78531+6])
                                  Ppat_var "x" (lambda/matching.ml[2468,78531+5]..[2468,78531+6])
                                pattern (lambda/matching.ml[2468,78531+8]..[2468,78531+9])
                                  Ppat_any
                              ]
                            pattern (lambda/matching.ml[2468,78531+14]..[2468,78531+15])
                              Ppat_any
                          ]
                    expression (lambda/matching.ml[2468,78531+19]..[2468,78531+35])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[2468,78531+20]..[2468,78531+21])
                          Pexp_ident "x" (lambda/matching.ml[2468,78531+20]..[2468,78531+21])
                        expression (lambda/matching.ml[2468,78531+23]..[2468,78531+34])
                          Pexp_apply
                          expression (lambda/matching.ml[2468,78531+23]..[2468,78531+27])
                            Pexp_ident "last" (lambda/matching.ml[2468,78531+23]..[2468,78531+27])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2468,78531+28]..[2468,78531+32])
                                Pexp_ident "high" (lambda/matching.ml[2468,78531+28]..[2468,78531+32])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2468,78531+33]..[2468,78531+34])
                                Pexp_ident "l" (lambda/matching.ml[2468,78531+33]..[2468,78531+34])
                          ]
                      ]
                ]
    ]
  structure_item (lambda/matching.ml[2470,78568+0]..[2525,80360+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2470,78568+4]..[2470,78568+23])
          Ppat_var "as_interval_canfail" (lambda/matching.ml[2470,78568+4]..[2470,78568+23])
        expression (lambda/matching.ml[2470,78568+24]..[2525,80360+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2470,78568+24]..[2470,78568+28])
            Ppat_var "fail" (lambda/matching.ml[2470,78568+24]..[2470,78568+28])
          expression (lambda/matching.ml[2470,78568+29]..[2525,80360+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2470,78568+29]..[2470,78568+32])
              Ppat_var "low" (lambda/matching.ml[2470,78568+29]..[2470,78568+32])
            expression (lambda/matching.ml[2470,78568+33]..[2525,80360+26]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2470,78568+33]..[2470,78568+37])
                Ppat_var "high" (lambda/matching.ml[2470,78568+33]..[2470,78568+37])
              expression (lambda/matching.ml[2470,78568+38]..[2525,80360+26]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2470,78568+38]..[2470,78568+39])
                  Ppat_var "l" (lambda/matching.ml[2470,78568+38]..[2470,78568+39])
                expression (lambda/matching.ml[2471,78610+2]..[2525,80360+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2471,78610+6]..[2471,78610+11])
                        Ppat_var "store" (lambda/matching.ml[2471,78610+6]..[2471,78610+11])
                      expression (lambda/matching.ml[2471,78610+14]..[2471,78610+34])
                        Pexp_apply
                        expression (lambda/matching.ml[2471,78610+14]..[2471,78610+31])
                          Pexp_ident "StoreExp.mk_store" (lambda/matching.ml[2471,78610+14]..[2471,78610+31])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2471,78610+32]..[2471,78610+34])
                              Pexp_construct "()" (lambda/matching.ml[2471,78610+32]..[2471,78610+34])
                              None
                        ]
                  ]
                  expression (lambda/matching.ml[2472,78648+2]..[2525,80360+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[2472,78648+6]..[2472,78648+14])
                          Ppat_var "do_store" (lambda/matching.ml[2472,78648+6]..[2472,78648+14])
                        expression (lambda/matching.ml[2472,78648+15]..[2477,78783+5]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2472,78648+15]..[2472,78648+19])
                            Ppat_var "_tag" (lambda/matching.ml[2472,78648+15]..[2472,78648+19])
                          expression (lambda/matching.ml[2472,78648+20]..[2477,78783+5]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2472,78648+20]..[2472,78648+23])
                              Ppat_var "act" (lambda/matching.ml[2472,78648+20]..[2472,78648+23])
                            expression (lambda/matching.ml[2473,78674+4]..[2477,78783+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[2473,78674+8]..[2473,78674+9])
                                    Ppat_var "i" (lambda/matching.ml[2473,78674+8]..[2473,78674+9])
                                  expression (lambda/matching.ml[2473,78674+12]..[2473,78674+34])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2473,78674+12]..[2473,78674+27])
                                      Pexp_field
                                      expression (lambda/matching.ml[2473,78674+12]..[2473,78674+17])
                                        Pexp_ident "store" (lambda/matching.ml[2473,78674+12]..[2473,78674+17])
                                      "act_store" (lambda/matching.ml[2473,78674+18]..[2473,78674+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2473,78674+28]..[2473,78674+30])
                                          Pexp_construct "()" (lambda/matching.ml[2473,78674+28]..[2473,78674+30])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2473,78674+31]..[2473,78674+34])
                                          Pexp_ident "act" (lambda/matching.ml[2473,78674+31]..[2473,78674+34])
                                    ]
                              ]
                              expression (lambda/matching.ml[2477,78783+4]..[2477,78783+5])
                                Pexp_ident "i" (lambda/matching.ml[2477,78783+4]..[2477,78783+5])
                    ]
                    expression (lambda/matching.ml[2479,78794+2]..[2525,80360+26])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (lambda/matching.ml[2479,78794+10]..[2479,78794+20])
                            Ppat_var "nofail_rec" (lambda/matching.ml[2479,78794+10]..[2479,78794+20])
                          expression (lambda/matching.ml[2479,78794+21]..[2500,79616+41]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2479,78794+21]..[2479,78794+28])
                              Ppat_var "cur_low" (lambda/matching.ml[2479,78794+21]..[2479,78794+28])
                            expression (lambda/matching.ml[2479,78794+29]..[2500,79616+41]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2479,78794+29]..[2479,78794+37])
                                Ppat_var "cur_high" (lambda/matching.ml[2479,78794+29]..[2479,78794+37])
                              expression (lambda/matching.ml[2479,78794+38]..[2500,79616+41]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[2479,78794+38]..[2479,78794+45])
                                  Ppat_var "cur_act" (lambda/matching.ml[2479,78794+38]..[2479,78794+45])
                                expression (lambda/matching.ml[2479,78794+48]..[2500,79616+41])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[2480,78851+6]..[2480,78851+8])
                                        Ppat_construct "[]" (lambda/matching.ml[2480,78851+6]..[2480,78851+8])
                                        None
                                      expression (lambda/matching.ml[2481,78863+8]..[2484,78951+67])
                                        Pexp_ifthenelse
                                        expression (lambda/matching.ml[2481,78863+11]..[2481,78863+26])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2481,78863+20]..[2481,78863+21])
                                            Pexp_ident "=" (lambda/matching.ml[2481,78863+20]..[2481,78863+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2481,78863+11]..[2481,78863+19])
                                                Pexp_ident "cur_high" (lambda/matching.ml[2481,78863+11]..[2481,78863+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2481,78863+22]..[2481,78863+26])
                                                Pexp_ident "high" (lambda/matching.ml[2481,78863+22]..[2481,78863+26])
                                          ]
                                        expression (lambda/matching.ml[2482,78895+10]..[2482,78895+42])
                                          Pexp_construct "::" (lambda/matching.ml[2482,78895+12]..[2482,78895+42]) ghost
                                          Some
                                            expression (lambda/matching.ml[2482,78895+12]..[2482,78895+42]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2482,78895+12]..[2482,78895+40])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[2482,78895+13]..[2482,78895+20])
                                                      Pexp_ident "cur_low" (lambda/matching.ml[2482,78895+13]..[2482,78895+20])
                                                    expression (lambda/matching.ml[2482,78895+22]..[2482,78895+30])
                                                      Pexp_ident "cur_high" (lambda/matching.ml[2482,78895+22]..[2482,78895+30])
                                                    expression (lambda/matching.ml[2482,78895+32]..[2482,78895+39])
                                                      Pexp_ident "cur_act" (lambda/matching.ml[2482,78895+32]..[2482,78895+39])
                                                  ]
                                                expression (lambda/matching.ml[2482,78895+41]..[2482,78895+42]) ghost
                                                  Pexp_construct "[]" (lambda/matching.ml[2482,78895+41]..[2482,78895+42]) ghost
                                                  None
                                              ]
                                        Some
                                          expression (lambda/matching.ml[2484,78951+10]..[2484,78951+67])
                                            Pexp_construct "::" (lambda/matching.ml[2484,78951+12]..[2484,78951+67]) ghost
                                            Some
                                              expression (lambda/matching.ml[2484,78951+12]..[2484,78951+67]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2484,78951+12]..[2484,78951+40])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2484,78951+13]..[2484,78951+20])
                                                        Pexp_ident "cur_low" (lambda/matching.ml[2484,78951+13]..[2484,78951+20])
                                                      expression (lambda/matching.ml[2484,78951+22]..[2484,78951+30])
                                                        Pexp_ident "cur_high" (lambda/matching.ml[2484,78951+22]..[2484,78951+30])
                                                      expression (lambda/matching.ml[2484,78951+32]..[2484,78951+39])
                                                        Pexp_ident "cur_act" (lambda/matching.ml[2484,78951+32]..[2484,78951+39])
                                                    ]
                                                  expression (lambda/matching.ml[2484,78951+42]..[2484,78951+67]) ghost
                                                    Pexp_construct "::" (lambda/matching.ml[2484,78951+42]..[2484,78951+67]) ghost
                                                    Some
                                                      expression (lambda/matching.ml[2484,78951+42]..[2484,78951+67]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2484,78951+42]..[2484,78951+65])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2484,78951+43]..[2484,78951+55])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2484,78951+52]..[2484,78951+53])
                                                                  Pexp_ident "+" (lambda/matching.ml[2484,78951+52]..[2484,78951+53])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2484,78951+43]..[2484,78951+51])
                                                                      Pexp_ident "cur_high" (lambda/matching.ml[2484,78951+43]..[2484,78951+51])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2484,78951+54]..[2484,78951+55])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                              expression (lambda/matching.ml[2484,78951+57]..[2484,78951+61])
                                                                Pexp_ident "high" (lambda/matching.ml[2484,78951+57]..[2484,78951+61])
                                                              expression (lambda/matching.ml[2484,78951+63]..[2484,78951+64])
                                                                Pexp_constant PConst_int (0,None)
                                                            ]
                                                          expression (lambda/matching.ml[2484,78951+66]..[2484,78951+67]) ghost
                                                            Pexp_construct "[]" (lambda/matching.ml[2484,78951+66]..[2484,78951+67]) ghost
                                                            None
                                                        ]
                                                ]
                                    <case>
                                      pattern (lambda/matching.ml[2485,79019+6]..[2485,79019+30])
                                        Ppat_alias "all" (lambda/matching.ml[2485,79019+27]..[2485,79019+30])
                                        pattern (lambda/matching.ml[2485,79019+6]..[2485,79019+23])
                                          Ppat_construct "::" (lambda/matching.ml[2485,79019+17]..[2485,79019+19])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[2485,79019+6]..[2485,79019+23]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[2485,79019+6]..[2485,79019+16])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[2485,79019+7]..[2485,79019+8])
                                                      Ppat_var "i" (lambda/matching.ml[2485,79019+7]..[2485,79019+8])
                                                    pattern (lambda/matching.ml[2485,79019+10]..[2485,79019+15])
                                                      Ppat_var "act_i" (lambda/matching.ml[2485,79019+10]..[2485,79019+15])
                                                  ]
                                                pattern (lambda/matching.ml[2485,79019+20]..[2485,79019+23])
                                                  Ppat_var "rem" (lambda/matching.ml[2485,79019+20]..[2485,79019+23])
                                              ]
                                      expression (lambda/matching.ml[2486,79053+8]..[2500,79616+41])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[2486,79053+12]..[2486,79053+21])
                                              Ppat_var "act_index" (lambda/matching.ml[2486,79053+12]..[2486,79053+21])
                                            expression (lambda/matching.ml[2486,79053+24]..[2486,79053+43])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2486,79053+24]..[2486,79053+32])
                                                Pexp_ident "do_store" (lambda/matching.ml[2486,79053+24]..[2486,79053+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2486,79053+33]..[2486,79053+37])
                                                    Pexp_constant PConst_string("NO",(lambda/matching.ml[2486,79053+34]..[2486,79053+36]),None)
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2486,79053+38]..[2486,79053+43])
                                                    Pexp_ident "act_i" (lambda/matching.ml[2486,79053+38]..[2486,79053+43])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[2487,79100+8]..[2500,79616+41])
                                          Pexp_ifthenelse
                                          expression (lambda/matching.ml[2487,79100+11]..[2487,79100+27])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2487,79100+24]..[2487,79100+25])
                                              Pexp_ident "=" (lambda/matching.ml[2487,79100+24]..[2487,79100+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2487,79100+11]..[2487,79100+23])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2487,79100+20]..[2487,79100+21])
                                                    Pexp_ident "+" (lambda/matching.ml[2487,79100+20]..[2487,79100+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2487,79100+11]..[2487,79100+19])
                                                        Pexp_ident "cur_high" (lambda/matching.ml[2487,79100+11]..[2487,79100+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2487,79100+22]..[2487,79100+23])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2487,79100+26]..[2487,79100+27])
                                                  Pexp_ident "i" (lambda/matching.ml[2487,79100+26]..[2487,79100+27])
                                            ]
                                          expression (lambda/matching.ml[2488,79133+10]..[2493,79326+69])
                                            Pexp_ifthenelse
                                            expression (lambda/matching.ml[2488,79133+13]..[2488,79133+32])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2488,79133+23]..[2488,79133+24])
                                                Pexp_ident "=" (lambda/matching.ml[2488,79133+23]..[2488,79133+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2488,79133+13]..[2488,79133+22])
                                                    Pexp_ident "act_index" (lambda/matching.ml[2488,79133+13]..[2488,79133+22])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2488,79133+25]..[2488,79133+32])
                                                    Pexp_ident "cur_act" (lambda/matching.ml[2488,79133+25]..[2488,79133+32])
                                              ]
                                            expression (lambda/matching.ml[2489,79171+12]..[2489,79171+44])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2489,79171+12]..[2489,79171+22])
                                                Pexp_ident "nofail_rec" (lambda/matching.ml[2489,79171+12]..[2489,79171+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2489,79171+23]..[2489,79171+30])
                                                    Pexp_ident "cur_low" (lambda/matching.ml[2489,79171+23]..[2489,79171+30])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2489,79171+31]..[2489,79171+32])
                                                    Pexp_ident "i" (lambda/matching.ml[2489,79171+31]..[2489,79171+32])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2489,79171+33]..[2489,79171+40])
                                                    Pexp_ident "cur_act" (lambda/matching.ml[2489,79171+33]..[2489,79171+40])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2489,79171+41]..[2489,79171+44])
                                                    Pexp_ident "rem" (lambda/matching.ml[2489,79171+41]..[2489,79171+44])
                                              ]
                                            Some
                                              expression (lambda/matching.ml[2490,79216+15]..[2493,79326+69])
                                                Pexp_ifthenelse
                                                expression (lambda/matching.ml[2490,79216+18]..[2490,79216+31])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2490,79216+28]..[2490,79216+29])
                                                    Pexp_ident "=" (lambda/matching.ml[2490,79216+28]..[2490,79216+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2490,79216+18]..[2490,79216+27])
                                                        Pexp_ident "act_index" (lambda/matching.ml[2490,79216+18]..[2490,79216+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2490,79216+30]..[2490,79216+31])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (lambda/matching.ml[2491,79253+12]..[2491,79253+57])
                                                  Pexp_construct "::" (lambda/matching.ml[2491,79253+38]..[2491,79253+40])
                                                  Some
                                                    expression (lambda/matching.ml[2491,79253+12]..[2491,79253+57]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2491,79253+12]..[2491,79253+37])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2491,79253+13]..[2491,79253+20])
                                                              Pexp_ident "cur_low" (lambda/matching.ml[2491,79253+13]..[2491,79253+20])
                                                            expression (lambda/matching.ml[2491,79253+22]..[2491,79253+27])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2491,79253+24]..[2491,79253+25])
                                                                Pexp_ident "-" (lambda/matching.ml[2491,79253+24]..[2491,79253+25])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2491,79253+22]..[2491,79253+23])
                                                                    Pexp_ident "i" (lambda/matching.ml[2491,79253+22]..[2491,79253+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2491,79253+26]..[2491,79253+27])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                            expression (lambda/matching.ml[2491,79253+29]..[2491,79253+36])
                                                              Pexp_ident "cur_act" (lambda/matching.ml[2491,79253+29]..[2491,79253+36])
                                                          ]
                                                        expression (lambda/matching.ml[2491,79253+41]..[2491,79253+57])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[2491,79253+41]..[2491,79253+49])
                                                            Pexp_ident "fail_rec" (lambda/matching.ml[2491,79253+41]..[2491,79253+49])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2491,79253+50]..[2491,79253+51])
                                                                Pexp_ident "i" (lambda/matching.ml[2491,79253+50]..[2491,79253+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2491,79253+52]..[2491,79253+53])
                                                                Pexp_ident "i" (lambda/matching.ml[2491,79253+52]..[2491,79253+53])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2491,79253+54]..[2491,79253+57])
                                                                Pexp_ident "rem" (lambda/matching.ml[2491,79253+54]..[2491,79253+57])
                                                          ]
                                                      ]
                                                Some
                                                  expression (lambda/matching.ml[2493,79326+12]..[2493,79326+69])
                                                    Pexp_construct "::" (lambda/matching.ml[2493,79326+38]..[2493,79326+40])
                                                    Some
                                                      expression (lambda/matching.ml[2493,79326+12]..[2493,79326+69]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2493,79326+12]..[2493,79326+37])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2493,79326+13]..[2493,79326+20])
                                                                Pexp_ident "cur_low" (lambda/matching.ml[2493,79326+13]..[2493,79326+20])
                                                              expression (lambda/matching.ml[2493,79326+22]..[2493,79326+27])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2493,79326+24]..[2493,79326+25])
                                                                  Pexp_ident "-" (lambda/matching.ml[2493,79326+24]..[2493,79326+25])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2493,79326+22]..[2493,79326+23])
                                                                      Pexp_ident "i" (lambda/matching.ml[2493,79326+22]..[2493,79326+23])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2493,79326+26]..[2493,79326+27])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                              expression (lambda/matching.ml[2493,79326+29]..[2493,79326+36])
                                                                Pexp_ident "cur_act" (lambda/matching.ml[2493,79326+29]..[2493,79326+36])
                                                            ]
                                                          expression (lambda/matching.ml[2493,79326+41]..[2493,79326+69])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[2493,79326+41]..[2493,79326+51])
                                                              Pexp_ident "nofail_rec" (lambda/matching.ml[2493,79326+41]..[2493,79326+51])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2493,79326+52]..[2493,79326+53])
                                                                  Pexp_ident "i" (lambda/matching.ml[2493,79326+52]..[2493,79326+53])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2493,79326+54]..[2493,79326+55])
                                                                  Pexp_ident "i" (lambda/matching.ml[2493,79326+54]..[2493,79326+55])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2493,79326+56]..[2493,79326+65])
                                                                  Pexp_ident "act_index" (lambda/matching.ml[2493,79326+56]..[2493,79326+65])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2493,79326+66]..[2493,79326+69])
                                                                  Pexp_ident "rem" (lambda/matching.ml[2493,79326+66]..[2493,79326+69])
                                                            ]
                                                        ]
                                          Some
                                            expression (lambda/matching.ml[2494,79396+13]..[2500,79616+41])
                                              Pexp_ifthenelse
                                              expression (lambda/matching.ml[2494,79396+16]..[2494,79396+29])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2494,79396+26]..[2494,79396+27])
                                                  Pexp_ident "=" (lambda/matching.ml[2494,79396+26]..[2494,79396+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2494,79396+16]..[2494,79396+25])
                                                      Pexp_ident "act_index" (lambda/matching.ml[2494,79396+16]..[2494,79396+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2494,79396+28]..[2494,79396+29])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (lambda/matching.ml[2495,79431+10]..[2496,79470+55])
                                                Pexp_construct "::" (lambda/matching.ml[2496,79470+10]..[2496,79470+12])
                                                Some
                                                  expression (lambda/matching.ml[2495,79431+10]..[2496,79470+55]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2495,79431+10]..[2495,79431+38])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2495,79431+11]..[2495,79431+18])
                                                            Pexp_ident "cur_low" (lambda/matching.ml[2495,79431+11]..[2495,79431+18])
                                                          expression (lambda/matching.ml[2495,79431+20]..[2495,79431+28])
                                                            Pexp_ident "cur_high" (lambda/matching.ml[2495,79431+20]..[2495,79431+28])
                                                          expression (lambda/matching.ml[2495,79431+30]..[2495,79431+37])
                                                            Pexp_ident "cur_act" (lambda/matching.ml[2495,79431+30]..[2495,79431+37])
                                                        ]
                                                      expression (lambda/matching.ml[2496,79470+13]..[2496,79470+55])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2496,79470+13]..[2496,79470+21])
                                                          Pexp_ident "fail_rec" (lambda/matching.ml[2496,79470+13]..[2496,79470+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2496,79470+22]..[2496,79470+36])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2496,79470+32]..[2496,79470+33])
                                                                Pexp_ident "+" (lambda/matching.ml[2496,79470+32]..[2496,79470+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2496,79470+23]..[2496,79470+31])
                                                                    Pexp_ident "cur_high" (lambda/matching.ml[2496,79470+23]..[2496,79470+31])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2496,79470+34]..[2496,79470+35])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2496,79470+37]..[2496,79470+51])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2496,79470+47]..[2496,79470+48])
                                                                Pexp_ident "+" (lambda/matching.ml[2496,79470+47]..[2496,79470+48])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2496,79470+38]..[2496,79470+46])
                                                                    Pexp_ident "cur_high" (lambda/matching.ml[2496,79470+38]..[2496,79470+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2496,79470+49]..[2496,79470+50])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2496,79470+52]..[2496,79470+55])
                                                              Pexp_ident "all" (lambda/matching.ml[2496,79470+52]..[2496,79470+55])
                                                        ]
                                                    ]
                                              Some
                                                expression (lambda/matching.ml[2498,79539+10]..[2500,79616+41])
                                                  Pexp_construct "::" (lambda/matching.ml[2499,79578+10]..[2499,79578+12])
                                                  Some
                                                    expression (lambda/matching.ml[2498,79539+10]..[2500,79616+41]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2498,79539+10]..[2498,79539+38])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2498,79539+11]..[2498,79539+18])
                                                              Pexp_ident "cur_low" (lambda/matching.ml[2498,79539+11]..[2498,79539+18])
                                                            expression (lambda/matching.ml[2498,79539+20]..[2498,79539+28])
                                                              Pexp_ident "cur_high" (lambda/matching.ml[2498,79539+20]..[2498,79539+28])
                                                            expression (lambda/matching.ml[2498,79539+30]..[2498,79539+37])
                                                              Pexp_ident "cur_act" (lambda/matching.ml[2498,79539+30]..[2498,79539+37])
                                                          ]
                                                        expression (lambda/matching.ml[2499,79578+13]..[2500,79616+41])
                                                          Pexp_construct "::" (lambda/matching.ml[2500,79616+10]..[2500,79616+12])
                                                          Some
                                                            expression (lambda/matching.ml[2499,79578+13]..[2500,79616+41]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[2499,79578+13]..[2499,79578+37])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[2499,79578+14]..[2499,79578+26])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[2499,79578+23]..[2499,79578+24])
Pexp_ident "+" (lambda/matching.ml[2499,79578+23]..[2499,79578+24])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[2499,79578+14]..[2499,79578+22])
    Pexp_ident "cur_high" (lambda/matching.ml[2499,79578+14]..[2499,79578+22])
<arg>
Nolabel
  expression (lambda/matching.ml[2499,79578+25]..[2499,79578+26])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                    expression (lambda/matching.ml[2499,79578+28]..[2499,79578+33])
                                                                      Pexp_apply
                                                                      expression (lambda/matching.ml[2499,79578+30]..[2499,79578+31])
Pexp_ident "-" (lambda/matching.ml[2499,79578+30]..[2499,79578+31])
                                                                      [
<arg>
Nolabel
  expression (lambda/matching.ml[2499,79578+28]..[2499,79578+29])
    Pexp_ident "i" (lambda/matching.ml[2499,79578+28]..[2499,79578+29])
<arg>
Nolabel
  expression (lambda/matching.ml[2499,79578+32]..[2499,79578+33])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                    expression (lambda/matching.ml[2499,79578+35]..[2499,79578+36])
                                                                      Pexp_constant PConst_int (0,None)
                                                                  ]
                                                                expression (lambda/matching.ml[2500,79616+13]..[2500,79616+41])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[2500,79616+13]..[2500,79616+23])
                                                                    Pexp_ident "nofail_rec" (lambda/matching.ml[2500,79616+13]..[2500,79616+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2500,79616+24]..[2500,79616+25])
Pexp_ident "i" (lambda/matching.ml[2500,79616+24]..[2500,79616+25])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2500,79616+26]..[2500,79616+27])
Pexp_ident "i" (lambda/matching.ml[2500,79616+26]..[2500,79616+27])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2500,79616+28]..[2500,79616+37])
Pexp_ident "act_index" (lambda/matching.ml[2500,79616+28]..[2500,79616+37])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2500,79616+38]..[2500,79616+41])
Pexp_ident "rem" (lambda/matching.ml[2500,79616+38]..[2500,79616+41])
                                                                  ]
                                                              ]
                                                      ]
                                  ]
                        <def>
                          pattern (lambda/matching.ml[2501,79658+6]..[2501,79658+14])
                            Ppat_var "fail_rec" (lambda/matching.ml[2501,79658+6]..[2501,79658+14])
                          expression (lambda/matching.ml[2501,79658+15]..[2508,79883+57]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2501,79658+15]..[2501,79658+22])
                              Ppat_var "cur_low" (lambda/matching.ml[2501,79658+15]..[2501,79658+22])
                            expression (lambda/matching.ml[2501,79658+23]..[2508,79883+57]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2501,79658+23]..[2501,79658+31])
                                Ppat_var "cur_high" (lambda/matching.ml[2501,79658+23]..[2501,79658+31])
                              expression (lambda/matching.ml[2501,79658+34]..[2508,79883+57])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/matching.ml[2502,79701+6]..[2502,79701+8])
                                      Ppat_construct "[]" (lambda/matching.ml[2502,79701+6]..[2502,79701+8])
                                      None
                                    expression (lambda/matching.ml[2502,79701+12]..[2502,79701+38])
                                      Pexp_construct "::" (lambda/matching.ml[2502,79701+14]..[2502,79701+38]) ghost
                                      Some
                                        expression (lambda/matching.ml[2502,79701+14]..[2502,79701+38]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2502,79701+14]..[2502,79701+36])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2502,79701+15]..[2502,79701+22])
                                                  Pexp_ident "cur_low" (lambda/matching.ml[2502,79701+15]..[2502,79701+22])
                                                expression (lambda/matching.ml[2502,79701+24]..[2502,79701+32])
                                                  Pexp_ident "cur_high" (lambda/matching.ml[2502,79701+24]..[2502,79701+32])
                                                expression (lambda/matching.ml[2502,79701+34]..[2502,79701+35])
                                                  Pexp_constant PConst_int (0,None)
                                              ]
                                            expression (lambda/matching.ml[2502,79701+37]..[2502,79701+38]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[2502,79701+37]..[2502,79701+38]) ghost
                                              None
                                          ]
                                  <case>
                                    pattern (lambda/matching.ml[2503,79740+6]..[2503,79740+23])
                                      Ppat_construct "::" (lambda/matching.ml[2503,79740+17]..[2503,79740+19])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2503,79740+6]..[2503,79740+23]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[2503,79740+6]..[2503,79740+16])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[2503,79740+7]..[2503,79740+8])
                                                  Ppat_var "i" (lambda/matching.ml[2503,79740+7]..[2503,79740+8])
                                                pattern (lambda/matching.ml[2503,79740+10]..[2503,79740+15])
                                                  Ppat_var "act_i" (lambda/matching.ml[2503,79740+10]..[2503,79740+15])
                                              ]
                                            pattern (lambda/matching.ml[2503,79740+20]..[2503,79740+23])
                                              Ppat_var "rem" (lambda/matching.ml[2503,79740+20]..[2503,79740+23])
                                          ]
                                    expression (lambda/matching.ml[2504,79767+8]..[2508,79883+57])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2504,79767+12]..[2504,79767+17])
                                            Ppat_var "index" (lambda/matching.ml[2504,79767+12]..[2504,79767+17])
                                          expression (lambda/matching.ml[2504,79767+20]..[2504,79767+40])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2504,79767+20]..[2504,79767+28])
                                              Pexp_ident "do_store" (lambda/matching.ml[2504,79767+20]..[2504,79767+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2504,79767+29]..[2504,79767+34])
                                                  Pexp_constant PConst_string("YES",(lambda/matching.ml[2504,79767+30]..[2504,79767+33]),None)
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2504,79767+35]..[2504,79767+40])
                                                  Pexp_ident "act_i" (lambda/matching.ml[2504,79767+35]..[2504,79767+40])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2505,79811+8]..[2508,79883+57])
                                        Pexp_ifthenelse
                                        expression (lambda/matching.ml[2505,79811+11]..[2505,79811+20])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2505,79811+17]..[2505,79811+18])
                                            Pexp_ident "=" (lambda/matching.ml[2505,79811+17]..[2505,79811+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2505,79811+11]..[2505,79811+16])
                                                Pexp_ident "index" (lambda/matching.ml[2505,79811+11]..[2505,79811+16])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2505,79811+19]..[2505,79811+20])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (lambda/matching.ml[2506,79837+10]..[2506,79837+32])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2506,79837+10]..[2506,79837+18])
                                            Pexp_ident "fail_rec" (lambda/matching.ml[2506,79837+10]..[2506,79837+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2506,79837+19]..[2506,79837+26])
                                                Pexp_ident "cur_low" (lambda/matching.ml[2506,79837+19]..[2506,79837+26])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2506,79837+27]..[2506,79837+28])
                                                Pexp_ident "i" (lambda/matching.ml[2506,79837+27]..[2506,79837+28])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2506,79837+29]..[2506,79837+32])
                                                Pexp_ident "rem" (lambda/matching.ml[2506,79837+29]..[2506,79837+32])
                                          ]
                                        Some
                                          expression (lambda/matching.ml[2508,79883+10]..[2508,79883+57])
                                            Pexp_construct "::" (lambda/matching.ml[2508,79883+30]..[2508,79883+32])
                                            Some
                                              expression (lambda/matching.ml[2508,79883+10]..[2508,79883+57]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2508,79883+10]..[2508,79883+29])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2508,79883+11]..[2508,79883+18])
                                                        Pexp_ident "cur_low" (lambda/matching.ml[2508,79883+11]..[2508,79883+18])
                                                      expression (lambda/matching.ml[2508,79883+20]..[2508,79883+25])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2508,79883+22]..[2508,79883+23])
                                                          Pexp_ident "-" (lambda/matching.ml[2508,79883+22]..[2508,79883+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2508,79883+20]..[2508,79883+21])
                                                              Pexp_ident "i" (lambda/matching.ml[2508,79883+20]..[2508,79883+21])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2508,79883+24]..[2508,79883+25])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                      expression (lambda/matching.ml[2508,79883+27]..[2508,79883+28])
                                                        Pexp_constant PConst_int (0,None)
                                                    ]
                                                  expression (lambda/matching.ml[2508,79883+33]..[2508,79883+57])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[2508,79883+33]..[2508,79883+43])
                                                      Pexp_ident "nofail_rec" (lambda/matching.ml[2508,79883+33]..[2508,79883+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2508,79883+44]..[2508,79883+45])
                                                          Pexp_ident "i" (lambda/matching.ml[2508,79883+44]..[2508,79883+45])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2508,79883+46]..[2508,79883+47])
                                                          Pexp_ident "i" (lambda/matching.ml[2508,79883+46]..[2508,79883+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2508,79883+48]..[2508,79883+53])
                                                          Pexp_ident "index" (lambda/matching.ml[2508,79883+48]..[2508,79883+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2508,79883+54]..[2508,79883+57])
                                                          Pexp_ident "rem" (lambda/matching.ml[2508,79883+54]..[2508,79883+57])
                                                    ]
                                                ]
                                ]
                      ]
                      expression (lambda/matching.ml[2510,79946+2]..[2525,80360+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2510,79946+6]..[2510,79946+14])
                              Ppat_var "init_rec" (lambda/matching.ml[2510,79946+6]..[2510,79946+14])
                            expression (lambda/matching.ml[2510,79946+17]..[2519,80226+34])
                              Pexp_function
                              [
                                <case>
                                  pattern (lambda/matching.ml[2511,79972+6]..[2511,79972+8])
                                    Ppat_construct "[]" (lambda/matching.ml[2511,79972+6]..[2511,79972+8])
                                    None
                                  expression (lambda/matching.ml[2511,79972+12]..[2511,79972+30])
                                    Pexp_construct "::" (lambda/matching.ml[2511,79972+14]..[2511,79972+30]) ghost
                                    Some
                                      expression (lambda/matching.ml[2511,79972+14]..[2511,79972+30]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2511,79972+14]..[2511,79972+28])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2511,79972+15]..[2511,79972+18])
                                                Pexp_ident "low" (lambda/matching.ml[2511,79972+15]..[2511,79972+18])
                                              expression (lambda/matching.ml[2511,79972+20]..[2511,79972+24])
                                                Pexp_ident "high" (lambda/matching.ml[2511,79972+20]..[2511,79972+24])
                                              expression (lambda/matching.ml[2511,79972+26]..[2511,79972+27])
                                                Pexp_constant PConst_int (0,None)
                                            ]
                                          expression (lambda/matching.ml[2511,79972+29]..[2511,79972+30]) ghost
                                            Pexp_construct "[]" (lambda/matching.ml[2511,79972+29]..[2511,79972+30]) ghost
                                            None
                                        ]
                                <case>
                                  pattern (lambda/matching.ml[2512,80003+6]..[2512,80003+23])
                                    Ppat_construct "::" (lambda/matching.ml[2512,80003+17]..[2512,80003+19])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[2512,80003+6]..[2512,80003+23]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2512,80003+6]..[2512,80003+16])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2512,80003+7]..[2512,80003+8])
                                                Ppat_var "i" (lambda/matching.ml[2512,80003+7]..[2512,80003+8])
                                              pattern (lambda/matching.ml[2512,80003+10]..[2512,80003+15])
                                                Ppat_var "act_i" (lambda/matching.ml[2512,80003+10]..[2512,80003+15])
                                            ]
                                          pattern (lambda/matching.ml[2512,80003+20]..[2512,80003+23])
                                            Ppat_var "rem" (lambda/matching.ml[2512,80003+20]..[2512,80003+23])
                                        ]
                                  expression (lambda/matching.ml[2513,80030+8]..[2519,80226+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[2513,80030+12]..[2513,80030+17])
                                          Ppat_var "index" (lambda/matching.ml[2513,80030+12]..[2513,80030+17])
                                        expression (lambda/matching.ml[2513,80030+20]..[2513,80030+41])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2513,80030+20]..[2513,80030+28])
                                            Pexp_ident "do_store" (lambda/matching.ml[2513,80030+20]..[2513,80030+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2513,80030+29]..[2513,80030+35])
                                                Pexp_constant PConst_string("INIT",(lambda/matching.ml[2513,80030+30]..[2513,80030+34]),None)
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2513,80030+36]..[2513,80030+41])
                                                Pexp_ident "act_i" (lambda/matching.ml[2513,80030+36]..[2513,80030+41])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[2514,80075+8]..[2519,80226+34])
                                      Pexp_ifthenelse
                                      expression (lambda/matching.ml[2514,80075+11]..[2514,80075+20])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2514,80075+17]..[2514,80075+18])
                                          Pexp_ident "=" (lambda/matching.ml[2514,80075+17]..[2514,80075+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2514,80075+11]..[2514,80075+16])
                                              Pexp_ident "index" (lambda/matching.ml[2514,80075+11]..[2514,80075+16])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2514,80075+19]..[2514,80075+20])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (lambda/matching.ml[2515,80101+10]..[2515,80101+28])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2515,80101+10]..[2515,80101+18])
                                          Pexp_ident "fail_rec" (lambda/matching.ml[2515,80101+10]..[2515,80101+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2515,80101+19]..[2515,80101+22])
                                              Pexp_ident "low" (lambda/matching.ml[2515,80101+19]..[2515,80101+22])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2515,80101+23]..[2515,80101+24])
                                              Pexp_ident "i" (lambda/matching.ml[2515,80101+23]..[2515,80101+24])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2515,80101+25]..[2515,80101+28])
                                              Pexp_ident "rem" (lambda/matching.ml[2515,80101+25]..[2515,80101+28])
                                        ]
                                      Some
                                        expression (lambda/matching.ml[2516,80130+13]..[2519,80226+34])
                                          Pexp_ifthenelse
                                          expression (lambda/matching.ml[2516,80130+16]..[2516,80130+23])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2516,80130+20]..[2516,80130+21])
                                              Pexp_ident "<" (lambda/matching.ml[2516,80130+20]..[2516,80130+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2516,80130+16]..[2516,80130+19])
                                                  Pexp_ident "low" (lambda/matching.ml[2516,80130+16]..[2516,80130+19])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2516,80130+22]..[2516,80130+23])
                                                  Pexp_ident "i" (lambda/matching.ml[2516,80130+22]..[2516,80130+23])
                                            ]
                                          expression (lambda/matching.ml[2517,80159+10]..[2517,80159+53])
                                            Pexp_construct "::" (lambda/matching.ml[2517,80159+26]..[2517,80159+28])
                                            Some
                                              expression (lambda/matching.ml[2517,80159+10]..[2517,80159+53]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2517,80159+10]..[2517,80159+25])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2517,80159+11]..[2517,80159+14])
                                                        Pexp_ident "low" (lambda/matching.ml[2517,80159+11]..[2517,80159+14])
                                                      expression (lambda/matching.ml[2517,80159+16]..[2517,80159+21])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2517,80159+18]..[2517,80159+19])
                                                          Pexp_ident "-" (lambda/matching.ml[2517,80159+18]..[2517,80159+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2517,80159+16]..[2517,80159+17])
                                                              Pexp_ident "i" (lambda/matching.ml[2517,80159+16]..[2517,80159+17])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2517,80159+20]..[2517,80159+21])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                      expression (lambda/matching.ml[2517,80159+23]..[2517,80159+24])
                                                        Pexp_constant PConst_int (0,None)
                                                    ]
                                                  expression (lambda/matching.ml[2517,80159+29]..[2517,80159+53])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[2517,80159+29]..[2517,80159+39])
                                                      Pexp_ident "nofail_rec" (lambda/matching.ml[2517,80159+29]..[2517,80159+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2517,80159+40]..[2517,80159+41])
                                                          Pexp_ident "i" (lambda/matching.ml[2517,80159+40]..[2517,80159+41])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2517,80159+42]..[2517,80159+43])
                                                          Pexp_ident "i" (lambda/matching.ml[2517,80159+42]..[2517,80159+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2517,80159+44]..[2517,80159+49])
                                                          Pexp_ident "index" (lambda/matching.ml[2517,80159+44]..[2517,80159+49])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2517,80159+50]..[2517,80159+53])
                                                          Pexp_ident "rem" (lambda/matching.ml[2517,80159+50]..[2517,80159+53])
                                                    ]
                                                ]
                                          Some
                                            expression (lambda/matching.ml[2519,80226+10]..[2519,80226+34])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2519,80226+10]..[2519,80226+20])
                                                Pexp_ident "nofail_rec" (lambda/matching.ml[2519,80226+10]..[2519,80226+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2519,80226+21]..[2519,80226+22])
                                                    Pexp_ident "i" (lambda/matching.ml[2519,80226+21]..[2519,80226+22])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2519,80226+23]..[2519,80226+24])
                                                    Pexp_ident "i" (lambda/matching.ml[2519,80226+23]..[2519,80226+24])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2519,80226+25]..[2519,80226+30])
                                                    Pexp_ident "index" (lambda/matching.ml[2519,80226+25]..[2519,80226+30])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2519,80226+31]..[2519,80226+34])
                                                    Pexp_ident "rem" (lambda/matching.ml[2519,80226+31]..[2519,80226+34])
                                              ]
                              ]
                        ]
                        expression (lambda/matching.ml[2521,80266+2]..[2525,80360+26])
                          Pexp_sequence
                          expression (lambda/matching.ml[2521,80266+2]..[2521,80266+35])
                            Pexp_assert
                            expression (lambda/matching.ml[2521,80266+9]..[2521,80266+35])
                              Pexp_apply
                              expression (lambda/matching.ml[2521,80266+31]..[2521,80266+32])
                                Pexp_ident "=" (lambda/matching.ml[2521,80266+31]..[2521,80266+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2521,80266+10]..[2521,80266+30])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2521,80266+10]..[2521,80266+18])
                                      Pexp_ident "do_store" (lambda/matching.ml[2521,80266+10]..[2521,80266+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2521,80266+19]..[2521,80266+25])
                                          Pexp_constant PConst_string("FAIL",(lambda/matching.ml[2521,80266+20]..[2521,80266+24]),None)
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2521,80266+26]..[2521,80266+30])
                                          Pexp_ident "fail" (lambda/matching.ml[2521,80266+26]..[2521,80266+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2521,80266+33]..[2521,80266+34])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          expression (lambda/matching.ml[2524,80336+2]..[2525,80360+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[2524,80336+6]..[2524,80336+7])
                                  Ppat_var "r" (lambda/matching.ml[2524,80336+6]..[2524,80336+7])
                                expression (lambda/matching.ml[2524,80336+10]..[2524,80336+20])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2524,80336+10]..[2524,80336+18])
                                    Pexp_ident "init_rec" (lambda/matching.ml[2524,80336+10]..[2524,80336+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2524,80336+19]..[2524,80336+20])
                                        Pexp_ident "l" (lambda/matching.ml[2524,80336+19]..[2524,80336+20])
                                  ]
                            ]
                            expression (lambda/matching.ml[2525,80360+2]..[2525,80360+26])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2525,80360+3]..[2525,80360+18])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2525,80360+3]..[2525,80360+16])
                                    Pexp_ident "Array.of_list" (lambda/matching.ml[2525,80360+3]..[2525,80360+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2525,80360+17]..[2525,80360+18])
                                        Pexp_ident "r" (lambda/matching.ml[2525,80360+17]..[2525,80360+18])
                                  ]
                                expression (lambda/matching.ml[2525,80360+20]..[2525,80360+25])
                                  Pexp_ident "store" (lambda/matching.ml[2525,80360+20]..[2525,80360+25])
                              ]
    ]
  structure_item (lambda/matching.ml[2527,80388+0]..[2561,81466+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2527,80388+4]..[2527,80388+22])
          Ppat_var "as_interval_nofail" (lambda/matching.ml[2527,80388+4]..[2527,80388+22])
        expression (lambda/matching.ml[2527,80388+23]..[2561,81466+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2527,80388+23]..[2527,80388+24])
            Ppat_var "l" (lambda/matching.ml[2527,80388+23]..[2527,80388+24])
          expression (lambda/matching.ml[2528,80415+2]..[2561,81466+31])
            Pexp_let Nonrec
            [
              <def>
                pattern (lambda/matching.ml[2528,80415+6]..[2528,80415+11])
                  Ppat_var "store" (lambda/matching.ml[2528,80415+6]..[2528,80415+11])
                expression (lambda/matching.ml[2528,80415+14]..[2528,80415+34])
                  Pexp_apply
                  expression (lambda/matching.ml[2528,80415+14]..[2528,80415+31])
                    Pexp_ident "StoreExp.mk_store" (lambda/matching.ml[2528,80415+14]..[2528,80415+31])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2528,80415+32]..[2528,80415+34])
                        Pexp_construct "()" (lambda/matching.ml[2528,80415+32]..[2528,80415+34])
                        None
                  ]
            ]
            expression (lambda/matching.ml[2529,80453+2]..[2561,81466+31])
              Pexp_let Rec
              [
                <def>
                  pattern (lambda/matching.ml[2529,80453+10]..[2529,80453+19])
                    Ppat_var "some_hole" (lambda/matching.ml[2529,80453+10]..[2529,80453+19])
                  expression (lambda/matching.ml[2529,80453+22]..[2533,80522+66])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[2530,80484+6]..[2531,80493+11])
                          Ppat_or
                          pattern (lambda/matching.ml[2530,80484+6]..[2530,80484+8])
                            Ppat_construct "[]" (lambda/matching.ml[2530,80484+6]..[2530,80484+8])
                            None
                          pattern (lambda/matching.ml[2531,80493+6]..[2531,80493+11])
                            Ppat_construct "::" (lambda/matching.ml[2531,80493+8]..[2531,80493+11]) ghost
                            Some
                              []
                              pattern (lambda/matching.ml[2531,80493+8]..[2531,80493+11]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2531,80493+8]..[2531,80493+9])
                                    Ppat_any
                                  pattern (lambda/matching.ml[2531,80493+10]..[2531,80493+11]) ghost
                                    Ppat_construct "[]" (lambda/matching.ml[2531,80493+10]..[2531,80493+11]) ghost
                                    None
                                ]
                        expression (lambda/matching.ml[2532,80508+8]..[2532,80508+13])
                          Pexp_construct "false" (lambda/matching.ml[2532,80508+8]..[2532,80508+13])
                          None
                      <case>
                        pattern (lambda/matching.ml[2533,80522+6]..[2533,80522+36])
                          Ppat_construct "::" (lambda/matching.ml[2533,80522+13]..[2533,80522+15])
                          Some
                            []
                            pattern (lambda/matching.ml[2533,80522+6]..[2533,80522+36]) ghost
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2533,80522+6]..[2533,80522+12])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[2533,80522+7]..[2533,80522+8])
                                      Ppat_var "i" (lambda/matching.ml[2533,80522+7]..[2533,80522+8])
                                    pattern (lambda/matching.ml[2533,80522+10]..[2533,80522+11])
                                      Ppat_any
                                  ]
                                pattern (lambda/matching.ml[2533,80522+16]..[2533,80522+36])
                                  Ppat_alias "rem" (lambda/matching.ml[2533,80522+32]..[2533,80522+35])
                                  pattern (lambda/matching.ml[2533,80522+17]..[2533,80522+28])
                                    Ppat_construct "::" (lambda/matching.ml[2533,80522+24]..[2533,80522+26])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[2533,80522+17]..[2533,80522+28]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2533,80522+17]..[2533,80522+23])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2533,80522+18]..[2533,80522+19])
                                                Ppat_var "j" (lambda/matching.ml[2533,80522+18]..[2533,80522+19])
                                              pattern (lambda/matching.ml[2533,80522+21]..[2533,80522+22])
                                                Ppat_any
                                            ]
                                          pattern (lambda/matching.ml[2533,80522+27]..[2533,80522+28])
                                            Ppat_any
                                        ]
                              ]
                        expression (lambda/matching.ml[2533,80522+40]..[2533,80522+66])
                          Pexp_apply
                          expression (lambda/matching.ml[2533,80522+50]..[2533,80522+52])
                            Pexp_ident "||" (lambda/matching.ml[2533,80522+50]..[2533,80522+52])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2533,80522+40]..[2533,80522+49])
                                Pexp_apply
                                expression (lambda/matching.ml[2533,80522+42]..[2533,80522+43])
                                  Pexp_ident ">" (lambda/matching.ml[2533,80522+42]..[2533,80522+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2533,80522+40]..[2533,80522+41])
                                      Pexp_ident "j" (lambda/matching.ml[2533,80522+40]..[2533,80522+41])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2533,80522+44]..[2533,80522+49])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2533,80522+46]..[2533,80522+47])
                                        Pexp_ident "+" (lambda/matching.ml[2533,80522+46]..[2533,80522+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2533,80522+44]..[2533,80522+45])
                                            Pexp_ident "i" (lambda/matching.ml[2533,80522+44]..[2533,80522+45])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2533,80522+48]..[2533,80522+49])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2533,80522+53]..[2533,80522+66])
                                Pexp_apply
                                expression (lambda/matching.ml[2533,80522+53]..[2533,80522+62])
                                  Pexp_ident "some_hole" (lambda/matching.ml[2533,80522+53]..[2533,80522+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2533,80522+63]..[2533,80522+66])
                                      Pexp_ident "rem" (lambda/matching.ml[2533,80522+63]..[2533,80522+66])
                                ]
                          ]
                    ]
              ]
              expression (lambda/matching.ml[2535,80594+2]..[2561,81466+31])
                Pexp_let Rec
                [
                  <def>
                    pattern (lambda/matching.ml[2535,80594+10]..[2535,80594+15])
                      Ppat_var "i_rec" (lambda/matching.ml[2535,80594+10]..[2535,80594+15])
                    expression (lambda/matching.ml[2535,80594+16]..[2542,80853+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2535,80594+16]..[2535,80594+23])
                        Ppat_var "cur_low" (lambda/matching.ml[2535,80594+16]..[2535,80594+23])
                      expression (lambda/matching.ml[2535,80594+24]..[2542,80853+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2535,80594+24]..[2535,80594+32])
                          Ppat_var "cur_high" (lambda/matching.ml[2535,80594+24]..[2535,80594+32])
                        expression (lambda/matching.ml[2535,80594+33]..[2542,80853+65]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2535,80594+33]..[2535,80594+40])
                            Ppat_var "cur_act" (lambda/matching.ml[2535,80594+33]..[2535,80594+40])
                          expression (lambda/matching.ml[2535,80594+43]..[2542,80853+65])
                            Pexp_function
                            [
                              <case>
                                pattern (lambda/matching.ml[2536,80646+6]..[2536,80646+8])
                                  Ppat_construct "[]" (lambda/matching.ml[2536,80646+6]..[2536,80646+8])
                                  None
                                expression (lambda/matching.ml[2536,80646+12]..[2536,80646+44])
                                  Pexp_construct "::" (lambda/matching.ml[2536,80646+14]..[2536,80646+44]) ghost
                                  Some
                                    expression (lambda/matching.ml[2536,80646+14]..[2536,80646+44]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[2536,80646+14]..[2536,80646+42])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2536,80646+15]..[2536,80646+22])
                                              Pexp_ident "cur_low" (lambda/matching.ml[2536,80646+15]..[2536,80646+22])
                                            expression (lambda/matching.ml[2536,80646+24]..[2536,80646+32])
                                              Pexp_ident "cur_high" (lambda/matching.ml[2536,80646+24]..[2536,80646+32])
                                            expression (lambda/matching.ml[2536,80646+34]..[2536,80646+41])
                                              Pexp_ident "cur_act" (lambda/matching.ml[2536,80646+34]..[2536,80646+41])
                                          ]
                                        expression (lambda/matching.ml[2536,80646+43]..[2536,80646+44]) ghost
                                          Pexp_construct "[]" (lambda/matching.ml[2536,80646+43]..[2536,80646+44]) ghost
                                          None
                                      ]
                              <case>
                                pattern (lambda/matching.ml[2537,80691+6]..[2537,80691+21])
                                  Ppat_construct "::" (lambda/matching.ml[2537,80691+15]..[2537,80691+17])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2537,80691+6]..[2537,80691+21]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[2537,80691+6]..[2537,80691+14])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[2537,80691+7]..[2537,80691+8])
                                              Ppat_var "i" (lambda/matching.ml[2537,80691+7]..[2537,80691+8])
                                            pattern (lambda/matching.ml[2537,80691+10]..[2537,80691+13])
                                              Ppat_var "act" (lambda/matching.ml[2537,80691+10]..[2537,80691+13])
                                          ]
                                        pattern (lambda/matching.ml[2537,80691+18]..[2537,80691+21])
                                          Ppat_var "rem" (lambda/matching.ml[2537,80691+18]..[2537,80691+21])
                                      ]
                                expression (lambda/matching.ml[2538,80716+8]..[2542,80853+65])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2538,80716+12]..[2538,80716+21])
                                        Ppat_var "act_index" (lambda/matching.ml[2538,80716+12]..[2538,80716+21])
                                      expression (lambda/matching.ml[2538,80716+24]..[2538,80716+46])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2538,80716+24]..[2538,80716+39])
                                          Pexp_field
                                          expression (lambda/matching.ml[2538,80716+24]..[2538,80716+29])
                                            Pexp_ident "store" (lambda/matching.ml[2538,80716+24]..[2538,80716+29])
                                          "act_store" (lambda/matching.ml[2538,80716+30]..[2538,80716+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2538,80716+40]..[2538,80716+42])
                                              Pexp_construct "()" (lambda/matching.ml[2538,80716+40]..[2538,80716+42])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2538,80716+43]..[2538,80716+46])
                                              Pexp_ident "act" (lambda/matching.ml[2538,80716+43]..[2538,80716+46])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2539,80766+8]..[2542,80853+65])
                                    Pexp_ifthenelse
                                    expression (lambda/matching.ml[2539,80766+11]..[2539,80766+30])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2539,80766+21]..[2539,80766+22])
                                        Pexp_ident "=" (lambda/matching.ml[2539,80766+21]..[2539,80766+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2539,80766+11]..[2539,80766+20])
                                            Pexp_ident "act_index" (lambda/matching.ml[2539,80766+11]..[2539,80766+20])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2539,80766+23]..[2539,80766+30])
                                            Pexp_ident "cur_act" (lambda/matching.ml[2539,80766+23]..[2539,80766+30])
                                      ]
                                    expression (lambda/matching.ml[2540,80802+10]..[2540,80802+37])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2540,80802+10]..[2540,80802+15])
                                        Pexp_ident "i_rec" (lambda/matching.ml[2540,80802+10]..[2540,80802+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2540,80802+16]..[2540,80802+23])
                                            Pexp_ident "cur_low" (lambda/matching.ml[2540,80802+16]..[2540,80802+23])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2540,80802+24]..[2540,80802+25])
                                            Pexp_ident "i" (lambda/matching.ml[2540,80802+24]..[2540,80802+25])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2540,80802+26]..[2540,80802+33])
                                            Pexp_ident "cur_act" (lambda/matching.ml[2540,80802+26]..[2540,80802+33])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2540,80802+34]..[2540,80802+37])
                                            Pexp_ident "rem" (lambda/matching.ml[2540,80802+34]..[2540,80802+37])
                                      ]
                                    Some
                                      expression (lambda/matching.ml[2542,80853+10]..[2542,80853+65])
                                        Pexp_construct "::" (lambda/matching.ml[2542,80853+39]..[2542,80853+41])
                                        Some
                                          expression (lambda/matching.ml[2542,80853+10]..[2542,80853+65]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2542,80853+10]..[2542,80853+38])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2542,80853+11]..[2542,80853+18])
                                                    Pexp_ident "cur_low" (lambda/matching.ml[2542,80853+11]..[2542,80853+18])
                                                  expression (lambda/matching.ml[2542,80853+20]..[2542,80853+28])
                                                    Pexp_ident "cur_high" (lambda/matching.ml[2542,80853+20]..[2542,80853+28])
                                                  expression (lambda/matching.ml[2542,80853+30]..[2542,80853+37])
                                                    Pexp_ident "cur_act" (lambda/matching.ml[2542,80853+30]..[2542,80853+37])
                                                ]
                                              expression (lambda/matching.ml[2542,80853+42]..[2542,80853+65])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2542,80853+42]..[2542,80853+47])
                                                  Pexp_ident "i_rec" (lambda/matching.ml[2542,80853+42]..[2542,80853+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2542,80853+48]..[2542,80853+49])
                                                      Pexp_ident "i" (lambda/matching.ml[2542,80853+48]..[2542,80853+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2542,80853+50]..[2542,80853+51])
                                                      Pexp_ident "i" (lambda/matching.ml[2542,80853+50]..[2542,80853+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2542,80853+52]..[2542,80853+61])
                                                      Pexp_ident "act_index" (lambda/matching.ml[2542,80853+52]..[2542,80853+61])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2542,80853+62]..[2542,80853+65])
                                                      Pexp_ident "rem" (lambda/matching.ml[2542,80853+62]..[2542,80853+65])
                                                ]
                                            ]
                            ]
                ]
                expression (lambda/matching.ml[2544,80924+2]..[2561,81466+31])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2544,80924+6]..[2544,80924+12])
                        Ppat_var "inters" (lambda/matching.ml[2544,80924+6]..[2544,80924+12])
                      expression (lambda/matching.ml[2545,80939+4]..[2559,81437+23])
                        Pexp_match
                        expression (lambda/matching.ml[2545,80939+10]..[2545,80939+11])
                          Pexp_ident "l" (lambda/matching.ml[2545,80939+10]..[2545,80939+11])
                        [
                          <case>
                            pattern (lambda/matching.ml[2546,80956+6]..[2546,80956+21])
                              Ppat_construct "::" (lambda/matching.ml[2546,80956+15]..[2546,80956+17])
                              Some
                                []
                                pattern (lambda/matching.ml[2546,80956+6]..[2546,80956+21]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[2546,80956+6]..[2546,80956+14])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[2546,80956+7]..[2546,80956+8])
                                          Ppat_var "i" (lambda/matching.ml[2546,80956+7]..[2546,80956+8])
                                        pattern (lambda/matching.ml[2546,80956+10]..[2546,80956+13])
                                          Ppat_var "act" (lambda/matching.ml[2546,80956+10]..[2546,80956+13])
                                      ]
                                    pattern (lambda/matching.ml[2546,80956+18]..[2546,80956+21])
                                      Ppat_var "rem" (lambda/matching.ml[2546,80956+18]..[2546,80956+21])
                                  ]
                            expression (lambda/matching.ml[2547,80981+8]..[2558,81405+31])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[2547,80981+12]..[2547,80981+21])
                                    Ppat_var "act_index" (lambda/matching.ml[2547,80981+12]..[2547,80981+21])
                                  expression (lambda/matching.ml[2552,81238+10]..[2555,81327+34])
                                    Pexp_ifthenelse
                                    expression (lambda/matching.ml[2552,81238+13]..[2552,81238+26])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2552,81238+13]..[2552,81238+22])
                                        Pexp_ident "some_hole" (lambda/matching.ml[2552,81238+13]..[2552,81238+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2552,81238+23]..[2552,81238+26])
                                            Pexp_ident "rem" (lambda/matching.ml[2552,81238+23]..[2552,81238+26])
                                      ]
                                    expression (lambda/matching.ml[2553,81270+12]..[2553,81270+41])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2553,81270+12]..[2553,81270+34])
                                        Pexp_field
                                        expression (lambda/matching.ml[2553,81270+12]..[2553,81270+17])
                                          Pexp_ident "store" (lambda/matching.ml[2553,81270+12]..[2553,81270+17])
                                        "act_store_shared" (lambda/matching.ml[2553,81270+18]..[2553,81270+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2553,81270+35]..[2553,81270+37])
                                            Pexp_construct "()" (lambda/matching.ml[2553,81270+35]..[2553,81270+37])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2553,81270+38]..[2553,81270+41])
                                            Pexp_ident "act" (lambda/matching.ml[2553,81270+38]..[2553,81270+41])
                                      ]
                                    Some
                                      expression (lambda/matching.ml[2555,81327+12]..[2555,81327+34])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2555,81327+12]..[2555,81327+27])
                                          Pexp_field
                                          expression (lambda/matching.ml[2555,81327+12]..[2555,81327+17])
                                            Pexp_ident "store" (lambda/matching.ml[2555,81327+12]..[2555,81327+17])
                                          "act_store" (lambda/matching.ml[2555,81327+18]..[2555,81327+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2555,81327+28]..[2555,81327+30])
                                              Pexp_construct "()" (lambda/matching.ml[2555,81327+28]..[2555,81327+30])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2555,81327+31]..[2555,81327+34])
                                              Pexp_ident "act" (lambda/matching.ml[2555,81327+31]..[2555,81327+34])
                                        ]
                              ]
                              expression (lambda/matching.ml[2557,81373+8]..[2558,81405+31])
                                Pexp_sequence
                                expression (lambda/matching.ml[2557,81373+8]..[2557,81373+30])
                                  Pexp_assert
                                  expression (lambda/matching.ml[2557,81373+15]..[2557,81373+30])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2557,81373+26]..[2557,81373+27])
                                      Pexp_ident "=" (lambda/matching.ml[2557,81373+26]..[2557,81373+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2557,81373+16]..[2557,81373+25])
                                          Pexp_ident "act_index" (lambda/matching.ml[2557,81373+16]..[2557,81373+25])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2557,81373+28]..[2557,81373+29])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                expression (lambda/matching.ml[2558,81405+8]..[2558,81405+31])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2558,81405+8]..[2558,81405+13])
                                    Pexp_ident "i_rec" (lambda/matching.ml[2558,81405+8]..[2558,81405+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2558,81405+14]..[2558,81405+15])
                                        Pexp_ident "i" (lambda/matching.ml[2558,81405+14]..[2558,81405+15])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2558,81405+16]..[2558,81405+17])
                                        Pexp_ident "i" (lambda/matching.ml[2558,81405+16]..[2558,81405+17])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2558,81405+18]..[2558,81405+27])
                                        Pexp_ident "act_index" (lambda/matching.ml[2558,81405+18]..[2558,81405+27])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2558,81405+28]..[2558,81405+31])
                                        Pexp_ident "rem" (lambda/matching.ml[2558,81405+28]..[2558,81405+31])
                                  ]
                          <case>
                            pattern (lambda/matching.ml[2559,81437+6]..[2559,81437+7])
                              Ppat_any
                            expression (lambda/matching.ml[2559,81437+11]..[2559,81437+23])
                              Pexp_assert
                              expression (lambda/matching.ml[2559,81437+18]..[2559,81437+23])
                                Pexp_construct "false" (lambda/matching.ml[2559,81437+18]..[2559,81437+23])
                                None
                        ]
                  ]
                  expression (lambda/matching.ml[2561,81466+2]..[2561,81466+31])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[2561,81466+3]..[2561,81466+23])
                        Pexp_apply
                        expression (lambda/matching.ml[2561,81466+3]..[2561,81466+16])
                          Pexp_ident "Array.of_list" (lambda/matching.ml[2561,81466+3]..[2561,81466+16])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2561,81466+17]..[2561,81466+23])
                              Pexp_ident "inters" (lambda/matching.ml[2561,81466+17]..[2561,81466+23])
                        ]
                      expression (lambda/matching.ml[2561,81466+25]..[2561,81466+30])
                        Pexp_ident "store" (lambda/matching.ml[2561,81466+25]..[2561,81466+30])
                    ]
    ]
  structure_item (lambda/matching.ml[2563,81499+0]..[2572,81660+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2563,81499+4]..[2563,81499+24])
          Ppat_var "sort_int_lambda_list" (lambda/matching.ml[2563,81499+4]..[2563,81499+24])
        expression (lambda/matching.ml[2563,81499+25]..[2572,81660+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2563,81499+25]..[2563,81499+26])
            Ppat_var "l" (lambda/matching.ml[2563,81499+25]..[2563,81499+26])
          expression (lambda/matching.ml[2564,81528+2]..[2572,81660+5])
            Pexp_apply
            expression (lambda/matching.ml[2564,81528+2]..[2564,81528+11])
              Pexp_ident "List.sort" (lambda/matching.ml[2564,81528+2]..[2564,81528+11])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[2565,81540+4]..[2571,81649+10])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2565,81540+9]..[2565,81540+16])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2565,81540+10]..[2565,81540+12])
                        Ppat_var "i1" (lambda/matching.ml[2565,81540+10]..[2565,81540+12])
                      pattern (lambda/matching.ml[2565,81540+14]..[2565,81540+15])
                        Ppat_any
                    ]
                  expression (lambda/matching.ml[2565,81540+17]..[2571,81649+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2565,81540+17]..[2565,81540+24])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2565,81540+18]..[2565,81540+20])
                          Ppat_var "i2" (lambda/matching.ml[2565,81540+18]..[2565,81540+20])
                        pattern (lambda/matching.ml[2565,81540+22]..[2565,81540+23])
                          Ppat_any
                      ]
                    expression (lambda/matching.ml[2566,81568+6]..[2571,81649+9])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[2566,81568+9]..[2566,81568+16])
                        Pexp_apply
                        expression (lambda/matching.ml[2566,81568+12]..[2566,81568+13])
                          Pexp_ident "<" (lambda/matching.ml[2566,81568+12]..[2566,81568+13])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2566,81568+9]..[2566,81568+11])
                              Pexp_ident "i1" (lambda/matching.ml[2566,81568+9]..[2566,81568+11])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2566,81568+14]..[2566,81568+16])
                              Pexp_ident "i2" (lambda/matching.ml[2566,81568+14]..[2566,81568+16])
                        ]
                      expression (lambda/matching.ml[2567,81590+8]..[2567,81590+10])
                        Pexp_constant PConst_int (-1,None)
                      Some
                        expression (lambda/matching.ml[2568,81601+11]..[2571,81649+9])
                          Pexp_ifthenelse
                          expression (lambda/matching.ml[2568,81601+14]..[2568,81601+21])
                            Pexp_apply
                            expression (lambda/matching.ml[2568,81601+17]..[2568,81601+18])
                              Pexp_ident "<" (lambda/matching.ml[2568,81601+17]..[2568,81601+18])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2568,81601+14]..[2568,81601+16])
                                  Pexp_ident "i2" (lambda/matching.ml[2568,81601+14]..[2568,81601+16])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2568,81601+19]..[2568,81601+21])
                                  Pexp_ident "i1" (lambda/matching.ml[2568,81601+19]..[2568,81601+21])
                            ]
                          expression (lambda/matching.ml[2569,81628+8]..[2569,81628+9])
                            Pexp_constant PConst_int (1,None)
                          Some
                            expression (lambda/matching.ml[2571,81649+8]..[2571,81649+9])
                              Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (lambda/matching.ml[2572,81660+4]..[2572,81660+5])
                  Pexp_ident "l" (lambda/matching.ml[2572,81660+4]..[2572,81660+5])
            ]
    ]
  structure_item (lambda/matching.ml[2574,81667+0]..[2579,81818+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2574,81667+4]..[2574,81667+15])
          Ppat_var "as_interval" (lambda/matching.ml[2574,81667+4]..[2574,81667+15])
        expression (lambda/matching.ml[2574,81667+16]..[2579,81818+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2574,81667+16]..[2574,81667+20])
            Ppat_var "fail" (lambda/matching.ml[2574,81667+16]..[2574,81667+20])
          expression (lambda/matching.ml[2574,81667+21]..[2579,81818+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2574,81667+21]..[2574,81667+24])
              Ppat_var "low" (lambda/matching.ml[2574,81667+21]..[2574,81667+24])
            expression (lambda/matching.ml[2574,81667+25]..[2579,81818+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2574,81667+25]..[2574,81667+29])
                Ppat_var "high" (lambda/matching.ml[2574,81667+25]..[2574,81667+29])
              expression (lambda/matching.ml[2574,81667+30]..[2579,81818+54]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2574,81667+30]..[2574,81667+31])
                  Ppat_var "l" (lambda/matching.ml[2574,81667+30]..[2574,81667+31])
                expression (lambda/matching.ml[2575,81701+2]..[2579,81818+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2575,81701+6]..[2575,81701+7])
                        Ppat_var "l" (lambda/matching.ml[2575,81701+6]..[2575,81701+7])
                      expression (lambda/matching.ml[2575,81701+10]..[2575,81701+32])
                        Pexp_apply
                        expression (lambda/matching.ml[2575,81701+10]..[2575,81701+30])
                          Pexp_ident "sort_int_lambda_list" (lambda/matching.ml[2575,81701+10]..[2575,81701+30])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2575,81701+31]..[2575,81701+32])
                              Pexp_ident "l" (lambda/matching.ml[2575,81701+31]..[2575,81701+32])
                        ]
                  ]
                  expression (lambda/matching.ml[2576,81737+2]..[2579,81818+54])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[2576,81737+4]..[2576,81737+24])
                        Pexp_apply
                        expression (lambda/matching.ml[2576,81737+4]..[2576,81737+13])
                          Pexp_ident "get_edges" (lambda/matching.ml[2576,81737+4]..[2576,81737+13])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2576,81737+14]..[2576,81737+17])
                              Pexp_ident "low" (lambda/matching.ml[2576,81737+14]..[2576,81737+17])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2576,81737+18]..[2576,81737+22])
                              Pexp_ident "high" (lambda/matching.ml[2576,81737+18]..[2576,81737+22])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2576,81737+23]..[2576,81737+24])
                              Pexp_ident "l" (lambda/matching.ml[2576,81737+23]..[2576,81737+24])
                        ]
                      expression (lambda/matching.ml[2577,81763+4]..[2579,81818+52])
                        Pexp_match
                        expression (lambda/matching.ml[2577,81763+10]..[2577,81763+14])
                          Pexp_ident "fail" (lambda/matching.ml[2577,81763+10]..[2577,81763+14])
                        [
                          <case>
                            pattern (lambda/matching.ml[2578,81783+6]..[2578,81783+10])
                              Ppat_construct "None" (lambda/matching.ml[2578,81783+6]..[2578,81783+10])
                              None
                            expression (lambda/matching.ml[2578,81783+14]..[2578,81783+34])
                              Pexp_apply
                              expression (lambda/matching.ml[2578,81783+14]..[2578,81783+32])
                                Pexp_ident "as_interval_nofail" (lambda/matching.ml[2578,81783+14]..[2578,81783+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2578,81783+33]..[2578,81783+34])
                                    Pexp_ident "l" (lambda/matching.ml[2578,81783+33]..[2578,81783+34])
                              ]
                          <case>
                            pattern (lambda/matching.ml[2579,81818+6]..[2579,81818+14])
                              Ppat_construct "Some" (lambda/matching.ml[2579,81818+6]..[2579,81818+10])
                              Some
                                []
                                pattern (lambda/matching.ml[2579,81818+11]..[2579,81818+14])
                                  Ppat_var "act" (lambda/matching.ml[2579,81818+11]..[2579,81818+14])
                            expression (lambda/matching.ml[2579,81818+18]..[2579,81818+52])
                              Pexp_apply
                              expression (lambda/matching.ml[2579,81818+18]..[2579,81818+37])
                                Pexp_ident "as_interval_canfail" (lambda/matching.ml[2579,81818+18]..[2579,81818+37])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2579,81818+38]..[2579,81818+41])
                                    Pexp_ident "act" (lambda/matching.ml[2579,81818+38]..[2579,81818+41])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2579,81818+42]..[2579,81818+45])
                                    Pexp_ident "low" (lambda/matching.ml[2579,81818+42]..[2579,81818+45])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2579,81818+46]..[2579,81818+50])
                                    Pexp_ident "high" (lambda/matching.ml[2579,81818+46]..[2579,81818+50])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2579,81818+51]..[2579,81818+52])
                                    Pexp_ident "l" (lambda/matching.ml[2579,81818+51]..[2579,81818+52])
                              ]
                        ]
                    ]
    ]
  structure_item (lambda/matching.ml[2581,81874+0]..[2583,82009+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2581,81874+4]..[2581,81874+17])
          Ppat_var "call_switcher" (lambda/matching.ml[2581,81874+4]..[2581,81874+17])
        expression (lambda/matching.ml[2581,81874+18]..[2583,82009+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2581,81874+18]..[2581,81874+21])
            Ppat_var "loc" (lambda/matching.ml[2581,81874+18]..[2581,81874+21])
          expression (lambda/matching.ml[2581,81874+22]..[2583,82009+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2581,81874+22]..[2581,81874+26])
              Ppat_var "fail" (lambda/matching.ml[2581,81874+22]..[2581,81874+26])
            expression (lambda/matching.ml[2581,81874+27]..[2583,82009+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2581,81874+27]..[2581,81874+30])
                Ppat_var "arg" (lambda/matching.ml[2581,81874+27]..[2581,81874+30])
              expression (lambda/matching.ml[2581,81874+31]..[2583,82009+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2581,81874+31]..[2581,81874+34])
                  Ppat_var "low" (lambda/matching.ml[2581,81874+31]..[2581,81874+34])
                expression (lambda/matching.ml[2581,81874+35]..[2583,82009+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2581,81874+35]..[2581,81874+39])
                    Ppat_var "high" (lambda/matching.ml[2581,81874+35]..[2581,81874+39])
                  expression (lambda/matching.ml[2581,81874+40]..[2583,82009+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2581,81874+40]..[2581,81874+55])
                      Ppat_var "int_lambda_list" (lambda/matching.ml[2581,81874+40]..[2581,81874+55])
                    expression (lambda/matching.ml[2582,81932+2]..[2583,82009+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2582,81932+6]..[2582,81932+29])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2582,81932+6]..[2582,81932+11])
                                Ppat_var "edges" (lambda/matching.ml[2582,81932+6]..[2582,81932+11])
                              pattern (lambda/matching.ml[2582,81932+13]..[2582,81932+29])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2582,81932+14]..[2582,81932+19])
                                    Ppat_var "cases" (lambda/matching.ml[2582,81932+14]..[2582,81932+19])
                                  pattern (lambda/matching.ml[2582,81932+21]..[2582,81932+28])
                                    Ppat_var "actions" (lambda/matching.ml[2582,81932+21]..[2582,81932+28])
                                ]
                            ]
                          expression (lambda/matching.ml[2582,81932+32]..[2582,81932+73])
                            Pexp_apply
                            expression (lambda/matching.ml[2582,81932+32]..[2582,81932+43])
                              Pexp_ident "as_interval" (lambda/matching.ml[2582,81932+32]..[2582,81932+43])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2582,81932+44]..[2582,81932+48])
                                  Pexp_ident "fail" (lambda/matching.ml[2582,81932+44]..[2582,81932+48])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2582,81932+49]..[2582,81932+52])
                                  Pexp_ident "low" (lambda/matching.ml[2582,81932+49]..[2582,81932+52])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2582,81932+53]..[2582,81932+57])
                                  Pexp_ident "high" (lambda/matching.ml[2582,81932+53]..[2582,81932+57])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2582,81932+58]..[2582,81932+73])
                                  Pexp_ident "int_lambda_list" (lambda/matching.ml[2582,81932+58]..[2582,81932+73])
                            ]
                      ]
                      expression (lambda/matching.ml[2583,82009+2]..[2583,82009+43])
                        Pexp_apply
                        expression (lambda/matching.ml[2583,82009+2]..[2583,82009+15])
                          Pexp_ident "Switcher.zyva" (lambda/matching.ml[2583,82009+2]..[2583,82009+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2583,82009+16]..[2583,82009+19])
                              Pexp_ident "loc" (lambda/matching.ml[2583,82009+16]..[2583,82009+19])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2583,82009+20]..[2583,82009+25])
                              Pexp_ident "edges" (lambda/matching.ml[2583,82009+20]..[2583,82009+25])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2583,82009+26]..[2583,82009+29])
                              Pexp_ident "arg" (lambda/matching.ml[2583,82009+26]..[2583,82009+29])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2583,82009+30]..[2583,82009+35])
                              Pexp_ident "cases" (lambda/matching.ml[2583,82009+30]..[2583,82009+35])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2583,82009+36]..[2583,82009+43])
                              Pexp_ident "actions" (lambda/matching.ml[2583,82009+36]..[2583,82009+43])
                        ]
    ]
  structure_item (lambda/matching.ml[2585,82054+0]..[2588,82149+78])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2585,82054+8]..[2585,82054+19])
          Ppat_var "list_as_pat" (lambda/matching.ml[2585,82054+8]..[2585,82054+19])
        expression (lambda/matching.ml[2585,82054+22]..[2588,82149+78])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[2586,82085+4]..[2586,82085+6])
                Ppat_construct "[]" (lambda/matching.ml[2586,82085+4]..[2586,82085+6])
                None
              expression (lambda/matching.ml[2586,82085+10]..[2586,82085+44])
                Pexp_apply
                expression (lambda/matching.ml[2586,82085+10]..[2586,82085+21])
                  Pexp_ident "fatal_error" (lambda/matching.ml[2586,82085+10]..[2586,82085+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[2586,82085+22]..[2586,82085+44])
                      Pexp_constant PConst_string("Matching.list_as_pat",(lambda/matching.ml[2586,82085+23]..[2586,82085+43]),None)
                ]
            <case>
              pattern (lambda/matching.ml[2587,82130+4]..[2587,82130+11])
                Ppat_construct "::" (lambda/matching.ml[2587,82130+6]..[2587,82130+11]) ghost
                Some
                  []
                  pattern (lambda/matching.ml[2587,82130+6]..[2587,82130+11]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2587,82130+6]..[2587,82130+9])
                        Ppat_var "pat" (lambda/matching.ml[2587,82130+6]..[2587,82130+9])
                      pattern (lambda/matching.ml[2587,82130+10]..[2587,82130+11]) ghost
                        Ppat_construct "[]" (lambda/matching.ml[2587,82130+10]..[2587,82130+11]) ghost
                        None
                    ]
              expression (lambda/matching.ml[2587,82130+15]..[2587,82130+18])
                Pexp_ident "pat" (lambda/matching.ml[2587,82130+15]..[2587,82130+18])
            <case>
              pattern (lambda/matching.ml[2588,82149+4]..[2588,82149+14])
                Ppat_construct "::" (lambda/matching.ml[2588,82149+8]..[2588,82149+10])
                Some
                  []
                  pattern (lambda/matching.ml[2588,82149+4]..[2588,82149+14]) ghost
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2588,82149+4]..[2588,82149+7])
                        Ppat_var "pat" (lambda/matching.ml[2588,82149+4]..[2588,82149+7])
                      pattern (lambda/matching.ml[2588,82149+11]..[2588,82149+14])
                        Ppat_var "rem" (lambda/matching.ml[2588,82149+11]..[2588,82149+14])
                    ]
              expression (lambda/matching.ml[2588,82149+18]..[2588,82149+78])
                Pexp_record
                [
                  "pat_desc" (lambda/matching.ml[2588,82149+29]..[2588,82149+37])
                    expression (lambda/matching.ml[2588,82149+40]..[2588,82149+76])
                      Pexp_construct "Tpat_or" (lambda/matching.ml[2588,82149+40]..[2588,82149+47])
                      Some
                        expression (lambda/matching.ml[2588,82149+48]..[2588,82149+76])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2588,82149+49]..[2588,82149+52])
                              Pexp_ident "pat" (lambda/matching.ml[2588,82149+49]..[2588,82149+52])
                            expression (lambda/matching.ml[2588,82149+54]..[2588,82149+69])
                              Pexp_apply
                              expression (lambda/matching.ml[2588,82149+54]..[2588,82149+65])
                                Pexp_ident "list_as_pat" (lambda/matching.ml[2588,82149+54]..[2588,82149+65])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2588,82149+66]..[2588,82149+69])
                                    Pexp_ident "rem" (lambda/matching.ml[2588,82149+66]..[2588,82149+69])
                              ]
                            expression (lambda/matching.ml[2588,82149+71]..[2588,82149+75])
                              Pexp_construct "None" (lambda/matching.ml[2588,82149+71]..[2588,82149+75])
                              None
                          ]
                ]
                Some
                  expression (lambda/matching.ml[2588,82149+20]..[2588,82149+23])
                    Pexp_ident "pat" (lambda/matching.ml[2588,82149+20]..[2588,82149+23])
          ]
    ]
  structure_item (lambda/matching.ml[2590,82229+0]..[2599,82591+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2590,82229+4]..[2590,82229+25])
          Ppat_var "complete_pats_constrs" (lambda/matching.ml[2590,82229+4]..[2590,82229+25])
        expression (lambda/matching.ml[2590,82229+28]..[2599,82591+21])
          Pexp_function
          [
            <case>
              pattern (lambda/matching.ml[2591,82266+4]..[2591,82266+26])
                Ppat_alias "constrs" (lambda/matching.ml[2591,82266+19]..[2591,82266+26])
                pattern (lambda/matching.ml[2591,82266+4]..[2591,82266+15])
                  Ppat_construct "::" (lambda/matching.ml[2591,82266+11]..[2591,82266+13])
                  Some
                    []
                    pattern (lambda/matching.ml[2591,82266+4]..[2591,82266+15]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2591,82266+4]..[2591,82266+10])
                          Ppat_var "constr" (lambda/matching.ml[2591,82266+4]..[2591,82266+10])
                        pattern (lambda/matching.ml[2591,82266+14]..[2591,82266+15])
                          Ppat_any
                      ]
              expression (lambda/matching.ml[2592,82296+6]..[2598,82524+66])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[2592,82296+10]..[2592,82296+23])
                      Ppat_var "constr_of_pat" (lambda/matching.ml[2592,82296+10]..[2592,82296+23])
                    expression (lambda/matching.ml[2592,82296+24]..[2593,82331+25]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2592,82296+24]..[2592,82296+32])
                        Ppat_var "cstr_pat" (lambda/matching.ml[2592,82296+24]..[2592,82296+32])
                      expression (lambda/matching.ml[2593,82331+8]..[2593,82331+25])
                        Pexp_field
                        expression (lambda/matching.ml[2593,82331+8]..[2593,82331+16])
                          Pexp_ident "cstr_pat" (lambda/matching.ml[2593,82331+8]..[2593,82331+16])
                        "pat_desc" (lambda/matching.ml[2593,82331+17]..[2593,82331+25])
                ]
                expression (lambda/matching.ml[2594,82360+6]..[2598,82524+66])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2594,82360+10]..[2594,82360+23])
                        Ppat_var "pat_of_constr" (lambda/matching.ml[2594,82360+10]..[2594,82360+23])
                      expression (lambda/matching.ml[2594,82360+24]..[2596,82425+66]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2594,82360+24]..[2594,82360+28])
                          Ppat_var "cstr" (lambda/matching.ml[2594,82360+24]..[2594,82360+28])
                        expression (lambda/matching.ml[2595,82391+8]..[2596,82425+66])
                          Pexp_open Fresh
                          module_expr (lambda/matching.ml[2595,82391+17]..[2595,82391+30])
                            Pmod_ident "Patterns.Head" (lambda/matching.ml[2595,82391+17]..[2595,82391+30])
                          expression (lambda/matching.ml[2596,82425+8]..[2596,82425+66])
                            Pexp_apply
                            expression (lambda/matching.ml[2596,82425+8]..[2596,82425+24])
                              Pexp_ident "to_omega_pattern" (lambda/matching.ml[2596,82425+8]..[2596,82425+24])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2596,82425+25]..[2596,82425+66])
                                  Pexp_record
                                  [
                                    "pat_desc" (lambda/matching.ml[2596,82425+39]..[2596,82425+47])
                                      expression (lambda/matching.ml[2596,82425+50]..[2596,82425+64])
                                        Pexp_construct "Construct" (lambda/matching.ml[2596,82425+50]..[2596,82425+59])
                                        Some
                                          expression (lambda/matching.ml[2596,82425+60]..[2596,82425+64])
                                            Pexp_ident "cstr" (lambda/matching.ml[2596,82425+60]..[2596,82425+64])
                                  ]
                                  Some
                                    expression (lambda/matching.ml[2596,82425+27]..[2596,82425+33])
                                      Pexp_ident "constr" (lambda/matching.ml[2596,82425+27]..[2596,82425+33])
                            ]
                  ]
                  expression (lambda/matching.ml[2597,82495+6]..[2598,82524+66])
                    Pexp_apply
                    expression (lambda/matching.ml[2597,82495+6]..[2597,82495+14])
                      Pexp_ident "List.map" (lambda/matching.ml[2597,82495+6]..[2597,82495+14])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2597,82495+15]..[2597,82495+28])
                          Pexp_ident "pat_of_constr" (lambda/matching.ml[2597,82495+15]..[2597,82495+28])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2598,82524+8]..[2598,82524+66])
                          Pexp_apply
                          expression (lambda/matching.ml[2598,82524+9]..[2598,82524+25])
                            Pexp_ident "complete_constrs" (lambda/matching.ml[2598,82524+9]..[2598,82524+25])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2598,82524+26]..[2598,82524+32])
                                Pexp_ident "constr" (lambda/matching.ml[2598,82524+26]..[2598,82524+32])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2598,82524+33]..[2598,82524+65])
                                Pexp_apply
                                expression (lambda/matching.ml[2598,82524+34]..[2598,82524+42])
                                  Pexp_ident "List.map" (lambda/matching.ml[2598,82524+34]..[2598,82524+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2598,82524+43]..[2598,82524+56])
                                      Pexp_ident "constr_of_pat" (lambda/matching.ml[2598,82524+43]..[2598,82524+56])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2598,82524+57]..[2598,82524+64])
                                      Pexp_ident "constrs" (lambda/matching.ml[2598,82524+57]..[2598,82524+64])
                                ]
                          ]
                    ]
            <case>
              pattern (lambda/matching.ml[2599,82591+4]..[2599,82591+5])
                Ppat_any
              expression (lambda/matching.ml[2599,82591+9]..[2599,82591+21])
                Pexp_assert
                expression (lambda/matching.ml[2599,82591+16]..[2599,82591+21])
                  Pexp_construct "false" (lambda/matching.ml[2599,82591+16]..[2599,82591+21])
                  None
          ]
    ]
  structure_item (lambda/matching.ml[2606,82746+0]..[2618,83158+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2606,82746+4]..[2606,82746+21])
          Ppat_var "mk_failaction_neg" (lambda/matching.ml[2606,82746+4]..[2606,82746+21])
        expression (lambda/matching.ml[2606,82746+22]..[2618,83158+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2606,82746+22]..[2606,82746+29])
            Ppat_var "partial" (lambda/matching.ml[2606,82746+22]..[2606,82746+29])
          expression (lambda/matching.ml[2606,82746+30]..[2618,83158+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2606,82746+30]..[2606,82746+33])
              Ppat_var "ctx" (lambda/matching.ml[2606,82746+30]..[2606,82746+33])
            expression (lambda/matching.ml[2606,82746+34]..[2618,83158+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2606,82746+34]..[2606,82746+37])
                Ppat_var "def" (lambda/matching.ml[2606,82746+34]..[2606,82746+37])
              expression (lambda/matching.ml[2607,82786+2]..[2618,83158+32])
                Pexp_match
                expression (lambda/matching.ml[2607,82786+8]..[2607,82786+15])
                  Pexp_ident "partial" (lambda/matching.ml[2607,82786+8]..[2607,82786+15])
                [
                  <case>
                    pattern (lambda/matching.ml[2608,82807+4]..[2608,82807+11])
                      Ppat_construct "Partial" (lambda/matching.ml[2608,82807+4]..[2608,82807+11])
                      None
                    expression (lambda/matching.ml[2608,82807+15]..[2617,83152+5])
                      Pexp_match
                      expression (lambda/matching.ml[2609,82824+12]..[2609,82824+39])
                        Pexp_apply
                        expression (lambda/matching.ml[2609,82824+12]..[2609,82824+35])
                          Pexp_ident "Default_environment.pop" (lambda/matching.ml[2609,82824+12]..[2609,82824+35])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2609,82824+36]..[2609,82824+39])
                              Pexp_ident "def" (lambda/matching.ml[2609,82824+36]..[2609,82824+39])
                        ]
                      [
                        <case>
                          pattern (lambda/matching.ml[2610,82869+8]..[2610,82869+27])
                            Ppat_construct "Some" (lambda/matching.ml[2610,82869+8]..[2610,82869+12])
                            Some
                              []
                              pattern (lambda/matching.ml[2610,82869+13]..[2610,82869+27])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2610,82869+14]..[2610,82869+23])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2610,82869+15]..[2610,82869+16])
                                        Ppat_any
                                      pattern (lambda/matching.ml[2610,82869+18]..[2610,82869+22])
                                        Ppat_var "idef" (lambda/matching.ml[2610,82869+18]..[2610,82869+22])
                                    ]
                                  pattern (lambda/matching.ml[2610,82869+25]..[2610,82869+26])
                                    Ppat_any
                                ]
                          expression (lambda/matching.ml[2611,82900+10]..[2611,82900+68])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2611,82900+11]..[2611,82900+41])
                                Pexp_construct "Some" (lambda/matching.ml[2611,82900+11]..[2611,82900+15])
                                Some
                                  expression (lambda/matching.ml[2611,82900+16]..[2611,82900+41])
                                    Pexp_construct "Lstaticraise" (lambda/matching.ml[2611,82900+17]..[2611,82900+29])
                                    Some
                                      expression (lambda/matching.ml[2611,82900+30]..[2611,82900+40])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2611,82900+31]..[2611,82900+35])
                                            Pexp_ident "idef" (lambda/matching.ml[2611,82900+31]..[2611,82900+35])
                                          expression (lambda/matching.ml[2611,82900+37]..[2611,82900+39])
                                            Pexp_construct "[]" (lambda/matching.ml[2611,82900+37]..[2611,82900+39])
                                            None
                                        ]
                              expression (lambda/matching.ml[2611,82900+43]..[2611,82900+67])
                                Pexp_apply
                                expression (lambda/matching.ml[2611,82900+43]..[2611,82900+58])
                                  Pexp_ident "Jumps.singleton" (lambda/matching.ml[2611,82900+43]..[2611,82900+58])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2611,82900+59]..[2611,82900+63])
                                      Pexp_ident "idef" (lambda/matching.ml[2611,82900+59]..[2611,82900+63])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2611,82900+64]..[2611,82900+67])
                                      Pexp_ident "ctx" (lambda/matching.ml[2611,82900+64]..[2611,82900+67])
                                ]
                            ]
                        <case>
                          pattern (lambda/matching.ml[2612,82969+8]..[2612,82969+12])
                            Ppat_construct "None" (lambda/matching.ml[2612,82969+8]..[2612,82969+12])
                            None
                          expression (lambda/matching.ml[2616,83122+10]..[2616,83122+29])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2616,83122+11]..[2616,83122+15])
                                Pexp_construct "None" (lambda/matching.ml[2616,83122+11]..[2616,83122+15])
                                None
                              expression (lambda/matching.ml[2616,83122+17]..[2616,83122+28])
                                Pexp_ident "Jumps.empty" (lambda/matching.ml[2616,83122+17]..[2616,83122+28])
                            ]
                      ]
                  <case>
                    pattern (lambda/matching.ml[2618,83158+4]..[2618,83158+9])
                      Ppat_construct "Total" (lambda/matching.ml[2618,83158+4]..[2618,83158+9])
                      None
                    expression (lambda/matching.ml[2618,83158+13]..[2618,83158+32])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[2618,83158+14]..[2618,83158+18])
                          Pexp_construct "None" (lambda/matching.ml[2618,83158+14]..[2618,83158+18])
                          None
                        expression (lambda/matching.ml[2618,83158+20]..[2618,83158+31])
                          Pexp_ident "Jumps.empty" (lambda/matching.ml[2618,83158+20]..[2618,83158+31])
                      ]
                ]
    ]
  structure_item (lambda/matching.ml[2621,83247+0]..[2675,84963+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2621,83247+4]..[2621,83247+21])
          Ppat_var "mk_failaction_pos" (lambda/matching.ml[2621,83247+4]..[2621,83247+21])
        expression (lambda/matching.ml[2621,83247+22]..[2675,84963+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2621,83247+22]..[2621,83247+29])
            Ppat_var "partial" (lambda/matching.ml[2621,83247+22]..[2621,83247+29])
          expression (lambda/matching.ml[2621,83247+30]..[2675,84963+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2621,83247+30]..[2621,83247+34])
              Ppat_var "seen" (lambda/matching.ml[2621,83247+30]..[2621,83247+34])
            expression (lambda/matching.ml[2621,83247+35]..[2675,84963+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2621,83247+35]..[2621,83247+38])
                Ppat_var "ctx" (lambda/matching.ml[2621,83247+35]..[2621,83247+38])
              expression (lambda/matching.ml[2621,83247+39]..[2675,84963+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2621,83247+39]..[2621,83247+43])
                  Ppat_var "defs" (lambda/matching.ml[2621,83247+39]..[2621,83247+43])
                expression (lambda/matching.ml[2622,83293+2]..[2675,84963+3])
                  Pexp_sequence
                  expression (lambda/matching.ml[2622,83293+2]..[2626,83381+3])
                    Pexp_ifthenelse
                    expression (lambda/matching.ml[2622,83293+5]..[2622,83293+8])
                      Pexp_ident "dbg" (lambda/matching.ml[2622,83293+5]..[2622,83293+8])
                    expression (lambda/matching.ml[2622,83293+14]..[2626,83381+3])
                      Pexp_sequence
                      expression (lambda/matching.ml[2623,83309+4]..[2623,83309+30])
                        Pexp_apply
                        expression (lambda/matching.ml[2623,83309+4]..[2623,83309+18])
                          Pexp_ident "Format.eprintf" (lambda/matching.ml[2623,83309+4]..[2623,83309+18])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2623,83309+19]..[2623,83309+30])
                              Pexp_constant PConst_string("**POS**\n",(lambda/matching.ml[2623,83309+20]..[2623,83309+29]),None)
                        ]
                      expression (lambda/matching.ml[2624,83341+4]..[2625,83374+6])
                        Pexp_sequence
                        expression (lambda/matching.ml[2624,83341+4]..[2624,83341+31])
                          Pexp_apply
                          expression (lambda/matching.ml[2624,83341+4]..[2624,83341+26])
                            Pexp_ident "Default_environment.pp" (lambda/matching.ml[2624,83341+4]..[2624,83341+26])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2624,83341+27]..[2624,83341+31])
                                Pexp_ident "defs" (lambda/matching.ml[2624,83341+27]..[2624,83341+31])
                          ]
                        expression (lambda/matching.ml[2625,83374+4]..[2625,83374+6])
                          Pexp_construct "()" (lambda/matching.ml[2625,83374+4]..[2625,83374+6])
                          None
                    None
                  expression (lambda/matching.ml[2627,83386+2]..[2675,84963+3])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lambda/matching.ml[2627,83386+10]..[2627,83386+18])
                          Ppat_var "scan_def" (lambda/matching.ml[2627,83386+10]..[2627,83386+18])
                        expression (lambda/matching.ml[2627,83386+19]..[2650,84223+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[2627,83386+19]..[2627,83386+22])
                            Ppat_var "env" (lambda/matching.ml[2627,83386+19]..[2627,83386+22])
                          expression (lambda/matching.ml[2627,83386+23]..[2650,84223+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[2627,83386+23]..[2627,83386+30])
                              Ppat_var "to_test" (lambda/matching.ml[2627,83386+23]..[2627,83386+30])
                            expression (lambda/matching.ml[2627,83386+31]..[2650,84223+7]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[2627,83386+31]..[2627,83386+35])
                                Ppat_var "defs" (lambda/matching.ml[2627,83386+31]..[2627,83386+35])
                              expression (lambda/matching.ml[2628,83424+4]..[2650,84223+7])
                                Pexp_match
                                expression (lambda/matching.ml[2628,83424+10]..[2628,83424+49])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2628,83424+11]..[2628,83424+18])
                                      Pexp_ident "to_test" (lambda/matching.ml[2628,83424+11]..[2628,83424+18])
                                    expression (lambda/matching.ml[2628,83424+20]..[2628,83424+48])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2628,83424+20]..[2628,83424+43])
                                        Pexp_ident "Default_environment.pop" (lambda/matching.ml[2628,83424+20]..[2628,83424+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2628,83424+44]..[2628,83424+48])
                                            Pexp_ident "defs" (lambda/matching.ml[2628,83424+44]..[2628,83424+48])
                                      ]
                                  ]
                                [
                                  <case>
                                    pattern (lambda/matching.ml[2629,83479+6]..[2630,83491+13])
                                      Ppat_or
                                      pattern (lambda/matching.ml[2629,83479+6]..[2629,83479+11])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2629,83479+6]..[2629,83479+8])
                                            Ppat_construct "[]" (lambda/matching.ml[2629,83479+6]..[2629,83479+8])
                                            None
                                          pattern (lambda/matching.ml[2629,83479+10]..[2629,83479+11])
                                            Ppat_any
                                        ]
                                      pattern (lambda/matching.ml[2630,83491+6]..[2630,83491+13])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2630,83491+6]..[2630,83491+7])
                                            Ppat_any
                                          pattern (lambda/matching.ml[2630,83491+9]..[2630,83491+13])
                                            Ppat_construct "None" (lambda/matching.ml[2630,83491+9]..[2630,83491+13])
                                            None
                                        ]
                                    expression (lambda/matching.ml[2631,83508+8]..[2642,83905+31])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2631,83508+8]..[2631,83508+22])
                                        Pexp_ident "List.fold_left" (lambda/matching.ml[2631,83508+8]..[2631,83508+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2632,83531+10]..[2641,83877+27])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[2632,83531+15]..[2632,83531+29])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[2632,83531+16]..[2632,83531+21])
                                                  Ppat_var "klist" (lambda/matching.ml[2632,83531+16]..[2632,83531+21])
                                                pattern (lambda/matching.ml[2632,83531+23]..[2632,83531+28])
                                                  Ppat_var "jumps" (lambda/matching.ml[2632,83531+23]..[2632,83531+28])
                                              ]
                                            expression (lambda/matching.ml[2632,83531+30]..[2641,83877+26]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/matching.ml[2632,83531+30]..[2632,83531+39])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[2632,83531+31]..[2632,83531+35])
                                                    Ppat_var "pats" (lambda/matching.ml[2632,83531+31]..[2632,83531+35])
                                                  pattern (lambda/matching.ml[2632,83531+37]..[2632,83531+38])
                                                    Ppat_var "i" (lambda/matching.ml[2632,83531+37]..[2632,83531+38])
                                                ]
                                              expression (lambda/matching.ml[2633,83574+12]..[2641,83877+26])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[2633,83574+16]..[2633,83574+22])
                                                      Ppat_var "action" (lambda/matching.ml[2633,83574+16]..[2633,83574+22])
                                                    expression (lambda/matching.ml[2633,83574+25]..[2633,83574+45])
                                                      Pexp_construct "Lstaticraise" (lambda/matching.ml[2633,83574+25]..[2633,83574+37])
                                                      Some
                                                        expression (lambda/matching.ml[2633,83574+38]..[2633,83574+45])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2633,83574+39]..[2633,83574+40])
                                                              Pexp_ident "i" (lambda/matching.ml[2633,83574+39]..[2633,83574+40])
                                                            expression (lambda/matching.ml[2633,83574+42]..[2633,83574+44])
                                                              Pexp_construct "[]" (lambda/matching.ml[2633,83574+42]..[2633,83574+44])
                                                              None
                                                          ]
                                                ]
                                                expression (lambda/matching.ml[2634,83623+12]..[2641,83877+26])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lambda/matching.ml[2634,83623+16]..[2634,83623+21])
                                                        Ppat_var "klist" (lambda/matching.ml[2634,83623+16]..[2634,83623+21])
                                                      expression (lambda/matching.ml[2635,83647+14]..[2637,83742+26])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2635,83647+14]..[2635,83647+29])
                                                          Pexp_ident "List.fold_right" (lambda/matching.ml[2635,83647+14]..[2635,83647+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2636,83677+16]..[2636,83677+64])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (lambda/matching.ml[2636,83677+21]..[2636,83677+24])
                                                                Ppat_var "pat" (lambda/matching.ml[2636,83677+21]..[2636,83677+24])
                                                              expression (lambda/matching.ml[2636,83677+25]..[2636,83677+63]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (lambda/matching.ml[2636,83677+25]..[2636,83677+26])
                                                                  Ppat_var "r" (lambda/matching.ml[2636,83677+25]..[2636,83677+26])
                                                                expression (lambda/matching.ml[2636,83677+30]..[2636,83677+63])
                                                                  Pexp_construct "::" (lambda/matching.ml[2636,83677+59]..[2636,83677+61])
                                                                  Some
                                                                    expression (lambda/matching.ml[2636,83677+30]..[2636,83677+63]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[2636,83677+30]..[2636,83677+58])
  Pexp_tuple
  [
    expression (lambda/matching.ml[2636,83677+31]..[2636,83677+49])
      Pexp_apply
      expression (lambda/matching.ml[2636,83677+31]..[2636,83677+45])
        Pexp_ident "get_key_constr" (lambda/matching.ml[2636,83677+31]..[2636,83677+45])
      [
        <arg>
        Nolabel
          expression (lambda/matching.ml[2636,83677+46]..[2636,83677+49])
            Pexp_ident "pat" (lambda/matching.ml[2636,83677+46]..[2636,83677+49])
      ]
    expression (lambda/matching.ml[2636,83677+51]..[2636,83677+57])
      Pexp_ident "action" (lambda/matching.ml[2636,83677+51]..[2636,83677+57])
  ]
expression (lambda/matching.ml[2636,83677+62]..[2636,83677+63])
  Pexp_ident "r" (lambda/matching.ml[2636,83677+62]..[2636,83677+63])
                                                                      ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2637,83742+16]..[2637,83742+20])
                                                              Pexp_ident "pats" (lambda/matching.ml[2637,83742+16]..[2637,83742+20])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2637,83742+21]..[2637,83742+26])
                                                              Pexp_ident "klist" (lambda/matching.ml[2637,83742+21]..[2637,83742+26])
                                                        ]
                                                    <def>
                                                      pattern (lambda/matching.ml[2638,83769+16]..[2638,83769+21])
                                                        Ppat_var "jumps" (lambda/matching.ml[2638,83769+16]..[2638,83769+21])
                                                      expression (lambda/matching.ml[2639,83793+14]..[2639,83793+68])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2639,83793+14]..[2639,83793+23])
                                                          Pexp_ident "Jumps.add" (lambda/matching.ml[2639,83793+14]..[2639,83793+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2639,83793+24]..[2639,83793+25])
                                                              Pexp_ident "i" (lambda/matching.ml[2639,83793+24]..[2639,83793+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2639,83793+26]..[2639,83793+62])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2639,83793+27]..[2639,83793+38])
                                                                Pexp_ident "Context.lub" (lambda/matching.ml[2639,83793+27]..[2639,83793+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2639,83793+39]..[2639,83793+57])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[2639,83793+40]..[2639,83793+51])
                                                                      Pexp_ident "list_as_pat" (lambda/matching.ml[2639,83793+40]..[2639,83793+51])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[2639,83793+52]..[2639,83793+56])
  Pexp_ident "pats" (lambda/matching.ml[2639,83793+52]..[2639,83793+56])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2639,83793+58]..[2639,83793+61])
                                                                    Pexp_ident "ctx" (lambda/matching.ml[2639,83793+58]..[2639,83793+61])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2639,83793+63]..[2639,83793+68])
                                                              Pexp_ident "jumps" (lambda/matching.ml[2639,83793+63]..[2639,83793+68])
                                                        ]
                                                  ]
                                                  expression (lambda/matching.ml[2641,83877+12]..[2641,83877+26])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2641,83877+13]..[2641,83877+18])
                                                        Pexp_ident "klist" (lambda/matching.ml[2641,83877+13]..[2641,83877+18])
                                                      expression (lambda/matching.ml[2641,83877+20]..[2641,83877+25])
                                                        Pexp_ident "jumps" (lambda/matching.ml[2641,83877+20]..[2641,83877+25])
                                                    ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2642,83905+10]..[2642,83905+27])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2642,83905+11]..[2642,83905+13])
                                                Pexp_construct "[]" (lambda/matching.ml[2642,83905+11]..[2642,83905+13])
                                                None
                                              expression (lambda/matching.ml[2642,83905+15]..[2642,83905+26])
                                                Pexp_ident "Jumps.empty" (lambda/matching.ml[2642,83905+15]..[2642,83905+26])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2642,83905+28]..[2642,83905+31])
                                            Pexp_ident "env" (lambda/matching.ml[2642,83905+28]..[2642,83905+31])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[2643,83937+6]..[2643,83937+32])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[2643,83937+6]..[2643,83937+7])
                                          Ppat_any
                                        pattern (lambda/matching.ml[2643,83937+9]..[2643,83937+32])
                                          Ppat_construct "Some" (lambda/matching.ml[2643,83937+9]..[2643,83937+13])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[2643,83937+14]..[2643,83937+32])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[2643,83937+15]..[2643,83937+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[2643,83937+16]..[2643,83937+19])
                                                      Ppat_var "pss" (lambda/matching.ml[2643,83937+16]..[2643,83937+19])
                                                    pattern (lambda/matching.ml[2643,83937+21]..[2643,83937+25])
                                                      Ppat_var "idef" (lambda/matching.ml[2643,83937+21]..[2643,83937+25])
                                                  ]
                                                pattern (lambda/matching.ml[2643,83937+28]..[2643,83937+31])
                                                  Ppat_var "rem" (lambda/matching.ml[2643,83937+28]..[2643,83937+31])
                                              ]
                                      ]
                                    expression (lambda/matching.ml[2643,83937+36]..[2650,84223+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2644,83975+12]..[2644,83975+22])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2644,83975+12]..[2644,83975+15])
                                                Ppat_var "now" (lambda/matching.ml[2644,83975+12]..[2644,83975+15])
                                              pattern (lambda/matching.ml[2644,83975+17]..[2644,83975+22])
                                                Ppat_var "later" (lambda/matching.ml[2644,83975+17]..[2644,83975+22])
                                            ]
                                          expression (lambda/matching.ml[2645,84000+10]..[2645,84000+79])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2645,84000+10]..[2645,84000+24])
                                              Pexp_ident "List.partition" (lambda/matching.ml[2645,84000+10]..[2645,84000+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2645,84000+25]..[2645,84000+71])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/matching.ml[2645,84000+30]..[2645,84000+41])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[2645,84000+31]..[2645,84000+33])
                                                        Ppat_var "_p" (lambda/matching.ml[2645,84000+31]..[2645,84000+33])
                                                      pattern (lambda/matching.ml[2645,84000+35]..[2645,84000+40])
                                                        Ppat_var "p_ctx" (lambda/matching.ml[2645,84000+35]..[2645,84000+40])
                                                    ]
                                                  expression (lambda/matching.ml[2645,84000+45]..[2645,84000+70])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[2645,84000+45]..[2645,84000+60])
                                                      Pexp_ident "Context.matches" (lambda/matching.ml[2645,84000+45]..[2645,84000+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2645,84000+61]..[2645,84000+66])
                                                          Pexp_ident "p_ctx" (lambda/matching.ml[2645,84000+61]..[2645,84000+66])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[2645,84000+67]..[2645,84000+70])
                                                          Pexp_ident "pss" (lambda/matching.ml[2645,84000+67]..[2645,84000+70])
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2645,84000+72]..[2645,84000+79])
                                                  Pexp_ident "to_test" (lambda/matching.ml[2645,84000+72]..[2645,84000+79])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2647,84091+8]..[2649,84155+67])
                                        Pexp_match
                                        expression (lambda/matching.ml[2647,84091+14]..[2647,84091+17])
                                          Pexp_ident "now" (lambda/matching.ml[2647,84091+14]..[2647,84091+17])
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[2648,84114+10]..[2648,84114+12])
                                              Ppat_construct "[]" (lambda/matching.ml[2648,84114+10]..[2648,84114+12])
                                              None
                                            expression (lambda/matching.ml[2648,84114+16]..[2648,84114+40])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2648,84114+16]..[2648,84114+24])
                                                Pexp_ident "scan_def" (lambda/matching.ml[2648,84114+16]..[2648,84114+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2648,84114+25]..[2648,84114+28])
                                                    Pexp_ident "env" (lambda/matching.ml[2648,84114+25]..[2648,84114+28])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2648,84114+29]..[2648,84114+36])
                                                    Pexp_ident "to_test" (lambda/matching.ml[2648,84114+29]..[2648,84114+36])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2648,84114+37]..[2648,84114+40])
                                                    Pexp_ident "rem" (lambda/matching.ml[2648,84114+37]..[2648,84114+40])
                                              ]
                                          <case>
                                            pattern (lambda/matching.ml[2649,84155+10]..[2649,84155+11])
                                              Ppat_any
                                            expression (lambda/matching.ml[2649,84155+15]..[2649,84155+67])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2649,84155+15]..[2649,84155+23])
                                                Pexp_ident "scan_def" (lambda/matching.ml[2649,84155+15]..[2649,84155+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2649,84155+24]..[2649,84155+57])
                                                    Pexp_construct "::" (lambda/matching.ml[2649,84155+50]..[2649,84155+52])
                                                    Some
                                                      expression (lambda/matching.ml[2649,84155+25]..[2649,84155+56]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2649,84155+25]..[2649,84155+49])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2649,84155+26]..[2649,84155+42])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2649,84155+26]..[2649,84155+34])
                                                                  Pexp_ident "List.map" (lambda/matching.ml[2649,84155+26]..[2649,84155+34])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2649,84155+35]..[2649,84155+38])
                                                                      Pexp_ident "fst" (lambda/matching.ml[2649,84155+35]..[2649,84155+38])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2649,84155+39]..[2649,84155+42])
                                                                      Pexp_ident "now" (lambda/matching.ml[2649,84155+39]..[2649,84155+42])
                                                                ]
                                                              expression (lambda/matching.ml[2649,84155+44]..[2649,84155+48])
                                                                Pexp_ident "idef" (lambda/matching.ml[2649,84155+44]..[2649,84155+48])
                                                            ]
                                                          expression (lambda/matching.ml[2649,84155+53]..[2649,84155+56])
                                                            Pexp_ident "env" (lambda/matching.ml[2649,84155+53]..[2649,84155+56])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2649,84155+58]..[2649,84155+63])
                                                    Pexp_ident "later" (lambda/matching.ml[2649,84155+58]..[2649,84155+63])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2649,84155+64]..[2649,84155+67])
                                                    Pexp_ident "rem" (lambda/matching.ml[2649,84155+64]..[2649,84155+67])
                                              ]
                                        ]
                                ]
                    ]
                    expression (lambda/matching.ml[2652,84236+2]..[2675,84963+3])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[2652,84236+6]..[2652,84236+15])
                            Ppat_var "fail_pats" (lambda/matching.ml[2652,84236+6]..[2652,84236+15])
                          expression (lambda/matching.ml[2652,84236+18]..[2652,84236+44])
                            Pexp_apply
                            expression (lambda/matching.ml[2652,84236+18]..[2652,84236+39])
                              Pexp_ident "complete_pats_constrs" (lambda/matching.ml[2652,84236+18]..[2652,84236+39])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2652,84236+40]..[2652,84236+44])
                                  Pexp_ident "seen" (lambda/matching.ml[2652,84236+40]..[2652,84236+44])
                            ]
                      ]
                      expression (lambda/matching.ml[2653,84284+2]..[2675,84963+3])
                        Pexp_ifthenelse
                        expression (lambda/matching.ml[2653,84284+5]..[2653,84284+56])
                          Pexp_apply
                          expression (lambda/matching.ml[2653,84284+27]..[2653,84284+28])
                            Pexp_ident "<" (lambda/matching.ml[2653,84284+27]..[2653,84284+28])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2653,84284+5]..[2653,84284+26])
                                Pexp_apply
                                expression (lambda/matching.ml[2653,84284+5]..[2653,84284+16])
                                  Pexp_ident "List.length" (lambda/matching.ml[2653,84284+5]..[2653,84284+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2653,84284+17]..[2653,84284+26])
                                      Pexp_ident "fail_pats" (lambda/matching.ml[2653,84284+17]..[2653,84284+26])
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[2653,84284+29]..[2653,84284+56])
                                Pexp_apply
                                expression (lambda/matching.ml[2653,84284+29]..[2653,84284+30])
                                  Pexp_ident "!" (lambda/matching.ml[2653,84284+29]..[2653,84284+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2653,84284+30]..[2653,84284+56])
                                      Pexp_ident "Clflags.match_context_rows" (lambda/matching.ml[2653,84284+30]..[2653,84284+56])
                                ]
                          ]
                        expression (lambda/matching.ml[2653,84284+62]..[2664,84613+3])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2654,84348+8]..[2654,84348+18])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2654,84348+8]..[2654,84348+12])
                                    Ppat_var "fail" (lambda/matching.ml[2654,84348+8]..[2654,84348+12])
                                  pattern (lambda/matching.ml[2654,84348+14]..[2654,84348+18])
                                    Ppat_var "jmps" (lambda/matching.ml[2654,84348+14]..[2654,84348+18])
                                ]
                              expression (lambda/matching.ml[2655,84369+6]..[2657,84456+12])
                                Pexp_apply
                                expression (lambda/matching.ml[2655,84369+6]..[2655,84369+14])
                                  Pexp_ident "scan_def" (lambda/matching.ml[2655,84369+6]..[2655,84369+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2655,84369+15]..[2655,84369+17])
                                      Pexp_construct "[]" (lambda/matching.ml[2655,84369+15]..[2655,84369+17])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2656,84387+8]..[2656,84387+68])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2656,84387+9]..[2656,84387+17])
                                        Pexp_ident "List.map" (lambda/matching.ml[2656,84387+9]..[2656,84387+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2656,84387+18]..[2656,84387+57])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[2656,84387+23]..[2656,84387+26])
                                              Ppat_var "pat" (lambda/matching.ml[2656,84387+23]..[2656,84387+26])
                                            expression (lambda/matching.ml[2656,84387+30]..[2656,84387+56])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2656,84387+31]..[2656,84387+34])
                                                  Pexp_ident "pat" (lambda/matching.ml[2656,84387+31]..[2656,84387+34])
                                                expression (lambda/matching.ml[2656,84387+36]..[2656,84387+55])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2656,84387+36]..[2656,84387+47])
                                                    Pexp_ident "Context.lub" (lambda/matching.ml[2656,84387+36]..[2656,84387+47])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2656,84387+48]..[2656,84387+51])
                                                        Pexp_ident "pat" (lambda/matching.ml[2656,84387+48]..[2656,84387+51])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2656,84387+52]..[2656,84387+55])
                                                        Pexp_ident "ctx" (lambda/matching.ml[2656,84387+52]..[2656,84387+55])
                                                  ]
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2656,84387+58]..[2656,84387+67])
                                            Pexp_ident "fail_pats" (lambda/matching.ml[2656,84387+58]..[2656,84387+67])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2657,84456+8]..[2657,84456+12])
                                      Pexp_ident "defs" (lambda/matching.ml[2657,84456+8]..[2657,84456+12])
                                ]
                          ]
                          expression (lambda/matching.ml[2659,84476+4]..[2663,84590+22])
                            Pexp_sequence
                            expression (lambda/matching.ml[2659,84476+4]..[2662,84583+5])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2659,84476+7]..[2659,84476+10])
                                Pexp_ident "dbg" (lambda/matching.ml[2659,84476+7]..[2659,84476+10])
                              expression (lambda/matching.ml[2659,84476+16]..[2662,84583+5])
                                Pexp_sequence
                                expression (lambda/matching.ml[2660,84494+6]..[2660,84494+62])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2660,84494+6]..[2660,84494+13])
                                    Pexp_ident "eprintf" (lambda/matching.ml[2660,84494+6]..[2660,84494+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2660,84494+14]..[2660,84494+38])
                                        Pexp_constant PConst_string("POSITIVE JUMPS [%i]:\n",(lambda/matching.ml[2660,84494+15]..[2660,84494+37]),None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2660,84494+39]..[2660,84494+62])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2660,84494+40]..[2660,84494+51])
                                          Pexp_ident "List.length" (lambda/matching.ml[2660,84494+40]..[2660,84494+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2660,84494+52]..[2660,84494+61])
                                              Pexp_ident "fail_pats" (lambda/matching.ml[2660,84494+52]..[2660,84494+61])
                                        ]
                                  ]
                                expression (lambda/matching.ml[2661,84558+6]..[2661,84558+24])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2661,84558+6]..[2661,84558+19])
                                    Pexp_ident "Jumps.eprintf" (lambda/matching.ml[2661,84558+6]..[2661,84558+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2661,84558+20]..[2661,84558+24])
                                        Pexp_ident "jmps" (lambda/matching.ml[2661,84558+20]..[2661,84558+24])
                                  ]
                              None
                            expression (lambda/matching.ml[2663,84590+4]..[2663,84590+22])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[2663,84590+5]..[2663,84590+9])
                                  Pexp_construct "None" (lambda/matching.ml[2663,84590+5]..[2663,84590+9])
                                  None
                                expression (lambda/matching.ml[2663,84590+11]..[2663,84590+15])
                                  Pexp_ident "fail" (lambda/matching.ml[2663,84590+11]..[2663,84590+15])
                                expression (lambda/matching.ml[2663,84590+17]..[2663,84590+21])
                                  Pexp_ident "jmps" (lambda/matching.ml[2663,84590+17]..[2663,84590+21])
                              ]
                        Some
                          expression (lambda/matching.ml[2664,84613+9]..[2675,84963+3])
                            Pexp_sequence
                            expression (lambda/matching.ml[2666,84691+4]..[2666,84691+41])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2666,84691+7]..[2666,84691+10])
                                Pexp_ident "dbg" (lambda/matching.ml[2666,84691+7]..[2666,84691+10])
                              expression (lambda/matching.ml[2666,84691+16]..[2666,84691+41])
                                Pexp_apply
                                expression (lambda/matching.ml[2666,84691+16]..[2666,84691+23])
                                  Pexp_ident "eprintf" (lambda/matching.ml[2666,84691+16]..[2666,84691+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2666,84691+24]..[2666,84691+41])
                                      Pexp_constant PConst_string("POS->NEG!!!\n%!",(lambda/matching.ml[2666,84691+25]..[2666,84691+40]),None)
                                ]
                              None
                            expression (lambda/matching.ml[2667,84734+4]..[2674,84941+21])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[2667,84734+8]..[2667,84734+19])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2667,84734+8]..[2667,84734+12])
                                        Ppat_var "fail" (lambda/matching.ml[2667,84734+8]..[2667,84734+12])
                                      pattern (lambda/matching.ml[2667,84734+14]..[2667,84734+19])
                                        Ppat_var "jumps" (lambda/matching.ml[2667,84734+14]..[2667,84734+19])
                                    ]
                                  expression (lambda/matching.ml[2667,84734+22]..[2667,84734+56])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2667,84734+22]..[2667,84734+39])
                                      Pexp_ident "mk_failaction_neg" (lambda/matching.ml[2667,84734+22]..[2667,84734+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2667,84734+40]..[2667,84734+47])
                                          Pexp_ident "partial" (lambda/matching.ml[2667,84734+40]..[2667,84734+47])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2667,84734+48]..[2667,84734+51])
                                          Pexp_ident "ctx" (lambda/matching.ml[2667,84734+48]..[2667,84734+51])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2667,84734+52]..[2667,84734+56])
                                          Pexp_ident "defs" (lambda/matching.ml[2667,84734+52]..[2667,84734+56])
                                    ]
                              ]
                              expression (lambda/matching.ml[2668,84794+4]..[2674,84941+21])
                                Pexp_sequence
                                expression (lambda/matching.ml[2668,84794+4]..[2673,84930+9])
                                  Pexp_ifthenelse
                                  expression (lambda/matching.ml[2668,84794+7]..[2668,84794+10])
                                    Pexp_ident "dbg" (lambda/matching.ml[2668,84794+7]..[2668,84794+10])
                                  expression (lambda/matching.ml[2669,84810+6]..[2673,84930+9])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2669,84810+6]..[2669,84810+13])
                                      Pexp_ident "eprintf" (lambda/matching.ml[2669,84810+6]..[2669,84810+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2669,84810+14]..[2669,84810+26])
                                          Pexp_constant PConst_string("FAIL: %s\n",(lambda/matching.ml[2669,84810+15]..[2669,84810+25]),None)
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2670,84837+8]..[2673,84930+9])
                                          Pexp_match
                                          expression (lambda/matching.ml[2670,84837+16]..[2670,84837+20])
                                            Pexp_ident "fail" (lambda/matching.ml[2670,84837+16]..[2670,84837+20])
                                          [
                                            <case>
                                              pattern (lambda/matching.ml[2671,84863+10]..[2671,84863+14])
                                                Ppat_construct "None" (lambda/matching.ml[2671,84863+10]..[2671,84863+14])
                                                None
                                              expression (lambda/matching.ml[2671,84863+18]..[2671,84863+26])
                                                Pexp_constant PConst_string("<none>",(lambda/matching.ml[2671,84863+19]..[2671,84863+25]),None)
                                            <case>
                                              pattern (lambda/matching.ml[2672,84890+10]..[2672,84890+18])
                                                Ppat_construct "Some" (lambda/matching.ml[2672,84890+10]..[2672,84890+14])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[2672,84890+15]..[2672,84890+18])
                                                    Ppat_var "lam" (lambda/matching.ml[2672,84890+15]..[2672,84890+18])
                                              expression (lambda/matching.ml[2672,84890+22]..[2672,84890+39])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2672,84890+22]..[2672,84890+35])
                                                  Pexp_ident "string_of_lam" (lambda/matching.ml[2672,84890+22]..[2672,84890+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2672,84890+36]..[2672,84890+39])
                                                      Pexp_ident "lam" (lambda/matching.ml[2672,84890+36]..[2672,84890+39])
                                                ]
                                          ]
                                    ]
                                  None
                                expression (lambda/matching.ml[2674,84941+4]..[2674,84941+21])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2674,84941+5]..[2674,84941+9])
                                      Pexp_ident "fail" (lambda/matching.ml[2674,84941+5]..[2674,84941+9])
                                    expression (lambda/matching.ml[2674,84941+11]..[2674,84941+13])
                                      Pexp_construct "[]" (lambda/matching.ml[2674,84941+11]..[2674,84941+13])
                                      None
                                    expression (lambda/matching.ml[2674,84941+15]..[2674,84941+20])
                                      Pexp_ident "jumps" (lambda/matching.ml[2674,84941+15]..[2674,84941+20])
                                  ]
    ]
  structure_item (lambda/matching.ml[2677,84968+0]..[2735,86990+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2677,84968+4]..[2677,84968+20])
          Ppat_var "combine_constant" (lambda/matching.ml[2677,84968+4]..[2677,84968+20])
        expression (lambda/matching.ml[2677,84968+21]..[2735,86990+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2677,84968+21]..[2677,84968+24])
            Ppat_var "loc" (lambda/matching.ml[2677,84968+21]..[2677,84968+24])
          expression (lambda/matching.ml[2677,84968+25]..[2735,86990+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2677,84968+25]..[2677,84968+28])
              Ppat_var "arg" (lambda/matching.ml[2677,84968+25]..[2677,84968+28])
            expression (lambda/matching.ml[2677,84968+29]..[2735,86990+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2677,84968+29]..[2677,84968+32])
                Ppat_var "cst" (lambda/matching.ml[2677,84968+29]..[2677,84968+32])
              expression (lambda/matching.ml[2677,84968+33]..[2735,86990+42]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2677,84968+33]..[2677,84968+40])
                  Ppat_var "partial" (lambda/matching.ml[2677,84968+33]..[2677,84968+40])
                expression (lambda/matching.ml[2677,84968+41]..[2735,86990+42]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2677,84968+41]..[2677,84968+44])
                    Ppat_var "ctx" (lambda/matching.ml[2677,84968+41]..[2677,84968+44])
                  expression (lambda/matching.ml[2677,84968+45]..[2735,86990+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2677,84968+45]..[2677,84968+48])
                      Ppat_var "def" (lambda/matching.ml[2677,84968+45]..[2677,84968+48])
                    expression (lambda/matching.ml[2678,85017+4]..[2735,86990+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2678,85017+4]..[2678,85017+37])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2678,85017+5]..[2678,85017+22])
                            Ppat_var "const_lambda_list" (lambda/matching.ml[2678,85017+5]..[2678,85017+22])
                          pattern (lambda/matching.ml[2678,85017+24]..[2678,85017+29])
                            Ppat_var "total" (lambda/matching.ml[2678,85017+24]..[2678,85017+29])
                          pattern (lambda/matching.ml[2678,85017+31]..[2678,85017+36])
                            Ppat_var "_pats" (lambda/matching.ml[2678,85017+31]..[2678,85017+36])
                        ]
                      expression (lambda/matching.ml[2679,85057+2]..[2735,86990+42])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2679,85057+6]..[2679,85057+23])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2679,85057+6]..[2679,85057+10])
                                  Ppat_var "fail" (lambda/matching.ml[2679,85057+6]..[2679,85057+10])
                                pattern (lambda/matching.ml[2679,85057+12]..[2679,85057+23])
                                  Ppat_var "local_jumps" (lambda/matching.ml[2679,85057+12]..[2679,85057+23])
                              ]
                            expression (lambda/matching.ml[2679,85057+26]..[2679,85057+59])
                              Pexp_apply
                              expression (lambda/matching.ml[2679,85057+26]..[2679,85057+43])
                                Pexp_ident "mk_failaction_neg" (lambda/matching.ml[2679,85057+26]..[2679,85057+43])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2679,85057+44]..[2679,85057+51])
                                    Pexp_ident "partial" (lambda/matching.ml[2679,85057+44]..[2679,85057+51])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2679,85057+52]..[2679,85057+55])
                                    Pexp_ident "ctx" (lambda/matching.ml[2679,85057+52]..[2679,85057+55])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2679,85057+56]..[2679,85057+59])
                                    Pexp_ident "def" (lambda/matching.ml[2679,85057+56]..[2679,85057+59])
                              ]
                        ]
                        expression (lambda/matching.ml[2680,85120+2]..[2735,86990+42])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2680,85120+6]..[2680,85120+13])
                                Ppat_var "lambda1" (lambda/matching.ml[2680,85120+6]..[2680,85120+13])
                              expression (lambda/matching.ml[2681,85136+4]..[2733,86953+31])
                                Pexp_match
                                expression (lambda/matching.ml[2681,85136+10]..[2681,85136+13])
                                  Pexp_ident "cst" (lambda/matching.ml[2681,85136+10]..[2681,85136+13])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[2682,85155+6]..[2682,85155+17])
                                      Ppat_construct "Const_int" (lambda/matching.ml[2682,85155+6]..[2682,85155+15])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2682,85155+16]..[2682,85155+17])
                                          Ppat_any
                                    expression (lambda/matching.ml[2683,85176+8]..[2690,85364+66])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2683,85176+12]..[2683,85176+27])
                                            Ppat_var "int_lambda_list" (lambda/matching.ml[2683,85176+12]..[2683,85176+27])
                                          expression (lambda/matching.ml[2684,85206+10]..[2688,85323+29])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2684,85206+10]..[2684,85206+18])
                                              Pexp_ident "List.map" (lambda/matching.ml[2684,85206+10]..[2684,85206+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2685,85225+12]..[2687,85288+34])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[2686,85247+16]..[2686,85247+30])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2686,85247+16]..[2686,85247+27])
                                                            Ppat_construct "Const_int" (lambda/matching.ml[2686,85247+16]..[2686,85247+25])
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2686,85247+26]..[2686,85247+27])
                                                                Ppat_var "n" (lambda/matching.ml[2686,85247+26]..[2686,85247+27])
                                                          pattern (lambda/matching.ml[2686,85247+29]..[2686,85247+30])
                                                            Ppat_var "l" (lambda/matching.ml[2686,85247+29]..[2686,85247+30])
                                                        ]
                                                      expression (lambda/matching.ml[2686,85247+34]..[2686,85247+40])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2686,85247+35]..[2686,85247+36])
                                                            Pexp_ident "n" (lambda/matching.ml[2686,85247+35]..[2686,85247+36])
                                                          expression (lambda/matching.ml[2686,85247+38]..[2686,85247+39])
                                                            Pexp_ident "l" (lambda/matching.ml[2686,85247+38]..[2686,85247+39])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2687,85288+16]..[2687,85288+17])
                                                        Ppat_any
                                                      expression (lambda/matching.ml[2687,85288+21]..[2687,85288+33])
                                                        Pexp_assert
                                                        expression (lambda/matching.ml[2687,85288+28]..[2687,85288+33])
                                                          Pexp_construct "false" (lambda/matching.ml[2687,85288+28]..[2687,85288+33])
                                                          None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2688,85323+12]..[2688,85323+29])
                                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2688,85323+12]..[2688,85323+29])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2690,85364+8]..[2690,85364+66])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2690,85364+8]..[2690,85364+21])
                                          Pexp_ident "call_switcher" (lambda/matching.ml[2690,85364+8]..[2690,85364+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+22]..[2690,85364+25])
                                              Pexp_ident "loc" (lambda/matching.ml[2690,85364+22]..[2690,85364+25])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+26]..[2690,85364+30])
                                              Pexp_ident "fail" (lambda/matching.ml[2690,85364+26]..[2690,85364+30])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+31]..[2690,85364+34])
                                              Pexp_ident "arg" (lambda/matching.ml[2690,85364+31]..[2690,85364+34])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+35]..[2690,85364+42])
                                              Pexp_ident "min_int" (lambda/matching.ml[2690,85364+35]..[2690,85364+42])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+43]..[2690,85364+50])
                                              Pexp_ident "max_int" (lambda/matching.ml[2690,85364+43]..[2690,85364+50])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2690,85364+51]..[2690,85364+66])
                                              Pexp_ident "int_lambda_list" (lambda/matching.ml[2690,85364+51]..[2690,85364+66])
                                        ]
                                  <case>
                                    pattern (lambda/matching.ml[2691,85431+6]..[2691,85431+18])
                                      Ppat_construct "Const_char" (lambda/matching.ml[2691,85431+6]..[2691,85431+16])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2691,85431+17]..[2691,85431+18])
                                          Ppat_any
                                    expression (lambda/matching.ml[2692,85453+8]..[2699,85652+56])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2692,85453+12]..[2692,85453+27])
                                            Ppat_var "int_lambda_list" (lambda/matching.ml[2692,85453+12]..[2692,85453+27])
                                          expression (lambda/matching.ml[2693,85483+10]..[2697,85611+29])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2693,85483+10]..[2693,85483+18])
                                              Pexp_ident "List.map" (lambda/matching.ml[2693,85483+10]..[2693,85483+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2694,85502+12]..[2696,85576+34])
                                                  Pexp_function
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[2695,85524+16]..[2695,85524+31])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2695,85524+16]..[2695,85524+28])
                                                            Ppat_construct "Const_char" (lambda/matching.ml[2695,85524+16]..[2695,85524+26])
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2695,85524+27]..[2695,85524+28])
                                                                Ppat_var "c" (lambda/matching.ml[2695,85524+27]..[2695,85524+28])
                                                          pattern (lambda/matching.ml[2695,85524+30]..[2695,85524+31])
                                                            Ppat_var "l" (lambda/matching.ml[2695,85524+30]..[2695,85524+31])
                                                        ]
                                                      expression (lambda/matching.ml[2695,85524+35]..[2695,85524+51])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2695,85524+36]..[2695,85524+47])
                                                            Pexp_apply
                                                            expression (lambda/matching.ml[2695,85524+36]..[2695,85524+45])
                                                              Pexp_ident "Char.code" (lambda/matching.ml[2695,85524+36]..[2695,85524+45])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/matching.ml[2695,85524+46]..[2695,85524+47])
                                                                  Pexp_ident "c" (lambda/matching.ml[2695,85524+46]..[2695,85524+47])
                                                            ]
                                                          expression (lambda/matching.ml[2695,85524+49]..[2695,85524+50])
                                                            Pexp_ident "l" (lambda/matching.ml[2695,85524+49]..[2695,85524+50])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2696,85576+16]..[2696,85576+17])
                                                        Ppat_any
                                                      expression (lambda/matching.ml[2696,85576+21]..[2696,85576+33])
                                                        Pexp_assert
                                                        expression (lambda/matching.ml[2696,85576+28]..[2696,85576+33])
                                                          Pexp_construct "false" (lambda/matching.ml[2696,85576+28]..[2696,85576+33])
                                                          None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2697,85611+12]..[2697,85611+29])
                                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2697,85611+12]..[2697,85611+29])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2699,85652+8]..[2699,85652+56])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2699,85652+8]..[2699,85652+21])
                                          Pexp_ident "call_switcher" (lambda/matching.ml[2699,85652+8]..[2699,85652+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+22]..[2699,85652+25])
                                              Pexp_ident "loc" (lambda/matching.ml[2699,85652+22]..[2699,85652+25])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+26]..[2699,85652+30])
                                              Pexp_ident "fail" (lambda/matching.ml[2699,85652+26]..[2699,85652+30])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+31]..[2699,85652+34])
                                              Pexp_ident "arg" (lambda/matching.ml[2699,85652+31]..[2699,85652+34])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+35]..[2699,85652+36])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+37]..[2699,85652+40])
                                              Pexp_constant PConst_int (255,None)
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2699,85652+41]..[2699,85652+56])
                                              Pexp_ident "int_lambda_list" (lambda/matching.ml[2699,85652+41]..[2699,85652+56])
                                        ]
                                  <case>
                                    pattern (lambda/matching.ml[2700,85709+6]..[2700,85709+20])
                                      Ppat_construct "Const_string" (lambda/matching.ml[2700,85709+6]..[2700,85709+18])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2700,85709+19]..[2700,85709+20])
                                          Ppat_any
                                    expression (lambda/matching.ml[2705,85962+8]..[2715,86308+47])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2705,85962+12]..[2705,85962+29])
                                            Ppat_var "const_lambda_list" (lambda/matching.ml[2705,85962+12]..[2705,85962+29])
                                          expression (lambda/matching.ml[2705,85962+32]..[2705,85962+66])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2705,85962+32]..[2705,85962+48])
                                              Pexp_ident "sort_lambda_list" (lambda/matching.ml[2705,85962+32]..[2705,85962+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2705,85962+49]..[2705,85962+66])
                                                  Pexp_ident "const_lambda_list" (lambda/matching.ml[2705,85962+49]..[2705,85962+66])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2706,86032+8]..[2715,86308+47])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[2706,86032+12]..[2706,86032+14])
                                              Ppat_var "sw" (lambda/matching.ml[2706,86032+12]..[2706,86032+14])
                                            expression (lambda/matching.ml[2707,86049+10]..[2712,86210+29])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2707,86049+10]..[2707,86049+18])
                                                Pexp_ident "List.map" (lambda/matching.ml[2707,86049+10]..[2707,86049+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2708,86068+12]..[2711,86175+34])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/matching.ml[2708,86068+17]..[2708,86068+25])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[2708,86068+18]..[2708,86068+19])
                                                          Ppat_var "c" (lambda/matching.ml[2708,86068+18]..[2708,86068+19])
                                                        pattern (lambda/matching.ml[2708,86068+21]..[2708,86068+24])
                                                          Ppat_var "act" (lambda/matching.ml[2708,86068+21]..[2708,86068+24])
                                                      ]
                                                    expression (lambda/matching.ml[2709,86097+14]..[2711,86175+33])
                                                      Pexp_match
                                                      expression (lambda/matching.ml[2709,86097+20]..[2709,86097+21])
                                                        Pexp_ident "c" (lambda/matching.ml[2709,86097+20]..[2709,86097+21])
                                                      [
                                                        <case>
                                                          pattern (lambda/matching.ml[2710,86124+16]..[2710,86124+38])
                                                            Ppat_construct "Const_string" (lambda/matching.ml[2710,86124+16]..[2710,86124+28])
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2710,86124+29]..[2710,86124+38])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lambda/matching.ml[2710,86124+30]..[2710,86124+31])
                                                                    Ppat_var "s" (lambda/matching.ml[2710,86124+30]..[2710,86124+31])
                                                                  pattern (lambda/matching.ml[2710,86124+33]..[2710,86124+34])
                                                                    Ppat_any
                                                                  pattern (lambda/matching.ml[2710,86124+36]..[2710,86124+37])
                                                                    Ppat_any
                                                                ]
                                                          expression (lambda/matching.ml[2710,86124+42]..[2710,86124+50])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[2710,86124+43]..[2710,86124+44])
                                                                Pexp_ident "s" (lambda/matching.ml[2710,86124+43]..[2710,86124+44])
                                                              expression (lambda/matching.ml[2710,86124+46]..[2710,86124+49])
                                                                Pexp_ident "act" (lambda/matching.ml[2710,86124+46]..[2710,86124+49])
                                                            ]
                                                        <case>
                                                          pattern (lambda/matching.ml[2711,86175+16]..[2711,86175+17])
                                                            Ppat_any
                                                          expression (lambda/matching.ml[2711,86175+21]..[2711,86175+33])
                                                            Pexp_assert
                                                            expression (lambda/matching.ml[2711,86175+28]..[2711,86175+33])
                                                              Pexp_construct "false" (lambda/matching.ml[2711,86175+28]..[2711,86175+33])
                                                              None
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2712,86210+12]..[2712,86210+29])
                                                    Pexp_ident "const_lambda_list" (lambda/matching.ml[2712,86210+12]..[2712,86210+29])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[2714,86251+8]..[2715,86308+47])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[2714,86251+12]..[2714,86251+24])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[2714,86251+12]..[2714,86251+14])
                                                    Ppat_var "hs" (lambda/matching.ml[2714,86251+12]..[2714,86251+14])
                                                  pattern (lambda/matching.ml[2714,86251+16]..[2714,86251+18])
                                                    Ppat_var "sw" (lambda/matching.ml[2714,86251+16]..[2714,86251+18])
                                                  pattern (lambda/matching.ml[2714,86251+20]..[2714,86251+24])
                                                    Ppat_var "fail" (lambda/matching.ml[2714,86251+20]..[2714,86251+24])
                                                ]
                                              expression (lambda/matching.ml[2714,86251+27]..[2714,86251+53])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2714,86251+27]..[2714,86251+45])
                                                  Pexp_ident "share_actions_tree" (lambda/matching.ml[2714,86251+27]..[2714,86251+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2714,86251+46]..[2714,86251+48])
                                                      Pexp_ident "sw" (lambda/matching.ml[2714,86251+46]..[2714,86251+48])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2714,86251+49]..[2714,86251+53])
                                                      Pexp_ident "fail" (lambda/matching.ml[2714,86251+49]..[2714,86251+53])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[2715,86308+8]..[2715,86308+47])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2715,86308+8]..[2715,86308+10])
                                              Pexp_ident "hs" (lambda/matching.ml[2715,86308+8]..[2715,86308+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2715,86308+11]..[2715,86308+47])
                                                  Pexp_construct "Lstringswitch" (lambda/matching.ml[2715,86308+12]..[2715,86308+25])
                                                  Some
                                                    expression (lambda/matching.ml[2715,86308+26]..[2715,86308+46])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2715,86308+27]..[2715,86308+30])
                                                          Pexp_ident "arg" (lambda/matching.ml[2715,86308+27]..[2715,86308+30])
                                                        expression (lambda/matching.ml[2715,86308+32]..[2715,86308+34])
                                                          Pexp_ident "sw" (lambda/matching.ml[2715,86308+32]..[2715,86308+34])
                                                        expression (lambda/matching.ml[2715,86308+36]..[2715,86308+40])
                                                          Pexp_ident "fail" (lambda/matching.ml[2715,86308+36]..[2715,86308+40])
                                                        expression (lambda/matching.ml[2715,86308+42]..[2715,86308+45])
                                                          Pexp_ident "loc" (lambda/matching.ml[2715,86308+42]..[2715,86308+45])
                                                      ]
                                            ]
                                  <case>
                                    pattern (lambda/matching.ml[2716,86356+6]..[2716,86356+19])
                                      Ppat_construct "Const_float" (lambda/matching.ml[2716,86356+6]..[2716,86356+17])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2716,86356+18]..[2716,86356+19])
                                          Ppat_any
                                    expression (lambda/matching.ml[2717,86379+8]..[2718,86456+27])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2717,86379+8]..[2717,86379+26])
                                        Pexp_ident "make_test_sequence" (lambda/matching.ml[2717,86379+8]..[2717,86379+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2717,86379+27]..[2717,86379+30])
                                            Pexp_ident "loc" (lambda/matching.ml[2717,86379+27]..[2717,86379+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2717,86379+31]..[2717,86379+35])
                                            Pexp_ident "fail" (lambda/matching.ml[2717,86379+31]..[2717,86379+35])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2717,86379+36]..[2717,86379+54])
                                            Pexp_construct "Pfloatcomp" (lambda/matching.ml[2717,86379+37]..[2717,86379+47])
                                            Some
                                              expression (lambda/matching.ml[2717,86379+48]..[2717,86379+53])
                                                Pexp_construct "CFneq" (lambda/matching.ml[2717,86379+48]..[2717,86379+53])
                                                None
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2717,86379+55]..[2717,86379+72])
                                            Pexp_construct "Pfloatcomp" (lambda/matching.ml[2717,86379+56]..[2717,86379+66])
                                            Some
                                              expression (lambda/matching.ml[2717,86379+67]..[2717,86379+71])
                                                Pexp_construct "CFlt" (lambda/matching.ml[2717,86379+67]..[2717,86379+71])
                                                None
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2717,86379+73]..[2717,86379+76])
                                            Pexp_ident "arg" (lambda/matching.ml[2717,86379+73]..[2717,86379+76])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2718,86456+10]..[2718,86456+27])
                                            Pexp_ident "const_lambda_list" (lambda/matching.ml[2718,86456+10]..[2718,86456+27])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[2719,86484+6]..[2719,86484+19])
                                      Ppat_construct "Const_int32" (lambda/matching.ml[2719,86484+6]..[2719,86484+17])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2719,86484+18]..[2719,86484+19])
                                          Ppat_any
                                    expression (lambda/matching.ml[2720,86507+8]..[2723,86615+31])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2720,86507+8]..[2720,86507+26])
                                        Pexp_ident "make_test_sequence" (lambda/matching.ml[2720,86507+8]..[2720,86507+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2720,86507+27]..[2720,86507+30])
                                            Pexp_ident "loc" (lambda/matching.ml[2720,86507+27]..[2720,86507+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2720,86507+31]..[2720,86507+35])
                                            Pexp_ident "fail" (lambda/matching.ml[2720,86507+31]..[2720,86507+35])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2721,86543+10]..[2721,86543+35])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2721,86543+11]..[2721,86543+20])
                                            Some
                                              expression (lambda/matching.ml[2721,86543+21]..[2721,86543+34])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2721,86543+22]..[2721,86543+28])
                                                    Pexp_construct "Pint32" (lambda/matching.ml[2721,86543+22]..[2721,86543+28])
                                                    None
                                                  expression (lambda/matching.ml[2721,86543+30]..[2721,86543+33])
                                                    Pexp_construct "Cne" (lambda/matching.ml[2721,86543+30]..[2721,86543+33])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2722,86579+10]..[2722,86579+35])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2722,86579+11]..[2722,86579+20])
                                            Some
                                              expression (lambda/matching.ml[2722,86579+21]..[2722,86579+34])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2722,86579+22]..[2722,86579+28])
                                                    Pexp_construct "Pint32" (lambda/matching.ml[2722,86579+22]..[2722,86579+28])
                                                    None
                                                  expression (lambda/matching.ml[2722,86579+30]..[2722,86579+33])
                                                    Pexp_construct "Clt" (lambda/matching.ml[2722,86579+30]..[2722,86579+33])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2723,86615+10]..[2723,86615+13])
                                            Pexp_ident "arg" (lambda/matching.ml[2723,86615+10]..[2723,86615+13])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2723,86615+14]..[2723,86615+31])
                                            Pexp_ident "const_lambda_list" (lambda/matching.ml[2723,86615+14]..[2723,86615+31])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[2724,86647+6]..[2724,86647+19])
                                      Ppat_construct "Const_int64" (lambda/matching.ml[2724,86647+6]..[2724,86647+17])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2724,86647+18]..[2724,86647+19])
                                          Ppat_any
                                    expression (lambda/matching.ml[2725,86670+8]..[2728,86778+31])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2725,86670+8]..[2725,86670+26])
                                        Pexp_ident "make_test_sequence" (lambda/matching.ml[2725,86670+8]..[2725,86670+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2725,86670+27]..[2725,86670+30])
                                            Pexp_ident "loc" (lambda/matching.ml[2725,86670+27]..[2725,86670+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2725,86670+31]..[2725,86670+35])
                                            Pexp_ident "fail" (lambda/matching.ml[2725,86670+31]..[2725,86670+35])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2726,86706+10]..[2726,86706+35])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2726,86706+11]..[2726,86706+20])
                                            Some
                                              expression (lambda/matching.ml[2726,86706+21]..[2726,86706+34])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2726,86706+22]..[2726,86706+28])
                                                    Pexp_construct "Pint64" (lambda/matching.ml[2726,86706+22]..[2726,86706+28])
                                                    None
                                                  expression (lambda/matching.ml[2726,86706+30]..[2726,86706+33])
                                                    Pexp_construct "Cne" (lambda/matching.ml[2726,86706+30]..[2726,86706+33])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2727,86742+10]..[2727,86742+35])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2727,86742+11]..[2727,86742+20])
                                            Some
                                              expression (lambda/matching.ml[2727,86742+21]..[2727,86742+34])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2727,86742+22]..[2727,86742+28])
                                                    Pexp_construct "Pint64" (lambda/matching.ml[2727,86742+22]..[2727,86742+28])
                                                    None
                                                  expression (lambda/matching.ml[2727,86742+30]..[2727,86742+33])
                                                    Pexp_construct "Clt" (lambda/matching.ml[2727,86742+30]..[2727,86742+33])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2728,86778+10]..[2728,86778+13])
                                            Pexp_ident "arg" (lambda/matching.ml[2728,86778+10]..[2728,86778+13])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2728,86778+14]..[2728,86778+31])
                                            Pexp_ident "const_lambda_list" (lambda/matching.ml[2728,86778+14]..[2728,86778+31])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[2729,86810+6]..[2729,86810+23])
                                      Ppat_construct "Const_nativeint" (lambda/matching.ml[2729,86810+6]..[2729,86810+21])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[2729,86810+22]..[2729,86810+23])
                                          Ppat_any
                                    expression (lambda/matching.ml[2730,86837+8]..[2733,86953+31])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2730,86837+8]..[2730,86837+26])
                                        Pexp_ident "make_test_sequence" (lambda/matching.ml[2730,86837+8]..[2730,86837+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2730,86837+27]..[2730,86837+30])
                                            Pexp_ident "loc" (lambda/matching.ml[2730,86837+27]..[2730,86837+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2730,86837+31]..[2730,86837+35])
                                            Pexp_ident "fail" (lambda/matching.ml[2730,86837+31]..[2730,86837+35])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2731,86873+10]..[2731,86873+39])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2731,86873+11]..[2731,86873+20])
                                            Some
                                              expression (lambda/matching.ml[2731,86873+21]..[2731,86873+38])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2731,86873+22]..[2731,86873+32])
                                                    Pexp_construct "Pnativeint" (lambda/matching.ml[2731,86873+22]..[2731,86873+32])
                                                    None
                                                  expression (lambda/matching.ml[2731,86873+34]..[2731,86873+37])
                                                    Pexp_construct "Cne" (lambda/matching.ml[2731,86873+34]..[2731,86873+37])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2732,86913+10]..[2732,86913+39])
                                            Pexp_construct "Pbintcomp" (lambda/matching.ml[2732,86913+11]..[2732,86913+20])
                                            Some
                                              expression (lambda/matching.ml[2732,86913+21]..[2732,86913+38])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[2732,86913+22]..[2732,86913+32])
                                                    Pexp_construct "Pnativeint" (lambda/matching.ml[2732,86913+22]..[2732,86913+32])
                                                    None
                                                  expression (lambda/matching.ml[2732,86913+34]..[2732,86913+37])
                                                    Pexp_construct "Clt" (lambda/matching.ml[2732,86913+34]..[2732,86913+37])
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2733,86953+10]..[2733,86953+13])
                                            Pexp_ident "arg" (lambda/matching.ml[2733,86953+10]..[2733,86953+13])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2733,86953+14]..[2733,86953+31])
                                            Pexp_ident "const_lambda_list" (lambda/matching.ml[2733,86953+14]..[2733,86953+31])
                                      ]
                                ]
                          ]
                          expression (lambda/matching.ml[2735,86990+2]..[2735,86990+42])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2735,86990+3]..[2735,86990+10])
                                Pexp_ident "lambda1" (lambda/matching.ml[2735,86990+3]..[2735,86990+10])
                              expression (lambda/matching.ml[2735,86990+12]..[2735,86990+41])
                                Pexp_apply
                                expression (lambda/matching.ml[2735,86990+12]..[2735,86990+23])
                                  Pexp_ident "Jumps.union" (lambda/matching.ml[2735,86990+12]..[2735,86990+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2735,86990+24]..[2735,86990+35])
                                      Pexp_ident "local_jumps" (lambda/matching.ml[2735,86990+24]..[2735,86990+35])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2735,86990+36]..[2735,86990+41])
                                      Pexp_ident "total" (lambda/matching.ml[2735,86990+36]..[2735,86990+41])
                                ]
                            ]
    ]
  structure_item (lambda/matching.ml[2737,87034+0]..[2750,87517+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2737,87034+4]..[2737,87034+15])
          Ppat_var "split_cases" (lambda/matching.ml[2737,87034+4]..[2737,87034+15])
        expression (lambda/matching.ml[2737,87034+16]..[2750,87517+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2737,87034+16]..[2737,87034+31])
            Ppat_var "tag_lambda_list" (lambda/matching.ml[2737,87034+16]..[2737,87034+31])
          expression (lambda/matching.ml[2738,87068+2]..[2750,87517+61])
            Pexp_let Rec
            [
              <def>
                pattern (lambda/matching.ml[2738,87068+10]..[2738,87068+19])
                  Ppat_var "split_rec" (lambda/matching.ml[2738,87068+10]..[2738,87068+19])
                expression (lambda/matching.ml[2738,87068+22]..[2747,87451+7])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/matching.ml[2739,87099+6]..[2739,87099+8])
                        Ppat_construct "[]" (lambda/matching.ml[2739,87099+6]..[2739,87099+8])
                        None
                      expression (lambda/matching.ml[2739,87099+12]..[2739,87099+20])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[2739,87099+13]..[2739,87099+15])
                            Pexp_construct "[]" (lambda/matching.ml[2739,87099+13]..[2739,87099+15])
                            None
                          expression (lambda/matching.ml[2739,87099+17]..[2739,87099+19])
                            Pexp_construct "[]" (lambda/matching.ml[2739,87099+17]..[2739,87099+19])
                            None
                        ]
                    <case>
                      pattern (lambda/matching.ml[2740,87120+6]..[2740,87120+28])
                        Ppat_construct "::" (lambda/matching.ml[2740,87120+22]..[2740,87120+24])
                        Some
                          []
                          pattern (lambda/matching.ml[2740,87120+6]..[2740,87120+28]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2740,87120+6]..[2740,87120+21])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2740,87120+7]..[2740,87120+15])
                                    Ppat_var "cstr_tag" (lambda/matching.ml[2740,87120+7]..[2740,87120+15])
                                  pattern (lambda/matching.ml[2740,87120+17]..[2740,87120+20])
                                    Ppat_var "act" (lambda/matching.ml[2740,87120+17]..[2740,87120+20])
                                ]
                              pattern (lambda/matching.ml[2740,87120+25]..[2740,87120+28])
                                Ppat_var "rem" (lambda/matching.ml[2740,87120+25]..[2740,87120+28])
                            ]
                      expression (lambda/matching.ml[2740,87120+32]..[2747,87451+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2741,87154+12]..[2741,87154+29])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2741,87154+12]..[2741,87154+18])
                                  Ppat_var "consts" (lambda/matching.ml[2741,87154+12]..[2741,87154+18])
                                pattern (lambda/matching.ml[2741,87154+20]..[2741,87154+29])
                                  Ppat_var "nonconsts" (lambda/matching.ml[2741,87154+20]..[2741,87154+29])
                              ]
                            expression (lambda/matching.ml[2741,87154+32]..[2741,87154+45])
                              Pexp_apply
                              expression (lambda/matching.ml[2741,87154+32]..[2741,87154+41])
                                Pexp_ident "split_rec" (lambda/matching.ml[2741,87154+32]..[2741,87154+41])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2741,87154+42]..[2741,87154+45])
                                    Pexp_ident "rem" (lambda/matching.ml[2741,87154+42]..[2741,87154+45])
                              ]
                        ]
                        expression (lambda/matching.ml[2742,87203+8]..[2746,87408+42])
                          Pexp_match
                          expression (lambda/matching.ml[2742,87203+14]..[2742,87203+22])
                            Pexp_ident "cstr_tag" (lambda/matching.ml[2742,87203+14]..[2742,87203+22])
                          [
                            <case>
                              pattern (lambda/matching.ml[2743,87231+10]..[2743,87231+25])
                                Ppat_construct "Cstr_constant" (lambda/matching.ml[2743,87231+10]..[2743,87231+23])
                                Some
                                  []
                                  pattern (lambda/matching.ml[2743,87231+24]..[2743,87231+25])
                                    Ppat_var "n" (lambda/matching.ml[2743,87231+24]..[2743,87231+25])
                              expression (lambda/matching.ml[2743,87231+29]..[2743,87231+60])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2743,87231+30]..[2743,87231+48])
                                    Pexp_construct "::" (lambda/matching.ml[2743,87231+39]..[2743,87231+41])
                                    Some
                                      expression (lambda/matching.ml[2743,87231+30]..[2743,87231+48]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2743,87231+30]..[2743,87231+38])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2743,87231+31]..[2743,87231+32])
                                                Pexp_ident "n" (lambda/matching.ml[2743,87231+31]..[2743,87231+32])
                                              expression (lambda/matching.ml[2743,87231+34]..[2743,87231+37])
                                                Pexp_ident "act" (lambda/matching.ml[2743,87231+34]..[2743,87231+37])
                                            ]
                                          expression (lambda/matching.ml[2743,87231+42]..[2743,87231+48])
                                            Pexp_ident "consts" (lambda/matching.ml[2743,87231+42]..[2743,87231+48])
                                        ]
                                  expression (lambda/matching.ml[2743,87231+50]..[2743,87231+59])
                                    Pexp_ident "nonconsts" (lambda/matching.ml[2743,87231+50]..[2743,87231+59])
                                ]
                            <case>
                              pattern (lambda/matching.ml[2744,87292+10]..[2744,87292+22])
                                Ppat_construct "Cstr_block" (lambda/matching.ml[2744,87292+10]..[2744,87292+20])
                                Some
                                  []
                                  pattern (lambda/matching.ml[2744,87292+21]..[2744,87292+22])
                                    Ppat_var "n" (lambda/matching.ml[2744,87292+21]..[2744,87292+22])
                              expression (lambda/matching.ml[2744,87292+26]..[2744,87292+57])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2744,87292+27]..[2744,87292+33])
                                    Pexp_ident "consts" (lambda/matching.ml[2744,87292+27]..[2744,87292+33])
                                  expression (lambda/matching.ml[2744,87292+35]..[2744,87292+56])
                                    Pexp_construct "::" (lambda/matching.ml[2744,87292+44]..[2744,87292+46])
                                    Some
                                      expression (lambda/matching.ml[2744,87292+35]..[2744,87292+56]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2744,87292+35]..[2744,87292+43])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2744,87292+36]..[2744,87292+37])
                                                Pexp_ident "n" (lambda/matching.ml[2744,87292+36]..[2744,87292+37])
                                              expression (lambda/matching.ml[2744,87292+39]..[2744,87292+42])
                                                Pexp_ident "act" (lambda/matching.ml[2744,87292+39]..[2744,87292+42])
                                            ]
                                          expression (lambda/matching.ml[2744,87292+47]..[2744,87292+56])
                                            Pexp_ident "nonconsts" (lambda/matching.ml[2744,87292+47]..[2744,87292+56])
                                        ]
                                ]
                            <case>
                              pattern (lambda/matching.ml[2745,87350+10]..[2745,87350+22])
                                Ppat_construct "Cstr_unboxed" (lambda/matching.ml[2745,87350+10]..[2745,87350+22])
                                None
                              expression (lambda/matching.ml[2745,87350+26]..[2745,87350+57])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2745,87350+27]..[2745,87350+33])
                                    Pexp_ident "consts" (lambda/matching.ml[2745,87350+27]..[2745,87350+33])
                                  expression (lambda/matching.ml[2745,87350+35]..[2745,87350+56])
                                    Pexp_construct "::" (lambda/matching.ml[2745,87350+44]..[2745,87350+46])
                                    Some
                                      expression (lambda/matching.ml[2745,87350+35]..[2745,87350+56]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2745,87350+35]..[2745,87350+43])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2745,87350+36]..[2745,87350+37])
                                                Pexp_constant PConst_int (0,None)
                                              expression (lambda/matching.ml[2745,87350+39]..[2745,87350+42])
                                                Pexp_ident "act" (lambda/matching.ml[2745,87350+39]..[2745,87350+42])
                                            ]
                                          expression (lambda/matching.ml[2745,87350+47]..[2745,87350+56])
                                            Pexp_ident "nonconsts" (lambda/matching.ml[2745,87350+47]..[2745,87350+56])
                                        ]
                                ]
                            <case>
                              pattern (lambda/matching.ml[2746,87408+10]..[2746,87408+26])
                                Ppat_construct "Cstr_extension" (lambda/matching.ml[2746,87408+10]..[2746,87408+24])
                                Some
                                  []
                                  pattern (lambda/matching.ml[2746,87408+25]..[2746,87408+26])
                                    Ppat_any
                              expression (lambda/matching.ml[2746,87408+30]..[2746,87408+42])
                                Pexp_assert
                                expression (lambda/matching.ml[2746,87408+37]..[2746,87408+42])
                                  Pexp_construct "false" (lambda/matching.ml[2746,87408+37]..[2746,87408+42])
                                  None
                          ]
                  ]
            ]
            expression (lambda/matching.ml[2749,87464+2]..[2750,87517+61])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/matching.ml[2749,87464+6]..[2749,87464+21])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2749,87464+6]..[2749,87464+11])
                        Ppat_var "const" (lambda/matching.ml[2749,87464+6]..[2749,87464+11])
                      pattern (lambda/matching.ml[2749,87464+13]..[2749,87464+21])
                        Ppat_var "nonconst" (lambda/matching.ml[2749,87464+13]..[2749,87464+21])
                    ]
                  expression (lambda/matching.ml[2749,87464+24]..[2749,87464+49])
                    Pexp_apply
                    expression (lambda/matching.ml[2749,87464+24]..[2749,87464+33])
                      Pexp_ident "split_rec" (lambda/matching.ml[2749,87464+24]..[2749,87464+33])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2749,87464+34]..[2749,87464+49])
                          Pexp_ident "tag_lambda_list" (lambda/matching.ml[2749,87464+34]..[2749,87464+49])
                    ]
              ]
              expression (lambda/matching.ml[2750,87517+2]..[2750,87517+61])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[2750,87517+3]..[2750,87517+29])
                    Pexp_apply
                    expression (lambda/matching.ml[2750,87517+3]..[2750,87517+23])
                      Pexp_ident "sort_int_lambda_list" (lambda/matching.ml[2750,87517+3]..[2750,87517+23])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2750,87517+24]..[2750,87517+29])
                          Pexp_ident "const" (lambda/matching.ml[2750,87517+24]..[2750,87517+29])
                    ]
                  expression (lambda/matching.ml[2750,87517+31]..[2750,87517+60])
                    Pexp_apply
                    expression (lambda/matching.ml[2750,87517+31]..[2750,87517+51])
                      Pexp_ident "sort_int_lambda_list" (lambda/matching.ml[2750,87517+31]..[2750,87517+51])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[2750,87517+52]..[2750,87517+60])
                          Pexp_ident "nonconst" (lambda/matching.ml[2750,87517+52]..[2750,87517+60])
                    ]
                ]
    ]
  structure_item (lambda/matching.ml[2752,87580+0]..[2763,87981+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2752,87580+4]..[2752,87580+25])
          Ppat_var "split_extension_cases" (lambda/matching.ml[2752,87580+4]..[2752,87580+25])
        expression (lambda/matching.ml[2752,87580+26]..[2763,87981+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2752,87580+26]..[2752,87580+41])
            Ppat_var "tag_lambda_list" (lambda/matching.ml[2752,87580+26]..[2752,87580+41])
          expression (lambda/matching.ml[2753,87624+2]..[2763,87981+27])
            Pexp_let Rec
            [
              <def>
                pattern (lambda/matching.ml[2753,87624+10]..[2753,87624+19])
                  Ppat_var "split_rec" (lambda/matching.ml[2753,87624+10]..[2753,87624+19])
                expression (lambda/matching.ml[2753,87624+22]..[2761,87968+7])
                  Pexp_function
                  [
                    <case>
                      pattern (lambda/matching.ml[2754,87655+6]..[2754,87655+8])
                        Ppat_construct "[]" (lambda/matching.ml[2754,87655+6]..[2754,87655+8])
                        None
                      expression (lambda/matching.ml[2754,87655+12]..[2754,87655+20])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[2754,87655+13]..[2754,87655+15])
                            Pexp_construct "[]" (lambda/matching.ml[2754,87655+13]..[2754,87655+15])
                            None
                          expression (lambda/matching.ml[2754,87655+17]..[2754,87655+19])
                            Pexp_construct "[]" (lambda/matching.ml[2754,87655+17]..[2754,87655+19])
                            None
                        ]
                    <case>
                      pattern (lambda/matching.ml[2755,87676+6]..[2755,87676+28])
                        Ppat_construct "::" (lambda/matching.ml[2755,87676+22]..[2755,87676+24])
                        Some
                          []
                          pattern (lambda/matching.ml[2755,87676+6]..[2755,87676+28]) ghost
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2755,87676+6]..[2755,87676+21])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[2755,87676+7]..[2755,87676+15])
                                    Ppat_var "cstr_tag" (lambda/matching.ml[2755,87676+7]..[2755,87676+15])
                                  pattern (lambda/matching.ml[2755,87676+17]..[2755,87676+20])
                                    Ppat_var "act" (lambda/matching.ml[2755,87676+17]..[2755,87676+20])
                                ]
                              pattern (lambda/matching.ml[2755,87676+25]..[2755,87676+28])
                                Ppat_var "rem" (lambda/matching.ml[2755,87676+25]..[2755,87676+28])
                            ]
                      expression (lambda/matching.ml[2755,87676+32]..[2761,87968+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2756,87710+12]..[2756,87710+29])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2756,87710+12]..[2756,87710+18])
                                  Ppat_var "consts" (lambda/matching.ml[2756,87710+12]..[2756,87710+18])
                                pattern (lambda/matching.ml[2756,87710+20]..[2756,87710+29])
                                  Ppat_var "nonconsts" (lambda/matching.ml[2756,87710+20]..[2756,87710+29])
                              ]
                            expression (lambda/matching.ml[2756,87710+32]..[2756,87710+45])
                              Pexp_apply
                              expression (lambda/matching.ml[2756,87710+32]..[2756,87710+41])
                                Pexp_ident "split_rec" (lambda/matching.ml[2756,87710+32]..[2756,87710+41])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2756,87710+42]..[2756,87710+45])
                                    Pexp_ident "rem" (lambda/matching.ml[2756,87710+42]..[2756,87710+45])
                              ]
                        ]
                        expression (lambda/matching.ml[2757,87759+8]..[2760,87940+27])
                          Pexp_match
                          expression (lambda/matching.ml[2757,87759+14]..[2757,87759+22])
                            Pexp_ident "cstr_tag" (lambda/matching.ml[2757,87759+14]..[2757,87759+22])
                          [
                            <case>
                              pattern (lambda/matching.ml[2758,87787+10]..[2758,87787+37])
                                Ppat_construct "Cstr_extension" (lambda/matching.ml[2758,87787+10]..[2758,87787+24])
                                Some
                                  []
                                  pattern (lambda/matching.ml[2758,87787+25]..[2758,87787+37])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2758,87787+26]..[2758,87787+30])
                                        Ppat_var "path" (lambda/matching.ml[2758,87787+26]..[2758,87787+30])
                                      pattern (lambda/matching.ml[2758,87787+32]..[2758,87787+36])
                                        Ppat_construct "true" (lambda/matching.ml[2758,87787+32]..[2758,87787+36])
                                        None
                                    ]
                              expression (lambda/matching.ml[2758,87787+41]..[2758,87787+75])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2758,87787+42]..[2758,87787+63])
                                    Pexp_construct "::" (lambda/matching.ml[2758,87787+54]..[2758,87787+56])
                                    Some
                                      expression (lambda/matching.ml[2758,87787+42]..[2758,87787+63]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2758,87787+42]..[2758,87787+53])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2758,87787+43]..[2758,87787+47])
                                                Pexp_ident "path" (lambda/matching.ml[2758,87787+43]..[2758,87787+47])
                                              expression (lambda/matching.ml[2758,87787+49]..[2758,87787+52])
                                                Pexp_ident "act" (lambda/matching.ml[2758,87787+49]..[2758,87787+52])
                                            ]
                                          expression (lambda/matching.ml[2758,87787+57]..[2758,87787+63])
                                            Pexp_ident "consts" (lambda/matching.ml[2758,87787+57]..[2758,87787+63])
                                        ]
                                  expression (lambda/matching.ml[2758,87787+65]..[2758,87787+74])
                                    Pexp_ident "nonconsts" (lambda/matching.ml[2758,87787+65]..[2758,87787+74])
                                ]
                            <case>
                              pattern (lambda/matching.ml[2759,87863+10]..[2759,87863+38])
                                Ppat_construct "Cstr_extension" (lambda/matching.ml[2759,87863+10]..[2759,87863+24])
                                Some
                                  []
                                  pattern (lambda/matching.ml[2759,87863+25]..[2759,87863+38])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[2759,87863+26]..[2759,87863+30])
                                        Ppat_var "path" (lambda/matching.ml[2759,87863+26]..[2759,87863+30])
                                      pattern (lambda/matching.ml[2759,87863+32]..[2759,87863+37])
                                        Ppat_construct "false" (lambda/matching.ml[2759,87863+32]..[2759,87863+37])
                                        None
                                    ]
                              expression (lambda/matching.ml[2759,87863+42]..[2759,87863+76])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2759,87863+43]..[2759,87863+49])
                                    Pexp_ident "consts" (lambda/matching.ml[2759,87863+43]..[2759,87863+49])
                                  expression (lambda/matching.ml[2759,87863+51]..[2759,87863+75])
                                    Pexp_construct "::" (lambda/matching.ml[2759,87863+63]..[2759,87863+65])
                                    Some
                                      expression (lambda/matching.ml[2759,87863+51]..[2759,87863+75]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2759,87863+51]..[2759,87863+62])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[2759,87863+52]..[2759,87863+56])
                                                Pexp_ident "path" (lambda/matching.ml[2759,87863+52]..[2759,87863+56])
                                              expression (lambda/matching.ml[2759,87863+58]..[2759,87863+61])
                                                Pexp_ident "act" (lambda/matching.ml[2759,87863+58]..[2759,87863+61])
                                            ]
                                          expression (lambda/matching.ml[2759,87863+66]..[2759,87863+75])
                                            Pexp_ident "nonconsts" (lambda/matching.ml[2759,87863+66]..[2759,87863+75])
                                        ]
                                ]
                            <case>
                              pattern (lambda/matching.ml[2760,87940+10]..[2760,87940+11])
                                Ppat_any
                              expression (lambda/matching.ml[2760,87940+15]..[2760,87940+27])
                                Pexp_assert
                                expression (lambda/matching.ml[2760,87940+22]..[2760,87940+27])
                                  Pexp_construct "false" (lambda/matching.ml[2760,87940+22]..[2760,87940+27])
                                  None
                          ]
                  ]
            ]
            expression (lambda/matching.ml[2763,87981+2]..[2763,87981+27])
              Pexp_apply
              expression (lambda/matching.ml[2763,87981+2]..[2763,87981+11])
                Pexp_ident "split_rec" (lambda/matching.ml[2763,87981+2]..[2763,87981+11])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[2763,87981+12]..[2763,87981+27])
                    Pexp_ident "tag_lambda_list" (lambda/matching.ml[2763,87981+12]..[2763,87981+27])
              ]
    ]
  structure_item (lambda/matching.ml[2765,88010+0]..[2873,92425+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2765,88010+4]..[2765,88010+23])
          Ppat_var "combine_constructor" (lambda/matching.ml[2765,88010+4]..[2765,88010+23])
        expression (lambda/matching.ml[2765,88010+24]..[2873,92425+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2765,88010+24]..[2765,88010+27])
            Ppat_var "loc" (lambda/matching.ml[2765,88010+24]..[2765,88010+27])
          expression (lambda/matching.ml[2765,88010+28]..[2873,92425+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2765,88010+28]..[2765,88010+31])
              Ppat_var "arg" (lambda/matching.ml[2765,88010+28]..[2765,88010+31])
            expression (lambda/matching.ml[2765,88010+32]..[2873,92425+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2765,88010+32]..[2765,88010+39])
                Ppat_var "pat_env" (lambda/matching.ml[2765,88010+32]..[2765,88010+39])
              expression (lambda/matching.ml[2765,88010+40]..[2873,92425+47]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2765,88010+40]..[2765,88010+44])
                  Ppat_var "cstr" (lambda/matching.ml[2765,88010+40]..[2765,88010+44])
                expression (lambda/matching.ml[2765,88010+45]..[2873,92425+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2765,88010+45]..[2765,88010+52])
                    Ppat_var "partial" (lambda/matching.ml[2765,88010+45]..[2765,88010+52])
                  expression (lambda/matching.ml[2765,88010+53]..[2873,92425+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2765,88010+53]..[2765,88010+56])
                      Ppat_var "ctx" (lambda/matching.ml[2765,88010+53]..[2765,88010+56])
                    expression (lambda/matching.ml[2765,88010+57]..[2873,92425+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2765,88010+57]..[2765,88010+60])
                        Ppat_var "def" (lambda/matching.ml[2765,88010+57]..[2765,88010+60])
                      expression (lambda/matching.ml[2766,88071+4]..[2873,92425+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[2766,88071+4]..[2766,88071+37])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2766,88071+5]..[2766,88071+22])
                              Ppat_var "descr_lambda_list" (lambda/matching.ml[2766,88071+5]..[2766,88071+22])
                            pattern (lambda/matching.ml[2766,88071+24]..[2766,88071+30])
                              Ppat_var "total1" (lambda/matching.ml[2766,88071+24]..[2766,88071+30])
                            pattern (lambda/matching.ml[2766,88071+32]..[2766,88071+36])
                              Ppat_var "pats" (lambda/matching.ml[2766,88071+32]..[2766,88071+36])
                          ]
                        expression (lambda/matching.ml[2767,88111+2]..[2873,92425+47])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2767,88111+6]..[2767,88111+16])
                                Ppat_var "tag_lambda" (lambda/matching.ml[2767,88111+6]..[2767,88111+16])
                              expression (lambda/matching.ml[2767,88111+17]..[2767,88111+51]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[2767,88111+17]..[2767,88111+28])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[2767,88111+18]..[2767,88111+22])
                                      Ppat_var "cstr" (lambda/matching.ml[2767,88111+18]..[2767,88111+22])
                                    pattern (lambda/matching.ml[2767,88111+24]..[2767,88111+27])
                                      Ppat_var "act" (lambda/matching.ml[2767,88111+24]..[2767,88111+27])
                                  ]
                                expression (lambda/matching.ml[2767,88111+31]..[2767,88111+51])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2767,88111+32]..[2767,88111+45])
                                      Pexp_field
                                      expression (lambda/matching.ml[2767,88111+32]..[2767,88111+36])
                                        Pexp_ident "cstr" (lambda/matching.ml[2767,88111+32]..[2767,88111+36])
                                      "cstr_tag" (lambda/matching.ml[2767,88111+37]..[2767,88111+45])
                                    expression (lambda/matching.ml[2767,88111+47]..[2767,88111+50])
                                      Pexp_ident "act" (lambda/matching.ml[2767,88111+47]..[2767,88111+50])
                                  ]
                          ]
                          expression (lambda/matching.ml[2768,88166+2]..[2873,92425+47])
                            Pexp_match
                            expression (lambda/matching.ml[2768,88166+8]..[2768,88166+21])
                              Pexp_field
                              expression (lambda/matching.ml[2768,88166+8]..[2768,88166+12])
                                Pexp_ident "cstr" (lambda/matching.ml[2768,88166+8]..[2768,88166+12])
                              "cstr_tag" (lambda/matching.ml[2768,88166+13]..[2768,88166+21])
                            [
                              <case>
                                pattern (lambda/matching.ml[2769,88193+4]..[2769,88193+20])
                                  Ppat_construct "Cstr_extension" (lambda/matching.ml[2769,88193+4]..[2769,88193+18])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[2769,88193+19]..[2769,88193+20])
                                      Ppat_any
                                expression (lambda/matching.ml[2771,88258+6]..[2806,89638+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2771,88258+10]..[2771,88258+27])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2771,88258+10]..[2771,88258+14])
                                            Ppat_var "fail" (lambda/matching.ml[2771,88258+10]..[2771,88258+14])
                                          pattern (lambda/matching.ml[2771,88258+16]..[2771,88258+27])
                                            Ppat_var "local_jumps" (lambda/matching.ml[2771,88258+16]..[2771,88258+27])
                                        ]
                                      expression (lambda/matching.ml[2771,88258+30]..[2771,88258+63])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2771,88258+30]..[2771,88258+47])
                                          Pexp_ident "mk_failaction_neg" (lambda/matching.ml[2771,88258+30]..[2771,88258+47])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2771,88258+48]..[2771,88258+55])
                                              Pexp_ident "partial" (lambda/matching.ml[2771,88258+48]..[2771,88258+55])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2771,88258+56]..[2771,88258+59])
                                              Pexp_ident "ctx" (lambda/matching.ml[2771,88258+56]..[2771,88258+59])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2771,88258+60]..[2771,88258+63])
                                              Pexp_ident "def" (lambda/matching.ml[2771,88258+60]..[2771,88258+63])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2772,88325+6]..[2806,89638+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[2772,88325+10]..[2772,88325+17])
                                          Ppat_var "lambda1" (lambda/matching.ml[2772,88325+10]..[2772,88325+17])
                                        expression (lambda/matching.ml[2773,88345+8]..[2804,89596+32])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[2773,88345+12]..[2773,88345+29])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[2773,88345+12]..[2773,88345+18])
                                                    Ppat_var "consts" (lambda/matching.ml[2773,88345+12]..[2773,88345+18])
                                                  pattern (lambda/matching.ml[2773,88345+20]..[2773,88345+29])
                                                    Ppat_var "nonconsts" (lambda/matching.ml[2773,88345+20]..[2773,88345+29])
                                                ]
                                              expression (lambda/matching.ml[2774,88377+10]..[2774,88377+71])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2774,88377+10]..[2774,88377+31])
                                                  Pexp_ident "split_extension_cases" (lambda/matching.ml[2774,88377+10]..[2774,88377+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2774,88377+32]..[2774,88377+71])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[2774,88377+33]..[2774,88377+41])
                                                        Pexp_ident "List.map" (lambda/matching.ml[2774,88377+33]..[2774,88377+41])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2774,88377+42]..[2774,88377+52])
                                                            Pexp_ident "tag_lambda" (lambda/matching.ml[2774,88377+42]..[2774,88377+52])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2774,88377+53]..[2774,88377+70])
                                                            Pexp_ident "descr_lambda_list" (lambda/matching.ml[2774,88377+53]..[2774,88377+70])
                                                      ]
                                                ]
                                          ]
                                          expression (lambda/matching.ml[2775,88452+8]..[2804,89596+32])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[2775,88452+12]..[2775,88452+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[2775,88452+12]..[2775,88452+19])
                                                      Ppat_var "default" (lambda/matching.ml[2775,88452+12]..[2775,88452+19])
                                                    pattern (lambda/matching.ml[2775,88452+21]..[2775,88452+27])
                                                      Ppat_var "consts" (lambda/matching.ml[2775,88452+21]..[2775,88452+27])
                                                    pattern (lambda/matching.ml[2775,88452+29]..[2775,88452+38])
                                                      Ppat_var "nonconsts" (lambda/matching.ml[2775,88452+29]..[2775,88452+38])
                                                  ]
                                                expression (lambda/matching.ml[2776,88493+10]..[2783,88751+50])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[2776,88493+16]..[2776,88493+20])
                                                    Pexp_ident "fail" (lambda/matching.ml[2776,88493+16]..[2776,88493+20])
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[2777,88519+12]..[2777,88519+16])
                                                        Ppat_construct "None" (lambda/matching.ml[2777,88519+12]..[2777,88519+16])
                                                        None
                                                      expression (lambda/matching.ml[2777,88519+20]..[2782,88737+13])
                                                        Pexp_match
                                                        expression (lambda/matching.ml[2778,88541+20]..[2778,88541+39])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2778,88541+21]..[2778,88541+27])
                                                              Pexp_ident "consts" (lambda/matching.ml[2778,88541+21]..[2778,88541+27])
                                                            expression (lambda/matching.ml[2778,88541+29]..[2778,88541+38])
                                                              Pexp_ident "nonconsts" (lambda/matching.ml[2778,88541+29]..[2778,88541+38])
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (lambda/matching.ml[2779,88586+16]..[2779,88586+34])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2779,88586+16]..[2779,88586+17])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[2779,88586+19]..[2779,88586+34])
                                                                  Ppat_construct "::" (lambda/matching.ml[2779,88586+28]..[2779,88586+30])
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[2779,88586+19]..[2779,88586+34]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[2779,88586+19]..[2779,88586+27])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2779,88586+20]..[2779,88586+21])
      Ppat_any
    pattern (lambda/matching.ml[2779,88586+23]..[2779,88586+26])
      Ppat_var "act" (lambda/matching.ml[2779,88586+23]..[2779,88586+26])
  ]
pattern (lambda/matching.ml[2779,88586+31]..[2779,88586+34])
  Ppat_var "rem" (lambda/matching.ml[2779,88586+31]..[2779,88586+34])
                                                                      ]
                                                              ]
                                                            expression (lambda/matching.ml[2779,88586+38]..[2779,88586+56])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[2779,88586+39]..[2779,88586+42])
                                                                  Pexp_ident "act" (lambda/matching.ml[2779,88586+39]..[2779,88586+42])
                                                                expression (lambda/matching.ml[2779,88586+44]..[2779,88586+50])
                                                                  Pexp_ident "consts" (lambda/matching.ml[2779,88586+44]..[2779,88586+50])
                                                                expression (lambda/matching.ml[2779,88586+52]..[2779,88586+55])
                                                                  Pexp_ident "rem" (lambda/matching.ml[2779,88586+52]..[2779,88586+55])
                                                              ]
                                                          <case>
                                                            pattern (lambda/matching.ml[2780,88643+16]..[2780,88643+34])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2780,88643+16]..[2780,88643+31])
                                                                  Ppat_construct "::" (lambda/matching.ml[2780,88643+25]..[2780,88643+27])
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[2780,88643+16]..[2780,88643+31]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[2780,88643+16]..[2780,88643+24])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2780,88643+17]..[2780,88643+18])
      Ppat_any
    pattern (lambda/matching.ml[2780,88643+20]..[2780,88643+23])
      Ppat_var "act" (lambda/matching.ml[2780,88643+20]..[2780,88643+23])
  ]
pattern (lambda/matching.ml[2780,88643+28]..[2780,88643+31])
  Ppat_var "rem" (lambda/matching.ml[2780,88643+28]..[2780,88643+31])
                                                                      ]
                                                                pattern (lambda/matching.ml[2780,88643+33]..[2780,88643+34])
                                                                  Ppat_any
                                                              ]
                                                            expression (lambda/matching.ml[2780,88643+38]..[2780,88643+59])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[2780,88643+39]..[2780,88643+42])
                                                                  Pexp_ident "act" (lambda/matching.ml[2780,88643+39]..[2780,88643+42])
                                                                expression (lambda/matching.ml[2780,88643+44]..[2780,88643+47])
                                                                  Pexp_ident "rem" (lambda/matching.ml[2780,88643+44]..[2780,88643+47])
                                                                expression (lambda/matching.ml[2780,88643+49]..[2780,88643+58])
                                                                  Pexp_ident "nonconsts" (lambda/matching.ml[2780,88643+49]..[2780,88643+58])
                                                              ]
                                                          <case>
                                                            pattern (lambda/matching.ml[2781,88703+16]..[2781,88703+17])
                                                              Ppat_any
                                                            expression (lambda/matching.ml[2781,88703+21]..[2781,88703+33])
                                                              Pexp_assert
                                                              expression (lambda/matching.ml[2781,88703+28]..[2781,88703+33])
                                                                Pexp_construct "false" (lambda/matching.ml[2781,88703+28]..[2781,88703+33])
                                                                None
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2783,88751+12]..[2783,88751+21])
                                                        Ppat_construct "Some" (lambda/matching.ml[2783,88751+12]..[2783,88751+16])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[2783,88751+17]..[2783,88751+21])
                                                            Ppat_var "fail" (lambda/matching.ml[2783,88751+17]..[2783,88751+21])
                                                      expression (lambda/matching.ml[2783,88751+25]..[2783,88751+50])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[2783,88751+26]..[2783,88751+30])
                                                            Pexp_ident "fail" (lambda/matching.ml[2783,88751+26]..[2783,88751+30])
                                                          expression (lambda/matching.ml[2783,88751+32]..[2783,88751+38])
                                                            Pexp_ident "consts" (lambda/matching.ml[2783,88751+32]..[2783,88751+38])
                                                          expression (lambda/matching.ml[2783,88751+40]..[2783,88751+49])
                                                            Pexp_ident "nonconsts" (lambda/matching.ml[2783,88751+40]..[2783,88751+49])
                                                        ]
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[2785,88813+8]..[2804,89596+32])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/matching.ml[2785,88813+12]..[2785,88813+27])
                                                    Ppat_var "nonconst_lambda" (lambda/matching.ml[2785,88813+12]..[2785,88813+27])
                                                  expression (lambda/matching.ml[2786,88843+10]..[2798,89306+79])
                                                    Pexp_match
                                                    expression (lambda/matching.ml[2786,88843+16]..[2786,88843+25])
                                                      Pexp_ident "nonconsts" (lambda/matching.ml[2786,88843+16]..[2786,88843+25])
                                                    [
                                                      <case>
                                                        pattern (lambda/matching.ml[2787,88874+12]..[2787,88874+14])
                                                          Ppat_construct "[]" (lambda/matching.ml[2787,88874+12]..[2787,88874+14])
                                                          None
                                                        expression (lambda/matching.ml[2787,88874+18]..[2787,88874+25])
                                                          Pexp_ident "default" (lambda/matching.ml[2787,88874+18]..[2787,88874+25])
                                                      <case>
                                                        pattern (lambda/matching.ml[2788,88900+12]..[2788,88900+13])
                                                          Ppat_any
                                                        expression (lambda/matching.ml[2789,88917+14]..[2798,89306+79])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lambda/matching.ml[2789,88917+18]..[2789,88917+21])
                                                                Ppat_var "tag" (lambda/matching.ml[2789,88917+18]..[2789,88917+21])
                                                              expression (lambda/matching.ml[2789,88917+24]..[2789,88917+48])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2789,88917+24]..[2789,88917+42])
                                                                  Pexp_ident "Ident.create_local" (lambda/matching.ml[2789,88917+24]..[2789,88917+42])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2789,88917+43]..[2789,88917+48])
                                                                      Pexp_constant PConst_string("tag",(lambda/matching.ml[2789,88917+44]..[2789,88917+47]),None)
                                                                ]
                                                          ]
                                                          expression (lambda/matching.ml[2790,88969+14]..[2798,89306+79])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lambda/matching.ml[2790,88969+18]..[2790,88969+23])
                                                                  Ppat_var "tests" (lambda/matching.ml[2790,88969+18]..[2790,88969+23])
                                                                expression (lambda/matching.ml[2791,88995+16]..[2796,89253+35])
                                                                  Pexp_apply
                                                                  expression (lambda/matching.ml[2791,88995+16]..[2791,88995+31])
                                                                    Pexp_ident "List.fold_right" (lambda/matching.ml[2791,88995+16]..[2791,88995+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2792,89027+18]..[2795,89173+79])
Pexp_fun
Nolabel
None
pattern (lambda/matching.ml[2792,89027+23]..[2792,89027+34])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2792,89027+24]..[2792,89027+28])
      Ppat_var "path" (lambda/matching.ml[2792,89027+24]..[2792,89027+28])
    pattern (lambda/matching.ml[2792,89027+30]..[2792,89027+33])
      Ppat_var "act" (lambda/matching.ml[2792,89027+30]..[2792,89027+33])
  ]
expression (lambda/matching.ml[2792,89027+35]..[2795,89173+78]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (lambda/matching.ml[2792,89027+35]..[2792,89027+38])
    Ppat_var "rem" (lambda/matching.ml[2792,89027+35]..[2792,89027+38])
  expression (lambda/matching.ml[2793,89069+20]..[2795,89173+78])
    Pexp_let Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2793,89069+24]..[2793,89069+27])
          Ppat_var "ext" (lambda/matching.ml[2793,89069+24]..[2793,89069+27])
        expression (lambda/matching.ml[2793,89069+30]..[2793,89069+68])
          Pexp_apply
          expression (lambda/matching.ml[2793,89069+30]..[2793,89069+51])
            Pexp_ident "transl_extension_path" (lambda/matching.ml[2793,89069+30]..[2793,89069+51])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[2793,89069+52]..[2793,89069+55])
                Pexp_ident "loc" (lambda/matching.ml[2793,89069+52]..[2793,89069+55])
            <arg>
            Nolabel
              expression (lambda/matching.ml[2793,89069+56]..[2793,89069+63])
                Pexp_ident "pat_env" (lambda/matching.ml[2793,89069+56]..[2793,89069+63])
            <arg>
            Nolabel
              expression (lambda/matching.ml[2793,89069+64]..[2793,89069+68])
                Pexp_ident "path" (lambda/matching.ml[2793,89069+64]..[2793,89069+68])
          ]
    ]
    expression (lambda/matching.ml[2794,89141+20]..[2795,89173+78])
      Pexp_construct "Lifthenelse" (lambda/matching.ml[2794,89141+20]..[2794,89141+31])
      Some
        expression (lambda/matching.ml[2795,89173+22]..[2795,89173+78])
          Pexp_tuple
          [
            expression (lambda/matching.ml[2795,89173+23]..[2795,89173+67])
              Pexp_construct "Lprim" (lambda/matching.ml[2795,89173+23]..[2795,89173+28])
              Some
                expression (lambda/matching.ml[2795,89173+29]..[2795,89173+67])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[2795,89173+30]..[2795,89173+42])
                      Pexp_construct "Pintcomp" (lambda/matching.ml[2795,89173+30]..[2795,89173+38])
                      Some
                        expression (lambda/matching.ml[2795,89173+39]..[2795,89173+42])
                          Pexp_construct "Ceq" (lambda/matching.ml[2795,89173+39]..[2795,89173+42])
                          None
                    expression (lambda/matching.ml[2795,89173+44]..[2795,89173+61])
                      Pexp_construct "::" (lambda/matching.ml[2795,89173+46]..[2795,89173+61]) ghost
                      Some
                        expression (lambda/matching.ml[2795,89173+46]..[2795,89173+61]) ghost
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2795,89173+46]..[2795,89173+54])
                              Pexp_construct "Lvar" (lambda/matching.ml[2795,89173+46]..[2795,89173+50])
                              Some
                                expression (lambda/matching.ml[2795,89173+51]..[2795,89173+54])
                                  Pexp_ident "tag" (lambda/matching.ml[2795,89173+51]..[2795,89173+54])
                            expression (lambda/matching.ml[2795,89173+56]..[2795,89173+61]) ghost
                              Pexp_construct "::" (lambda/matching.ml[2795,89173+56]..[2795,89173+61]) ghost
                              Some
                                expression (lambda/matching.ml[2795,89173+56]..[2795,89173+61]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[2795,89173+56]..[2795,89173+59])
                                      Pexp_ident "ext" (lambda/matching.ml[2795,89173+56]..[2795,89173+59])
                                    expression (lambda/matching.ml[2795,89173+60]..[2795,89173+61]) ghost
                                      Pexp_construct "[]" (lambda/matching.ml[2795,89173+60]..[2795,89173+61]) ghost
                                      None
                                  ]
                          ]
                    expression (lambda/matching.ml[2795,89173+63]..[2795,89173+66])
                      Pexp_ident "loc" (lambda/matching.ml[2795,89173+63]..[2795,89173+66])
                  ]
            expression (lambda/matching.ml[2795,89173+69]..[2795,89173+72])
              Pexp_ident "act" (lambda/matching.ml[2795,89173+69]..[2795,89173+72])
            expression (lambda/matching.ml[2795,89173+74]..[2795,89173+77])
              Pexp_ident "rem" (lambda/matching.ml[2795,89173+74]..[2795,89173+77])
          ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2796,89253+18]..[2796,89253+27])
Pexp_ident "nonconsts" (lambda/matching.ml[2796,89253+18]..[2796,89253+27])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/matching.ml[2796,89253+28]..[2796,89253+35])
Pexp_ident "default" (lambda/matching.ml[2796,89253+28]..[2796,89253+35])
                                                                  ]
                                                            ]
                                                            expression (lambda/matching.ml[2798,89306+14]..[2798,89306+79])
                                                              Pexp_construct "Llet" (lambda/matching.ml[2798,89306+14]..[2798,89306+18])
                                                              Some
                                                                expression (lambda/matching.ml[2798,89306+19]..[2798,89306+79])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[2798,89306+20]..[2798,89306+25])
                                                                      Pexp_construct "Alias" (lambda/matching.ml[2798,89306+20]..[2798,89306+25])
                                                                      None
                                                                    expression (lambda/matching.ml[2798,89306+27]..[2798,89306+34])
                                                                      Pexp_construct "Pgenval" (lambda/matching.ml[2798,89306+27]..[2798,89306+34])
                                                                      None
                                                                    expression (lambda/matching.ml[2798,89306+36]..[2798,89306+39])
                                                                      Pexp_ident "tag" (lambda/matching.ml[2798,89306+36]..[2798,89306+39])
                                                                    expression (lambda/matching.ml[2798,89306+41]..[2798,89306+71])
                                                                      Pexp_construct "Lprim" (lambda/matching.ml[2798,89306+41]..[2798,89306+46])
                                                                      Some
expression (lambda/matching.ml[2798,89306+47]..[2798,89306+71])
  Pexp_tuple
  [
    expression (lambda/matching.ml[2798,89306+48]..[2798,89306+56])
      Pexp_construct "Pfield" (lambda/matching.ml[2798,89306+48]..[2798,89306+54])
      Some
        expression (lambda/matching.ml[2798,89306+55]..[2798,89306+56])
          Pexp_constant PConst_int (0,None)
    expression (lambda/matching.ml[2798,89306+58]..[2798,89306+65])
      Pexp_construct "::" (lambda/matching.ml[2798,89306+60]..[2798,89306+65]) ghost
      Some
        expression (lambda/matching.ml[2798,89306+60]..[2798,89306+65]) ghost
          Pexp_tuple
          [
            expression (lambda/matching.ml[2798,89306+60]..[2798,89306+63])
              Pexp_ident "arg" (lambda/matching.ml[2798,89306+60]..[2798,89306+63])
            expression (lambda/matching.ml[2798,89306+64]..[2798,89306+65]) ghost
              Pexp_construct "[]" (lambda/matching.ml[2798,89306+64]..[2798,89306+65]) ghost
              None
          ]
    expression (lambda/matching.ml[2798,89306+67]..[2798,89306+70])
      Pexp_ident "loc" (lambda/matching.ml[2798,89306+67]..[2798,89306+70])
  ]
                                                                    expression (lambda/matching.ml[2798,89306+73]..[2798,89306+78])
                                                                      Pexp_ident "tests" (lambda/matching.ml[2798,89306+73]..[2798,89306+78])
                                                                  ]
                                                    ]
                                              ]
                                              expression (lambda/matching.ml[2800,89397+8]..[2804,89596+32])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2800,89397+8]..[2800,89397+23])
                                                  Pexp_ident "List.fold_right" (lambda/matching.ml[2800,89397+8]..[2800,89397+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2801,89421+10]..[2803,89519+76])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/matching.ml[2801,89421+15]..[2801,89421+26])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2801,89421+16]..[2801,89421+20])
                                                            Ppat_var "path" (lambda/matching.ml[2801,89421+16]..[2801,89421+20])
                                                          pattern (lambda/matching.ml[2801,89421+22]..[2801,89421+25])
                                                            Ppat_var "act" (lambda/matching.ml[2801,89421+22]..[2801,89421+25])
                                                        ]
                                                      expression (lambda/matching.ml[2801,89421+27]..[2803,89519+75]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/matching.ml[2801,89421+27]..[2801,89421+30])
                                                          Ppat_var "rem" (lambda/matching.ml[2801,89421+27]..[2801,89421+30])
                                                        expression (lambda/matching.ml[2802,89455+12]..[2803,89519+75])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lambda/matching.ml[2802,89455+16]..[2802,89455+19])
                                                                Ppat_var "ext" (lambda/matching.ml[2802,89455+16]..[2802,89455+19])
                                                              expression (lambda/matching.ml[2802,89455+22]..[2802,89455+60])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2802,89455+22]..[2802,89455+43])
                                                                  Pexp_ident "transl_extension_path" (lambda/matching.ml[2802,89455+22]..[2802,89455+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2802,89455+44]..[2802,89455+47])
                                                                      Pexp_ident "loc" (lambda/matching.ml[2802,89455+44]..[2802,89455+47])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2802,89455+48]..[2802,89455+55])
                                                                      Pexp_ident "pat_env" (lambda/matching.ml[2802,89455+48]..[2802,89455+55])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2802,89455+56]..[2802,89455+60])
                                                                      Pexp_ident "path" (lambda/matching.ml[2802,89455+56]..[2802,89455+60])
                                                                ]
                                                          ]
                                                          expression (lambda/matching.ml[2803,89519+12]..[2803,89519+75])
                                                            Pexp_construct "Lifthenelse" (lambda/matching.ml[2803,89519+12]..[2803,89519+23])
                                                            Some
                                                              expression (lambda/matching.ml[2803,89519+24]..[2803,89519+75])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[2803,89519+25]..[2803,89519+64])
                                                                    Pexp_construct "Lprim" (lambda/matching.ml[2803,89519+25]..[2803,89519+30])
                                                                    Some
                                                                      expression (lambda/matching.ml[2803,89519+31]..[2803,89519+64])
Pexp_tuple
[
  expression (lambda/matching.ml[2803,89519+32]..[2803,89519+44])
    Pexp_construct "Pintcomp" (lambda/matching.ml[2803,89519+32]..[2803,89519+40])
    Some
      expression (lambda/matching.ml[2803,89519+41]..[2803,89519+44])
        Pexp_construct "Ceq" (lambda/matching.ml[2803,89519+41]..[2803,89519+44])
        None
  expression (lambda/matching.ml[2803,89519+46]..[2803,89519+58])
    Pexp_construct "::" (lambda/matching.ml[2803,89519+48]..[2803,89519+58]) ghost
    Some
      expression (lambda/matching.ml[2803,89519+48]..[2803,89519+58]) ghost
        Pexp_tuple
        [
          expression (lambda/matching.ml[2803,89519+48]..[2803,89519+51])
            Pexp_ident "arg" (lambda/matching.ml[2803,89519+48]..[2803,89519+51])
          expression (lambda/matching.ml[2803,89519+53]..[2803,89519+58]) ghost
            Pexp_construct "::" (lambda/matching.ml[2803,89519+53]..[2803,89519+58]) ghost
            Some
              expression (lambda/matching.ml[2803,89519+53]..[2803,89519+58]) ghost
                Pexp_tuple
                [
                  expression (lambda/matching.ml[2803,89519+53]..[2803,89519+56])
                    Pexp_ident "ext" (lambda/matching.ml[2803,89519+53]..[2803,89519+56])
                  expression (lambda/matching.ml[2803,89519+57]..[2803,89519+58]) ghost
                    Pexp_construct "[]" (lambda/matching.ml[2803,89519+57]..[2803,89519+58]) ghost
                    None
                ]
        ]
  expression (lambda/matching.ml[2803,89519+60]..[2803,89519+63])
    Pexp_ident "loc" (lambda/matching.ml[2803,89519+60]..[2803,89519+63])
]
                                                                  expression (lambda/matching.ml[2803,89519+66]..[2803,89519+69])
                                                                    Pexp_ident "act" (lambda/matching.ml[2803,89519+66]..[2803,89519+69])
                                                                  expression (lambda/matching.ml[2803,89519+71]..[2803,89519+74])
                                                                    Pexp_ident "rem" (lambda/matching.ml[2803,89519+71]..[2803,89519+74])
                                                                ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2804,89596+10]..[2804,89596+16])
                                                      Pexp_ident "consts" (lambda/matching.ml[2804,89596+10]..[2804,89596+16])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2804,89596+17]..[2804,89596+32])
                                                      Pexp_ident "nonconst_lambda" (lambda/matching.ml[2804,89596+17]..[2804,89596+32])
                                                ]
                                    ]
                                    expression (lambda/matching.ml[2806,89638+6]..[2806,89638+47])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[2806,89638+7]..[2806,89638+14])
                                          Pexp_ident "lambda1" (lambda/matching.ml[2806,89638+7]..[2806,89638+14])
                                        expression (lambda/matching.ml[2806,89638+16]..[2806,89638+46])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2806,89638+16]..[2806,89638+27])
                                            Pexp_ident "Jumps.union" (lambda/matching.ml[2806,89638+16]..[2806,89638+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2806,89638+28]..[2806,89638+39])
                                                Pexp_ident "local_jumps" (lambda/matching.ml[2806,89638+28]..[2806,89638+39])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2806,89638+40]..[2806,89638+46])
                                                Pexp_ident "total1" (lambda/matching.ml[2806,89638+40]..[2806,89638+46])
                                          ]
                                      ]
                              <case>
                                pattern (lambda/matching.ml[2807,89686+4]..[2807,89686+5])
                                  Ppat_any
                                expression (lambda/matching.ml[2809,89729+6]..[2873,92425+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2809,89729+10]..[2809,89729+16])
                                        Ppat_var "ncases" (lambda/matching.ml[2809,89729+10]..[2809,89729+16])
                                      expression (lambda/matching.ml[2809,89729+19]..[2809,89729+48])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2809,89729+19]..[2809,89729+30])
                                          Pexp_ident "List.length" (lambda/matching.ml[2809,89729+19]..[2809,89729+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2809,89729+31]..[2809,89729+48])
                                              Pexp_ident "descr_lambda_list" (lambda/matching.ml[2809,89729+31]..[2809,89729+48])
                                        ]
                                    <def>
                                      pattern (lambda/matching.ml[2810,89778+10]..[2810,89778+18])
                                        Ppat_var "nconstrs" (lambda/matching.ml[2810,89778+10]..[2810,89778+18])
                                      expression (lambda/matching.ml[2810,89778+21]..[2810,89778+59])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2810,89778+38]..[2810,89778+39])
                                          Pexp_ident "+" (lambda/matching.ml[2810,89778+38]..[2810,89778+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2810,89778+21]..[2810,89778+37])
                                              Pexp_field
                                              expression (lambda/matching.ml[2810,89778+21]..[2810,89778+25])
                                                Pexp_ident "cstr" (lambda/matching.ml[2810,89778+21]..[2810,89778+25])
                                              "cstr_consts" (lambda/matching.ml[2810,89778+26]..[2810,89778+37])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2810,89778+40]..[2810,89778+59])
                                              Pexp_field
                                              expression (lambda/matching.ml[2810,89778+40]..[2810,89778+44])
                                                Pexp_ident "cstr" (lambda/matching.ml[2810,89778+40]..[2810,89778+44])
                                              "cstr_nonconsts" (lambda/matching.ml[2810,89778+45]..[2810,89778+59])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2811,89841+6]..[2873,92425+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[2811,89841+10]..[2811,89841+22])
                                          Ppat_var "sig_complete" (lambda/matching.ml[2811,89841+10]..[2811,89841+22])
                                        expression (lambda/matching.ml[2811,89841+25]..[2811,89841+42])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2811,89841+32]..[2811,89841+33])
                                            Pexp_ident "=" (lambda/matching.ml[2811,89841+32]..[2811,89841+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2811,89841+25]..[2811,89841+31])
                                                Pexp_ident "ncases" (lambda/matching.ml[2811,89841+25]..[2811,89841+31])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2811,89841+34]..[2811,89841+42])
                                                Pexp_ident "nconstrs" (lambda/matching.ml[2811,89841+34]..[2811,89841+42])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[2812,89887+6]..[2873,92425+47])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2812,89887+10]..[2812,89887+38])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[2812,89887+10]..[2812,89887+18])
                                                Ppat_var "fail_opt" (lambda/matching.ml[2812,89887+10]..[2812,89887+18])
                                              pattern (lambda/matching.ml[2812,89887+20]..[2812,89887+25])
                                                Ppat_var "fails" (lambda/matching.ml[2812,89887+20]..[2812,89887+25])
                                              pattern (lambda/matching.ml[2812,89887+27]..[2812,89887+38])
                                                Ppat_var "local_jumps" (lambda/matching.ml[2812,89887+27]..[2812,89887+38])
                                            ]
                                          expression (lambda/matching.ml[2813,89928+8]..[2819,90145+51])
                                            Pexp_ifthenelse
                                            expression (lambda/matching.ml[2813,89928+11]..[2813,89928+23])
                                              Pexp_ident "sig_complete" (lambda/matching.ml[2813,89928+11]..[2813,89928+23])
                                            expression (lambda/matching.ml[2814,89957+10]..[2814,89957+33])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2814,89957+11]..[2814,89957+15])
                                                  Pexp_construct "None" (lambda/matching.ml[2814,89957+11]..[2814,89957+15])
                                                  None
                                                expression (lambda/matching.ml[2814,89957+17]..[2814,89957+19])
                                                  Pexp_construct "[]" (lambda/matching.ml[2814,89957+17]..[2814,89957+19])
                                                  None
                                                expression (lambda/matching.ml[2814,89957+21]..[2814,89957+32])
                                                  Pexp_ident "Jumps.empty" (lambda/matching.ml[2814,89957+21]..[2814,89957+32])
                                              ]
                                            Some
                                              expression (lambda/matching.ml[2816,90004+10]..[2819,90145+51])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[2816,90004+14]..[2816,90004+21])
                                                      Ppat_var "constrs" (lambda/matching.ml[2816,90004+14]..[2816,90004+21])
                                                    expression (lambda/matching.ml[2817,90028+12]..[2818,90105+36])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[2817,90028+12]..[2817,90028+21])
                                                        Pexp_ident "List.map2" (lambda/matching.ml[2817,90028+12]..[2817,90028+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2817,90028+22]..[2817,90028+76])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/matching.ml[2817,90028+27]..[2817,90028+41])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2817,90028+28]..[2817,90028+34])
                                                                  Ppat_var "constr" (lambda/matching.ml[2817,90028+28]..[2817,90028+34])
                                                                pattern (lambda/matching.ml[2817,90028+36]..[2817,90028+40])
                                                                  Ppat_var "_act" (lambda/matching.ml[2817,90028+36]..[2817,90028+40])
                                                              ]
                                                            expression (lambda/matching.ml[2817,90028+42]..[2817,90028+75]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (lambda/matching.ml[2817,90028+42]..[2817,90028+43])
                                                                Ppat_var "p" (lambda/matching.ml[2817,90028+42]..[2817,90028+43])
                                                              expression (lambda/matching.ml[2817,90028+47]..[2817,90028+75])
                                                                Pexp_record
                                                                [
                                                                  "pat_desc" (lambda/matching.ml[2817,90028+56]..[2817,90028+64])
                                                                    expression (lambda/matching.ml[2817,90028+67]..[2817,90028+73])
                                                                      Pexp_ident "constr" (lambda/matching.ml[2817,90028+67]..[2817,90028+73])
                                                                ]
                                                                Some
                                                                  expression (lambda/matching.ml[2817,90028+49]..[2817,90028+50])
                                                                    Pexp_ident "p" (lambda/matching.ml[2817,90028+49]..[2817,90028+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2818,90105+14]..[2818,90105+31])
                                                            Pexp_ident "descr_lambda_list" (lambda/matching.ml[2818,90105+14]..[2818,90105+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2818,90105+32]..[2818,90105+36])
                                                            Pexp_ident "pats" (lambda/matching.ml[2818,90105+32]..[2818,90105+36])
                                                      ]
                                                ]
                                                expression (lambda/matching.ml[2819,90145+10]..[2819,90145+51])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2819,90145+10]..[2819,90145+27])
                                                    Pexp_ident "mk_failaction_pos" (lambda/matching.ml[2819,90145+10]..[2819,90145+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2819,90145+28]..[2819,90145+35])
                                                        Pexp_ident "partial" (lambda/matching.ml[2819,90145+28]..[2819,90145+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2819,90145+36]..[2819,90145+43])
                                                        Pexp_ident "constrs" (lambda/matching.ml[2819,90145+36]..[2819,90145+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2819,90145+44]..[2819,90145+47])
                                                        Pexp_ident "ctx" (lambda/matching.ml[2819,90145+44]..[2819,90145+47])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2819,90145+48]..[2819,90145+51])
                                                        Pexp_ident "def" (lambda/matching.ml[2819,90145+48]..[2819,90145+51])
                                                  ]
                                      ]
                                      expression (lambda/matching.ml[2821,90206+6]..[2873,92425+47])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[2821,90206+10]..[2821,90206+27])
                                              Ppat_var "descr_lambda_list" (lambda/matching.ml[2821,90206+10]..[2821,90206+27])
                                            expression (lambda/matching.ml[2821,90206+30]..[2821,90206+55])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2821,90206+36]..[2821,90206+37])
                                                Pexp_ident "@" (lambda/matching.ml[2821,90206+36]..[2821,90206+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2821,90206+30]..[2821,90206+35])
                                                    Pexp_ident "fails" (lambda/matching.ml[2821,90206+30]..[2821,90206+35])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2821,90206+38]..[2821,90206+55])
                                                    Pexp_ident "descr_lambda_list" (lambda/matching.ml[2821,90206+38]..[2821,90206+55])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[2822,90265+6]..[2873,92425+47])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[2822,90265+10]..[2822,90265+27])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[2822,90265+10]..[2822,90265+16])
                                                    Ppat_var "consts" (lambda/matching.ml[2822,90265+10]..[2822,90265+16])
                                                  pattern (lambda/matching.ml[2822,90265+18]..[2822,90265+27])
                                                    Ppat_var "nonconsts" (lambda/matching.ml[2822,90265+18]..[2822,90265+27])
                                                ]
                                              expression (lambda/matching.ml[2823,90295+8]..[2823,90295+59])
                                                Pexp_apply
                                                expression (lambda/matching.ml[2823,90295+8]..[2823,90295+19])
                                                  Pexp_ident "split_cases" (lambda/matching.ml[2823,90295+8]..[2823,90295+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[2823,90295+20]..[2823,90295+59])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[2823,90295+21]..[2823,90295+29])
                                                        Pexp_ident "List.map" (lambda/matching.ml[2823,90295+21]..[2823,90295+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2823,90295+30]..[2823,90295+40])
                                                            Pexp_ident "tag_lambda" (lambda/matching.ml[2823,90295+30]..[2823,90295+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[2823,90295+41]..[2823,90295+58])
                                                            Pexp_ident "descr_lambda_list" (lambda/matching.ml[2823,90295+41]..[2823,90295+58])
                                                      ]
                                                ]
                                          ]
                                          expression (lambda/matching.ml[2824,90358+6]..[2873,92425+47])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[2824,90358+10]..[2824,90358+17])
                                                  Ppat_var "lambda1" (lambda/matching.ml[2824,90358+10]..[2824,90358+17])
                                                expression (lambda/matching.ml[2825,90378+8]..[2871,92404+11])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[2825,90378+14]..[2825,90378+56])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2825,90378+15]..[2825,90378+23])
                                                        Pexp_ident "fail_opt" (lambda/matching.ml[2825,90378+15]..[2825,90378+23])
                                                      expression (lambda/matching.ml[2825,90378+25]..[2825,90378+55])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2825,90378+25]..[2825,90378+37])
                                                          Pexp_ident "same_actions" (lambda/matching.ml[2825,90378+25]..[2825,90378+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2825,90378+38]..[2825,90378+55])
                                                              Pexp_ident "descr_lambda_list" (lambda/matching.ml[2825,90378+38]..[2825,90378+55])
                                                        ]
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[2826,90440+10]..[2826,90440+24])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2826,90440+10]..[2826,90440+14])
                                                            Ppat_construct "None" (lambda/matching.ml[2826,90440+10]..[2826,90440+14])
                                                            None
                                                          pattern (lambda/matching.ml[2826,90440+16]..[2826,90440+24])
                                                            Ppat_construct "Some" (lambda/matching.ml[2826,90440+16]..[2826,90440+20])
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2826,90440+21]..[2826,90440+24])
                                                                Ppat_var "act" (lambda/matching.ml[2826,90440+21]..[2826,90440+24])
                                                        ]
                                                      expression (lambda/matching.ml[2826,90440+28]..[2826,90440+31])
                                                        Pexp_ident "act" (lambda/matching.ml[2826,90440+28]..[2826,90440+31])
                                                    <case>
                                                      pattern (lambda/matching.ml[2827,90508+10]..[2827,90508+11])
                                                        Ppat_any
                                                      expression (lambda/matching.ml[2827,90508+15]..[2871,92404+11])
                                                        Pexp_match
                                                        expression (lambda/matching.ml[2829,90543+14]..[2829,90543+72])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[2829,90543+15]..[2829,90543+31])
                                                              Pexp_field
                                                              expression (lambda/matching.ml[2829,90543+15]..[2829,90543+19])
                                                                Pexp_ident "cstr" (lambda/matching.ml[2829,90543+15]..[2829,90543+19])
                                                              "cstr_consts" (lambda/matching.ml[2829,90543+20]..[2829,90543+31])
                                                            expression (lambda/matching.ml[2829,90543+33]..[2829,90543+52])
                                                              Pexp_field
                                                              expression (lambda/matching.ml[2829,90543+33]..[2829,90543+37])
                                                                Pexp_ident "cstr" (lambda/matching.ml[2829,90543+33]..[2829,90543+37])
                                                              "cstr_nonconsts" (lambda/matching.ml[2829,90543+38]..[2829,90543+52])
                                                            expression (lambda/matching.ml[2829,90543+54]..[2829,90543+60])
                                                              Pexp_ident "consts" (lambda/matching.ml[2829,90543+54]..[2829,90543+60])
                                                            expression (lambda/matching.ml[2829,90543+62]..[2829,90543+71])
                                                              Pexp_ident "nonconsts" (lambda/matching.ml[2829,90543+62]..[2829,90543+71])
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (lambda/matching.ml[2831,90633+14]..[2831,90633+48])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2831,90633+14]..[2831,90633+15])
                                                                  Ppat_constant PConst_int (1,None)
                                                                pattern (lambda/matching.ml[2831,90633+17]..[2831,90633+18])
                                                                  Ppat_constant PConst_int (1,None)
                                                                pattern (lambda/matching.ml[2831,90633+20]..[2831,90633+33])
                                                                  Ppat_construct "::" (lambda/matching.ml[2831,90633+22]..[2831,90633+33]) ghost
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[2831,90633+22]..[2831,90633+33]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[2831,90633+22]..[2831,90633+31])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2831,90633+23]..[2831,90633+24])
      Ppat_constant PConst_int (0,None)
    pattern (lambda/matching.ml[2831,90633+26]..[2831,90633+30])
      Ppat_var "act1" (lambda/matching.ml[2831,90633+26]..[2831,90633+30])
  ]
pattern (lambda/matching.ml[2831,90633+32]..[2831,90633+33]) ghost
  Ppat_construct "[]" (lambda/matching.ml[2831,90633+32]..[2831,90633+33]) ghost
  None
                                                                      ]
                                                                pattern (lambda/matching.ml[2831,90633+35]..[2831,90633+48])
                                                                  Ppat_construct "::" (lambda/matching.ml[2831,90633+37]..[2831,90633+48]) ghost
                                                                  Some
                                                                    []
                                                                    pattern (lambda/matching.ml[2831,90633+37]..[2831,90633+48]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (lambda/matching.ml[2831,90633+37]..[2831,90633+46])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2831,90633+38]..[2831,90633+39])
      Ppat_constant PConst_int (0,None)
    pattern (lambda/matching.ml[2831,90633+41]..[2831,90633+45])
      Ppat_var "act2" (lambda/matching.ml[2831,90633+41]..[2831,90633+45])
  ]
pattern (lambda/matching.ml[2831,90633+47]..[2831,90633+48]) ghost
  Ppat_construct "[]" (lambda/matching.ml[2831,90633+47]..[2831,90633+48]) ghost
  None
                                                                      ]
                                                              ]
                                                            expression (lambda/matching.ml[2834,90788+16]..[2834,90788+45])
                                                              Pexp_construct "Lifthenelse" (lambda/matching.ml[2834,90788+16]..[2834,90788+27])
                                                              Some
                                                                expression (lambda/matching.ml[2834,90788+28]..[2834,90788+45])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[2834,90788+29]..[2834,90788+32])
                                                                      Pexp_ident "arg" (lambda/matching.ml[2834,90788+29]..[2834,90788+32])
                                                                    expression (lambda/matching.ml[2834,90788+34]..[2834,90788+38])
                                                                      Pexp_ident "act2" (lambda/matching.ml[2834,90788+34]..[2834,90788+38])
                                                                    expression (lambda/matching.ml[2834,90788+40]..[2834,90788+44])
                                                                      Pexp_ident "act1" (lambda/matching.ml[2834,90788+40]..[2834,90788+44])
                                                                  ]
                                                          <case>
                                                            pattern (lambda/matching.ml[2835,90834+14]..[2835,90834+25])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2835,90834+14]..[2835,90834+15])
                                                                  Ppat_var "n" (lambda/matching.ml[2835,90834+14]..[2835,90834+15])
                                                                pattern (lambda/matching.ml[2835,90834+17]..[2835,90834+18])
                                                                  Ppat_constant PConst_int (0,None)
                                                                pattern (lambda/matching.ml[2835,90834+20]..[2835,90834+21])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[2835,90834+23]..[2835,90834+25])
                                                                  Ppat_construct "[]" (lambda/matching.ml[2835,90834+23]..[2835,90834+25])
                                                                  None
                                                              ]
                                                            expression (lambda/matching.ml[2837,90929+16]..[2837,90929+63])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2837,90929+16]..[2837,90929+29])
                                                                Pexp_ident "call_switcher" (lambda/matching.ml[2837,90929+16]..[2837,90929+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+30]..[2837,90929+33])
                                                                    Pexp_ident "loc" (lambda/matching.ml[2837,90929+30]..[2837,90929+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+34]..[2837,90929+42])
                                                                    Pexp_ident "fail_opt" (lambda/matching.ml[2837,90929+34]..[2837,90929+42])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+43]..[2837,90929+46])
                                                                    Pexp_ident "arg" (lambda/matching.ml[2837,90929+43]..[2837,90929+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+47]..[2837,90929+48])
                                                                    Pexp_constant PConst_int (0,None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+49]..[2837,90929+56])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[2837,90929+52]..[2837,90929+53])
                                                                      Pexp_ident "-" (lambda/matching.ml[2837,90929+52]..[2837,90929+53])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[2837,90929+50]..[2837,90929+51])
  Pexp_ident "n" (lambda/matching.ml[2837,90929+50]..[2837,90929+51])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[2837,90929+54]..[2837,90929+55])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2837,90929+57]..[2837,90929+63])
                                                                    Pexp_ident "consts" (lambda/matching.ml[2837,90929+57]..[2837,90929+63])
                                                              ]
                                                          <case>
                                                            pattern (lambda/matching.ml[2838,90993+14]..[2838,90993+24])
                                                              Ppat_tuple
                                                              [
                                                                pattern (lambda/matching.ml[2838,90993+14]..[2838,90993+15])
                                                                  Ppat_var "n" (lambda/matching.ml[2838,90993+14]..[2838,90993+15])
                                                                pattern (lambda/matching.ml[2838,90993+17]..[2838,90993+18])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[2838,90993+20]..[2838,90993+21])
                                                                  Ppat_any
                                                                pattern (lambda/matching.ml[2838,90993+23]..[2838,90993+24])
                                                                  Ppat_any
                                                              ]
                                                            expression (lambda/matching.ml[2838,90993+28]..[2870,92388+15])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (lambda/matching.ml[2839,91023+20]..[2839,91023+24])
                                                                    Ppat_var "act0" (lambda/matching.ml[2839,91023+20]..[2839,91023+24])
                                                                  expression (lambda/matching.ml[2841,91130+18]..[2848,91432+53])
                                                                    Pexp_match
                                                                    expression (lambda/matching.ml[2841,91130+24]..[2841,91130+45])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[2841,91130+25]..[2841,91130+33])
  Pexp_ident "fail_opt" (lambda/matching.ml[2841,91130+25]..[2841,91130+33])
expression (lambda/matching.ml[2841,91130+35]..[2841,91130+44])
  Pexp_ident "nonconsts" (lambda/matching.ml[2841,91130+35]..[2841,91130+44])
                                                                      ]
                                                                    [
                                                                      <case>
pattern (lambda/matching.ml[2842,91181+20]..[2842,91181+30])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2842,91181+20]..[2842,91181+26])
      Ppat_construct "Some" (lambda/matching.ml[2842,91181+20]..[2842,91181+24])
      Some
        []
        pattern (lambda/matching.ml[2842,91181+25]..[2842,91181+26])
          Ppat_var "a" (lambda/matching.ml[2842,91181+25]..[2842,91181+26])
    pattern (lambda/matching.ml[2842,91181+28]..[2842,91181+30])
      Ppat_construct "[]" (lambda/matching.ml[2842,91181+28]..[2842,91181+30])
      None
  ]
expression (lambda/matching.ml[2842,91181+34]..[2842,91181+40])
  Pexp_construct "Some" (lambda/matching.ml[2842,91181+34]..[2842,91181+38])
  Some
    expression (lambda/matching.ml[2842,91181+39]..[2842,91181+40])
      Pexp_ident "a" (lambda/matching.ml[2842,91181+39]..[2842,91181+40])
                                                                      <case>
pattern (lambda/matching.ml[2843,91222+20]..[2843,91222+29])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2843,91222+20]..[2843,91222+26])
      Ppat_construct "Some" (lambda/matching.ml[2843,91222+20]..[2843,91222+24])
      Some
        []
        pattern (lambda/matching.ml[2843,91222+25]..[2843,91222+26])
          Ppat_any
    pattern (lambda/matching.ml[2843,91222+28]..[2843,91222+29])
      Ppat_any
  ]
expression (lambda/matching.ml[2844,91255+22]..[2847,91403+28])
  Pexp_ifthenelse
  expression (lambda/matching.ml[2844,91255+25]..[2844,91255+68])
    Pexp_apply
    expression (lambda/matching.ml[2844,91255+47]..[2844,91255+48])
      Pexp_ident "=" (lambda/matching.ml[2844,91255+47]..[2844,91255+48])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[2844,91255+25]..[2844,91255+46])
          Pexp_apply
          expression (lambda/matching.ml[2844,91255+25]..[2844,91255+36])
            Pexp_ident "List.length" (lambda/matching.ml[2844,91255+25]..[2844,91255+36])
          [
            <arg>
            Nolabel
              expression (lambda/matching.ml[2844,91255+37]..[2844,91255+46])
                Pexp_ident "nonconsts" (lambda/matching.ml[2844,91255+37]..[2844,91255+46])
          ]
      <arg>
      Nolabel
        expression (lambda/matching.ml[2844,91255+49]..[2844,91255+68])
          Pexp_field
          expression (lambda/matching.ml[2844,91255+49]..[2844,91255+53])
            Pexp_ident "cstr" (lambda/matching.ml[2844,91255+49]..[2844,91255+53])
          "cstr_nonconsts" (lambda/matching.ml[2844,91255+54]..[2844,91255+68])
    ]
  expression (lambda/matching.ml[2845,91329+24]..[2845,91329+46])
    Pexp_apply
    expression (lambda/matching.ml[2845,91329+24]..[2845,91329+36])
      Pexp_ident "same_actions" (lambda/matching.ml[2845,91329+24]..[2845,91329+36])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[2845,91329+37]..[2845,91329+46])
          Pexp_ident "nonconsts" (lambda/matching.ml[2845,91329+37]..[2845,91329+46])
    ]
  Some
    expression (lambda/matching.ml[2847,91403+24]..[2847,91403+28])
      Pexp_construct "None" (lambda/matching.ml[2847,91403+24]..[2847,91403+28])
      None
                                                                      <case>
pattern (lambda/matching.ml[2848,91432+20]..[2848,91432+27])
  Ppat_tuple
  [
    pattern (lambda/matching.ml[2848,91432+20]..[2848,91432+24])
      Ppat_construct "None" (lambda/matching.ml[2848,91432+20]..[2848,91432+24])
      None
    pattern (lambda/matching.ml[2848,91432+26]..[2848,91432+27])
      Ppat_any
  ]
expression (lambda/matching.ml[2848,91432+31]..[2848,91432+53])
  Pexp_apply
  expression (lambda/matching.ml[2848,91432+31]..[2848,91432+43])
    Pexp_ident "same_actions" (lambda/matching.ml[2848,91432+31]..[2848,91432+43])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[2848,91432+44]..[2848,91432+53])
        Pexp_ident "nonconsts" (lambda/matching.ml[2848,91432+44]..[2848,91432+53])
  ]
                                                                    ]
                                                              ]
                                                              expression (lambda/matching.ml[2850,91505+16]..[2869,92340+47])
                                                                Pexp_match
                                                                expression (lambda/matching.ml[2850,91505+22]..[2850,91505+26])
                                                                  Pexp_ident "act0" (lambda/matching.ml[2850,91505+22]..[2850,91505+26])
                                                                [
                                                                  <case>
                                                                    pattern (lambda/matching.ml[2851,91537+18]..[2851,91537+26])
                                                                      Ppat_construct "Some" (lambda/matching.ml[2851,91537+18]..[2851,91537+22])
                                                                      Some
[]
pattern (lambda/matching.ml[2851,91537+23]..[2851,91537+26])
  Ppat_var "act" (lambda/matching.ml[2851,91537+23]..[2851,91537+26])
                                                                    expression (lambda/matching.ml[2852,91567+20]..[2855,91726+29])
                                                                      Pexp_construct "Lifthenelse" (lambda/matching.ml[2852,91567+20]..[2852,91567+31])
                                                                      Some
expression (lambda/matching.ml[2853,91599+22]..[2855,91726+29])
  Pexp_tuple
  [
    expression (lambda/matching.ml[2853,91599+24]..[2853,91599+52])
      Pexp_construct "Lprim" (lambda/matching.ml[2853,91599+24]..[2853,91599+29])
      Some
        expression (lambda/matching.ml[2853,91599+30]..[2853,91599+52])
          Pexp_tuple
          [
            expression (lambda/matching.ml[2853,91599+31]..[2853,91599+37])
              Pexp_construct "Pisint" (lambda/matching.ml[2853,91599+31]..[2853,91599+37])
              None
            expression (lambda/matching.ml[2853,91599+39]..[2853,91599+46])
              Pexp_construct "::" (lambda/matching.ml[2853,91599+41]..[2853,91599+46]) ghost
              Some
                expression (lambda/matching.ml[2853,91599+41]..[2853,91599+46]) ghost
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[2853,91599+41]..[2853,91599+44])
                      Pexp_ident "arg" (lambda/matching.ml[2853,91599+41]..[2853,91599+44])
                    expression (lambda/matching.ml[2853,91599+45]..[2853,91599+46]) ghost
                      Pexp_construct "[]" (lambda/matching.ml[2853,91599+45]..[2853,91599+46]) ghost
                      None
                  ]
            expression (lambda/matching.ml[2853,91599+48]..[2853,91599+51])
              Pexp_ident "loc" (lambda/matching.ml[2853,91599+48]..[2853,91599+51])
          ]
    expression (lambda/matching.ml[2854,91653+24]..[2854,91653+71])
      Pexp_apply
      expression (lambda/matching.ml[2854,91653+24]..[2854,91653+37])
        Pexp_ident "call_switcher" (lambda/matching.ml[2854,91653+24]..[2854,91653+37])
      [
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+38]..[2854,91653+41])
            Pexp_ident "loc" (lambda/matching.ml[2854,91653+38]..[2854,91653+41])
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+42]..[2854,91653+50])
            Pexp_ident "fail_opt" (lambda/matching.ml[2854,91653+42]..[2854,91653+50])
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+51]..[2854,91653+54])
            Pexp_ident "arg" (lambda/matching.ml[2854,91653+51]..[2854,91653+54])
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+55]..[2854,91653+56])
            Pexp_constant PConst_int (0,None)
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+57]..[2854,91653+64])
            Pexp_apply
            expression (lambda/matching.ml[2854,91653+60]..[2854,91653+61])
              Pexp_ident "-" (lambda/matching.ml[2854,91653+60]..[2854,91653+61])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[2854,91653+58]..[2854,91653+59])
                  Pexp_ident "n" (lambda/matching.ml[2854,91653+58]..[2854,91653+59])
              <arg>
              Nolabel
                expression (lambda/matching.ml[2854,91653+62]..[2854,91653+63])
                  Pexp_constant PConst_int (1,None)
            ]
        <arg>
        Nolabel
          expression (lambda/matching.ml[2854,91653+65]..[2854,91653+71])
            Pexp_ident "consts" (lambda/matching.ml[2854,91653+65]..[2854,91653+71])
      ]
    expression (lambda/matching.ml[2855,91726+24]..[2855,91726+27])
      Pexp_ident "act" (lambda/matching.ml[2855,91726+24]..[2855,91726+27])
  ]
                                                                  <case>
                                                                    pattern (lambda/matching.ml[2856,91756+18]..[2856,91756+22])
                                                                      Ppat_construct "None" (lambda/matching.ml[2856,91756+18]..[2856,91756+22])
                                                                      None
                                                                    expression (lambda/matching.ml[2859,91899+20]..[2869,92340+47])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (lambda/matching.ml[2859,91899+24]..[2859,91899+26])
    Ppat_var "sw" (lambda/matching.ml[2859,91899+24]..[2859,91899+26])
  expression (lambda/matching.ml[2860,91928+22]..[2865,92185+23])
    Pexp_record
    [
      "sw_numconsts" (lambda/matching.ml[2860,91928+24]..[2860,91928+36])
        expression (lambda/matching.ml[2860,91928+39]..[2860,91928+55])
          Pexp_field
          expression (lambda/matching.ml[2860,91928+39]..[2860,91928+43])
            Pexp_ident "cstr" (lambda/matching.ml[2860,91928+39]..[2860,91928+43])
          "cstr_consts" (lambda/matching.ml[2860,91928+44]..[2860,91928+55])
      "sw_consts" (lambda/matching.ml[2861,91985+24]..[2861,91985+33])
        expression (lambda/matching.ml[2861,91985+36]..[2861,91985+42])
          Pexp_ident "consts" (lambda/matching.ml[2861,91985+36]..[2861,91985+42])
      "sw_numblocks" (lambda/matching.ml[2862,92029+24]..[2862,92029+36])
        expression (lambda/matching.ml[2862,92029+39]..[2862,92029+58])
          Pexp_field
          expression (lambda/matching.ml[2862,92029+39]..[2862,92029+43])
            Pexp_ident "cstr" (lambda/matching.ml[2862,92029+39]..[2862,92029+43])
          "cstr_nonconsts" (lambda/matching.ml[2862,92029+44]..[2862,92029+58])
      "sw_blocks" (lambda/matching.ml[2863,92089+24]..[2863,92089+33])
        expression (lambda/matching.ml[2863,92089+36]..[2863,92089+45])
          Pexp_ident "nonconsts" (lambda/matching.ml[2863,92089+36]..[2863,92089+45])
      "sw_failaction" (lambda/matching.ml[2864,92136+24]..[2864,92136+37])
        expression (lambda/matching.ml[2864,92136+40]..[2864,92136+48])
          Pexp_ident "fail_opt" (lambda/matching.ml[2864,92136+40]..[2864,92136+48])
    ]
    None
                                                                      ]
                                                                      expression (lambda/matching.ml[2867,92232+20]..[2869,92340+47])
Pexp_let Nonrec
[
  <def>
    pattern (lambda/matching.ml[2867,92232+24]..[2867,92232+30])
      Ppat_tuple
      [
        pattern (lambda/matching.ml[2867,92232+24]..[2867,92232+26])
          Ppat_var "hs" (lambda/matching.ml[2867,92232+24]..[2867,92232+26])
        pattern (lambda/matching.ml[2867,92232+28]..[2867,92232+30])
          Ppat_var "sw" (lambda/matching.ml[2867,92232+28]..[2867,92232+30])
      ]
    expression (lambda/matching.ml[2867,92232+33]..[2867,92232+52])
      Pexp_apply
      expression (lambda/matching.ml[2867,92232+33]..[2867,92232+49])
        Pexp_ident "share_actions_sw" (lambda/matching.ml[2867,92232+33]..[2867,92232+49])
      [
        <arg>
        Nolabel
          expression (lambda/matching.ml[2867,92232+50]..[2867,92232+52])
            Pexp_ident "sw" (lambda/matching.ml[2867,92232+50]..[2867,92232+52])
      ]
]
expression (lambda/matching.ml[2868,92288+20]..[2869,92340+47])
  Pexp_let Nonrec
  [
    <def>
      pattern (lambda/matching.ml[2868,92288+24]..[2868,92288+26])
        Ppat_var "sw" (lambda/matching.ml[2868,92288+24]..[2868,92288+26])
      expression (lambda/matching.ml[2868,92288+29]..[2868,92288+48])
        Pexp_apply
        expression (lambda/matching.ml[2868,92288+29]..[2868,92288+45])
          Pexp_ident "reintroduce_fail" (lambda/matching.ml[2868,92288+29]..[2868,92288+45])
        [
          <arg>
          Nolabel
            expression (lambda/matching.ml[2868,92288+46]..[2868,92288+48])
              Pexp_ident "sw" (lambda/matching.ml[2868,92288+46]..[2868,92288+48])
        ]
  ]
  expression (lambda/matching.ml[2869,92340+20]..[2869,92340+47])
    Pexp_apply
    expression (lambda/matching.ml[2869,92340+20]..[2869,92340+22])
      Pexp_ident "hs" (lambda/matching.ml[2869,92340+20]..[2869,92340+22])
    [
      <arg>
      Nolabel
        expression (lambda/matching.ml[2869,92340+23]..[2869,92340+47])
          Pexp_construct "Lswitch" (lambda/matching.ml[2869,92340+24]..[2869,92340+31])
          Some
            expression (lambda/matching.ml[2869,92340+32]..[2869,92340+46])
              Pexp_tuple
              [
                expression (lambda/matching.ml[2869,92340+33]..[2869,92340+36])
                  Pexp_ident "arg" (lambda/matching.ml[2869,92340+33]..[2869,92340+36])
                expression (lambda/matching.ml[2869,92340+38]..[2869,92340+40])
                  Pexp_ident "sw" (lambda/matching.ml[2869,92340+38]..[2869,92340+40])
                expression (lambda/matching.ml[2869,92340+42]..[2869,92340+45])
                  Pexp_ident "loc" (lambda/matching.ml[2869,92340+42]..[2869,92340+45])
              ]
    ]
                                                                ]
                                                        ]
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[2873,92425+6]..[2873,92425+47])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2873,92425+7]..[2873,92425+14])
                                                  Pexp_ident "lambda1" (lambda/matching.ml[2873,92425+7]..[2873,92425+14])
                                                expression (lambda/matching.ml[2873,92425+16]..[2873,92425+46])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[2873,92425+16]..[2873,92425+27])
                                                    Pexp_ident "Jumps.union" (lambda/matching.ml[2873,92425+16]..[2873,92425+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2873,92425+28]..[2873,92425+39])
                                                        Pexp_ident "local_jumps" (lambda/matching.ml[2873,92425+28]..[2873,92425+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[2873,92425+40]..[2873,92425+46])
                                                        Pexp_ident "total1" (lambda/matching.ml[2873,92425+40]..[2873,92425+46])
                                                  ]
                                              ]
                            ]
    ]
  structure_item (lambda/matching.ml[2875,92474+0]..[2877,92621+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2875,92474+4]..[2875,92474+39])
          Ppat_var "make_test_sequence_variant_constant" (lambda/matching.ml[2875,92474+4]..[2875,92474+39])
        expression (lambda/matching.ml[2875,92474+40]..[2877,92621+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2875,92474+40]..[2875,92474+44])
            Ppat_var "fail" (lambda/matching.ml[2875,92474+40]..[2875,92474+44])
          expression (lambda/matching.ml[2875,92474+45]..[2877,92621+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2875,92474+45]..[2875,92474+48])
              Ppat_var "arg" (lambda/matching.ml[2875,92474+45]..[2875,92474+48])
            expression (lambda/matching.ml[2875,92474+49]..[2877,92621+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2875,92474+49]..[2875,92474+64])
                Ppat_var "int_lambda_list" (lambda/matching.ml[2875,92474+49]..[2875,92474+64])
              expression (lambda/matching.ml[2876,92541+2]..[2877,92621+42])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/matching.ml[2876,92541+6]..[2876,92541+25])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[2876,92541+6]..[2876,92541+7])
                          Ppat_any
                        pattern (lambda/matching.ml[2876,92541+9]..[2876,92541+25])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[2876,92541+10]..[2876,92541+15])
                              Ppat_var "cases" (lambda/matching.ml[2876,92541+10]..[2876,92541+15])
                            pattern (lambda/matching.ml[2876,92541+17]..[2876,92541+24])
                              Ppat_var "actions" (lambda/matching.ml[2876,92541+17]..[2876,92541+24])
                          ]
                      ]
                    expression (lambda/matching.ml[2876,92541+28]..[2876,92541+76])
                      Pexp_apply
                      expression (lambda/matching.ml[2876,92541+28]..[2876,92541+39])
                        Pexp_ident "as_interval" (lambda/matching.ml[2876,92541+28]..[2876,92541+39])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2876,92541+40]..[2876,92541+44])
                            Pexp_ident "fail" (lambda/matching.ml[2876,92541+40]..[2876,92541+44])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2876,92541+45]..[2876,92541+52])
                            Pexp_ident "min_int" (lambda/matching.ml[2876,92541+45]..[2876,92541+52])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2876,92541+53]..[2876,92541+60])
                            Pexp_ident "max_int" (lambda/matching.ml[2876,92541+53]..[2876,92541+60])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2876,92541+61]..[2876,92541+76])
                            Pexp_ident "int_lambda_list" (lambda/matching.ml[2876,92541+61]..[2876,92541+76])
                      ]
                ]
                expression (lambda/matching.ml[2877,92621+2]..[2877,92621+42])
                  Pexp_apply
                  expression (lambda/matching.ml[2877,92621+2]..[2877,92621+24])
                    Pexp_ident "Switcher.test_sequence" (lambda/matching.ml[2877,92621+2]..[2877,92621+24])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2877,92621+25]..[2877,92621+28])
                        Pexp_ident "arg" (lambda/matching.ml[2877,92621+25]..[2877,92621+28])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2877,92621+29]..[2877,92621+34])
                        Pexp_ident "cases" (lambda/matching.ml[2877,92621+29]..[2877,92621+34])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2877,92621+35]..[2877,92621+42])
                        Pexp_ident "actions" (lambda/matching.ml[2877,92621+35]..[2877,92621+42])
                  ]
    ]
  structure_item (lambda/matching.ml[2879,92665+0]..[2880,92731+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2879,92665+4]..[2879,92665+34])
          Ppat_var "call_switcher_variant_constant" (lambda/matching.ml[2879,92665+4]..[2879,92665+34])
        expression (lambda/matching.ml[2879,92665+35]..[2880,92731+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2879,92665+35]..[2879,92665+38])
            Ppat_var "loc" (lambda/matching.ml[2879,92665+35]..[2879,92665+38])
          expression (lambda/matching.ml[2879,92665+39]..[2880,92731+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2879,92665+39]..[2879,92665+43])
              Ppat_var "fail" (lambda/matching.ml[2879,92665+39]..[2879,92665+43])
            expression (lambda/matching.ml[2879,92665+44]..[2880,92731+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2879,92665+44]..[2879,92665+47])
                Ppat_var "arg" (lambda/matching.ml[2879,92665+44]..[2879,92665+47])
              expression (lambda/matching.ml[2879,92665+48]..[2880,92731+60]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2879,92665+48]..[2879,92665+63])
                  Ppat_var "int_lambda_list" (lambda/matching.ml[2879,92665+48]..[2879,92665+63])
                expression (lambda/matching.ml[2880,92731+2]..[2880,92731+60])
                  Pexp_apply
                  expression (lambda/matching.ml[2880,92731+2]..[2880,92731+15])
                    Pexp_ident "call_switcher" (lambda/matching.ml[2880,92731+2]..[2880,92731+15])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+16]..[2880,92731+19])
                        Pexp_ident "loc" (lambda/matching.ml[2880,92731+16]..[2880,92731+19])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+20]..[2880,92731+24])
                        Pexp_ident "fail" (lambda/matching.ml[2880,92731+20]..[2880,92731+24])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+25]..[2880,92731+28])
                        Pexp_ident "arg" (lambda/matching.ml[2880,92731+25]..[2880,92731+28])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+29]..[2880,92731+36])
                        Pexp_ident "min_int" (lambda/matching.ml[2880,92731+29]..[2880,92731+36])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+37]..[2880,92731+44])
                        Pexp_ident "max_int" (lambda/matching.ml[2880,92731+37]..[2880,92731+44])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[2880,92731+45]..[2880,92731+60])
                        Pexp_ident "int_lambda_list" (lambda/matching.ml[2880,92731+45]..[2880,92731+60])
                  ]
    ]
  structure_item (lambda/matching.ml[2882,92793+0]..[2889,92981+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2882,92793+4]..[2882,92793+32])
          Ppat_var "call_switcher_variant_constr" (lambda/matching.ml[2882,92793+4]..[2882,92793+32])
        expression (lambda/matching.ml[2882,92793+33]..[2889,92981+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2882,92793+33]..[2882,92793+36])
            Ppat_var "loc" (lambda/matching.ml[2882,92793+33]..[2882,92793+36])
          expression (lambda/matching.ml[2882,92793+37]..[2889,92981+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2882,92793+37]..[2882,92793+41])
              Ppat_var "fail" (lambda/matching.ml[2882,92793+37]..[2882,92793+41])
            expression (lambda/matching.ml[2882,92793+42]..[2889,92981+71]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2882,92793+42]..[2882,92793+45])
                Ppat_var "arg" (lambda/matching.ml[2882,92793+42]..[2882,92793+45])
              expression (lambda/matching.ml[2882,92793+46]..[2889,92981+71]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2882,92793+46]..[2882,92793+61])
                  Ppat_var "int_lambda_list" (lambda/matching.ml[2882,92793+46]..[2882,92793+61])
                expression (lambda/matching.ml[2883,92857+2]..[2889,92981+71])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[2883,92857+6]..[2883,92857+7])
                        Ppat_var "v" (lambda/matching.ml[2883,92857+6]..[2883,92857+7])
                      expression (lambda/matching.ml[2883,92857+10]..[2883,92857+38])
                        Pexp_apply
                        expression (lambda/matching.ml[2883,92857+10]..[2883,92857+28])
                          Pexp_ident "Ident.create_local" (lambda/matching.ml[2883,92857+10]..[2883,92857+28])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[2883,92857+29]..[2883,92857+38])
                              Pexp_constant PConst_string("variant",(lambda/matching.ml[2883,92857+30]..[2883,92857+37]),None)
                        ]
                  ]
                  expression (lambda/matching.ml[2884,92899+2]..[2889,92981+71])
                    Pexp_construct "Llet" (lambda/matching.ml[2884,92899+2]..[2884,92899+6])
                    Some
                      expression (lambda/matching.ml[2885,92906+4]..[2889,92981+71])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[2885,92906+6]..[2885,92906+11])
                            Pexp_construct "Alias" (lambda/matching.ml[2885,92906+6]..[2885,92906+11])
                            None
                          expression (lambda/matching.ml[2886,92919+6]..[2886,92919+13])
                            Pexp_construct "Pgenval" (lambda/matching.ml[2886,92919+6]..[2886,92919+13])
                            None
                          expression (lambda/matching.ml[2887,92934+6]..[2887,92934+7])
                            Pexp_ident "v" (lambda/matching.ml[2887,92934+6]..[2887,92934+7])
                          expression (lambda/matching.ml[2888,92943+6]..[2888,92943+36])
                            Pexp_construct "Lprim" (lambda/matching.ml[2888,92943+6]..[2888,92943+11])
                            Some
                              expression (lambda/matching.ml[2888,92943+12]..[2888,92943+36])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[2888,92943+13]..[2888,92943+21])
                                    Pexp_construct "Pfield" (lambda/matching.ml[2888,92943+13]..[2888,92943+19])
                                    Some
                                      expression (lambda/matching.ml[2888,92943+20]..[2888,92943+21])
                                        Pexp_constant PConst_int (0,None)
                                  expression (lambda/matching.ml[2888,92943+23]..[2888,92943+30])
                                    Pexp_construct "::" (lambda/matching.ml[2888,92943+25]..[2888,92943+30]) ghost
                                    Some
                                      expression (lambda/matching.ml[2888,92943+25]..[2888,92943+30]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2888,92943+25]..[2888,92943+28])
                                            Pexp_ident "arg" (lambda/matching.ml[2888,92943+25]..[2888,92943+28])
                                          expression (lambda/matching.ml[2888,92943+29]..[2888,92943+30]) ghost
                                            Pexp_construct "[]" (lambda/matching.ml[2888,92943+29]..[2888,92943+30]) ghost
                                            None
                                        ]
                                  expression (lambda/matching.ml[2888,92943+32]..[2888,92943+35])
                                    Pexp_ident "loc" (lambda/matching.ml[2888,92943+32]..[2888,92943+35])
                                ]
                          expression (lambda/matching.ml[2889,92981+6]..[2889,92981+69])
                            Pexp_apply
                            expression (lambda/matching.ml[2889,92981+6]..[2889,92981+19])
                              Pexp_ident "call_switcher" (lambda/matching.ml[2889,92981+6]..[2889,92981+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+20]..[2889,92981+23])
                                  Pexp_ident "loc" (lambda/matching.ml[2889,92981+20]..[2889,92981+23])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+24]..[2889,92981+28])
                                  Pexp_ident "fail" (lambda/matching.ml[2889,92981+24]..[2889,92981+28])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+29]..[2889,92981+37])
                                  Pexp_construct "Lvar" (lambda/matching.ml[2889,92981+30]..[2889,92981+34])
                                  Some
                                    expression (lambda/matching.ml[2889,92981+35]..[2889,92981+36])
                                      Pexp_ident "v" (lambda/matching.ml[2889,92981+35]..[2889,92981+36])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+38]..[2889,92981+45])
                                  Pexp_ident "min_int" (lambda/matching.ml[2889,92981+38]..[2889,92981+45])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+46]..[2889,92981+53])
                                  Pexp_ident "max_int" (lambda/matching.ml[2889,92981+46]..[2889,92981+53])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2889,92981+54]..[2889,92981+69])
                                  Pexp_ident "int_lambda_list" (lambda/matching.ml[2889,92981+54]..[2889,92981+69])
                            ]
                        ]
    ]
  structure_item (lambda/matching.ml[2891,93054+0]..[2949,94898+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2891,93054+4]..[2891,93054+19])
          Ppat_var "combine_variant" (lambda/matching.ml[2891,93054+4]..[2891,93054+19])
        expression (lambda/matching.ml[2891,93054+20]..[2949,94898+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2891,93054+20]..[2891,93054+23])
            Ppat_var "loc" (lambda/matching.ml[2891,93054+20]..[2891,93054+23])
          expression (lambda/matching.ml[2891,93054+24]..[2949,94898+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2891,93054+24]..[2891,93054+27])
              Ppat_var "row" (lambda/matching.ml[2891,93054+24]..[2891,93054+27])
            expression (lambda/matching.ml[2891,93054+28]..[2949,94898+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2891,93054+28]..[2891,93054+31])
                Ppat_var "arg" (lambda/matching.ml[2891,93054+28]..[2891,93054+31])
              expression (lambda/matching.ml[2891,93054+32]..[2949,94898+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2891,93054+32]..[2891,93054+39])
                  Ppat_var "partial" (lambda/matching.ml[2891,93054+32]..[2891,93054+39])
                expression (lambda/matching.ml[2891,93054+40]..[2949,94898+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2891,93054+40]..[2891,93054+43])
                    Ppat_var "ctx" (lambda/matching.ml[2891,93054+40]..[2891,93054+43])
                  expression (lambda/matching.ml[2891,93054+44]..[2949,94898+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2891,93054+44]..[2891,93054+47])
                      Ppat_var "def" (lambda/matching.ml[2891,93054+44]..[2891,93054+47])
                    expression (lambda/matching.ml[2891,93054+48]..[2949,94898+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2891,93054+48]..[2891,93054+80])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2891,93054+49]..[2891,93054+64])
                            Ppat_var "tag_lambda_list" (lambda/matching.ml[2891,93054+49]..[2891,93054+64])
                          pattern (lambda/matching.ml[2891,93054+66]..[2891,93054+72])
                            Ppat_var "total1" (lambda/matching.ml[2891,93054+66]..[2891,93054+72])
                          pattern (lambda/matching.ml[2891,93054+74]..[2891,93054+79])
                            Ppat_var "_pats" (lambda/matching.ml[2891,93054+74]..[2891,93054+79])
                        ]
                      expression (lambda/matching.ml[2893,93141+2]..[2949,94898+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2893,93141+6]..[2893,93141+9])
                              Ppat_var "row" (lambda/matching.ml[2893,93141+6]..[2893,93141+9])
                            expression (lambda/matching.ml[2893,93141+12]..[2893,93141+30])
                              Pexp_apply
                              expression (lambda/matching.ml[2893,93141+12]..[2893,93141+26])
                                Pexp_ident "Btype.row_repr" (lambda/matching.ml[2893,93141+12]..[2893,93141+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2893,93141+27]..[2893,93141+30])
                                    Pexp_ident "row" (lambda/matching.ml[2893,93141+27]..[2893,93141+30])
                              ]
                        ]
                        expression (lambda/matching.ml[2894,93175+2]..[2949,94898+43])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2894,93175+6]..[2894,93175+16])
                                Ppat_var "num_constr" (lambda/matching.ml[2894,93175+6]..[2894,93175+16])
                              expression (lambda/matching.ml[2894,93175+19]..[2894,93175+24])
                                Pexp_apply
                                expression (lambda/matching.ml[2894,93175+19]..[2894,93175+22])
                                  Pexp_ident "ref" (lambda/matching.ml[2894,93175+19]..[2894,93175+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2894,93175+23]..[2894,93175+24])
                                      Pexp_constant PConst_int (0,None)
                                ]
                          ]
                          expression (lambda/matching.ml[2895,93203+2]..[2949,94898+43])
                            Pexp_sequence
                            expression (lambda/matching.ml[2895,93203+2]..[2905,93440+25])
                              Pexp_ifthenelse
                              expression (lambda/matching.ml[2895,93203+5]..[2895,93203+19])
                                Pexp_field
                                expression (lambda/matching.ml[2895,93203+5]..[2895,93203+8])
                                  Pexp_ident "row" (lambda/matching.ml[2895,93203+5]..[2895,93203+8])
                                "row_closed" (lambda/matching.ml[2895,93203+9]..[2895,93203+19])
                              expression (lambda/matching.ml[2896,93228+4]..[2903,93412+20])
                                Pexp_apply
                                expression (lambda/matching.ml[2896,93228+4]..[2896,93228+13])
                                  Pexp_ident "List.iter" (lambda/matching.ml[2896,93228+4]..[2896,93228+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2897,93242+6]..[2902,93380+31])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[2897,93242+11]..[2897,93242+17])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2897,93242+12]..[2897,93242+13])
                                            Ppat_any
                                          pattern (lambda/matching.ml[2897,93242+15]..[2897,93242+16])
                                            Ppat_var "f" (lambda/matching.ml[2897,93242+15]..[2897,93242+16])
                                        ]
                                      expression (lambda/matching.ml[2898,93263+8]..[2902,93380+30])
                                        Pexp_match
                                        expression (lambda/matching.ml[2898,93263+14]..[2898,93263+36])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2898,93263+14]..[2898,93263+34])
                                            Pexp_ident "Btype.row_field_repr" (lambda/matching.ml[2898,93263+14]..[2898,93263+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2898,93263+35]..[2898,93263+36])
                                                Pexp_ident "f" (lambda/matching.ml[2898,93263+35]..[2898,93263+36])
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/matching.ml[2899,93305+10]..[2900,93323+38])
                                              Ppat_or
                                              pattern (lambda/matching.ml[2899,93305+10]..[2899,93305+17])
                                                Ppat_construct "Rabsent" (lambda/matching.ml[2899,93305+10]..[2899,93305+17])
                                                None
                                              pattern (lambda/matching.ml[2900,93323+10]..[2900,93323+38])
                                                Ppat_construct "Reither" (lambda/matching.ml[2900,93323+10]..[2900,93323+17])
                                                Some
                                                  []
                                                  pattern (lambda/matching.ml[2900,93323+18]..[2900,93323+38])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[2900,93323+19]..[2900,93323+23])
                                                        Ppat_construct "true" (lambda/matching.ml[2900,93323+19]..[2900,93323+23])
                                                        None
                                                      pattern (lambda/matching.ml[2900,93323+25]..[2900,93323+31])
                                                        Ppat_construct "::" (lambda/matching.ml[2900,93323+27]..[2900,93323+29])
                                                        Some
                                                          []
                                                          pattern (lambda/matching.ml[2900,93323+25]..[2900,93323+31]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (lambda/matching.ml[2900,93323+25]..[2900,93323+26])
                                                                Ppat_any
                                                              pattern (lambda/matching.ml[2900,93323+30]..[2900,93323+31])
                                                                Ppat_any
                                                            ]
                                                      pattern (lambda/matching.ml[2900,93323+33]..[2900,93323+34])
                                                        Ppat_any
                                                      pattern (lambda/matching.ml[2900,93323+36]..[2900,93323+37])
                                                        Ppat_any
                                                    ]
                                            expression (lambda/matching.ml[2901,93365+12]..[2901,93365+14])
                                              Pexp_construct "()" (lambda/matching.ml[2901,93365+12]..[2901,93365+14])
                                              None
                                          <case>
                                            pattern (lambda/matching.ml[2902,93380+10]..[2902,93380+11])
                                              Ppat_any
                                            expression (lambda/matching.ml[2902,93380+15]..[2902,93380+30])
                                              Pexp_apply
                                              expression (lambda/matching.ml[2902,93380+15]..[2902,93380+19])
                                                Pexp_ident "incr" (lambda/matching.ml[2902,93380+15]..[2902,93380+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[2902,93380+20]..[2902,93380+30])
                                                    Pexp_ident "num_constr" (lambda/matching.ml[2902,93380+20]..[2902,93380+30])
                                              ]
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2903,93412+6]..[2903,93412+20])
                                      Pexp_field
                                      expression (lambda/matching.ml[2903,93412+6]..[2903,93412+9])
                                        Pexp_ident "row" (lambda/matching.ml[2903,93412+6]..[2903,93412+9])
                                      "row_fields" (lambda/matching.ml[2903,93412+10]..[2903,93412+20])
                                ]
                              Some
                                expression (lambda/matching.ml[2905,93440+4]..[2905,93440+25])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2905,93440+15]..[2905,93440+17])
                                    Pexp_ident ":=" (lambda/matching.ml[2905,93440+15]..[2905,93440+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2905,93440+4]..[2905,93440+14])
                                        Pexp_ident "num_constr" (lambda/matching.ml[2905,93440+4]..[2905,93440+14])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2905,93440+18]..[2905,93440+25])
                                        Pexp_ident "max_int" (lambda/matching.ml[2905,93440+18]..[2905,93440+25])
                                  ]
                            expression (lambda/matching.ml[2906,93467+2]..[2949,94898+43])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[2906,93467+6]..[2906,93467+23])
                                    Ppat_var "test_int_or_block" (lambda/matching.ml[2906,93467+6]..[2906,93467+23])
                                  expression (lambda/matching.ml[2906,93467+24]..[2907,93513+64]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[2906,93467+24]..[2906,93467+27])
                                      Ppat_var "arg" (lambda/matching.ml[2906,93467+24]..[2906,93467+27])
                                    expression (lambda/matching.ml[2906,93467+28]..[2907,93513+64]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[2906,93467+28]..[2906,93467+34])
                                        Ppat_var "if_int" (lambda/matching.ml[2906,93467+28]..[2906,93467+34])
                                      expression (lambda/matching.ml[2906,93467+35]..[2907,93513+64]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[2906,93467+35]..[2906,93467+43])
                                          Ppat_var "if_block" (lambda/matching.ml[2906,93467+35]..[2906,93467+43])
                                        expression (lambda/matching.ml[2907,93513+4]..[2907,93513+64])
                                          Pexp_construct "Lifthenelse" (lambda/matching.ml[2907,93513+4]..[2907,93513+15])
                                          Some
                                            expression (lambda/matching.ml[2907,93513+16]..[2907,93513+64])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2907,93513+17]..[2907,93513+45])
                                                  Pexp_construct "Lprim" (lambda/matching.ml[2907,93513+17]..[2907,93513+22])
                                                  Some
                                                    expression (lambda/matching.ml[2907,93513+23]..[2907,93513+45])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2907,93513+24]..[2907,93513+30])
                                                          Pexp_construct "Pisint" (lambda/matching.ml[2907,93513+24]..[2907,93513+30])
                                                          None
                                                        expression (lambda/matching.ml[2907,93513+32]..[2907,93513+39])
                                                          Pexp_construct "::" (lambda/matching.ml[2907,93513+34]..[2907,93513+39]) ghost
                                                          Some
                                                            expression (lambda/matching.ml[2907,93513+34]..[2907,93513+39]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/matching.ml[2907,93513+34]..[2907,93513+37])
                                                                  Pexp_ident "arg" (lambda/matching.ml[2907,93513+34]..[2907,93513+37])
                                                                expression (lambda/matching.ml[2907,93513+38]..[2907,93513+39]) ghost
                                                                  Pexp_construct "[]" (lambda/matching.ml[2907,93513+38]..[2907,93513+39]) ghost
                                                                  None
                                                              ]
                                                        expression (lambda/matching.ml[2907,93513+41]..[2907,93513+44])
                                                          Pexp_ident "loc" (lambda/matching.ml[2907,93513+41]..[2907,93513+44])
                                                      ]
                                                expression (lambda/matching.ml[2907,93513+47]..[2907,93513+53])
                                                  Pexp_ident "if_int" (lambda/matching.ml[2907,93513+47]..[2907,93513+53])
                                                expression (lambda/matching.ml[2907,93513+55]..[2907,93513+63])
                                                  Pexp_ident "if_block" (lambda/matching.ml[2907,93513+55]..[2907,93513+63])
                                              ]
                              ]
                              expression (lambda/matching.ml[2909,93583+2]..[2949,94898+43])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[2909,93583+6]..[2909,93583+18])
                                      Ppat_var "sig_complete" (lambda/matching.ml[2909,93583+6]..[2909,93583+18])
                                    expression (lambda/matching.ml[2909,93583+21]..[2909,93583+62])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2909,93583+49]..[2909,93583+50])
                                        Pexp_ident "=" (lambda/matching.ml[2909,93583+49]..[2909,93583+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2909,93583+21]..[2909,93583+48])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2909,93583+21]..[2909,93583+32])
                                              Pexp_ident "List.length" (lambda/matching.ml[2909,93583+21]..[2909,93583+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2909,93583+33]..[2909,93583+48])
                                                  Pexp_ident "tag_lambda_list" (lambda/matching.ml[2909,93583+33]..[2909,93583+48])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2909,93583+51]..[2909,93583+62])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2909,93583+51]..[2909,93583+52])
                                              Pexp_ident "!" (lambda/matching.ml[2909,93583+51]..[2909,93583+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2909,93583+52]..[2909,93583+62])
                                                  Pexp_ident "num_constr" (lambda/matching.ml[2909,93583+52]..[2909,93583+62])
                                            ]
                                      ]
                                  <def>
                                    pattern (lambda/matching.ml[2910,93646+6]..[2910,93646+16])
                                      Ppat_var "one_action" (lambda/matching.ml[2910,93646+6]..[2910,93646+16])
                                    expression (lambda/matching.ml[2910,93646+19]..[2910,93646+47])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2910,93646+19]..[2910,93646+31])
                                        Pexp_ident "same_actions" (lambda/matching.ml[2910,93646+19]..[2910,93646+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2910,93646+32]..[2910,93646+47])
                                            Pexp_ident "tag_lambda_list" (lambda/matching.ml[2910,93646+32]..[2910,93646+47])
                                      ]
                                ]
                                expression (lambda/matching.ml[2911,93697+2]..[2949,94898+43])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2911,93697+6]..[2911,93697+23])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[2911,93697+6]..[2911,93697+10])
                                            Ppat_var "fail" (lambda/matching.ml[2911,93697+6]..[2911,93697+10])
                                          pattern (lambda/matching.ml[2911,93697+12]..[2911,93697+23])
                                            Ppat_var "local_jumps" (lambda/matching.ml[2911,93697+12]..[2911,93697+23])
                                        ]
                                      expression (lambda/matching.ml[2912,93723+4]..[2921,93868+39])
                                        Pexp_ifthenelse
                                        expression (lambda/matching.ml[2913,93730+6]..[2917,93805+18])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2914,93749+6]..[2914,93749+8])
                                            Pexp_ident "||" (lambda/matching.ml[2914,93749+6]..[2914,93749+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2913,93730+6]..[2913,93730+18])
                                                Pexp_ident "sig_complete" (lambda/matching.ml[2913,93730+6]..[2913,93730+18])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2915,93758+6]..[2917,93805+18])
                                                Pexp_match
                                                expression (lambda/matching.ml[2915,93758+12]..[2915,93758+19])
                                                  Pexp_ident "partial" (lambda/matching.ml[2915,93758+12]..[2915,93758+19])
                                                [
                                                  <case>
                                                    pattern (lambda/matching.ml[2916,93783+8]..[2916,93783+13])
                                                      Ppat_construct "Total" (lambda/matching.ml[2916,93783+8]..[2916,93783+13])
                                                      None
                                                    expression (lambda/matching.ml[2916,93783+17]..[2916,93783+21])
                                                      Pexp_construct "true" (lambda/matching.ml[2916,93783+17]..[2916,93783+21])
                                                      None
                                                  <case>
                                                    pattern (lambda/matching.ml[2917,93805+8]..[2917,93805+9])
                                                      Ppat_any
                                                    expression (lambda/matching.ml[2917,93805+13]..[2917,93805+18])
                                                      Pexp_construct "false" (lambda/matching.ml[2917,93805+13]..[2917,93805+18])
                                                      None
                                                ]
                                          ]
                                        expression (lambda/matching.ml[2919,93833+6]..[2919,93833+25])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[2919,93833+7]..[2919,93833+11])
                                              Pexp_construct "None" (lambda/matching.ml[2919,93833+7]..[2919,93833+11])
                                              None
                                            expression (lambda/matching.ml[2919,93833+13]..[2919,93833+24])
                                              Pexp_ident "Jumps.empty" (lambda/matching.ml[2919,93833+13]..[2919,93833+24])
                                          ]
                                        Some
                                          expression (lambda/matching.ml[2921,93868+6]..[2921,93868+39])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2921,93868+6]..[2921,93868+23])
                                              Pexp_ident "mk_failaction_neg" (lambda/matching.ml[2921,93868+6]..[2921,93868+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2921,93868+24]..[2921,93868+31])
                                                  Pexp_ident "partial" (lambda/matching.ml[2921,93868+24]..[2921,93868+31])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2921,93868+32]..[2921,93868+35])
                                                  Pexp_ident "ctx" (lambda/matching.ml[2921,93868+32]..[2921,93868+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2921,93868+36]..[2921,93868+39])
                                                  Pexp_ident "def" (lambda/matching.ml[2921,93868+36]..[2921,93868+39])
                                            ]
                                  ]
                                  expression (lambda/matching.ml[2923,93913+2]..[2949,94898+43])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[2923,93913+6]..[2923,93913+23])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[2923,93913+6]..[2923,93913+12])
                                              Ppat_var "consts" (lambda/matching.ml[2923,93913+6]..[2923,93913+12])
                                            pattern (lambda/matching.ml[2923,93913+14]..[2923,93913+23])
                                              Ppat_var "nonconsts" (lambda/matching.ml[2923,93913+14]..[2923,93913+23])
                                          ]
                                        expression (lambda/matching.ml[2923,93913+26]..[2923,93913+53])
                                          Pexp_apply
                                          expression (lambda/matching.ml[2923,93913+26]..[2923,93913+37])
                                            Pexp_ident "split_cases" (lambda/matching.ml[2923,93913+26]..[2923,93913+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[2923,93913+38]..[2923,93913+53])
                                                Pexp_ident "tag_lambda_list" (lambda/matching.ml[2923,93913+38]..[2923,93913+53])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[2924,93970+2]..[2949,94898+43])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[2924,93970+6]..[2924,93970+13])
                                            Ppat_var "lambda1" (lambda/matching.ml[2924,93970+6]..[2924,93970+13])
                                          expression (lambda/matching.ml[2925,93986+4]..[2947,94885+7])
                                            Pexp_match
                                            expression (lambda/matching.ml[2925,93986+10]..[2925,93986+28])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2925,93986+11]..[2925,93986+15])
                                                  Pexp_ident "fail" (lambda/matching.ml[2925,93986+11]..[2925,93986+15])
                                                expression (lambda/matching.ml[2925,93986+17]..[2925,93986+27])
                                                  Pexp_ident "one_action" (lambda/matching.ml[2925,93986+17]..[2925,93986+27])
                                              ]
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[2926,94020+6]..[2926,94020+20])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[2926,94020+6]..[2926,94020+10])
                                                      Ppat_construct "None" (lambda/matching.ml[2926,94020+6]..[2926,94020+10])
                                                      None
                                                    pattern (lambda/matching.ml[2926,94020+12]..[2926,94020+20])
                                                      Ppat_construct "Some" (lambda/matching.ml[2926,94020+12]..[2926,94020+16])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[2926,94020+17]..[2926,94020+20])
                                                          Ppat_var "act" (lambda/matching.ml[2926,94020+17]..[2926,94020+20])
                                                  ]
                                                expression (lambda/matching.ml[2926,94020+24]..[2926,94020+27])
                                                  Pexp_ident "act" (lambda/matching.ml[2926,94020+24]..[2926,94020+27])
                                              <case>
                                                pattern (lambda/matching.ml[2927,94048+6]..[2927,94048+10])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[2927,94048+6]..[2927,94048+7])
                                                      Ppat_any
                                                    pattern (lambda/matching.ml[2927,94048+9]..[2927,94048+10])
                                                      Ppat_any
                                                  ]
                                                expression (lambda/matching.ml[2927,94048+14]..[2947,94885+7])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[2928,94064+14]..[2928,94064+33])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[2928,94064+15]..[2928,94064+21])
                                                        Pexp_ident "consts" (lambda/matching.ml[2928,94064+15]..[2928,94064+21])
                                                      expression (lambda/matching.ml[2928,94064+23]..[2928,94064+32])
                                                        Pexp_ident "nonconsts" (lambda/matching.ml[2928,94064+23]..[2928,94064+32])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[2929,94103+10]..[2929,94103+38])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2929,94103+10]..[2929,94103+23])
                                                            Ppat_construct "::" (lambda/matching.ml[2929,94103+12]..[2929,94103+23]) ghost
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2929,94103+12]..[2929,94103+23]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lambda/matching.ml[2929,94103+12]..[2929,94103+21])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (lambda/matching.ml[2929,94103+13]..[2929,94103+14])
Ppat_any
                                                                      pattern (lambda/matching.ml[2929,94103+16]..[2929,94103+20])
Ppat_var "act1" (lambda/matching.ml[2929,94103+16]..[2929,94103+20])
                                                                    ]
                                                                  pattern (lambda/matching.ml[2929,94103+22]..[2929,94103+23]) ghost
                                                                    Ppat_construct "[]" (lambda/matching.ml[2929,94103+22]..[2929,94103+23]) ghost
                                                                    None
                                                                ]
                                                          pattern (lambda/matching.ml[2929,94103+25]..[2929,94103+38])
                                                            Ppat_construct "::" (lambda/matching.ml[2929,94103+27]..[2929,94103+38]) ghost
                                                            Some
                                                              []
                                                              pattern (lambda/matching.ml[2929,94103+27]..[2929,94103+38]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lambda/matching.ml[2929,94103+27]..[2929,94103+36])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (lambda/matching.ml[2929,94103+28]..[2929,94103+29])
Ppat_any
                                                                      pattern (lambda/matching.ml[2929,94103+31]..[2929,94103+35])
Ppat_var "act2" (lambda/matching.ml[2929,94103+31]..[2929,94103+35])
                                                                    ]
                                                                  pattern (lambda/matching.ml[2929,94103+37]..[2929,94103+38]) ghost
                                                                    Ppat_construct "[]" (lambda/matching.ml[2929,94103+37]..[2929,94103+38]) ghost
                                                                    None
                                                                ]
                                                        ]
                                                      <when>
                                                        expression (lambda/matching.ml[2929,94103+44]..[2929,94103+55])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[2929,94103+49]..[2929,94103+50])
                                                            Pexp_ident "=" (lambda/matching.ml[2929,94103+49]..[2929,94103+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2929,94103+44]..[2929,94103+48])
                                                                Pexp_ident "fail" (lambda/matching.ml[2929,94103+44]..[2929,94103+48])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2929,94103+51]..[2929,94103+55])
                                                                Pexp_construct "None" (lambda/matching.ml[2929,94103+51]..[2929,94103+55])
                                                                None
                                                          ]
                                                      expression (lambda/matching.ml[2930,94162+12]..[2930,94162+43])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2930,94162+12]..[2930,94162+29])
                                                          Pexp_ident "test_int_or_block" (lambda/matching.ml[2930,94162+12]..[2930,94162+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2930,94162+30]..[2930,94162+33])
                                                              Pexp_ident "arg" (lambda/matching.ml[2930,94162+30]..[2930,94162+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2930,94162+34]..[2930,94162+38])
                                                              Pexp_ident "act1" (lambda/matching.ml[2930,94162+34]..[2930,94162+38])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2930,94162+39]..[2930,94162+43])
                                                              Pexp_ident "act2" (lambda/matching.ml[2930,94162+39]..[2930,94162+43])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2931,94206+10]..[2931,94206+15])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2931,94206+10]..[2931,94206+11])
                                                            Ppat_any
                                                          pattern (lambda/matching.ml[2931,94206+13]..[2931,94206+15])
                                                            Ppat_construct "[]" (lambda/matching.ml[2931,94206+13]..[2931,94206+15])
                                                            None
                                                        ]
                                                      expression (lambda/matching.ml[2933,94281+12]..[2933,94281+63])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[2933,94281+12]..[2933,94281+47])
                                                          Pexp_ident "make_test_sequence_variant_constant" (lambda/matching.ml[2933,94281+12]..[2933,94281+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2933,94281+48]..[2933,94281+52])
                                                              Pexp_ident "fail" (lambda/matching.ml[2933,94281+48]..[2933,94281+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2933,94281+53]..[2933,94281+56])
                                                              Pexp_ident "arg" (lambda/matching.ml[2933,94281+53]..[2933,94281+56])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[2933,94281+57]..[2933,94281+63])
                                                              Pexp_ident "consts" (lambda/matching.ml[2933,94281+57]..[2933,94281+63])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2934,94345+10]..[2934,94345+15])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2934,94345+10]..[2934,94345+12])
                                                            Ppat_construct "[]" (lambda/matching.ml[2934,94345+10]..[2934,94345+12])
                                                            None
                                                          pattern (lambda/matching.ml[2934,94345+14]..[2934,94345+15])
                                                            Ppat_any
                                                        ]
                                                      expression (lambda/matching.ml[2934,94345+19]..[2940,94607+11])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lambda/matching.ml[2935,94366+16]..[2935,94366+19])
                                                              Ppat_var "lam" (lambda/matching.ml[2935,94366+16]..[2935,94366+19])
                                                            expression (lambda/matching.ml[2935,94366+22]..[2935,94366+73])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2935,94366+22]..[2935,94366+50])
                                                                Pexp_ident "call_switcher_variant_constr" (lambda/matching.ml[2935,94366+22]..[2935,94366+50])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2935,94366+51]..[2935,94366+54])
                                                                    Pexp_ident "loc" (lambda/matching.ml[2935,94366+51]..[2935,94366+54])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2935,94366+55]..[2935,94366+59])
                                                                    Pexp_ident "fail" (lambda/matching.ml[2935,94366+55]..[2935,94366+59])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2935,94366+60]..[2935,94366+63])
                                                                    Pexp_ident "arg" (lambda/matching.ml[2935,94366+60]..[2935,94366+63])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2935,94366+64]..[2935,94366+73])
                                                                    Pexp_ident "nonconsts" (lambda/matching.ml[2935,94366+64]..[2935,94366+73])
                                                              ]
                                                        ]
                                                        expression (lambda/matching.ml[2937,94495+12]..[2939,94549+57])
                                                          Pexp_match
                                                          expression (lambda/matching.ml[2937,94495+18]..[2937,94495+22])
                                                            Pexp_ident "fail" (lambda/matching.ml[2937,94495+18]..[2937,94495+22])
                                                          [
                                                            <case>
                                                              pattern (lambda/matching.ml[2938,94523+14]..[2938,94523+18])
                                                                Ppat_construct "None" (lambda/matching.ml[2938,94523+14]..[2938,94523+18])
                                                                None
                                                              expression (lambda/matching.ml[2938,94523+22]..[2938,94523+25])
                                                                Pexp_ident "lam" (lambda/matching.ml[2938,94523+22]..[2938,94523+25])
                                                            <case>
                                                              pattern (lambda/matching.ml[2939,94549+14]..[2939,94549+23])
                                                                Ppat_construct "Some" (lambda/matching.ml[2939,94549+14]..[2939,94549+18])
                                                                Some
                                                                  []
                                                                  pattern (lambda/matching.ml[2939,94549+19]..[2939,94549+23])
                                                                    Ppat_var "fail" (lambda/matching.ml[2939,94549+19]..[2939,94549+23])
                                                              expression (lambda/matching.ml[2939,94549+27]..[2939,94549+57])
                                                                Pexp_apply
                                                                expression (lambda/matching.ml[2939,94549+27]..[2939,94549+44])
                                                                  Pexp_ident "test_int_or_block" (lambda/matching.ml[2939,94549+27]..[2939,94549+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2939,94549+45]..[2939,94549+48])
                                                                      Pexp_ident "arg" (lambda/matching.ml[2939,94549+45]..[2939,94549+48])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2939,94549+49]..[2939,94549+53])
                                                                      Pexp_ident "fail" (lambda/matching.ml[2939,94549+49]..[2939,94549+53])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/matching.ml[2939,94549+54]..[2939,94549+57])
                                                                      Pexp_ident "lam" (lambda/matching.ml[2939,94549+54]..[2939,94549+57])
                                                                ]
                                                          ]
                                                    <case>
                                                      pattern (lambda/matching.ml[2941,94619+10]..[2941,94619+14])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[2941,94619+10]..[2941,94619+11])
                                                            Ppat_any
                                                          pattern (lambda/matching.ml[2941,94619+13]..[2941,94619+14])
                                                            Ppat_any
                                                        ]
                                                      expression (lambda/matching.ml[2942,94637+12]..[2946,94828+56])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lambda/matching.ml[2942,94637+16]..[2942,94637+25])
                                                              Ppat_var "lam_const" (lambda/matching.ml[2942,94637+16]..[2942,94637+25])
                                                            expression (lambda/matching.ml[2942,94637+28]..[2942,94637+78])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2942,94637+28]..[2942,94637+58])
                                                                Pexp_ident "call_switcher_variant_constant" (lambda/matching.ml[2942,94637+28]..[2942,94637+58])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2942,94637+59]..[2942,94637+62])
                                                                    Pexp_ident "loc" (lambda/matching.ml[2942,94637+59]..[2942,94637+62])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2942,94637+63]..[2942,94637+67])
                                                                    Pexp_ident "fail" (lambda/matching.ml[2942,94637+63]..[2942,94637+67])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2942,94637+68]..[2942,94637+71])
                                                                    Pexp_ident "arg" (lambda/matching.ml[2942,94637+68]..[2942,94637+71])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2942,94637+72]..[2942,94637+78])
                                                                    Pexp_ident "consts" (lambda/matching.ml[2942,94637+72]..[2942,94637+78])
                                                              ]
                                                          <def>
                                                            pattern (lambda/matching.ml[2943,94716+16]..[2943,94716+28])
                                                              Ppat_var "lam_nonconst" (lambda/matching.ml[2943,94716+16]..[2943,94716+28])
                                                            expression (lambda/matching.ml[2944,94747+14]..[2944,94747+65])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[2944,94747+14]..[2944,94747+42])
                                                                Pexp_ident "call_switcher_variant_constr" (lambda/matching.ml[2944,94747+14]..[2944,94747+42])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2944,94747+43]..[2944,94747+46])
                                                                    Pexp_ident "loc" (lambda/matching.ml[2944,94747+43]..[2944,94747+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2944,94747+47]..[2944,94747+51])
                                                                    Pexp_ident "fail" (lambda/matching.ml[2944,94747+47]..[2944,94747+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2944,94747+52]..[2944,94747+55])
                                                                    Pexp_ident "arg" (lambda/matching.ml[2944,94747+52]..[2944,94747+55])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[2944,94747+56]..[2944,94747+65])
                                                                    Pexp_ident "nonconsts" (lambda/matching.ml[2944,94747+56]..[2944,94747+65])
                                                              ]
                                                        ]
                                                        expression (lambda/matching.ml[2946,94828+12]..[2946,94828+56])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[2946,94828+12]..[2946,94828+29])
                                                            Pexp_ident "test_int_or_block" (lambda/matching.ml[2946,94828+12]..[2946,94828+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2946,94828+30]..[2946,94828+33])
                                                                Pexp_ident "arg" (lambda/matching.ml[2946,94828+30]..[2946,94828+33])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2946,94828+34]..[2946,94828+43])
                                                                Pexp_ident "lam_const" (lambda/matching.ml[2946,94828+34]..[2946,94828+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[2946,94828+44]..[2946,94828+56])
                                                                Pexp_ident "lam_nonconst" (lambda/matching.ml[2946,94828+44]..[2946,94828+56])
                                                          ]
                                                  ]
                                            ]
                                      ]
                                      expression (lambda/matching.ml[2949,94898+2]..[2949,94898+43])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[2949,94898+3]..[2949,94898+10])
                                            Pexp_ident "lambda1" (lambda/matching.ml[2949,94898+3]..[2949,94898+10])
                                          expression (lambda/matching.ml[2949,94898+12]..[2949,94898+42])
                                            Pexp_apply
                                            expression (lambda/matching.ml[2949,94898+12]..[2949,94898+23])
                                              Pexp_ident "Jumps.union" (lambda/matching.ml[2949,94898+12]..[2949,94898+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2949,94898+24]..[2949,94898+35])
                                                  Pexp_ident "local_jumps" (lambda/matching.ml[2949,94898+24]..[2949,94898+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[2949,94898+36]..[2949,94898+42])
                                                  Pexp_ident "total1" (lambda/matching.ml[2949,94898+36]..[2949,94898+42])
                                            ]
                                        ]
    ]
  structure_item (lambda/matching.ml[2951,94943+0]..[2961,95322+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[2951,94943+4]..[2951,94943+17])
          Ppat_var "combine_array" (lambda/matching.ml[2951,94943+4]..[2951,94943+17])
        expression (lambda/matching.ml[2951,94943+18]..[2961,95322+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2951,94943+18]..[2951,94943+21])
            Ppat_var "loc" (lambda/matching.ml[2951,94943+18]..[2951,94943+21])
          expression (lambda/matching.ml[2951,94943+22]..[2961,95322+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2951,94943+22]..[2951,94943+25])
              Ppat_var "arg" (lambda/matching.ml[2951,94943+22]..[2951,94943+25])
            expression (lambda/matching.ml[2951,94943+26]..[2961,95322+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[2951,94943+26]..[2951,94943+30])
                Ppat_var "kind" (lambda/matching.ml[2951,94943+26]..[2951,94943+30])
              expression (lambda/matching.ml[2951,94943+31]..[2961,95322+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[2951,94943+31]..[2951,94943+38])
                  Ppat_var "partial" (lambda/matching.ml[2951,94943+31]..[2951,94943+38])
                expression (lambda/matching.ml[2951,94943+39]..[2961,95322+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[2951,94943+39]..[2951,94943+42])
                    Ppat_var "ctx" (lambda/matching.ml[2951,94943+39]..[2951,94943+42])
                  expression (lambda/matching.ml[2951,94943+43]..[2961,95322+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[2951,94943+43]..[2951,94943+46])
                      Ppat_var "def" (lambda/matching.ml[2951,94943+43]..[2951,94943+46])
                    expression (lambda/matching.ml[2951,94943+47]..[2961,95322+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[2951,94943+47]..[2951,94943+79])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[2951,94943+48]..[2951,94943+63])
                            Ppat_var "len_lambda_list" (lambda/matching.ml[2951,94943+48]..[2951,94943+63])
                          pattern (lambda/matching.ml[2951,94943+65]..[2951,94943+71])
                            Ppat_var "total1" (lambda/matching.ml[2951,94943+65]..[2951,94943+71])
                          pattern (lambda/matching.ml[2951,94943+73]..[2951,94943+78])
                            Ppat_var "_pats" (lambda/matching.ml[2951,94943+73]..[2951,94943+78])
                        ]
                      expression (lambda/matching.ml[2953,95029+2]..[2961,95322+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[2953,95029+6]..[2953,95029+23])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[2953,95029+6]..[2953,95029+10])
                                  Ppat_var "fail" (lambda/matching.ml[2953,95029+6]..[2953,95029+10])
                                pattern (lambda/matching.ml[2953,95029+12]..[2953,95029+23])
                                  Ppat_var "local_jumps" (lambda/matching.ml[2953,95029+12]..[2953,95029+23])
                              ]
                            expression (lambda/matching.ml[2953,95029+26]..[2953,95029+59])
                              Pexp_apply
                              expression (lambda/matching.ml[2953,95029+26]..[2953,95029+43])
                                Pexp_ident "mk_failaction_neg" (lambda/matching.ml[2953,95029+26]..[2953,95029+43])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2953,95029+44]..[2953,95029+51])
                                    Pexp_ident "partial" (lambda/matching.ml[2953,95029+44]..[2953,95029+51])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2953,95029+52]..[2953,95029+55])
                                    Pexp_ident "ctx" (lambda/matching.ml[2953,95029+52]..[2953,95029+55])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[2953,95029+56]..[2953,95029+59])
                                    Pexp_ident "def" (lambda/matching.ml[2953,95029+56]..[2953,95029+59])
                              ]
                        ]
                        expression (lambda/matching.ml[2954,95092+2]..[2961,95322+43])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[2954,95092+6]..[2954,95092+13])
                                Ppat_var "lambda1" (lambda/matching.ml[2954,95092+6]..[2954,95092+13])
                              expression (lambda/matching.ml[2955,95108+4]..[2959,95246+70])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[2955,95108+8]..[2955,95108+14])
                                      Ppat_var "newvar" (lambda/matching.ml[2955,95108+8]..[2955,95108+14])
                                    expression (lambda/matching.ml[2955,95108+17]..[2955,95108+41])
                                      Pexp_apply
                                      expression (lambda/matching.ml[2955,95108+17]..[2955,95108+35])
                                        Pexp_ident "Ident.create_local" (lambda/matching.ml[2955,95108+17]..[2955,95108+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[2955,95108+36]..[2955,95108+41])
                                            Pexp_constant PConst_string("len",(lambda/matching.ml[2955,95108+37]..[2955,95108+40]),None)
                                      ]
                                ]
                                expression (lambda/matching.ml[2956,95153+4]..[2959,95246+70])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[2956,95153+8]..[2956,95153+14])
                                        Ppat_var "switch" (lambda/matching.ml[2956,95153+8]..[2956,95153+14])
                                      expression (lambda/matching.ml[2957,95170+6]..[2957,95170+68])
                                        Pexp_apply
                                        expression (lambda/matching.ml[2957,95170+6]..[2957,95170+19])
                                          Pexp_ident "call_switcher" (lambda/matching.ml[2957,95170+6]..[2957,95170+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+20]..[2957,95170+23])
                                              Pexp_ident "loc" (lambda/matching.ml[2957,95170+20]..[2957,95170+23])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+24]..[2957,95170+28])
                                              Pexp_ident "fail" (lambda/matching.ml[2957,95170+24]..[2957,95170+28])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+29]..[2957,95170+42])
                                              Pexp_construct "Lvar" (lambda/matching.ml[2957,95170+30]..[2957,95170+34])
                                              Some
                                                expression (lambda/matching.ml[2957,95170+35]..[2957,95170+41])
                                                  Pexp_ident "newvar" (lambda/matching.ml[2957,95170+35]..[2957,95170+41])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+43]..[2957,95170+44])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+45]..[2957,95170+52])
                                              Pexp_ident "max_int" (lambda/matching.ml[2957,95170+45]..[2957,95170+52])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[2957,95170+53]..[2957,95170+68])
                                              Pexp_ident "len_lambda_list" (lambda/matching.ml[2957,95170+53]..[2957,95170+68])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[2959,95246+4]..[2959,95246+70])
                                    Pexp_apply
                                    expression (lambda/matching.ml[2959,95246+4]..[2959,95246+8])
                                      Pexp_ident "bind" (lambda/matching.ml[2959,95246+4]..[2959,95246+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2959,95246+9]..[2959,95246+14])
                                          Pexp_construct "Alias" (lambda/matching.ml[2959,95246+9]..[2959,95246+14])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2959,95246+15]..[2959,95246+21])
                                          Pexp_ident "newvar" (lambda/matching.ml[2959,95246+15]..[2959,95246+21])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2959,95246+22]..[2959,95246+63])
                                          Pexp_construct "Lprim" (lambda/matching.ml[2959,95246+23]..[2959,95246+28])
                                          Some
                                            expression (lambda/matching.ml[2959,95246+29]..[2959,95246+62])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[2959,95246+30]..[2959,95246+47])
                                                  Pexp_construct "Parraylength" (lambda/matching.ml[2959,95246+30]..[2959,95246+42])
                                                  Some
                                                    expression (lambda/matching.ml[2959,95246+43]..[2959,95246+47])
                                                      Pexp_ident "kind" (lambda/matching.ml[2959,95246+43]..[2959,95246+47])
                                                expression (lambda/matching.ml[2959,95246+49]..[2959,95246+56])
                                                  Pexp_construct "::" (lambda/matching.ml[2959,95246+51]..[2959,95246+56]) ghost
                                                  Some
                                                    expression (lambda/matching.ml[2959,95246+51]..[2959,95246+56]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[2959,95246+51]..[2959,95246+54])
                                                          Pexp_ident "arg" (lambda/matching.ml[2959,95246+51]..[2959,95246+54])
                                                        expression (lambda/matching.ml[2959,95246+55]..[2959,95246+56]) ghost
                                                          Pexp_construct "[]" (lambda/matching.ml[2959,95246+55]..[2959,95246+56]) ghost
                                                          None
                                                      ]
                                                expression (lambda/matching.ml[2959,95246+58]..[2959,95246+61])
                                                  Pexp_ident "loc" (lambda/matching.ml[2959,95246+58]..[2959,95246+61])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[2959,95246+64]..[2959,95246+70])
                                          Pexp_ident "switch" (lambda/matching.ml[2959,95246+64]..[2959,95246+70])
                                    ]
                          ]
                          expression (lambda/matching.ml[2961,95322+2]..[2961,95322+43])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[2961,95322+3]..[2961,95322+10])
                                Pexp_ident "lambda1" (lambda/matching.ml[2961,95322+3]..[2961,95322+10])
                              expression (lambda/matching.ml[2961,95322+12]..[2961,95322+42])
                                Pexp_apply
                                expression (lambda/matching.ml[2961,95322+12]..[2961,95322+23])
                                  Pexp_ident "Jumps.union" (lambda/matching.ml[2961,95322+12]..[2961,95322+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2961,95322+24]..[2961,95322+35])
                                      Pexp_ident "local_jumps" (lambda/matching.ml[2961,95322+24]..[2961,95322+35])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[2961,95322+36]..[2961,95322+42])
                                      Pexp_ident "total1" (lambda/matching.ml[2961,95322+36]..[2961,95322+42])
                                ]
                            ]
    ]
  structure_item (lambda/matching.ml[2965,95404+0]..[2982,95891+77])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[2965,95404+8]..[2965,95404+20])
          Ppat_var "event_branch" (lambda/matching.ml[2965,95404+8]..[2965,95404+20])
        expression (lambda/matching.ml[2965,95404+21]..[2982,95891+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[2965,95404+21]..[2965,95404+25])
            Ppat_var "repr" (lambda/matching.ml[2965,95404+21]..[2965,95404+25])
          expression (lambda/matching.ml[2965,95404+26]..[2982,95891+77]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[2965,95404+26]..[2965,95404+29])
              Ppat_var "lam" (lambda/matching.ml[2965,95404+26]..[2965,95404+29])
            expression (lambda/matching.ml[2966,95436+2]..[2982,95891+77])
              Pexp_match
              expression (lambda/matching.ml[2966,95436+8]..[2966,95436+19])
                Pexp_tuple
                [
                  expression (lambda/matching.ml[2966,95436+9]..[2966,95436+12])
                    Pexp_ident "lam" (lambda/matching.ml[2966,95436+9]..[2966,95436+12])
                  expression (lambda/matching.ml[2966,95436+14]..[2966,95436+18])
                    Pexp_ident "repr" (lambda/matching.ml[2966,95436+14]..[2966,95436+18])
                ]
              [
                <case>
                  pattern (lambda/matching.ml[2967,95461+4]..[2967,95461+11])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2967,95461+4]..[2967,95461+5])
                        Ppat_any
                      pattern (lambda/matching.ml[2967,95461+7]..[2967,95461+11])
                        Ppat_construct "None" (lambda/matching.ml[2967,95461+7]..[2967,95461+11])
                        None
                    ]
                  expression (lambda/matching.ml[2967,95461+15]..[2967,95461+18])
                    Pexp_ident "lam" (lambda/matching.ml[2967,95461+15]..[2967,95461+18])
                <case>
                  pattern (lambda/matching.ml[2968,95480+4]..[2968,95480+29])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2968,95480+4]..[2968,95480+21])
                        Ppat_construct "Levent" (lambda/matching.ml[2968,95480+4]..[2968,95480+10])
                        Some
                          []
                          pattern (lambda/matching.ml[2968,95480+11]..[2968,95480+21])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2968,95480+12]..[2968,95480+16])
                                Ppat_var "lam'" (lambda/matching.ml[2968,95480+12]..[2968,95480+16])
                              pattern (lambda/matching.ml[2968,95480+18]..[2968,95480+20])
                                Ppat_var "ev" (lambda/matching.ml[2968,95480+18]..[2968,95480+20])
                            ]
                      pattern (lambda/matching.ml[2968,95480+23]..[2968,95480+29])
                        Ppat_construct "Some" (lambda/matching.ml[2968,95480+23]..[2968,95480+27])
                        Some
                          []
                          pattern (lambda/matching.ml[2968,95480+28]..[2968,95480+29])
                            Ppat_var "r" (lambda/matching.ml[2968,95480+28]..[2968,95480+29])
                    ]
                  expression (lambda/matching.ml[2969,95513+6]..[2976,95688+13])
                    Pexp_sequence
                    expression (lambda/matching.ml[2969,95513+6]..[2969,95513+12])
                      Pexp_apply
                      expression (lambda/matching.ml[2969,95513+6]..[2969,95513+10])
                        Pexp_ident "incr" (lambda/matching.ml[2969,95513+6]..[2969,95513+10])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2969,95513+11]..[2969,95513+12])
                            Pexp_ident "r" (lambda/matching.ml[2969,95513+11]..[2969,95513+12])
                      ]
                    expression (lambda/matching.ml[2970,95527+6]..[2976,95688+13])
                      Pexp_construct "Levent" (lambda/matching.ml[2970,95527+6]..[2970,95527+12])
                      Some
                        expression (lambda/matching.ml[2971,95540+8]..[2976,95688+13])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[2971,95540+10]..[2971,95540+14])
                              Pexp_ident "lam'" (lambda/matching.ml[2971,95540+10]..[2971,95540+14])
                            expression (lambda/matching.ml[2972,95556+10]..[2976,95688+11])
                              Pexp_record
                              [
                                "lev_loc" (lambda/matching.ml[2972,95556+12]..[2972,95556+19])
                                  expression (lambda/matching.ml[2972,95556+22]..[2972,95556+32])
                                    Pexp_field
                                    expression (lambda/matching.ml[2972,95556+22]..[2972,95556+24])
                                      Pexp_ident "ev" (lambda/matching.ml[2972,95556+22]..[2972,95556+24])
                                    "lev_loc" (lambda/matching.ml[2972,95556+25]..[2972,95556+32])
                                "lev_kind" (lambda/matching.ml[2973,95590+12]..[2973,95590+20])
                                  expression (lambda/matching.ml[2973,95590+23]..[2973,95590+34])
                                    Pexp_field
                                    expression (lambda/matching.ml[2973,95590+23]..[2973,95590+25])
                                      Pexp_ident "ev" (lambda/matching.ml[2973,95590+23]..[2973,95590+25])
                                    "lev_kind" (lambda/matching.ml[2973,95590+26]..[2973,95590+34])
                                "lev_repr" (lambda/matching.ml[2974,95626+12]..[2974,95626+20])
                                  expression (lambda/matching.ml[2974,95626+23]..[2974,95626+27])
                                    Pexp_ident "repr" (lambda/matching.ml[2974,95626+23]..[2974,95626+27])
                                "lev_env" (lambda/matching.ml[2975,95655+12]..[2975,95655+19])
                                  expression (lambda/matching.ml[2975,95655+22]..[2975,95655+32])
                                    Pexp_field
                                    expression (lambda/matching.ml[2975,95655+22]..[2975,95655+24])
                                      Pexp_ident "ev" (lambda/matching.ml[2975,95655+22]..[2975,95655+24])
                                    "lev_env" (lambda/matching.ml[2975,95655+25]..[2975,95655+32])
                              ]
                              None
                          ]
                <case>
                  pattern (lambda/matching.ml[2977,95702+4]..[2977,95702+35])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2977,95702+4]..[2977,95702+32])
                        Ppat_construct "Llet" (lambda/matching.ml[2977,95702+4]..[2977,95702+8])
                        Some
                          []
                          pattern (lambda/matching.ml[2977,95702+9]..[2977,95702+32])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[2977,95702+10]..[2977,95702+13])
                                Ppat_var "str" (lambda/matching.ml[2977,95702+10]..[2977,95702+13])
                              pattern (lambda/matching.ml[2977,95702+15]..[2977,95702+16])
                                Ppat_var "k" (lambda/matching.ml[2977,95702+15]..[2977,95702+16])
                              pattern (lambda/matching.ml[2977,95702+18]..[2977,95702+20])
                                Ppat_var "id" (lambda/matching.ml[2977,95702+18]..[2977,95702+20])
                              pattern (lambda/matching.ml[2977,95702+22]..[2977,95702+25])
                                Ppat_var "lam" (lambda/matching.ml[2977,95702+22]..[2977,95702+25])
                              pattern (lambda/matching.ml[2977,95702+27]..[2977,95702+31])
                                Ppat_var "body" (lambda/matching.ml[2977,95702+27]..[2977,95702+31])
                            ]
                      pattern (lambda/matching.ml[2977,95702+34]..[2977,95702+35])
                        Ppat_any
                    ]
                  expression (lambda/matching.ml[2978,95741+6]..[2978,95741+52])
                    Pexp_construct "Llet" (lambda/matching.ml[2978,95741+6]..[2978,95741+10])
                    Some
                      expression (lambda/matching.ml[2978,95741+11]..[2978,95741+52])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[2978,95741+12]..[2978,95741+15])
                            Pexp_ident "str" (lambda/matching.ml[2978,95741+12]..[2978,95741+15])
                          expression (lambda/matching.ml[2978,95741+17]..[2978,95741+18])
                            Pexp_ident "k" (lambda/matching.ml[2978,95741+17]..[2978,95741+18])
                          expression (lambda/matching.ml[2978,95741+20]..[2978,95741+22])
                            Pexp_ident "id" (lambda/matching.ml[2978,95741+20]..[2978,95741+22])
                          expression (lambda/matching.ml[2978,95741+24]..[2978,95741+27])
                            Pexp_ident "lam" (lambda/matching.ml[2978,95741+24]..[2978,95741+27])
                          expression (lambda/matching.ml[2978,95741+29]..[2978,95741+51])
                            Pexp_apply
                            expression (lambda/matching.ml[2978,95741+29]..[2978,95741+41])
                              Pexp_ident "event_branch" (lambda/matching.ml[2978,95741+29]..[2978,95741+41])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2978,95741+42]..[2978,95741+46])
                                  Pexp_ident "repr" (lambda/matching.ml[2978,95741+42]..[2978,95741+46])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2978,95741+47]..[2978,95741+51])
                                  Pexp_ident "body" (lambda/matching.ml[2978,95741+47]..[2978,95741+51])
                            ]
                        ]
                <case>
                  pattern (lambda/matching.ml[2979,95794+4]..[2979,95794+21])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2979,95794+4]..[2979,95794+18])
                        Ppat_construct "Lstaticraise" (lambda/matching.ml[2979,95794+4]..[2979,95794+16])
                        Some
                          []
                          pattern (lambda/matching.ml[2979,95794+17]..[2979,95794+18])
                            Ppat_any
                      pattern (lambda/matching.ml[2979,95794+20]..[2979,95794+21])
                        Ppat_any
                    ]
                  expression (lambda/matching.ml[2979,95794+25]..[2979,95794+28])
                    Pexp_ident "lam" (lambda/matching.ml[2979,95794+25]..[2979,95794+28])
                <case>
                  pattern (lambda/matching.ml[2980,95823+4]..[2980,95823+13])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[2980,95823+4]..[2980,95823+5])
                        Ppat_any
                      pattern (lambda/matching.ml[2980,95823+7]..[2980,95823+13])
                        Ppat_construct "Some" (lambda/matching.ml[2980,95823+7]..[2980,95823+11])
                        Some
                          []
                          pattern (lambda/matching.ml[2980,95823+12]..[2980,95823+13])
                            Ppat_any
                    ]
                  expression (lambda/matching.ml[2981,95840+6]..[2982,95891+77])
                    Pexp_sequence
                    expression (lambda/matching.ml[2981,95840+6]..[2981,95840+49])
                      Pexp_apply
                      expression (lambda/matching.ml[2981,95840+6]..[2981,95840+24])
                        Pexp_ident "Printlambda.lambda" (lambda/matching.ml[2981,95840+6]..[2981,95840+24])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2981,95840+25]..[2981,95840+45])
                            Pexp_ident "Format.str_formatter" (lambda/matching.ml[2981,95840+25]..[2981,95840+45])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2981,95840+46]..[2981,95840+49])
                            Pexp_ident "lam" (lambda/matching.ml[2981,95840+46]..[2981,95840+49])
                      ]
                    expression (lambda/matching.ml[2982,95891+6]..[2982,95891+77])
                      Pexp_apply
                      expression (lambda/matching.ml[2982,95891+6]..[2982,95891+17])
                        Pexp_ident "fatal_error" (lambda/matching.ml[2982,95891+6]..[2982,95891+17])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[2982,95891+18]..[2982,95891+77])
                            Pexp_apply
                            expression (lambda/matching.ml[2982,95891+45]..[2982,95891+46])
                              Pexp_ident "^" (lambda/matching.ml[2982,95891+45]..[2982,95891+46])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2982,95891+19]..[2982,95891+44])
                                  Pexp_constant PConst_string("Matching.event_branch: ",(lambda/matching.ml[2982,95891+20]..[2982,95891+43]),None)
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[2982,95891+47]..[2982,95891+76])
                                  Pexp_apply
                                  expression (lambda/matching.ml[2982,95891+47]..[2982,95891+73])
                                    Pexp_ident "Format.flush_str_formatter" (lambda/matching.ml[2982,95891+47]..[2982,95891+73])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[2982,95891+74]..[2982,95891+76])
                                        Pexp_construct "()" (lambda/matching.ml[2982,95891+74]..[2982,95891+76])
                                        None
                                  ]
                            ]
                      ]
              ]
    ]
  structure_item (lambda/matching.ml[2998,96283+0]..[2998,96283+16])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lambda/matching.ml[2998,96283+0]..[2998,96283+16])
          pext_name = "Unused"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (lambda/matching.ml[3000,96301+0]..[3019,96949+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3000,96301+4]..[3000,96301+16])
          Ppat_var "compile_list" (lambda/matching.ml[3000,96301+4]..[3000,96301+16])
        expression (lambda/matching.ml[3000,96301+17]..[3019,96949+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3000,96301+17]..[3000,96301+28])
            Ppat_var "compile_fun" (lambda/matching.ml[3000,96301+17]..[3000,96301+28])
          expression (lambda/matching.ml[3000,96301+29]..[3019,96949+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3000,96301+29]..[3000,96301+37])
              Ppat_var "division" (lambda/matching.ml[3000,96301+29]..[3000,96301+37])
            expression (lambda/matching.ml[3001,96341+2]..[3019,96949+19])
              Pexp_let Rec
              [
                <def>
                  pattern (lambda/matching.ml[3001,96341+10]..[3001,96341+15])
                    Ppat_var "c_rec" (lambda/matching.ml[3001,96341+10]..[3001,96341+15])
                  expression (lambda/matching.ml[3001,96341+16]..[3017,96936+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3001,96341+16]..[3001,96341+22])
                      Ppat_var "totals" (lambda/matching.ml[3001,96341+16]..[3001,96341+22])
                    expression (lambda/matching.ml[3001,96341+25]..[3017,96936+7])
                      Pexp_function
                      [
                        <case>
                          pattern (lambda/matching.ml[3002,96375+6]..[3002,96375+8])
                            Ppat_construct "[]" (lambda/matching.ml[3002,96375+6]..[3002,96375+8])
                            None
                          expression (lambda/matching.ml[3002,96375+12]..[3002,96375+41])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[3002,96375+13]..[3002,96375+15])
                                Pexp_construct "[]" (lambda/matching.ml[3002,96375+13]..[3002,96375+15])
                                None
                              expression (lambda/matching.ml[3002,96375+17]..[3002,96375+36])
                                Pexp_apply
                                expression (lambda/matching.ml[3002,96375+17]..[3002,96375+29])
                                  Pexp_ident "Jumps.unions" (lambda/matching.ml[3002,96375+17]..[3002,96375+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3002,96375+30]..[3002,96375+36])
                                      Pexp_ident "totals" (lambda/matching.ml[3002,96375+30]..[3002,96375+36])
                                ]
                              expression (lambda/matching.ml[3002,96375+38]..[3002,96375+40])
                                Pexp_construct "[]" (lambda/matching.ml[3002,96375+38]..[3002,96375+40])
                                None
                            ]
                        <case>
                          pattern (lambda/matching.ml[3003,96417+6]..[3003,96417+24])
                            Ppat_construct "::" (lambda/matching.ml[3003,96417+18]..[3003,96417+20])
                            Some
                              []
                              pattern (lambda/matching.ml[3003,96417+6]..[3003,96417+24]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3003,96417+6]..[3003,96417+17])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3003,96417+7]..[3003,96417+10])
                                        Ppat_var "key" (lambda/matching.ml[3003,96417+7]..[3003,96417+10])
                                      pattern (lambda/matching.ml[3003,96417+12]..[3003,96417+16])
                                        Ppat_var "cell" (lambda/matching.ml[3003,96417+12]..[3003,96417+16])
                                    ]
                                  pattern (lambda/matching.ml[3003,96417+21]..[3003,96417+24])
                                    Ppat_var "rem" (lambda/matching.ml[3003,96417+21]..[3003,96417+24])
                                ]
                          expression (lambda/matching.ml[3003,96417+28]..[3017,96936+7])
                            Pexp_ifthenelse
                            expression (lambda/matching.ml[3004,96447+11]..[3004,96447+36])
                              Pexp_apply
                              expression (lambda/matching.ml[3004,96447+11]..[3004,96447+27])
                                Pexp_ident "Context.is_empty" (lambda/matching.ml[3004,96447+11]..[3004,96447+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3004,96447+28]..[3004,96447+36])
                                    Pexp_field
                                    expression (lambda/matching.ml[3004,96447+28]..[3004,96447+32])
                                      Pexp_ident "cell" (lambda/matching.ml[3004,96447+28]..[3004,96447+32])
                                    "ctx" (lambda/matching.ml[3004,96447+33]..[3004,96447+36])
                              ]
                            expression (lambda/matching.ml[3005,96489+10]..[3005,96489+26])
                              Pexp_apply
                              expression (lambda/matching.ml[3005,96489+10]..[3005,96489+15])
                                Pexp_ident "c_rec" (lambda/matching.ml[3005,96489+10]..[3005,96489+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3005,96489+16]..[3005,96489+22])
                                    Pexp_ident "totals" (lambda/matching.ml[3005,96489+16]..[3005,96489+22])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3005,96489+23]..[3005,96489+26])
                                    Pexp_ident "rem" (lambda/matching.ml[3005,96489+23]..[3005,96489+26])
                              ]
                            Some
                              expression (lambda/matching.ml[3006,96516+13]..[3016,96924+11])
                                Pexp_match
                                expression (lambda/matching.ml[3007,96535+16]..[3007,96535+44])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3007,96535+16]..[3007,96535+27])
                                    Pexp_ident "compile_fun" (lambda/matching.ml[3007,96535+16]..[3007,96535+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3007,96535+28]..[3007,96535+36])
                                        Pexp_field
                                        expression (lambda/matching.ml[3007,96535+28]..[3007,96535+32])
                                          Pexp_ident "cell" (lambda/matching.ml[3007,96535+28]..[3007,96535+32])
                                        "ctx" (lambda/matching.ml[3007,96535+33]..[3007,96535+36])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3007,96535+37]..[3007,96535+44])
                                        Pexp_field
                                        expression (lambda/matching.ml[3007,96535+37]..[3007,96535+41])
                                          Pexp_ident "cell" (lambda/matching.ml[3007,96535+37]..[3007,96535+41])
                                        "pm" (lambda/matching.ml[3007,96535+42]..[3007,96535+44])
                                  ]
                                [
                                  <case>
                                    pattern (lambda/matching.ml[3008,96585+12]..[3008,96585+28])
                                      Ppat_exception
                                      pattern (lambda/matching.ml[3008,96585+22]..[3008,96585+28])
                                        Ppat_construct "Unused" (lambda/matching.ml[3008,96585+22]..[3008,96585+28])
                                        None
                                    expression (lambda/matching.ml[3008,96585+32]..[3008,96585+48])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3008,96585+32]..[3008,96585+37])
                                        Pexp_ident "c_rec" (lambda/matching.ml[3008,96585+32]..[3008,96585+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3008,96585+38]..[3008,96585+44])
                                            Pexp_ident "totals" (lambda/matching.ml[3008,96585+38]..[3008,96585+44])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3008,96585+45]..[3008,96585+48])
                                            Pexp_ident "rem" (lambda/matching.ml[3008,96585+45]..[3008,96585+48])
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[3009,96634+12]..[3009,96634+27])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[3009,96634+12]..[3009,96634+19])
                                          Ppat_var "lambda1" (lambda/matching.ml[3009,96634+12]..[3009,96634+19])
                                        pattern (lambda/matching.ml[3009,96634+21]..[3009,96634+27])
                                          Ppat_var "total1" (lambda/matching.ml[3009,96634+21]..[3009,96634+27])
                                      ]
                                    expression (lambda/matching.ml[3010,96665+12]..[3015,96852+71])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[3010,96665+16]..[3010,96665+40])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[3010,96665+16]..[3010,96665+21])
                                                Ppat_var "c_rem" (lambda/matching.ml[3010,96665+16]..[3010,96665+21])
                                              pattern (lambda/matching.ml[3010,96665+23]..[3010,96665+28])
                                                Ppat_var "total" (lambda/matching.ml[3010,96665+23]..[3010,96665+28])
                                              pattern (lambda/matching.ml[3010,96665+30]..[3010,96665+40])
                                                Ppat_var "new_discrs" (lambda/matching.ml[3010,96665+30]..[3010,96665+40])
                                            ]
                                          expression (lambda/matching.ml[3011,96708+14]..[3011,96708+68])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3011,96708+14]..[3011,96708+19])
                                              Pexp_ident "c_rec" (lambda/matching.ml[3011,96708+14]..[3011,96708+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3011,96708+20]..[3011,96708+64])
                                                  Pexp_construct "::" (lambda/matching.ml[3011,96708+54]..[3011,96708+56])
                                                  Some
                                                    expression (lambda/matching.ml[3011,96708+21]..[3011,96708+63]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[3011,96708+21]..[3011,96708+53])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3011,96708+21]..[3011,96708+30])
                                                            Pexp_ident "Jumps.map" (lambda/matching.ml[3011,96708+21]..[3011,96708+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3011,96708+31]..[3011,96708+46])
                                                                Pexp_ident "Context.combine" (lambda/matching.ml[3011,96708+31]..[3011,96708+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3011,96708+47]..[3011,96708+53])
                                                                Pexp_ident "total1" (lambda/matching.ml[3011,96708+47]..[3011,96708+53])
                                                          ]
                                                        expression (lambda/matching.ml[3011,96708+57]..[3011,96708+63])
                                                          Pexp_ident "totals" (lambda/matching.ml[3011,96708+57]..[3011,96708+63])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3011,96708+65]..[3011,96708+68])
                                                  Pexp_ident "rem" (lambda/matching.ml[3011,96708+65]..[3011,96708+68])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[3013,96792+12]..[3015,96852+71])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[3013,96792+14]..[3013,96792+37])
                                            Pexp_construct "::" (lambda/matching.ml[3013,96792+29]..[3013,96792+31])
                                            Some
                                              expression (lambda/matching.ml[3013,96792+14]..[3013,96792+37]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3013,96792+14]..[3013,96792+28])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[3013,96792+15]..[3013,96792+18])
                                                        Pexp_ident "key" (lambda/matching.ml[3013,96792+15]..[3013,96792+18])
                                                      expression (lambda/matching.ml[3013,96792+20]..[3013,96792+27])
                                                        Pexp_ident "lambda1" (lambda/matching.ml[3013,96792+20]..[3013,96792+27])
                                                    ]
                                                  expression (lambda/matching.ml[3013,96792+32]..[3013,96792+37])
                                                    Pexp_ident "c_rem" (lambda/matching.ml[3013,96792+32]..[3013,96792+37])
                                                ]
                                          expression (lambda/matching.ml[3014,96831+14]..[3014,96831+19])
                                            Pexp_ident "total" (lambda/matching.ml[3014,96831+14]..[3014,96831+19])
                                          expression (lambda/matching.ml[3015,96852+14]..[3015,96852+69])
                                            Pexp_construct "::" (lambda/matching.ml[3015,96852+56]..[3015,96852+58])
                                            Some
                                              expression (lambda/matching.ml[3015,96852+14]..[3015,96852+69]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3015,96852+14]..[3015,96852+55])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3015,96852+14]..[3015,96852+44])
                                                      Pexp_ident "Patterns.Head.to_omega_pattern" (lambda/matching.ml[3015,96852+14]..[3015,96852+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3015,96852+45]..[3015,96852+55])
                                                          Pexp_field
                                                          expression (lambda/matching.ml[3015,96852+45]..[3015,96852+49])
                                                            Pexp_ident "cell" (lambda/matching.ml[3015,96852+45]..[3015,96852+49])
                                                          "discr" (lambda/matching.ml[3015,96852+50]..[3015,96852+55])
                                                    ]
                                                  expression (lambda/matching.ml[3015,96852+59]..[3015,96852+69])
                                                    Pexp_ident "new_discrs" (lambda/matching.ml[3015,96852+59]..[3015,96852+69])
                                                ]
                                        ]
                                ]
                      ]
              ]
              expression (lambda/matching.ml[3019,96949+2]..[3019,96949+19])
                Pexp_apply
                expression (lambda/matching.ml[3019,96949+2]..[3019,96949+7])
                  Pexp_ident "c_rec" (lambda/matching.ml[3019,96949+2]..[3019,96949+7])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[3019,96949+8]..[3019,96949+10])
                      Pexp_construct "[]" (lambda/matching.ml[3019,96949+8]..[3019,96949+10])
                      None
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[3019,96949+11]..[3019,96949+19])
                      Pexp_ident "division" (lambda/matching.ml[3019,96949+11]..[3019,96949+19])
                ]
    ]
  structure_item (lambda/matching.ml[3021,96970+0]..[3048,98008+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3021,96970+4]..[3021,96970+22])
          Ppat_var "compile_orhandlers" (lambda/matching.ml[3021,96970+4]..[3021,96970+22])
        expression (lambda/matching.ml[3021,96970+23]..[3048,98008+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3021,96970+23]..[3021,96970+34])
            Ppat_var "compile_fun" (lambda/matching.ml[3021,96970+23]..[3021,96970+34])
          expression (lambda/matching.ml[3021,96970+35]..[3048,98008+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3021,96970+35]..[3021,96970+42])
              Ppat_var "lambda1" (lambda/matching.ml[3021,96970+35]..[3021,96970+42])
            expression (lambda/matching.ml[3021,96970+43]..[3048,98008+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3021,96970+43]..[3021,96970+49])
                Ppat_var "total1" (lambda/matching.ml[3021,96970+43]..[3021,96970+49])
              expression (lambda/matching.ml[3021,96970+50]..[3048,98008+32]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3021,96970+50]..[3021,96970+53])
                  Ppat_var "ctx" (lambda/matching.ml[3021,96970+50]..[3021,96970+53])
                expression (lambda/matching.ml[3021,96970+54]..[3048,98008+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3021,96970+54]..[3021,96970+62])
                    Ppat_var "to_catch" (lambda/matching.ml[3021,96970+54]..[3021,96970+62])
                  expression (lambda/matching.ml[3022,97035+2]..[3048,98008+32])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lambda/matching.ml[3022,97035+10]..[3022,97035+16])
                          Ppat_var "do_rec" (lambda/matching.ml[3022,97035+10]..[3022,97035+16])
                        expression (lambda/matching.ml[3022,97035+17]..[3046,97995+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/matching.ml[3022,97035+17]..[3022,97035+18])
                            Ppat_var "r" (lambda/matching.ml[3022,97035+17]..[3022,97035+18])
                          expression (lambda/matching.ml[3022,97035+19]..[3046,97995+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/matching.ml[3022,97035+19]..[3022,97035+26])
                              Ppat_var "total_r" (lambda/matching.ml[3022,97035+19]..[3022,97035+26])
                            expression (lambda/matching.ml[3022,97035+29]..[3046,97995+7])
                              Pexp_function
                              [
                                <case>
                                  pattern (lambda/matching.ml[3023,97073+6]..[3023,97073+8])
                                    Ppat_construct "[]" (lambda/matching.ml[3023,97073+6]..[3023,97073+8])
                                    None
                                  expression (lambda/matching.ml[3023,97073+12]..[3023,97073+24])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3023,97073+13]..[3023,97073+14])
                                        Pexp_ident "r" (lambda/matching.ml[3023,97073+13]..[3023,97073+14])
                                      expression (lambda/matching.ml[3023,97073+16]..[3023,97073+23])
                                        Pexp_ident "total_r" (lambda/matching.ml[3023,97073+16]..[3023,97073+23])
                                    ]
                                <case>
                                  pattern (lambda/matching.ml[3024,97098+6]..[3024,97098+53])
                                    Ppat_construct "::" (lambda/matching.ml[3024,97098+47]..[3024,97098+49])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3024,97098+6]..[3024,97098+53]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3024,97098+6]..[3024,97098+46])
                                            Ppat_record Closed
                                            [
                                              "provenance" (lambda/matching.ml[3024,97098+8]..[3024,97098+18])
                                                pattern (lambda/matching.ml[3024,97098+21]..[3024,97098+24])
                                                  Ppat_var "mat" (lambda/matching.ml[3024,97098+21]..[3024,97098+24])
                                              "exit" (lambda/matching.ml[3024,97098+26]..[3024,97098+30])
                                                pattern (lambda/matching.ml[3024,97098+33]..[3024,97098+34])
                                                  Ppat_var "i" (lambda/matching.ml[3024,97098+33]..[3024,97098+34])
                                              "vars" (lambda/matching.ml[3024,97098+36]..[3024,97098+40]) ghost
                                                pattern (lambda/matching.ml[3024,97098+36]..[3024,97098+40])
                                                  Ppat_var "vars" (lambda/matching.ml[3024,97098+36]..[3024,97098+40])
                                              "pm" (lambda/matching.ml[3024,97098+42]..[3024,97098+44]) ghost
                                                pattern (lambda/matching.ml[3024,97098+42]..[3024,97098+44])
                                                  Ppat_var "pm" (lambda/matching.ml[3024,97098+42]..[3024,97098+44])
                                            ]
                                          pattern (lambda/matching.ml[3024,97098+50]..[3024,97098+53])
                                            Ppat_var "rem" (lambda/matching.ml[3024,97098+50]..[3024,97098+53])
                                        ]
                                  expression (lambda/matching.ml[3024,97098+57]..[3046,97995+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[3025,97157+12]..[3025,97157+15])
                                          Ppat_var "ctx" (lambda/matching.ml[3025,97157+12]..[3025,97157+15])
                                        expression (lambda/matching.ml[3025,97157+18]..[3025,97157+48])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3025,97157+18]..[3025,97157+40])
                                            Pexp_ident "Context.select_columns" (lambda/matching.ml[3025,97157+18]..[3025,97157+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3025,97157+41]..[3025,97157+44])
                                                Pexp_ident "mat" (lambda/matching.ml[3025,97157+41]..[3025,97157+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3025,97157+45]..[3025,97157+48])
                                                Pexp_ident "ctx" (lambda/matching.ml[3025,97157+45]..[3025,97157+48])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[3026,97209+8]..[3045,97981+13])
                                      Pexp_match
                                      expression (lambda/matching.ml[3026,97209+14]..[3026,97209+32])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3026,97209+14]..[3026,97209+25])
                                          Pexp_ident "compile_fun" (lambda/matching.ml[3026,97209+14]..[3026,97209+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3026,97209+26]..[3026,97209+29])
                                              Pexp_ident "ctx" (lambda/matching.ml[3026,97209+26]..[3026,97209+29])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3026,97209+30]..[3026,97209+32])
                                              Pexp_ident "pm" (lambda/matching.ml[3026,97209+30]..[3026,97209+32])
                                        ]
                                      [
                                        <case>
                                          pattern (lambda/matching.ml[3027,97247+10]..[3027,97247+26])
                                            Ppat_exception
                                            pattern (lambda/matching.ml[3027,97247+20]..[3027,97247+26])
                                              Ppat_construct "Unused" (lambda/matching.ml[3027,97247+20]..[3027,97247+26])
                                              None
                                          expression (lambda/matching.ml[3028,97277+10]..[3028,97277+71])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3028,97277+10]..[3028,97277+16])
                                              Pexp_ident "do_rec" (lambda/matching.ml[3028,97277+10]..[3028,97277+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3028,97277+17]..[3028,97277+59])
                                                  Pexp_construct "Lstaticcatch" (lambda/matching.ml[3028,97277+18]..[3028,97277+30])
                                                  Some
                                                    expression (lambda/matching.ml[3028,97277+31]..[3028,97277+58])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[3028,97277+32]..[3028,97277+33])
                                                          Pexp_ident "r" (lambda/matching.ml[3028,97277+32]..[3028,97277+33])
                                                        expression (lambda/matching.ml[3028,97277+35]..[3028,97277+44])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[3028,97277+36]..[3028,97277+37])
                                                              Pexp_ident "i" (lambda/matching.ml[3028,97277+36]..[3028,97277+37])
                                                            expression (lambda/matching.ml[3028,97277+39]..[3028,97277+43])
                                                              Pexp_ident "vars" (lambda/matching.ml[3028,97277+39]..[3028,97277+43])
                                                          ]
                                                        expression (lambda/matching.ml[3028,97277+46]..[3028,97277+57])
                                                          Pexp_ident "lambda_unit" (lambda/matching.ml[3028,97277+46]..[3028,97277+57])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3028,97277+60]..[3028,97277+67])
                                                  Pexp_ident "total_r" (lambda/matching.ml[3028,97277+60]..[3028,97277+67])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3028,97277+68]..[3028,97277+71])
                                                  Pexp_ident "rem" (lambda/matching.ml[3028,97277+68]..[3028,97277+71])
                                            ]
                                        <case>
                                          pattern (lambda/matching.ml[3029,97349+10]..[3029,97349+28])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[3029,97349+10]..[3029,97349+19])
                                                Ppat_var "handler_i" (lambda/matching.ml[3029,97349+10]..[3029,97349+19])
                                              pattern (lambda/matching.ml[3029,97349+21]..[3029,97349+28])
                                                Ppat_var "total_i" (lambda/matching.ml[3029,97349+21]..[3029,97349+28])
                                            ]
                                          expression (lambda/matching.ml[3030,97381+10]..[3045,97981+13])
                                            Pexp_match
                                            expression (lambda/matching.ml[3030,97381+22]..[3030,97381+34])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3030,97381+22]..[3030,97381+32])
                                                Pexp_ident "raw_action" (lambda/matching.ml[3030,97381+22]..[3030,97381+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3030,97381+33]..[3030,97381+34])
                                                    Pexp_ident "r" (lambda/matching.ml[3030,97381+33]..[3030,97381+34])
                                              ]
                                            [
                                              <case>
                                                pattern (lambda/matching.ml[3031,97421+12]..[3031,97421+34])
                                                  Ppat_construct "Lstaticraise" (lambda/matching.ml[3031,97421+12]..[3031,97421+24])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[3031,97421+25]..[3031,97421+34])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[3031,97421+26]..[3031,97421+27])
                                                          Ppat_var "j" (lambda/matching.ml[3031,97421+26]..[3031,97421+27])
                                                        pattern (lambda/matching.ml[3031,97421+29]..[3031,97421+33])
                                                          Ppat_var "args" (lambda/matching.ml[3031,97421+29]..[3031,97421+33])
                                                      ]
                                                expression (lambda/matching.ml[3032,97459+14]..[3038,97702+36])
                                                  Pexp_ifthenelse
                                                  expression (lambda/matching.ml[3032,97459+17]..[3032,97459+22])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3032,97459+19]..[3032,97459+20])
                                                      Pexp_ident "=" (lambda/matching.ml[3032,97459+19]..[3032,97459+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3032,97459+17]..[3032,97459+18])
                                                          Pexp_ident "i" (lambda/matching.ml[3032,97459+17]..[3032,97459+18])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3032,97459+21]..[3032,97459+22])
                                                          Pexp_ident "j" (lambda/matching.ml[3032,97459+21]..[3032,97459+22])
                                                    ]
                                                  expression (lambda/matching.ml[3033,97487+16]..[3036,97612+70])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/matching.ml[3033,97487+18]..[3035,97571+39])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3033,97487+18]..[3033,97487+34])
                                                          Pexp_ident "List.fold_right2" (lambda/matching.ml[3033,97487+18]..[3033,97487+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3034,97522+20]..[3034,97522+48])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3034,97522+21]..[3034,97522+41])
                                                                Pexp_ident "bind_with_value_kind" (lambda/matching.ml[3034,97522+21]..[3034,97522+41])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3034,97522+42]..[3034,97522+47])
                                                                    Pexp_construct "Alias" (lambda/matching.ml[3034,97522+42]..[3034,97522+47])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3035,97571+20]..[3035,97571+24])
                                                              Pexp_ident "vars" (lambda/matching.ml[3035,97571+20]..[3035,97571+24])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3035,97571+25]..[3035,97571+29])
                                                              Pexp_ident "args" (lambda/matching.ml[3035,97571+25]..[3035,97571+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3035,97571+30]..[3035,97571+39])
                                                              Pexp_ident "handler_i" (lambda/matching.ml[3035,97571+30]..[3035,97571+39])
                                                        ]
                                                      expression (lambda/matching.ml[3036,97612+18]..[3036,97612+68])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3036,97612+18]..[3036,97612+27])
                                                          Pexp_ident "Jumps.map" (lambda/matching.ml[3036,97612+18]..[3036,97612+27])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3036,97612+28]..[3036,97612+60])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3036,97612+29]..[3036,97612+47])
                                                                Pexp_ident "Context.rshift_num" (lambda/matching.ml[3036,97612+29]..[3036,97612+47])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3036,97612+48]..[3036,97612+59])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[3036,97612+49]..[3036,97612+54])
                                                                      Pexp_ident "ncols" (lambda/matching.ml[3036,97612+49]..[3036,97612+54])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[3036,97612+55]..[3036,97612+58])
  Pexp_ident "mat" (lambda/matching.ml[3036,97612+55]..[3036,97612+58])
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3036,97612+61]..[3036,97612+68])
                                                              Pexp_ident "total_i" (lambda/matching.ml[3036,97612+61]..[3036,97612+68])
                                                        ]
                                                    ]
                                                  Some
                                                    expression (lambda/matching.ml[3038,97702+16]..[3038,97702+36])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[3038,97702+16]..[3038,97702+22])
                                                        Pexp_ident "do_rec" (lambda/matching.ml[3038,97702+16]..[3038,97702+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[3038,97702+23]..[3038,97702+24])
                                                            Pexp_ident "r" (lambda/matching.ml[3038,97702+23]..[3038,97702+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[3038,97702+25]..[3038,97702+32])
                                                            Pexp_ident "total_r" (lambda/matching.ml[3038,97702+25]..[3038,97702+32])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[3038,97702+33]..[3038,97702+36])
                                                            Pexp_ident "rem" (lambda/matching.ml[3038,97702+33]..[3038,97702+36])
                                                      ]
                                              <case>
                                                pattern (lambda/matching.ml[3039,97739+12]..[3039,97739+13])
                                                  Ppat_any
                                                expression (lambda/matching.ml[3040,97756+14]..[3044,97961+19])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3040,97756+14]..[3040,97756+20])
                                                    Pexp_ident "do_rec" (lambda/matching.ml[3040,97756+14]..[3040,97756+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3041,97777+16]..[3041,97777+56])
                                                        Pexp_construct "Lstaticcatch" (lambda/matching.ml[3041,97777+17]..[3041,97777+29])
                                                        Some
                                                          expression (lambda/matching.ml[3041,97777+30]..[3041,97777+55])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/matching.ml[3041,97777+31]..[3041,97777+32])
                                                                Pexp_ident "r" (lambda/matching.ml[3041,97777+31]..[3041,97777+32])
                                                              expression (lambda/matching.ml[3041,97777+34]..[3041,97777+43])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/matching.ml[3041,97777+35]..[3041,97777+36])
                                                                    Pexp_ident "i" (lambda/matching.ml[3041,97777+35]..[3041,97777+36])
                                                                  expression (lambda/matching.ml[3041,97777+38]..[3041,97777+42])
                                                                    Pexp_ident "vars" (lambda/matching.ml[3041,97777+38]..[3041,97777+42])
                                                                ]
                                                              expression (lambda/matching.ml[3041,97777+45]..[3041,97777+54])
                                                                Pexp_ident "handler_i" (lambda/matching.ml[3041,97777+45]..[3041,97777+54])
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3042,97834+16]..[3043,97888+72])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3042,97834+17]..[3042,97834+28])
                                                          Pexp_ident "Jumps.union" (lambda/matching.ml[3042,97834+17]..[3042,97834+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3042,97834+29]..[3042,97834+53])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3042,97834+30]..[3042,97834+42])
                                                                Pexp_ident "Jumps.remove" (lambda/matching.ml[3042,97834+30]..[3042,97834+42])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3042,97834+43]..[3042,97834+44])
                                                                    Pexp_ident "i" (lambda/matching.ml[3042,97834+43]..[3042,97834+44])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3042,97834+45]..[3042,97834+52])
                                                                    Pexp_ident "total_r" (lambda/matching.ml[3042,97834+45]..[3042,97834+52])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3043,97888+19]..[3043,97888+71])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3043,97888+20]..[3043,97888+29])
                                                                Pexp_ident "Jumps.map" (lambda/matching.ml[3043,97888+20]..[3043,97888+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3043,97888+30]..[3043,97888+62])
                                                                    Pexp_apply
                                                                    expression (lambda/matching.ml[3043,97888+31]..[3043,97888+49])
                                                                      Pexp_ident "Context.rshift_num" (lambda/matching.ml[3043,97888+31]..[3043,97888+49])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/matching.ml[3043,97888+50]..[3043,97888+61])
  Pexp_apply
  expression (lambda/matching.ml[3043,97888+51]..[3043,97888+56])
    Pexp_ident "ncols" (lambda/matching.ml[3043,97888+51]..[3043,97888+56])
  [
    <arg>
    Nolabel
      expression (lambda/matching.ml[3043,97888+57]..[3043,97888+60])
        Pexp_ident "mat" (lambda/matching.ml[3043,97888+57]..[3043,97888+60])
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3043,97888+63]..[3043,97888+70])
                                                                    Pexp_ident "total_i" (lambda/matching.ml[3043,97888+63]..[3043,97888+70])
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3044,97961+16]..[3044,97961+19])
                                                        Pexp_ident "rem" (lambda/matching.ml[3044,97961+16]..[3044,97961+19])
                                                  ]
                                            ]
                                      ]
                              ]
                    ]
                    expression (lambda/matching.ml[3048,98008+2]..[3048,98008+32])
                      Pexp_apply
                      expression (lambda/matching.ml[3048,98008+2]..[3048,98008+8])
                        Pexp_ident "do_rec" (lambda/matching.ml[3048,98008+2]..[3048,98008+8])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3048,98008+9]..[3048,98008+16])
                            Pexp_ident "lambda1" (lambda/matching.ml[3048,98008+9]..[3048,98008+16])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3048,98008+17]..[3048,98008+23])
                            Pexp_ident "total1" (lambda/matching.ml[3048,98008+17]..[3048,98008+23])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3048,98008+24]..[3048,98008+32])
                            Pexp_ident "to_catch" (lambda/matching.ml[3048,98008+24]..[3048,98008+32])
                      ]
    ]
  structure_item (lambda/matching.ml[3050,98042+0]..[3059,98381+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3050,98042+4]..[3050,98042+16])
          Ppat_var "compile_test" (lambda/matching.ml[3050,98042+4]..[3050,98042+16])
        expression (lambda/matching.ml[3050,98042+17]..[3059,98381+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3050,98042+17]..[3050,98042+28])
            Ppat_var "compile_fun" (lambda/matching.ml[3050,98042+17]..[3050,98042+28])
          expression (lambda/matching.ml[3050,98042+29]..[3059,98381+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3050,98042+29]..[3050,98042+36])
              Ppat_var "partial" (lambda/matching.ml[3050,98042+29]..[3050,98042+36])
            expression (lambda/matching.ml[3050,98042+37]..[3059,98381+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3050,98042+37]..[3050,98042+43])
                Ppat_var "divide" (lambda/matching.ml[3050,98042+37]..[3050,98042+43])
              expression (lambda/matching.ml[3050,98042+44]..[3059,98381+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3050,98042+44]..[3050,98042+51])
                  Ppat_var "combine" (lambda/matching.ml[3050,98042+44]..[3050,98042+51])
                expression (lambda/matching.ml[3050,98042+52]..[3059,98381+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3050,98042+52]..[3050,98042+55])
                    Ppat_var "ctx" (lambda/matching.ml[3050,98042+52]..[3050,98042+55])
                  expression (lambda/matching.ml[3050,98042+56]..[3059,98381+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3050,98042+56]..[3050,98042+64])
                      Ppat_var "to_match" (lambda/matching.ml[3050,98042+56]..[3050,98042+64])
                    expression (lambda/matching.ml[3051,98109+2]..[3059,98381+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[3051,98109+6]..[3051,98109+14])
                            Ppat_var "division" (lambda/matching.ml[3051,98109+6]..[3051,98109+14])
                          expression (lambda/matching.ml[3051,98109+17]..[3051,98109+36])
                            Pexp_apply
                            expression (lambda/matching.ml[3051,98109+17]..[3051,98109+23])
                              Pexp_ident "divide" (lambda/matching.ml[3051,98109+17]..[3051,98109+23])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3051,98109+24]..[3051,98109+27])
                                  Pexp_ident "ctx" (lambda/matching.ml[3051,98109+24]..[3051,98109+27])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3051,98109+28]..[3051,98109+36])
                                  Pexp_ident "to_match" (lambda/matching.ml[3051,98109+28]..[3051,98109+36])
                            ]
                      ]
                      expression (lambda/matching.ml[3052,98149+2]..[3059,98381+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3052,98149+6]..[3052,98149+11])
                              Ppat_var "c_div" (lambda/matching.ml[3052,98149+6]..[3052,98149+11])
                            expression (lambda/matching.ml[3052,98149+14]..[3052,98149+53])
                              Pexp_apply
                              expression (lambda/matching.ml[3052,98149+14]..[3052,98149+26])
                                Pexp_ident "compile_list" (lambda/matching.ml[3052,98149+14]..[3052,98149+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3052,98149+27]..[3052,98149+38])
                                    Pexp_ident "compile_fun" (lambda/matching.ml[3052,98149+27]..[3052,98149+38])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3052,98149+39]..[3052,98149+53])
                                    Pexp_field
                                    expression (lambda/matching.ml[3052,98149+39]..[3052,98149+47])
                                      Pexp_ident "division" (lambda/matching.ml[3052,98149+39]..[3052,98149+47])
                                    "cells" (lambda/matching.ml[3052,98149+48]..[3052,98149+53])
                              ]
                        ]
                        expression (lambda/matching.ml[3053,98206+2]..[3059,98381+43])
                          Pexp_match
                          expression (lambda/matching.ml[3053,98206+8]..[3053,98206+13])
                            Pexp_ident "c_div" (lambda/matching.ml[3053,98206+8]..[3053,98206+13])
                          [
                            <case>
                              pattern (lambda/matching.ml[3054,98225+4]..[3054,98225+12])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3054,98225+4]..[3054,98225+6])
                                    Ppat_construct "[]" (lambda/matching.ml[3054,98225+4]..[3054,98225+6])
                                    None
                                  pattern (lambda/matching.ml[3054,98225+8]..[3054,98225+9])
                                    Ppat_any
                                  pattern (lambda/matching.ml[3054,98225+11]..[3054,98225+12])
                                    Ppat_any
                                ]
                              expression (lambda/matching.ml[3054,98225+16]..[3058,98375+5])
                                Pexp_match
                                expression (lambda/matching.ml[3055,98243+12]..[3055,98243+58])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3055,98243+12]..[3055,98243+29])
                                    Pexp_ident "mk_failaction_neg" (lambda/matching.ml[3055,98243+12]..[3055,98243+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3055,98243+30]..[3055,98243+37])
                                        Pexp_ident "partial" (lambda/matching.ml[3055,98243+30]..[3055,98243+37])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3055,98243+38]..[3055,98243+41])
                                        Pexp_ident "ctx" (lambda/matching.ml[3055,98243+38]..[3055,98243+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3055,98243+42]..[3055,98243+58])
                                        Pexp_field
                                        expression (lambda/matching.ml[3055,98243+42]..[3055,98243+50])
                                          Pexp_ident "to_match" (lambda/matching.ml[3055,98243+42]..[3055,98243+50])
                                        "default" (lambda/matching.ml[3055,98243+51]..[3055,98243+58])
                                  ]
                                [
                                  <case>
                                    pattern (lambda/matching.ml[3056,98307+8]..[3056,98307+15])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[3056,98307+8]..[3056,98307+12])
                                          Ppat_construct "None" (lambda/matching.ml[3056,98307+8]..[3056,98307+12])
                                          None
                                        pattern (lambda/matching.ml[3056,98307+14]..[3056,98307+15])
                                          Ppat_any
                                      ]
                                    expression (lambda/matching.ml[3056,98307+19]..[3056,98307+31])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3056,98307+19]..[3056,98307+24])
                                        Pexp_ident "raise" (lambda/matching.ml[3056,98307+19]..[3056,98307+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3056,98307+25]..[3056,98307+31])
                                            Pexp_construct "Unused" (lambda/matching.ml[3056,98307+25]..[3056,98307+31])
                                            None
                                      ]
                                  <case>
                                    pattern (lambda/matching.ml[3057,98339+8]..[3057,98339+21])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[3057,98339+8]..[3057,98339+14])
                                          Ppat_construct "Some" (lambda/matching.ml[3057,98339+8]..[3057,98339+12])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3057,98339+13]..[3057,98339+14])
                                              Ppat_var "l" (lambda/matching.ml[3057,98339+13]..[3057,98339+14])
                                        pattern (lambda/matching.ml[3057,98339+16]..[3057,98339+21])
                                          Ppat_var "total" (lambda/matching.ml[3057,98339+16]..[3057,98339+21])
                                      ]
                                    expression (lambda/matching.ml[3057,98339+25]..[3057,98339+35])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[3057,98339+26]..[3057,98339+27])
                                          Pexp_ident "l" (lambda/matching.ml[3057,98339+26]..[3057,98339+27])
                                        expression (lambda/matching.ml[3057,98339+29]..[3057,98339+34])
                                          Pexp_ident "total" (lambda/matching.ml[3057,98339+29]..[3057,98339+34])
                                      ]
                                ]
                            <case>
                              pattern (lambda/matching.ml[3059,98381+4]..[3059,98381+5])
                                Ppat_any
                              expression (lambda/matching.ml[3059,98381+9]..[3059,98381+43])
                                Pexp_apply
                                expression (lambda/matching.ml[3059,98381+9]..[3059,98381+16])
                                  Pexp_ident "combine" (lambda/matching.ml[3059,98381+9]..[3059,98381+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3059,98381+17]..[3059,98381+20])
                                      Pexp_ident "ctx" (lambda/matching.ml[3059,98381+17]..[3059,98381+20])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3059,98381+21]..[3059,98381+37])
                                      Pexp_field
                                      expression (lambda/matching.ml[3059,98381+21]..[3059,98381+29])
                                        Pexp_ident "to_match" (lambda/matching.ml[3059,98381+21]..[3059,98381+29])
                                      "default" (lambda/matching.ml[3059,98381+30]..[3059,98381+37])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3059,98381+38]..[3059,98381+43])
                                      Pexp_ident "c_div" (lambda/matching.ml[3059,98381+38]..[3059,98381+43])
                                ]
                          ]
    ]
  structure_item (lambda/matching.ml[3064,98529+0]..[3071,98860+13])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3064,98529+8]..[3064,98529+22])
          Ppat_var "approx_present" (lambda/matching.ml[3064,98529+8]..[3064,98529+22])
        expression (lambda/matching.ml[3064,98529+23]..[3071,98860+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3064,98529+23]..[3064,98529+24])
            Ppat_var "v" (lambda/matching.ml[3064,98529+23]..[3064,98529+24])
          expression (lambda/matching.ml[3064,98529+27]..[3071,98860+13])
            Pexp_function
            [
              <case>
                pattern (lambda/matching.ml[3065,98565+4]..[3065,98565+12])
                  Ppat_construct "Lconst" (lambda/matching.ml[3065,98565+4]..[3065,98565+10])
                  Some
                    []
                    pattern (lambda/matching.ml[3065,98565+11]..[3065,98565+12])
                      Ppat_any
                expression (lambda/matching.ml[3065,98565+16]..[3065,98565+21])
                  Pexp_construct "false" (lambda/matching.ml[3065,98565+16]..[3065,98565+21])
                  None
              <case>
                pattern (lambda/matching.ml[3066,98587+4]..[3066,98587+26])
                  Ppat_construct "Lstaticraise" (lambda/matching.ml[3066,98587+4]..[3066,98587+16])
                  Some
                    []
                    pattern (lambda/matching.ml[3066,98587+17]..[3066,98587+26])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3066,98587+18]..[3066,98587+19])
                          Ppat_any
                        pattern (lambda/matching.ml[3066,98587+21]..[3066,98587+25])
                          Ppat_var "args" (lambda/matching.ml[3066,98587+21]..[3066,98587+25])
                      ]
                expression (lambda/matching.ml[3067,98617+6]..[3067,98617+56])
                  Pexp_apply
                  expression (lambda/matching.ml[3067,98617+6]..[3067,98617+17])
                    Pexp_ident "List.exists" (lambda/matching.ml[3067,98617+6]..[3067,98617+17])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3067,98617+18]..[3067,98617+51])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[3067,98617+23]..[3067,98617+26])
                          Ppat_var "lam" (lambda/matching.ml[3067,98617+23]..[3067,98617+26])
                        expression (lambda/matching.ml[3067,98617+30]..[3067,98617+50])
                          Pexp_apply
                          expression (lambda/matching.ml[3067,98617+30]..[3067,98617+44])
                            Pexp_ident "approx_present" (lambda/matching.ml[3067,98617+30]..[3067,98617+44])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3067,98617+45]..[3067,98617+46])
                                Pexp_ident "v" (lambda/matching.ml[3067,98617+45]..[3067,98617+46])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3067,98617+47]..[3067,98617+50])
                                Pexp_ident "lam" (lambda/matching.ml[3067,98617+47]..[3067,98617+50])
                          ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3067,98617+52]..[3067,98617+56])
                        Pexp_ident "args" (lambda/matching.ml[3067,98617+52]..[3067,98617+56])
                  ]
              <case>
                pattern (lambda/matching.ml[3068,98674+4]..[3068,98674+22])
                  Ppat_construct "Lprim" (lambda/matching.ml[3068,98674+4]..[3068,98674+9])
                  Some
                    []
                    pattern (lambda/matching.ml[3068,98674+10]..[3068,98674+22])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3068,98674+11]..[3068,98674+12])
                          Ppat_any
                        pattern (lambda/matching.ml[3068,98674+14]..[3068,98674+18])
                          Ppat_var "args" (lambda/matching.ml[3068,98674+14]..[3068,98674+18])
                        pattern (lambda/matching.ml[3068,98674+20]..[3068,98674+21])
                          Ppat_any
                      ]
                expression (lambda/matching.ml[3068,98674+26]..[3068,98674+76])
                  Pexp_apply
                  expression (lambda/matching.ml[3068,98674+26]..[3068,98674+37])
                    Pexp_ident "List.exists" (lambda/matching.ml[3068,98674+26]..[3068,98674+37])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3068,98674+38]..[3068,98674+71])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[3068,98674+43]..[3068,98674+46])
                          Ppat_var "lam" (lambda/matching.ml[3068,98674+43]..[3068,98674+46])
                        expression (lambda/matching.ml[3068,98674+50]..[3068,98674+70])
                          Pexp_apply
                          expression (lambda/matching.ml[3068,98674+50]..[3068,98674+64])
                            Pexp_ident "approx_present" (lambda/matching.ml[3068,98674+50]..[3068,98674+64])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3068,98674+65]..[3068,98674+66])
                                Pexp_ident "v" (lambda/matching.ml[3068,98674+65]..[3068,98674+66])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3068,98674+67]..[3068,98674+70])
                                Pexp_ident "lam" (lambda/matching.ml[3068,98674+67]..[3068,98674+70])
                          ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3068,98674+72]..[3068,98674+76])
                        Pexp_ident "args" (lambda/matching.ml[3068,98674+72]..[3068,98674+76])
                  ]
              <case>
                pattern (lambda/matching.ml[3069,98751+4]..[3069,98751+31])
                  Ppat_construct "Llet" (lambda/matching.ml[3069,98751+4]..[3069,98751+8])
                  Some
                    []
                    pattern (lambda/matching.ml[3069,98751+9]..[3069,98751+31])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3069,98751+10]..[3069,98751+15])
                          Ppat_construct "Alias" (lambda/matching.ml[3069,98751+10]..[3069,98751+15])
                          None
                        pattern (lambda/matching.ml[3069,98751+17]..[3069,98751+19])
                          Ppat_var "_k" (lambda/matching.ml[3069,98751+17]..[3069,98751+19])
                        pattern (lambda/matching.ml[3069,98751+21]..[3069,98751+22])
                          Ppat_any
                        pattern (lambda/matching.ml[3069,98751+24]..[3069,98751+26])
                          Ppat_var "l1" (lambda/matching.ml[3069,98751+24]..[3069,98751+26])
                        pattern (lambda/matching.ml[3069,98751+28]..[3069,98751+30])
                          Ppat_var "l2" (lambda/matching.ml[3069,98751+28]..[3069,98751+30])
                      ]
                expression (lambda/matching.ml[3069,98751+35]..[3069,98751+77])
                  Pexp_apply
                  expression (lambda/matching.ml[3069,98751+55]..[3069,98751+57])
                    Pexp_ident "||" (lambda/matching.ml[3069,98751+55]..[3069,98751+57])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3069,98751+35]..[3069,98751+54])
                        Pexp_apply
                        expression (lambda/matching.ml[3069,98751+35]..[3069,98751+49])
                          Pexp_ident "approx_present" (lambda/matching.ml[3069,98751+35]..[3069,98751+49])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3069,98751+50]..[3069,98751+51])
                              Pexp_ident "v" (lambda/matching.ml[3069,98751+50]..[3069,98751+51])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3069,98751+52]..[3069,98751+54])
                              Pexp_ident "l1" (lambda/matching.ml[3069,98751+52]..[3069,98751+54])
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3069,98751+58]..[3069,98751+77])
                        Pexp_apply
                        expression (lambda/matching.ml[3069,98751+58]..[3069,98751+72])
                          Pexp_ident "approx_present" (lambda/matching.ml[3069,98751+58]..[3069,98751+72])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3069,98751+73]..[3069,98751+74])
                              Pexp_ident "v" (lambda/matching.ml[3069,98751+73]..[3069,98751+74])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3069,98751+75]..[3069,98751+77])
                              Pexp_ident "l2" (lambda/matching.ml[3069,98751+75]..[3069,98751+77])
                        ]
                  ]
              <case>
                pattern (lambda/matching.ml[3070,98829+4]..[3070,98829+11])
                  Ppat_construct "Lvar" (lambda/matching.ml[3070,98829+4]..[3070,98829+8])
                  Some
                    []
                    pattern (lambda/matching.ml[3070,98829+9]..[3070,98829+11])
                      Ppat_var "vv" (lambda/matching.ml[3070,98829+9]..[3070,98829+11])
                expression (lambda/matching.ml[3070,98829+15]..[3070,98829+30])
                  Pexp_apply
                  expression (lambda/matching.ml[3070,98829+15]..[3070,98829+25])
                    Pexp_ident "Ident.same" (lambda/matching.ml[3070,98829+15]..[3070,98829+25])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3070,98829+26]..[3070,98829+27])
                        Pexp_ident "v" (lambda/matching.ml[3070,98829+26]..[3070,98829+27])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3070,98829+28]..[3070,98829+30])
                        Pexp_ident "vv" (lambda/matching.ml[3070,98829+28]..[3070,98829+30])
                  ]
              <case>
                pattern (lambda/matching.ml[3071,98860+4]..[3071,98860+5])
                  Ppat_any
                expression (lambda/matching.ml[3071,98860+9]..[3071,98860+13])
                  Pexp_construct "true" (lambda/matching.ml[3071,98860+9]..[3071,98860+13])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[3073,98875+0]..[3096,99906+29])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3073,98875+8]..[3073,98875+18])
          Ppat_var "lower_bind" (lambda/matching.ml[3073,98875+8]..[3073,98875+18])
        expression (lambda/matching.ml[3073,98875+19]..[3096,99906+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3073,98875+19]..[3073,98875+20])
            Ppat_var "v" (lambda/matching.ml[3073,98875+19]..[3073,98875+20])
          expression (lambda/matching.ml[3073,98875+21]..[3096,99906+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3073,98875+21]..[3073,98875+24])
              Ppat_var "arg" (lambda/matching.ml[3073,98875+21]..[3073,98875+24])
            expression (lambda/matching.ml[3073,98875+25]..[3096,99906+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3073,98875+25]..[3073,98875+28])
                Ppat_var "lam" (lambda/matching.ml[3073,98875+25]..[3073,98875+28])
              expression (lambda/matching.ml[3074,98906+2]..[3096,99906+29])
                Pexp_match
                expression (lambda/matching.ml[3074,98906+8]..[3074,98906+11])
                  Pexp_ident "lam" (lambda/matching.ml[3074,98906+8]..[3074,98906+11])
                [
                  <case>
                    pattern (lambda/matching.ml[3075,98923+4]..[3075,98923+35])
                      Ppat_construct "Lifthenelse" (lambda/matching.ml[3075,98923+4]..[3075,98923+15])
                      Some
                        []
                        pattern (lambda/matching.ml[3075,98923+16]..[3075,98923+35])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3075,98923+17]..[3075,98923+21])
                              Ppat_var "cond" (lambda/matching.ml[3075,98923+17]..[3075,98923+21])
                            pattern (lambda/matching.ml[3075,98923+23]..[3075,98923+27])
                              Ppat_var "ifso" (lambda/matching.ml[3075,98923+23]..[3075,98923+27])
                            pattern (lambda/matching.ml[3075,98923+29]..[3075,98923+34])
                              Ppat_var "ifnot" (lambda/matching.ml[3075,98923+29]..[3075,98923+34])
                          ]
                    expression (lambda/matching.ml[3075,98923+39]..[3084,99354+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[3076,98964+10]..[3076,98964+15])
                            Ppat_var "pcond" (lambda/matching.ml[3076,98964+10]..[3076,98964+15])
                          expression (lambda/matching.ml[3076,98964+18]..[3076,98964+39])
                            Pexp_apply
                            expression (lambda/matching.ml[3076,98964+18]..[3076,98964+32])
                              Pexp_ident "approx_present" (lambda/matching.ml[3076,98964+18]..[3076,98964+32])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3076,98964+33]..[3076,98964+34])
                                  Pexp_ident "v" (lambda/matching.ml[3076,98964+33]..[3076,98964+34])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3076,98964+35]..[3076,98964+39])
                                  Pexp_ident "cond" (lambda/matching.ml[3076,98964+35]..[3076,98964+39])
                            ]
                        <def>
                          pattern (lambda/matching.ml[3077,99004+10]..[3077,99004+13])
                            Ppat_var "pso" (lambda/matching.ml[3077,99004+10]..[3077,99004+13])
                          expression (lambda/matching.ml[3077,99004+16]..[3077,99004+37])
                            Pexp_apply
                            expression (lambda/matching.ml[3077,99004+16]..[3077,99004+30])
                              Pexp_ident "approx_present" (lambda/matching.ml[3077,99004+16]..[3077,99004+30])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3077,99004+31]..[3077,99004+32])
                                  Pexp_ident "v" (lambda/matching.ml[3077,99004+31]..[3077,99004+32])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3077,99004+33]..[3077,99004+37])
                                  Pexp_ident "ifso" (lambda/matching.ml[3077,99004+33]..[3077,99004+37])
                            ]
                        <def>
                          pattern (lambda/matching.ml[3078,99042+10]..[3078,99042+14])
                            Ppat_var "pnot" (lambda/matching.ml[3078,99042+10]..[3078,99042+14])
                          expression (lambda/matching.ml[3078,99042+17]..[3078,99042+39])
                            Pexp_apply
                            expression (lambda/matching.ml[3078,99042+17]..[3078,99042+31])
                              Pexp_ident "approx_present" (lambda/matching.ml[3078,99042+17]..[3078,99042+31])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3078,99042+32]..[3078,99042+33])
                                  Pexp_ident "v" (lambda/matching.ml[3078,99042+32]..[3078,99042+33])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3078,99042+34]..[3078,99042+39])
                                  Pexp_ident "ifnot" (lambda/matching.ml[3078,99042+34]..[3078,99042+39])
                            ]
                      ]
                      expression (lambda/matching.ml[3079,99085+6]..[3083,99314+39])
                        Pexp_match
                        expression (lambda/matching.ml[3079,99085+12]..[3079,99085+30])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[3079,99085+13]..[3079,99085+18])
                              Pexp_ident "pcond" (lambda/matching.ml[3079,99085+13]..[3079,99085+18])
                            expression (lambda/matching.ml[3079,99085+20]..[3079,99085+23])
                              Pexp_ident "pso" (lambda/matching.ml[3079,99085+20]..[3079,99085+23])
                            expression (lambda/matching.ml[3079,99085+25]..[3079,99085+29])
                              Pexp_ident "pnot" (lambda/matching.ml[3079,99085+25]..[3079,99085+29])
                          ]
                        [
                          <case>
                            pattern (lambda/matching.ml[3080,99121+8]..[3080,99121+27])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3080,99121+8]..[3080,99121+13])
                                  Ppat_construct "false" (lambda/matching.ml[3080,99121+8]..[3080,99121+13])
                                  None
                                pattern (lambda/matching.ml[3080,99121+15]..[3080,99121+20])
                                  Ppat_construct "false" (lambda/matching.ml[3080,99121+15]..[3080,99121+20])
                                  None
                                pattern (lambda/matching.ml[3080,99121+22]..[3080,99121+27])
                                  Ppat_construct "false" (lambda/matching.ml[3080,99121+22]..[3080,99121+27])
                                  None
                              ]
                            expression (lambda/matching.ml[3080,99121+31]..[3080,99121+34])
                              Pexp_ident "lam" (lambda/matching.ml[3080,99121+31]..[3080,99121+34])
                          <case>
                            pattern (lambda/matching.ml[3081,99156+8]..[3081,99156+26])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3081,99156+8]..[3081,99156+13])
                                  Ppat_construct "false" (lambda/matching.ml[3081,99156+8]..[3081,99156+13])
                                  None
                                pattern (lambda/matching.ml[3081,99156+15]..[3081,99156+19])
                                  Ppat_construct "true" (lambda/matching.ml[3081,99156+15]..[3081,99156+19])
                                  None
                                pattern (lambda/matching.ml[3081,99156+21]..[3081,99156+26])
                                  Ppat_construct "false" (lambda/matching.ml[3081,99156+21]..[3081,99156+26])
                                  None
                              ]
                            expression (lambda/matching.ml[3081,99156+30]..[3081,99156+78])
                              Pexp_construct "Lifthenelse" (lambda/matching.ml[3081,99156+30]..[3081,99156+41])
                              Some
                                expression (lambda/matching.ml[3081,99156+42]..[3081,99156+78])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3081,99156+43]..[3081,99156+47])
                                      Pexp_ident "cond" (lambda/matching.ml[3081,99156+43]..[3081,99156+47])
                                    expression (lambda/matching.ml[3081,99156+49]..[3081,99156+70])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3081,99156+49]..[3081,99156+59])
                                        Pexp_ident "lower_bind" (lambda/matching.ml[3081,99156+49]..[3081,99156+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3081,99156+60]..[3081,99156+61])
                                            Pexp_ident "v" (lambda/matching.ml[3081,99156+60]..[3081,99156+61])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3081,99156+62]..[3081,99156+65])
                                            Pexp_ident "arg" (lambda/matching.ml[3081,99156+62]..[3081,99156+65])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3081,99156+66]..[3081,99156+70])
                                            Pexp_ident "ifso" (lambda/matching.ml[3081,99156+66]..[3081,99156+70])
                                      ]
                                    expression (lambda/matching.ml[3081,99156+72]..[3081,99156+77])
                                      Pexp_ident "ifnot" (lambda/matching.ml[3081,99156+72]..[3081,99156+77])
                                  ]
                          <case>
                            pattern (lambda/matching.ml[3082,99235+8]..[3082,99235+26])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3082,99235+8]..[3082,99235+13])
                                  Ppat_construct "false" (lambda/matching.ml[3082,99235+8]..[3082,99235+13])
                                  None
                                pattern (lambda/matching.ml[3082,99235+15]..[3082,99235+20])
                                  Ppat_construct "false" (lambda/matching.ml[3082,99235+15]..[3082,99235+20])
                                  None
                                pattern (lambda/matching.ml[3082,99235+22]..[3082,99235+26])
                                  Ppat_construct "true" (lambda/matching.ml[3082,99235+22]..[3082,99235+26])
                                  None
                              ]
                            expression (lambda/matching.ml[3082,99235+30]..[3082,99235+78])
                              Pexp_construct "Lifthenelse" (lambda/matching.ml[3082,99235+30]..[3082,99235+41])
                              Some
                                expression (lambda/matching.ml[3082,99235+42]..[3082,99235+78])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3082,99235+43]..[3082,99235+47])
                                      Pexp_ident "cond" (lambda/matching.ml[3082,99235+43]..[3082,99235+47])
                                    expression (lambda/matching.ml[3082,99235+49]..[3082,99235+53])
                                      Pexp_ident "ifso" (lambda/matching.ml[3082,99235+49]..[3082,99235+53])
                                    expression (lambda/matching.ml[3082,99235+55]..[3082,99235+77])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3082,99235+55]..[3082,99235+65])
                                        Pexp_ident "lower_bind" (lambda/matching.ml[3082,99235+55]..[3082,99235+65])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3082,99235+66]..[3082,99235+67])
                                            Pexp_ident "v" (lambda/matching.ml[3082,99235+66]..[3082,99235+67])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3082,99235+68]..[3082,99235+71])
                                            Pexp_ident "arg" (lambda/matching.ml[3082,99235+68]..[3082,99235+71])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3082,99235+72]..[3082,99235+77])
                                            Pexp_ident "ifnot" (lambda/matching.ml[3082,99235+72]..[3082,99235+77])
                                      ]
                                  ]
                          <case>
                            pattern (lambda/matching.ml[3083,99314+8]..[3083,99314+15])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3083,99314+8]..[3083,99314+9])
                                  Ppat_any
                                pattern (lambda/matching.ml[3083,99314+11]..[3083,99314+12])
                                  Ppat_any
                                pattern (lambda/matching.ml[3083,99314+14]..[3083,99314+15])
                                  Ppat_any
                              ]
                            expression (lambda/matching.ml[3083,99314+19]..[3083,99314+39])
                              Pexp_apply
                              expression (lambda/matching.ml[3083,99314+19]..[3083,99314+23])
                                Pexp_ident "bind" (lambda/matching.ml[3083,99314+19]..[3083,99314+23])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3083,99314+24]..[3083,99314+29])
                                    Pexp_construct "Alias" (lambda/matching.ml[3083,99314+24]..[3083,99314+29])
                                    None
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3083,99314+30]..[3083,99314+31])
                                    Pexp_ident "v" (lambda/matching.ml[3083,99314+30]..[3083,99314+31])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3083,99314+32]..[3083,99314+35])
                                    Pexp_ident "arg" (lambda/matching.ml[3083,99314+32]..[3083,99314+35])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3083,99314+36]..[3083,99314+39])
                                    Pexp_ident "lam" (lambda/matching.ml[3083,99314+36]..[3083,99314+39])
                              ]
                        ]
                  <case>
                    pattern (lambda/matching.ml[3085,99360+4]..[3085,99360+75])
                      Ppat_construct "Lswitch" (lambda/matching.ml[3085,99360+4]..[3085,99360+11])
                      Some
                        []
                        pattern (lambda/matching.ml[3085,99360+12]..[3085,99360+75])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3085,99360+13]..[3085,99360+15])
                              Ppat_var "ls" (lambda/matching.ml[3085,99360+13]..[3085,99360+15])
                            pattern (lambda/matching.ml[3085,99360+17]..[3085,99360+69])
                              Ppat_alias "sw" (lambda/matching.ml[3085,99360+66]..[3085,99360+68])
                              pattern (lambda/matching.ml[3085,99360+18]..[3085,99360+62])
                                Ppat_record Closed
                                [
                                  "sw_consts" (lambda/matching.ml[3085,99360+20]..[3085,99360+29])
                                    pattern (lambda/matching.ml[3085,99360+32]..[3085,99360+44])
                                      Ppat_construct "::" (lambda/matching.ml[3085,99360+34]..[3085,99360+44]) ghost
                                      Some
                                        []
                                        pattern (lambda/matching.ml[3085,99360+34]..[3085,99360+44]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3085,99360+34]..[3085,99360+42])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3085,99360+35]..[3085,99360+36])
                                                  Ppat_var "i" (lambda/matching.ml[3085,99360+35]..[3085,99360+36])
                                                pattern (lambda/matching.ml[3085,99360+38]..[3085,99360+41])
                                                  Ppat_var "act" (lambda/matching.ml[3085,99360+38]..[3085,99360+41])
                                              ]
                                            pattern (lambda/matching.ml[3085,99360+43]..[3085,99360+44]) ghost
                                              Ppat_construct "[]" (lambda/matching.ml[3085,99360+43]..[3085,99360+44]) ghost
                                              None
                                          ]
                                  "sw_blocks" (lambda/matching.ml[3085,99360+46]..[3085,99360+55])
                                    pattern (lambda/matching.ml[3085,99360+58]..[3085,99360+60])
                                      Ppat_construct "[]" (lambda/matching.ml[3085,99360+58]..[3085,99360+60])
                                      None
                                ]
                            pattern (lambda/matching.ml[3085,99360+71]..[3085,99360+74])
                              Ppat_var "loc" (lambda/matching.ml[3085,99360+71]..[3085,99360+74])
                          ]
                    <when>
                      expression (lambda/matching.ml[3086,99436+9]..[3086,99436+34])
                        Pexp_apply
                        expression (lambda/matching.ml[3086,99436+9]..[3086,99436+12])
                          Pexp_ident "not" (lambda/matching.ml[3086,99436+9]..[3086,99436+12])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3086,99436+13]..[3086,99436+34])
                              Pexp_apply
                              expression (lambda/matching.ml[3086,99436+14]..[3086,99436+28])
                                Pexp_ident "approx_present" (lambda/matching.ml[3086,99436+14]..[3086,99436+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3086,99436+29]..[3086,99436+30])
                                    Pexp_ident "v" (lambda/matching.ml[3086,99436+29]..[3086,99436+30])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3086,99436+31]..[3086,99436+33])
                                    Pexp_ident "ls" (lambda/matching.ml[3086,99436+31]..[3086,99436+33])
                              ]
                        ]
                    expression (lambda/matching.ml[3087,99474+6]..[3087,99474+78])
                      Pexp_construct "Lswitch" (lambda/matching.ml[3087,99474+6]..[3087,99474+13])
                      Some
                        expression (lambda/matching.ml[3087,99474+14]..[3087,99474+78])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[3087,99474+15]..[3087,99474+17])
                              Pexp_ident "ls" (lambda/matching.ml[3087,99474+15]..[3087,99474+17])
                            expression (lambda/matching.ml[3087,99474+19]..[3087,99474+72])
                              Pexp_record
                              [
                                "sw_consts" (lambda/matching.ml[3087,99474+29]..[3087,99474+38])
                                  expression (lambda/matching.ml[3087,99474+41]..[3087,99474+70])
                                    Pexp_construct "::" (lambda/matching.ml[3087,99474+43]..[3087,99474+70]) ghost
                                    Some
                                      expression (lambda/matching.ml[3087,99474+43]..[3087,99474+70]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[3087,99474+43]..[3087,99474+68])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[3087,99474+44]..[3087,99474+45])
                                                Pexp_ident "i" (lambda/matching.ml[3087,99474+44]..[3087,99474+45])
                                              expression (lambda/matching.ml[3087,99474+47]..[3087,99474+67])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3087,99474+47]..[3087,99474+57])
                                                  Pexp_ident "lower_bind" (lambda/matching.ml[3087,99474+47]..[3087,99474+57])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3087,99474+58]..[3087,99474+59])
                                                      Pexp_ident "v" (lambda/matching.ml[3087,99474+58]..[3087,99474+59])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3087,99474+60]..[3087,99474+63])
                                                      Pexp_ident "arg" (lambda/matching.ml[3087,99474+60]..[3087,99474+63])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3087,99474+64]..[3087,99474+67])
                                                      Pexp_ident "act" (lambda/matching.ml[3087,99474+64]..[3087,99474+67])
                                                ]
                                            ]
                                          expression (lambda/matching.ml[3087,99474+69]..[3087,99474+70]) ghost
                                            Pexp_construct "[]" (lambda/matching.ml[3087,99474+69]..[3087,99474+70]) ghost
                                            None
                                        ]
                              ]
                              Some
                                expression (lambda/matching.ml[3087,99474+21]..[3087,99474+23])
                                  Pexp_ident "sw" (lambda/matching.ml[3087,99474+21]..[3087,99474+23])
                            expression (lambda/matching.ml[3087,99474+74]..[3087,99474+77])
                              Pexp_ident "loc" (lambda/matching.ml[3087,99474+74]..[3087,99474+77])
                          ]
                  <case>
                    pattern (lambda/matching.ml[3088,99553+4]..[3088,99553+75])
                      Ppat_construct "Lswitch" (lambda/matching.ml[3088,99553+4]..[3088,99553+11])
                      Some
                        []
                        pattern (lambda/matching.ml[3088,99553+12]..[3088,99553+75])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3088,99553+13]..[3088,99553+15])
                              Ppat_var "ls" (lambda/matching.ml[3088,99553+13]..[3088,99553+15])
                            pattern (lambda/matching.ml[3088,99553+17]..[3088,99553+69])
                              Ppat_alias "sw" (lambda/matching.ml[3088,99553+66]..[3088,99553+68])
                              pattern (lambda/matching.ml[3088,99553+18]..[3088,99553+62])
                                Ppat_record Closed
                                [
                                  "sw_consts" (lambda/matching.ml[3088,99553+20]..[3088,99553+29])
                                    pattern (lambda/matching.ml[3088,99553+32]..[3088,99553+34])
                                      Ppat_construct "[]" (lambda/matching.ml[3088,99553+32]..[3088,99553+34])
                                      None
                                  "sw_blocks" (lambda/matching.ml[3088,99553+36]..[3088,99553+45])
                                    pattern (lambda/matching.ml[3088,99553+48]..[3088,99553+60])
                                      Ppat_construct "::" (lambda/matching.ml[3088,99553+50]..[3088,99553+60]) ghost
                                      Some
                                        []
                                        pattern (lambda/matching.ml[3088,99553+50]..[3088,99553+60]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3088,99553+50]..[3088,99553+58])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3088,99553+51]..[3088,99553+52])
                                                  Ppat_var "i" (lambda/matching.ml[3088,99553+51]..[3088,99553+52])
                                                pattern (lambda/matching.ml[3088,99553+54]..[3088,99553+57])
                                                  Ppat_var "act" (lambda/matching.ml[3088,99553+54]..[3088,99553+57])
                                              ]
                                            pattern (lambda/matching.ml[3088,99553+59]..[3088,99553+60]) ghost
                                              Ppat_construct "[]" (lambda/matching.ml[3088,99553+59]..[3088,99553+60]) ghost
                                              None
                                          ]
                                ]
                            pattern (lambda/matching.ml[3088,99553+71]..[3088,99553+74])
                              Ppat_var "loc" (lambda/matching.ml[3088,99553+71]..[3088,99553+74])
                          ]
                    <when>
                      expression (lambda/matching.ml[3089,99629+9]..[3089,99629+34])
                        Pexp_apply
                        expression (lambda/matching.ml[3089,99629+9]..[3089,99629+12])
                          Pexp_ident "not" (lambda/matching.ml[3089,99629+9]..[3089,99629+12])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3089,99629+13]..[3089,99629+34])
                              Pexp_apply
                              expression (lambda/matching.ml[3089,99629+14]..[3089,99629+28])
                                Pexp_ident "approx_present" (lambda/matching.ml[3089,99629+14]..[3089,99629+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3089,99629+29]..[3089,99629+30])
                                    Pexp_ident "v" (lambda/matching.ml[3089,99629+29]..[3089,99629+30])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3089,99629+31]..[3089,99629+33])
                                    Pexp_ident "ls" (lambda/matching.ml[3089,99629+31]..[3089,99629+33])
                              ]
                        ]
                    expression (lambda/matching.ml[3090,99667+6]..[3090,99667+78])
                      Pexp_construct "Lswitch" (lambda/matching.ml[3090,99667+6]..[3090,99667+13])
                      Some
                        expression (lambda/matching.ml[3090,99667+14]..[3090,99667+78])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[3090,99667+15]..[3090,99667+17])
                              Pexp_ident "ls" (lambda/matching.ml[3090,99667+15]..[3090,99667+17])
                            expression (lambda/matching.ml[3090,99667+19]..[3090,99667+72])
                              Pexp_record
                              [
                                "sw_blocks" (lambda/matching.ml[3090,99667+29]..[3090,99667+38])
                                  expression (lambda/matching.ml[3090,99667+41]..[3090,99667+70])
                                    Pexp_construct "::" (lambda/matching.ml[3090,99667+43]..[3090,99667+70]) ghost
                                    Some
                                      expression (lambda/matching.ml[3090,99667+43]..[3090,99667+70]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[3090,99667+43]..[3090,99667+68])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[3090,99667+44]..[3090,99667+45])
                                                Pexp_ident "i" (lambda/matching.ml[3090,99667+44]..[3090,99667+45])
                                              expression (lambda/matching.ml[3090,99667+47]..[3090,99667+67])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3090,99667+47]..[3090,99667+57])
                                                  Pexp_ident "lower_bind" (lambda/matching.ml[3090,99667+47]..[3090,99667+57])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3090,99667+58]..[3090,99667+59])
                                                      Pexp_ident "v" (lambda/matching.ml[3090,99667+58]..[3090,99667+59])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3090,99667+60]..[3090,99667+63])
                                                      Pexp_ident "arg" (lambda/matching.ml[3090,99667+60]..[3090,99667+63])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3090,99667+64]..[3090,99667+67])
                                                      Pexp_ident "act" (lambda/matching.ml[3090,99667+64]..[3090,99667+67])
                                                ]
                                            ]
                                          expression (lambda/matching.ml[3090,99667+69]..[3090,99667+70]) ghost
                                            Pexp_construct "[]" (lambda/matching.ml[3090,99667+69]..[3090,99667+70]) ghost
                                            None
                                        ]
                              ]
                              Some
                                expression (lambda/matching.ml[3090,99667+21]..[3090,99667+23])
                                  Pexp_ident "sw" (lambda/matching.ml[3090,99667+21]..[3090,99667+23])
                            expression (lambda/matching.ml[3090,99667+74]..[3090,99667+77])
                              Pexp_ident "loc" (lambda/matching.ml[3090,99667+74]..[3090,99667+77])
                          ]
                  <case>
                    pattern (lambda/matching.ml[3091,99746+4]..[3091,99746+30])
                      Ppat_construct "Llet" (lambda/matching.ml[3091,99746+4]..[3091,99746+8])
                      Some
                        []
                        pattern (lambda/matching.ml[3091,99746+9]..[3091,99746+30])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3091,99746+10]..[3091,99746+15])
                              Ppat_construct "Alias" (lambda/matching.ml[3091,99746+10]..[3091,99746+15])
                              None
                            pattern (lambda/matching.ml[3091,99746+17]..[3091,99746+18])
                              Ppat_var "k" (lambda/matching.ml[3091,99746+17]..[3091,99746+18])
                            pattern (lambda/matching.ml[3091,99746+20]..[3091,99746+22])
                              Ppat_var "vv" (lambda/matching.ml[3091,99746+20]..[3091,99746+22])
                            pattern (lambda/matching.ml[3091,99746+24]..[3091,99746+26])
                              Ppat_var "lv" (lambda/matching.ml[3091,99746+24]..[3091,99746+26])
                            pattern (lambda/matching.ml[3091,99746+28]..[3091,99746+29])
                              Ppat_var "l" (lambda/matching.ml[3091,99746+28]..[3091,99746+29])
                          ]
                    expression (lambda/matching.ml[3092,99780+6]..[3095,99854+51])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[3092,99780+9]..[3092,99780+28])
                        Pexp_apply
                        expression (lambda/matching.ml[3092,99780+9]..[3092,99780+23])
                          Pexp_ident "approx_present" (lambda/matching.ml[3092,99780+9]..[3092,99780+23])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3092,99780+24]..[3092,99780+25])
                              Pexp_ident "v" (lambda/matching.ml[3092,99780+24]..[3092,99780+25])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3092,99780+26]..[3092,99780+28])
                              Pexp_ident "lv" (lambda/matching.ml[3092,99780+26]..[3092,99780+28])
                        ]
                      expression (lambda/matching.ml[3093,99814+8]..[3093,99814+28])
                        Pexp_apply
                        expression (lambda/matching.ml[3093,99814+8]..[3093,99814+12])
                          Pexp_ident "bind" (lambda/matching.ml[3093,99814+8]..[3093,99814+12])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3093,99814+13]..[3093,99814+18])
                              Pexp_construct "Alias" (lambda/matching.ml[3093,99814+13]..[3093,99814+18])
                              None
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3093,99814+19]..[3093,99814+20])
                              Pexp_ident "v" (lambda/matching.ml[3093,99814+19]..[3093,99814+20])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3093,99814+21]..[3093,99814+24])
                              Pexp_ident "arg" (lambda/matching.ml[3093,99814+21]..[3093,99814+24])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3093,99814+25]..[3093,99814+28])
                              Pexp_ident "lam" (lambda/matching.ml[3093,99814+25]..[3093,99814+28])
                        ]
                      Some
                        expression (lambda/matching.ml[3095,99854+8]..[3095,99854+51])
                          Pexp_construct "Llet" (lambda/matching.ml[3095,99854+8]..[3095,99854+12])
                          Some
                            expression (lambda/matching.ml[3095,99854+13]..[3095,99854+51])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3095,99854+14]..[3095,99854+19])
                                  Pexp_construct "Alias" (lambda/matching.ml[3095,99854+14]..[3095,99854+19])
                                  None
                                expression (lambda/matching.ml[3095,99854+21]..[3095,99854+22])
                                  Pexp_ident "k" (lambda/matching.ml[3095,99854+21]..[3095,99854+22])
                                expression (lambda/matching.ml[3095,99854+24]..[3095,99854+26])
                                  Pexp_ident "vv" (lambda/matching.ml[3095,99854+24]..[3095,99854+26])
                                expression (lambda/matching.ml[3095,99854+28]..[3095,99854+30])
                                  Pexp_ident "lv" (lambda/matching.ml[3095,99854+28]..[3095,99854+30])
                                expression (lambda/matching.ml[3095,99854+32]..[3095,99854+50])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3095,99854+32]..[3095,99854+42])
                                    Pexp_ident "lower_bind" (lambda/matching.ml[3095,99854+32]..[3095,99854+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3095,99854+43]..[3095,99854+44])
                                        Pexp_ident "v" (lambda/matching.ml[3095,99854+43]..[3095,99854+44])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3095,99854+45]..[3095,99854+48])
                                        Pexp_ident "arg" (lambda/matching.ml[3095,99854+45]..[3095,99854+48])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3095,99854+49]..[3095,99854+50])
                                        Pexp_ident "l" (lambda/matching.ml[3095,99854+49]..[3095,99854+50])
                                  ]
                              ]
                  <case>
                    pattern (lambda/matching.ml[3096,99906+4]..[3096,99906+5])
                      Ppat_any
                    expression (lambda/matching.ml[3096,99906+9]..[3096,99906+29])
                      Pexp_apply
                      expression (lambda/matching.ml[3096,99906+9]..[3096,99906+13])
                        Pexp_ident "bind" (lambda/matching.ml[3096,99906+9]..[3096,99906+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3096,99906+14]..[3096,99906+19])
                            Pexp_construct "Alias" (lambda/matching.ml[3096,99906+14]..[3096,99906+19])
                            None
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3096,99906+20]..[3096,99906+21])
                            Pexp_ident "v" (lambda/matching.ml[3096,99906+20]..[3096,99906+21])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3096,99906+22]..[3096,99906+25])
                            Pexp_ident "arg" (lambda/matching.ml[3096,99906+22]..[3096,99906+25])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3096,99906+26]..[3096,99906+29])
                            Pexp_ident "lam" (lambda/matching.ml[3096,99906+26]..[3096,99906+29])
                      ]
                ]
    ]
  structure_item (lambda/matching.ml[3098,99937+0]..[3102,100065+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3098,99937+4]..[3098,99937+14])
          Ppat_var "bind_check" (lambda/matching.ml[3098,99937+4]..[3098,99937+14])
        expression (lambda/matching.ml[3098,99937+15]..[3102,100065+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3098,99937+15]..[3098,99937+18])
            Ppat_var "str" (lambda/matching.ml[3098,99937+15]..[3098,99937+18])
          expression (lambda/matching.ml[3098,99937+19]..[3102,100065+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3098,99937+19]..[3098,99937+20])
              Ppat_var "v" (lambda/matching.ml[3098,99937+19]..[3098,99937+20])
            expression (lambda/matching.ml[3098,99937+21]..[3102,100065+30]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3098,99937+21]..[3098,99937+24])
                Ppat_var "arg" (lambda/matching.ml[3098,99937+21]..[3098,99937+24])
              expression (lambda/matching.ml[3098,99937+25]..[3102,100065+30]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3098,99937+25]..[3098,99937+28])
                  Ppat_var "lam" (lambda/matching.ml[3098,99937+25]..[3098,99937+28])
                expression (lambda/matching.ml[3099,99968+2]..[3102,100065+30])
                  Pexp_match
                  expression (lambda/matching.ml[3099,99968+8]..[3099,99968+18])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[3099,99968+9]..[3099,99968+12])
                        Pexp_ident "str" (lambda/matching.ml[3099,99968+9]..[3099,99968+12])
                      expression (lambda/matching.ml[3099,99968+14]..[3099,99968+17])
                        Pexp_ident "arg" (lambda/matching.ml[3099,99968+14]..[3099,99968+17])
                    ]
                  [
                    <case>
                      pattern (lambda/matching.ml[3100,99992+4]..[3100,99992+13])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[3100,99992+4]..[3100,99992+5])
                            Ppat_any
                          pattern (lambda/matching.ml[3100,99992+7]..[3100,99992+13])
                            Ppat_construct "Lvar" (lambda/matching.ml[3100,99992+7]..[3100,99992+11])
                            Some
                              []
                              pattern (lambda/matching.ml[3100,99992+12]..[3100,99992+13])
                                Ppat_any
                        ]
                      expression (lambda/matching.ml[3100,99992+17]..[3100,99992+35])
                        Pexp_apply
                        expression (lambda/matching.ml[3100,99992+17]..[3100,99992+21])
                          Pexp_ident "bind" (lambda/matching.ml[3100,99992+17]..[3100,99992+21])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3100,99992+22]..[3100,99992+25])
                              Pexp_ident "str" (lambda/matching.ml[3100,99992+22]..[3100,99992+25])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3100,99992+26]..[3100,99992+27])
                              Pexp_ident "v" (lambda/matching.ml[3100,99992+26]..[3100,99992+27])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3100,99992+28]..[3100,99992+31])
                              Pexp_ident "arg" (lambda/matching.ml[3100,99992+28]..[3100,99992+31])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3100,99992+32]..[3100,99992+35])
                              Pexp_ident "lam" (lambda/matching.ml[3100,99992+32]..[3100,99992+35])
                        ]
                    <case>
                      pattern (lambda/matching.ml[3101,100028+4]..[3101,100028+12])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[3101,100028+4]..[3101,100028+9])
                            Ppat_construct "Alias" (lambda/matching.ml[3101,100028+4]..[3101,100028+9])
                            None
                          pattern (lambda/matching.ml[3101,100028+11]..[3101,100028+12])
                            Ppat_any
                        ]
                      expression (lambda/matching.ml[3101,100028+16]..[3101,100028+36])
                        Pexp_apply
                        expression (lambda/matching.ml[3101,100028+16]..[3101,100028+26])
                          Pexp_ident "lower_bind" (lambda/matching.ml[3101,100028+16]..[3101,100028+26])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3101,100028+27]..[3101,100028+28])
                              Pexp_ident "v" (lambda/matching.ml[3101,100028+27]..[3101,100028+28])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3101,100028+29]..[3101,100028+32])
                              Pexp_ident "arg" (lambda/matching.ml[3101,100028+29]..[3101,100028+32])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3101,100028+33]..[3101,100028+36])
                              Pexp_ident "lam" (lambda/matching.ml[3101,100028+33]..[3101,100028+36])
                        ]
                    <case>
                      pattern (lambda/matching.ml[3102,100065+4]..[3102,100065+8])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[3102,100065+4]..[3102,100065+5])
                            Ppat_any
                          pattern (lambda/matching.ml[3102,100065+7]..[3102,100065+8])
                            Ppat_any
                        ]
                      expression (lambda/matching.ml[3102,100065+12]..[3102,100065+30])
                        Pexp_apply
                        expression (lambda/matching.ml[3102,100065+12]..[3102,100065+16])
                          Pexp_ident "bind" (lambda/matching.ml[3102,100065+12]..[3102,100065+16])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3102,100065+17]..[3102,100065+20])
                              Pexp_ident "str" (lambda/matching.ml[3102,100065+17]..[3102,100065+20])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3102,100065+21]..[3102,100065+22])
                              Pexp_ident "v" (lambda/matching.ml[3102,100065+21]..[3102,100065+22])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3102,100065+23]..[3102,100065+26])
                              Pexp_ident "arg" (lambda/matching.ml[3102,100065+23]..[3102,100065+26])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3102,100065+27]..[3102,100065+30])
                              Pexp_ident "lam" (lambda/matching.ml[3102,100065+27]..[3102,100065+30])
                        ]
                  ]
    ]
  structure_item (lambda/matching.ml[3104,100097+0]..[3107,100236+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3104,100097+4]..[3104,100097+13])
          Ppat_var "comp_exit" (lambda/matching.ml[3104,100097+4]..[3104,100097+13])
        expression (lambda/matching.ml[3104,100097+14]..[3107,100236+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3104,100097+14]..[3104,100097+17])
            Ppat_var "ctx" (lambda/matching.ml[3104,100097+14]..[3104,100097+17])
          expression (lambda/matching.ml[3104,100097+18]..[3107,100236+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3104,100097+18]..[3104,100097+19])
              Ppat_var "m" (lambda/matching.ml[3104,100097+18]..[3104,100097+19])
            expression (lambda/matching.ml[3105,100119+2]..[3107,100236+44])
              Pexp_match
              expression (lambda/matching.ml[3105,100119+8]..[3105,100119+41])
                Pexp_apply
                expression (lambda/matching.ml[3105,100119+8]..[3105,100119+31])
                  Pexp_ident "Default_environment.pop" (lambda/matching.ml[3105,100119+8]..[3105,100119+31])
                [
                  <arg>
                  Nolabel
                    expression (lambda/matching.ml[3105,100119+32]..[3105,100119+41])
                      Pexp_field
                      expression (lambda/matching.ml[3105,100119+32]..[3105,100119+33])
                        Pexp_ident "m" (lambda/matching.ml[3105,100119+32]..[3105,100119+33])
                      "default" (lambda/matching.ml[3105,100119+34]..[3105,100119+41])
                ]
              [
                <case>
                  pattern (lambda/matching.ml[3106,100166+4]..[3106,100166+20])
                    Ppat_construct "Some" (lambda/matching.ml[3106,100166+4]..[3106,100166+8])
                    Some
                      []
                      pattern (lambda/matching.ml[3106,100166+9]..[3106,100166+20])
                        Ppat_tuple
                        [
                          pattern (lambda/matching.ml[3106,100166+10]..[3106,100166+16])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[3106,100166+11]..[3106,100166+12])
                                Ppat_any
                              pattern (lambda/matching.ml[3106,100166+14]..[3106,100166+15])
                                Ppat_var "i" (lambda/matching.ml[3106,100166+14]..[3106,100166+15])
                            ]
                          pattern (lambda/matching.ml[3106,100166+18]..[3106,100166+19])
                            Ppat_any
                        ]
                  expression (lambda/matching.ml[3106,100166+24]..[3106,100166+69])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[3106,100166+25]..[3106,100166+45])
                        Pexp_construct "Lstaticraise" (lambda/matching.ml[3106,100166+25]..[3106,100166+37])
                        Some
                          expression (lambda/matching.ml[3106,100166+38]..[3106,100166+45])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[3106,100166+39]..[3106,100166+40])
                                Pexp_ident "i" (lambda/matching.ml[3106,100166+39]..[3106,100166+40])
                              expression (lambda/matching.ml[3106,100166+42]..[3106,100166+44])
                                Pexp_construct "[]" (lambda/matching.ml[3106,100166+42]..[3106,100166+44])
                                None
                            ]
                      expression (lambda/matching.ml[3106,100166+47]..[3106,100166+68])
                        Pexp_apply
                        expression (lambda/matching.ml[3106,100166+47]..[3106,100166+62])
                          Pexp_ident "Jumps.singleton" (lambda/matching.ml[3106,100166+47]..[3106,100166+62])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3106,100166+63]..[3106,100166+64])
                              Pexp_ident "i" (lambda/matching.ml[3106,100166+63]..[3106,100166+64])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3106,100166+65]..[3106,100166+68])
                              Pexp_ident "ctx" (lambda/matching.ml[3106,100166+65]..[3106,100166+68])
                        ]
                    ]
                <case>
                  pattern (lambda/matching.ml[3107,100236+4]..[3107,100236+8])
                    Ppat_construct "None" (lambda/matching.ml[3107,100236+4]..[3107,100236+8])
                    None
                  expression (lambda/matching.ml[3107,100236+12]..[3107,100236+44])
                    Pexp_apply
                    expression (lambda/matching.ml[3107,100236+12]..[3107,100236+23])
                      Pexp_ident "fatal_error" (lambda/matching.ml[3107,100236+12]..[3107,100236+23])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3107,100236+24]..[3107,100236+44])
                          Pexp_constant PConst_string("Matching.comp_exit",(lambda/matching.ml[3107,100236+25]..[3107,100236+43]),None)
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[3109,100282+0]..[3147,101636+5])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3109,100282+8]..[3109,100282+27])
          Ppat_var "comp_match_handlers" (lambda/matching.ml[3109,100282+8]..[3109,100282+27])
        expression (lambda/matching.ml[3109,100282+28]..[3147,101636+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3109,100282+28]..[3109,100282+36])
            Ppat_var "comp_fun" (lambda/matching.ml[3109,100282+28]..[3109,100282+36])
          expression (lambda/matching.ml[3109,100282+37]..[3147,101636+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3109,100282+37]..[3109,100282+44])
              Ppat_var "partial" (lambda/matching.ml[3109,100282+37]..[3109,100282+44])
            expression (lambda/matching.ml[3109,100282+45]..[3147,101636+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3109,100282+45]..[3109,100282+48])
                Ppat_var "ctx" (lambda/matching.ml[3109,100282+45]..[3109,100282+48])
              expression (lambda/matching.ml[3109,100282+49]..[3147,101636+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3109,100282+49]..[3109,100282+60])
                  Ppat_var "first_match" (lambda/matching.ml[3109,100282+49]..[3109,100282+60])
                expression (lambda/matching.ml[3109,100282+61]..[3147,101636+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3109,100282+61]..[3109,100282+72])
                    Ppat_var "next_matchs" (lambda/matching.ml[3109,100282+61]..[3109,100282+72])
                  expression (lambda/matching.ml[3110,100357+2]..[3147,101636+5])
                    Pexp_match
                    expression (lambda/matching.ml[3110,100357+8]..[3110,100357+19])
                      Pexp_ident "next_matchs" (lambda/matching.ml[3110,100357+8]..[3110,100357+19])
                    [
                      <case>
                        pattern (lambda/matching.ml[3111,100382+4]..[3111,100382+6])
                          Ppat_construct "[]" (lambda/matching.ml[3111,100382+4]..[3111,100382+6])
                          None
                        expression (lambda/matching.ml[3111,100382+10]..[3111,100382+42])
                          Pexp_apply
                          expression (lambda/matching.ml[3111,100382+10]..[3111,100382+18])
                            Pexp_ident "comp_fun" (lambda/matching.ml[3111,100382+10]..[3111,100382+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3111,100382+19]..[3111,100382+26])
                                Pexp_ident "partial" (lambda/matching.ml[3111,100382+19]..[3111,100382+26])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3111,100382+27]..[3111,100382+30])
                                Pexp_ident "ctx" (lambda/matching.ml[3111,100382+27]..[3111,100382+30])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3111,100382+31]..[3111,100382+42])
                                Pexp_ident "first_match" (lambda/matching.ml[3111,100382+31]..[3111,100382+42])
                          ]
                      <case>
                        pattern (lambda/matching.ml[3112,100425+4]..[3112,100425+7])
                          Ppat_var "rem" (lambda/matching.ml[3112,100425+4]..[3112,100425+7])
                        expression (lambda/matching.ml[3112,100425+11]..[3147,101636+5])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/matching.ml[3113,100438+14]..[3113,100438+19])
                                Ppat_var "c_rec" (lambda/matching.ml[3113,100438+14]..[3113,100438+19])
                              expression (lambda/matching.ml[3113,100438+20]..[3137,101333+11]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3113,100438+20]..[3113,100438+24])
                                  Ppat_var "body" (lambda/matching.ml[3113,100438+20]..[3113,100438+24])
                                expression (lambda/matching.ml[3113,100438+25]..[3137,101333+11]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3113,100438+25]..[3113,100438+35])
                                    Ppat_var "total_body" (lambda/matching.ml[3113,100438+25]..[3113,100438+35])
                                  expression (lambda/matching.ml[3113,100438+38]..[3137,101333+11])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[3114,100485+10]..[3114,100485+12])
                                          Ppat_construct "[]" (lambda/matching.ml[3114,100485+10]..[3114,100485+12])
                                          None
                                        expression (lambda/matching.ml[3114,100485+16]..[3114,100485+34])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3114,100485+17]..[3114,100485+21])
                                              Pexp_ident "body" (lambda/matching.ml[3114,100485+17]..[3114,100485+21])
                                            expression (lambda/matching.ml[3114,100485+23]..[3114,100485+33])
                                              Pexp_ident "total_body" (lambda/matching.ml[3114,100485+23]..[3114,100485+33])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3117,100612+10]..[3117,100612+24])
                                          Ppat_construct "::" (lambda/matching.ml[3117,100612+18]..[3117,100612+20])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3117,100612+10]..[3117,100612+24]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3117,100612+10]..[3117,100612+17])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[3117,100612+11]..[3117,100612+12])
                                                      Ppat_var "i" (lambda/matching.ml[3117,100612+11]..[3117,100612+12])
                                                    pattern (lambda/matching.ml[3117,100612+14]..[3117,100612+16])
                                                      Ppat_var "pm" (lambda/matching.ml[3117,100612+14]..[3117,100612+16])
                                                  ]
                                                pattern (lambda/matching.ml[3117,100612+21]..[3117,100612+24])
                                                  Ppat_var "rem" (lambda/matching.ml[3117,100612+21]..[3117,100612+24])
                                              ]
                                        expression (lambda/matching.ml[3117,100612+28]..[3137,101333+11])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[3118,100642+16]..[3118,100642+32])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[3118,100642+16]..[3118,100642+21])
                                                    Ppat_var "ctx_i" (lambda/matching.ml[3118,100642+16]..[3118,100642+21])
                                                  pattern (lambda/matching.ml[3118,100642+23]..[3118,100642+32])
                                                    Ppat_var "total_rem" (lambda/matching.ml[3118,100642+23]..[3118,100642+32])
                                                ]
                                              expression (lambda/matching.ml[3118,100642+35]..[3118,100642+61])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3118,100642+35]..[3118,100642+48])
                                                  Pexp_ident "Jumps.extract" (lambda/matching.ml[3118,100642+35]..[3118,100642+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3118,100642+49]..[3118,100642+50])
                                                      Pexp_ident "i" (lambda/matching.ml[3118,100642+49]..[3118,100642+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3118,100642+51]..[3118,100642+61])
                                                      Pexp_ident "total_body" (lambda/matching.ml[3118,100642+51]..[3118,100642+61])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[3119,100707+12]..[3136,101317+15])
                                            Pexp_ifthenelse
                                            expression (lambda/matching.ml[3119,100707+15]..[3119,100707+37])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3119,100707+15]..[3119,100707+31])
                                                Pexp_ident "Context.is_empty" (lambda/matching.ml[3119,100707+15]..[3119,100707+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3119,100707+32]..[3119,100707+37])
                                                    Pexp_ident "ctx_i" (lambda/matching.ml[3119,100707+32]..[3119,100707+37])
                                              ]
                                            expression (lambda/matching.ml[3120,100750+14]..[3120,100750+39])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3120,100750+14]..[3120,100750+19])
                                                Pexp_ident "c_rec" (lambda/matching.ml[3120,100750+14]..[3120,100750+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3120,100750+20]..[3120,100750+24])
                                                    Pexp_ident "body" (lambda/matching.ml[3120,100750+20]..[3120,100750+24])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3120,100750+25]..[3120,100750+35])
                                                    Pexp_ident "total_body" (lambda/matching.ml[3120,100750+25]..[3120,100750+35])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3120,100750+36]..[3120,100750+39])
                                                    Pexp_ident "rem" (lambda/matching.ml[3120,100750+36]..[3120,100750+39])
                                              ]
                                            Some
                                              expression (lambda/matching.ml[3121,100790+17]..[3136,101317+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/matching.ml[3122,100813+18]..[3122,100813+25])
                                                      Ppat_var "partial" (lambda/matching.ml[3122,100813+18]..[3122,100813+25])
                                                    expression (lambda/matching.ml[3122,100813+28]..[3124,100888+30])
                                                      Pexp_match
                                                      expression (lambda/matching.ml[3122,100813+34]..[3122,100813+37])
                                                        Pexp_ident "rem" (lambda/matching.ml[3122,100813+34]..[3122,100813+37])
                                                      [
                                                        <case>
                                                          pattern (lambda/matching.ml[3123,100856+18]..[3123,100856+20])
                                                            Ppat_construct "[]" (lambda/matching.ml[3123,100856+18]..[3123,100856+20])
                                                            None
                                                          expression (lambda/matching.ml[3123,100856+24]..[3123,100856+31])
                                                            Pexp_ident "partial" (lambda/matching.ml[3123,100856+24]..[3123,100856+31])
                                                        <case>
                                                          pattern (lambda/matching.ml[3124,100888+18]..[3124,100888+19])
                                                            Ppat_any
                                                          expression (lambda/matching.ml[3124,100888+23]..[3124,100888+30])
                                                            Pexp_construct "Partial" (lambda/matching.ml[3124,100888+23]..[3124,100888+30])
                                                            None
                                                      ]
                                                ]
                                                expression (lambda/matching.ml[3126,100936+14]..[3135,101285+31])
                                                  Pexp_match
                                                  expression (lambda/matching.ml[3126,100936+20]..[3126,100936+45])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3126,100936+20]..[3126,100936+28])
                                                      Pexp_ident "comp_fun" (lambda/matching.ml[3126,100936+20]..[3126,100936+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3126,100936+29]..[3126,100936+36])
                                                          Pexp_ident "partial" (lambda/matching.ml[3126,100936+29]..[3126,100936+36])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3126,100936+37]..[3126,100936+42])
                                                          Pexp_ident "ctx_i" (lambda/matching.ml[3126,100936+37]..[3126,100936+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3126,100936+43]..[3126,100936+45])
                                                          Pexp_ident "pm" (lambda/matching.ml[3126,100936+43]..[3126,100936+45])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lambda/matching.ml[3127,100987+16]..[3127,100987+27])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/matching.ml[3127,100987+16]..[3127,100987+18])
                                                            Ppat_var "li" (lambda/matching.ml[3127,100987+16]..[3127,100987+18])
                                                          pattern (lambda/matching.ml[3127,100987+20]..[3127,100987+27])
                                                            Ppat_var "total_i" (lambda/matching.ml[3127,100987+20]..[3127,100987+27])
                                                        ]
                                                      expression (lambda/matching.ml[3128,101018+16]..[3131,101143+21])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3128,101018+16]..[3128,101018+21])
                                                          Pexp_ident "c_rec" (lambda/matching.ml[3128,101018+16]..[3128,101018+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3129,101040+18]..[3129,101040+52])
                                                              Pexp_construct "Lstaticcatch" (lambda/matching.ml[3129,101040+19]..[3129,101040+31])
                                                              Some
                                                                expression (lambda/matching.ml[3129,101040+32]..[3129,101040+51])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[3129,101040+33]..[3129,101040+37])
                                                                      Pexp_ident "body" (lambda/matching.ml[3129,101040+33]..[3129,101040+37])
                                                                    expression (lambda/matching.ml[3129,101040+39]..[3129,101040+46])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[3129,101040+40]..[3129,101040+41])
  Pexp_ident "i" (lambda/matching.ml[3129,101040+40]..[3129,101040+41])
expression (lambda/matching.ml[3129,101040+43]..[3129,101040+45])
  Pexp_construct "[]" (lambda/matching.ml[3129,101040+43]..[3129,101040+45])
  None
                                                                      ]
                                                                    expression (lambda/matching.ml[3129,101040+48]..[3129,101040+50])
                                                                      Pexp_ident "li" (lambda/matching.ml[3129,101040+48]..[3129,101040+50])
                                                                  ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3130,101093+18]..[3130,101093+49])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3130,101093+19]..[3130,101093+30])
                                                                Pexp_ident "Jumps.union" (lambda/matching.ml[3130,101093+19]..[3130,101093+30])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3130,101093+31]..[3130,101093+38])
                                                                    Pexp_ident "total_i" (lambda/matching.ml[3130,101093+31]..[3130,101093+38])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3130,101093+39]..[3130,101093+48])
                                                                    Pexp_ident "total_rem" (lambda/matching.ml[3130,101093+39]..[3130,101093+48])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3131,101143+18]..[3131,101143+21])
                                                              Pexp_ident "rem" (lambda/matching.ml[3131,101143+18]..[3131,101143+21])
                                                        ]
                                                    <case>
                                                      pattern (lambda/matching.ml[3132,101165+16]..[3132,101165+32])
                                                        Ppat_exception
                                                        pattern (lambda/matching.ml[3132,101165+26]..[3132,101165+32])
                                                          Ppat_construct "Unused" (lambda/matching.ml[3132,101165+26]..[3132,101165+32])
                                                          None
                                                      expression (lambda/matching.ml[3133,101201+16]..[3135,101285+31])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3133,101201+16]..[3133,101201+21])
                                                          Pexp_ident "c_rec" (lambda/matching.ml[3133,101201+16]..[3133,101201+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3134,101223+18]..[3134,101223+61])
                                                              Pexp_construct "Lstaticcatch" (lambda/matching.ml[3134,101223+19]..[3134,101223+31])
                                                              Some
                                                                expression (lambda/matching.ml[3134,101223+32]..[3134,101223+60])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[3134,101223+33]..[3134,101223+37])
                                                                      Pexp_ident "body" (lambda/matching.ml[3134,101223+33]..[3134,101223+37])
                                                                    expression (lambda/matching.ml[3134,101223+39]..[3134,101223+46])
                                                                      Pexp_tuple
                                                                      [
expression (lambda/matching.ml[3134,101223+40]..[3134,101223+41])
  Pexp_ident "i" (lambda/matching.ml[3134,101223+40]..[3134,101223+41])
expression (lambda/matching.ml[3134,101223+43]..[3134,101223+45])
  Pexp_construct "[]" (lambda/matching.ml[3134,101223+43]..[3134,101223+45])
  None
                                                                      ]
                                                                    expression (lambda/matching.ml[3134,101223+48]..[3134,101223+59])
                                                                      Pexp_ident "lambda_unit" (lambda/matching.ml[3134,101223+48]..[3134,101223+59])
                                                                  ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3135,101285+18]..[3135,101285+27])
                                                              Pexp_ident "total_rem" (lambda/matching.ml[3135,101285+18]..[3135,101285+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3135,101285+28]..[3135,101285+31])
                                                              Pexp_ident "rem" (lambda/matching.ml[3135,101285+28]..[3135,101285+31])
                                                        ]
                                                  ]
                                    ]
                          ]
                          expression (lambda/matching.ml[3139,101354+6]..[3146,101628+7])
                            Pexp_match
                            expression (lambda/matching.ml[3139,101354+12]..[3139,101354+44])
                              Pexp_apply
                              expression (lambda/matching.ml[3139,101354+12]..[3139,101354+20])
                                Pexp_ident "comp_fun" (lambda/matching.ml[3139,101354+12]..[3139,101354+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3139,101354+21]..[3139,101354+28])
                                    Pexp_construct "Partial" (lambda/matching.ml[3139,101354+21]..[3139,101354+28])
                                    None
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3139,101354+29]..[3139,101354+32])
                                    Pexp_ident "ctx" (lambda/matching.ml[3139,101354+29]..[3139,101354+32])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3139,101354+33]..[3139,101354+44])
                                    Pexp_ident "first_match" (lambda/matching.ml[3139,101354+33]..[3139,101354+44])
                              ]
                            [
                              <case>
                                pattern (lambda/matching.ml[3140,101404+8]..[3140,101404+24])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3140,101404+8]..[3140,101404+17])
                                      Ppat_var "first_lam" (lambda/matching.ml[3140,101404+8]..[3140,101404+17])
                                    pattern (lambda/matching.ml[3140,101404+19]..[3140,101404+24])
                                      Ppat_var "total" (lambda/matching.ml[3140,101404+19]..[3140,101404+24])
                                  ]
                                expression (lambda/matching.ml[3141,101432+8]..[3141,101432+33])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3141,101432+8]..[3141,101432+13])
                                    Pexp_ident "c_rec" (lambda/matching.ml[3141,101432+8]..[3141,101432+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3141,101432+14]..[3141,101432+23])
                                        Pexp_ident "first_lam" (lambda/matching.ml[3141,101432+14]..[3141,101432+23])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3141,101432+24]..[3141,101432+29])
                                        Pexp_ident "total" (lambda/matching.ml[3141,101432+24]..[3141,101432+29])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3141,101432+30]..[3141,101432+33])
                                        Pexp_ident "rem" (lambda/matching.ml[3141,101432+30]..[3141,101432+33])
                                  ]
                              <case>
                                pattern (lambda/matching.ml[3142,101466+8]..[3142,101466+24])
                                  Ppat_exception
                                  pattern (lambda/matching.ml[3142,101466+18]..[3142,101466+24])
                                    Ppat_construct "Unused" (lambda/matching.ml[3142,101466+18]..[3142,101466+24])
                                    None
                                expression (lambda/matching.ml[3142,101466+28]..[3146,101628+7])
                                  Pexp_match
                                  expression (lambda/matching.ml[3143,101496+14]..[3143,101496+25])
                                    Pexp_ident "next_matchs" (lambda/matching.ml[3143,101496+14]..[3143,101496+25])
                                  [
                                    <case>
                                      pattern (lambda/matching.ml[3144,101527+10]..[3144,101527+12])
                                        Ppat_construct "[]" (lambda/matching.ml[3144,101527+10]..[3144,101527+12])
                                        None
                                      expression (lambda/matching.ml[3144,101527+16]..[3144,101527+28])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3144,101527+16]..[3144,101527+21])
                                          Pexp_ident "raise" (lambda/matching.ml[3144,101527+16]..[3144,101527+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3144,101527+22]..[3144,101527+28])
                                              Pexp_construct "Unused" (lambda/matching.ml[3144,101527+22]..[3144,101527+28])
                                              None
                                        ]
                                    <case>
                                      pattern (lambda/matching.ml[3145,101556+10]..[3145,101556+22])
                                        Ppat_construct "::" (lambda/matching.ml[3145,101556+17]..[3145,101556+19])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[3145,101556+10]..[3145,101556+22]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[3145,101556+10]..[3145,101556+16])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[3145,101556+11]..[3145,101556+12])
                                                    Ppat_any
                                                  pattern (lambda/matching.ml[3145,101556+14]..[3145,101556+15])
                                                    Ppat_var "x" (lambda/matching.ml[3145,101556+14]..[3145,101556+15])
                                                ]
                                              pattern (lambda/matching.ml[3145,101556+20]..[3145,101556+22])
                                                Ppat_var "xs" (lambda/matching.ml[3145,101556+20]..[3145,101556+22])
                                            ]
                                      expression (lambda/matching.ml[3145,101556+26]..[3145,101556+71])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3145,101556+26]..[3145,101556+45])
                                          Pexp_ident "comp_match_handlers" (lambda/matching.ml[3145,101556+26]..[3145,101556+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3145,101556+46]..[3145,101556+54])
                                              Pexp_ident "comp_fun" (lambda/matching.ml[3145,101556+46]..[3145,101556+54])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3145,101556+55]..[3145,101556+62])
                                              Pexp_ident "partial" (lambda/matching.ml[3145,101556+55]..[3145,101556+62])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3145,101556+63]..[3145,101556+66])
                                              Pexp_ident "ctx" (lambda/matching.ml[3145,101556+63]..[3145,101556+66])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3145,101556+67]..[3145,101556+68])
                                              Pexp_ident "x" (lambda/matching.ml[3145,101556+67]..[3145,101556+68])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3145,101556+69]..[3145,101556+71])
                                              Pexp_ident "xs" (lambda/matching.ml[3145,101556+69]..[3145,101556+71])
                                        ]
                                  ]
                            ]
                    ]
    ]
  structure_item (lambda/matching.ml[3151,101689+0]..[3158,101900+35])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3151,101689+8]..[3151,101689+20])
          Ppat_var "name_pattern" (lambda/matching.ml[3151,101689+8]..[3151,101689+20])
        expression (lambda/matching.ml[3151,101689+21]..[3158,101900+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3151,101689+21]..[3151,101689+28])
            Ppat_var "default" (lambda/matching.ml[3151,101689+21]..[3151,101689+28])
          expression (lambda/matching.ml[3151,101689+31]..[3158,101900+35])
            Pexp_function
            [
              <case>
                pattern (lambda/matching.ml[3152,101729+4]..[3152,101729+24])
                  Ppat_construct "::" (lambda/matching.ml[3152,101729+18]..[3152,101729+20])
                  Some
                    []
                    pattern (lambda/matching.ml[3152,101729+4]..[3152,101729+24]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3152,101729+4]..[3152,101729+17])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3152,101729+5]..[3152,101729+13])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3152,101729+6]..[3152,101729+9])
                                  Ppat_var "pat" (lambda/matching.ml[3152,101729+6]..[3152,101729+9])
                                pattern (lambda/matching.ml[3152,101729+11]..[3152,101729+12])
                                  Ppat_any
                              ]
                            pattern (lambda/matching.ml[3152,101729+15]..[3152,101729+16])
                              Ppat_any
                          ]
                        pattern (lambda/matching.ml[3152,101729+21]..[3152,101729+24])
                          Ppat_var "rem" (lambda/matching.ml[3152,101729+21]..[3152,101729+24])
                      ]
                expression (lambda/matching.ml[3152,101729+28]..[3157,101894+5])
                  Pexp_match
                  expression (lambda/matching.ml[3153,101759+12]..[3153,101759+24])
                    Pexp_field
                    expression (lambda/matching.ml[3153,101759+12]..[3153,101759+15])
                      Pexp_ident "pat" (lambda/matching.ml[3153,101759+12]..[3153,101759+15])
                    "pat_desc" (lambda/matching.ml[3153,101759+16]..[3153,101759+24])
                  [
                    <case>
                      pattern (lambda/matching.ml[3154,101789+8]..[3154,101789+24])
                        Ppat_construct "Tpat_var" (lambda/matching.ml[3154,101789+8]..[3154,101789+16])
                        Some
                          []
                          pattern (lambda/matching.ml[3154,101789+17]..[3154,101789+24])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[3154,101789+18]..[3154,101789+20])
                                Ppat_var "id" (lambda/matching.ml[3154,101789+18]..[3154,101789+20])
                              pattern (lambda/matching.ml[3154,101789+22]..[3154,101789+23])
                                Ppat_any
                            ]
                      expression (lambda/matching.ml[3154,101789+28]..[3154,101789+30])
                        Pexp_ident "id" (lambda/matching.ml[3154,101789+28]..[3154,101789+30])
                    <case>
                      pattern (lambda/matching.ml[3155,101820+8]..[3155,101820+29])
                        Ppat_construct "Tpat_alias" (lambda/matching.ml[3155,101820+8]..[3155,101820+18])
                        Some
                          []
                          pattern (lambda/matching.ml[3155,101820+19]..[3155,101820+29])
                            Ppat_tuple
                            [
                              pattern (lambda/matching.ml[3155,101820+20]..[3155,101820+21])
                                Ppat_any
                              pattern (lambda/matching.ml[3155,101820+23]..[3155,101820+25])
                                Ppat_var "id" (lambda/matching.ml[3155,101820+23]..[3155,101820+25])
                              pattern (lambda/matching.ml[3155,101820+27]..[3155,101820+28])
                                Ppat_any
                            ]
                      expression (lambda/matching.ml[3155,101820+33]..[3155,101820+35])
                        Pexp_ident "id" (lambda/matching.ml[3155,101820+33]..[3155,101820+35])
                    <case>
                      pattern (lambda/matching.ml[3156,101856+8]..[3156,101856+9])
                        Ppat_any
                      expression (lambda/matching.ml[3156,101856+13]..[3156,101856+37])
                        Pexp_apply
                        expression (lambda/matching.ml[3156,101856+13]..[3156,101856+25])
                          Pexp_ident "name_pattern" (lambda/matching.ml[3156,101856+13]..[3156,101856+25])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3156,101856+26]..[3156,101856+33])
                              Pexp_ident "default" (lambda/matching.ml[3156,101856+26]..[3156,101856+33])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3156,101856+34]..[3156,101856+37])
                              Pexp_ident "rem" (lambda/matching.ml[3156,101856+34]..[3156,101856+37])
                        ]
                  ]
              <case>
                pattern (lambda/matching.ml[3158,101900+4]..[3158,101900+5])
                  Ppat_any
                expression (lambda/matching.ml[3158,101900+9]..[3158,101900+35])
                  Pexp_apply
                  expression (lambda/matching.ml[3158,101900+9]..[3158,101900+27])
                    Pexp_ident "Ident.create_local" (lambda/matching.ml[3158,101900+9]..[3158,101900+27])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3158,101900+28]..[3158,101900+35])
                        Pexp_ident "default" (lambda/matching.ml[3158,101900+28]..[3158,101900+35])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[3160,101937+0]..[3165,102055+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3160,101937+4]..[3160,101937+14])
          Ppat_var "arg_to_var" (lambda/matching.ml[3160,101937+4]..[3160,101937+14])
        expression (lambda/matching.ml[3160,101937+15]..[3165,102055+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3160,101937+15]..[3160,101937+18])
            Ppat_var "arg" (lambda/matching.ml[3160,101937+15]..[3160,101937+18])
          expression (lambda/matching.ml[3160,101937+19]..[3165,102055+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3160,101937+19]..[3160,101937+22])
              Ppat_var "cls" (lambda/matching.ml[3160,101937+19]..[3160,101937+22])
            expression (lambda/matching.ml[3161,101962+2]..[3165,102055+17])
              Pexp_match
              expression (lambda/matching.ml[3161,101962+8]..[3161,101962+11])
                Pexp_ident "arg" (lambda/matching.ml[3161,101962+8]..[3161,101962+11])
              [
                <case>
                  pattern (lambda/matching.ml[3162,101979+4]..[3162,101979+10])
                    Ppat_construct "Lvar" (lambda/matching.ml[3162,101979+4]..[3162,101979+8])
                    Some
                      []
                      pattern (lambda/matching.ml[3162,101979+9]..[3162,101979+10])
                        Ppat_var "v" (lambda/matching.ml[3162,101979+9]..[3162,101979+10])
                  expression (lambda/matching.ml[3162,101979+14]..[3162,101979+22])
                    Pexp_tuple
                    [
                      expression (lambda/matching.ml[3162,101979+15]..[3162,101979+16])
                        Pexp_ident "v" (lambda/matching.ml[3162,101979+15]..[3162,101979+16])
                      expression (lambda/matching.ml[3162,101979+18]..[3162,101979+21])
                        Pexp_ident "arg" (lambda/matching.ml[3162,101979+18]..[3162,101979+21])
                    ]
                <case>
                  pattern (lambda/matching.ml[3163,102002+4]..[3163,102002+5])
                    Ppat_any
                  expression (lambda/matching.ml[3164,102011+6]..[3165,102055+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[3164,102011+10]..[3164,102011+11])
                          Ppat_var "v" (lambda/matching.ml[3164,102011+10]..[3164,102011+11])
                        expression (lambda/matching.ml[3164,102011+14]..[3164,102011+40])
                          Pexp_apply
                          expression (lambda/matching.ml[3164,102011+14]..[3164,102011+26])
                            Pexp_ident "name_pattern" (lambda/matching.ml[3164,102011+14]..[3164,102011+26])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3164,102011+27]..[3164,102011+36])
                                Pexp_constant PConst_string("*match*",(lambda/matching.ml[3164,102011+28]..[3164,102011+35]),None)
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3164,102011+37]..[3164,102011+40])
                                Pexp_ident "cls" (lambda/matching.ml[3164,102011+37]..[3164,102011+40])
                          ]
                    ]
                    expression (lambda/matching.ml[3165,102055+6]..[3165,102055+17])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3165,102055+7]..[3165,102055+8])
                          Pexp_ident "v" (lambda/matching.ml[3165,102055+7]..[3165,102055+8])
                        expression (lambda/matching.ml[3165,102055+10]..[3165,102055+16])
                          Pexp_construct "Lvar" (lambda/matching.ml[3165,102055+10]..[3165,102055+14])
                          Some
                            expression (lambda/matching.ml[3165,102055+15]..[3165,102055+16])
                              Pexp_ident "v" (lambda/matching.ml[3165,102055+15]..[3165,102055+16])
                      ]
              ]
    ]
  structure_item (lambda/matching.ml[3178,102346+0]..[3325,107676+34])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3178,102346+8]..[3178,102346+21])
          Ppat_var "compile_match" (lambda/matching.ml[3178,102346+8]..[3178,102346+21])
        expression (lambda/matching.ml[3178,102346+22]..[3191,102828+78]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3178,102346+23]..[3178,102346+29])
            Ppat_var "scopes" (lambda/matching.ml[3178,102346+23]..[3178,102346+29])
          expression (lambda/matching.ml[3178,102346+30]..[3191,102828+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3178,102346+30]..[3178,102346+34])
              Ppat_var "repr" (lambda/matching.ml[3178,102346+30]..[3178,102346+34])
            expression (lambda/matching.ml[3178,102346+35]..[3191,102828+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3178,102346+35]..[3178,102346+42])
                Ppat_var "partial" (lambda/matching.ml[3178,102346+35]..[3178,102346+42])
              expression (lambda/matching.ml[3178,102346+43]..[3191,102828+78]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3178,102346+43]..[3178,102346+46])
                  Ppat_var "ctx" (lambda/matching.ml[3178,102346+43]..[3178,102346+46])
                expression (lambda/matching.ml[3179,102393+4]..[3191,102828+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3179,102393+4]..[3179,102393+41])
                    Ppat_constraint
                    pattern (lambda/matching.ml[3179,102393+5]..[3179,102393+6])
                      Ppat_var "m" (lambda/matching.ml[3179,102393+5]..[3179,102393+6])
                    core_type (lambda/matching.ml[3179,102393+9]..[3179,102393+40])
                      Ptyp_constr "pattern_matching" (lambda/matching.ml[3179,102393+24]..[3179,102393+40])
                      [
                        core_type (lambda/matching.ml[3179,102393+9]..[3179,102393+23])
                          Ptyp_constr "initial_clause" (lambda/matching.ml[3179,102393+9]..[3179,102393+23])
                          []
                      ]
                  expression (lambda/matching.ml[3180,102437+2]..[3191,102828+78])
                    Pexp_match
                    expression (lambda/matching.ml[3180,102437+8]..[3180,102437+15])
                      Pexp_field
                      expression (lambda/matching.ml[3180,102437+8]..[3180,102437+9])
                        Pexp_ident "m" (lambda/matching.ml[3180,102437+8]..[3180,102437+9])
                      "cases" (lambda/matching.ml[3180,102437+10]..[3180,102437+15])
                    [
                      <case>
                        pattern (lambda/matching.ml[3181,102458+4]..[3181,102458+23])
                          Ppat_construct "::" (lambda/matching.ml[3181,102458+17]..[3181,102458+19])
                          Some
                            []
                            pattern (lambda/matching.ml[3181,102458+4]..[3181,102458+23]) ghost
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3181,102458+4]..[3181,102458+16])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3181,102458+5]..[3181,102458+7])
                                      Ppat_construct "[]" (lambda/matching.ml[3181,102458+5]..[3181,102458+7])
                                      None
                                    pattern (lambda/matching.ml[3181,102458+9]..[3181,102458+15])
                                      Ppat_var "action" (lambda/matching.ml[3181,102458+9]..[3181,102458+15])
                                  ]
                                pattern (lambda/matching.ml[3181,102458+20]..[3181,102458+23])
                                  Ppat_var "rem" (lambda/matching.ml[3181,102458+20]..[3181,102458+23])
                              ]
                        expression (lambda/matching.ml[3182,102485+6]..[3188,102704+47])
                          Pexp_ifthenelse
                          expression (lambda/matching.ml[3182,102485+9]..[3182,102485+26])
                            Pexp_apply
                            expression (lambda/matching.ml[3182,102485+9]..[3182,102485+19])
                              Pexp_ident "is_guarded" (lambda/matching.ml[3182,102485+9]..[3182,102485+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3182,102485+20]..[3182,102485+26])
                                  Pexp_ident "action" (lambda/matching.ml[3182,102485+20]..[3182,102485+26])
                            ]
                          expression (lambda/matching.ml[3183,102517+8]..[3186,102628+64])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3183,102517+12]..[3183,102517+25])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3183,102517+12]..[3183,102517+18])
                                      Ppat_var "lambda" (lambda/matching.ml[3183,102517+12]..[3183,102517+18])
                                    pattern (lambda/matching.ml[3183,102517+20]..[3183,102517+25])
                                      Ppat_var "total" (lambda/matching.ml[3183,102517+20]..[3183,102517+25])
                                  ]
                                expression (lambda/matching.ml[3184,102545+10]..[3184,102545+71])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3184,102545+10]..[3184,102545+23])
                                    Pexp_ident "compile_match" (lambda/matching.ml[3184,102545+10]..[3184,102545+23])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3184,102545+25]..[3184,102545+31])
                                        Pexp_ident "scopes" (lambda/matching.ml[3184,102545+25]..[3184,102545+31])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3184,102545+32]..[3184,102545+36])
                                        Pexp_construct "None" (lambda/matching.ml[3184,102545+32]..[3184,102545+36])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3184,102545+37]..[3184,102545+44])
                                        Pexp_ident "partial" (lambda/matching.ml[3184,102545+37]..[3184,102545+44])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3184,102545+45]..[3184,102545+48])
                                        Pexp_ident "ctx" (lambda/matching.ml[3184,102545+45]..[3184,102545+48])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3184,102545+49]..[3184,102545+71])
                                        Pexp_record
                                        [
                                          "cases" (lambda/matching.ml[3184,102545+58]..[3184,102545+63])
                                            expression (lambda/matching.ml[3184,102545+66]..[3184,102545+69])
                                              Pexp_ident "rem" (lambda/matching.ml[3184,102545+66]..[3184,102545+69])
                                        ]
                                        Some
                                          expression (lambda/matching.ml[3184,102545+51]..[3184,102545+52])
                                            Pexp_ident "m" (lambda/matching.ml[3184,102545+51]..[3184,102545+52])
                                  ]
                            ]
                            expression (lambda/matching.ml[3186,102628+8]..[3186,102628+64])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3186,102628+9]..[3186,102628+56])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3186,102628+9]..[3186,102628+21])
                                    Pexp_ident "event_branch" (lambda/matching.ml[3186,102628+9]..[3186,102628+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3186,102628+22]..[3186,102628+26])
                                        Pexp_ident "repr" (lambda/matching.ml[3186,102628+22]..[3186,102628+26])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3186,102628+27]..[3186,102628+56])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3186,102628+28]..[3186,102628+41])
                                          Pexp_ident "patch_guarded" (lambda/matching.ml[3186,102628+28]..[3186,102628+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3186,102628+42]..[3186,102628+48])
                                              Pexp_ident "lambda" (lambda/matching.ml[3186,102628+42]..[3186,102628+48])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3186,102628+49]..[3186,102628+55])
                                              Pexp_ident "action" (lambda/matching.ml[3186,102628+49]..[3186,102628+55])
                                        ]
                                  ]
                                expression (lambda/matching.ml[3186,102628+58]..[3186,102628+63])
                                  Pexp_ident "total" (lambda/matching.ml[3186,102628+58]..[3186,102628+63])
                              ]
                          Some
                            expression (lambda/matching.ml[3188,102704+8]..[3188,102704+47])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3188,102704+9]..[3188,102704+33])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3188,102704+9]..[3188,102704+21])
                                    Pexp_ident "event_branch" (lambda/matching.ml[3188,102704+9]..[3188,102704+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3188,102704+22]..[3188,102704+26])
                                        Pexp_ident "repr" (lambda/matching.ml[3188,102704+22]..[3188,102704+26])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3188,102704+27]..[3188,102704+33])
                                        Pexp_ident "action" (lambda/matching.ml[3188,102704+27]..[3188,102704+33])
                                  ]
                                expression (lambda/matching.ml[3188,102704+35]..[3188,102704+46])
                                  Pexp_ident "Jumps.empty" (lambda/matching.ml[3188,102704+35]..[3188,102704+46])
                              ]
                      <case>
                        pattern (lambda/matching.ml[3189,102752+4]..[3189,102752+18])
                          Ppat_var "nonempty_cases" (lambda/matching.ml[3189,102752+4]..[3189,102752+18])
                        expression (lambda/matching.ml[3190,102774+6]..[3191,102828+78])
                          Pexp_apply
                          expression (lambda/matching.ml[3190,102774+6]..[3190,102774+28])
                            Pexp_ident "compile_match_nonempty" (lambda/matching.ml[3190,102774+6]..[3190,102774+28])
                          [
                            <arg>
                            Labelled "scopes"
                              expression (lambda/matching.ml[3190,102774+30]..[3190,102774+36])
                                Pexp_ident "scopes" (lambda/matching.ml[3190,102774+30]..[3190,102774+36])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3190,102774+37]..[3190,102774+41])
                                Pexp_ident "repr" (lambda/matching.ml[3190,102774+37]..[3190,102774+41])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3190,102774+42]..[3190,102774+49])
                                Pexp_ident "partial" (lambda/matching.ml[3190,102774+42]..[3190,102774+49])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3190,102774+50]..[3190,102774+53])
                                Pexp_ident "ctx" (lambda/matching.ml[3190,102774+50]..[3190,102774+53])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3191,102828+8]..[3191,102828+78])
                                Pexp_record
                                [
                                  "cases" (lambda/matching.ml[3191,102828+17]..[3191,102828+22])
                                    expression (lambda/matching.ml[3191,102828+25]..[3191,102828+76])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3191,102828+25]..[3191,102828+36])
                                        Pexp_ident "map_on_rows" (lambda/matching.ml[3191,102828+25]..[3191,102828+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3191,102828+37]..[3191,102828+61])
                                            Pexp_ident "Non_empty_row.of_initial" (lambda/matching.ml[3191,102828+37]..[3191,102828+61])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3191,102828+62]..[3191,102828+76])
                                            Pexp_ident "nonempty_cases" (lambda/matching.ml[3191,102828+62]..[3191,102828+76])
                                      ]
                                ]
                                Some
                                  expression (lambda/matching.ml[3191,102828+10]..[3191,102828+11])
                                    Pexp_ident "m" (lambda/matching.ml[3191,102828+10]..[3191,102828+11])
                          ]
                    ]
      <def>
        pattern (lambda/matching.ml[3193,102908+4]..[3193,102908+26])
          Ppat_var "compile_match_nonempty" (lambda/matching.ml[3193,102908+4]..[3193,102908+26])
        expression (lambda/matching.ml[3193,102908+27]..[3205,103507+21]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3193,102908+28]..[3193,102908+34])
            Ppat_var "scopes" (lambda/matching.ml[3193,102908+28]..[3193,102908+34])
          expression (lambda/matching.ml[3193,102908+35]..[3205,103507+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3193,102908+35]..[3193,102908+39])
              Ppat_var "repr" (lambda/matching.ml[3193,102908+35]..[3193,102908+39])
            expression (lambda/matching.ml[3193,102908+40]..[3205,103507+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3193,102908+40]..[3193,102908+47])
                Ppat_var "partial" (lambda/matching.ml[3193,102908+40]..[3193,102908+47])
              expression (lambda/matching.ml[3193,102908+48]..[3205,103507+21]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3193,102908+48]..[3193,102908+51])
                  Ppat_var "ctx" (lambda/matching.ml[3193,102908+48]..[3193,102908+51])
                expression (lambda/matching.ml[3194,102960+4]..[3205,103507+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3194,102960+4]..[3194,102960+67])
                    Ppat_constraint
                    pattern (lambda/matching.ml[3194,102960+5]..[3194,102960+6])
                      Ppat_var "m" (lambda/matching.ml[3194,102960+5]..[3194,102960+6])
                    core_type (lambda/matching.ml[3194,102960+9]..[3194,102960+66])
                      Ptyp_constr "pattern_matching" (lambda/matching.ml[3194,102960+50]..[3194,102960+66])
                      [
                        core_type (lambda/matching.ml[3194,102960+9]..[3194,102960+49])
                          Ptyp_constr "clause" (lambda/matching.ml[3194,102960+43]..[3194,102960+49])
                          [
                            core_type (lambda/matching.ml[3194,102960+9]..[3194,102960+42])
                              Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[3194,102960+27]..[3194,102960+42])
                              [
                                core_type (lambda/matching.ml[3194,102960+9]..[3194,102960+26])
                                  Ptyp_constr "Typedtree.pattern" (lambda/matching.ml[3194,102960+9]..[3194,102960+26])
                                  []
                              ]
                          ]
                      ]
                  expression (lambda/matching.ml[3195,103030+2]..[3205,103507+21])
                    Pexp_match
                    expression (lambda/matching.ml[3195,103030+8]..[3195,103030+9])
                      Pexp_ident "m" (lambda/matching.ml[3195,103030+8]..[3195,103030+9])
                    [
                      <case>
                        pattern (lambda/matching.ml[3196,103045+4]..[3196,103045+29])
                          Ppat_record Closed
                          [
                            "cases" (lambda/matching.ml[3196,103045+6]..[3196,103045+11])
                              pattern (lambda/matching.ml[3196,103045+14]..[3196,103045+16])
                                Ppat_construct "[]" (lambda/matching.ml[3196,103045+14]..[3196,103045+16])
                                None
                            "args" (lambda/matching.ml[3196,103045+18]..[3196,103045+22])
                              pattern (lambda/matching.ml[3196,103045+25]..[3196,103045+27])
                                Ppat_construct "[]" (lambda/matching.ml[3196,103045+25]..[3196,103045+27])
                                None
                          ]
                        expression (lambda/matching.ml[3196,103045+33]..[3196,103045+48])
                          Pexp_apply
                          expression (lambda/matching.ml[3196,103045+33]..[3196,103045+42])
                            Pexp_ident "comp_exit" (lambda/matching.ml[3196,103045+33]..[3196,103045+42])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3196,103045+43]..[3196,103045+46])
                                Pexp_ident "ctx" (lambda/matching.ml[3196,103045+43]..[3196,103045+46])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3196,103045+47]..[3196,103045+48])
                                Pexp_ident "m" (lambda/matching.ml[3196,103045+47]..[3196,103045+48])
                          ]
                      <case>
                        pattern (lambda/matching.ml[3197,103094+4]..[3197,103094+33])
                          Ppat_record Closed
                          [
                            "args" (lambda/matching.ml[3197,103094+6]..[3197,103094+10])
                              pattern (lambda/matching.ml[3197,103094+13]..[3197,103094+31])
                                Ppat_construct "::" (lambda/matching.ml[3197,103094+24]..[3197,103094+26])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3197,103094+13]..[3197,103094+31]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3197,103094+13]..[3197,103094+23])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3197,103094+14]..[3197,103094+17])
                                            Ppat_var "arg" (lambda/matching.ml[3197,103094+14]..[3197,103094+17])
                                          pattern (lambda/matching.ml[3197,103094+19]..[3197,103094+22])
                                            Ppat_var "str" (lambda/matching.ml[3197,103094+19]..[3197,103094+22])
                                        ]
                                      pattern (lambda/matching.ml[3197,103094+27]..[3197,103094+31])
                                        Ppat_var "argl" (lambda/matching.ml[3197,103094+27]..[3197,103094+31])
                                    ]
                          ]
                        expression (lambda/matching.ml[3198,103131+6]..[3204,103429+77])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3198,103131+10]..[3198,103131+19])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3198,103131+10]..[3198,103131+11])
                                    Ppat_var "v" (lambda/matching.ml[3198,103131+10]..[3198,103131+11])
                                  pattern (lambda/matching.ml[3198,103131+13]..[3198,103131+19])
                                    Ppat_var "newarg" (lambda/matching.ml[3198,103131+13]..[3198,103131+19])
                                ]
                              expression (lambda/matching.ml[3198,103131+22]..[3198,103131+44])
                                Pexp_apply
                                expression (lambda/matching.ml[3198,103131+22]..[3198,103131+32])
                                  Pexp_ident "arg_to_var" (lambda/matching.ml[3198,103131+22]..[3198,103131+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3198,103131+33]..[3198,103131+36])
                                      Pexp_ident "arg" (lambda/matching.ml[3198,103131+33]..[3198,103131+36])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3198,103131+37]..[3198,103131+44])
                                      Pexp_field
                                      expression (lambda/matching.ml[3198,103131+37]..[3198,103131+38])
                                        Pexp_ident "m" (lambda/matching.ml[3198,103131+37]..[3198,103131+38])
                                      "cases" (lambda/matching.ml[3198,103131+39]..[3198,103131+44])
                                ]
                          ]
                          expression (lambda/matching.ml[3199,103179+6]..[3204,103429+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3199,103179+10]..[3199,103179+14])
                                  Ppat_var "args" (lambda/matching.ml[3199,103179+10]..[3199,103179+14])
                                expression (lambda/matching.ml[3199,103179+17]..[3199,103179+40])
                                  Pexp_construct "::" (lambda/matching.ml[3199,103179+33]..[3199,103179+35])
                                  Some
                                    expression (lambda/matching.ml[3199,103179+17]..[3199,103179+40]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[3199,103179+17]..[3199,103179+32])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3199,103179+18]..[3199,103179+24])
                                              Pexp_ident "newarg" (lambda/matching.ml[3199,103179+18]..[3199,103179+24])
                                            expression (lambda/matching.ml[3199,103179+26]..[3199,103179+31])
                                              Pexp_construct "Alias" (lambda/matching.ml[3199,103179+26]..[3199,103179+31])
                                              None
                                          ]
                                        expression (lambda/matching.ml[3199,103179+36]..[3199,103179+40])
                                          Pexp_ident "argl" (lambda/matching.ml[3199,103179+36]..[3199,103179+40])
                                      ]
                            ]
                            expression (lambda/matching.ml[3200,103223+6]..[3204,103429+77])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3200,103223+10]..[3200,103223+15])
                                    Ppat_var "cases" (lambda/matching.ml[3200,103223+10]..[3200,103223+15])
                                  expression (lambda/matching.ml[3200,103223+18]..[3200,103223+71])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3200,103223+18]..[3200,103223+26])
                                      Pexp_ident "List.map" (lambda/matching.ml[3200,103223+18]..[3200,103223+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3200,103223+27]..[3200,103223+63])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3200,103223+28]..[3200,103223+50])
                                            Pexp_ident "half_simplify_nonempty" (lambda/matching.ml[3200,103223+28]..[3200,103223+50])
                                          [
                                            <arg>
                                            Labelled "arg"
                                              expression (lambda/matching.ml[3200,103223+56]..[3200,103223+62])
                                                Pexp_ident "newarg" (lambda/matching.ml[3200,103223+56]..[3200,103223+62])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3200,103223+64]..[3200,103223+71])
                                          Pexp_field
                                          expression (lambda/matching.ml[3200,103223+64]..[3200,103223+65])
                                            Pexp_ident "m" (lambda/matching.ml[3200,103223+64]..[3200,103223+65])
                                          "cases" (lambda/matching.ml[3200,103223+66]..[3200,103223+71])
                                    ]
                              ]
                              expression (lambda/matching.ml[3201,103298+6]..[3204,103429+77])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3201,103298+10]..[3201,103298+11])
                                      Ppat_var "m" (lambda/matching.ml[3201,103298+10]..[3201,103298+11])
                                    expression (lambda/matching.ml[3201,103298+14]..[3201,103298+36])
                                      Pexp_record
                                      [
                                        "args" (lambda/matching.ml[3201,103298+23]..[3201,103298+27]) ghost
                                          expression (lambda/matching.ml[3201,103298+23]..[3201,103298+27])
                                            Pexp_ident "args" (lambda/matching.ml[3201,103298+23]..[3201,103298+27])
                                        "cases" (lambda/matching.ml[3201,103298+29]..[3201,103298+34]) ghost
                                          expression (lambda/matching.ml[3201,103298+29]..[3201,103298+34])
                                            Pexp_ident "cases" (lambda/matching.ml[3201,103298+29]..[3201,103298+34])
                                      ]
                                      Some
                                        expression (lambda/matching.ml[3201,103298+16]..[3201,103298+17])
                                          Pexp_ident "m" (lambda/matching.ml[3201,103298+16]..[3201,103298+17])
                                ]
                                expression (lambda/matching.ml[3202,103338+6]..[3204,103429+77])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[3202,103338+10]..[3202,103338+26])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3202,103338+10]..[3202,103338+21])
                                            Ppat_var "first_match" (lambda/matching.ml[3202,103338+10]..[3202,103338+21])
                                          pattern (lambda/matching.ml[3202,103338+23]..[3202,103338+26])
                                            Ppat_var "rem" (lambda/matching.ml[3202,103338+23]..[3202,103338+26])
                                        ]
                                      expression (lambda/matching.ml[3203,103367+8]..[3203,103367+58])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3203,103367+8]..[3203,103367+44])
                                          Pexp_ident "split_and_precompile_half_simplified" (lambda/matching.ml[3203,103367+8]..[3203,103367+44])
                                        [
                                          <arg>
                                          Labelled "arg"
                                            expression (lambda/matching.ml[3203,103367+50]..[3203,103367+56])
                                              Pexp_ident "newarg" (lambda/matching.ml[3203,103367+50]..[3203,103367+56])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3203,103367+57]..[3203,103367+58])
                                              Pexp_ident "m" (lambda/matching.ml[3203,103367+57]..[3203,103367+58])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[3204,103429+6]..[3204,103429+77])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3204,103429+6]..[3204,103429+22])
                                      Pexp_ident "combine_handlers" (lambda/matching.ml[3204,103429+6]..[3204,103429+22])
                                    [
                                      <arg>
                                      Labelled "scopes"
                                        expression (lambda/matching.ml[3204,103429+24]..[3204,103429+30])
                                          Pexp_ident "scopes" (lambda/matching.ml[3204,103429+24]..[3204,103429+30])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+31]..[3204,103429+35])
                                          Pexp_ident "repr" (lambda/matching.ml[3204,103429+31]..[3204,103429+35])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+36]..[3204,103429+43])
                                          Pexp_ident "partial" (lambda/matching.ml[3204,103429+36]..[3204,103429+43])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+44]..[3204,103429+47])
                                          Pexp_ident "ctx" (lambda/matching.ml[3204,103429+44]..[3204,103429+47])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+48]..[3204,103429+61])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3204,103429+49]..[3204,103429+50])
                                              Pexp_ident "v" (lambda/matching.ml[3204,103429+49]..[3204,103429+50])
                                            expression (lambda/matching.ml[3204,103429+52]..[3204,103429+55])
                                              Pexp_ident "str" (lambda/matching.ml[3204,103429+52]..[3204,103429+55])
                                            expression (lambda/matching.ml[3204,103429+57]..[3204,103429+60])
                                              Pexp_ident "arg" (lambda/matching.ml[3204,103429+57]..[3204,103429+60])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+62]..[3204,103429+73])
                                          Pexp_ident "first_match" (lambda/matching.ml[3204,103429+62]..[3204,103429+73])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3204,103429+74]..[3204,103429+77])
                                          Pexp_ident "rem" (lambda/matching.ml[3204,103429+74]..[3204,103429+77])
                                    ]
                      <case>
                        pattern (lambda/matching.ml[3205,103507+4]..[3205,103507+5])
                          Ppat_any
                        expression (lambda/matching.ml[3205,103507+9]..[3205,103507+21])
                          Pexp_assert
                          expression (lambda/matching.ml[3205,103507+16]..[3205,103507+21])
                            Pexp_construct "false" (lambda/matching.ml[3205,103507+16]..[3205,103507+21])
                            None
                    ]
      <def>
        pattern (lambda/matching.ml[3207,103530+4]..[3207,103530+28])
          Ppat_var "compile_match_simplified" (lambda/matching.ml[3207,103530+4]..[3207,103530+28])
        expression (lambda/matching.ml[3207,103530+29]..[3216,103958+21]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3207,103530+30]..[3207,103530+36])
            Ppat_var "scopes" (lambda/matching.ml[3207,103530+30]..[3207,103530+36])
          expression (lambda/matching.ml[3207,103530+37]..[3216,103958+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3207,103530+37]..[3207,103530+41])
              Ppat_var "repr" (lambda/matching.ml[3207,103530+37]..[3207,103530+41])
            expression (lambda/matching.ml[3207,103530+42]..[3216,103958+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3207,103530+42]..[3207,103530+49])
                Ppat_var "partial" (lambda/matching.ml[3207,103530+42]..[3207,103530+49])
              expression (lambda/matching.ml[3207,103530+50]..[3216,103958+21]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3207,103530+50]..[3207,103530+53])
                  Ppat_var "ctx" (lambda/matching.ml[3207,103530+50]..[3207,103530+53])
                expression (lambda/matching.ml[3208,103584+4]..[3216,103958+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3208,103584+4]..[3208,103584+40])
                    Ppat_constraint
                    pattern (lambda/matching.ml[3208,103584+5]..[3208,103584+6])
                      Ppat_var "m" (lambda/matching.ml[3208,103584+5]..[3208,103584+6])
                    core_type (lambda/matching.ml[3208,103584+9]..[3208,103584+39])
                      Ptyp_constr "pattern_matching" (lambda/matching.ml[3208,103584+23]..[3208,103584+39])
                      [
                        core_type (lambda/matching.ml[3208,103584+9]..[3208,103584+22])
                          Ptyp_constr "Simple.clause" (lambda/matching.ml[3208,103584+9]..[3208,103584+22])
                          []
                      ]
                  expression (lambda/matching.ml[3209,103627+2]..[3216,103958+21])
                    Pexp_match
                    expression (lambda/matching.ml[3209,103627+8]..[3209,103627+9])
                      Pexp_ident "m" (lambda/matching.ml[3209,103627+8]..[3209,103627+9])
                    [
                      <case>
                        pattern (lambda/matching.ml[3210,103642+4]..[3210,103642+29])
                          Ppat_record Closed
                          [
                            "cases" (lambda/matching.ml[3210,103642+6]..[3210,103642+11])
                              pattern (lambda/matching.ml[3210,103642+14]..[3210,103642+16])
                                Ppat_construct "[]" (lambda/matching.ml[3210,103642+14]..[3210,103642+16])
                                None
                            "args" (lambda/matching.ml[3210,103642+18]..[3210,103642+22])
                              pattern (lambda/matching.ml[3210,103642+25]..[3210,103642+27])
                                Ppat_construct "[]" (lambda/matching.ml[3210,103642+25]..[3210,103642+27])
                                None
                          ]
                        expression (lambda/matching.ml[3210,103642+33]..[3210,103642+48])
                          Pexp_apply
                          expression (lambda/matching.ml[3210,103642+33]..[3210,103642+42])
                            Pexp_ident "comp_exit" (lambda/matching.ml[3210,103642+33]..[3210,103642+42])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3210,103642+43]..[3210,103642+46])
                                Pexp_ident "ctx" (lambda/matching.ml[3210,103642+43]..[3210,103642+46])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3210,103642+47]..[3210,103642+48])
                                Pexp_ident "m" (lambda/matching.ml[3210,103642+47]..[3210,103642+48])
                          ]
                      <case>
                        pattern (lambda/matching.ml[3211,103691+4]..[3211,103691+45])
                          Ppat_record Closed
                          [
                            "args" (lambda/matching.ml[3211,103691+6]..[3211,103691+10])
                              pattern (lambda/matching.ml[3211,103691+13]..[3211,103691+43])
                                Ppat_construct "::" (lambda/matching.ml[3211,103691+36]..[3211,103691+38])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3211,103691+13]..[3211,103691+43]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3211,103691+13]..[3211,103691+35])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3211,103691+14]..[3211,103691+29])
                                            Ppat_alias "arg" (lambda/matching.ml[3211,103691+25]..[3211,103691+28])
                                            pattern (lambda/matching.ml[3211,103691+15]..[3211,103691+21])
                                              Ppat_construct "Lvar" (lambda/matching.ml[3211,103691+15]..[3211,103691+19])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3211,103691+20]..[3211,103691+21])
                                                  Ppat_var "v" (lambda/matching.ml[3211,103691+20]..[3211,103691+21])
                                          pattern (lambda/matching.ml[3211,103691+31]..[3211,103691+34])
                                            Ppat_var "str" (lambda/matching.ml[3211,103691+31]..[3211,103691+34])
                                        ]
                                      pattern (lambda/matching.ml[3211,103691+39]..[3211,103691+43])
                                        Ppat_var "argl" (lambda/matching.ml[3211,103691+39]..[3211,103691+43])
                                    ]
                          ]
                        expression (lambda/matching.ml[3212,103740+6]..[3215,103880+77])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3212,103740+10]..[3212,103740+14])
                                Ppat_var "args" (lambda/matching.ml[3212,103740+10]..[3212,103740+14])
                              expression (lambda/matching.ml[3212,103740+17]..[3212,103740+37])
                                Pexp_construct "::" (lambda/matching.ml[3212,103740+30]..[3212,103740+32])
                                Some
                                  expression (lambda/matching.ml[3212,103740+17]..[3212,103740+37]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3212,103740+17]..[3212,103740+29])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[3212,103740+18]..[3212,103740+21])
                                            Pexp_ident "arg" (lambda/matching.ml[3212,103740+18]..[3212,103740+21])
                                          expression (lambda/matching.ml[3212,103740+23]..[3212,103740+28])
                                            Pexp_construct "Alias" (lambda/matching.ml[3212,103740+23]..[3212,103740+28])
                                            None
                                        ]
                                      expression (lambda/matching.ml[3212,103740+33]..[3212,103740+37])
                                        Pexp_ident "argl" (lambda/matching.ml[3212,103740+33]..[3212,103740+37])
                                    ]
                          ]
                          expression (lambda/matching.ml[3213,103781+6]..[3215,103880+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3213,103781+10]..[3213,103781+11])
                                  Ppat_var "m" (lambda/matching.ml[3213,103781+10]..[3213,103781+11])
                                expression (lambda/matching.ml[3213,103781+14]..[3213,103781+29])
                                  Pexp_record
                                  [
                                    "args" (lambda/matching.ml[3213,103781+23]..[3213,103781+27]) ghost
                                      expression (lambda/matching.ml[3213,103781+23]..[3213,103781+27])
                                        Pexp_ident "args" (lambda/matching.ml[3213,103781+23]..[3213,103781+27])
                                  ]
                                  Some
                                    expression (lambda/matching.ml[3213,103781+16]..[3213,103781+17])
                                      Pexp_ident "m" (lambda/matching.ml[3213,103781+16]..[3213,103781+17])
                            ]
                            expression (lambda/matching.ml[3214,103814+6]..[3215,103880+77])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3214,103814+10]..[3214,103814+26])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3214,103814+10]..[3214,103814+21])
                                        Ppat_var "first_match" (lambda/matching.ml[3214,103814+10]..[3214,103814+21])
                                      pattern (lambda/matching.ml[3214,103814+23]..[3214,103814+26])
                                        Ppat_var "rem" (lambda/matching.ml[3214,103814+23]..[3214,103814+26])
                                    ]
                                  expression (lambda/matching.ml[3214,103814+29]..[3214,103814+62])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3214,103814+29]..[3214,103814+60])
                                      Pexp_ident "split_and_precompile_simplified" (lambda/matching.ml[3214,103814+29]..[3214,103814+60])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3214,103814+61]..[3214,103814+62])
                                          Pexp_ident "m" (lambda/matching.ml[3214,103814+61]..[3214,103814+62])
                                    ]
                              ]
                              expression (lambda/matching.ml[3215,103880+6]..[3215,103880+77])
                                Pexp_apply
                                expression (lambda/matching.ml[3215,103880+6]..[3215,103880+22])
                                  Pexp_ident "combine_handlers" (lambda/matching.ml[3215,103880+6]..[3215,103880+22])
                                [
                                  <arg>
                                  Labelled "scopes"
                                    expression (lambda/matching.ml[3215,103880+24]..[3215,103880+30])
                                      Pexp_ident "scopes" (lambda/matching.ml[3215,103880+24]..[3215,103880+30])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+31]..[3215,103880+35])
                                      Pexp_ident "repr" (lambda/matching.ml[3215,103880+31]..[3215,103880+35])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+36]..[3215,103880+43])
                                      Pexp_ident "partial" (lambda/matching.ml[3215,103880+36]..[3215,103880+43])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+44]..[3215,103880+47])
                                      Pexp_ident "ctx" (lambda/matching.ml[3215,103880+44]..[3215,103880+47])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+48]..[3215,103880+61])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[3215,103880+49]..[3215,103880+50])
                                          Pexp_ident "v" (lambda/matching.ml[3215,103880+49]..[3215,103880+50])
                                        expression (lambda/matching.ml[3215,103880+52]..[3215,103880+55])
                                          Pexp_ident "str" (lambda/matching.ml[3215,103880+52]..[3215,103880+55])
                                        expression (lambda/matching.ml[3215,103880+57]..[3215,103880+60])
                                          Pexp_ident "arg" (lambda/matching.ml[3215,103880+57]..[3215,103880+60])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+62]..[3215,103880+73])
                                      Pexp_ident "first_match" (lambda/matching.ml[3215,103880+62]..[3215,103880+73])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3215,103880+74]..[3215,103880+77])
                                      Pexp_ident "rem" (lambda/matching.ml[3215,103880+74]..[3215,103880+77])
                                ]
                      <case>
                        pattern (lambda/matching.ml[3216,103958+4]..[3216,103958+5])
                          Ppat_any
                        expression (lambda/matching.ml[3216,103958+9]..[3216,103958+21])
                          Pexp_assert
                          expression (lambda/matching.ml[3216,103958+16]..[3216,103958+21])
                            Pexp_construct "false" (lambda/matching.ml[3216,103958+16]..[3216,103958+21])
                            None
                    ]
      <def>
        pattern (lambda/matching.ml[3218,103981+4]..[3218,103981+20])
          Ppat_var "combine_handlers" (lambda/matching.ml[3218,103981+4]..[3218,103981+20])
        expression (lambda/matching.ml[3218,103981+21]..[3229,104275+35]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3218,103981+22]..[3218,103981+28])
            Ppat_var "scopes" (lambda/matching.ml[3218,103981+22]..[3218,103981+28])
          expression (lambda/matching.ml[3218,103981+29]..[3229,104275+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3218,103981+29]..[3218,103981+33])
              Ppat_var "repr" (lambda/matching.ml[3218,103981+29]..[3218,103981+33])
            expression (lambda/matching.ml[3218,103981+34]..[3229,104275+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3218,103981+34]..[3218,103981+41])
                Ppat_var "partial" (lambda/matching.ml[3218,103981+34]..[3218,103981+41])
              expression (lambda/matching.ml[3218,103981+42]..[3229,104275+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3218,103981+42]..[3218,103981+45])
                  Ppat_var "ctx" (lambda/matching.ml[3218,103981+42]..[3218,103981+45])
                expression (lambda/matching.ml[3218,103981+46]..[3229,104275+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3218,103981+46]..[3218,103981+59])
                    Ppat_tuple
                    [
                      pattern (lambda/matching.ml[3218,103981+47]..[3218,103981+48])
                        Ppat_var "v" (lambda/matching.ml[3218,103981+47]..[3218,103981+48])
                      pattern (lambda/matching.ml[3218,103981+50]..[3218,103981+53])
                        Ppat_var "str" (lambda/matching.ml[3218,103981+50]..[3218,103981+53])
                      pattern (lambda/matching.ml[3218,103981+55]..[3218,103981+58])
                        Ppat_var "arg" (lambda/matching.ml[3218,103981+55]..[3218,103981+58])
                    ]
                  expression (lambda/matching.ml[3218,103981+60]..[3229,104275+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3218,103981+60]..[3218,103981+71])
                      Ppat_var "first_match" (lambda/matching.ml[3218,103981+60]..[3218,103981+71])
                    expression (lambda/matching.ml[3218,103981+72]..[3229,104275+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[3218,103981+72]..[3218,103981+75])
                        Ppat_var "rem" (lambda/matching.ml[3218,103981+72]..[3218,103981+75])
                      expression (lambda/matching.ml[3219,104059+2]..[3229,104275+35])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3219,104059+6]..[3219,104059+16])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3219,104059+6]..[3219,104059+9])
                                  Ppat_var "lam" (lambda/matching.ml[3219,104059+6]..[3219,104059+9])
                                pattern (lambda/matching.ml[3219,104059+11]..[3219,104059+16])
                                  Ppat_var "total" (lambda/matching.ml[3219,104059+11]..[3219,104059+16])
                              ]
                            expression (lambda/matching.ml[3220,104078+4]..[3227,104236+33])
                              Pexp_apply
                              expression (lambda/matching.ml[3220,104078+4]..[3220,104078+23])
                                Pexp_ident "comp_match_handlers" (lambda/matching.ml[3220,104078+4]..[3220,104078+23])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3221,104102+6]..[3226,104221+14])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3221,104102+7]..[3225,104212+8])
                                      Pexp_ifthenelse
                                      expression (lambda/matching.ml[3221,104102+12]..[3221,104102+15])
                                        Pexp_ident "dbg" (lambda/matching.ml[3221,104102+12]..[3221,104102+15])
                                      expression (lambda/matching.ml[3222,104123+9]..[3222,104123+39])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3222,104123+9]..[3222,104123+31])
                                          Pexp_ident "do_compile_matching_pr" (lambda/matching.ml[3222,104123+9]..[3222,104123+31])
                                        [
                                          <arg>
                                          Labelled "scopes"
                                            expression (lambda/matching.ml[3222,104123+33]..[3222,104123+39])
                                              Pexp_ident "scopes" (lambda/matching.ml[3222,104123+33]..[3222,104123+39])
                                        ]
                                      Some
                                        expression (lambda/matching.ml[3224,104175+9]..[3224,104175+36])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3224,104175+9]..[3224,104175+28])
                                            Pexp_ident "do_compile_matching" (lambda/matching.ml[3224,104175+9]..[3224,104175+28])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3224,104175+30]..[3224,104175+36])
                                                Pexp_ident "scopes" (lambda/matching.ml[3224,104175+30]..[3224,104175+36])
                                          ]
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3226,104221+9]..[3226,104221+13])
                                          Pexp_ident "repr" (lambda/matching.ml[3226,104221+9]..[3226,104221+13])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3227,104236+6]..[3227,104236+13])
                                    Pexp_ident "partial" (lambda/matching.ml[3227,104236+6]..[3227,104236+13])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3227,104236+14]..[3227,104236+17])
                                    Pexp_ident "ctx" (lambda/matching.ml[3227,104236+14]..[3227,104236+17])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3227,104236+18]..[3227,104236+29])
                                    Pexp_ident "first_match" (lambda/matching.ml[3227,104236+18]..[3227,104236+29])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3227,104236+30]..[3227,104236+33])
                                    Pexp_ident "rem" (lambda/matching.ml[3227,104236+30]..[3227,104236+33])
                              ]
                        ]
                        expression (lambda/matching.ml[3229,104275+2]..[3229,104275+35])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[3229,104275+3]..[3229,104275+27])
                              Pexp_apply
                              expression (lambda/matching.ml[3229,104275+3]..[3229,104275+13])
                                Pexp_ident "bind_check" (lambda/matching.ml[3229,104275+3]..[3229,104275+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3229,104275+14]..[3229,104275+17])
                                    Pexp_ident "str" (lambda/matching.ml[3229,104275+14]..[3229,104275+17])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3229,104275+18]..[3229,104275+19])
                                    Pexp_ident "v" (lambda/matching.ml[3229,104275+18]..[3229,104275+19])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3229,104275+20]..[3229,104275+23])
                                    Pexp_ident "arg" (lambda/matching.ml[3229,104275+20]..[3229,104275+23])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3229,104275+24]..[3229,104275+27])
                                    Pexp_ident "lam" (lambda/matching.ml[3229,104275+24]..[3229,104275+27])
                              ]
                            expression (lambda/matching.ml[3229,104275+29]..[3229,104275+34])
                              Pexp_ident "total" (lambda/matching.ml[3229,104275+29]..[3229,104275+34])
                          ]
      <def>
        pattern (lambda/matching.ml[3232,104368+4]..[3232,104368+26])
          Ppat_var "do_compile_matching_pr" (lambda/matching.ml[3232,104368+4]..[3232,104368+26])
        expression (lambda/matching.ml[3232,104368+27]..[3244,104746+3]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3232,104368+28]..[3232,104368+34])
            Ppat_var "scopes" (lambda/matching.ml[3232,104368+28]..[3232,104368+34])
          expression (lambda/matching.ml[3232,104368+35]..[3244,104746+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3232,104368+35]..[3232,104368+39])
              Ppat_var "repr" (lambda/matching.ml[3232,104368+35]..[3232,104368+39])
            expression (lambda/matching.ml[3232,104368+40]..[3244,104746+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3232,104368+40]..[3232,104368+47])
                Ppat_var "partial" (lambda/matching.ml[3232,104368+40]..[3232,104368+47])
              expression (lambda/matching.ml[3232,104368+48]..[3244,104746+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3232,104368+48]..[3232,104368+51])
                  Ppat_var "ctx" (lambda/matching.ml[3232,104368+48]..[3232,104368+51])
                expression (lambda/matching.ml[3232,104368+52]..[3244,104746+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3232,104368+52]..[3232,104368+53])
                    Ppat_var "x" (lambda/matching.ml[3232,104368+52]..[3232,104368+53])
                  expression (lambda/matching.ml[3233,104424+2]..[3244,104746+3])
                    Pexp_sequence
                    expression (lambda/matching.ml[3233,104424+2]..[3237,104539+5])
                      Pexp_apply
                      expression (lambda/matching.ml[3233,104424+2]..[3233,104424+16])
                        Pexp_ident "Format.eprintf" (lambda/matching.ml[3233,104424+2]..[3233,104424+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3233,104424+17]..[3233,104424+39])
                            Pexp_constant PConst_string("COMPILE: %s\nMATCH\n",(lambda/matching.ml[3233,104424+18]..[3233,104424+38]),None)
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3234,104464+4]..[3237,104539+5])
                            Pexp_match
                            expression (lambda/matching.ml[3234,104464+12]..[3234,104464+19])
                              Pexp_ident "partial" (lambda/matching.ml[3234,104464+12]..[3234,104464+19])
                            [
                              <case>
                                pattern (lambda/matching.ml[3235,104489+6]..[3235,104489+13])
                                  Ppat_construct "Partial" (lambda/matching.ml[3235,104489+6]..[3235,104489+13])
                                  None
                                expression (lambda/matching.ml[3235,104489+17]..[3235,104489+26])
                                  Pexp_constant PConst_string("Partial",(lambda/matching.ml[3235,104489+18]..[3235,104489+25]),None)
                              <case>
                                pattern (lambda/matching.ml[3236,104516+6]..[3236,104516+11])
                                  Ppat_construct "Total" (lambda/matching.ml[3236,104516+6]..[3236,104516+11])
                                  None
                                expression (lambda/matching.ml[3236,104516+15]..[3236,104516+22])
                                  Pexp_constant PConst_string("Total",(lambda/matching.ml[3236,104516+16]..[3236,104516+21]),None)
                            ]
                      ]
                    expression (lambda/matching.ml[3238,104546+2]..[3244,104746+3])
                      Pexp_sequence
                      expression (lambda/matching.ml[3238,104546+2]..[3238,104546+22])
                        Pexp_apply
                        expression (lambda/matching.ml[3238,104546+2]..[3238,104546+20])
                          Pexp_ident "pretty_precompiled" (lambda/matching.ml[3238,104546+2]..[3238,104546+20])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3238,104546+21]..[3238,104546+22])
                              Pexp_ident "x" (lambda/matching.ml[3238,104546+21]..[3238,104546+22])
                        ]
                      expression (lambda/matching.ml[3239,104570+2]..[3244,104746+3])
                        Pexp_sequence
                        expression (lambda/matching.ml[3239,104570+2]..[3239,104570+24])
                          Pexp_apply
                          expression (lambda/matching.ml[3239,104570+2]..[3239,104570+16])
                            Pexp_ident "Format.eprintf" (lambda/matching.ml[3239,104570+2]..[3239,104570+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3239,104570+17]..[3239,104570+24])
                                Pexp_constant PConst_string("CTX\n",(lambda/matching.ml[3239,104570+18]..[3239,104570+23]),None)
                          ]
                        expression (lambda/matching.ml[3240,104596+2]..[3244,104746+3])
                          Pexp_sequence
                          expression (lambda/matching.ml[3240,104596+2]..[3240,104596+21])
                            Pexp_apply
                            expression (lambda/matching.ml[3240,104596+2]..[3240,104596+17])
                              Pexp_ident "Context.eprintf" (lambda/matching.ml[3240,104596+2]..[3240,104596+17])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3240,104596+18]..[3240,104596+21])
                                  Pexp_ident "ctx" (lambda/matching.ml[3240,104596+18]..[3240,104596+21])
                            ]
                          expression (lambda/matching.ml[3241,104619+2]..[3244,104746+3])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3241,104619+6]..[3241,104619+23])
                                  Ppat_alias "r" (lambda/matching.ml[3241,104619+21]..[3241,104619+22])
                                  pattern (lambda/matching.ml[3241,104619+7]..[3241,104619+17])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3241,104619+8]..[3241,104619+9])
                                        Ppat_any
                                      pattern (lambda/matching.ml[3241,104619+11]..[3241,104619+16])
                                        Ppat_var "jumps" (lambda/matching.ml[3241,104619+11]..[3241,104619+16])
                                    ]
                                expression (lambda/matching.ml[3241,104619+26]..[3241,104619+72])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3241,104619+26]..[3241,104619+45])
                                    Pexp_ident "do_compile_matching" (lambda/matching.ml[3241,104619+26]..[3241,104619+45])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3241,104619+47]..[3241,104619+53])
                                        Pexp_ident "scopes" (lambda/matching.ml[3241,104619+47]..[3241,104619+53])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3241,104619+54]..[3241,104619+58])
                                        Pexp_ident "repr" (lambda/matching.ml[3241,104619+54]..[3241,104619+58])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3241,104619+59]..[3241,104619+66])
                                        Pexp_ident "partial" (lambda/matching.ml[3241,104619+59]..[3241,104619+66])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3241,104619+67]..[3241,104619+70])
                                        Pexp_ident "ctx" (lambda/matching.ml[3241,104619+67]..[3241,104619+70])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3241,104619+71]..[3241,104619+72])
                                        Pexp_ident "x" (lambda/matching.ml[3241,104619+71]..[3241,104619+72])
                                  ]
                            ]
                            expression (lambda/matching.ml[3242,104695+2]..[3244,104746+3])
                              Pexp_sequence
                              expression (lambda/matching.ml[3242,104695+2]..[3242,104695+26])
                                Pexp_apply
                                expression (lambda/matching.ml[3242,104695+2]..[3242,104695+16])
                                  Pexp_ident "Format.eprintf" (lambda/matching.ml[3242,104695+2]..[3242,104695+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3242,104695+17]..[3242,104695+26])
                                      Pexp_constant PConst_string("JUMPS\n",(lambda/matching.ml[3242,104695+18]..[3242,104695+25]),None)
                                ]
                              expression (lambda/matching.ml[3243,104723+2]..[3244,104746+3])
                                Pexp_sequence
                                expression (lambda/matching.ml[3243,104723+2]..[3243,104723+21])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3243,104723+2]..[3243,104723+15])
                                    Pexp_ident "Jumps.eprintf" (lambda/matching.ml[3243,104723+2]..[3243,104723+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3243,104723+16]..[3243,104723+21])
                                        Pexp_ident "jumps" (lambda/matching.ml[3243,104723+16]..[3243,104723+21])
                                  ]
                                expression (lambda/matching.ml[3244,104746+2]..[3244,104746+3])
                                  Pexp_ident "r" (lambda/matching.ml[3244,104746+2]..[3244,104746+3])
      <def>
        pattern (lambda/matching.ml[3246,104751+4]..[3246,104751+23])
          Ppat_var "do_compile_matching" (lambda/matching.ml[3246,104751+4]..[3246,104751+23])
        expression (lambda/matching.ml[3246,104751+24]..[3319,107423+30]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3246,104751+25]..[3246,104751+31])
            Ppat_var "scopes" (lambda/matching.ml[3246,104751+25]..[3246,104751+31])
          expression (lambda/matching.ml[3246,104751+32]..[3319,107423+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3246,104751+32]..[3246,104751+36])
              Ppat_var "repr" (lambda/matching.ml[3246,104751+32]..[3246,104751+36])
            expression (lambda/matching.ml[3246,104751+37]..[3319,107423+30]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3246,104751+37]..[3246,104751+44])
                Ppat_var "partial" (lambda/matching.ml[3246,104751+37]..[3246,104751+44])
              expression (lambda/matching.ml[3246,104751+45]..[3319,107423+30]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3246,104751+45]..[3246,104751+48])
                  Ppat_var "ctx" (lambda/matching.ml[3246,104751+45]..[3246,104751+48])
                expression (lambda/matching.ml[3246,104751+49]..[3319,107423+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3246,104751+49]..[3246,104751+52])
                    Ppat_var "pmh" (lambda/matching.ml[3246,104751+49]..[3246,104751+52])
                  expression (lambda/matching.ml[3247,104806+2]..[3319,107423+30])
                    Pexp_match
                    expression (lambda/matching.ml[3247,104806+8]..[3247,104806+11])
                      Pexp_ident "pmh" (lambda/matching.ml[3247,104806+8]..[3247,104806+11])
                    [
                      <case>
                        pattern (lambda/matching.ml[3248,104823+4]..[3248,104823+9])
                          Ppat_construct "Pm" (lambda/matching.ml[3248,104823+4]..[3248,104823+6])
                          Some
                            []
                            pattern (lambda/matching.ml[3248,104823+7]..[3248,104823+9])
                              Ppat_var "pm" (lambda/matching.ml[3248,104823+7]..[3248,104823+9])
                        expression (lambda/matching.ml[3248,104823+13]..[3309,107055+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3249,104838+10]..[3249,104838+13])
                                Ppat_var "arg" (lambda/matching.ml[3249,104838+10]..[3249,104838+13])
                              expression (lambda/matching.ml[3250,104854+8]..[3260,105301+24])
                                Pexp_match
                                expression (lambda/matching.ml[3250,104854+14]..[3250,104854+21])
                                  Pexp_field
                                  expression (lambda/matching.ml[3250,104854+14]..[3250,104854+16])
                                    Pexp_ident "pm" (lambda/matching.ml[3250,104854+14]..[3250,104854+16])
                                  "args" (lambda/matching.ml[3250,104854+17]..[3250,104854+21])
                                [
                                  <case>
                                    pattern (lambda/matching.ml[3251,104881+10]..[3251,104881+29])
                                      Ppat_construct "::" (lambda/matching.ml[3251,104881+25]..[3251,104881+27])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[3251,104881+10]..[3251,104881+29]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3251,104881+10]..[3251,104881+24])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3251,104881+11]..[3251,104881+20])
                                                  Ppat_var "first_arg" (lambda/matching.ml[3251,104881+11]..[3251,104881+20])
                                                pattern (lambda/matching.ml[3251,104881+22]..[3251,104881+23])
                                                  Ppat_any
                                              ]
                                            pattern (lambda/matching.ml[3251,104881+28]..[3251,104881+29])
                                              Ppat_any
                                          ]
                                    expression (lambda/matching.ml[3251,104881+33]..[3251,104881+42])
                                      Pexp_ident "first_arg" (lambda/matching.ml[3251,104881+33]..[3251,104881+42])
                                  <case>
                                    pattern (lambda/matching.ml[3252,104924+10]..[3252,104924+11])
                                      Ppat_any
                                    expression (lambda/matching.ml[3260,105301+12]..[3260,105301+24])
                                      Pexp_assert
                                      expression (lambda/matching.ml[3260,105301+19]..[3260,105301+24])
                                        Pexp_construct "false" (lambda/matching.ml[3260,105301+19]..[3260,105301+24])
                                        None
                                ]
                          ]
                          expression (lambda/matching.ml[3262,105335+6]..[3308,107036+18])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3262,105335+10]..[3262,105335+12])
                                  Ppat_var "ph" (lambda/matching.ml[3262,105335+10]..[3262,105335+12])
                                expression (lambda/matching.ml[3262,105335+15]..[3262,105335+37])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3262,105335+15]..[3262,105335+28])
                                    Pexp_ident "what_is_cases" (lambda/matching.ml[3262,105335+15]..[3262,105335+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3262,105335+29]..[3262,105335+37])
                                        Pexp_field
                                        expression (lambda/matching.ml[3262,105335+29]..[3262,105335+31])
                                          Pexp_ident "pm" (lambda/matching.ml[3262,105335+29]..[3262,105335+31])
                                        "cases" (lambda/matching.ml[3262,105335+32]..[3262,105335+37])
                                  ]
                            ]
                            expression (lambda/matching.ml[3263,105376+6]..[3308,107036+18])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3263,105376+10]..[3263,105376+16])
                                    Ppat_var "pomega" (lambda/matching.ml[3263,105376+10]..[3263,105376+16])
                                  expression (lambda/matching.ml[3263,105376+19]..[3263,105376+52])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3263,105376+19]..[3263,105376+49])
                                      Pexp_ident "Patterns.Head.to_omega_pattern" (lambda/matching.ml[3263,105376+19]..[3263,105376+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3263,105376+50]..[3263,105376+52])
                                          Pexp_ident "ph" (lambda/matching.ml[3263,105376+50]..[3263,105376+52])
                                    ]
                              ]
                              expression (lambda/matching.ml[3264,105432+6]..[3308,107036+18])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3264,105432+10]..[3264,105432+14])
                                      Ppat_var "ploc" (lambda/matching.ml[3264,105432+10]..[3264,105432+14])
                                    expression (lambda/matching.ml[3264,105432+17]..[3264,105432+36])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3264,105432+17]..[3264,105432+25])
                                        Pexp_ident "head_loc" (lambda/matching.ml[3264,105432+17]..[3264,105432+25])
                                      [
                                        <arg>
                                        Labelled "scopes"
                                          expression (lambda/matching.ml[3264,105432+27]..[3264,105432+33])
                                            Pexp_ident "scopes" (lambda/matching.ml[3264,105432+27]..[3264,105432+33])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3264,105432+34]..[3264,105432+36])
                                            Pexp_ident "ph" (lambda/matching.ml[3264,105432+34]..[3264,105432+36])
                                      ]
                                ]
                                expression (lambda/matching.ml[3265,105472+6]..[3308,107036+18])
                                  Pexp_open Fresh
                                  module_expr (lambda/matching.ml[3265,105472+15]..[3265,105472+28])
                                    Pmod_ident "Patterns.Head" (lambda/matching.ml[3265,105472+15]..[3265,105472+28])
                                  expression (lambda/matching.ml[3266,105504+6]..[3308,107036+18])
                                    Pexp_match
                                    expression (lambda/matching.ml[3266,105504+12]..[3266,105504+23])
                                      Pexp_field
                                      expression (lambda/matching.ml[3266,105504+12]..[3266,105504+14])
                                        Pexp_ident "ph" (lambda/matching.ml[3266,105504+12]..[3266,105504+14])
                                      "pat_desc" (lambda/matching.ml[3266,105504+15]..[3266,105504+23])
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[3267,105533+8]..[3267,105533+11])
                                          Ppat_construct "Any" (lambda/matching.ml[3267,105533+8]..[3267,105533+11])
                                          None
                                        expression (lambda/matching.ml[3268,105548+10]..[3270,105605+46])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3268,105548+10]..[3268,105548+25])
                                            Pexp_ident "compile_no_test" (lambda/matching.ml[3268,105548+10]..[3268,105548+25])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3268,105548+27]..[3268,105548+33])
                                                Pexp_ident "scopes" (lambda/matching.ml[3268,105548+27]..[3268,105548+33])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3269,105582+12]..[3269,105582+22])
                                                Pexp_ident "divide_var" (lambda/matching.ml[3269,105582+12]..[3269,105582+22])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3270,105605+12]..[3270,105605+26])
                                                Pexp_ident "Context.rshift" (lambda/matching.ml[3270,105605+12]..[3270,105605+26])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3270,105605+27]..[3270,105605+31])
                                                Pexp_ident "repr" (lambda/matching.ml[3270,105605+27]..[3270,105605+31])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3270,105605+32]..[3270,105605+39])
                                                Pexp_ident "partial" (lambda/matching.ml[3270,105605+32]..[3270,105605+39])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3270,105605+40]..[3270,105605+43])
                                                Pexp_ident "ctx" (lambda/matching.ml[3270,105605+40]..[3270,105605+43])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3270,105605+44]..[3270,105605+46])
                                                Pexp_ident "pm" (lambda/matching.ml[3270,105605+44]..[3270,105605+46])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3271,105652+8]..[3271,105652+15])
                                          Ppat_construct "Tuple" (lambda/matching.ml[3271,105652+8]..[3271,105652+13])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3271,105652+14]..[3271,105652+15])
                                              Ppat_any
                                        expression (lambda/matching.ml[3272,105671+10]..[3274,105743+47])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3272,105671+10]..[3272,105671+25])
                                            Pexp_ident "compile_no_test" (lambda/matching.ml[3272,105671+10]..[3272,105671+25])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3272,105671+27]..[3272,105671+33])
                                                Pexp_ident "scopes" (lambda/matching.ml[3272,105671+27]..[3272,105671+33])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3273,105705+12]..[3273,105705+37])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3273,105705+13]..[3273,105705+25])
                                                  Pexp_ident "divide_tuple" (lambda/matching.ml[3273,105705+13]..[3273,105705+25])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3273,105705+27]..[3273,105705+33])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3273,105705+27]..[3273,105705+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3273,105705+34]..[3273,105705+36])
                                                      Pexp_ident "ph" (lambda/matching.ml[3273,105705+34]..[3273,105705+36])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3274,105743+12]..[3274,105743+27])
                                                Pexp_ident "Context.combine" (lambda/matching.ml[3274,105743+12]..[3274,105743+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3274,105743+28]..[3274,105743+32])
                                                Pexp_ident "repr" (lambda/matching.ml[3274,105743+28]..[3274,105743+32])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3274,105743+33]..[3274,105743+40])
                                                Pexp_ident "partial" (lambda/matching.ml[3274,105743+33]..[3274,105743+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3274,105743+41]..[3274,105743+44])
                                                Pexp_ident "ctx" (lambda/matching.ml[3274,105743+41]..[3274,105743+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3274,105743+45]..[3274,105743+47])
                                                Pexp_ident "pm" (lambda/matching.ml[3274,105743+45]..[3274,105743+47])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3275,105791+8]..[3275,105791+17])
                                          Ppat_construct "Record" (lambda/matching.ml[3275,105791+8]..[3275,105791+14])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3275,105791+15]..[3275,105791+17])
                                              Ppat_construct "[]" (lambda/matching.ml[3275,105791+15]..[3275,105791+17])
                                              None
                                        expression (lambda/matching.ml[3275,105791+21]..[3275,105791+33])
                                          Pexp_assert
                                          expression (lambda/matching.ml[3275,105791+28]..[3275,105791+33])
                                            Pexp_construct "false" (lambda/matching.ml[3275,105791+28]..[3275,105791+33])
                                            None
                                      <case>
                                        pattern (lambda/matching.ml[3276,105825+8]..[3276,105825+25])
                                          Ppat_construct "Record" (lambda/matching.ml[3276,105825+8]..[3276,105825+14])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3276,105825+15]..[3276,105825+25])
                                              Ppat_construct "::" (lambda/matching.ml[3276,105825+20]..[3276,105825+22])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3276,105825+16]..[3276,105825+24]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[3276,105825+16]..[3276,105825+19])
                                                      Ppat_var "lbl" (lambda/matching.ml[3276,105825+16]..[3276,105825+19])
                                                    pattern (lambda/matching.ml[3276,105825+23]..[3276,105825+24])
                                                      Ppat_any
                                                  ]
                                        expression (lambda/matching.ml[3277,105854+10]..[3279,105939+47])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3277,105854+10]..[3277,105854+25])
                                            Pexp_ident "compile_no_test" (lambda/matching.ml[3277,105854+10]..[3277,105854+25])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3277,105854+27]..[3277,105854+33])
                                                Pexp_ident "scopes" (lambda/matching.ml[3277,105854+27]..[3277,105854+33])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3278,105888+12]..[3278,105888+50])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3278,105888+13]..[3278,105888+26])
                                                  Pexp_ident "divide_record" (lambda/matching.ml[3278,105888+13]..[3278,105888+26])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3278,105888+28]..[3278,105888+34])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3278,105888+28]..[3278,105888+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3278,105888+35]..[3278,105888+46])
                                                      Pexp_field
                                                      expression (lambda/matching.ml[3278,105888+35]..[3278,105888+38])
                                                        Pexp_ident "lbl" (lambda/matching.ml[3278,105888+35]..[3278,105888+38])
                                                      "lbl_all" (lambda/matching.ml[3278,105888+39]..[3278,105888+46])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3278,105888+47]..[3278,105888+49])
                                                      Pexp_ident "ph" (lambda/matching.ml[3278,105888+47]..[3278,105888+49])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3279,105939+12]..[3279,105939+27])
                                                Pexp_ident "Context.combine" (lambda/matching.ml[3279,105939+12]..[3279,105939+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3279,105939+28]..[3279,105939+32])
                                                Pexp_ident "repr" (lambda/matching.ml[3279,105939+28]..[3279,105939+32])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3279,105939+33]..[3279,105939+40])
                                                Pexp_ident "partial" (lambda/matching.ml[3279,105939+33]..[3279,105939+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3279,105939+41]..[3279,105939+44])
                                                Pexp_ident "ctx" (lambda/matching.ml[3279,105939+41]..[3279,105939+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3279,105939+45]..[3279,105939+47])
                                                Pexp_ident "pm" (lambda/matching.ml[3279,105939+45]..[3279,105939+47])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3280,105987+8]..[3280,105987+20])
                                          Ppat_construct "Constant" (lambda/matching.ml[3280,105987+8]..[3280,105987+16])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3280,105987+17]..[3280,105987+20])
                                              Ppat_var "cst" (lambda/matching.ml[3280,105987+17]..[3280,105987+20])
                                        expression (lambda/matching.ml[3281,106011+10]..[3285,106171+18])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3281,106011+10]..[3281,106011+22])
                                            Pexp_ident "compile_test" (lambda/matching.ml[3281,106011+10]..[3281,106011+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3282,106034+12]..[3282,106034+48])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3282,106034+13]..[3282,106034+26])
                                                  Pexp_ident "compile_match" (lambda/matching.ml[3282,106034+13]..[3282,106034+26])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3282,106034+28]..[3282,106034+34])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3282,106034+28]..[3282,106034+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3282,106034+35]..[3282,106034+39])
                                                      Pexp_ident "repr" (lambda/matching.ml[3282,106034+35]..[3282,106034+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3282,106034+40]..[3282,106034+47])
                                                      Pexp_ident "partial" (lambda/matching.ml[3282,106034+40]..[3282,106034+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3283,106083+12]..[3283,106083+19])
                                                Pexp_ident "partial" (lambda/matching.ml[3283,106083+12]..[3283,106083+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3283,106083+20]..[3283,106083+35])
                                                Pexp_ident "divide_constant" (lambda/matching.ml[3283,106083+20]..[3283,106083+35])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3284,106119+12]..[3284,106119+51])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3284,106119+13]..[3284,106119+29])
                                                  Pexp_ident "combine_constant" (lambda/matching.ml[3284,106119+13]..[3284,106119+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3284,106119+30]..[3284,106119+34])
                                                      Pexp_ident "ploc" (lambda/matching.ml[3284,106119+30]..[3284,106119+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3284,106119+35]..[3284,106119+38])
                                                      Pexp_ident "arg" (lambda/matching.ml[3284,106119+35]..[3284,106119+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3284,106119+39]..[3284,106119+42])
                                                      Pexp_ident "cst" (lambda/matching.ml[3284,106119+39]..[3284,106119+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3284,106119+43]..[3284,106119+50])
                                                      Pexp_ident "partial" (lambda/matching.ml[3284,106119+43]..[3284,106119+50])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3285,106171+12]..[3285,106171+15])
                                                Pexp_ident "ctx" (lambda/matching.ml[3285,106171+12]..[3285,106171+15])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3285,106171+16]..[3285,106171+18])
                                                Pexp_ident "pm" (lambda/matching.ml[3285,106171+16]..[3285,106171+18])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3286,106190+8]..[3286,106190+22])
                                          Ppat_construct "Construct" (lambda/matching.ml[3286,106190+8]..[3286,106190+17])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3286,106190+18]..[3286,106190+22])
                                              Ppat_var "cstr" (lambda/matching.ml[3286,106190+18]..[3286,106190+22])
                                        expression (lambda/matching.ml[3287,106216+10]..[3291,106404+18])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3287,106216+10]..[3287,106216+22])
                                            Pexp_ident "compile_test" (lambda/matching.ml[3287,106216+10]..[3287,106216+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3288,106239+12]..[3288,106239+48])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3288,106239+13]..[3288,106239+26])
                                                  Pexp_ident "compile_match" (lambda/matching.ml[3288,106239+13]..[3288,106239+26])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3288,106239+28]..[3288,106239+34])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3288,106239+28]..[3288,106239+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3288,106239+35]..[3288,106239+39])
                                                      Pexp_ident "repr" (lambda/matching.ml[3288,106239+35]..[3288,106239+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3288,106239+40]..[3288,106239+47])
                                                      Pexp_ident "partial" (lambda/matching.ml[3288,106239+40]..[3288,106239+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3289,106288+12]..[3289,106288+19])
                                                Pexp_ident "partial" (lambda/matching.ml[3289,106288+12]..[3289,106288+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3289,106288+20]..[3289,106288+48])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3289,106288+21]..[3289,106288+39])
                                                  Pexp_ident "divide_constructor" (lambda/matching.ml[3289,106288+21]..[3289,106288+39])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3289,106288+41]..[3289,106288+47])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3289,106288+41]..[3289,106288+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3290,106337+12]..[3290,106337+66])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3290,106337+13]..[3290,106337+32])
                                                  Pexp_ident "combine_constructor" (lambda/matching.ml[3290,106337+13]..[3290,106337+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3290,106337+33]..[3290,106337+37])
                                                      Pexp_ident "ploc" (lambda/matching.ml[3290,106337+33]..[3290,106337+37])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3290,106337+38]..[3290,106337+41])
                                                      Pexp_ident "arg" (lambda/matching.ml[3290,106337+38]..[3290,106337+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3290,106337+42]..[3290,106337+52])
                                                      Pexp_field
                                                      expression (lambda/matching.ml[3290,106337+42]..[3290,106337+44])
                                                        Pexp_ident "ph" (lambda/matching.ml[3290,106337+42]..[3290,106337+44])
                                                      "pat_env" (lambda/matching.ml[3290,106337+45]..[3290,106337+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3290,106337+53]..[3290,106337+57])
                                                      Pexp_ident "cstr" (lambda/matching.ml[3290,106337+53]..[3290,106337+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3290,106337+58]..[3290,106337+65])
                                                      Pexp_ident "partial" (lambda/matching.ml[3290,106337+58]..[3290,106337+65])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3291,106404+12]..[3291,106404+15])
                                                Pexp_ident "ctx" (lambda/matching.ml[3291,106404+12]..[3291,106404+15])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3291,106404+16]..[3291,106404+18])
                                                Pexp_ident "pm" (lambda/matching.ml[3291,106404+16]..[3291,106404+18])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3292,106423+8]..[3292,106423+15])
                                          Ppat_construct "Array" (lambda/matching.ml[3292,106423+8]..[3292,106423+13])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3292,106423+14]..[3292,106423+15])
                                              Ppat_any
                                        expression (lambda/matching.ml[3293,106442+10]..[3298,106670+18])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[3293,106442+14]..[3293,106442+18])
                                                Ppat_var "kind" (lambda/matching.ml[3293,106442+14]..[3293,106442+18])
                                              expression (lambda/matching.ml[3293,106442+21]..[3293,106442+54])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3293,106442+21]..[3293,106442+47])
                                                  Pexp_ident "Typeopt.array_pattern_kind" (lambda/matching.ml[3293,106442+21]..[3293,106442+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3293,106442+48]..[3293,106442+54])
                                                      Pexp_ident "pomega" (lambda/matching.ml[3293,106442+48]..[3293,106442+54])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[3294,106500+10]..[3298,106670+18])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3294,106500+10]..[3294,106500+22])
                                              Pexp_ident "compile_test" (lambda/matching.ml[3294,106500+10]..[3294,106500+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3295,106523+12]..[3295,106523+48])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3295,106523+13]..[3295,106523+26])
                                                    Pexp_ident "compile_match" (lambda/matching.ml[3295,106523+13]..[3295,106523+26])
                                                  [
                                                    <arg>
                                                    Labelled "scopes"
                                                      expression (lambda/matching.ml[3295,106523+28]..[3295,106523+34])
                                                        Pexp_ident "scopes" (lambda/matching.ml[3295,106523+28]..[3295,106523+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3295,106523+35]..[3295,106523+39])
                                                        Pexp_ident "repr" (lambda/matching.ml[3295,106523+35]..[3295,106523+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3295,106523+40]..[3295,106523+47])
                                                        Pexp_ident "partial" (lambda/matching.ml[3295,106523+40]..[3295,106523+47])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3296,106572+12]..[3296,106572+19])
                                                  Pexp_ident "partial" (lambda/matching.ml[3296,106572+12]..[3296,106572+19])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3296,106572+20]..[3296,106572+47])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3296,106572+21]..[3296,106572+33])
                                                    Pexp_ident "divide_array" (lambda/matching.ml[3296,106572+21]..[3296,106572+33])
                                                  [
                                                    <arg>
                                                    Labelled "scopes"
                                                      expression (lambda/matching.ml[3296,106572+35]..[3296,106572+41])
                                                        Pexp_ident "scopes" (lambda/matching.ml[3296,106572+35]..[3296,106572+41])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3296,106572+42]..[3296,106572+46])
                                                        Pexp_ident "kind" (lambda/matching.ml[3296,106572+42]..[3296,106572+46])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3297,106620+12]..[3297,106620+49])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3297,106620+13]..[3297,106620+26])
                                                    Pexp_ident "combine_array" (lambda/matching.ml[3297,106620+13]..[3297,106620+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3297,106620+27]..[3297,106620+31])
                                                        Pexp_ident "ploc" (lambda/matching.ml[3297,106620+27]..[3297,106620+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3297,106620+32]..[3297,106620+35])
                                                        Pexp_ident "arg" (lambda/matching.ml[3297,106620+32]..[3297,106620+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3297,106620+36]..[3297,106620+40])
                                                        Pexp_ident "kind" (lambda/matching.ml[3297,106620+36]..[3297,106620+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3297,106620+41]..[3297,106620+48])
                                                        Pexp_ident "partial" (lambda/matching.ml[3297,106620+41]..[3297,106620+48])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3298,106670+12]..[3298,106670+15])
                                                  Pexp_ident "ctx" (lambda/matching.ml[3298,106670+12]..[3298,106670+15])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3298,106670+16]..[3298,106670+18])
                                                  Pexp_ident "pm" (lambda/matching.ml[3298,106670+16]..[3298,106670+18])
                                            ]
                                      <case>
                                        pattern (lambda/matching.ml[3299,106689+8]..[3299,106689+12])
                                          Ppat_construct "Lazy" (lambda/matching.ml[3299,106689+8]..[3299,106689+12])
                                          None
                                        expression (lambda/matching.ml[3300,106705+10]..[3302,106776+47])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3300,106705+10]..[3300,106705+25])
                                            Pexp_ident "compile_no_test" (lambda/matching.ml[3300,106705+10]..[3300,106705+25])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3300,106705+27]..[3300,106705+33])
                                                Pexp_ident "scopes" (lambda/matching.ml[3300,106705+27]..[3300,106705+33])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3301,106739+12]..[3301,106739+36])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3301,106739+13]..[3301,106739+24])
                                                  Pexp_ident "divide_lazy" (lambda/matching.ml[3301,106739+13]..[3301,106739+24])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3301,106739+26]..[3301,106739+32])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3301,106739+26]..[3301,106739+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3301,106739+33]..[3301,106739+35])
                                                      Pexp_ident "ph" (lambda/matching.ml[3301,106739+33]..[3301,106739+35])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3302,106776+12]..[3302,106776+27])
                                                Pexp_ident "Context.combine" (lambda/matching.ml[3302,106776+12]..[3302,106776+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3302,106776+28]..[3302,106776+32])
                                                Pexp_ident "repr" (lambda/matching.ml[3302,106776+28]..[3302,106776+32])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3302,106776+33]..[3302,106776+40])
                                                Pexp_ident "partial" (lambda/matching.ml[3302,106776+33]..[3302,106776+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3302,106776+41]..[3302,106776+44])
                                                Pexp_ident "ctx" (lambda/matching.ml[3302,106776+41]..[3302,106776+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3302,106776+45]..[3302,106776+47])
                                                Pexp_ident "pm" (lambda/matching.ml[3302,106776+45]..[3302,106776+47])
                                          ]
                                      <case>
                                        pattern (lambda/matching.ml[3303,106824+8]..[3303,106824+34])
                                          Ppat_construct "Variant" (lambda/matching.ml[3303,106824+8]..[3303,106824+15])
                                          Some
                                            []
                                            pattern (lambda/matching.ml[3303,106824+16]..[3303,106824+34])
                                              Ppat_record Closed
                                              [
                                                "cstr_row" (lambda/matching.ml[3303,106824+18]..[3303,106824+26])
                                                  pattern (lambda/matching.ml[3303,106824+29]..[3303,106824+32])
                                                    Ppat_var "row" (lambda/matching.ml[3303,106824+29]..[3303,106824+32])
                                              ]
                                        expression (lambda/matching.ml[3304,106862+10]..[3308,107036+18])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3304,106862+10]..[3304,106862+22])
                                            Pexp_ident "compile_test" (lambda/matching.ml[3304,106862+10]..[3304,106862+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3305,106885+12]..[3305,106885+48])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3305,106885+13]..[3305,106885+26])
                                                  Pexp_ident "compile_match" (lambda/matching.ml[3305,106885+13]..[3305,106885+26])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3305,106885+28]..[3305,106885+34])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3305,106885+28]..[3305,106885+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3305,106885+35]..[3305,106885+39])
                                                      Pexp_ident "repr" (lambda/matching.ml[3305,106885+35]..[3305,106885+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3305,106885+40]..[3305,106885+47])
                                                      Pexp_ident "partial" (lambda/matching.ml[3305,106885+40]..[3305,106885+47])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3306,106934+12]..[3306,106934+19])
                                                Pexp_ident "partial" (lambda/matching.ml[3306,106934+12]..[3306,106934+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3306,106934+20]..[3306,106934+49])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3306,106934+21]..[3306,106934+35])
                                                  Pexp_ident "divide_variant" (lambda/matching.ml[3306,106934+21]..[3306,106934+35])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3306,106934+37]..[3306,106934+43])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3306,106934+37]..[3306,106934+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3306,106934+44]..[3306,106934+48])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[3306,106934+44]..[3306,106934+45])
                                                        Pexp_ident "!" (lambda/matching.ml[3306,106934+44]..[3306,106934+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[3306,106934+45]..[3306,106934+48])
                                                            Pexp_ident "row" (lambda/matching.ml[3306,106934+45]..[3306,106934+48])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3307,106984+12]..[3307,106984+51])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3307,106984+13]..[3307,106984+28])
                                                  Pexp_ident "combine_variant" (lambda/matching.ml[3307,106984+13]..[3307,106984+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3307,106984+29]..[3307,106984+33])
                                                      Pexp_ident "ploc" (lambda/matching.ml[3307,106984+29]..[3307,106984+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3307,106984+34]..[3307,106984+38])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[3307,106984+34]..[3307,106984+35])
                                                        Pexp_ident "!" (lambda/matching.ml[3307,106984+34]..[3307,106984+35])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/matching.ml[3307,106984+35]..[3307,106984+38])
                                                            Pexp_ident "row" (lambda/matching.ml[3307,106984+35]..[3307,106984+38])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3307,106984+39]..[3307,106984+42])
                                                      Pexp_ident "arg" (lambda/matching.ml[3307,106984+39]..[3307,106984+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3307,106984+43]..[3307,106984+50])
                                                      Pexp_ident "partial" (lambda/matching.ml[3307,106984+43]..[3307,106984+50])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3308,107036+12]..[3308,107036+15])
                                                Pexp_ident "ctx" (lambda/matching.ml[3308,107036+12]..[3308,107036+15])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3308,107036+16]..[3308,107036+18])
                                                Pexp_ident "pm" (lambda/matching.ml[3308,107036+16]..[3308,107036+18])
                                          ]
                                    ]
                      <case>
                        pattern (lambda/matching.ml[3310,107061+4]..[3310,107061+26])
                          Ppat_construct "PmVar" (lambda/matching.ml[3310,107061+4]..[3310,107061+9])
                          Some
                            []
                            pattern (lambda/matching.ml[3310,107061+10]..[3310,107061+26])
                              Ppat_record Closed
                              [
                                "inside" (lambda/matching.ml[3310,107061+12]..[3310,107061+18])
                                  pattern (lambda/matching.ml[3310,107061+21]..[3310,107061+24])
                                    Ppat_var "pmh" (lambda/matching.ml[3310,107061+21]..[3310,107061+24])
                              ]
                        expression (lambda/matching.ml[3311,107091+6]..[3314,107197+43])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3311,107091+10]..[3311,107091+20])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3311,107091+10]..[3311,107091+13])
                                    Ppat_var "lam" (lambda/matching.ml[3311,107091+10]..[3311,107091+13])
                                  pattern (lambda/matching.ml[3311,107091+15]..[3311,107091+20])
                                    Ppat_var "total" (lambda/matching.ml[3311,107091+15]..[3311,107091+20])
                                ]
                              expression (lambda/matching.ml[3312,107114+8]..[3312,107114+73])
                                Pexp_apply
                                expression (lambda/matching.ml[3312,107114+8]..[3312,107114+27])
                                  Pexp_ident "do_compile_matching" (lambda/matching.ml[3312,107114+8]..[3312,107114+27])
                                [
                                  <arg>
                                  Labelled "scopes"
                                    expression (lambda/matching.ml[3312,107114+29]..[3312,107114+35])
                                      Pexp_ident "scopes" (lambda/matching.ml[3312,107114+29]..[3312,107114+35])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3312,107114+36]..[3312,107114+40])
                                      Pexp_ident "repr" (lambda/matching.ml[3312,107114+36]..[3312,107114+40])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3312,107114+41]..[3312,107114+48])
                                      Pexp_ident "partial" (lambda/matching.ml[3312,107114+41]..[3312,107114+48])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3312,107114+49]..[3312,107114+69])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3312,107114+50]..[3312,107114+64])
                                        Pexp_ident "Context.lshift" (lambda/matching.ml[3312,107114+50]..[3312,107114+64])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3312,107114+65]..[3312,107114+68])
                                            Pexp_ident "ctx" (lambda/matching.ml[3312,107114+65]..[3312,107114+68])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3312,107114+70]..[3312,107114+73])
                                      Pexp_ident "pmh" (lambda/matching.ml[3312,107114+70]..[3312,107114+73])
                                ]
                          ]
                          expression (lambda/matching.ml[3314,107197+6]..[3314,107197+43])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[3314,107197+7]..[3314,107197+10])
                                Pexp_ident "lam" (lambda/matching.ml[3314,107197+7]..[3314,107197+10])
                              expression (lambda/matching.ml[3314,107197+12]..[3314,107197+42])
                                Pexp_apply
                                expression (lambda/matching.ml[3314,107197+12]..[3314,107197+21])
                                  Pexp_ident "Jumps.map" (lambda/matching.ml[3314,107197+12]..[3314,107197+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3314,107197+22]..[3314,107197+36])
                                      Pexp_ident "Context.rshift" (lambda/matching.ml[3314,107197+22]..[3314,107197+36])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3314,107197+37]..[3314,107197+42])
                                      Pexp_ident "total" (lambda/matching.ml[3314,107197+37]..[3314,107197+42])
                                ]
                            ]
                      <case>
                        pattern (lambda/matching.ml[3315,107241+4]..[3315,107241+27])
                          Ppat_construct "PmOr" (lambda/matching.ml[3315,107241+4]..[3315,107241+8])
                          Some
                            []
                            pattern (lambda/matching.ml[3315,107241+9]..[3315,107241+27])
                              Ppat_record Closed
                              [
                                "body" (lambda/matching.ml[3315,107241+11]..[3315,107241+15]) ghost
                                  pattern (lambda/matching.ml[3315,107241+11]..[3315,107241+15])
                                    Ppat_var "body" (lambda/matching.ml[3315,107241+11]..[3315,107241+15])
                                "handlers" (lambda/matching.ml[3315,107241+17]..[3315,107241+25]) ghost
                                  pattern (lambda/matching.ml[3315,107241+17]..[3315,107241+25])
                                    Ppat_var "handlers" (lambda/matching.ml[3315,107241+17]..[3315,107241+25])
                              ]
                        expression (lambda/matching.ml[3316,107272+6]..[3319,107423+30])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3316,107272+10]..[3316,107272+20])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3316,107272+10]..[3316,107272+13])
                                    Ppat_var "lam" (lambda/matching.ml[3316,107272+10]..[3316,107272+13])
                                  pattern (lambda/matching.ml[3316,107272+15]..[3316,107272+20])
                                    Ppat_var "total" (lambda/matching.ml[3316,107272+15]..[3316,107272+20])
                                ]
                              expression (lambda/matching.ml[3317,107295+8]..[3317,107295+62])
                                Pexp_apply
                                expression (lambda/matching.ml[3317,107295+8]..[3317,107295+32])
                                  Pexp_ident "compile_match_simplified" (lambda/matching.ml[3317,107295+8]..[3317,107295+32])
                                [
                                  <arg>
                                  Labelled "scopes"
                                    expression (lambda/matching.ml[3317,107295+34]..[3317,107295+40])
                                      Pexp_ident "scopes" (lambda/matching.ml[3317,107295+34]..[3317,107295+40])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3317,107295+41]..[3317,107295+45])
                                      Pexp_ident "repr" (lambda/matching.ml[3317,107295+41]..[3317,107295+45])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3317,107295+46]..[3317,107295+53])
                                      Pexp_ident "partial" (lambda/matching.ml[3317,107295+46]..[3317,107295+53])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3317,107295+54]..[3317,107295+57])
                                      Pexp_ident "ctx" (lambda/matching.ml[3317,107295+54]..[3317,107295+57])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3317,107295+58]..[3317,107295+62])
                                      Pexp_ident "body" (lambda/matching.ml[3317,107295+58]..[3317,107295+62])
                                ]
                          ]
                          expression (lambda/matching.ml[3318,107361+6]..[3319,107423+30])
                            Pexp_apply
                            expression (lambda/matching.ml[3318,107361+6]..[3318,107361+24])
                              Pexp_ident "compile_orhandlers" (lambda/matching.ml[3318,107361+6]..[3318,107361+24])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3318,107361+25]..[3318,107361+61])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3318,107361+26]..[3318,107361+39])
                                    Pexp_ident "compile_match" (lambda/matching.ml[3318,107361+26]..[3318,107361+39])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3318,107361+41]..[3318,107361+47])
                                        Pexp_ident "scopes" (lambda/matching.ml[3318,107361+41]..[3318,107361+47])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3318,107361+48]..[3318,107361+52])
                                        Pexp_ident "repr" (lambda/matching.ml[3318,107361+48]..[3318,107361+52])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3318,107361+53]..[3318,107361+60])
                                        Pexp_ident "partial" (lambda/matching.ml[3318,107361+53]..[3318,107361+60])
                                  ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3319,107423+8]..[3319,107423+11])
                                  Pexp_ident "lam" (lambda/matching.ml[3319,107423+8]..[3319,107423+11])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3319,107423+12]..[3319,107423+17])
                                  Pexp_ident "total" (lambda/matching.ml[3319,107423+12]..[3319,107423+17])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3319,107423+18]..[3319,107423+21])
                                  Pexp_ident "ctx" (lambda/matching.ml[3319,107423+18]..[3319,107423+21])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3319,107423+22]..[3319,107423+30])
                                  Pexp_ident "handlers" (lambda/matching.ml[3319,107423+22]..[3319,107423+30])
                            ]
                    ]
      <def>
        pattern (lambda/matching.ml[3321,107455+4]..[3321,107455+19])
          Ppat_var "compile_no_test" (lambda/matching.ml[3321,107455+4]..[3321,107455+19])
        expression (lambda/matching.ml[3321,107455+20]..[3325,107676+34]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3321,107455+21]..[3321,107455+27])
            Ppat_var "scopes" (lambda/matching.ml[3321,107455+21]..[3321,107455+27])
          expression (lambda/matching.ml[3321,107455+28]..[3325,107676+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3321,107455+28]..[3321,107455+34])
              Ppat_var "divide" (lambda/matching.ml[3321,107455+28]..[3321,107455+34])
            expression (lambda/matching.ml[3321,107455+35]..[3325,107676+34]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3321,107455+35]..[3321,107455+41])
                Ppat_var "up_ctx" (lambda/matching.ml[3321,107455+35]..[3321,107455+41])
              expression (lambda/matching.ml[3321,107455+42]..[3325,107676+34]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3321,107455+42]..[3321,107455+46])
                  Ppat_var "repr" (lambda/matching.ml[3321,107455+42]..[3321,107455+46])
                expression (lambda/matching.ml[3321,107455+47]..[3325,107676+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3321,107455+47]..[3321,107455+54])
                    Ppat_var "partial" (lambda/matching.ml[3321,107455+47]..[3321,107455+54])
                  expression (lambda/matching.ml[3321,107455+55]..[3325,107676+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3321,107455+55]..[3321,107455+58])
                      Ppat_var "ctx" (lambda/matching.ml[3321,107455+55]..[3321,107455+58])
                    expression (lambda/matching.ml[3321,107455+59]..[3325,107676+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[3321,107455+59]..[3321,107455+67])
                        Ppat_var "to_match" (lambda/matching.ml[3321,107455+59]..[3321,107455+67])
                      expression (lambda/matching.ml[3322,107525+2]..[3325,107676+34])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3322,107525+6]..[3322,107525+41])
                              Ppat_record Closed
                              [
                                "pm" (lambda/matching.ml[3322,107525+8]..[3322,107525+10])
                                  pattern (lambda/matching.ml[3322,107525+13]..[3322,107525+23])
                                    Ppat_var "this_match" (lambda/matching.ml[3322,107525+13]..[3322,107525+23])
                                "ctx" (lambda/matching.ml[3322,107525+25]..[3322,107525+28])
                                  pattern (lambda/matching.ml[3322,107525+31]..[3322,107525+39])
                                    Ppat_var "this_ctx" (lambda/matching.ml[3322,107525+31]..[3322,107525+39])
                              ]
                            expression (lambda/matching.ml[3322,107525+44]..[3322,107525+63])
                              Pexp_apply
                              expression (lambda/matching.ml[3322,107525+44]..[3322,107525+50])
                                Pexp_ident "divide" (lambda/matching.ml[3322,107525+44]..[3322,107525+50])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3322,107525+51]..[3322,107525+54])
                                    Pexp_ident "ctx" (lambda/matching.ml[3322,107525+51]..[3322,107525+54])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3322,107525+55]..[3322,107525+63])
                                    Pexp_ident "to_match" (lambda/matching.ml[3322,107525+55]..[3322,107525+63])
                              ]
                        ]
                        expression (lambda/matching.ml[3323,107592+2]..[3325,107676+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3323,107592+6]..[3323,107592+19])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3323,107592+6]..[3323,107592+12])
                                    Ppat_var "lambda" (lambda/matching.ml[3323,107592+6]..[3323,107592+12])
                                  pattern (lambda/matching.ml[3323,107592+14]..[3323,107592+19])
                                    Ppat_var "total" (lambda/matching.ml[3323,107592+14]..[3323,107592+19])
                                ]
                              expression (lambda/matching.ml[3324,107614+4]..[3324,107614+58])
                                Pexp_apply
                                expression (lambda/matching.ml[3324,107614+4]..[3324,107614+17])
                                  Pexp_ident "compile_match" (lambda/matching.ml[3324,107614+4]..[3324,107614+17])
                                [
                                  <arg>
                                  Labelled "scopes"
                                    expression (lambda/matching.ml[3324,107614+19]..[3324,107614+25])
                                      Pexp_ident "scopes" (lambda/matching.ml[3324,107614+19]..[3324,107614+25])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3324,107614+26]..[3324,107614+30])
                                      Pexp_ident "repr" (lambda/matching.ml[3324,107614+26]..[3324,107614+30])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3324,107614+31]..[3324,107614+38])
                                      Pexp_ident "partial" (lambda/matching.ml[3324,107614+31]..[3324,107614+38])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3324,107614+39]..[3324,107614+47])
                                      Pexp_ident "this_ctx" (lambda/matching.ml[3324,107614+39]..[3324,107614+47])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3324,107614+48]..[3324,107614+58])
                                      Pexp_ident "this_match" (lambda/matching.ml[3324,107614+48]..[3324,107614+58])
                                ]
                          ]
                          expression (lambda/matching.ml[3325,107676+2]..[3325,107676+34])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[3325,107676+3]..[3325,107676+9])
                                Pexp_ident "lambda" (lambda/matching.ml[3325,107676+3]..[3325,107676+9])
                              expression (lambda/matching.ml[3325,107676+11]..[3325,107676+33])
                                Pexp_apply
                                expression (lambda/matching.ml[3325,107676+11]..[3325,107676+20])
                                  Pexp_ident "Jumps.map" (lambda/matching.ml[3325,107676+11]..[3325,107676+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3325,107676+21]..[3325,107676+27])
                                      Pexp_ident "up_ctx" (lambda/matching.ml[3325,107676+21]..[3325,107676+27])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3325,107676+28]..[3325,107676+33])
                                      Pexp_ident "total" (lambda/matching.ml[3325,107676+28]..[3325,107676+33])
                                ]
                            ]
    ]
  structure_item (lambda/matching.ml[3347,108550+0]..[3360,108792+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3347,108550+4]..[3347,108550+15])
          Ppat_var "is_lazy_pat" (lambda/matching.ml[3347,108550+4]..[3347,108550+15])
        expression (lambda/matching.ml[3347,108550+16]..[3360,108792+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3347,108550+16]..[3347,108550+17])
            Ppat_var "p" (lambda/matching.ml[3347,108550+16]..[3347,108550+17])
          expression (lambda/matching.ml[3348,108570+2]..[3360,108792+11])
            Pexp_match
            expression (lambda/matching.ml[3348,108570+8]..[3348,108570+18])
              Pexp_field
              expression (lambda/matching.ml[3348,108570+8]..[3348,108570+9])
                Pexp_ident "p" (lambda/matching.ml[3348,108570+8]..[3348,108570+9])
              "pat_desc" (lambda/matching.ml[3348,108570+10]..[3348,108570+18])
            [
              <case>
                pattern (lambda/matching.ml[3349,108594+4]..[3349,108594+15])
                  Ppat_construct "Tpat_lazy" (lambda/matching.ml[3349,108594+4]..[3349,108594+13])
                  Some
                    []
                    pattern (lambda/matching.ml[3349,108594+14]..[3349,108594+15])
                      Ppat_any
                expression (lambda/matching.ml[3349,108594+19]..[3349,108594+23])
                  Pexp_construct "true" (lambda/matching.ml[3349,108594+19]..[3349,108594+23])
                  None
              <case>
                pattern (lambda/matching.ml[3350,108618+4]..[3359,108776+12])
                  Ppat_or
                  pattern (lambda/matching.ml[3350,108618+4]..[3358,108761+14])
                    Ppat_or
                    pattern (lambda/matching.ml[3350,108618+4]..[3357,108741+19])
                      Ppat_or
                      pattern (lambda/matching.ml[3350,108618+4]..[3356,108727+13])
                        Ppat_or
                        pattern (lambda/matching.ml[3350,108618+4]..[3355,108710+16])
                          Ppat_or
                          pattern (lambda/matching.ml[3350,108618+4]..[3354,108689+20])
                            Ppat_or
                            pattern (lambda/matching.ml[3350,108618+4]..[3353,108672+16])
                              Ppat_or
                              pattern (lambda/matching.ml[3350,108618+4]..[3352,108654+17])
                                Ppat_or
                                pattern (lambda/matching.ml[3350,108618+4]..[3351,108635+18])
                                  Ppat_or
                                  pattern (lambda/matching.ml[3350,108618+4]..[3350,108618+16])
                                    Ppat_construct "Tpat_alias" (lambda/matching.ml[3350,108618+4]..[3350,108618+14])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3350,108618+15]..[3350,108618+16])
                                        Ppat_any
                                  pattern (lambda/matching.ml[3351,108635+4]..[3351,108635+18])
                                    Ppat_construct "Tpat_variant" (lambda/matching.ml[3351,108635+4]..[3351,108635+16])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3351,108635+17]..[3351,108635+18])
                                        Ppat_any
                                pattern (lambda/matching.ml[3352,108654+4]..[3352,108654+17])
                                  Ppat_construct "Tpat_record" (lambda/matching.ml[3352,108654+4]..[3352,108654+15])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[3352,108654+16]..[3352,108654+17])
                                      Ppat_any
                              pattern (lambda/matching.ml[3353,108672+4]..[3353,108672+16])
                                Ppat_construct "Tpat_tuple" (lambda/matching.ml[3353,108672+4]..[3353,108672+14])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3353,108672+15]..[3353,108672+16])
                                    Ppat_any
                            pattern (lambda/matching.ml[3354,108689+4]..[3354,108689+20])
                              Ppat_construct "Tpat_construct" (lambda/matching.ml[3354,108689+4]..[3354,108689+18])
                              Some
                                []
                                pattern (lambda/matching.ml[3354,108689+19]..[3354,108689+20])
                                  Ppat_any
                          pattern (lambda/matching.ml[3355,108710+4]..[3355,108710+16])
                            Ppat_construct "Tpat_array" (lambda/matching.ml[3355,108710+4]..[3355,108710+14])
                            Some
                              []
                              pattern (lambda/matching.ml[3355,108710+15]..[3355,108710+16])
                                Ppat_any
                        pattern (lambda/matching.ml[3356,108727+4]..[3356,108727+13])
                          Ppat_construct "Tpat_or" (lambda/matching.ml[3356,108727+4]..[3356,108727+11])
                          Some
                            []
                            pattern (lambda/matching.ml[3356,108727+12]..[3356,108727+13])
                              Ppat_any
                      pattern (lambda/matching.ml[3357,108741+4]..[3357,108741+19])
                        Ppat_construct "Tpat_constant" (lambda/matching.ml[3357,108741+4]..[3357,108741+17])
                        Some
                          []
                          pattern (lambda/matching.ml[3357,108741+18]..[3357,108741+19])
                            Ppat_any
                    pattern (lambda/matching.ml[3358,108761+4]..[3358,108761+14])
                      Ppat_construct "Tpat_var" (lambda/matching.ml[3358,108761+4]..[3358,108761+12])
                      Some
                        []
                        pattern (lambda/matching.ml[3358,108761+13]..[3358,108761+14])
                          Ppat_any
                  pattern (lambda/matching.ml[3359,108776+4]..[3359,108776+12])
                    Ppat_construct "Tpat_any" (lambda/matching.ml[3359,108776+4]..[3359,108776+12])
                    None
                expression (lambda/matching.ml[3360,108792+6]..[3360,108792+11])
                  Pexp_construct "false" (lambda/matching.ml[3360,108792+6]..[3360,108792+11])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[3362,108805+0]..[3362,108805+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3362,108805+4]..[3362,108805+12])
          Ppat_var "has_lazy" (lambda/matching.ml[3362,108805+4]..[3362,108805+12])
        expression (lambda/matching.ml[3362,108805+13]..[3362,108805+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3362,108805+13]..[3362,108805+14])
            Ppat_var "p" (lambda/matching.ml[3362,108805+13]..[3362,108805+14])
          expression (lambda/matching.ml[3362,108805+17]..[3362,108805+55])
            Pexp_apply
            expression (lambda/matching.ml[3362,108805+17]..[3362,108805+41])
              Pexp_ident "Typedtree.exists_pattern" (lambda/matching.ml[3362,108805+17]..[3362,108805+41])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[3362,108805+42]..[3362,108805+53])
                  Pexp_ident "is_lazy_pat" (lambda/matching.ml[3362,108805+42]..[3362,108805+53])
              <arg>
              Nolabel
                expression (lambda/matching.ml[3362,108805+54]..[3362,108805+55])
                  Pexp_ident "p" (lambda/matching.ml[3362,108805+54]..[3362,108805+55])
            ]
    ]
  structure_item (lambda/matching.ml[3364,108862+0]..[3383,109280+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3364,108862+4]..[3364,108862+32])
          Ppat_var "is_record_with_mutable_field" (lambda/matching.ml[3364,108862+4]..[3364,108862+32])
        expression (lambda/matching.ml[3364,108862+33]..[3383,109280+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3364,108862+33]..[3364,108862+34])
            Ppat_var "p" (lambda/matching.ml[3364,108862+33]..[3364,108862+34])
          expression (lambda/matching.ml[3365,108899+2]..[3383,109280+11])
            Pexp_match
            expression (lambda/matching.ml[3365,108899+8]..[3365,108899+18])
              Pexp_field
              expression (lambda/matching.ml[3365,108899+8]..[3365,108899+9])
                Pexp_ident "p" (lambda/matching.ml[3365,108899+8]..[3365,108899+9])
              "pat_desc" (lambda/matching.ml[3365,108899+10]..[3365,108899+18])
            [
              <case>
                pattern (lambda/matching.ml[3366,108923+4]..[3366,108923+24])
                  Ppat_construct "Tpat_record" (lambda/matching.ml[3366,108923+4]..[3366,108923+15])
                  Some
                    []
                    pattern (lambda/matching.ml[3366,108923+16]..[3366,108923+24])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3366,108923+17]..[3366,108923+20])
                          Ppat_var "lps" (lambda/matching.ml[3366,108923+17]..[3366,108923+20])
                        pattern (lambda/matching.ml[3366,108923+22]..[3366,108923+23])
                          Ppat_any
                      ]
                expression (lambda/matching.ml[3367,108951+6]..[3372,109096+11])
                  Pexp_apply
                  expression (lambda/matching.ml[3367,108951+6]..[3367,108951+17])
                    Pexp_ident "List.exists" (lambda/matching.ml[3367,108951+6]..[3367,108951+17])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3368,108969+8]..[3371,109064+31])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[3368,108969+13]..[3368,108969+24])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3368,108969+14]..[3368,108969+15])
                              Ppat_any
                            pattern (lambda/matching.ml[3368,108969+17]..[3368,108969+20])
                              Ppat_var "lbl" (lambda/matching.ml[3368,108969+17]..[3368,108969+20])
                            pattern (lambda/matching.ml[3368,108969+22]..[3368,108969+23])
                              Ppat_any
                          ]
                        expression (lambda/matching.ml[3369,108997+10]..[3371,109064+30])
                          Pexp_match
                          expression (lambda/matching.ml[3369,108997+16]..[3369,108997+33])
                            Pexp_field
                            expression (lambda/matching.ml[3369,108997+16]..[3369,108997+19])
                              Pexp_ident "lbl" (lambda/matching.ml[3369,108997+16]..[3369,108997+19])
                            "Types.lbl_mut" (lambda/matching.ml[3369,108997+20]..[3369,108997+33])
                          [
                            <case>
                              pattern (lambda/matching.ml[3370,109036+12]..[3370,109036+19])
                                Ppat_construct "Mutable" (lambda/matching.ml[3370,109036+12]..[3370,109036+19])
                                None
                              expression (lambda/matching.ml[3370,109036+23]..[3370,109036+27])
                                Pexp_construct "true" (lambda/matching.ml[3370,109036+23]..[3370,109036+27])
                                None
                            <case>
                              pattern (lambda/matching.ml[3371,109064+12]..[3371,109064+21])
                                Ppat_construct "Immutable" (lambda/matching.ml[3371,109064+12]..[3371,109064+21])
                                None
                              expression (lambda/matching.ml[3371,109064+25]..[3371,109064+30])
                                Pexp_construct "false" (lambda/matching.ml[3371,109064+25]..[3371,109064+30])
                                None
                          ]
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3372,109096+8]..[3372,109096+11])
                        Pexp_ident "lps" (lambda/matching.ml[3372,109096+8]..[3372,109096+11])
                  ]
              <case>
                pattern (lambda/matching.ml[3373,109108+4]..[3382,109264+12])
                  Ppat_or
                  pattern (lambda/matching.ml[3373,109108+4]..[3381,109249+14])
                    Ppat_or
                    pattern (lambda/matching.ml[3373,109108+4]..[3380,109229+19])
                      Ppat_or
                      pattern (lambda/matching.ml[3373,109108+4]..[3379,109215+13])
                        Ppat_or
                        pattern (lambda/matching.ml[3373,109108+4]..[3378,109198+16])
                          Ppat_or
                          pattern (lambda/matching.ml[3373,109108+4]..[3377,109177+20])
                            Ppat_or
                            pattern (lambda/matching.ml[3373,109108+4]..[3376,109160+16])
                              Ppat_or
                              pattern (lambda/matching.ml[3373,109108+4]..[3375,109144+15])
                                Ppat_or
                                pattern (lambda/matching.ml[3373,109108+4]..[3374,109125+18])
                                  Ppat_or
                                  pattern (lambda/matching.ml[3373,109108+4]..[3373,109108+16])
                                    Ppat_construct "Tpat_alias" (lambda/matching.ml[3373,109108+4]..[3373,109108+14])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3373,109108+15]..[3373,109108+16])
                                        Ppat_any
                                  pattern (lambda/matching.ml[3374,109125+4]..[3374,109125+18])
                                    Ppat_construct "Tpat_variant" (lambda/matching.ml[3374,109125+4]..[3374,109125+16])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3374,109125+17]..[3374,109125+18])
                                        Ppat_any
                                pattern (lambda/matching.ml[3375,109144+4]..[3375,109144+15])
                                  Ppat_construct "Tpat_lazy" (lambda/matching.ml[3375,109144+4]..[3375,109144+13])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[3375,109144+14]..[3375,109144+15])
                                      Ppat_any
                              pattern (lambda/matching.ml[3376,109160+4]..[3376,109160+16])
                                Ppat_construct "Tpat_tuple" (lambda/matching.ml[3376,109160+4]..[3376,109160+14])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3376,109160+15]..[3376,109160+16])
                                    Ppat_any
                            pattern (lambda/matching.ml[3377,109177+4]..[3377,109177+20])
                              Ppat_construct "Tpat_construct" (lambda/matching.ml[3377,109177+4]..[3377,109177+18])
                              Some
                                []
                                pattern (lambda/matching.ml[3377,109177+19]..[3377,109177+20])
                                  Ppat_any
                          pattern (lambda/matching.ml[3378,109198+4]..[3378,109198+16])
                            Ppat_construct "Tpat_array" (lambda/matching.ml[3378,109198+4]..[3378,109198+14])
                            Some
                              []
                              pattern (lambda/matching.ml[3378,109198+15]..[3378,109198+16])
                                Ppat_any
                        pattern (lambda/matching.ml[3379,109215+4]..[3379,109215+13])
                          Ppat_construct "Tpat_or" (lambda/matching.ml[3379,109215+4]..[3379,109215+11])
                          Some
                            []
                            pattern (lambda/matching.ml[3379,109215+12]..[3379,109215+13])
                              Ppat_any
                      pattern (lambda/matching.ml[3380,109229+4]..[3380,109229+19])
                        Ppat_construct "Tpat_constant" (lambda/matching.ml[3380,109229+4]..[3380,109229+17])
                        Some
                          []
                          pattern (lambda/matching.ml[3380,109229+18]..[3380,109229+19])
                            Ppat_any
                    pattern (lambda/matching.ml[3381,109249+4]..[3381,109249+14])
                      Ppat_construct "Tpat_var" (lambda/matching.ml[3381,109249+4]..[3381,109249+12])
                      Some
                        []
                        pattern (lambda/matching.ml[3381,109249+13]..[3381,109249+14])
                          Ppat_any
                  pattern (lambda/matching.ml[3382,109264+4]..[3382,109264+12])
                    Ppat_construct "Tpat_any" (lambda/matching.ml[3382,109264+4]..[3382,109264+12])
                    None
                expression (lambda/matching.ml[3383,109280+6]..[3383,109280+11])
                  Pexp_construct "false" (lambda/matching.ml[3383,109280+6]..[3383,109280+11])
                  None
            ]
    ]
  structure_item (lambda/matching.ml[3385,109293+0]..[3385,109293+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3385,109293+4]..[3385,109293+15])
          Ppat_var "has_mutable" (lambda/matching.ml[3385,109293+4]..[3385,109293+15])
        expression (lambda/matching.ml[3385,109293+16]..[3385,109293+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3385,109293+16]..[3385,109293+17])
            Ppat_var "p" (lambda/matching.ml[3385,109293+16]..[3385,109293+17])
          expression (lambda/matching.ml[3385,109293+20]..[3385,109293+75])
            Pexp_apply
            expression (lambda/matching.ml[3385,109293+20]..[3385,109293+44])
              Pexp_ident "Typedtree.exists_pattern" (lambda/matching.ml[3385,109293+20]..[3385,109293+44])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[3385,109293+45]..[3385,109293+73])
                  Pexp_ident "is_record_with_mutable_field" (lambda/matching.ml[3385,109293+45]..[3385,109293+73])
              <arg>
              Nolabel
                expression (lambda/matching.ml[3385,109293+74]..[3385,109293+75])
                  Pexp_ident "p" (lambda/matching.ml[3385,109293+74]..[3385,109293+75])
            ]
    ]
  structure_item (lambda/matching.ml[3392,109489+0]..[3405,109852+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3392,109489+4]..[3392,109489+17])
          Ppat_var "check_partial" (lambda/matching.ml[3392,109489+4]..[3392,109489+17])
        expression (lambda/matching.ml[3392,109489+18]..[3405,109852+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3392,109489+18]..[3392,109489+29])
            Ppat_var "has_mutable" (lambda/matching.ml[3392,109489+18]..[3392,109489+29])
          expression (lambda/matching.ml[3392,109489+30]..[3405,109852+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3392,109489+30]..[3392,109489+38])
              Ppat_var "has_lazy" (lambda/matching.ml[3392,109489+30]..[3392,109489+38])
            expression (lambda/matching.ml[3392,109489+39]..[3405,109852+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3392,109489+39]..[3392,109489+51])
                Ppat_var "pat_act_list" (lambda/matching.ml[3392,109489+39]..[3392,109489+51])
              expression (lambda/matching.ml[3392,109489+54]..[3405,109852+13])
                Pexp_function
                [
                  <case>
                    pattern (lambda/matching.ml[3393,109552+4]..[3393,109552+11])
                      Ppat_construct "Partial" (lambda/matching.ml[3393,109552+4]..[3393,109552+11])
                      None
                    expression (lambda/matching.ml[3393,109552+15]..[3393,109552+22])
                      Pexp_construct "Partial" (lambda/matching.ml[3393,109552+15]..[3393,109552+22])
                      None
                  <case>
                    pattern (lambda/matching.ml[3394,109575+4]..[3394,109575+9])
                      Ppat_construct "Total" (lambda/matching.ml[3394,109575+4]..[3394,109575+9])
                      None
                    expression (lambda/matching.ml[3395,109588+6]..[3405,109852+13])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[3396,109597+8]..[3401,109788+25])
                        Pexp_apply
                        expression (lambda/matching.ml[3397,109623+8]..[3397,109623+10])
                          Pexp_ident "||" (lambda/matching.ml[3397,109623+8]..[3397,109623+10])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3396,109597+8]..[3396,109597+25])
                              Pexp_apply
                              expression (lambda/matching.ml[3396,109597+21]..[3396,109597+22])
                                Pexp_ident "=" (lambda/matching.ml[3396,109597+21]..[3396,109597+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3396,109597+8]..[3396,109597+20])
                                    Pexp_ident "pat_act_list" (lambda/matching.ml[3396,109597+8]..[3396,109597+20])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3396,109597+23]..[3396,109597+25])
                                    Pexp_construct "[]" (lambda/matching.ml[3396,109597+23]..[3396,109597+25])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3398,109662+11]..[3401,109788+25])
                              Pexp_apply
                              expression (lambda/matching.ml[3398,109662+11]..[3398,109662+22])
                                Pexp_ident "List.exists" (lambda/matching.ml[3398,109662+11]..[3398,109662+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3399,109685+13]..[3400,109718+69])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[3399,109685+18]..[3399,109685+29])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/matching.ml[3399,109685+19]..[3399,109685+23])
                                          Ppat_var "pats" (lambda/matching.ml[3399,109685+19]..[3399,109685+23])
                                        pattern (lambda/matching.ml[3399,109685+25]..[3399,109685+28])
                                          Ppat_var "lam" (lambda/matching.ml[3399,109685+25]..[3399,109685+28])
                                      ]
                                    expression (lambda/matching.ml[3400,109718+15]..[3400,109718+68])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3400,109718+32]..[3400,109718+34])
                                        Pexp_ident "&&" (lambda/matching.ml[3400,109718+32]..[3400,109718+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3400,109718+15]..[3400,109718+31])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3400,109718+15]..[3400,109718+26])
                                              Pexp_ident "has_mutable" (lambda/matching.ml[3400,109718+15]..[3400,109718+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3400,109718+27]..[3400,109718+31])
                                                  Pexp_ident "pats" (lambda/matching.ml[3400,109718+27]..[3400,109718+31])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3400,109718+35]..[3400,109718+68])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3400,109718+51]..[3400,109718+53])
                                              Pexp_ident "||" (lambda/matching.ml[3400,109718+51]..[3400,109718+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3400,109718+36]..[3400,109718+50])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3400,109718+36]..[3400,109718+46])
                                                    Pexp_ident "is_guarded" (lambda/matching.ml[3400,109718+36]..[3400,109718+46])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3400,109718+47]..[3400,109718+50])
                                                        Pexp_ident "lam" (lambda/matching.ml[3400,109718+47]..[3400,109718+50])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3400,109718+54]..[3400,109718+67])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3400,109718+54]..[3400,109718+62])
                                                    Pexp_ident "has_lazy" (lambda/matching.ml[3400,109718+54]..[3400,109718+62])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3400,109718+63]..[3400,109718+67])
                                                        Pexp_ident "pats" (lambda/matching.ml[3400,109718+63]..[3400,109718+67])
                                                  ]
                                            ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3401,109788+13]..[3401,109788+25])
                                    Pexp_ident "pat_act_list" (lambda/matching.ml[3401,109788+13]..[3401,109788+25])
                              ]
                        ]
                      expression (lambda/matching.ml[3403,109825+8]..[3403,109825+15])
                        Pexp_construct "Partial" (lambda/matching.ml[3403,109825+8]..[3403,109825+15])
                        None
                      Some
                        expression (lambda/matching.ml[3405,109852+8]..[3405,109852+13])
                          Pexp_construct "Total" (lambda/matching.ml[3405,109852+8]..[3405,109852+13])
                          None
                ]
    ]
  structure_item (lambda/matching.ml[3407,109867+0]..[3408,109906+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3407,109867+4]..[3407,109867+22])
          Ppat_var "check_partial_list" (lambda/matching.ml[3407,109867+4]..[3407,109867+22])
        expression (lambda/matching.ml[3407,109867+23]..[3408,109906+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3407,109867+23]..[3407,109867+36])
            Ppat_var "pats_act_list" (lambda/matching.ml[3407,109867+23]..[3407,109867+36])
          expression (lambda/matching.ml[3408,109906+2]..[3408,109906+78])
            Pexp_apply
            expression (lambda/matching.ml[3408,109906+2]..[3408,109906+15])
              Pexp_ident "check_partial" (lambda/matching.ml[3408,109906+2]..[3408,109906+15])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[3408,109906+16]..[3408,109906+41])
                  Pexp_apply
                  expression (lambda/matching.ml[3408,109906+17]..[3408,109906+28])
                    Pexp_ident "List.exists" (lambda/matching.ml[3408,109906+17]..[3408,109906+28])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3408,109906+29]..[3408,109906+40])
                        Pexp_ident "has_mutable" (lambda/matching.ml[3408,109906+29]..[3408,109906+40])
                  ]
              <arg>
              Nolabel
                expression (lambda/matching.ml[3408,109906+42]..[3408,109906+64])
                  Pexp_apply
                  expression (lambda/matching.ml[3408,109906+43]..[3408,109906+54])
                    Pexp_ident "List.exists" (lambda/matching.ml[3408,109906+43]..[3408,109906+54])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3408,109906+55]..[3408,109906+63])
                        Pexp_ident "has_lazy" (lambda/matching.ml[3408,109906+55]..[3408,109906+63])
                  ]
              <arg>
              Nolabel
                expression (lambda/matching.ml[3408,109906+65]..[3408,109906+78])
                  Pexp_ident "pats_act_list" (lambda/matching.ml[3408,109906+65]..[3408,109906+78])
            ]
    ]
  structure_item (lambda/matching.ml[3410,109986+0]..[3411,110019+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3410,109986+4]..[3410,109986+17])
          Ppat_var "check_partial" (lambda/matching.ml[3410,109986+4]..[3410,109986+17])
        expression (lambda/matching.ml[3410,109986+18]..[3411,110019+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3410,109986+18]..[3410,109986+30])
            Ppat_var "pat_act_list" (lambda/matching.ml[3410,109986+18]..[3410,109986+30])
          expression (lambda/matching.ml[3411,110019+2]..[3411,110019+49])
            Pexp_apply
            expression (lambda/matching.ml[3411,110019+2]..[3411,110019+15])
              Pexp_ident "check_partial" (lambda/matching.ml[3411,110019+2]..[3411,110019+15])
            [
              <arg>
              Nolabel
                expression (lambda/matching.ml[3411,110019+16]..[3411,110019+27])
                  Pexp_ident "has_mutable" (lambda/matching.ml[3411,110019+16]..[3411,110019+27])
              <arg>
              Nolabel
                expression (lambda/matching.ml[3411,110019+28]..[3411,110019+36])
                  Pexp_ident "has_lazy" (lambda/matching.ml[3411,110019+28]..[3411,110019+36])
              <arg>
              Nolabel
                expression (lambda/matching.ml[3411,110019+37]..[3411,110019+49])
                  Pexp_ident "pat_act_list" (lambda/matching.ml[3411,110019+37]..[3411,110019+49])
            ]
    ]
  structure_item (lambda/matching.ml[3415,110116+0]..[3417,110159+27])
    Pstr_type Rec
    [
      type_declaration "failer_kind" (lambda/matching.ml[3415,110116+5]..[3415,110116+16]) (lambda/matching.ml[3415,110116+0]..[3417,110159+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/matching.ml[3416,110135+2]..[3416,110135+23])
                "Raise_match_failure" (lambda/matching.ml[3416,110135+4]..[3416,110135+23])
                []
                None
              (lambda/matching.ml[3417,110159+2]..[3417,110159+27])
                "Reraise_noloc" (lambda/matching.ml[3417,110159+4]..[3417,110159+17])
                [
                  core_type (lambda/matching.ml[3417,110159+21]..[3417,110159+27])
                    Ptyp_constr "lambda" (lambda/matching.ml[3417,110159+21]..[3417,110159+27])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[3419,110188+0]..[3446,111097+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3419,110188+4]..[3419,110188+19])
          Ppat_var "failure_handler" (lambda/matching.ml[3419,110188+4]..[3419,110188+19])
        expression (lambda/matching.ml[3419,110188+20]..[3446,111097+14]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3419,110188+21]..[3419,110188+27])
            Ppat_var "scopes" (lambda/matching.ml[3419,110188+21]..[3419,110188+27])
          expression (lambda/matching.ml[3419,110188+28]..[3446,111097+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3419,110188+28]..[3419,110188+31])
              Ppat_var "loc" (lambda/matching.ml[3419,110188+28]..[3419,110188+31])
            expression (lambda/matching.ml[3419,110188+32]..[3446,111097+14]) ghost
              Pexp_fun
              Labelled "failer"
              None
              pattern (lambda/matching.ml[3419,110188+33]..[3419,110188+39])
                Ppat_var "failer" (lambda/matching.ml[3419,110188+33]..[3419,110188+39])
              expression (lambda/matching.ml[3419,110188+40]..[3446,111097+14]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3419,110188+40]..[3419,110188+42])
                  Ppat_construct "()" (lambda/matching.ml[3419,110188+40]..[3419,110188+42])
                  None
                expression (lambda/matching.ml[3420,110233+2]..[3446,111097+14])
                  Pexp_match
                  expression (lambda/matching.ml[3420,110233+8]..[3420,110233+14])
                    Pexp_ident "failer" (lambda/matching.ml[3420,110233+8]..[3420,110233+14])
                  [
                    <case>
                      pattern (lambda/matching.ml[3421,110253+4]..[3421,110253+25])
                        Ppat_construct "Reraise_noloc" (lambda/matching.ml[3421,110253+4]..[3421,110253+17])
                        Some
                          []
                          pattern (lambda/matching.ml[3421,110253+18]..[3421,110253+25])
                            Ppat_var "exn_lam" (lambda/matching.ml[3421,110253+18]..[3421,110253+25])
                      expression (lambda/matching.ml[3422,110282+4]..[3422,110282+74])
                        Pexp_construct "Lprim" (lambda/matching.ml[3422,110282+4]..[3422,110282+9])
                        Some
                          expression (lambda/matching.ml[3422,110282+10]..[3422,110282+74])
                            Pexp_tuple
                            [
                              expression (lambda/matching.ml[3422,110282+11]..[3422,110282+31])
                                Pexp_construct "Praise" (lambda/matching.ml[3422,110282+11]..[3422,110282+17])
                                Some
                                  expression (lambda/matching.ml[3422,110282+18]..[3422,110282+31])
                                    Pexp_construct "Raise_reraise" (lambda/matching.ml[3422,110282+18]..[3422,110282+31])
                                    None
                              expression (lambda/matching.ml[3422,110282+33]..[3422,110282+44])
                                Pexp_construct "::" (lambda/matching.ml[3422,110282+35]..[3422,110282+44]) ghost
                                Some
                                  expression (lambda/matching.ml[3422,110282+35]..[3422,110282+44]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3422,110282+35]..[3422,110282+42])
                                        Pexp_ident "exn_lam" (lambda/matching.ml[3422,110282+35]..[3422,110282+42])
                                      expression (lambda/matching.ml[3422,110282+43]..[3422,110282+44]) ghost
                                        Pexp_construct "[]" (lambda/matching.ml[3422,110282+43]..[3422,110282+44]) ghost
                                        None
                                    ]
                              expression (lambda/matching.ml[3422,110282+46]..[3422,110282+73])
                                Pexp_construct "Scoped_location.Loc_unknown" (lambda/matching.ml[3422,110282+46]..[3422,110282+73])
                                None
                            ]
                    <case>
                      pattern (lambda/matching.ml[3423,110357+4]..[3423,110357+23])
                        Ppat_construct "Raise_match_failure" (lambda/matching.ml[3423,110357+4]..[3423,110357+23])
                        None
                      expression (lambda/matching.ml[3424,110384+4]..[3446,111097+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3424,110384+8]..[3424,110384+12])
                              Ppat_var "sloc" (lambda/matching.ml[3424,110384+8]..[3424,110384+12])
                            expression (lambda/matching.ml[3424,110384+15]..[3424,110384+54])
                              Pexp_apply
                              expression (lambda/matching.ml[3424,110384+15]..[3424,110384+42])
                                Pexp_ident "Scoped_location.of_location" (lambda/matching.ml[3424,110384+15]..[3424,110384+42])
                              [
                                <arg>
                                Labelled "scopes"
                                  expression (lambda/matching.ml[3424,110384+44]..[3424,110384+50])
                                    Pexp_ident "scopes" (lambda/matching.ml[3424,110384+44]..[3424,110384+50])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3424,110384+51]..[3424,110384+54])
                                    Pexp_ident "loc" (lambda/matching.ml[3424,110384+51]..[3424,110384+54])
                              ]
                        ]
                        expression (lambda/matching.ml[3425,110442+4]..[3446,111097+14])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3425,110442+8]..[3425,110442+12])
                                Ppat_var "slot" (lambda/matching.ml[3425,110442+8]..[3425,110442+12])
                              expression (lambda/matching.ml[3426,110457+6]..[3427,110490+57])
                                Pexp_apply
                                expression (lambda/matching.ml[3426,110457+6]..[3426,110457+27])
                                  Pexp_ident "transl_extension_path" (lambda/matching.ml[3426,110457+6]..[3426,110457+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3426,110457+28]..[3426,110457+32])
                                      Pexp_ident "sloc" (lambda/matching.ml[3426,110457+28]..[3426,110457+32])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3427,110490+8]..[3427,110490+31])
                                      Pexp_ident "Env.initial_safe_string" (lambda/matching.ml[3427,110490+8]..[3427,110490+31])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3427,110490+32]..[3427,110490+57])
                                      Pexp_ident "Predef.path_match_failure" (lambda/matching.ml[3427,110490+32]..[3427,110490+57])
                                ]
                          ]
                          expression (lambda/matching.ml[3429,110555+4]..[3446,111097+14])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3429,110555+8]..[3429,110555+25])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3429,110555+8]..[3429,110555+13])
                                      Ppat_var "fname" (lambda/matching.ml[3429,110555+8]..[3429,110555+13])
                                    pattern (lambda/matching.ml[3429,110555+15]..[3429,110555+19])
                                      Ppat_var "line" (lambda/matching.ml[3429,110555+15]..[3429,110555+19])
                                    pattern (lambda/matching.ml[3429,110555+21]..[3429,110555+25])
                                      Ppat_var "char" (lambda/matching.ml[3429,110555+21]..[3429,110555+25])
                                  ]
                                expression (lambda/matching.ml[3430,110583+6]..[3430,110583+50])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3430,110583+6]..[3430,110583+27])
                                    Pexp_ident "Location.get_pos_info" (lambda/matching.ml[3430,110583+6]..[3430,110583+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3430,110583+28]..[3430,110583+50])
                                        Pexp_field
                                        expression (lambda/matching.ml[3430,110583+28]..[3430,110583+31])
                                          Pexp_ident "loc" (lambda/matching.ml[3430,110583+28]..[3430,110583+31])
                                        "Location.loc_start" (lambda/matching.ml[3430,110583+32]..[3430,110583+50])
                                  ]
                            ]
                            expression (lambda/matching.ml[3431,110637+4]..[3446,111097+14])
                              Pexp_construct "Lprim" (lambda/matching.ml[3431,110637+4]..[3431,110637+9])
                              Some
                                expression (lambda/matching.ml[3432,110647+6]..[3446,111097+14])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3432,110647+8]..[3432,110647+28])
                                      Pexp_construct "Praise" (lambda/matching.ml[3432,110647+8]..[3432,110647+14])
                                      Some
                                        expression (lambda/matching.ml[3432,110647+15]..[3432,110647+28])
                                          Pexp_construct "Raise_regular" (lambda/matching.ml[3432,110647+15]..[3432,110647+28])
                                          None
                                    expression (lambda/matching.ml[3433,110677+8]..[3445,111086+9])
                                      Pexp_construct "::" (lambda/matching.ml[3433,110677+10]..[3445,111086+9]) ghost
                                      Some
                                        expression (lambda/matching.ml[3433,110677+10]..[3445,111086+9]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3433,110677+10]..[3444,111065+20])
                                              Pexp_construct "Lprim" (lambda/matching.ml[3433,110677+10]..[3433,110677+15])
                                              Some
                                                expression (lambda/matching.ml[3434,110693+12]..[3444,111065+20])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[3434,110693+14]..[3434,110693+45])
                                                      Pexp_construct "Pmakeblock" (lambda/matching.ml[3434,110693+14]..[3434,110693+24])
                                                      Some
                                                        expression (lambda/matching.ml[3434,110693+25]..[3434,110693+45])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[3434,110693+26]..[3434,110693+27])
                                                              Pexp_constant PConst_int (0,None)
                                                            expression (lambda/matching.ml[3434,110693+29]..[3434,110693+38])
                                                              Pexp_construct "Immutable" (lambda/matching.ml[3434,110693+29]..[3434,110693+38])
                                                              None
                                                            expression (lambda/matching.ml[3434,110693+40]..[3434,110693+44])
                                                              Pexp_construct "None" (lambda/matching.ml[3434,110693+40]..[3434,110693+44])
                                                              None
                                                          ]
                                                    expression (lambda/matching.ml[3435,110740+14]..[3443,111048+15])
                                                      Pexp_construct "::" (lambda/matching.ml[3435,110740+16]..[3443,111048+15]) ghost
                                                      Some
                                                        expression (lambda/matching.ml[3435,110740+16]..[3443,111048+15]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[3435,110740+16]..[3435,110740+20])
                                                              Pexp_ident "slot" (lambda/matching.ml[3435,110740+16]..[3435,110740+20])
                                                            expression (lambda/matching.ml[3436,110762+16]..[3443,111048+15]) ghost
                                                              Pexp_construct "::" (lambda/matching.ml[3436,110762+16]..[3443,111048+15]) ghost
                                                              Some
                                                                expression (lambda/matching.ml[3436,110762+16]..[3443,111048+15]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/matching.ml[3436,110762+16]..[3442,111020+27])
                                                                      Pexp_construct "Lconst" (lambda/matching.ml[3436,110762+16]..[3436,110762+22])
                                                                      Some
expression (lambda/matching.ml[3437,110785+18]..[3442,111020+27])
  Pexp_construct "Const_block" (lambda/matching.ml[3437,110785+19]..[3437,110785+30])
  Some
    expression (lambda/matching.ml[3438,110816+21]..[3442,111020+26])
      Pexp_tuple
      [
        expression (lambda/matching.ml[3438,110816+23]..[3438,110816+24])
          Pexp_constant PConst_int (0,None)
        expression (lambda/matching.ml[3439,110842+23]..[3442,111020+24])
          Pexp_construct "::" (lambda/matching.ml[3439,110842+25]..[3442,111020+24]) ghost
          Some
            expression (lambda/matching.ml[3439,110842+25]..[3442,111020+24]) ghost
              Pexp_tuple
              [
                expression (lambda/matching.ml[3439,110842+25]..[3439,110842+69])
                  Pexp_construct "Const_base" (lambda/matching.ml[3439,110842+25]..[3439,110842+35])
                  Some
                    expression (lambda/matching.ml[3439,110842+36]..[3439,110842+69])
                      Pexp_construct "Const_string" (lambda/matching.ml[3439,110842+37]..[3439,110842+49])
                      Some
                        expression (lambda/matching.ml[3439,110842+50]..[3439,110842+68])
                          Pexp_tuple
                          [
                            expression (lambda/matching.ml[3439,110842+51]..[3439,110842+56])
                              Pexp_ident "fname" (lambda/matching.ml[3439,110842+51]..[3439,110842+56])
                            expression (lambda/matching.ml[3439,110842+58]..[3439,110842+61])
                              Pexp_ident "loc" (lambda/matching.ml[3439,110842+58]..[3439,110842+61])
                            expression (lambda/matching.ml[3439,110842+63]..[3439,110842+67])
                              Pexp_construct "None" (lambda/matching.ml[3439,110842+63]..[3439,110842+67])
                              None
                          ]
                expression (lambda/matching.ml[3440,110913+25]..[3442,111020+24]) ghost
                  Pexp_construct "::" (lambda/matching.ml[3440,110913+25]..[3442,111020+24]) ghost
                  Some
                    expression (lambda/matching.ml[3440,110913+25]..[3442,111020+24]) ghost
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3440,110913+25]..[3440,110913+52])
                          Pexp_construct "Const_base" (lambda/matching.ml[3440,110913+25]..[3440,110913+35])
                          Some
                            expression (lambda/matching.ml[3440,110913+36]..[3440,110913+52])
                              Pexp_construct "Const_int" (lambda/matching.ml[3440,110913+37]..[3440,110913+46])
                              Some
                                expression (lambda/matching.ml[3440,110913+47]..[3440,110913+51])
                                  Pexp_ident "line" (lambda/matching.ml[3440,110913+47]..[3440,110913+51])
                        expression (lambda/matching.ml[3441,110967+25]..[3442,111020+24]) ghost
                          Pexp_construct "::" (lambda/matching.ml[3441,110967+25]..[3442,111020+24]) ghost
                          Some
                            expression (lambda/matching.ml[3441,110967+25]..[3442,111020+24]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3441,110967+25]..[3441,110967+52])
                                  Pexp_construct "Const_base" (lambda/matching.ml[3441,110967+25]..[3441,110967+35])
                                  Some
                                    expression (lambda/matching.ml[3441,110967+36]..[3441,110967+52])
                                      Pexp_construct "Const_int" (lambda/matching.ml[3441,110967+37]..[3441,110967+46])
                                      Some
                                        expression (lambda/matching.ml[3441,110967+47]..[3441,110967+51])
                                          Pexp_ident "char" (lambda/matching.ml[3441,110967+47]..[3441,110967+51])
                                expression (lambda/matching.ml[3442,111020+23]..[3442,111020+24]) ghost
                                  Pexp_construct "[]" (lambda/matching.ml[3442,111020+23]..[3442,111020+24]) ghost
                                  None
                              ]
                      ]
              ]
      ]
                                                                    expression (lambda/matching.ml[3443,111048+14]..[3443,111048+15]) ghost
                                                                      Pexp_construct "[]" (lambda/matching.ml[3443,111048+14]..[3443,111048+15]) ghost
                                                                      None
                                                                  ]
                                                          ]
                                                    expression (lambda/matching.ml[3444,111065+14]..[3444,111065+18])
                                                      Pexp_ident "sloc" (lambda/matching.ml[3444,111065+14]..[3444,111065+18])
                                                  ]
                                            expression (lambda/matching.ml[3445,111086+8]..[3445,111086+9]) ghost
                                              Pexp_construct "[]" (lambda/matching.ml[3445,111086+8]..[3445,111086+9]) ghost
                                              None
                                          ]
                                    expression (lambda/matching.ml[3446,111097+8]..[3446,111097+12])
                                      Pexp_ident "sloc" (lambda/matching.ml[3446,111097+8]..[3446,111097+12])
                                  ]
                  ]
    ]
  structure_item (lambda/matching.ml[3448,111113+0]..[3453,111250+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3448,111113+4]..[3448,111113+15])
          Ppat_var "check_total" (lambda/matching.ml[3448,111113+4]..[3448,111113+15])
        expression (lambda/matching.ml[3448,111113+16]..[3453,111250+57]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3448,111113+17]..[3448,111113+23])
            Ppat_var "scopes" (lambda/matching.ml[3448,111113+17]..[3448,111113+23])
          expression (lambda/matching.ml[3448,111113+24]..[3453,111250+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3448,111113+24]..[3448,111113+27])
              Ppat_var "loc" (lambda/matching.ml[3448,111113+24]..[3448,111113+27])
            expression (lambda/matching.ml[3448,111113+28]..[3453,111250+57]) ghost
              Pexp_fun
              Labelled "failer"
              None
              pattern (lambda/matching.ml[3448,111113+29]..[3448,111113+35])
                Ppat_var "failer" (lambda/matching.ml[3448,111113+29]..[3448,111113+35])
              expression (lambda/matching.ml[3448,111113+36]..[3453,111250+57]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3448,111113+36]..[3448,111113+41])
                  Ppat_var "total" (lambda/matching.ml[3448,111113+36]..[3448,111113+41])
                expression (lambda/matching.ml[3448,111113+42]..[3453,111250+57]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3448,111113+42]..[3448,111113+48])
                    Ppat_var "lambda" (lambda/matching.ml[3448,111113+42]..[3448,111113+48])
                  expression (lambda/matching.ml[3448,111113+49]..[3453,111250+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3448,111113+49]..[3448,111113+50])
                      Ppat_var "i" (lambda/matching.ml[3448,111113+49]..[3448,111113+50])
                    expression (lambda/matching.ml[3449,111166+2]..[3453,111250+57])
                      Pexp_ifthenelse
                      expression (lambda/matching.ml[3449,111166+5]..[3449,111166+25])
                        Pexp_apply
                        expression (lambda/matching.ml[3449,111166+5]..[3449,111166+19])
                          Pexp_ident "Jumps.is_empty" (lambda/matching.ml[3449,111166+5]..[3449,111166+19])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3449,111166+20]..[3449,111166+25])
                              Pexp_ident "total" (lambda/matching.ml[3449,111166+20]..[3449,111166+25])
                        ]
                      expression (lambda/matching.ml[3450,111197+4]..[3450,111197+10])
                        Pexp_ident "lambda" (lambda/matching.ml[3450,111197+4]..[3450,111197+10])
                      Some
                        expression (lambda/matching.ml[3452,111215+4]..[3453,111250+57])
                          Pexp_construct "Lstaticcatch" (lambda/matching.ml[3452,111215+4]..[3452,111215+16])
                          Some
                            expression (lambda/matching.ml[3452,111215+17]..[3453,111250+57])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3452,111215+18]..[3452,111215+24])
                                  Pexp_ident "lambda" (lambda/matching.ml[3452,111215+18]..[3452,111215+24])
                                expression (lambda/matching.ml[3452,111215+26]..[3452,111215+33])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3452,111215+27]..[3452,111215+28])
                                      Pexp_ident "i" (lambda/matching.ml[3452,111215+27]..[3452,111215+28])
                                    expression (lambda/matching.ml[3452,111215+30]..[3452,111215+32])
                                      Pexp_construct "[]" (lambda/matching.ml[3452,111215+30]..[3452,111215+32])
                                      None
                                  ]
                                expression (lambda/matching.ml[3453,111250+18]..[3453,111250+56])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3453,111250+18]..[3453,111250+33])
                                    Pexp_ident "failure_handler" (lambda/matching.ml[3453,111250+18]..[3453,111250+33])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3453,111250+35]..[3453,111250+41])
                                        Pexp_ident "scopes" (lambda/matching.ml[3453,111250+35]..[3453,111250+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3453,111250+42]..[3453,111250+45])
                                        Pexp_ident "loc" (lambda/matching.ml[3453,111250+42]..[3453,111250+45])
                                    <arg>
                                    Labelled "failer"
                                      expression (lambda/matching.ml[3453,111250+47]..[3453,111250+53])
                                        Pexp_ident "failer" (lambda/matching.ml[3453,111250+47]..[3453,111250+53])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3453,111250+54]..[3453,111250+56])
                                        Pexp_construct "()" (lambda/matching.ml[3453,111250+54]..[3453,111250+56])
                                        None
                                  ]
                              ]
    ]
  structure_item (lambda/matching.ml[3455,111309+0]..[3473,112012+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3455,111309+4]..[3455,111309+20])
          Ppat_var "toplevel_handler" (lambda/matching.ml[3455,111309+4]..[3455,111309+20])
        expression (lambda/matching.ml[3455,111309+21]..[3473,112012+9]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3455,111309+22]..[3455,111309+28])
            Ppat_var "scopes" (lambda/matching.ml[3455,111309+22]..[3455,111309+28])
          expression (lambda/matching.ml[3455,111309+29]..[3473,112012+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3455,111309+29]..[3455,111309+32])
              Ppat_var "loc" (lambda/matching.ml[3455,111309+29]..[3455,111309+32])
            expression (lambda/matching.ml[3455,111309+33]..[3473,112012+9]) ghost
              Pexp_fun
              Labelled "failer"
              None
              pattern (lambda/matching.ml[3455,111309+34]..[3455,111309+40])
                Ppat_var "failer" (lambda/matching.ml[3455,111309+34]..[3455,111309+40])
              expression (lambda/matching.ml[3455,111309+41]..[3473,112012+9]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3455,111309+41]..[3455,111309+48])
                  Ppat_var "partial" (lambda/matching.ml[3455,111309+41]..[3455,111309+48])
                expression (lambda/matching.ml[3455,111309+49]..[3473,112012+9]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3455,111309+49]..[3455,111309+53])
                    Ppat_var "args" (lambda/matching.ml[3455,111309+49]..[3455,111309+53])
                  expression (lambda/matching.ml[3455,111309+54]..[3473,112012+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3455,111309+54]..[3455,111309+59])
                      Ppat_var "cases" (lambda/matching.ml[3455,111309+54]..[3455,111309+59])
                    expression (lambda/matching.ml[3455,111309+60]..[3473,112012+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[3455,111309+60]..[3455,111309+71])
                        Ppat_var "compile_fun" (lambda/matching.ml[3455,111309+60]..[3455,111309+71])
                      expression (lambda/matching.ml[3456,111383+2]..[3473,112012+9])
                        Pexp_match
                        expression (lambda/matching.ml[3456,111383+8]..[3456,111383+15])
                          Pexp_ident "partial" (lambda/matching.ml[3456,111383+8]..[3456,111383+15])
                        [
                          <case>
                            pattern (lambda/matching.ml[3457,111404+4]..[3457,111404+9])
                              Ppat_construct "Total" (lambda/matching.ml[3457,111404+4]..[3457,111404+9])
                              None
                            expression (lambda/matching.ml[3458,111417+6]..[3462,111595+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3458,111417+10]..[3458,111417+17])
                                    Ppat_var "default" (lambda/matching.ml[3458,111417+10]..[3458,111417+17])
                                  expression (lambda/matching.ml[3458,111417+20]..[3458,111417+45])
                                    Pexp_ident "Default_environment.empty" (lambda/matching.ml[3458,111417+20]..[3458,111417+45])
                              ]
                              expression (lambda/matching.ml[3459,111466+6]..[3462,111595+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3459,111466+10]..[3459,111466+12])
                                      Ppat_var "pm" (lambda/matching.ml[3459,111466+10]..[3459,111466+12])
                                    expression (lambda/matching.ml[3459,111466+15]..[3459,111466+39])
                                      Pexp_record
                                      [
                                        "args" (lambda/matching.ml[3459,111466+17]..[3459,111466+21]) ghost
                                          expression (lambda/matching.ml[3459,111466+17]..[3459,111466+21])
                                            Pexp_ident "args" (lambda/matching.ml[3459,111466+17]..[3459,111466+21])
                                        "cases" (lambda/matching.ml[3459,111466+23]..[3459,111466+28]) ghost
                                          expression (lambda/matching.ml[3459,111466+23]..[3459,111466+28])
                                            Pexp_ident "cases" (lambda/matching.ml[3459,111466+23]..[3459,111466+28])
                                        "default" (lambda/matching.ml[3459,111466+30]..[3459,111466+37]) ghost
                                          expression (lambda/matching.ml[3459,111466+30]..[3459,111466+37])
                                            Pexp_ident "default" (lambda/matching.ml[3459,111466+30]..[3459,111466+37])
                                      ]
                                      None
                                ]
                                expression (lambda/matching.ml[3460,111509+6]..[3462,111595+9])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[3460,111509+10]..[3460,111509+22])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3460,111509+11]..[3460,111509+14])
                                            Ppat_var "lam" (lambda/matching.ml[3460,111509+11]..[3460,111509+14])
                                          pattern (lambda/matching.ml[3460,111509+16]..[3460,111509+21])
                                            Ppat_var "total" (lambda/matching.ml[3460,111509+16]..[3460,111509+21])
                                        ]
                                      expression (lambda/matching.ml[3460,111509+25]..[3460,111509+45])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3460,111509+25]..[3460,111509+36])
                                          Pexp_ident "compile_fun" (lambda/matching.ml[3460,111509+25]..[3460,111509+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3460,111509+37]..[3460,111509+42])
                                              Pexp_construct "Total" (lambda/matching.ml[3460,111509+37]..[3460,111509+42])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3460,111509+43]..[3460,111509+45])
                                              Pexp_ident "pm" (lambda/matching.ml[3460,111509+43]..[3460,111509+45])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[3461,111558+6]..[3462,111595+9])
                                    Pexp_sequence
                                    expression (lambda/matching.ml[3461,111558+6]..[3461,111558+35])
                                      Pexp_assert
                                      expression (lambda/matching.ml[3461,111558+13]..[3461,111558+35])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3461,111558+14]..[3461,111558+28])
                                          Pexp_ident "Jumps.is_empty" (lambda/matching.ml[3461,111558+14]..[3461,111558+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3461,111558+29]..[3461,111558+34])
                                              Pexp_ident "total" (lambda/matching.ml[3461,111558+29]..[3461,111558+34])
                                        ]
                                    expression (lambda/matching.ml[3462,111595+6]..[3462,111595+9])
                                      Pexp_ident "lam" (lambda/matching.ml[3462,111595+6]..[3462,111595+9])
                          <case>
                            pattern (lambda/matching.ml[3463,111605+4]..[3463,111605+11])
                              Ppat_construct "Partial" (lambda/matching.ml[3463,111605+4]..[3463,111605+11])
                              None
                            expression (lambda/matching.ml[3464,111620+6]..[3473,112012+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3464,111620+10]..[3464,111620+19])
                                    Ppat_var "raise_num" (lambda/matching.ml[3464,111620+10]..[3464,111620+19])
                                  expression (lambda/matching.ml[3464,111620+22]..[3464,111620+41])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3464,111620+22]..[3464,111620+38])
                                      Pexp_ident "next_raise_count" (lambda/matching.ml[3464,111620+22]..[3464,111620+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3464,111620+39]..[3464,111620+41])
                                          Pexp_construct "()" (lambda/matching.ml[3464,111620+39]..[3464,111620+41])
                                          None
                                    ]
                              ]
                              expression (lambda/matching.ml[3465,111665+6]..[3473,112012+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3465,111665+10]..[3465,111665+17])
                                      Ppat_var "default" (lambda/matching.ml[3465,111665+10]..[3465,111665+17])
                                    expression (lambda/matching.ml[3466,111685+8]..[3467,111757+35])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3466,111685+8]..[3466,111685+32])
                                        Pexp_ident "Default_environment.cons" (lambda/matching.ml[3466,111685+8]..[3466,111685+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3466,111685+33]..[3466,111685+61])
                                            Pexp_construct "::" (lambda/matching.ml[3466,111685+35]..[3466,111685+61]) ghost
                                            Some
                                              expression (lambda/matching.ml[3466,111685+35]..[3466,111685+61]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3466,111685+35]..[3466,111685+59])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3466,111685+35]..[3466,111685+54])
                                                      Pexp_ident "Patterns.omega_list" (lambda/matching.ml[3466,111685+35]..[3466,111685+54])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3466,111685+55]..[3466,111685+59])
                                                          Pexp_ident "args" (lambda/matching.ml[3466,111685+55]..[3466,111685+59])
                                                    ]
                                                  expression (lambda/matching.ml[3466,111685+60]..[3466,111685+61]) ghost
                                                    Pexp_construct "[]" (lambda/matching.ml[3466,111685+60]..[3466,111685+61]) ghost
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3466,111685+62]..[3466,111685+71])
                                            Pexp_ident "raise_num" (lambda/matching.ml[3466,111685+62]..[3466,111685+71])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3467,111757+10]..[3467,111757+35])
                                            Pexp_ident "Default_environment.empty" (lambda/matching.ml[3467,111757+10]..[3467,111757+35])
                                      ]
                                ]
                                expression (lambda/matching.ml[3468,111796+6]..[3473,112012+9])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[3468,111796+10]..[3468,111796+12])
                                        Ppat_var "pm" (lambda/matching.ml[3468,111796+10]..[3468,111796+12])
                                      expression (lambda/matching.ml[3468,111796+15]..[3468,111796+39])
                                        Pexp_record
                                        [
                                          "args" (lambda/matching.ml[3468,111796+17]..[3468,111796+21]) ghost
                                            expression (lambda/matching.ml[3468,111796+17]..[3468,111796+21])
                                              Pexp_ident "args" (lambda/matching.ml[3468,111796+17]..[3468,111796+21])
                                          "cases" (lambda/matching.ml[3468,111796+23]..[3468,111796+28]) ghost
                                            expression (lambda/matching.ml[3468,111796+23]..[3468,111796+28])
                                              Pexp_ident "cases" (lambda/matching.ml[3468,111796+23]..[3468,111796+28])
                                          "default" (lambda/matching.ml[3468,111796+30]..[3468,111796+37]) ghost
                                            expression (lambda/matching.ml[3468,111796+30]..[3468,111796+37])
                                              Pexp_ident "default" (lambda/matching.ml[3468,111796+30]..[3468,111796+37])
                                        ]
                                        None
                                  ]
                                  expression (lambda/matching.ml[3469,111839+6]..[3473,112012+9])
                                    Pexp_match
                                    expression (lambda/matching.ml[3469,111839+18]..[3469,111839+40])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3469,111839+18]..[3469,111839+29])
                                        Pexp_ident "compile_fun" (lambda/matching.ml[3469,111839+18]..[3469,111839+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3469,111839+30]..[3469,111839+37])
                                            Pexp_construct "Partial" (lambda/matching.ml[3469,111839+30]..[3469,111839+37])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3469,111839+38]..[3469,111839+40])
                                            Pexp_ident "pm" (lambda/matching.ml[3469,111839+38]..[3469,111839+40])
                                      ]
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[3470,111885+8]..[3470,111885+24])
                                          Ppat_exception
                                          pattern (lambda/matching.ml[3470,111885+18]..[3470,111885+24])
                                            Ppat_construct "Unused" (lambda/matching.ml[3470,111885+18]..[3470,111885+24])
                                            None
                                        expression (lambda/matching.ml[3470,111885+28]..[3470,111885+40])
                                          Pexp_assert
                                          expression (lambda/matching.ml[3470,111885+35]..[3470,111885+40])
                                            Pexp_construct "false" (lambda/matching.ml[3470,111885+35]..[3470,111885+40])
                                            None
                                      <case>
                                        pattern (lambda/matching.ml[3471,111926+8]..[3471,111926+20])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3471,111926+9]..[3471,111926+12])
                                              Ppat_var "lam" (lambda/matching.ml[3471,111926+9]..[3471,111926+12])
                                            pattern (lambda/matching.ml[3471,111926+14]..[3471,111926+19])
                                              Ppat_var "total" (lambda/matching.ml[3471,111926+14]..[3471,111926+19])
                                          ]
                                        expression (lambda/matching.ml[3472,111950+10]..[3472,111950+61])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3472,111950+10]..[3472,111950+21])
                                            Pexp_ident "check_total" (lambda/matching.ml[3472,111950+10]..[3472,111950+21])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3472,111950+23]..[3472,111950+29])
                                                Pexp_ident "scopes" (lambda/matching.ml[3472,111950+23]..[3472,111950+29])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3472,111950+30]..[3472,111950+33])
                                                Pexp_ident "loc" (lambda/matching.ml[3472,111950+30]..[3472,111950+33])
                                            <arg>
                                            Labelled "failer"
                                              expression (lambda/matching.ml[3472,111950+35]..[3472,111950+41])
                                                Pexp_ident "failer" (lambda/matching.ml[3472,111950+35]..[3472,111950+41])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3472,111950+42]..[3472,111950+47])
                                                Pexp_ident "total" (lambda/matching.ml[3472,111950+42]..[3472,111950+47])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3472,111950+48]..[3472,111950+51])
                                                Pexp_ident "lam" (lambda/matching.ml[3472,111950+48]..[3472,111950+51])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3472,111950+52]..[3472,111950+61])
                                                Pexp_ident "raise_num" (lambda/matching.ml[3472,111950+52]..[3472,111950+61])
                                          ]
                                    ]
                        ]
    ]
  structure_item (lambda/matching.ml[3475,112023+0]..[3480,112324+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3475,112023+4]..[3475,112023+20])
          Ppat_var "compile_matching" (lambda/matching.ml[3475,112023+4]..[3475,112023+20])
        expression (lambda/matching.ml[3475,112023+21]..[3480,112324+69]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3475,112023+22]..[3475,112023+28])
            Ppat_var "scopes" (lambda/matching.ml[3475,112023+22]..[3475,112023+28])
          expression (lambda/matching.ml[3475,112023+29]..[3480,112324+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3475,112023+29]..[3475,112023+32])
              Ppat_var "loc" (lambda/matching.ml[3475,112023+29]..[3475,112023+32])
            expression (lambda/matching.ml[3475,112023+33]..[3480,112324+69]) ghost
              Pexp_fun
              Labelled "failer"
              None
              pattern (lambda/matching.ml[3475,112023+34]..[3475,112023+40])
                Ppat_var "failer" (lambda/matching.ml[3475,112023+34]..[3475,112023+40])
              expression (lambda/matching.ml[3475,112023+41]..[3480,112324+69]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3475,112023+41]..[3475,112023+45])
                  Ppat_var "repr" (lambda/matching.ml[3475,112023+41]..[3475,112023+45])
                expression (lambda/matching.ml[3475,112023+46]..[3480,112324+69]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3475,112023+46]..[3475,112023+49])
                    Ppat_var "arg" (lambda/matching.ml[3475,112023+46]..[3475,112023+49])
                  expression (lambda/matching.ml[3475,112023+50]..[3480,112324+69]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3475,112023+50]..[3475,112023+62])
                      Ppat_var "pat_act_list" (lambda/matching.ml[3475,112023+50]..[3475,112023+62])
                    expression (lambda/matching.ml[3475,112023+63]..[3480,112324+69]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[3475,112023+63]..[3475,112023+70])
                        Ppat_var "partial" (lambda/matching.ml[3475,112023+63]..[3475,112023+70])
                      expression (lambda/matching.ml[3476,112096+2]..[3480,112324+69])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3476,112096+6]..[3476,112096+13])
                              Ppat_var "partial" (lambda/matching.ml[3476,112096+6]..[3476,112096+13])
                            expression (lambda/matching.ml[3476,112096+16]..[3476,112096+50])
                              Pexp_apply
                              expression (lambda/matching.ml[3476,112096+16]..[3476,112096+29])
                                Pexp_ident "check_partial" (lambda/matching.ml[3476,112096+16]..[3476,112096+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3476,112096+30]..[3476,112096+42])
                                    Pexp_ident "pat_act_list" (lambda/matching.ml[3476,112096+30]..[3476,112096+42])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3476,112096+43]..[3476,112096+50])
                                    Pexp_ident "partial" (lambda/matching.ml[3476,112096+43]..[3476,112096+50])
                              ]
                        ]
                        expression (lambda/matching.ml[3477,112150+2]..[3480,112324+69])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3477,112150+6]..[3477,112150+10])
                                Ppat_var "args" (lambda/matching.ml[3477,112150+6]..[3477,112150+10])
                              expression (lambda/matching.ml[3477,112150+13]..[3477,112150+30])
                                Pexp_construct "::" (lambda/matching.ml[3477,112150+15]..[3477,112150+30]) ghost
                                Some
                                  expression (lambda/matching.ml[3477,112150+15]..[3477,112150+30]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3477,112150+15]..[3477,112150+28])
                                        Pexp_tuple
                                        [
                                          expression (lambda/matching.ml[3477,112150+16]..[3477,112150+19])
                                            Pexp_ident "arg" (lambda/matching.ml[3477,112150+16]..[3477,112150+19])
                                          expression (lambda/matching.ml[3477,112150+21]..[3477,112150+27])
                                            Pexp_construct "Strict" (lambda/matching.ml[3477,112150+21]..[3477,112150+27])
                                            None
                                        ]
                                      expression (lambda/matching.ml[3477,112150+29]..[3477,112150+30]) ghost
                                        Pexp_construct "[]" (lambda/matching.ml[3477,112150+29]..[3477,112150+30]) ghost
                                        None
                                    ]
                          ]
                          expression (lambda/matching.ml[3478,112184+2]..[3480,112324+69])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3478,112184+6]..[3478,112184+10])
                                  Ppat_var "rows" (lambda/matching.ml[3478,112184+6]..[3478,112184+10])
                                expression (lambda/matching.ml[3478,112184+13]..[3478,112184+60])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3478,112184+13]..[3478,112184+24])
                                    Pexp_ident "map_on_rows" (lambda/matching.ml[3478,112184+13]..[3478,112184+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3478,112184+25]..[3478,112184+47])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[3478,112184+30]..[3478,112184+33])
                                          Ppat_var "pat" (lambda/matching.ml[3478,112184+30]..[3478,112184+33])
                                        expression (lambda/matching.ml[3478,112184+37]..[3478,112184+46])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3478,112184+38]..[3478,112184+41])
                                              Pexp_ident "pat" (lambda/matching.ml[3478,112184+38]..[3478,112184+41])
                                            expression (lambda/matching.ml[3478,112184+43]..[3478,112184+45])
                                              Pexp_construct "[]" (lambda/matching.ml[3478,112184+43]..[3478,112184+45])
                                              None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3478,112184+48]..[3478,112184+60])
                                        Pexp_ident "pat_act_list" (lambda/matching.ml[3478,112184+48]..[3478,112184+60])
                                  ]
                            ]
                            expression (lambda/matching.ml[3479,112248+2]..[3480,112324+69])
                              Pexp_apply
                              expression (lambda/matching.ml[3479,112248+2]..[3479,112248+18])
                                Pexp_ident "toplevel_handler" (lambda/matching.ml[3479,112248+2]..[3479,112248+18])
                              [
                                <arg>
                                Labelled "scopes"
                                  expression (lambda/matching.ml[3479,112248+20]..[3479,112248+26])
                                    Pexp_ident "scopes" (lambda/matching.ml[3479,112248+20]..[3479,112248+26])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3479,112248+27]..[3479,112248+30])
                                    Pexp_ident "loc" (lambda/matching.ml[3479,112248+27]..[3479,112248+30])
                                <arg>
                                Labelled "failer"
                                  expression (lambda/matching.ml[3479,112248+32]..[3479,112248+38])
                                    Pexp_ident "failer" (lambda/matching.ml[3479,112248+32]..[3479,112248+38])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3479,112248+39]..[3479,112248+46])
                                    Pexp_ident "partial" (lambda/matching.ml[3479,112248+39]..[3479,112248+46])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3479,112248+47]..[3479,112248+51])
                                    Pexp_ident "args" (lambda/matching.ml[3479,112248+47]..[3479,112248+51])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3479,112248+52]..[3479,112248+56])
                                    Pexp_ident "rows" (lambda/matching.ml[3479,112248+52]..[3479,112248+56])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3479,112248+57]..[3480,112324+69])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[3479,112248+62]..[3479,112248+69])
                                      Ppat_var "partial" (lambda/matching.ml[3479,112248+62]..[3479,112248+69])
                                    expression (lambda/matching.ml[3479,112248+70]..[3480,112324+68]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[3479,112248+70]..[3479,112248+72])
                                        Ppat_var "pm" (lambda/matching.ml[3479,112248+70]..[3479,112248+72])
                                      expression (lambda/matching.ml[3480,112324+4]..[3480,112324+68])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3480,112324+4]..[3480,112324+26])
                                          Pexp_ident "compile_match_nonempty" (lambda/matching.ml[3480,112324+4]..[3480,112324+26])
                                        [
                                          <arg>
                                          Labelled "scopes"
                                            expression (lambda/matching.ml[3480,112324+28]..[3480,112324+34])
                                              Pexp_ident "scopes" (lambda/matching.ml[3480,112324+28]..[3480,112324+34])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3480,112324+35]..[3480,112324+39])
                                              Pexp_ident "repr" (lambda/matching.ml[3480,112324+35]..[3480,112324+39])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3480,112324+40]..[3480,112324+47])
                                              Pexp_ident "partial" (lambda/matching.ml[3480,112324+40]..[3480,112324+47])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3480,112324+48]..[3480,112324+65])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3480,112324+49]..[3480,112324+62])
                                                Pexp_ident "Context.start" (lambda/matching.ml[3480,112324+49]..[3480,112324+62])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3480,112324+63]..[3480,112324+64])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3480,112324+66]..[3480,112324+68])
                                              Pexp_ident "pm" (lambda/matching.ml[3480,112324+66]..[3480,112324+68])
                                        ]
                              ]
    ]
  structure_item (lambda/matching.ml[3482,112395+0]..[3484,112517+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3482,112395+4]..[3482,112395+16])
          Ppat_var "for_function" (lambda/matching.ml[3482,112395+4]..[3482,112395+16])
        expression (lambda/matching.ml[3482,112395+17]..[3484,112517+35]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3482,112395+18]..[3482,112395+24])
            Ppat_var "scopes" (lambda/matching.ml[3482,112395+18]..[3482,112395+24])
          expression (lambda/matching.ml[3482,112395+25]..[3484,112517+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3482,112395+25]..[3482,112395+28])
              Ppat_var "loc" (lambda/matching.ml[3482,112395+25]..[3482,112395+28])
            expression (lambda/matching.ml[3482,112395+29]..[3484,112517+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3482,112395+29]..[3482,112395+33])
                Ppat_var "repr" (lambda/matching.ml[3482,112395+29]..[3482,112395+33])
              expression (lambda/matching.ml[3482,112395+34]..[3484,112517+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3482,112395+34]..[3482,112395+39])
                  Ppat_var "param" (lambda/matching.ml[3482,112395+34]..[3482,112395+39])
                expression (lambda/matching.ml[3482,112395+40]..[3484,112517+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3482,112395+40]..[3482,112395+52])
                    Ppat_var "pat_act_list" (lambda/matching.ml[3482,112395+40]..[3482,112395+52])
                  expression (lambda/matching.ml[3482,112395+53]..[3484,112517+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3482,112395+53]..[3482,112395+60])
                      Ppat_var "partial" (lambda/matching.ml[3482,112395+53]..[3482,112395+60])
                    expression (lambda/matching.ml[3483,112458+2]..[3484,112517+35])
                      Pexp_apply
                      expression (lambda/matching.ml[3483,112458+2]..[3483,112458+18])
                        Pexp_ident "compile_matching" (lambda/matching.ml[3483,112458+2]..[3483,112458+18])
                      [
                        <arg>
                        Labelled "scopes"
                          expression (lambda/matching.ml[3483,112458+20]..[3483,112458+26])
                            Pexp_ident "scopes" (lambda/matching.ml[3483,112458+20]..[3483,112458+26])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3483,112458+27]..[3483,112458+30])
                            Pexp_ident "loc" (lambda/matching.ml[3483,112458+27]..[3483,112458+30])
                        <arg>
                        Labelled "failer"
                          expression (lambda/matching.ml[3483,112458+39]..[3483,112458+58])
                            Pexp_construct "Raise_match_failure" (lambda/matching.ml[3483,112458+39]..[3483,112458+58])
                            None
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3484,112517+4]..[3484,112517+8])
                            Pexp_ident "repr" (lambda/matching.ml[3484,112517+4]..[3484,112517+8])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3484,112517+9]..[3484,112517+14])
                            Pexp_ident "param" (lambda/matching.ml[3484,112517+9]..[3484,112517+14])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3484,112517+15]..[3484,112517+27])
                            Pexp_ident "pat_act_list" (lambda/matching.ml[3484,112517+15]..[3484,112517+27])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3484,112517+28]..[3484,112517+35])
                            Pexp_ident "partial" (lambda/matching.ml[3484,112517+28]..[3484,112517+35])
                      ]
    ]
  structure_item (lambda/matching.ml[3487,112626+0]..[3496,113091+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3487,112626+4]..[3487,112626+15])
          Ppat_var "for_trywith" (lambda/matching.ml[3487,112626+4]..[3487,112626+15])
        expression (lambda/matching.ml[3487,112626+16]..[3496,113091+35]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3487,112626+17]..[3487,112626+23])
            Ppat_var "scopes" (lambda/matching.ml[3487,112626+17]..[3487,112626+23])
          expression (lambda/matching.ml[3487,112626+24]..[3496,113091+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3487,112626+24]..[3487,112626+27])
              Ppat_var "loc" (lambda/matching.ml[3487,112626+24]..[3487,112626+27])
            expression (lambda/matching.ml[3487,112626+28]..[3496,113091+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3487,112626+28]..[3487,112626+33])
                Ppat_var "param" (lambda/matching.ml[3487,112626+28]..[3487,112626+33])
              expression (lambda/matching.ml[3487,112626+34]..[3496,113091+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3487,112626+34]..[3487,112626+46])
                  Ppat_var "pat_act_list" (lambda/matching.ml[3487,112626+34]..[3487,112626+46])
                expression (lambda/matching.ml[3495,113030+2]..[3496,113091+35])
                  Pexp_apply
                  expression (lambda/matching.ml[3495,113030+2]..[3495,113030+18])
                    Pexp_ident "compile_matching" (lambda/matching.ml[3495,113030+2]..[3495,113030+18])
                  [
                    <arg>
                    Labelled "scopes"
                      expression (lambda/matching.ml[3495,113030+20]..[3495,113030+26])
                        Pexp_ident "scopes" (lambda/matching.ml[3495,113030+20]..[3495,113030+26])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3495,113030+27]..[3495,113030+30])
                        Pexp_ident "loc" (lambda/matching.ml[3495,113030+27]..[3495,113030+30])
                    <arg>
                    Labelled "failer"
                      expression (lambda/matching.ml[3495,113030+39]..[3495,113030+60])
                        Pexp_construct "Reraise_noloc" (lambda/matching.ml[3495,113030+40]..[3495,113030+53])
                        Some
                          expression (lambda/matching.ml[3495,113030+54]..[3495,113030+59])
                            Pexp_ident "param" (lambda/matching.ml[3495,113030+54]..[3495,113030+59])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3496,113091+4]..[3496,113091+8])
                        Pexp_construct "None" (lambda/matching.ml[3496,113091+4]..[3496,113091+8])
                        None
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3496,113091+9]..[3496,113091+14])
                        Pexp_ident "param" (lambda/matching.ml[3496,113091+9]..[3496,113091+14])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3496,113091+15]..[3496,113091+27])
                        Pexp_ident "pat_act_list" (lambda/matching.ml[3496,113091+15]..[3496,113091+27])
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3496,113091+28]..[3496,113091+35])
                        Pexp_construct "Partial" (lambda/matching.ml[3496,113091+28]..[3496,113091+35])
                        None
                  ]
    ]
  structure_item (lambda/matching.ml[3498,113128+0]..[3500,113235+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3498,113128+4]..[3498,113128+18])
          Ppat_var "simple_for_let" (lambda/matching.ml[3498,113128+4]..[3498,113128+18])
        expression (lambda/matching.ml[3498,113128+19]..[3500,113235+38]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3498,113128+20]..[3498,113128+26])
            Ppat_var "scopes" (lambda/matching.ml[3498,113128+20]..[3498,113128+26])
          expression (lambda/matching.ml[3498,113128+27]..[3500,113235+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3498,113128+27]..[3498,113128+30])
              Ppat_var "loc" (lambda/matching.ml[3498,113128+27]..[3498,113128+30])
            expression (lambda/matching.ml[3498,113128+31]..[3500,113235+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3498,113128+31]..[3498,113128+36])
                Ppat_var "param" (lambda/matching.ml[3498,113128+31]..[3498,113128+36])
              expression (lambda/matching.ml[3498,113128+37]..[3500,113235+38]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3498,113128+37]..[3498,113128+40])
                  Ppat_var "pat" (lambda/matching.ml[3498,113128+37]..[3498,113128+40])
                expression (lambda/matching.ml[3498,113128+41]..[3500,113235+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3498,113128+41]..[3498,113128+45])
                    Ppat_var "body" (lambda/matching.ml[3498,113128+41]..[3498,113128+45])
                  expression (lambda/matching.ml[3499,113176+2]..[3500,113235+38])
                    Pexp_apply
                    expression (lambda/matching.ml[3499,113176+2]..[3499,113176+18])
                      Pexp_ident "compile_matching" (lambda/matching.ml[3499,113176+2]..[3499,113176+18])
                    [
                      <arg>
                      Labelled "scopes"
                        expression (lambda/matching.ml[3499,113176+20]..[3499,113176+26])
                          Pexp_ident "scopes" (lambda/matching.ml[3499,113176+20]..[3499,113176+26])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3499,113176+27]..[3499,113176+30])
                          Pexp_ident "loc" (lambda/matching.ml[3499,113176+27]..[3499,113176+30])
                      <arg>
                      Labelled "failer"
                        expression (lambda/matching.ml[3499,113176+39]..[3499,113176+58])
                          Pexp_construct "Raise_match_failure" (lambda/matching.ml[3499,113176+39]..[3499,113176+58])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3500,113235+4]..[3500,113235+8])
                          Pexp_construct "None" (lambda/matching.ml[3500,113235+4]..[3500,113235+8])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3500,113235+9]..[3500,113235+14])
                          Pexp_ident "param" (lambda/matching.ml[3500,113235+9]..[3500,113235+14])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3500,113235+15]..[3500,113235+30])
                          Pexp_construct "::" (lambda/matching.ml[3500,113235+17]..[3500,113235+30]) ghost
                          Some
                            expression (lambda/matching.ml[3500,113235+17]..[3500,113235+30]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3500,113235+17]..[3500,113235+28])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3500,113235+18]..[3500,113235+21])
                                      Pexp_ident "pat" (lambda/matching.ml[3500,113235+18]..[3500,113235+21])
                                    expression (lambda/matching.ml[3500,113235+23]..[3500,113235+27])
                                      Pexp_ident "body" (lambda/matching.ml[3500,113235+23]..[3500,113235+27])
                                  ]
                                expression (lambda/matching.ml[3500,113235+29]..[3500,113235+30]) ghost
                                  Pexp_construct "[]" (lambda/matching.ml[3500,113235+29]..[3500,113235+30]) ghost
                                  None
                              ]
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3500,113235+31]..[3500,113235+38])
                          Pexp_construct "Partial" (lambda/matching.ml[3500,113235+31]..[3500,113235+38])
                          None
                    ]
    ]
  structure_item (lambda/matching.ml[3550,114727+0]..[3582,116090+9])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/matching.ml[3550,114727+8]..[3550,114727+18])
          Ppat_var "map_return" (lambda/matching.ml[3550,114727+8]..[3550,114727+18])
        expression (lambda/matching.ml[3550,114727+19]..[3582,116090+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3550,114727+19]..[3550,114727+20])
            Ppat_var "f" (lambda/matching.ml[3550,114727+19]..[3550,114727+20])
          expression (lambda/matching.ml[3550,114727+23]..[3582,116090+9])
            Pexp_function
            [
              <case>
                pattern (lambda/matching.ml[3551,114759+4]..[3551,114759+29])
                  Ppat_construct "Llet" (lambda/matching.ml[3551,114759+4]..[3551,114759+8])
                  Some
                    []
                    pattern (lambda/matching.ml[3551,114759+9]..[3551,114759+29])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3551,114759+10]..[3551,114759+13])
                          Ppat_var "str" (lambda/matching.ml[3551,114759+10]..[3551,114759+13])
                        pattern (lambda/matching.ml[3551,114759+15]..[3551,114759+16])
                          Ppat_var "k" (lambda/matching.ml[3551,114759+15]..[3551,114759+16])
                        pattern (lambda/matching.ml[3551,114759+18]..[3551,114759+20])
                          Ppat_var "id" (lambda/matching.ml[3551,114759+18]..[3551,114759+20])
                        pattern (lambda/matching.ml[3551,114759+22]..[3551,114759+24])
                          Ppat_var "l1" (lambda/matching.ml[3551,114759+22]..[3551,114759+24])
                        pattern (lambda/matching.ml[3551,114759+26]..[3551,114759+28])
                          Ppat_var "l2" (lambda/matching.ml[3551,114759+26]..[3551,114759+28])
                      ]
                expression (lambda/matching.ml[3551,114759+33]..[3551,114759+71])
                  Pexp_construct "Llet" (lambda/matching.ml[3551,114759+33]..[3551,114759+37])
                  Some
                    expression (lambda/matching.ml[3551,114759+38]..[3551,114759+71])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3551,114759+39]..[3551,114759+42])
                          Pexp_ident "str" (lambda/matching.ml[3551,114759+39]..[3551,114759+42])
                        expression (lambda/matching.ml[3551,114759+44]..[3551,114759+45])
                          Pexp_ident "k" (lambda/matching.ml[3551,114759+44]..[3551,114759+45])
                        expression (lambda/matching.ml[3551,114759+47]..[3551,114759+49])
                          Pexp_ident "id" (lambda/matching.ml[3551,114759+47]..[3551,114759+49])
                        expression (lambda/matching.ml[3551,114759+51]..[3551,114759+53])
                          Pexp_ident "l1" (lambda/matching.ml[3551,114759+51]..[3551,114759+53])
                        expression (lambda/matching.ml[3551,114759+55]..[3551,114759+70])
                          Pexp_apply
                          expression (lambda/matching.ml[3551,114759+55]..[3551,114759+65])
                            Pexp_ident "map_return" (lambda/matching.ml[3551,114759+55]..[3551,114759+65])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3551,114759+66]..[3551,114759+67])
                                Pexp_ident "f" (lambda/matching.ml[3551,114759+66]..[3551,114759+67])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3551,114759+68]..[3551,114759+70])
                                Pexp_ident "l2" (lambda/matching.ml[3551,114759+68]..[3551,114759+70])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3552,114831+4]..[3552,114831+27])
                  Ppat_construct "Lmutlet" (lambda/matching.ml[3552,114831+4]..[3552,114831+11])
                  Some
                    []
                    pattern (lambda/matching.ml[3552,114831+12]..[3552,114831+27])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3552,114831+13]..[3552,114831+14])
                          Ppat_var "k" (lambda/matching.ml[3552,114831+13]..[3552,114831+14])
                        pattern (lambda/matching.ml[3552,114831+16]..[3552,114831+18])
                          Ppat_var "id" (lambda/matching.ml[3552,114831+16]..[3552,114831+18])
                        pattern (lambda/matching.ml[3552,114831+20]..[3552,114831+22])
                          Ppat_var "l1" (lambda/matching.ml[3552,114831+20]..[3552,114831+22])
                        pattern (lambda/matching.ml[3552,114831+24]..[3552,114831+26])
                          Ppat_var "l2" (lambda/matching.ml[3552,114831+24]..[3552,114831+26])
                      ]
                expression (lambda/matching.ml[3552,114831+31]..[3552,114831+67])
                  Pexp_construct "Lmutlet" (lambda/matching.ml[3552,114831+31]..[3552,114831+38])
                  Some
                    expression (lambda/matching.ml[3552,114831+39]..[3552,114831+67])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3552,114831+40]..[3552,114831+41])
                          Pexp_ident "k" (lambda/matching.ml[3552,114831+40]..[3552,114831+41])
                        expression (lambda/matching.ml[3552,114831+43]..[3552,114831+45])
                          Pexp_ident "id" (lambda/matching.ml[3552,114831+43]..[3552,114831+45])
                        expression (lambda/matching.ml[3552,114831+47]..[3552,114831+49])
                          Pexp_ident "l1" (lambda/matching.ml[3552,114831+47]..[3552,114831+49])
                        expression (lambda/matching.ml[3552,114831+51]..[3552,114831+66])
                          Pexp_apply
                          expression (lambda/matching.ml[3552,114831+51]..[3552,114831+61])
                            Pexp_ident "map_return" (lambda/matching.ml[3552,114831+51]..[3552,114831+61])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3552,114831+62]..[3552,114831+63])
                                Pexp_ident "f" (lambda/matching.ml[3552,114831+62]..[3552,114831+63])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3552,114831+64]..[3552,114831+66])
                                Pexp_ident "l2" (lambda/matching.ml[3552,114831+64]..[3552,114831+66])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3553,114899+4]..[3553,114899+20])
                  Ppat_construct "Lletrec" (lambda/matching.ml[3553,114899+4]..[3553,114899+11])
                  Some
                    []
                    pattern (lambda/matching.ml[3553,114899+12]..[3553,114899+20])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3553,114899+13]..[3553,114899+15])
                          Ppat_var "l1" (lambda/matching.ml[3553,114899+13]..[3553,114899+15])
                        pattern (lambda/matching.ml[3553,114899+17]..[3553,114899+19])
                          Ppat_var "l2" (lambda/matching.ml[3553,114899+17]..[3553,114899+19])
                      ]
                expression (lambda/matching.ml[3553,114899+24]..[3553,114899+53])
                  Pexp_construct "Lletrec" (lambda/matching.ml[3553,114899+24]..[3553,114899+31])
                  Some
                    expression (lambda/matching.ml[3553,114899+32]..[3553,114899+53])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3553,114899+33]..[3553,114899+35])
                          Pexp_ident "l1" (lambda/matching.ml[3553,114899+33]..[3553,114899+35])
                        expression (lambda/matching.ml[3553,114899+37]..[3553,114899+52])
                          Pexp_apply
                          expression (lambda/matching.ml[3553,114899+37]..[3553,114899+47])
                            Pexp_ident "map_return" (lambda/matching.ml[3553,114899+37]..[3553,114899+47])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3553,114899+48]..[3553,114899+49])
                                Pexp_ident "f" (lambda/matching.ml[3553,114899+48]..[3553,114899+49])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3553,114899+50]..[3553,114899+52])
                                Pexp_ident "l2" (lambda/matching.ml[3553,114899+50]..[3553,114899+52])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3554,114953+4]..[3554,114953+37])
                  Ppat_construct "Lifthenelse" (lambda/matching.ml[3554,114953+4]..[3554,114953+15])
                  Some
                    []
                    pattern (lambda/matching.ml[3554,114953+16]..[3554,114953+37])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3554,114953+17]..[3554,114953+22])
                          Ppat_var "lcond" (lambda/matching.ml[3554,114953+17]..[3554,114953+22])
                        pattern (lambda/matching.ml[3554,114953+24]..[3554,114953+29])
                          Ppat_var "lthen" (lambda/matching.ml[3554,114953+24]..[3554,114953+29])
                        pattern (lambda/matching.ml[3554,114953+31]..[3554,114953+36])
                          Ppat_var "lelse" (lambda/matching.ml[3554,114953+31]..[3554,114953+36])
                      ]
                expression (lambda/matching.ml[3555,114994+6]..[3555,114994+65])
                  Pexp_construct "Lifthenelse" (lambda/matching.ml[3555,114994+6]..[3555,114994+17])
                  Some
                    expression (lambda/matching.ml[3555,114994+18]..[3555,114994+65])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3555,114994+19]..[3555,114994+24])
                          Pexp_ident "lcond" (lambda/matching.ml[3555,114994+19]..[3555,114994+24])
                        expression (lambda/matching.ml[3555,114994+26]..[3555,114994+44])
                          Pexp_apply
                          expression (lambda/matching.ml[3555,114994+26]..[3555,114994+36])
                            Pexp_ident "map_return" (lambda/matching.ml[3555,114994+26]..[3555,114994+36])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3555,114994+37]..[3555,114994+38])
                                Pexp_ident "f" (lambda/matching.ml[3555,114994+37]..[3555,114994+38])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3555,114994+39]..[3555,114994+44])
                                Pexp_ident "lthen" (lambda/matching.ml[3555,114994+39]..[3555,114994+44])
                          ]
                        expression (lambda/matching.ml[3555,114994+46]..[3555,114994+64])
                          Pexp_apply
                          expression (lambda/matching.ml[3555,114994+46]..[3555,114994+56])
                            Pexp_ident "map_return" (lambda/matching.ml[3555,114994+46]..[3555,114994+56])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3555,114994+57]..[3555,114994+58])
                                Pexp_ident "f" (lambda/matching.ml[3555,114994+57]..[3555,114994+58])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3555,114994+59]..[3555,114994+64])
                                Pexp_ident "lelse" (lambda/matching.ml[3555,114994+59]..[3555,114994+64])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3556,115060+4]..[3556,115060+22])
                  Ppat_construct "Lsequence" (lambda/matching.ml[3556,115060+4]..[3556,115060+13])
                  Some
                    []
                    pattern (lambda/matching.ml[3556,115060+14]..[3556,115060+22])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3556,115060+15]..[3556,115060+17])
                          Ppat_var "l1" (lambda/matching.ml[3556,115060+15]..[3556,115060+17])
                        pattern (lambda/matching.ml[3556,115060+19]..[3556,115060+21])
                          Ppat_var "l2" (lambda/matching.ml[3556,115060+19]..[3556,115060+21])
                      ]
                expression (lambda/matching.ml[3556,115060+26]..[3556,115060+57])
                  Pexp_construct "Lsequence" (lambda/matching.ml[3556,115060+26]..[3556,115060+35])
                  Some
                    expression (lambda/matching.ml[3556,115060+36]..[3556,115060+57])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3556,115060+37]..[3556,115060+39])
                          Pexp_ident "l1" (lambda/matching.ml[3556,115060+37]..[3556,115060+39])
                        expression (lambda/matching.ml[3556,115060+41]..[3556,115060+56])
                          Pexp_apply
                          expression (lambda/matching.ml[3556,115060+41]..[3556,115060+51])
                            Pexp_ident "map_return" (lambda/matching.ml[3556,115060+41]..[3556,115060+51])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3556,115060+52]..[3556,115060+53])
                                Pexp_ident "f" (lambda/matching.ml[3556,115060+52]..[3556,115060+53])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3556,115060+54]..[3556,115060+56])
                                Pexp_ident "l2" (lambda/matching.ml[3556,115060+54]..[3556,115060+56])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3557,115118+4]..[3557,115118+18])
                  Ppat_construct "Levent" (lambda/matching.ml[3557,115118+4]..[3557,115118+10])
                  Some
                    []
                    pattern (lambda/matching.ml[3557,115118+11]..[3557,115118+18])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3557,115118+12]..[3557,115118+13])
                          Ppat_var "l" (lambda/matching.ml[3557,115118+12]..[3557,115118+13])
                        pattern (lambda/matching.ml[3557,115118+15]..[3557,115118+17])
                          Ppat_var "ev" (lambda/matching.ml[3557,115118+15]..[3557,115118+17])
                      ]
                expression (lambda/matching.ml[3557,115118+22]..[3557,115118+49])
                  Pexp_construct "Levent" (lambda/matching.ml[3557,115118+22]..[3557,115118+28])
                  Some
                    expression (lambda/matching.ml[3557,115118+29]..[3557,115118+49])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3557,115118+30]..[3557,115118+44])
                          Pexp_apply
                          expression (lambda/matching.ml[3557,115118+30]..[3557,115118+40])
                            Pexp_ident "map_return" (lambda/matching.ml[3557,115118+30]..[3557,115118+40])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3557,115118+41]..[3557,115118+42])
                                Pexp_ident "f" (lambda/matching.ml[3557,115118+41]..[3557,115118+42])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3557,115118+43]..[3557,115118+44])
                                Pexp_ident "l" (lambda/matching.ml[3557,115118+43]..[3557,115118+44])
                          ]
                        expression (lambda/matching.ml[3557,115118+46]..[3557,115118+48])
                          Pexp_ident "ev" (lambda/matching.ml[3557,115118+46]..[3557,115118+48])
                      ]
              <case>
                pattern (lambda/matching.ml[3558,115168+4]..[3558,115168+25])
                  Ppat_construct "Ltrywith" (lambda/matching.ml[3558,115168+4]..[3558,115168+12])
                  Some
                    []
                    pattern (lambda/matching.ml[3558,115168+13]..[3558,115168+25])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3558,115168+14]..[3558,115168+16])
                          Ppat_var "l1" (lambda/matching.ml[3558,115168+14]..[3558,115168+16])
                        pattern (lambda/matching.ml[3558,115168+18]..[3558,115168+20])
                          Ppat_var "id" (lambda/matching.ml[3558,115168+18]..[3558,115168+20])
                        pattern (lambda/matching.ml[3558,115168+22]..[3558,115168+24])
                          Ppat_var "l2" (lambda/matching.ml[3558,115168+22]..[3558,115168+24])
                      ]
                expression (lambda/matching.ml[3558,115168+29]..[3558,115168+76])
                  Pexp_construct "Ltrywith" (lambda/matching.ml[3558,115168+29]..[3558,115168+37])
                  Some
                    expression (lambda/matching.ml[3558,115168+38]..[3558,115168+76])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3558,115168+39]..[3558,115168+54])
                          Pexp_apply
                          expression (lambda/matching.ml[3558,115168+39]..[3558,115168+49])
                            Pexp_ident "map_return" (lambda/matching.ml[3558,115168+39]..[3558,115168+49])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3558,115168+50]..[3558,115168+51])
                                Pexp_ident "f" (lambda/matching.ml[3558,115168+50]..[3558,115168+51])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3558,115168+52]..[3558,115168+54])
                                Pexp_ident "l1" (lambda/matching.ml[3558,115168+52]..[3558,115168+54])
                          ]
                        expression (lambda/matching.ml[3558,115168+56]..[3558,115168+58])
                          Pexp_ident "id" (lambda/matching.ml[3558,115168+56]..[3558,115168+58])
                        expression (lambda/matching.ml[3558,115168+60]..[3558,115168+75])
                          Pexp_apply
                          expression (lambda/matching.ml[3558,115168+60]..[3558,115168+70])
                            Pexp_ident "map_return" (lambda/matching.ml[3558,115168+60]..[3558,115168+70])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3558,115168+71]..[3558,115168+72])
                                Pexp_ident "f" (lambda/matching.ml[3558,115168+71]..[3558,115168+72])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3558,115168+73]..[3558,115168+75])
                                Pexp_ident "l2" (lambda/matching.ml[3558,115168+73]..[3558,115168+75])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3559,115245+4]..[3559,115245+28])
                  Ppat_construct "Lstaticcatch" (lambda/matching.ml[3559,115245+4]..[3559,115245+16])
                  Some
                    []
                    pattern (lambda/matching.ml[3559,115245+17]..[3559,115245+28])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3559,115245+18]..[3559,115245+20])
                          Ppat_var "l1" (lambda/matching.ml[3559,115245+18]..[3559,115245+20])
                        pattern (lambda/matching.ml[3559,115245+22]..[3559,115245+23])
                          Ppat_var "b" (lambda/matching.ml[3559,115245+22]..[3559,115245+23])
                        pattern (lambda/matching.ml[3559,115245+25]..[3559,115245+27])
                          Ppat_var "l2" (lambda/matching.ml[3559,115245+25]..[3559,115245+27])
                      ]
                expression (lambda/matching.ml[3560,115277+6]..[3560,115277+56])
                  Pexp_construct "Lstaticcatch" (lambda/matching.ml[3560,115277+6]..[3560,115277+18])
                  Some
                    expression (lambda/matching.ml[3560,115277+19]..[3560,115277+56])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3560,115277+20]..[3560,115277+35])
                          Pexp_apply
                          expression (lambda/matching.ml[3560,115277+20]..[3560,115277+30])
                            Pexp_ident "map_return" (lambda/matching.ml[3560,115277+20]..[3560,115277+30])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3560,115277+31]..[3560,115277+32])
                                Pexp_ident "f" (lambda/matching.ml[3560,115277+31]..[3560,115277+32])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3560,115277+33]..[3560,115277+35])
                                Pexp_ident "l1" (lambda/matching.ml[3560,115277+33]..[3560,115277+35])
                          ]
                        expression (lambda/matching.ml[3560,115277+37]..[3560,115277+38])
                          Pexp_ident "b" (lambda/matching.ml[3560,115277+37]..[3560,115277+38])
                        expression (lambda/matching.ml[3560,115277+40]..[3560,115277+55])
                          Pexp_apply
                          expression (lambda/matching.ml[3560,115277+40]..[3560,115277+50])
                            Pexp_ident "map_return" (lambda/matching.ml[3560,115277+40]..[3560,115277+50])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3560,115277+51]..[3560,115277+52])
                                Pexp_ident "f" (lambda/matching.ml[3560,115277+51]..[3560,115277+52])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3560,115277+53]..[3560,115277+55])
                                Pexp_ident "l2" (lambda/matching.ml[3560,115277+53]..[3560,115277+55])
                          ]
                      ]
              <case>
                pattern (lambda/matching.ml[3561,115334+4]..[3561,115334+24])
                  Ppat_construct "Lswitch" (lambda/matching.ml[3561,115334+4]..[3561,115334+11])
                  Some
                    []
                    pattern (lambda/matching.ml[3561,115334+12]..[3561,115334+24])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3561,115334+13]..[3561,115334+14])
                          Ppat_var "s" (lambda/matching.ml[3561,115334+13]..[3561,115334+14])
                        pattern (lambda/matching.ml[3561,115334+16]..[3561,115334+18])
                          Ppat_var "sw" (lambda/matching.ml[3561,115334+16]..[3561,115334+18])
                        pattern (lambda/matching.ml[3561,115334+20]..[3561,115334+23])
                          Ppat_var "loc" (lambda/matching.ml[3561,115334+20]..[3561,115334+23])
                      ]
                expression (lambda/matching.ml[3562,115362+6]..[3572,115685+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/matching.ml[3562,115362+10]..[3562,115362+19])
                        Ppat_var "map_cases" (lambda/matching.ml[3562,115362+10]..[3562,115362+19])
                      expression (lambda/matching.ml[3562,115362+20]..[3563,115390+58]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/matching.ml[3562,115362+20]..[3562,115362+25])
                          Ppat_var "cases" (lambda/matching.ml[3562,115362+20]..[3562,115362+25])
                        expression (lambda/matching.ml[3563,115390+8]..[3563,115390+58])
                          Pexp_apply
                          expression (lambda/matching.ml[3563,115390+8]..[3563,115390+16])
                            Pexp_ident "List.map" (lambda/matching.ml[3563,115390+8]..[3563,115390+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3563,115390+17]..[3563,115390+52])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3563,115390+22]..[3563,115390+28])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3563,115390+23]..[3563,115390+24])
                                      Ppat_var "i" (lambda/matching.ml[3563,115390+23]..[3563,115390+24])
                                    pattern (lambda/matching.ml[3563,115390+26]..[3563,115390+27])
                                      Ppat_var "l" (lambda/matching.ml[3563,115390+26]..[3563,115390+27])
                                  ]
                                expression (lambda/matching.ml[3563,115390+32]..[3563,115390+51])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3563,115390+33]..[3563,115390+34])
                                      Pexp_ident "i" (lambda/matching.ml[3563,115390+33]..[3563,115390+34])
                                    expression (lambda/matching.ml[3563,115390+36]..[3563,115390+50])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3563,115390+36]..[3563,115390+46])
                                        Pexp_ident "map_return" (lambda/matching.ml[3563,115390+36]..[3563,115390+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3563,115390+47]..[3563,115390+48])
                                            Pexp_ident "f" (lambda/matching.ml[3563,115390+47]..[3563,115390+48])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3563,115390+49]..[3563,115390+50])
                                            Pexp_ident "l" (lambda/matching.ml[3563,115390+49]..[3563,115390+50])
                                      ]
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3563,115390+53]..[3563,115390+58])
                                Pexp_ident "cases" (lambda/matching.ml[3563,115390+53]..[3563,115390+58])
                          ]
                  ]
                  expression (lambda/matching.ml[3565,115458+6]..[3572,115685+15])
                    Pexp_construct "Lswitch" (lambda/matching.ml[3565,115458+6]..[3565,115458+13])
                    Some
                      expression (lambda/matching.ml[3566,115472+8]..[3572,115685+15])
                        Pexp_tuple
                        [
                          expression (lambda/matching.ml[3566,115472+10]..[3566,115472+11])
                            Pexp_ident "s" (lambda/matching.ml[3566,115472+10]..[3566,115472+11])
                          expression (lambda/matching.ml[3567,115485+10]..[3571,115672+11])
                            Pexp_record
                            [
                              "sw_consts" (lambda/matching.ml[3568,115505+12]..[3568,115505+21])
                                expression (lambda/matching.ml[3568,115505+24]..[3568,115505+46])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3568,115505+24]..[3568,115505+33])
                                    Pexp_ident "map_cases" (lambda/matching.ml[3568,115505+24]..[3568,115505+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3568,115505+34]..[3568,115505+46])
                                        Pexp_field
                                        expression (lambda/matching.ml[3568,115505+34]..[3568,115505+36])
                                          Pexp_ident "sw" (lambda/matching.ml[3568,115505+34]..[3568,115505+36])
                                        "sw_consts" (lambda/matching.ml[3568,115505+37]..[3568,115505+46])
                                  ]
                              "sw_blocks" (lambda/matching.ml[3569,115553+12]..[3569,115553+21])
                                expression (lambda/matching.ml[3569,115553+24]..[3569,115553+46])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3569,115553+24]..[3569,115553+33])
                                    Pexp_ident "map_cases" (lambda/matching.ml[3569,115553+24]..[3569,115553+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3569,115553+34]..[3569,115553+46])
                                        Pexp_field
                                        expression (lambda/matching.ml[3569,115553+34]..[3569,115553+36])
                                          Pexp_ident "sw" (lambda/matching.ml[3569,115553+34]..[3569,115553+36])
                                        "sw_blocks" (lambda/matching.ml[3569,115553+37]..[3569,115553+46])
                                  ]
                              "sw_failaction" (lambda/matching.ml[3570,115601+12]..[3570,115601+25])
                                expression (lambda/matching.ml[3570,115601+28]..[3570,115601+70])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3570,115601+28]..[3570,115601+38])
                                    Pexp_ident "Option.map" (lambda/matching.ml[3570,115601+28]..[3570,115601+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3570,115601+39]..[3570,115601+53])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3570,115601+40]..[3570,115601+50])
                                          Pexp_ident "map_return" (lambda/matching.ml[3570,115601+40]..[3570,115601+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3570,115601+51]..[3570,115601+52])
                                              Pexp_ident "f" (lambda/matching.ml[3570,115601+51]..[3570,115601+52])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3570,115601+54]..[3570,115601+70])
                                        Pexp_field
                                        expression (lambda/matching.ml[3570,115601+54]..[3570,115601+56])
                                          Pexp_ident "sw" (lambda/matching.ml[3570,115601+54]..[3570,115601+56])
                                        "sw_failaction" (lambda/matching.ml[3570,115601+57]..[3570,115601+70])
                                  ]
                            ]
                            Some
                              expression (lambda/matching.ml[3567,115485+12]..[3567,115485+14])
                                Pexp_ident "sw" (lambda/matching.ml[3567,115485+12]..[3567,115485+14])
                          expression (lambda/matching.ml[3572,115685+10]..[3572,115685+13])
                            Pexp_ident "loc" (lambda/matching.ml[3572,115685+10]..[3572,115685+13])
                        ]
              <case>
                pattern (lambda/matching.ml[3573,115701+4]..[3573,115701+38])
                  Ppat_construct "Lstringswitch" (lambda/matching.ml[3573,115701+4]..[3573,115701+17])
                  Some
                    []
                    pattern (lambda/matching.ml[3573,115701+18]..[3573,115701+38])
                      Ppat_tuple
                      [
                        pattern (lambda/matching.ml[3573,115701+19]..[3573,115701+20])
                          Ppat_var "s" (lambda/matching.ml[3573,115701+19]..[3573,115701+20])
                        pattern (lambda/matching.ml[3573,115701+22]..[3573,115701+27])
                          Ppat_var "cases" (lambda/matching.ml[3573,115701+22]..[3573,115701+27])
                        pattern (lambda/matching.ml[3573,115701+29]..[3573,115701+32])
                          Ppat_var "def" (lambda/matching.ml[3573,115701+29]..[3573,115701+32])
                        pattern (lambda/matching.ml[3573,115701+34]..[3573,115701+37])
                          Ppat_var "loc" (lambda/matching.ml[3573,115701+34]..[3573,115701+37])
                      ]
                expression (lambda/matching.ml[3574,115743+6]..[3578,115879+15])
                  Pexp_construct "Lstringswitch" (lambda/matching.ml[3574,115743+6]..[3574,115743+19])
                  Some
                    expression (lambda/matching.ml[3575,115763+8]..[3578,115879+15])
                      Pexp_tuple
                      [
                        expression (lambda/matching.ml[3575,115763+10]..[3575,115763+11])
                          Pexp_ident "s" (lambda/matching.ml[3575,115763+10]..[3575,115763+11])
                        expression (lambda/matching.ml[3576,115776+10]..[3576,115776+60])
                          Pexp_apply
                          expression (lambda/matching.ml[3576,115776+10]..[3576,115776+18])
                            Pexp_ident "List.map" (lambda/matching.ml[3576,115776+10]..[3576,115776+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3576,115776+19]..[3576,115776+54])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3576,115776+24]..[3576,115776+30])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/matching.ml[3576,115776+25]..[3576,115776+26])
                                      Ppat_var "s" (lambda/matching.ml[3576,115776+25]..[3576,115776+26])
                                    pattern (lambda/matching.ml[3576,115776+28]..[3576,115776+29])
                                      Ppat_var "l" (lambda/matching.ml[3576,115776+28]..[3576,115776+29])
                                  ]
                                expression (lambda/matching.ml[3576,115776+34]..[3576,115776+53])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3576,115776+35]..[3576,115776+36])
                                      Pexp_ident "s" (lambda/matching.ml[3576,115776+35]..[3576,115776+36])
                                    expression (lambda/matching.ml[3576,115776+38]..[3576,115776+52])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3576,115776+38]..[3576,115776+48])
                                        Pexp_ident "map_return" (lambda/matching.ml[3576,115776+38]..[3576,115776+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3576,115776+49]..[3576,115776+50])
                                            Pexp_ident "f" (lambda/matching.ml[3576,115776+49]..[3576,115776+50])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3576,115776+51]..[3576,115776+52])
                                            Pexp_ident "l" (lambda/matching.ml[3576,115776+51]..[3576,115776+52])
                                      ]
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3576,115776+55]..[3576,115776+60])
                                Pexp_ident "cases" (lambda/matching.ml[3576,115776+55]..[3576,115776+60])
                          ]
                        expression (lambda/matching.ml[3577,115838+10]..[3577,115838+39])
                          Pexp_apply
                          expression (lambda/matching.ml[3577,115838+10]..[3577,115838+20])
                            Pexp_ident "Option.map" (lambda/matching.ml[3577,115838+10]..[3577,115838+20])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3577,115838+21]..[3577,115838+35])
                                Pexp_apply
                                expression (lambda/matching.ml[3577,115838+22]..[3577,115838+32])
                                  Pexp_ident "map_return" (lambda/matching.ml[3577,115838+22]..[3577,115838+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3577,115838+33]..[3577,115838+34])
                                      Pexp_ident "f" (lambda/matching.ml[3577,115838+33]..[3577,115838+34])
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3577,115838+36]..[3577,115838+39])
                                Pexp_ident "def" (lambda/matching.ml[3577,115838+36]..[3577,115838+39])
                          ]
                        expression (lambda/matching.ml[3578,115879+10]..[3578,115879+13])
                          Pexp_ident "loc" (lambda/matching.ml[3578,115879+10]..[3578,115879+13])
                      ]
              <case>
                pattern (lambda/matching.ml[3579,115895+4]..[3579,115895+50])
                  Ppat_alias "l" (lambda/matching.ml[3579,115895+49]..[3579,115895+50])
                  pattern (lambda/matching.ml[3579,115895+4]..[3579,115895+45])
                    Ppat_or
                    pattern (lambda/matching.ml[3579,115895+5]..[3579,115895+19])
                      Ppat_construct "Lstaticraise" (lambda/matching.ml[3579,115895+5]..[3579,115895+17])
                      Some
                        []
                        pattern (lambda/matching.ml[3579,115895+18]..[3579,115895+19])
                          Ppat_any
                    pattern (lambda/matching.ml[3579,115895+22]..[3579,115895+44])
                      Ppat_construct "Lprim" (lambda/matching.ml[3579,115895+22]..[3579,115895+27])
                      Some
                        []
                        pattern (lambda/matching.ml[3579,115895+28]..[3579,115895+44])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3579,115895+29]..[3579,115895+37])
                              Ppat_construct "Praise" (lambda/matching.ml[3579,115895+29]..[3579,115895+35])
                              Some
                                []
                                pattern (lambda/matching.ml[3579,115895+36]..[3579,115895+37])
                                  Ppat_any
                            pattern (lambda/matching.ml[3579,115895+39]..[3579,115895+40])
                              Ppat_any
                            pattern (lambda/matching.ml[3579,115895+42]..[3579,115895+43])
                              Ppat_any
                          ]
                expression (lambda/matching.ml[3579,115895+54]..[3579,115895+55])
                  Pexp_ident "l" (lambda/matching.ml[3579,115895+54]..[3579,115895+55])
              <case>
                pattern (lambda/matching.ml[3580,115951+4]..[3581,116032+54])
                  Ppat_alias "l" (lambda/matching.ml[3581,116032+53]..[3581,116032+54])
                  pattern (lambda/matching.ml[3580,115951+4]..[3581,116032+49])
                    Ppat_or
                    pattern (lambda/matching.ml[3580,115951+6]..[3581,116032+35])
                      Ppat_or
                      pattern (lambda/matching.ml[3580,115951+6]..[3581,116032+23])
                        Ppat_or
                        pattern (lambda/matching.ml[3580,115951+6]..[3581,116032+14])
                          Ppat_or
                          pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+80])
                            Ppat_or
                            pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+70])
                              Ppat_or
                              pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+60])
                                Ppat_or
                                pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+46])
                                  Ppat_or
                                  pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+35])
                                    Ppat_or
                                    pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+24])
                                      Ppat_or
                                      pattern (lambda/matching.ml[3580,115951+6]..[3580,115951+12])
                                        Ppat_construct "Lvar" (lambda/matching.ml[3580,115951+6]..[3580,115951+10])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[3580,115951+11]..[3580,115951+12])
                                            Ppat_any
                                      pattern (lambda/matching.ml[3580,115951+15]..[3580,115951+24])
                                        Ppat_construct "Lmutvar" (lambda/matching.ml[3580,115951+15]..[3580,115951+22])
                                        Some
                                          []
                                          pattern (lambda/matching.ml[3580,115951+23]..[3580,115951+24])
                                            Ppat_any
                                    pattern (lambda/matching.ml[3580,115951+27]..[3580,115951+35])
                                      Ppat_construct "Lconst" (lambda/matching.ml[3580,115951+27]..[3580,115951+33])
                                      Some
                                        []
                                        pattern (lambda/matching.ml[3580,115951+34]..[3580,115951+35])
                                          Ppat_any
                                  pattern (lambda/matching.ml[3580,115951+38]..[3580,115951+46])
                                    Ppat_construct "Lapply" (lambda/matching.ml[3580,115951+38]..[3580,115951+44])
                                    Some
                                      []
                                      pattern (lambda/matching.ml[3580,115951+45]..[3580,115951+46])
                                        Ppat_any
                                pattern (lambda/matching.ml[3580,115951+49]..[3580,115951+60])
                                  Ppat_construct "Lfunction" (lambda/matching.ml[3580,115951+49]..[3580,115951+58])
                                  Some
                                    []
                                    pattern (lambda/matching.ml[3580,115951+59]..[3580,115951+60])
                                      Ppat_any
                              pattern (lambda/matching.ml[3580,115951+63]..[3580,115951+70])
                                Ppat_construct "Lsend" (lambda/matching.ml[3580,115951+63]..[3580,115951+68])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3580,115951+69]..[3580,115951+70])
                                    Ppat_any
                            pattern (lambda/matching.ml[3580,115951+73]..[3580,115951+80])
                              Ppat_construct "Lprim" (lambda/matching.ml[3580,115951+73]..[3580,115951+78])
                              Some
                                []
                                pattern (lambda/matching.ml[3580,115951+79]..[3580,115951+80])
                                  Ppat_any
                          pattern (lambda/matching.ml[3581,116032+6]..[3581,116032+14])
                            Ppat_construct "Lwhile" (lambda/matching.ml[3581,116032+6]..[3581,116032+12])
                            Some
                              []
                              pattern (lambda/matching.ml[3581,116032+13]..[3581,116032+14])
                                Ppat_any
                        pattern (lambda/matching.ml[3581,116032+17]..[3581,116032+23])
                          Ppat_construct "Lfor" (lambda/matching.ml[3581,116032+17]..[3581,116032+21])
                          Some
                            []
                            pattern (lambda/matching.ml[3581,116032+22]..[3581,116032+23])
                              Ppat_any
                      pattern (lambda/matching.ml[3581,116032+26]..[3581,116032+35])
                        Ppat_construct "Lassign" (lambda/matching.ml[3581,116032+26]..[3581,116032+33])
                        Some
                          []
                          pattern (lambda/matching.ml[3581,116032+34]..[3581,116032+35])
                            Ppat_any
                    pattern (lambda/matching.ml[3581,116032+38]..[3581,116032+47])
                      Ppat_construct "Lifused" (lambda/matching.ml[3581,116032+38]..[3581,116032+45])
                      Some
                        []
                        pattern (lambda/matching.ml[3581,116032+46]..[3581,116032+47])
                          Ppat_any
                expression (lambda/matching.ml[3582,116090+6]..[3582,116090+9])
                  Pexp_apply
                  expression (lambda/matching.ml[3582,116090+6]..[3582,116090+7])
                    Pexp_ident "f" (lambda/matching.ml[3582,116090+6]..[3582,116090+7])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/matching.ml[3582,116090+8]..[3582,116090+9])
                        Pexp_ident "l" (lambda/matching.ml[3582,116090+8]..[3582,116090+9])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[3599,116796+0]..[3632,118383+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3599,116796+4]..[3599,116796+14])
          Ppat_var "assign_pat" (lambda/matching.ml[3599,116796+4]..[3599,116796+14])
        expression (lambda/matching.ml[3599,116796+15]..[3632,118383+45]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3599,116796+16]..[3599,116796+22])
            Ppat_var "scopes" (lambda/matching.ml[3599,116796+16]..[3599,116796+22])
          expression (lambda/matching.ml[3599,116796+23]..[3632,118383+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3599,116796+23]..[3599,116796+26])
              Ppat_var "opt" (lambda/matching.ml[3599,116796+23]..[3599,116796+26])
            expression (lambda/matching.ml[3599,116796+27]..[3632,118383+45]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3599,116796+27]..[3599,116796+33])
                Ppat_var "nraise" (lambda/matching.ml[3599,116796+27]..[3599,116796+33])
              expression (lambda/matching.ml[3599,116796+34]..[3632,118383+45]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3599,116796+34]..[3599,116796+43])
                  Ppat_var "catch_ids" (lambda/matching.ml[3599,116796+34]..[3599,116796+43])
                expression (lambda/matching.ml[3599,116796+44]..[3632,118383+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3599,116796+44]..[3599,116796+47])
                    Ppat_var "loc" (lambda/matching.ml[3599,116796+44]..[3599,116796+47])
                  expression (lambda/matching.ml[3599,116796+48]..[3632,118383+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/matching.ml[3599,116796+48]..[3599,116796+51])
                      Ppat_var "pat" (lambda/matching.ml[3599,116796+48]..[3599,116796+51])
                    expression (lambda/matching.ml[3599,116796+52]..[3632,118383+45]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/matching.ml[3599,116796+52]..[3599,116796+55])
                        Ppat_var "lam" (lambda/matching.ml[3599,116796+52]..[3599,116796+55])
                      expression (lambda/matching.ml[3600,116854+2]..[3632,118383+45])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lambda/matching.ml[3600,116854+10]..[3600,116854+17])
                              Ppat_var "collect" (lambda/matching.ml[3600,116854+10]..[3600,116854+17])
                            expression (lambda/matching.ml[3600,116854+18]..[3614,117514+56]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/matching.ml[3600,116854+18]..[3600,116854+21])
                                Ppat_var "acc" (lambda/matching.ml[3600,116854+18]..[3600,116854+21])
                              expression (lambda/matching.ml[3600,116854+22]..[3614,117514+56]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3600,116854+22]..[3600,116854+25])
                                  Ppat_var "pat" (lambda/matching.ml[3600,116854+22]..[3600,116854+25])
                                expression (lambda/matching.ml[3600,116854+26]..[3614,117514+56]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3600,116854+26]..[3600,116854+29])
                                    Ppat_var "lam" (lambda/matching.ml[3600,116854+26]..[3600,116854+29])
                                  expression (lambda/matching.ml[3601,116886+4]..[3614,117514+56])
                                    Pexp_match
                                    expression (lambda/matching.ml[3601,116886+10]..[3601,116886+29])
                                      Pexp_tuple
                                      [
                                        expression (lambda/matching.ml[3601,116886+11]..[3601,116886+23])
                                          Pexp_field
                                          expression (lambda/matching.ml[3601,116886+11]..[3601,116886+14])
                                            Pexp_ident "pat" (lambda/matching.ml[3601,116886+11]..[3601,116886+14])
                                          "pat_desc" (lambda/matching.ml[3601,116886+15]..[3601,116886+23])
                                        expression (lambda/matching.ml[3601,116886+25]..[3601,116886+28])
                                          Pexp_ident "lam" (lambda/matching.ml[3601,116886+25]..[3601,116886+28])
                                      ]
                                    [
                                      <case>
                                        pattern (lambda/matching.ml[3602,116921+6]..[3602,116921+52])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3602,116921+6]..[3602,116921+21])
                                              Ppat_construct "Tpat_tuple" (lambda/matching.ml[3602,116921+6]..[3602,116921+16])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3602,116921+17]..[3602,116921+21])
                                                  Ppat_var "patl" (lambda/matching.ml[3602,116921+17]..[3602,116921+21])
                                            pattern (lambda/matching.ml[3602,116921+23]..[3602,116921+52])
                                              Ppat_construct "Lprim" (lambda/matching.ml[3602,116921+23]..[3602,116921+28])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3602,116921+29]..[3602,116921+52])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/matching.ml[3602,116921+30]..[3602,116921+42])
                                                      Ppat_construct "Pmakeblock" (lambda/matching.ml[3602,116921+30]..[3602,116921+40])
                                                      Some
                                                        []
                                                        pattern (lambda/matching.ml[3602,116921+41]..[3602,116921+42])
                                                          Ppat_any
                                                    pattern (lambda/matching.ml[3602,116921+44]..[3602,116921+48])
                                                      Ppat_var "lams" (lambda/matching.ml[3602,116921+44]..[3602,116921+48])
                                                    pattern (lambda/matching.ml[3602,116921+50]..[3602,116921+51])
                                                      Ppat_any
                                                  ]
                                          ]
                                        expression (lambda/matching.ml[3603,116977+8]..[3604,116998+45])
                                          Pexp_sequence
                                          expression (lambda/matching.ml[3603,116977+8]..[3603,116977+19])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3603,116977+12]..[3603,116977+14])
                                              Pexp_ident ":=" (lambda/matching.ml[3603,116977+12]..[3603,116977+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3603,116977+8]..[3603,116977+11])
                                                  Pexp_ident "opt" (lambda/matching.ml[3603,116977+8]..[3603,116977+11])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3603,116977+15]..[3603,116977+19])
                                                  Pexp_construct "true" (lambda/matching.ml[3603,116977+15]..[3603,116977+19])
                                                  None
                                            ]
                                          expression (lambda/matching.ml[3604,116998+8]..[3604,116998+45])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3604,116998+8]..[3604,116998+23])
                                              Pexp_ident "List.fold_left2" (lambda/matching.ml[3604,116998+8]..[3604,116998+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3604,116998+24]..[3604,116998+31])
                                                  Pexp_ident "collect" (lambda/matching.ml[3604,116998+24]..[3604,116998+31])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3604,116998+32]..[3604,116998+35])
                                                  Pexp_ident "acc" (lambda/matching.ml[3604,116998+32]..[3604,116998+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3604,116998+36]..[3604,116998+40])
                                                  Pexp_ident "patl" (lambda/matching.ml[3604,116998+36]..[3604,116998+40])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3604,116998+41]..[3604,116998+45])
                                                  Pexp_ident "lams" (lambda/matching.ml[3604,116998+41]..[3604,116998+45])
                                            ]
                                      <case>
                                        pattern (lambda/matching.ml[3605,117044+6]..[3605,117044+52])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/matching.ml[3605,117044+6]..[3605,117044+21])
                                              Ppat_construct "Tpat_tuple" (lambda/matching.ml[3605,117044+6]..[3605,117044+16])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3605,117044+17]..[3605,117044+21])
                                                  Ppat_var "patl" (lambda/matching.ml[3605,117044+17]..[3605,117044+21])
                                            pattern (lambda/matching.ml[3605,117044+23]..[3605,117044+52])
                                              Ppat_construct "Lconst" (lambda/matching.ml[3605,117044+23]..[3605,117044+29])
                                              Some
                                                []
                                                pattern (lambda/matching.ml[3605,117044+30]..[3605,117044+52])
                                                  Ppat_construct "Const_block" (lambda/matching.ml[3605,117044+31]..[3605,117044+42])
                                                  Some
                                                    []
                                                    pattern (lambda/matching.ml[3605,117044+43]..[3605,117044+51])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/matching.ml[3605,117044+44]..[3605,117044+45])
                                                          Ppat_any
                                                        pattern (lambda/matching.ml[3605,117044+47]..[3605,117044+50])
                                                          Ppat_var "scl" (lambda/matching.ml[3605,117044+47]..[3605,117044+50])
                                                      ]
                                          ]
                                        expression (lambda/matching.ml[3606,117100+8]..[3608,117191+50])
                                          Pexp_sequence
                                          expression (lambda/matching.ml[3606,117100+8]..[3606,117100+19])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3606,117100+12]..[3606,117100+14])
                                              Pexp_ident ":=" (lambda/matching.ml[3606,117100+12]..[3606,117100+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3606,117100+8]..[3606,117100+11])
                                                  Pexp_ident "opt" (lambda/matching.ml[3606,117100+8]..[3606,117100+11])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3606,117100+15]..[3606,117100+19])
                                                  Pexp_construct "true" (lambda/matching.ml[3606,117100+15]..[3606,117100+19])
                                                  None
                                            ]
                                          expression (lambda/matching.ml[3607,117121+8]..[3608,117191+50])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[3607,117121+12]..[3607,117121+25])
                                                  Ppat_var "collect_const" (lambda/matching.ml[3607,117121+12]..[3607,117121+25])
                                                expression (lambda/matching.ml[3607,117121+26]..[3607,117121+66]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/matching.ml[3607,117121+26]..[3607,117121+29])
                                                    Ppat_var "acc" (lambda/matching.ml[3607,117121+26]..[3607,117121+29])
                                                  expression (lambda/matching.ml[3607,117121+30]..[3607,117121+66]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/matching.ml[3607,117121+30]..[3607,117121+33])
                                                      Ppat_var "pat" (lambda/matching.ml[3607,117121+30]..[3607,117121+33])
                                                    expression (lambda/matching.ml[3607,117121+34]..[3607,117121+66]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/matching.ml[3607,117121+34]..[3607,117121+36])
                                                        Ppat_var "sc" (lambda/matching.ml[3607,117121+34]..[3607,117121+36])
                                                      expression (lambda/matching.ml[3607,117121+39]..[3607,117121+66])
                                                        Pexp_apply
                                                        expression (lambda/matching.ml[3607,117121+39]..[3607,117121+46])
                                                          Pexp_ident "collect" (lambda/matching.ml[3607,117121+39]..[3607,117121+46])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3607,117121+47]..[3607,117121+50])
                                                              Pexp_ident "acc" (lambda/matching.ml[3607,117121+47]..[3607,117121+50])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3607,117121+51]..[3607,117121+54])
                                                              Pexp_ident "pat" (lambda/matching.ml[3607,117121+51]..[3607,117121+54])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/matching.ml[3607,117121+55]..[3607,117121+66])
                                                              Pexp_construct "Lconst" (lambda/matching.ml[3607,117121+56]..[3607,117121+62])
                                                              Some
                                                                expression (lambda/matching.ml[3607,117121+63]..[3607,117121+65])
                                                                  Pexp_ident "sc" (lambda/matching.ml[3607,117121+63]..[3607,117121+65])
                                                        ]
                                            ]
                                            expression (lambda/matching.ml[3608,117191+8]..[3608,117191+50])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3608,117191+8]..[3608,117191+23])
                                                Pexp_ident "List.fold_left2" (lambda/matching.ml[3608,117191+8]..[3608,117191+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3608,117191+24]..[3608,117191+37])
                                                    Pexp_ident "collect_const" (lambda/matching.ml[3608,117191+24]..[3608,117191+37])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3608,117191+38]..[3608,117191+41])
                                                    Pexp_ident "acc" (lambda/matching.ml[3608,117191+38]..[3608,117191+41])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3608,117191+42]..[3608,117191+46])
                                                    Pexp_ident "patl" (lambda/matching.ml[3608,117191+42]..[3608,117191+46])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3608,117191+47]..[3608,117191+50])
                                                    Pexp_ident "scl" (lambda/matching.ml[3608,117191+47]..[3608,117191+50])
                                              ]
                                      <case>
                                        pattern (lambda/matching.ml[3609,117242+6]..[3609,117242+7])
                                          Ppat_any
                                        expression (lambda/matching.ml[3612,117390+8]..[3614,117514+56])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[3612,117390+12]..[3612,117390+19])
                                                Ppat_var "pat_ids" (lambda/matching.ml[3612,117390+12]..[3612,117390+19])
                                              expression (lambda/matching.ml[3612,117390+22]..[3612,117390+42])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3612,117390+22]..[3612,117390+38])
                                                  Pexp_ident "pat_bound_idents" (lambda/matching.ml[3612,117390+22]..[3612,117390+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3612,117390+39]..[3612,117390+42])
                                                      Pexp_ident "pat" (lambda/matching.ml[3612,117390+39]..[3612,117390+42])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[3613,117436+8]..[3614,117514+56])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[3613,117436+12]..[3613,117436+21])
                                                  Ppat_var "fresh_ids" (lambda/matching.ml[3613,117436+12]..[3613,117436+21])
                                                expression (lambda/matching.ml[3613,117436+24]..[3613,117436+74])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3613,117436+24]..[3613,117436+32])
                                                    Pexp_ident "List.map" (lambda/matching.ml[3613,117436+24]..[3613,117436+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3613,117436+33]..[3613,117436+66])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/matching.ml[3613,117436+38]..[3613,117436+40])
                                                          Ppat_var "id" (lambda/matching.ml[3613,117436+38]..[3613,117436+40])
                                                        expression (lambda/matching.ml[3613,117436+44]..[3613,117436+65])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[3613,117436+45]..[3613,117436+47])
                                                              Pexp_ident "id" (lambda/matching.ml[3613,117436+45]..[3613,117436+47])
                                                            expression (lambda/matching.ml[3613,117436+49]..[3613,117436+64])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3613,117436+49]..[3613,117436+61])
                                                                Pexp_ident "Ident.rename" (lambda/matching.ml[3613,117436+49]..[3613,117436+61])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3613,117436+62]..[3613,117436+64])
                                                                    Pexp_ident "id" (lambda/matching.ml[3613,117436+62]..[3613,117436+64])
                                                              ]
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3613,117436+67]..[3613,117436+74])
                                                        Pexp_ident "pat_ids" (lambda/matching.ml[3613,117436+67]..[3613,117436+74])
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[3614,117514+8]..[3614,117514+56])
                                              Pexp_construct "::" (lambda/matching.ml[3614,117514+50]..[3614,117514+52])
                                              Some
                                                expression (lambda/matching.ml[3614,117514+8]..[3614,117514+56]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/matching.ml[3614,117514+8]..[3614,117514+49])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/matching.ml[3614,117514+9]..[3614,117514+18])
                                                          Pexp_ident "fresh_ids" (lambda/matching.ml[3614,117514+9]..[3614,117514+18])
                                                        expression (lambda/matching.ml[3614,117514+20]..[3614,117514+43])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3614,117514+20]..[3614,117514+29])
                                                            Pexp_ident "alpha_pat" (lambda/matching.ml[3614,117514+20]..[3614,117514+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3614,117514+30]..[3614,117514+39])
                                                                Pexp_ident "fresh_ids" (lambda/matching.ml[3614,117514+30]..[3614,117514+39])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3614,117514+40]..[3614,117514+43])
                                                                Pexp_ident "pat" (lambda/matching.ml[3614,117514+40]..[3614,117514+43])
                                                          ]
                                                        expression (lambda/matching.ml[3614,117514+45]..[3614,117514+48])
                                                          Pexp_ident "lam" (lambda/matching.ml[3614,117514+45]..[3614,117514+48])
                                                      ]
                                                    expression (lambda/matching.ml[3614,117514+53]..[3614,117514+56])
                                                      Pexp_ident "acc" (lambda/matching.ml[3614,117514+53]..[3614,117514+56])
                                                  ]
                                    ]
                        ]
                        expression (lambda/matching.ml[3621,117854+2]..[3632,118383+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3621,117854+6]..[3621,117854+17])
                                Ppat_var "rev_sublets" (lambda/matching.ml[3621,117854+6]..[3621,117854+17])
                              expression (lambda/matching.ml[3621,117854+20]..[3621,117854+49])
                                Pexp_apply
                                expression (lambda/matching.ml[3621,117854+20]..[3621,117854+28])
                                  Pexp_ident "List.rev" (lambda/matching.ml[3621,117854+20]..[3621,117854+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3621,117854+29]..[3621,117854+49])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3621,117854+30]..[3621,117854+37])
                                        Pexp_ident "collect" (lambda/matching.ml[3621,117854+30]..[3621,117854+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3621,117854+38]..[3621,117854+40])
                                            Pexp_construct "[]" (lambda/matching.ml[3621,117854+38]..[3621,117854+40])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3621,117854+41]..[3621,117854+44])
                                            Pexp_ident "pat" (lambda/matching.ml[3621,117854+41]..[3621,117854+44])
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3621,117854+45]..[3621,117854+48])
                                            Pexp_ident "lam" (lambda/matching.ml[3621,117854+45]..[3621,117854+48])
                                      ]
                                ]
                          ]
                          expression (lambda/matching.ml[3622,117907+2]..[3632,118383+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3622,117907+6]..[3622,117907+10])
                                  Ppat_var "exit" (lambda/matching.ml[3622,117907+6]..[3622,117907+10])
                                expression (lambda/matching.ml[3624,117985+4]..[3628,118233+55])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[3624,117985+8]..[3624,117985+11])
                                        Ppat_var "add" (lambda/matching.ml[3624,117985+8]..[3624,117985+11])
                                      expression (lambda/matching.ml[3624,117985+12]..[3624,117985+54]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/matching.ml[3624,117985+12]..[3624,117985+13])
                                          Ppat_var "t" (lambda/matching.ml[3624,117985+12]..[3624,117985+13])
                                        expression (lambda/matching.ml[3624,117985+14]..[3624,117985+54]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[3624,117985+14]..[3624,117985+28])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[3624,117985+15]..[3624,117985+17])
                                                Ppat_var "id" (lambda/matching.ml[3624,117985+15]..[3624,117985+17])
                                              pattern (lambda/matching.ml[3624,117985+19]..[3624,117985+27])
                                                Ppat_var "fresh_id" (lambda/matching.ml[3624,117985+19]..[3624,117985+27])
                                            ]
                                          expression (lambda/matching.ml[3624,117985+31]..[3624,117985+54])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3624,117985+31]..[3624,117985+40])
                                              Pexp_ident "Ident.add" (lambda/matching.ml[3624,117985+31]..[3624,117985+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3624,117985+41]..[3624,117985+43])
                                                  Pexp_ident "id" (lambda/matching.ml[3624,117985+41]..[3624,117985+43])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3624,117985+44]..[3624,117985+52])
                                                  Pexp_ident "fresh_id" (lambda/matching.ml[3624,117985+44]..[3624,117985+52])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3624,117985+53]..[3624,117985+54])
                                                  Pexp_ident "t" (lambda/matching.ml[3624,117985+53]..[3624,117985+54])
                                            ]
                                  ]
                                  expression (lambda/matching.ml[3625,118043+4]..[3628,118233+55])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[3625,118043+8]..[3625,118043+15])
                                          Ppat_var "add_ids" (lambda/matching.ml[3625,118043+8]..[3625,118043+15])
                                        expression (lambda/matching.ml[3625,118043+16]..[3625,118043+66]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/matching.ml[3625,118043+16]..[3625,118043+19])
                                            Ppat_var "acc" (lambda/matching.ml[3625,118043+16]..[3625,118043+19])
                                          expression (lambda/matching.ml[3625,118043+20]..[3625,118043+66]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[3625,118043+20]..[3625,118043+37])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3625,118043+21]..[3625,118043+24])
                                                  Ppat_var "ids" (lambda/matching.ml[3625,118043+21]..[3625,118043+24])
                                                pattern (lambda/matching.ml[3625,118043+26]..[3625,118043+30])
                                                  Ppat_var "_pat" (lambda/matching.ml[3625,118043+26]..[3625,118043+30])
                                                pattern (lambda/matching.ml[3625,118043+32]..[3625,118043+36])
                                                  Ppat_var "_lam" (lambda/matching.ml[3625,118043+32]..[3625,118043+36])
                                              ]
                                            expression (lambda/matching.ml[3625,118043+40]..[3625,118043+66])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3625,118043+40]..[3625,118043+54])
                                                Pexp_ident "List.fold_left" (lambda/matching.ml[3625,118043+40]..[3625,118043+54])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3625,118043+55]..[3625,118043+58])
                                                    Pexp_ident "add" (lambda/matching.ml[3625,118043+55]..[3625,118043+58])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3625,118043+59]..[3625,118043+62])
                                                    Pexp_ident "acc" (lambda/matching.ml[3625,118043+59]..[3625,118043+62])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3625,118043+63]..[3625,118043+66])
                                                    Pexp_ident "ids" (lambda/matching.ml[3625,118043+63]..[3625,118043+66])
                                              ]
                                    ]
                                    expression (lambda/matching.ml[3626,118113+4]..[3628,118233+55])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[3626,118113+8]..[3626,118113+11])
                                            Ppat_var "tbl" (lambda/matching.ml[3626,118113+8]..[3626,118113+11])
                                          expression (lambda/matching.ml[3626,118113+14]..[3626,118113+60])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3626,118113+14]..[3626,118113+28])
                                              Pexp_ident "List.fold_left" (lambda/matching.ml[3626,118113+14]..[3626,118113+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3626,118113+29]..[3626,118113+36])
                                                  Pexp_ident "add_ids" (lambda/matching.ml[3626,118113+29]..[3626,118113+36])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3626,118113+37]..[3626,118113+48])
                                                  Pexp_ident "Ident.empty" (lambda/matching.ml[3626,118113+37]..[3626,118113+48])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3626,118113+49]..[3626,118113+60])
                                                  Pexp_ident "rev_sublets" (lambda/matching.ml[3626,118113+49]..[3626,118113+60])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[3627,118177+4]..[3628,118233+55])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[3627,118177+8]..[3627,118177+17])
                                              Ppat_var "fresh_var" (lambda/matching.ml[3627,118177+8]..[3627,118177+17])
                                            expression (lambda/matching.ml[3627,118177+18]..[3627,118177+52]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/matching.ml[3627,118177+18]..[3627,118177+20])
                                                Ppat_var "id" (lambda/matching.ml[3627,118177+18]..[3627,118177+20])
                                              expression (lambda/matching.ml[3627,118177+23]..[3627,118177+52])
                                                Pexp_construct "Lvar" (lambda/matching.ml[3627,118177+23]..[3627,118177+27])
                                                Some
                                                  expression (lambda/matching.ml[3627,118177+28]..[3627,118177+52])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3627,118177+29]..[3627,118177+44])
                                                      Pexp_ident "Ident.find_same" (lambda/matching.ml[3627,118177+29]..[3627,118177+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3627,118177+45]..[3627,118177+47])
                                                          Pexp_ident "id" (lambda/matching.ml[3627,118177+45]..[3627,118177+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3627,118177+48]..[3627,118177+51])
                                                          Pexp_ident "tbl" (lambda/matching.ml[3627,118177+48]..[3627,118177+51])
                                                    ]
                                        ]
                                        expression (lambda/matching.ml[3628,118233+4]..[3628,118233+55])
                                          Pexp_construct "Lstaticraise" (lambda/matching.ml[3628,118233+4]..[3628,118233+16])
                                          Some
                                            expression (lambda/matching.ml[3628,118233+17]..[3628,118233+55])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[3628,118233+18]..[3628,118233+24])
                                                  Pexp_ident "nraise" (lambda/matching.ml[3628,118233+18]..[3628,118233+24])
                                                expression (lambda/matching.ml[3628,118233+26]..[3628,118233+54])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3628,118233+26]..[3628,118233+34])
                                                    Pexp_ident "List.map" (lambda/matching.ml[3628,118233+26]..[3628,118233+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3628,118233+35]..[3628,118233+44])
                                                        Pexp_ident "fresh_var" (lambda/matching.ml[3628,118233+35]..[3628,118233+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3628,118233+45]..[3628,118233+54])
                                                        Pexp_ident "catch_ids" (lambda/matching.ml[3628,118233+45]..[3628,118233+54])
                                                  ]
                                              ]
                            ]
                            expression (lambda/matching.ml[3630,118294+2]..[3632,118383+45])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3630,118294+6]..[3630,118294+17])
                                    Ppat_var "push_sublet" (lambda/matching.ml[3630,118294+6]..[3630,118294+17])
                                  expression (lambda/matching.ml[3630,118294+18]..[3631,118336+43]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/matching.ml[3630,118294+18]..[3630,118294+22])
                                      Ppat_var "code" (lambda/matching.ml[3630,118294+18]..[3630,118294+22])
                                    expression (lambda/matching.ml[3630,118294+23]..[3631,118336+43]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/matching.ml[3630,118294+23]..[3630,118294+39])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/matching.ml[3630,118294+24]..[3630,118294+28])
                                            Ppat_var "_ids" (lambda/matching.ml[3630,118294+24]..[3630,118294+28])
                                          pattern (lambda/matching.ml[3630,118294+30]..[3630,118294+33])
                                            Ppat_var "pat" (lambda/matching.ml[3630,118294+30]..[3630,118294+33])
                                          pattern (lambda/matching.ml[3630,118294+35]..[3630,118294+38])
                                            Ppat_var "lam" (lambda/matching.ml[3630,118294+35]..[3630,118294+38])
                                        ]
                                      expression (lambda/matching.ml[3631,118336+4]..[3631,118336+43])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3631,118336+4]..[3631,118336+18])
                                          Pexp_ident "simple_for_let" (lambda/matching.ml[3631,118336+4]..[3631,118336+18])
                                        [
                                          <arg>
                                          Labelled "scopes"
                                            expression (lambda/matching.ml[3631,118336+20]..[3631,118336+26])
                                              Pexp_ident "scopes" (lambda/matching.ml[3631,118336+20]..[3631,118336+26])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3631,118336+27]..[3631,118336+30])
                                              Pexp_ident "loc" (lambda/matching.ml[3631,118336+27]..[3631,118336+30])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3631,118336+31]..[3631,118336+34])
                                              Pexp_ident "lam" (lambda/matching.ml[3631,118336+31]..[3631,118336+34])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3631,118336+35]..[3631,118336+38])
                                              Pexp_ident "pat" (lambda/matching.ml[3631,118336+35]..[3631,118336+38])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3631,118336+39]..[3631,118336+43])
                                              Pexp_ident "code" (lambda/matching.ml[3631,118336+39]..[3631,118336+43])
                                        ]
                              ]
                              expression (lambda/matching.ml[3632,118383+2]..[3632,118383+45])
                                Pexp_apply
                                expression (lambda/matching.ml[3632,118383+2]..[3632,118383+16])
                                  Pexp_ident "List.fold_left" (lambda/matching.ml[3632,118383+2]..[3632,118383+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3632,118383+17]..[3632,118383+28])
                                      Pexp_ident "push_sublet" (lambda/matching.ml[3632,118383+17]..[3632,118383+28])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3632,118383+29]..[3632,118383+33])
                                      Pexp_ident "exit" (lambda/matching.ml[3632,118383+29]..[3632,118383+33])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3632,118383+34]..[3632,118383+45])
                                      Pexp_ident "rev_sublets" (lambda/matching.ml[3632,118383+34]..[3632,118383+45])
                                ]
    ]
  structure_item (lambda/matching.ml[3634,118430+0]..[3659,119378+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3634,118430+4]..[3634,118430+11])
          Ppat_var "for_let" (lambda/matching.ml[3634,118430+4]..[3634,118430+11])
        expression (lambda/matching.ml[3634,118430+12]..[3659,119378+49]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3634,118430+13]..[3634,118430+19])
            Ppat_var "scopes" (lambda/matching.ml[3634,118430+13]..[3634,118430+19])
          expression (lambda/matching.ml[3634,118430+20]..[3659,119378+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3634,118430+20]..[3634,118430+23])
              Ppat_var "loc" (lambda/matching.ml[3634,118430+20]..[3634,118430+23])
            expression (lambda/matching.ml[3634,118430+24]..[3659,119378+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3634,118430+24]..[3634,118430+29])
                Ppat_var "param" (lambda/matching.ml[3634,118430+24]..[3634,118430+29])
              expression (lambda/matching.ml[3634,118430+30]..[3659,119378+49]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3634,118430+30]..[3634,118430+33])
                  Ppat_var "pat" (lambda/matching.ml[3634,118430+30]..[3634,118430+33])
                expression (lambda/matching.ml[3634,118430+34]..[3659,119378+49]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3634,118430+34]..[3634,118430+38])
                    Ppat_var "body" (lambda/matching.ml[3634,118430+34]..[3634,118430+38])
                  expression (lambda/matching.ml[3635,118471+2]..[3659,119378+49])
                    Pexp_match
                    expression (lambda/matching.ml[3635,118471+8]..[3635,118471+20])
                      Pexp_field
                      expression (lambda/matching.ml[3635,118471+8]..[3635,118471+11])
                        Pexp_ident "pat" (lambda/matching.ml[3635,118471+8]..[3635,118471+11])
                      "pat_desc" (lambda/matching.ml[3635,118471+12]..[3635,118471+20])
                    [
                      <case>
                        pattern (lambda/matching.ml[3636,118497+4]..[3636,118497+12])
                          Ppat_construct "Tpat_any" (lambda/matching.ml[3636,118497+4]..[3636,118497+12])
                          None
                        expression (lambda/matching.ml[3639,118628+6]..[3639,118628+29])
                          Pexp_construct "Lsequence" (lambda/matching.ml[3639,118628+6]..[3639,118628+15])
                          Some
                            expression (lambda/matching.ml[3639,118628+16]..[3639,118628+29])
                              Pexp_tuple
                              [
                                expression (lambda/matching.ml[3639,118628+17]..[3639,118628+22])
                                  Pexp_ident "param" (lambda/matching.ml[3639,118628+17]..[3639,118628+22])
                                expression (lambda/matching.ml[3639,118628+24]..[3639,118628+28])
                                  Pexp_ident "body" (lambda/matching.ml[3639,118628+24]..[3639,118628+28])
                              ]
                      <case>
                        pattern (lambda/matching.ml[3640,118658+4]..[3640,118658+20])
                          Ppat_construct "Tpat_var" (lambda/matching.ml[3640,118658+4]..[3640,118658+12])
                          Some
                            []
                            pattern (lambda/matching.ml[3640,118658+13]..[3640,118658+20])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3640,118658+14]..[3640,118658+16])
                                  Ppat_var "id" (lambda/matching.ml[3640,118658+14]..[3640,118658+16])
                                pattern (lambda/matching.ml[3640,118658+18]..[3640,118658+19])
                                  Ppat_any
                              ]
                        expression (lambda/matching.ml[3642,118760+6]..[3643,118821+39])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3642,118760+10]..[3642,118760+11])
                                Ppat_var "k" (lambda/matching.ml[3642,118760+10]..[3642,118760+11])
                              expression (lambda/matching.ml[3642,118760+14]..[3642,118760+57])
                                Pexp_apply
                                expression (lambda/matching.ml[3642,118760+14]..[3642,118760+32])
                                  Pexp_ident "Typeopt.value_kind" (lambda/matching.ml[3642,118760+14]..[3642,118760+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3642,118760+33]..[3642,118760+44])
                                      Pexp_field
                                      expression (lambda/matching.ml[3642,118760+33]..[3642,118760+36])
                                        Pexp_ident "pat" (lambda/matching.ml[3642,118760+33]..[3642,118760+36])
                                      "pat_env" (lambda/matching.ml[3642,118760+37]..[3642,118760+44])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3642,118760+45]..[3642,118760+57])
                                      Pexp_field
                                      expression (lambda/matching.ml[3642,118760+45]..[3642,118760+48])
                                        Pexp_ident "pat" (lambda/matching.ml[3642,118760+45]..[3642,118760+48])
                                      "pat_type" (lambda/matching.ml[3642,118760+49]..[3642,118760+57])
                                ]
                          ]
                          expression (lambda/matching.ml[3643,118821+6]..[3643,118821+39])
                            Pexp_construct "Llet" (lambda/matching.ml[3643,118821+6]..[3643,118821+10])
                            Some
                              expression (lambda/matching.ml[3643,118821+11]..[3643,118821+39])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[3643,118821+12]..[3643,118821+18])
                                    Pexp_construct "Strict" (lambda/matching.ml[3643,118821+12]..[3643,118821+18])
                                    None
                                  expression (lambda/matching.ml[3643,118821+20]..[3643,118821+21])
                                    Pexp_ident "k" (lambda/matching.ml[3643,118821+20]..[3643,118821+21])
                                  expression (lambda/matching.ml[3643,118821+23]..[3643,118821+25])
                                    Pexp_ident "id" (lambda/matching.ml[3643,118821+23]..[3643,118821+25])
                                  expression (lambda/matching.ml[3643,118821+27]..[3643,118821+32])
                                    Pexp_ident "param" (lambda/matching.ml[3643,118821+27]..[3643,118821+32])
                                  expression (lambda/matching.ml[3643,118821+34]..[3643,118821+38])
                                    Pexp_ident "body" (lambda/matching.ml[3643,118821+34]..[3643,118821+38])
                                ]
                      <case>
                        pattern (lambda/matching.ml[3644,118861+4]..[3644,118861+5])
                          Ppat_any
                        expression (lambda/matching.ml[3645,118870+6]..[3659,119378+49])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3645,118870+10]..[3645,118870+13])
                                Ppat_var "opt" (lambda/matching.ml[3645,118870+10]..[3645,118870+13])
                              expression (lambda/matching.ml[3645,118870+16]..[3645,118870+25])
                                Pexp_apply
                                expression (lambda/matching.ml[3645,118870+16]..[3645,118870+19])
                                  Pexp_ident "ref" (lambda/matching.ml[3645,118870+16]..[3645,118870+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3645,118870+20]..[3645,118870+25])
                                      Pexp_construct "false" (lambda/matching.ml[3645,118870+20]..[3645,118870+25])
                                      None
                                ]
                          ]
                          expression (lambda/matching.ml[3646,118899+6]..[3659,119378+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3646,118899+10]..[3646,118899+16])
                                  Ppat_var "nraise" (lambda/matching.ml[3646,118899+10]..[3646,118899+16])
                                expression (lambda/matching.ml[3646,118899+19]..[3646,118899+38])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3646,118899+19]..[3646,118899+35])
                                    Pexp_ident "next_raise_count" (lambda/matching.ml[3646,118899+19]..[3646,118899+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3646,118899+36]..[3646,118899+38])
                                        Pexp_construct "()" (lambda/matching.ml[3646,118899+36]..[3646,118899+38])
                                        None
                                  ]
                            ]
                            expression (lambda/matching.ml[3647,118941+6]..[3659,119378+49])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3647,118941+10]..[3647,118941+19])
                                    Ppat_var "catch_ids" (lambda/matching.ml[3647,118941+10]..[3647,118941+19])
                                  expression (lambda/matching.ml[3647,118941+22]..[3647,118941+47])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3647,118941+22]..[3647,118941+43])
                                      Pexp_ident "pat_bound_idents_full" (lambda/matching.ml[3647,118941+22]..[3647,118941+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3647,118941+44]..[3647,118941+47])
                                          Pexp_ident "pat" (lambda/matching.ml[3647,118941+44]..[3647,118941+47])
                                    ]
                              ]
                              expression (lambda/matching.ml[3648,118992+6]..[3659,119378+49])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3648,118992+10]..[3648,118992+24])
                                      Ppat_var "ids_with_kinds" (lambda/matching.ml[3648,118992+10]..[3648,118992+24])
                                    expression (lambda/matching.ml[3649,119019+8]..[3651,119109+19])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3649,119019+8]..[3649,119019+16])
                                        Pexp_ident "List.map" (lambda/matching.ml[3649,119019+8]..[3649,119019+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3650,119036+10]..[3650,119036+72])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[3650,119036+15]..[3650,119036+27])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/matching.ml[3650,119036+16]..[3650,119036+18])
                                                  Ppat_var "id" (lambda/matching.ml[3650,119036+16]..[3650,119036+18])
                                                pattern (lambda/matching.ml[3650,119036+20]..[3650,119036+21])
                                                  Ppat_any
                                                pattern (lambda/matching.ml[3650,119036+23]..[3650,119036+26])
                                                  Ppat_var "typ" (lambda/matching.ml[3650,119036+23]..[3650,119036+26])
                                              ]
                                            expression (lambda/matching.ml[3650,119036+31]..[3650,119036+71])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[3650,119036+32]..[3650,119036+34])
                                                  Pexp_ident "id" (lambda/matching.ml[3650,119036+32]..[3650,119036+34])
                                                expression (lambda/matching.ml[3650,119036+36]..[3650,119036+70])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3650,119036+36]..[3650,119036+54])
                                                    Pexp_ident "Typeopt.value_kind" (lambda/matching.ml[3650,119036+36]..[3650,119036+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3650,119036+55]..[3650,119036+66])
                                                        Pexp_field
                                                        expression (lambda/matching.ml[3650,119036+55]..[3650,119036+58])
                                                          Pexp_ident "pat" (lambda/matching.ml[3650,119036+55]..[3650,119036+58])
                                                        "pat_env" (lambda/matching.ml[3650,119036+59]..[3650,119036+66])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3650,119036+67]..[3650,119036+70])
                                                        Pexp_ident "typ" (lambda/matching.ml[3650,119036+67]..[3650,119036+70])
                                                  ]
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3651,119109+10]..[3651,119109+19])
                                            Pexp_ident "catch_ids" (lambda/matching.ml[3651,119109+10]..[3651,119109+19])
                                      ]
                                ]
                                expression (lambda/matching.ml[3653,119138+6]..[3659,119378+49])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/matching.ml[3653,119138+10]..[3653,119138+13])
                                        Ppat_var "ids" (lambda/matching.ml[3653,119138+10]..[3653,119138+13])
                                      expression (lambda/matching.ml[3653,119138+16]..[3653,119138+57])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3653,119138+16]..[3653,119138+24])
                                          Pexp_ident "List.map" (lambda/matching.ml[3653,119138+16]..[3653,119138+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3653,119138+25]..[3653,119138+47])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/matching.ml[3653,119138+30]..[3653,119138+40])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/matching.ml[3653,119138+31]..[3653,119138+33])
                                                    Ppat_var "id" (lambda/matching.ml[3653,119138+31]..[3653,119138+33])
                                                  pattern (lambda/matching.ml[3653,119138+35]..[3653,119138+36])
                                                    Ppat_any
                                                  pattern (lambda/matching.ml[3653,119138+38]..[3653,119138+39])
                                                    Ppat_any
                                                ]
                                              expression (lambda/matching.ml[3653,119138+44]..[3653,119138+46])
                                                Pexp_ident "id" (lambda/matching.ml[3653,119138+44]..[3653,119138+46])
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3653,119138+48]..[3653,119138+57])
                                              Pexp_ident "catch_ids" (lambda/matching.ml[3653,119138+48]..[3653,119138+57])
                                        ]
                                  ]
                                  expression (lambda/matching.ml[3654,119199+6]..[3659,119378+49])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[3654,119199+10]..[3654,119199+14])
                                          Ppat_var "bind" (lambda/matching.ml[3654,119199+10]..[3654,119199+14])
                                        expression (lambda/matching.ml[3655,119216+8]..[3655,119216+68])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3655,119216+8]..[3655,119216+18])
                                            Pexp_ident "map_return" (lambda/matching.ml[3655,119216+8]..[3655,119216+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3655,119216+19]..[3655,119216+62])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3655,119216+20]..[3655,119216+30])
                                                  Pexp_ident "assign_pat" (lambda/matching.ml[3655,119216+20]..[3655,119216+30])
                                                [
                                                  <arg>
                                                  Labelled "scopes"
                                                    expression (lambda/matching.ml[3655,119216+32]..[3655,119216+38])
                                                      Pexp_ident "scopes" (lambda/matching.ml[3655,119216+32]..[3655,119216+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3655,119216+39]..[3655,119216+42])
                                                      Pexp_ident "opt" (lambda/matching.ml[3655,119216+39]..[3655,119216+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3655,119216+43]..[3655,119216+49])
                                                      Pexp_ident "nraise" (lambda/matching.ml[3655,119216+43]..[3655,119216+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3655,119216+50]..[3655,119216+53])
                                                      Pexp_ident "ids" (lambda/matching.ml[3655,119216+50]..[3655,119216+53])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3655,119216+54]..[3655,119216+57])
                                                      Pexp_ident "loc" (lambda/matching.ml[3655,119216+54]..[3655,119216+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3655,119216+58]..[3655,119216+61])
                                                      Pexp_ident "pat" (lambda/matching.ml[3655,119216+58]..[3655,119216+61])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3655,119216+63]..[3655,119216+68])
                                                Pexp_ident "param" (lambda/matching.ml[3655,119216+63]..[3655,119216+68])
                                          ]
                                    ]
                                    expression (lambda/matching.ml[3656,119288+6]..[3659,119378+49])
                                      Pexp_ifthenelse
                                      expression (lambda/matching.ml[3656,119288+9]..[3656,119288+13])
                                        Pexp_apply
                                        expression (lambda/matching.ml[3656,119288+9]..[3656,119288+10])
                                          Pexp_ident "!" (lambda/matching.ml[3656,119288+9]..[3656,119288+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/matching.ml[3656,119288+10]..[3656,119288+13])
                                              Pexp_ident "opt" (lambda/matching.ml[3656,119288+10]..[3656,119288+13])
                                        ]
                                      expression (lambda/matching.ml[3657,119307+8]..[3657,119307+59])
                                        Pexp_construct "Lstaticcatch" (lambda/matching.ml[3657,119307+8]..[3657,119307+20])
                                        Some
                                          expression (lambda/matching.ml[3657,119307+21]..[3657,119307+59])
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[3657,119307+22]..[3657,119307+26])
                                                Pexp_ident "bind" (lambda/matching.ml[3657,119307+22]..[3657,119307+26])
                                              expression (lambda/matching.ml[3657,119307+28]..[3657,119307+52])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3657,119307+29]..[3657,119307+35])
                                                    Pexp_ident "nraise" (lambda/matching.ml[3657,119307+29]..[3657,119307+35])
                                                  expression (lambda/matching.ml[3657,119307+37]..[3657,119307+51])
                                                    Pexp_ident "ids_with_kinds" (lambda/matching.ml[3657,119307+37]..[3657,119307+51])
                                                ]
                                              expression (lambda/matching.ml[3657,119307+54]..[3657,119307+58])
                                                Pexp_ident "body" (lambda/matching.ml[3657,119307+54]..[3657,119307+58])
                                            ]
                                      Some
                                        expression (lambda/matching.ml[3659,119378+8]..[3659,119378+49])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3659,119378+8]..[3659,119378+22])
                                            Pexp_ident "simple_for_let" (lambda/matching.ml[3659,119378+8]..[3659,119378+22])
                                          [
                                            <arg>
                                            Labelled "scopes"
                                              expression (lambda/matching.ml[3659,119378+24]..[3659,119378+30])
                                                Pexp_ident "scopes" (lambda/matching.ml[3659,119378+24]..[3659,119378+30])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3659,119378+31]..[3659,119378+34])
                                                Pexp_ident "loc" (lambda/matching.ml[3659,119378+31]..[3659,119378+34])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3659,119378+35]..[3659,119378+40])
                                                Pexp_ident "param" (lambda/matching.ml[3659,119378+35]..[3659,119378+40])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3659,119378+41]..[3659,119378+44])
                                                Pexp_ident "pat" (lambda/matching.ml[3659,119378+41]..[3659,119378+44])
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3659,119378+45]..[3659,119378+49])
                                                Pexp_ident "body" (lambda/matching.ml[3659,119378+45]..[3659,119378+49])
                                          ]
                    ]
    ]
  structure_item (lambda/matching.ml[3664,119525+0]..[3673,119941+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3664,119525+4]..[3664,119525+23])
          Ppat_var "for_tupled_function" (lambda/matching.ml[3664,119525+4]..[3664,119525+23])
        expression (lambda/matching.ml[3664,119525+24]..[3673,119941+3]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3664,119525+25]..[3664,119525+31])
            Ppat_var "scopes" (lambda/matching.ml[3664,119525+25]..[3664,119525+31])
          expression (lambda/matching.ml[3664,119525+32]..[3673,119941+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3664,119525+32]..[3664,119525+35])
              Ppat_var "loc" (lambda/matching.ml[3664,119525+32]..[3664,119525+35])
            expression (lambda/matching.ml[3664,119525+36]..[3673,119941+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3664,119525+36]..[3664,119525+42])
                Ppat_var "paraml" (lambda/matching.ml[3664,119525+36]..[3664,119525+42])
              expression (lambda/matching.ml[3664,119525+43]..[3673,119941+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3664,119525+43]..[3664,119525+56])
                  Ppat_var "pats_act_list" (lambda/matching.ml[3664,119525+43]..[3664,119525+56])
                expression (lambda/matching.ml[3664,119525+57]..[3673,119941+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3664,119525+57]..[3664,119525+64])
                    Ppat_var "partial" (lambda/matching.ml[3664,119525+57]..[3664,119525+64])
                  expression (lambda/matching.ml[3665,119592+2]..[3673,119941+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[3665,119592+6]..[3665,119592+13])
                          Ppat_var "partial" (lambda/matching.ml[3665,119592+6]..[3665,119592+13])
                        expression (lambda/matching.ml[3665,119592+16]..[3665,119592+56])
                          Pexp_apply
                          expression (lambda/matching.ml[3665,119592+16]..[3665,119592+34])
                            Pexp_ident "check_partial_list" (lambda/matching.ml[3665,119592+16]..[3665,119592+34])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3665,119592+35]..[3665,119592+48])
                                Pexp_ident "pats_act_list" (lambda/matching.ml[3665,119592+35]..[3665,119592+48])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3665,119592+49]..[3665,119592+56])
                                Pexp_ident "partial" (lambda/matching.ml[3665,119592+49]..[3665,119592+56])
                          ]
                    ]
                    expression (lambda/matching.ml[3666,119652+2]..[3673,119941+3])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[3666,119652+6]..[3666,119652+10])
                            Ppat_var "args" (lambda/matching.ml[3666,119652+6]..[3666,119652+10])
                          expression (lambda/matching.ml[3666,119652+13]..[3666,119652+58])
                            Pexp_apply
                            expression (lambda/matching.ml[3666,119652+13]..[3666,119652+21])
                              Pexp_ident "List.map" (lambda/matching.ml[3666,119652+13]..[3666,119652+21])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3666,119652+22]..[3666,119652+51])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3666,119652+27]..[3666,119652+29])
                                    Ppat_var "id" (lambda/matching.ml[3666,119652+27]..[3666,119652+29])
                                  expression (lambda/matching.ml[3666,119652+33]..[3666,119652+50])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3666,119652+34]..[3666,119652+41])
                                        Pexp_construct "Lvar" (lambda/matching.ml[3666,119652+34]..[3666,119652+38])
                                        Some
                                          expression (lambda/matching.ml[3666,119652+39]..[3666,119652+41])
                                            Pexp_ident "id" (lambda/matching.ml[3666,119652+39]..[3666,119652+41])
                                      expression (lambda/matching.ml[3666,119652+43]..[3666,119652+49])
                                        Pexp_construct "Strict" (lambda/matching.ml[3666,119652+43]..[3666,119652+49])
                                        None
                                    ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3666,119652+52]..[3666,119652+58])
                                  Pexp_ident "paraml" (lambda/matching.ml[3666,119652+52]..[3666,119652+58])
                            ]
                      ]
                      expression (lambda/matching.ml[3667,119714+2]..[3673,119941+3])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3667,119714+6]..[3667,119714+13])
                              Ppat_var "handler" (lambda/matching.ml[3667,119714+6]..[3667,119714+13])
                            expression (lambda/matching.ml[3668,119730+4]..[3669,119791+32])
                              Pexp_apply
                              expression (lambda/matching.ml[3668,119730+4]..[3668,119730+20])
                                Pexp_ident "toplevel_handler" (lambda/matching.ml[3668,119730+4]..[3668,119730+20])
                              [
                                <arg>
                                Labelled "scopes"
                                  expression (lambda/matching.ml[3668,119730+22]..[3668,119730+28])
                                    Pexp_ident "scopes" (lambda/matching.ml[3668,119730+22]..[3668,119730+28])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3668,119730+29]..[3668,119730+32])
                                    Pexp_ident "loc" (lambda/matching.ml[3668,119730+29]..[3668,119730+32])
                                <arg>
                                Labelled "failer"
                                  expression (lambda/matching.ml[3668,119730+41]..[3668,119730+60])
                                    Pexp_construct "Raise_match_failure" (lambda/matching.ml[3668,119730+41]..[3668,119730+60])
                                    None
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3669,119791+6]..[3669,119791+13])
                                    Pexp_ident "partial" (lambda/matching.ml[3669,119791+6]..[3669,119791+13])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3669,119791+14]..[3669,119791+18])
                                    Pexp_ident "args" (lambda/matching.ml[3669,119791+14]..[3669,119791+18])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3669,119791+19]..[3669,119791+32])
                                    Pexp_ident "pats_act_list" (lambda/matching.ml[3669,119791+19]..[3669,119791+32])
                              ]
                        ]
                        expression (lambda/matching.ml[3670,119827+2]..[3673,119941+3])
                          Pexp_apply
                          expression (lambda/matching.ml[3670,119827+2]..[3670,119827+9])
                            Pexp_ident "handler" (lambda/matching.ml[3670,119827+2]..[3670,119827+9])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3670,119827+10]..[3673,119941+3])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3670,119827+15]..[3670,119827+22])
                                  Ppat_var "partial" (lambda/matching.ml[3670,119827+15]..[3670,119827+22])
                                expression (lambda/matching.ml[3670,119827+23]..[3672,119895+45]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3670,119827+23]..[3670,119827+25])
                                    Ppat_var "pm" (lambda/matching.ml[3670,119827+23]..[3670,119827+25])
                                  expression (lambda/matching.ml[3671,119856+4]..[3672,119895+45])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3671,119856+4]..[3671,119856+17])
                                      Pexp_ident "compile_match" (lambda/matching.ml[3671,119856+4]..[3671,119856+17])
                                    [
                                      <arg>
                                      Labelled "scopes"
                                        expression (lambda/matching.ml[3671,119856+19]..[3671,119856+25])
                                          Pexp_ident "scopes" (lambda/matching.ml[3671,119856+19]..[3671,119856+25])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3671,119856+26]..[3671,119856+30])
                                          Pexp_construct "None" (lambda/matching.ml[3671,119856+26]..[3671,119856+30])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3671,119856+31]..[3671,119856+38])
                                          Pexp_ident "partial" (lambda/matching.ml[3671,119856+31]..[3671,119856+38])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3672,119895+6]..[3672,119895+42])
                                          Pexp_apply
                                          expression (lambda/matching.ml[3672,119895+7]..[3672,119895+20])
                                            Pexp_ident "Context.start" (lambda/matching.ml[3672,119895+7]..[3672,119895+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/matching.ml[3672,119895+21]..[3672,119895+41])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3672,119895+22]..[3672,119895+33])
                                                  Pexp_ident "List.length" (lambda/matching.ml[3672,119895+22]..[3672,119895+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3672,119895+34]..[3672,119895+40])
                                                      Pexp_ident "paraml" (lambda/matching.ml[3672,119895+34]..[3672,119895+40])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3672,119895+43]..[3672,119895+45])
                                          Pexp_ident "pm" (lambda/matching.ml[3672,119895+43]..[3672,119895+45])
                                    ]
                          ]
    ]
  structure_item (lambda/matching.ml[3675,119946+0]..[3679,120064+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3675,119946+4]..[3675,119946+19])
          Ppat_var "flatten_pattern" (lambda/matching.ml[3675,119946+4]..[3675,119946+19])
        expression (lambda/matching.ml[3675,119946+20]..[3679,120064+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3675,119946+20]..[3675,119946+24])
            Ppat_var "size" (lambda/matching.ml[3675,119946+20]..[3675,119946+24])
          expression (lambda/matching.ml[3675,119946+25]..[3679,120064+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3675,119946+25]..[3675,119946+26])
              Ppat_var "p" (lambda/matching.ml[3675,119946+25]..[3675,119946+26])
            expression (lambda/matching.ml[3676,119975+2]..[3679,120064+29])
              Pexp_match
              expression (lambda/matching.ml[3676,119975+8]..[3676,119975+18])
                Pexp_field
                expression (lambda/matching.ml[3676,119975+8]..[3676,119975+9])
                  Pexp_ident "p" (lambda/matching.ml[3676,119975+8]..[3676,119975+9])
                "pat_desc" (lambda/matching.ml[3676,119975+10]..[3676,119975+18])
              [
                <case>
                  pattern (lambda/matching.ml[3677,119999+4]..[3677,119999+19])
                    Ppat_construct "Tpat_tuple" (lambda/matching.ml[3677,119999+4]..[3677,119999+14])
                    Some
                      []
                      pattern (lambda/matching.ml[3677,119999+15]..[3677,119999+19])
                        Ppat_var "args" (lambda/matching.ml[3677,119999+15]..[3677,119999+19])
                  expression (lambda/matching.ml[3677,119999+23]..[3677,119999+27])
                    Pexp_ident "args" (lambda/matching.ml[3677,119999+23]..[3677,119999+27])
                <case>
                  pattern (lambda/matching.ml[3678,120027+4]..[3678,120027+12])
                    Ppat_construct "Tpat_any" (lambda/matching.ml[3678,120027+4]..[3678,120027+12])
                    None
                  expression (lambda/matching.ml[3678,120027+16]..[3678,120027+36])
                    Pexp_apply
                    expression (lambda/matching.ml[3678,120027+16]..[3678,120027+31])
                      Pexp_ident "Patterns.omegas" (lambda/matching.ml[3678,120027+16]..[3678,120027+31])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3678,120027+32]..[3678,120027+36])
                          Pexp_ident "size" (lambda/matching.ml[3678,120027+32]..[3678,120027+36])
                    ]
                <case>
                  pattern (lambda/matching.ml[3679,120064+4]..[3679,120064+5])
                    Ppat_any
                  expression (lambda/matching.ml[3679,120064+9]..[3679,120064+29])
                    Pexp_apply
                    expression (lambda/matching.ml[3679,120064+9]..[3679,120064+14])
                      Pexp_ident "raise" (lambda/matching.ml[3679,120064+9]..[3679,120064+14])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3679,120064+15]..[3679,120064+29])
                          Pexp_construct "Cannot_flatten" (lambda/matching.ml[3679,120064+15]..[3679,120064+29])
                          None
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[3681,120095+0]..[3700,120718+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3681,120095+4]..[3681,120095+26])
          Ppat_var "flatten_simple_pattern" (lambda/matching.ml[3681,120095+4]..[3681,120095+26])
        expression (lambda/matching.ml[3681,120095+27]..[3700,120718+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3681,120095+27]..[3681,120095+31])
            Ppat_var "size" (lambda/matching.ml[3681,120095+27]..[3681,120095+31])
          expression (lambda/matching.ml[3681,120095+32]..[3700,120718+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3681,120095+32]..[3681,120095+52])
              Ppat_constraint
              pattern (lambda/matching.ml[3681,120095+33]..[3681,120095+34])
                Ppat_var "p" (lambda/matching.ml[3681,120095+33]..[3681,120095+34])
              core_type (lambda/matching.ml[3681,120095+37]..[3681,120095+51])
                Ptyp_constr "Simple.pattern" (lambda/matching.ml[3681,120095+37]..[3681,120095+51])
                []
            expression (lambda/matching.ml[3682,120150+2]..[3700,120718+21])
              Pexp_match
              expression (lambda/matching.ml[3682,120150+8]..[3682,120150+18])
                Pexp_field
                expression (lambda/matching.ml[3682,120150+8]..[3682,120150+9])
                  Pexp_ident "p" (lambda/matching.ml[3682,120150+8]..[3682,120150+9])
                "pat_desc" (lambda/matching.ml[3682,120150+10]..[3682,120150+18])
              [
                <case>
                  pattern (lambda/matching.ml[3683,120174+4]..[3683,120174+15])
                    Ppat_variant "Tuple"
                    Some
                      pattern (lambda/matching.ml[3683,120174+11]..[3683,120174+15])
                        Ppat_var "args" (lambda/matching.ml[3683,120174+11]..[3683,120174+15])
                  expression (lambda/matching.ml[3683,120174+19]..[3683,120174+23])
                    Pexp_ident "args" (lambda/matching.ml[3683,120174+19]..[3683,120174+23])
                <case>
                  pattern (lambda/matching.ml[3684,120198+4]..[3684,120198+8])
                    Ppat_variant "Any"
                    None
                  expression (lambda/matching.ml[3684,120198+12]..[3684,120198+32])
                    Pexp_apply
                    expression (lambda/matching.ml[3684,120198+12]..[3684,120198+27])
                      Pexp_ident "Patterns.omegas" (lambda/matching.ml[3684,120198+12]..[3684,120198+27])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3684,120198+28]..[3684,120198+32])
                          Pexp_ident "size" (lambda/matching.ml[3684,120198+28]..[3684,120198+32])
                    ]
                <case>
                  pattern (lambda/matching.ml[3685,120231+4]..[3690,120302+15])
                    Ppat_or
                    pattern (lambda/matching.ml[3685,120231+4]..[3689,120285+16])
                      Ppat_or
                      pattern (lambda/matching.ml[3685,120231+4]..[3688,120273+11])
                        Ppat_or
                        pattern (lambda/matching.ml[3685,120231+4]..[3687,120259+13])
                          Ppat_or
                          pattern (lambda/matching.ml[3685,120231+4]..[3686,120244+14])
                            Ppat_or
                            pattern (lambda/matching.ml[3685,120231+4]..[3685,120231+12])
                              Ppat_variant "Array"
                              Some
                                pattern (lambda/matching.ml[3685,120231+11]..[3685,120231+12])
                                  Ppat_any
                            pattern (lambda/matching.ml[3686,120244+4]..[3686,120244+14])
                              Ppat_variant "Variant"
                              Some
                                pattern (lambda/matching.ml[3686,120244+13]..[3686,120244+14])
                                  Ppat_any
                          pattern (lambda/matching.ml[3687,120259+4]..[3687,120259+13])
                            Ppat_variant "Record"
                            Some
                              pattern (lambda/matching.ml[3687,120259+12]..[3687,120259+13])
                                Ppat_any
                        pattern (lambda/matching.ml[3688,120273+4]..[3688,120273+11])
                          Ppat_variant "Lazy"
                          Some
                            pattern (lambda/matching.ml[3688,120273+10]..[3688,120273+11])
                              Ppat_any
                      pattern (lambda/matching.ml[3689,120285+4]..[3689,120285+16])
                        Ppat_variant "Construct"
                        Some
                          pattern (lambda/matching.ml[3689,120285+15]..[3689,120285+16])
                            Ppat_any
                    pattern (lambda/matching.ml[3690,120302+4]..[3690,120302+15])
                      Ppat_variant "Constant"
                      Some
                        pattern (lambda/matching.ml[3690,120302+14]..[3690,120302+15])
                          Ppat_any
                  expression (lambda/matching.ml[3695,120534+6]..[3700,120718+21])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[3695,120534+10]..[3695,120534+13])
                          Ppat_var "msg" (lambda/matching.ml[3695,120534+10]..[3695,120534+13])
                        expression (lambda/matching.ml[3696,120550+8]..[3698,120671+37])
                          Pexp_sequence
                          expression (lambda/matching.ml[3696,120550+8]..[3697,120594+75])
                            Pexp_apply
                            expression (lambda/matching.ml[3696,120550+8]..[3696,120550+22])
                              Pexp_ident "Format.fprintf" (lambda/matching.ml[3696,120550+8]..[3696,120550+22])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3696,120550+23]..[3696,120550+43])
                                  Pexp_ident "Format.str_formatter" (lambda/matching.ml[3696,120550+23]..[3696,120550+43])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3697,120594+10]..[3697,120594+46])
                                  Pexp_constant PConst_string("Matching.flatten_pattern: got '%a'",(lambda/matching.ml[3697,120594+11]..[3697,120594+45]),None)
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3697,120594+47]..[3697,120594+57])
                                  Pexp_ident "top_pretty" (lambda/matching.ml[3697,120594+47]..[3697,120594+57])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3697,120594+58]..[3697,120594+75])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3697,120594+59]..[3697,120594+72])
                                    Pexp_ident "General.erase" (lambda/matching.ml[3697,120594+59]..[3697,120594+72])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3697,120594+73]..[3697,120594+74])
                                        Pexp_ident "p" (lambda/matching.ml[3697,120594+73]..[3697,120594+74])
                                  ]
                            ]
                          expression (lambda/matching.ml[3698,120671+8]..[3698,120671+37])
                            Pexp_apply
                            expression (lambda/matching.ml[3698,120671+8]..[3698,120671+34])
                              Pexp_ident "Format.flush_str_formatter" (lambda/matching.ml[3698,120671+8]..[3698,120671+34])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3698,120671+35]..[3698,120671+37])
                                  Pexp_construct "()" (lambda/matching.ml[3698,120671+35]..[3698,120671+37])
                                  None
                            ]
                    ]
                    expression (lambda/matching.ml[3700,120718+6]..[3700,120718+21])
                      Pexp_apply
                      expression (lambda/matching.ml[3700,120718+6]..[3700,120718+17])
                        Pexp_ident "fatal_error" (lambda/matching.ml[3700,120718+6]..[3700,120718+17])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3700,120718+18]..[3700,120718+21])
                            Pexp_ident "msg" (lambda/matching.ml[3700,120718+18]..[3700,120718+21])
                      ]
              ]
    ]
  structure_item (lambda/matching.ml[3702,120741+0]..[3711,121013+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3702,120741+4]..[3702,120741+17])
          Ppat_var "flatten_cases" (lambda/matching.ml[3702,120741+4]..[3702,120741+17])
        expression (lambda/matching.ml[3702,120741+18]..[3711,121013+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3702,120741+18]..[3702,120741+22])
            Ppat_var "size" (lambda/matching.ml[3702,120741+18]..[3702,120741+22])
          expression (lambda/matching.ml[3702,120741+23]..[3711,121013+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3702,120741+23]..[3702,120741+28])
              Ppat_var "cases" (lambda/matching.ml[3702,120741+23]..[3702,120741+28])
            expression (lambda/matching.ml[3703,120772+2]..[3711,121013+9])
              Pexp_apply
              expression (lambda/matching.ml[3703,120772+2]..[3703,120772+10])
                Pexp_ident "List.map" (lambda/matching.ml[3703,120772+2]..[3703,120772+10])
              [
                <arg>
                Nolabel
                  expression (lambda/matching.ml[3704,120783+4]..[3710,120959+53])
                    Pexp_function
                    [
                      <case>
                        pattern (lambda/matching.ml[3705,120797+8]..[3705,120797+23])
                          Ppat_tuple
                          [
                            pattern (lambda/matching.ml[3705,120797+8]..[3705,120797+15])
                              Ppat_tuple
                              [
                                pattern (lambda/matching.ml[3705,120797+9]..[3705,120797+10])
                                  Ppat_var "p" (lambda/matching.ml[3705,120797+9]..[3705,120797+10])
                                pattern (lambda/matching.ml[3705,120797+12]..[3705,120797+14])
                                  Ppat_construct "[]" (lambda/matching.ml[3705,120797+12]..[3705,120797+14])
                                  None
                              ]
                            pattern (lambda/matching.ml[3705,120797+17]..[3705,120797+23])
                              Ppat_var "action" (lambda/matching.ml[3705,120797+17]..[3705,120797+23])
                          ]
                        expression (lambda/matching.ml[3705,120797+27]..[3709,120949+9])
                          Pexp_match
                          expression (lambda/matching.ml[3706,120826+16]..[3706,120826+45])
                            Pexp_apply
                            expression (lambda/matching.ml[3706,120826+16]..[3706,120826+38])
                              Pexp_ident "flatten_simple_pattern" (lambda/matching.ml[3706,120826+16]..[3706,120826+38])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3706,120826+39]..[3706,120826+43])
                                  Pexp_ident "size" (lambda/matching.ml[3706,120826+39]..[3706,120826+43])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3706,120826+44]..[3706,120826+45])
                                  Pexp_ident "p" (lambda/matching.ml[3706,120826+44]..[3706,120826+45])
                            ]
                          [
                            <case>
                              pattern (lambda/matching.ml[3707,120877+12]..[3707,120877+19])
                                Ppat_construct "::" (lambda/matching.ml[3707,120877+14]..[3707,120877+16])
                                Some
                                  []
                                  pattern (lambda/matching.ml[3707,120877+12]..[3707,120877+19]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3707,120877+12]..[3707,120877+13])
                                        Ppat_var "p" (lambda/matching.ml[3707,120877+12]..[3707,120877+13])
                                      pattern (lambda/matching.ml[3707,120877+17]..[3707,120877+19])
                                        Ppat_var "ps" (lambda/matching.ml[3707,120877+17]..[3707,120877+19])
                                    ]
                              expression (lambda/matching.ml[3707,120877+23]..[3707,120877+40])
                                Pexp_tuple
                                [
                                  expression (lambda/matching.ml[3707,120877+24]..[3707,120877+31])
                                    Pexp_tuple
                                    [
                                      expression (lambda/matching.ml[3707,120877+25]..[3707,120877+26])
                                        Pexp_ident "p" (lambda/matching.ml[3707,120877+25]..[3707,120877+26])
                                      expression (lambda/matching.ml[3707,120877+28]..[3707,120877+30])
                                        Pexp_ident "ps" (lambda/matching.ml[3707,120877+28]..[3707,120877+30])
                                    ]
                                  expression (lambda/matching.ml[3707,120877+33]..[3707,120877+39])
                                    Pexp_ident "action" (lambda/matching.ml[3707,120877+33]..[3707,120877+39])
                                ]
                            <case>
                              pattern (lambda/matching.ml[3708,120918+12]..[3708,120918+14])
                                Ppat_construct "[]" (lambda/matching.ml[3708,120918+12]..[3708,120918+14])
                                None
                              expression (lambda/matching.ml[3708,120918+18]..[3708,120918+30])
                                Pexp_assert
                                expression (lambda/matching.ml[3708,120918+25]..[3708,120918+30])
                                  Pexp_construct "false" (lambda/matching.ml[3708,120918+25]..[3708,120918+30])
                                  None
                          ]
                      <case>
                        pattern (lambda/matching.ml[3710,120959+8]..[3710,120959+9])
                          Ppat_any
                        expression (lambda/matching.ml[3710,120959+13]..[3710,120959+52])
                          Pexp_apply
                          expression (lambda/matching.ml[3710,120959+13]..[3710,120959+24])
                            Pexp_ident "fatal_error" (lambda/matching.ml[3710,120959+13]..[3710,120959+24])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3710,120959+25]..[3710,120959+52])
                                Pexp_constant PConst_string("Matching.flatten_hc_cases",(lambda/matching.ml[3710,120959+26]..[3710,120959+51]),None)
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lambda/matching.ml[3711,121013+4]..[3711,121013+9])
                    Pexp_ident "cases" (lambda/matching.ml[3711,121013+4]..[3711,121013+9])
              ]
    ]
  structure_item (lambda/matching.ml[3713,121024+0]..[3717,121163+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3713,121024+4]..[3713,121024+14])
          Ppat_var "flatten_pm" (lambda/matching.ml[3713,121024+4]..[3713,121024+14])
        expression (lambda/matching.ml[3713,121024+15]..[3717,121163+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3713,121024+15]..[3713,121024+19])
            Ppat_var "size" (lambda/matching.ml[3713,121024+15]..[3713,121024+19])
          expression (lambda/matching.ml[3713,121024+20]..[3717,121163+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3713,121024+20]..[3713,121024+24])
              Ppat_var "args" (lambda/matching.ml[3713,121024+20]..[3713,121024+24])
            expression (lambda/matching.ml[3713,121024+25]..[3717,121163+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3713,121024+25]..[3713,121024+27])
                Ppat_var "pm" (lambda/matching.ml[3713,121024+25]..[3713,121024+27])
              expression (lambda/matching.ml[3714,121054+2]..[3717,121163+3])
                Pexp_record
                [
                  "args" (lambda/matching.ml[3714,121054+4]..[3714,121054+8]) ghost
                    expression (lambda/matching.ml[3714,121054+4]..[3714,121054+8])
                      Pexp_ident "args" (lambda/matching.ml[3714,121054+4]..[3714,121054+8])
                  "cases" (lambda/matching.ml[3715,121064+4]..[3715,121064+9])
                    expression (lambda/matching.ml[3715,121064+12]..[3715,121064+39])
                      Pexp_apply
                      expression (lambda/matching.ml[3715,121064+12]..[3715,121064+25])
                        Pexp_ident "flatten_cases" (lambda/matching.ml[3715,121064+12]..[3715,121064+25])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3715,121064+26]..[3715,121064+30])
                            Pexp_ident "size" (lambda/matching.ml[3715,121064+26]..[3715,121064+30])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3715,121064+31]..[3715,121064+39])
                            Pexp_field
                            expression (lambda/matching.ml[3715,121064+31]..[3715,121064+33])
                              Pexp_ident "pm" (lambda/matching.ml[3715,121064+31]..[3715,121064+33])
                            "cases" (lambda/matching.ml[3715,121064+34]..[3715,121064+39])
                      ]
                  "default" (lambda/matching.ml[3716,121105+4]..[3716,121105+11])
                    expression (lambda/matching.ml[3716,121105+14]..[3716,121105+57])
                      Pexp_apply
                      expression (lambda/matching.ml[3716,121105+14]..[3716,121105+41])
                        Pexp_ident "Default_environment.flatten" (lambda/matching.ml[3716,121105+14]..[3716,121105+41])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3716,121105+42]..[3716,121105+46])
                            Pexp_ident "size" (lambda/matching.ml[3716,121105+42]..[3716,121105+46])
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3716,121105+47]..[3716,121105+57])
                            Pexp_field
                            expression (lambda/matching.ml[3716,121105+47]..[3716,121105+49])
                              Pexp_ident "pm" (lambda/matching.ml[3716,121105+47]..[3716,121105+49])
                            "default" (lambda/matching.ml[3716,121105+50]..[3716,121105+57])
                      ]
                ]
                None
    ]
  structure_item (lambda/matching.ml[3719,121168+0]..[3720,121203+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3719,121168+4]..[3719,121168+19])
          Ppat_var "flatten_handler" (lambda/matching.ml[3719,121168+4]..[3719,121168+19])
        expression (lambda/matching.ml[3719,121168+20]..[3720,121203+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3719,121168+20]..[3719,121168+24])
            Ppat_var "size" (lambda/matching.ml[3719,121168+20]..[3719,121168+24])
          expression (lambda/matching.ml[3719,121168+25]..[3720,121203+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3719,121168+25]..[3719,121168+32])
              Ppat_var "handler" (lambda/matching.ml[3719,121168+25]..[3719,121168+32])
            expression (lambda/matching.ml[3720,121203+2]..[3720,121203+70])
              Pexp_record
              [
                "provenance" (lambda/matching.ml[3720,121203+17]..[3720,121203+27])
                  expression (lambda/matching.ml[3720,121203+30]..[3720,121203+68])
                    Pexp_apply
                    expression (lambda/matching.ml[3720,121203+30]..[3720,121203+44])
                      Pexp_ident "flatten_matrix" (lambda/matching.ml[3720,121203+30]..[3720,121203+44])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3720,121203+45]..[3720,121203+49])
                          Pexp_ident "size" (lambda/matching.ml[3720,121203+45]..[3720,121203+49])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3720,121203+50]..[3720,121203+68])
                          Pexp_field
                          expression (lambda/matching.ml[3720,121203+50]..[3720,121203+57])
                            Pexp_ident "handler" (lambda/matching.ml[3720,121203+50]..[3720,121203+57])
                          "provenance" (lambda/matching.ml[3720,121203+58]..[3720,121203+68])
                    ]
              ]
              Some
                expression (lambda/matching.ml[3720,121203+4]..[3720,121203+11])
                  Pexp_ident "handler" (lambda/matching.ml[3720,121203+4]..[3720,121203+11])
    ]
  structure_item (lambda/matching.ml[3722,121275+0]..[3724,121339+58])
    Pstr_type Rec
    [
      type_declaration "pm_flattened" (lambda/matching.ml[3722,121275+5]..[3722,121275+17]) (lambda/matching.ml[3722,121275+0]..[3724,121339+58])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/matching.ml[3723,121295+2]..[3723,121295+43])
                "FPmOr" (lambda/matching.ml[3723,121295+4]..[3723,121295+9])
                [
                  core_type (lambda/matching.ml[3723,121295+13]..[3723,121295+43])
                    Ptyp_constr "pm_or_compiled" (lambda/matching.ml[3723,121295+29]..[3723,121295+43])
                    [
                      core_type (lambda/matching.ml[3723,121295+14]..[3723,121295+21])
                        Ptyp_constr "pattern" (lambda/matching.ml[3723,121295+14]..[3723,121295+21])
                        []
                      core_type (lambda/matching.ml[3723,121295+23]..[3723,121295+27])
                        Ptyp_constr "unit" (lambda/matching.ml[3723,121295+23]..[3723,121295+27])
                        []
                    ]
                ]
                None
              (lambda/matching.ml[3724,121339+2]..[3724,121339+58])
                "FPm" (lambda/matching.ml[3724,121339+4]..[3724,121339+7])
                [
                  core_type (lambda/matching.ml[3724,121339+11]..[3724,121339+58])
                    Ptyp_constr "pattern_matching" (lambda/matching.ml[3724,121339+42]..[3724,121339+58])
                    [
                      core_type (lambda/matching.ml[3724,121339+11]..[3724,121339+41])
                        Ptyp_constr "clause" (lambda/matching.ml[3724,121339+35]..[3724,121339+41])
                        [
                          core_type (lambda/matching.ml[3724,121339+11]..[3724,121339+34])
                            Ptyp_constr "Non_empty_row.t" (lambda/matching.ml[3724,121339+19]..[3724,121339+34])
                            [
                              core_type (lambda/matching.ml[3724,121339+11]..[3724,121339+18])
                                Ptyp_constr "pattern" (lambda/matching.ml[3724,121339+11]..[3724,121339+18])
                                []
                            ]
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/matching.ml[3726,121399+0]..[3735,121700+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3726,121399+4]..[3726,121399+23])
          Ppat_var "flatten_precompiled" (lambda/matching.ml[3726,121399+4]..[3726,121399+23])
        expression (lambda/matching.ml[3726,121399+24]..[3735,121700+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3726,121399+24]..[3726,121399+28])
            Ppat_var "size" (lambda/matching.ml[3726,121399+24]..[3726,121399+28])
          expression (lambda/matching.ml[3726,121399+29]..[3735,121700+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3726,121399+29]..[3726,121399+33])
              Ppat_var "args" (lambda/matching.ml[3726,121399+29]..[3726,121399+33])
            expression (lambda/matching.ml[3726,121399+34]..[3735,121700+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3726,121399+34]..[3726,121399+37])
                Ppat_var "pmh" (lambda/matching.ml[3726,121399+34]..[3726,121399+37])
              expression (lambda/matching.ml[3727,121439+2]..[3735,121700+27])
                Pexp_match
                expression (lambda/matching.ml[3727,121439+8]..[3727,121439+11])
                  Pexp_ident "pmh" (lambda/matching.ml[3727,121439+8]..[3727,121439+11])
                [
                  <case>
                    pattern (lambda/matching.ml[3728,121456+4]..[3728,121456+9])
                      Ppat_construct "Pm" (lambda/matching.ml[3728,121456+4]..[3728,121456+6])
                      Some
                        []
                        pattern (lambda/matching.ml[3728,121456+7]..[3728,121456+9])
                          Ppat_var "pm" (lambda/matching.ml[3728,121456+7]..[3728,121456+9])
                    expression (lambda/matching.ml[3728,121456+13]..[3728,121456+42])
                      Pexp_construct "FPm" (lambda/matching.ml[3728,121456+13]..[3728,121456+16])
                      Some
                        expression (lambda/matching.ml[3728,121456+17]..[3728,121456+42])
                          Pexp_apply
                          expression (lambda/matching.ml[3728,121456+18]..[3728,121456+28])
                            Pexp_ident "flatten_pm" (lambda/matching.ml[3728,121456+18]..[3728,121456+28])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3728,121456+29]..[3728,121456+33])
                                Pexp_ident "size" (lambda/matching.ml[3728,121456+29]..[3728,121456+33])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3728,121456+34]..[3728,121456+38])
                                Pexp_ident "args" (lambda/matching.ml[3728,121456+34]..[3728,121456+38])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3728,121456+39]..[3728,121456+41])
                                Pexp_ident "pm" (lambda/matching.ml[3728,121456+39]..[3728,121456+41])
                          ]
                  <case>
                    pattern (lambda/matching.ml[3729,121499+4]..[3729,121499+51])
                      Ppat_construct "PmOr" (lambda/matching.ml[3729,121499+4]..[3729,121499+8])
                      Some
                        []
                        pattern (lambda/matching.ml[3729,121499+9]..[3729,121499+51])
                          Ppat_record Closed
                          [
                            "body" (lambda/matching.ml[3729,121499+11]..[3729,121499+15])
                              pattern (lambda/matching.ml[3729,121499+18]..[3729,121499+19])
                                Ppat_var "b" (lambda/matching.ml[3729,121499+18]..[3729,121499+19])
                            "handlers" (lambda/matching.ml[3729,121499+21]..[3729,121499+29])
                              pattern (lambda/matching.ml[3729,121499+32]..[3729,121499+34])
                                Ppat_var "hs" (lambda/matching.ml[3729,121499+32]..[3729,121499+34])
                            "or_matrix" (lambda/matching.ml[3729,121499+36]..[3729,121499+45])
                              pattern (lambda/matching.ml[3729,121499+48]..[3729,121499+49])
                                Ppat_any
                          ]
                    expression (lambda/matching.ml[3730,121554+6]..[3734,121690+9])
                      Pexp_construct "FPmOr" (lambda/matching.ml[3730,121554+6]..[3730,121554+11])
                      Some
                        expression (lambda/matching.ml[3731,121566+8]..[3734,121690+9])
                          Pexp_record
                          [
                            "body" (lambda/matching.ml[3731,121566+10]..[3731,121566+14])
                              expression (lambda/matching.ml[3731,121566+17]..[3731,121566+39])
                                Pexp_apply
                                expression (lambda/matching.ml[3731,121566+17]..[3731,121566+27])
                                  Pexp_ident "flatten_pm" (lambda/matching.ml[3731,121566+17]..[3731,121566+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3731,121566+28]..[3731,121566+32])
                                      Pexp_ident "size" (lambda/matching.ml[3731,121566+28]..[3731,121566+32])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3731,121566+33]..[3731,121566+37])
                                      Pexp_ident "args" (lambda/matching.ml[3731,121566+33]..[3731,121566+37])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3731,121566+38]..[3731,121566+39])
                                      Pexp_ident "b" (lambda/matching.ml[3731,121566+38]..[3731,121566+39])
                                ]
                            "handlers" (lambda/matching.ml[3732,121607+10]..[3732,121607+18])
                              expression (lambda/matching.ml[3732,121607+21]..[3732,121607+55])
                                Pexp_apply
                                expression (lambda/matching.ml[3732,121607+21]..[3732,121607+29])
                                  Pexp_ident "List.map" (lambda/matching.ml[3732,121607+21]..[3732,121607+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3732,121607+30]..[3732,121607+52])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3732,121607+31]..[3732,121607+46])
                                        Pexp_ident "flatten_handler" (lambda/matching.ml[3732,121607+31]..[3732,121607+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3732,121607+47]..[3732,121607+51])
                                            Pexp_ident "size" (lambda/matching.ml[3732,121607+47]..[3732,121607+51])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3732,121607+53]..[3732,121607+55])
                                      Pexp_ident "hs" (lambda/matching.ml[3732,121607+53]..[3732,121607+55])
                                ]
                            "or_matrix" (lambda/matching.ml[3733,121664+10]..[3733,121664+19])
                              expression (lambda/matching.ml[3733,121664+22]..[3733,121664+24])
                                Pexp_construct "()" (lambda/matching.ml[3733,121664+22]..[3733,121664+24])
                                None
                          ]
                          None
                  <case>
                    pattern (lambda/matching.ml[3735,121700+4]..[3735,121700+11])
                      Ppat_construct "PmVar" (lambda/matching.ml[3735,121700+4]..[3735,121700+9])
                      Some
                        []
                        pattern (lambda/matching.ml[3735,121700+10]..[3735,121700+11])
                          Ppat_any
                    expression (lambda/matching.ml[3735,121700+15]..[3735,121700+27])
                      Pexp_assert
                      expression (lambda/matching.ml[3735,121700+22]..[3735,121700+27])
                        Pexp_construct "false" (lambda/matching.ml[3735,121700+22]..[3735,121700+27])
                        None
                ]
    ]
  structure_item (lambda/matching.ml[3742,121863+0]..[3747,122115+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3742,121863+4]..[3742,121863+21])
          Ppat_var "compile_flattened" (lambda/matching.ml[3742,121863+4]..[3742,121863+21])
        expression (lambda/matching.ml[3742,121863+22]..[3747,122115+78]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3742,121863+23]..[3742,121863+29])
            Ppat_var "scopes" (lambda/matching.ml[3742,121863+23]..[3742,121863+29])
          expression (lambda/matching.ml[3742,121863+30]..[3747,122115+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3742,121863+30]..[3742,121863+34])
              Ppat_var "repr" (lambda/matching.ml[3742,121863+30]..[3742,121863+34])
            expression (lambda/matching.ml[3742,121863+35]..[3747,122115+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3742,121863+35]..[3742,121863+42])
                Ppat_var "partial" (lambda/matching.ml[3742,121863+35]..[3742,121863+42])
              expression (lambda/matching.ml[3742,121863+43]..[3747,122115+78]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3742,121863+43]..[3742,121863+46])
                  Ppat_var "ctx" (lambda/matching.ml[3742,121863+43]..[3742,121863+46])
                expression (lambda/matching.ml[3742,121863+47]..[3747,122115+78]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3742,121863+47]..[3742,121863+50])
                    Ppat_var "pmh" (lambda/matching.ml[3742,121863+47]..[3742,121863+50])
                  expression (lambda/matching.ml[3743,121916+2]..[3747,122115+78])
                    Pexp_match
                    expression (lambda/matching.ml[3743,121916+8]..[3743,121916+11])
                      Pexp_ident "pmh" (lambda/matching.ml[3743,121916+8]..[3743,121916+11])
                    [
                      <case>
                        pattern (lambda/matching.ml[3744,121933+4]..[3744,121933+10])
                          Ppat_construct "FPm" (lambda/matching.ml[3744,121933+4]..[3744,121933+7])
                          Some
                            []
                            pattern (lambda/matching.ml[3744,121933+8]..[3744,121933+10])
                              Ppat_var "pm" (lambda/matching.ml[3744,121933+8]..[3744,121933+10])
                        expression (lambda/matching.ml[3744,121933+14]..[3744,121933+64])
                          Pexp_apply
                          expression (lambda/matching.ml[3744,121933+14]..[3744,121933+36])
                            Pexp_ident "compile_match_nonempty" (lambda/matching.ml[3744,121933+14]..[3744,121933+36])
                          [
                            <arg>
                            Labelled "scopes"
                              expression (lambda/matching.ml[3744,121933+38]..[3744,121933+44])
                                Pexp_ident "scopes" (lambda/matching.ml[3744,121933+38]..[3744,121933+44])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3744,121933+45]..[3744,121933+49])
                                Pexp_ident "repr" (lambda/matching.ml[3744,121933+45]..[3744,121933+49])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3744,121933+50]..[3744,121933+57])
                                Pexp_ident "partial" (lambda/matching.ml[3744,121933+50]..[3744,121933+57])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3744,121933+58]..[3744,121933+61])
                                Pexp_ident "ctx" (lambda/matching.ml[3744,121933+58]..[3744,121933+61])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3744,121933+62]..[3744,121933+64])
                                Pexp_ident "pm" (lambda/matching.ml[3744,121933+62]..[3744,121933+64])
                          ]
                      <case>
                        pattern (lambda/matching.ml[3745,121998+4]..[3745,121998+37])
                          Ppat_construct "FPmOr" (lambda/matching.ml[3745,121998+4]..[3745,121998+9])
                          Some
                            []
                            pattern (lambda/matching.ml[3745,121998+10]..[3745,121998+37])
                              Ppat_record Closed
                              [
                                "body" (lambda/matching.ml[3745,121998+12]..[3745,121998+16])
                                  pattern (lambda/matching.ml[3745,121998+19]..[3745,121998+20])
                                    Ppat_var "b" (lambda/matching.ml[3745,121998+19]..[3745,121998+20])
                                "handlers" (lambda/matching.ml[3745,121998+22]..[3745,121998+30])
                                  pattern (lambda/matching.ml[3745,121998+33]..[3745,121998+35])
                                    Ppat_var "hs" (lambda/matching.ml[3745,121998+33]..[3745,121998+35])
                              ]
                        expression (lambda/matching.ml[3746,122039+6]..[3747,122115+78])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/matching.ml[3746,122039+10]..[3746,122039+20])
                                Ppat_tuple
                                [
                                  pattern (lambda/matching.ml[3746,122039+10]..[3746,122039+13])
                                    Ppat_var "lam" (lambda/matching.ml[3746,122039+10]..[3746,122039+13])
                                  pattern (lambda/matching.ml[3746,122039+15]..[3746,122039+20])
                                    Ppat_var "total" (lambda/matching.ml[3746,122039+15]..[3746,122039+20])
                                ]
                              expression (lambda/matching.ml[3746,122039+23]..[3746,122039+72])
                                Pexp_apply
                                expression (lambda/matching.ml[3746,122039+23]..[3746,122039+45])
                                  Pexp_ident "compile_match_nonempty" (lambda/matching.ml[3746,122039+23]..[3746,122039+45])
                                [
                                  <arg>
                                  Labelled "scopes"
                                    expression (lambda/matching.ml[3746,122039+47]..[3746,122039+53])
                                      Pexp_ident "scopes" (lambda/matching.ml[3746,122039+47]..[3746,122039+53])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3746,122039+54]..[3746,122039+58])
                                      Pexp_ident "repr" (lambda/matching.ml[3746,122039+54]..[3746,122039+58])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3746,122039+59]..[3746,122039+66])
                                      Pexp_ident "partial" (lambda/matching.ml[3746,122039+59]..[3746,122039+66])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3746,122039+67]..[3746,122039+70])
                                      Pexp_ident "ctx" (lambda/matching.ml[3746,122039+67]..[3746,122039+70])
                                  <arg>
                                  Nolabel
                                    expression (lambda/matching.ml[3746,122039+71]..[3746,122039+72])
                                      Pexp_ident "b" (lambda/matching.ml[3746,122039+71]..[3746,122039+72])
                                ]
                          ]
                          expression (lambda/matching.ml[3747,122115+6]..[3747,122115+78])
                            Pexp_apply
                            expression (lambda/matching.ml[3747,122115+6]..[3747,122115+24])
                              Pexp_ident "compile_orhandlers" (lambda/matching.ml[3747,122115+6]..[3747,122115+24])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3747,122115+25]..[3747,122115+61])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3747,122115+26]..[3747,122115+39])
                                    Pexp_ident "compile_match" (lambda/matching.ml[3747,122115+26]..[3747,122115+39])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3747,122115+41]..[3747,122115+47])
                                        Pexp_ident "scopes" (lambda/matching.ml[3747,122115+41]..[3747,122115+47])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3747,122115+48]..[3747,122115+52])
                                        Pexp_ident "repr" (lambda/matching.ml[3747,122115+48]..[3747,122115+52])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3747,122115+53]..[3747,122115+60])
                                        Pexp_ident "partial" (lambda/matching.ml[3747,122115+53]..[3747,122115+60])
                                  ]
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3747,122115+62]..[3747,122115+65])
                                  Pexp_ident "lam" (lambda/matching.ml[3747,122115+62]..[3747,122115+65])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3747,122115+66]..[3747,122115+71])
                                  Pexp_ident "total" (lambda/matching.ml[3747,122115+66]..[3747,122115+71])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3747,122115+72]..[3747,122115+75])
                                  Pexp_ident "ctx" (lambda/matching.ml[3747,122115+72]..[3747,122115+75])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3747,122115+76]..[3747,122115+78])
                                  Pexp_ident "hs" (lambda/matching.ml[3747,122115+76]..[3747,122115+78])
                            ]
                    ]
    ]
  structure_item (lambda/matching.ml[3749,122195+0]..[3778,123421+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3749,122195+4]..[3749,122195+25])
          Ppat_var "do_for_multiple_match" (lambda/matching.ml[3749,122195+4]..[3749,122195+25])
        expression (lambda/matching.ml[3749,122195+26]..[3778,123421+3]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3749,122195+27]..[3749,122195+33])
            Ppat_var "scopes" (lambda/matching.ml[3749,122195+27]..[3749,122195+33])
          expression (lambda/matching.ml[3749,122195+34]..[3778,123421+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3749,122195+34]..[3749,122195+37])
              Ppat_var "loc" (lambda/matching.ml[3749,122195+34]..[3749,122195+37])
            expression (lambda/matching.ml[3749,122195+38]..[3778,123421+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3749,122195+38]..[3749,122195+44])
                Ppat_var "paraml" (lambda/matching.ml[3749,122195+38]..[3749,122195+44])
              expression (lambda/matching.ml[3749,122195+45]..[3778,123421+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3749,122195+45]..[3749,122195+57])
                  Ppat_var "pat_act_list" (lambda/matching.ml[3749,122195+45]..[3749,122195+57])
                expression (lambda/matching.ml[3749,122195+58]..[3778,123421+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3749,122195+58]..[3749,122195+65])
                    Ppat_var "partial" (lambda/matching.ml[3749,122195+58]..[3749,122195+65])
                  expression (lambda/matching.ml[3750,122263+2]..[3778,123421+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[3750,122263+6]..[3750,122263+10])
                          Ppat_var "repr" (lambda/matching.ml[3750,122263+6]..[3750,122263+10])
                        expression (lambda/matching.ml[3750,122263+13]..[3750,122263+17])
                          Pexp_construct "None" (lambda/matching.ml[3750,122263+13]..[3750,122263+17])
                          None
                    ]
                    expression (lambda/matching.ml[3751,122284+2]..[3778,123421+3])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[3751,122284+6]..[3751,122284+9])
                            Ppat_var "arg" (lambda/matching.ml[3751,122284+6]..[3751,122284+9])
                          expression (lambda/matching.ml[3752,122296+4]..[3753,122354+57])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/matching.ml[3752,122296+8]..[3752,122296+12])
                                  Ppat_var "sloc" (lambda/matching.ml[3752,122296+8]..[3752,122296+12])
                                expression (lambda/matching.ml[3752,122296+15]..[3752,122296+54])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3752,122296+15]..[3752,122296+42])
                                    Pexp_ident "Scoped_location.of_location" (lambda/matching.ml[3752,122296+15]..[3752,122296+42])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3752,122296+44]..[3752,122296+50])
                                        Pexp_ident "scopes" (lambda/matching.ml[3752,122296+44]..[3752,122296+50])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3752,122296+51]..[3752,122296+54])
                                        Pexp_ident "loc" (lambda/matching.ml[3752,122296+51]..[3752,122296+54])
                                  ]
                            ]
                            expression (lambda/matching.ml[3753,122354+4]..[3753,122354+57])
                              Pexp_construct "Lprim" (lambda/matching.ml[3753,122354+4]..[3753,122354+9])
                              Some
                                expression (lambda/matching.ml[3753,122354+10]..[3753,122354+57])
                                  Pexp_tuple
                                  [
                                    expression (lambda/matching.ml[3753,122354+11]..[3753,122354+42])
                                      Pexp_construct "Pmakeblock" (lambda/matching.ml[3753,122354+11]..[3753,122354+21])
                                      Some
                                        expression (lambda/matching.ml[3753,122354+22]..[3753,122354+42])
                                          Pexp_tuple
                                          [
                                            expression (lambda/matching.ml[3753,122354+23]..[3753,122354+24])
                                              Pexp_constant PConst_int (0,None)
                                            expression (lambda/matching.ml[3753,122354+26]..[3753,122354+35])
                                              Pexp_construct "Immutable" (lambda/matching.ml[3753,122354+26]..[3753,122354+35])
                                              None
                                            expression (lambda/matching.ml[3753,122354+37]..[3753,122354+41])
                                              Pexp_construct "None" (lambda/matching.ml[3753,122354+37]..[3753,122354+41])
                                              None
                                          ]
                                    expression (lambda/matching.ml[3753,122354+44]..[3753,122354+50])
                                      Pexp_ident "paraml" (lambda/matching.ml[3753,122354+44]..[3753,122354+50])
                                    expression (lambda/matching.ml[3753,122354+52]..[3753,122354+56])
                                      Pexp_ident "sloc" (lambda/matching.ml[3753,122354+52]..[3753,122354+56])
                                  ]
                      ]
                      expression (lambda/matching.ml[3754,122415+2]..[3778,123421+3])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/matching.ml[3754,122415+6]..[3754,122415+13])
                              Ppat_var "handler" (lambda/matching.ml[3754,122415+6]..[3754,122415+13])
                            expression (lambda/matching.ml[3755,122431+4]..[3758,122610+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/matching.ml[3755,122431+8]..[3755,122431+15])
                                    Ppat_var "partial" (lambda/matching.ml[3755,122431+8]..[3755,122431+15])
                                  expression (lambda/matching.ml[3755,122431+18]..[3755,122431+52])
                                    Pexp_apply
                                    expression (lambda/matching.ml[3755,122431+18]..[3755,122431+31])
                                      Pexp_ident "check_partial" (lambda/matching.ml[3755,122431+18]..[3755,122431+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3755,122431+32]..[3755,122431+44])
                                          Pexp_ident "pat_act_list" (lambda/matching.ml[3755,122431+32]..[3755,122431+44])
                                      <arg>
                                      Nolabel
                                        expression (lambda/matching.ml[3755,122431+45]..[3755,122431+52])
                                          Pexp_ident "partial" (lambda/matching.ml[3755,122431+45]..[3755,122431+52])
                                    ]
                              ]
                              expression (lambda/matching.ml[3756,122487+4]..[3758,122610+36])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/matching.ml[3756,122487+8]..[3756,122487+12])
                                      Ppat_var "rows" (lambda/matching.ml[3756,122487+8]..[3756,122487+12])
                                    expression (lambda/matching.ml[3756,122487+15]..[3756,122487+58])
                                      Pexp_apply
                                      expression (lambda/matching.ml[3756,122487+15]..[3756,122487+26])
                                        Pexp_ident "map_on_rows" (lambda/matching.ml[3756,122487+15]..[3756,122487+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3756,122487+27]..[3756,122487+45])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/matching.ml[3756,122487+32]..[3756,122487+33])
                                              Ppat_var "p" (lambda/matching.ml[3756,122487+32]..[3756,122487+33])
                                            expression (lambda/matching.ml[3756,122487+37]..[3756,122487+44])
                                              Pexp_tuple
                                              [
                                                expression (lambda/matching.ml[3756,122487+38]..[3756,122487+39])
                                                  Pexp_ident "p" (lambda/matching.ml[3756,122487+38]..[3756,122487+39])
                                                expression (lambda/matching.ml[3756,122487+41]..[3756,122487+43])
                                                  Pexp_construct "[]" (lambda/matching.ml[3756,122487+41]..[3756,122487+43])
                                                  None
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/matching.ml[3756,122487+46]..[3756,122487+58])
                                            Pexp_ident "pat_act_list" (lambda/matching.ml[3756,122487+46]..[3756,122487+58])
                                      ]
                                ]
                                expression (lambda/matching.ml[3757,122549+4]..[3758,122610+36])
                                  Pexp_apply
                                  expression (lambda/matching.ml[3757,122549+4]..[3757,122549+20])
                                    Pexp_ident "toplevel_handler" (lambda/matching.ml[3757,122549+4]..[3757,122549+20])
                                  [
                                    <arg>
                                    Labelled "scopes"
                                      expression (lambda/matching.ml[3757,122549+22]..[3757,122549+28])
                                        Pexp_ident "scopes" (lambda/matching.ml[3757,122549+22]..[3757,122549+28])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3757,122549+29]..[3757,122549+32])
                                        Pexp_ident "loc" (lambda/matching.ml[3757,122549+29]..[3757,122549+32])
                                    <arg>
                                    Labelled "failer"
                                      expression (lambda/matching.ml[3757,122549+41]..[3757,122549+60])
                                        Pexp_construct "Raise_match_failure" (lambda/matching.ml[3757,122549+41]..[3757,122549+60])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3758,122610+6]..[3758,122610+13])
                                        Pexp_ident "partial" (lambda/matching.ml[3758,122610+6]..[3758,122610+13])
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3758,122610+14]..[3758,122610+31])
                                        Pexp_construct "::" (lambda/matching.ml[3758,122610+16]..[3758,122610+31]) ghost
                                        Some
                                          expression (lambda/matching.ml[3758,122610+16]..[3758,122610+31]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/matching.ml[3758,122610+16]..[3758,122610+29])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3758,122610+17]..[3758,122610+20])
                                                    Pexp_ident "arg" (lambda/matching.ml[3758,122610+17]..[3758,122610+20])
                                                  expression (lambda/matching.ml[3758,122610+22]..[3758,122610+28])
                                                    Pexp_construct "Strict" (lambda/matching.ml[3758,122610+22]..[3758,122610+28])
                                                    None
                                                ]
                                              expression (lambda/matching.ml[3758,122610+30]..[3758,122610+31]) ghost
                                                Pexp_construct "[]" (lambda/matching.ml[3758,122610+30]..[3758,122610+31]) ghost
                                                None
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/matching.ml[3758,122610+32]..[3758,122610+36])
                                        Pexp_ident "rows" (lambda/matching.ml[3758,122610+32]..[3758,122610+36])
                                  ]
                        ]
                        expression (lambda/matching.ml[3759,122650+2]..[3778,123421+3])
                          Pexp_apply
                          expression (lambda/matching.ml[3759,122650+2]..[3759,122650+9])
                            Pexp_ident "handler" (lambda/matching.ml[3759,122650+2]..[3759,122650+9])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3759,122650+10]..[3778,123421+3])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/matching.ml[3759,122650+15]..[3759,122650+22])
                                  Ppat_var "partial" (lambda/matching.ml[3759,122650+15]..[3759,122650+22])
                                expression (lambda/matching.ml[3759,122650+23]..[3777,123364+56]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3759,122650+23]..[3759,122650+26])
                                    Ppat_var "pm1" (lambda/matching.ml[3759,122650+23]..[3759,122650+26])
                                  expression (lambda/matching.ml[3760,122680+4]..[3777,123364+56])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/matching.ml[3760,122680+8]..[3760,122680+16])
                                          Ppat_var "pm1_half" (lambda/matching.ml[3760,122680+8]..[3760,122680+16])
                                        expression (lambda/matching.ml[3761,122699+6]..[3761,122699+75])
                                          Pexp_record
                                          [
                                            "cases" (lambda/matching.ml[3761,122699+17]..[3761,122699+22])
                                              expression (lambda/matching.ml[3761,122699+25]..[3761,122699+73])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3761,122699+25]..[3761,122699+33])
                                                  Pexp_ident "List.map" (lambda/matching.ml[3761,122699+25]..[3761,122699+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3761,122699+34]..[3761,122699+63])
                                                      Pexp_apply
                                                      expression (lambda/matching.ml[3761,122699+35]..[3761,122699+57])
                                                        Pexp_ident "half_simplify_nonempty" (lambda/matching.ml[3761,122699+35]..[3761,122699+57])
                                                      [
                                                        <arg>
                                                        Labelled "arg"
                                                          expression (lambda/matching.ml[3761,122699+59]..[3761,122699+62])
                                                            Pexp_ident "arg" (lambda/matching.ml[3761,122699+59]..[3761,122699+62])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3761,122699+64]..[3761,122699+73])
                                                      Pexp_field
                                                      expression (lambda/matching.ml[3761,122699+64]..[3761,122699+67])
                                                        Pexp_ident "pm1" (lambda/matching.ml[3761,122699+64]..[3761,122699+67])
                                                      "cases" (lambda/matching.ml[3761,122699+68]..[3761,122699+73])
                                                ]
                                          ]
                                          Some
                                            expression (lambda/matching.ml[3761,122699+8]..[3761,122699+11])
                                              Pexp_ident "pm1" (lambda/matching.ml[3761,122699+8]..[3761,122699+11])
                                    ]
                                    expression (lambda/matching.ml[3763,122782+4]..[3777,123364+56])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/matching.ml[3763,122782+8]..[3763,122782+19])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/matching.ml[3763,122782+8]..[3763,122782+12])
                                                Ppat_var "next" (lambda/matching.ml[3763,122782+8]..[3763,122782+12])
                                              pattern (lambda/matching.ml[3763,122782+14]..[3763,122782+19])
                                                Ppat_var "nexts" (lambda/matching.ml[3763,122782+14]..[3763,122782+19])
                                            ]
                                          expression (lambda/matching.ml[3763,122782+22]..[3763,122782+72])
                                            Pexp_apply
                                            expression (lambda/matching.ml[3763,122782+22]..[3763,122782+58])
                                              Pexp_ident "split_and_precompile_half_simplified" (lambda/matching.ml[3763,122782+22]..[3763,122782+58])
                                            [
                                              <arg>
                                              Labelled "arg"
                                                expression (lambda/matching.ml[3763,122782+60]..[3763,122782+63])
                                                  Pexp_ident "arg" (lambda/matching.ml[3763,122782+60]..[3763,122782+63])
                                              <arg>
                                              Nolabel
                                                expression (lambda/matching.ml[3763,122782+64]..[3763,122782+72])
                                                  Pexp_ident "pm1_half" (lambda/matching.ml[3763,122782+64]..[3763,122782+72])
                                            ]
                                      ]
                                      expression (lambda/matching.ml[3764,122858+4]..[3777,123364+56])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/matching.ml[3764,122858+8]..[3764,122858+12])
                                              Ppat_var "size" (lambda/matching.ml[3764,122858+8]..[3764,122858+12])
                                            expression (lambda/matching.ml[3764,122858+15]..[3764,122858+33])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3764,122858+15]..[3764,122858+26])
                                                Pexp_ident "List.length" (lambda/matching.ml[3764,122858+15]..[3764,122858+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3764,122858+27]..[3764,122858+33])
                                                    Pexp_ident "paraml" (lambda/matching.ml[3764,122858+27]..[3764,122858+33])
                                              ]
                                          <def>
                                            pattern (lambda/matching.ml[3765,122892+8]..[3765,122892+11])
                                              Ppat_var "idl" (lambda/matching.ml[3765,122892+8]..[3765,122892+11])
                                            expression (lambda/matching.ml[3765,122892+14]..[3767,122947+49])
                                              Pexp_apply
                                              expression (lambda/matching.ml[3765,122892+14]..[3765,122892+22])
                                                Pexp_ident "List.map" (lambda/matching.ml[3765,122892+14]..[3765,122892+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3765,122892+23]..[3767,122947+42])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (lambda/matching.ml[3766,122925+8]..[3766,122925+15])
                                                          Ppat_construct "Lvar" (lambda/matching.ml[3766,122925+8]..[3766,122925+12])
                                                          Some
                                                            []
                                                            pattern (lambda/matching.ml[3766,122925+13]..[3766,122925+15])
                                                              Ppat_var "id" (lambda/matching.ml[3766,122925+13]..[3766,122925+15])
                                                        expression (lambda/matching.ml[3766,122925+19]..[3766,122925+21])
                                                          Pexp_ident "id" (lambda/matching.ml[3766,122925+19]..[3766,122925+21])
                                                      <case>
                                                        pattern (lambda/matching.ml[3767,122947+8]..[3767,122947+9])
                                                          Ppat_any
                                                        expression (lambda/matching.ml[3767,122947+13]..[3767,122947+41])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3767,122947+13]..[3767,122947+31])
                                                            Pexp_ident "Ident.create_local" (lambda/matching.ml[3767,122947+13]..[3767,122947+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3767,122947+32]..[3767,122947+41])
                                                                Pexp_constant PConst_string("*match*",(lambda/matching.ml[3767,122947+33]..[3767,122947+40]),None)
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/matching.ml[3767,122947+43]..[3767,122947+49])
                                                    Pexp_ident "paraml" (lambda/matching.ml[3767,122947+43]..[3767,122947+49])
                                              ]
                                        ]
                                        expression (lambda/matching.ml[3768,123000+4]..[3777,123364+56])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/matching.ml[3768,123000+8]..[3768,123000+12])
                                                Ppat_var "args" (lambda/matching.ml[3768,123000+8]..[3768,123000+12])
                                              expression (lambda/matching.ml[3768,123000+15]..[3768,123000+56])
                                                Pexp_apply
                                                expression (lambda/matching.ml[3768,123000+15]..[3768,123000+23])
                                                  Pexp_ident "List.map" (lambda/matching.ml[3768,123000+15]..[3768,123000+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3768,123000+24]..[3768,123000+52])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/matching.ml[3768,123000+29]..[3768,123000+31])
                                                        Ppat_var "id" (lambda/matching.ml[3768,123000+29]..[3768,123000+31])
                                                      expression (lambda/matching.ml[3768,123000+35]..[3768,123000+51])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/matching.ml[3768,123000+36]..[3768,123000+43])
                                                            Pexp_construct "Lvar" (lambda/matching.ml[3768,123000+36]..[3768,123000+40])
                                                            Some
                                                              expression (lambda/matching.ml[3768,123000+41]..[3768,123000+43])
                                                                Pexp_ident "id" (lambda/matching.ml[3768,123000+41]..[3768,123000+43])
                                                          expression (lambda/matching.ml[3768,123000+45]..[3768,123000+50])
                                                            Pexp_construct "Alias" (lambda/matching.ml[3768,123000+45]..[3768,123000+50])
                                                            None
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/matching.ml[3768,123000+53]..[3768,123000+56])
                                                      Pexp_ident "idl" (lambda/matching.ml[3768,123000+53]..[3768,123000+56])
                                                ]
                                          ]
                                          expression (lambda/matching.ml[3769,123060+4]..[3777,123364+56])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/matching.ml[3769,123060+8]..[3769,123060+17])
                                                  Ppat_var "flat_next" (lambda/matching.ml[3769,123060+8]..[3769,123060+17])
                                                expression (lambda/matching.ml[3769,123060+20]..[3769,123060+54])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3769,123060+20]..[3769,123060+39])
                                                    Pexp_ident "flatten_precompiled" (lambda/matching.ml[3769,123060+20]..[3769,123060+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3769,123060+40]..[3769,123060+44])
                                                        Pexp_ident "size" (lambda/matching.ml[3769,123060+40]..[3769,123060+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3769,123060+45]..[3769,123060+49])
                                                        Pexp_ident "args" (lambda/matching.ml[3769,123060+45]..[3769,123060+49])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3769,123060+50]..[3769,123060+54])
                                                        Pexp_ident "next" (lambda/matching.ml[3769,123060+50]..[3769,123060+54])
                                                  ]
                                              <def>
                                                pattern (lambda/matching.ml[3770,123115+8]..[3770,123115+18])
                                                  Ppat_var "flat_nexts" (lambda/matching.ml[3770,123115+8]..[3770,123115+18])
                                                expression (lambda/matching.ml[3771,123136+6]..[3771,123136+75])
                                                  Pexp_apply
                                                  expression (lambda/matching.ml[3771,123136+6]..[3771,123136+14])
                                                    Pexp_ident "List.map" (lambda/matching.ml[3771,123136+6]..[3771,123136+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3771,123136+15]..[3771,123136+69])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/matching.ml[3771,123136+20]..[3771,123136+27])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lambda/matching.ml[3771,123136+21]..[3771,123136+22])
                                                              Ppat_var "e" (lambda/matching.ml[3771,123136+21]..[3771,123136+22])
                                                            pattern (lambda/matching.ml[3771,123136+24]..[3771,123136+26])
                                                              Ppat_var "pm" (lambda/matching.ml[3771,123136+24]..[3771,123136+26])
                                                          ]
                                                        expression (lambda/matching.ml[3771,123136+31]..[3771,123136+68])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/matching.ml[3771,123136+32]..[3771,123136+33])
                                                              Pexp_ident "e" (lambda/matching.ml[3771,123136+32]..[3771,123136+33])
                                                            expression (lambda/matching.ml[3771,123136+35]..[3771,123136+67])
                                                              Pexp_apply
                                                              expression (lambda/matching.ml[3771,123136+35]..[3771,123136+54])
                                                                Pexp_ident "flatten_precompiled" (lambda/matching.ml[3771,123136+35]..[3771,123136+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3771,123136+55]..[3771,123136+59])
                                                                    Pexp_ident "size" (lambda/matching.ml[3771,123136+55]..[3771,123136+59])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3771,123136+60]..[3771,123136+64])
                                                                    Pexp_ident "args" (lambda/matching.ml[3771,123136+60]..[3771,123136+64])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/matching.ml[3771,123136+65]..[3771,123136+67])
                                                                    Pexp_ident "pm" (lambda/matching.ml[3771,123136+65]..[3771,123136+67])
                                                              ]
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/matching.ml[3771,123136+70]..[3771,123136+75])
                                                        Pexp_ident "nexts" (lambda/matching.ml[3771,123136+70]..[3771,123136+75])
                                                  ]
                                            ]
                                            expression (lambda/matching.ml[3773,123219+4]..[3777,123364+56])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/matching.ml[3773,123219+8]..[3773,123219+18])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/matching.ml[3773,123219+8]..[3773,123219+11])
                                                        Ppat_var "lam" (lambda/matching.ml[3773,123219+8]..[3773,123219+11])
                                                      pattern (lambda/matching.ml[3773,123219+13]..[3773,123219+18])
                                                        Ppat_var "total" (lambda/matching.ml[3773,123219+13]..[3773,123219+18])
                                                    ]
                                                  expression (lambda/matching.ml[3774,123240+6]..[3775,123307+49])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3774,123240+6]..[3774,123240+25])
                                                      Pexp_ident "comp_match_handlers" (lambda/matching.ml[3774,123240+6]..[3774,123240+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3774,123240+26]..[3774,123240+58])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3774,123240+27]..[3774,123240+44])
                                                            Pexp_ident "compile_flattened" (lambda/matching.ml[3774,123240+27]..[3774,123240+44])
                                                          [
                                                            <arg>
                                                            Labelled "scopes"
                                                              expression (lambda/matching.ml[3774,123240+46]..[3774,123240+52])
                                                                Pexp_ident "scopes" (lambda/matching.ml[3774,123240+46]..[3774,123240+52])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3774,123240+53]..[3774,123240+57])
                                                                Pexp_ident "repr" (lambda/matching.ml[3774,123240+53]..[3774,123240+57])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3774,123240+59]..[3774,123240+66])
                                                          Pexp_ident "partial" (lambda/matching.ml[3774,123240+59]..[3774,123240+66])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3775,123307+8]..[3775,123307+28])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3775,123307+9]..[3775,123307+22])
                                                            Pexp_ident "Context.start" (lambda/matching.ml[3775,123307+9]..[3775,123307+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3775,123307+23]..[3775,123307+27])
                                                                Pexp_ident "size" (lambda/matching.ml[3775,123307+23]..[3775,123307+27])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3775,123307+29]..[3775,123307+38])
                                                          Pexp_ident "flat_next" (lambda/matching.ml[3775,123307+29]..[3775,123307+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3775,123307+39]..[3775,123307+49])
                                                          Pexp_ident "flat_nexts" (lambda/matching.ml[3775,123307+39]..[3775,123307+49])
                                                    ]
                                              ]
                                              expression (lambda/matching.ml[3777,123364+4]..[3777,123364+56])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/matching.ml[3777,123364+4]..[3777,123364+49])
                                                    Pexp_apply
                                                    expression (lambda/matching.ml[3777,123364+4]..[3777,123364+20])
                                                      Pexp_ident "List.fold_right2" (lambda/matching.ml[3777,123364+4]..[3777,123364+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3777,123364+21]..[3777,123364+34])
                                                          Pexp_apply
                                                          expression (lambda/matching.ml[3777,123364+22]..[3777,123364+26])
                                                            Pexp_ident "bind" (lambda/matching.ml[3777,123364+22]..[3777,123364+26])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/matching.ml[3777,123364+27]..[3777,123364+33])
                                                                Pexp_construct "Strict" (lambda/matching.ml[3777,123364+27]..[3777,123364+33])
                                                                None
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3777,123364+35]..[3777,123364+38])
                                                          Pexp_ident "idl" (lambda/matching.ml[3777,123364+35]..[3777,123364+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3777,123364+39]..[3777,123364+45])
                                                          Pexp_ident "paraml" (lambda/matching.ml[3777,123364+39]..[3777,123364+45])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/matching.ml[3777,123364+46]..[3777,123364+49])
                                                          Pexp_ident "lam" (lambda/matching.ml[3777,123364+46]..[3777,123364+49])
                                                    ]
                                                  expression (lambda/matching.ml[3777,123364+51]..[3777,123364+56])
                                                    Pexp_ident "total" (lambda/matching.ml[3777,123364+51]..[3777,123364+56])
                                                ]
                          ]
    ]
  structure_item (lambda/matching.ml[3783,123521+0]..[3786,123589+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3783,123521+4]..[3783,123521+16])
          Ppat_var "param_to_var" (lambda/matching.ml[3783,123521+4]..[3783,123521+16])
        expression (lambda/matching.ml[3783,123521+17]..[3786,123589+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3783,123521+17]..[3783,123521+22])
            Ppat_var "param" (lambda/matching.ml[3783,123521+17]..[3783,123521+22])
          expression (lambda/matching.ml[3784,123546+2]..[3786,123589+51])
            Pexp_match
            expression (lambda/matching.ml[3784,123546+8]..[3784,123546+13])
              Pexp_ident "param" (lambda/matching.ml[3784,123546+8]..[3784,123546+13])
            [
              <case>
                pattern (lambda/matching.ml[3785,123565+4]..[3785,123565+10])
                  Ppat_construct "Lvar" (lambda/matching.ml[3785,123565+4]..[3785,123565+8])
                  Some
                    []
                    pattern (lambda/matching.ml[3785,123565+9]..[3785,123565+10])
                      Ppat_var "v" (lambda/matching.ml[3785,123565+9]..[3785,123565+10])
                expression (lambda/matching.ml[3785,123565+14]..[3785,123565+23])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[3785,123565+15]..[3785,123565+16])
                      Pexp_ident "v" (lambda/matching.ml[3785,123565+15]..[3785,123565+16])
                    expression (lambda/matching.ml[3785,123565+18]..[3785,123565+22])
                      Pexp_construct "None" (lambda/matching.ml[3785,123565+18]..[3785,123565+22])
                      None
                  ]
              <case>
                pattern (lambda/matching.ml[3786,123589+4]..[3786,123589+5])
                  Ppat_any
                expression (lambda/matching.ml[3786,123589+9]..[3786,123589+51])
                  Pexp_tuple
                  [
                    expression (lambda/matching.ml[3786,123589+10]..[3786,123589+38])
                      Pexp_apply
                      expression (lambda/matching.ml[3786,123589+10]..[3786,123589+28])
                        Pexp_ident "Ident.create_local" (lambda/matching.ml[3786,123589+10]..[3786,123589+28])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/matching.ml[3786,123589+29]..[3786,123589+38])
                            Pexp_constant PConst_string("*match*",(lambda/matching.ml[3786,123589+30]..[3786,123589+37]),None)
                      ]
                    expression (lambda/matching.ml[3786,123589+40]..[3786,123589+50])
                      Pexp_construct "Some" (lambda/matching.ml[3786,123589+40]..[3786,123589+44])
                      Some
                        expression (lambda/matching.ml[3786,123589+45]..[3786,123589+50])
                          Pexp_ident "param" (lambda/matching.ml[3786,123589+45]..[3786,123589+50])
                  ]
            ]
    ]
  structure_item (lambda/matching.ml[3788,123642+0]..[3791,123697+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3788,123642+4]..[3788,123642+12])
          Ppat_var "bind_opt" (lambda/matching.ml[3788,123642+4]..[3788,123642+12])
        expression (lambda/matching.ml[3788,123642+13]..[3791,123697+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/matching.ml[3788,123642+13]..[3788,123642+20])
            Ppat_tuple
            [
              pattern (lambda/matching.ml[3788,123642+14]..[3788,123642+15])
                Ppat_var "v" (lambda/matching.ml[3788,123642+14]..[3788,123642+15])
              pattern (lambda/matching.ml[3788,123642+17]..[3788,123642+19])
                Ppat_var "eo" (lambda/matching.ml[3788,123642+17]..[3788,123642+19])
            ]
          expression (lambda/matching.ml[3788,123642+21]..[3791,123697+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3788,123642+21]..[3788,123642+22])
              Ppat_var "k" (lambda/matching.ml[3788,123642+21]..[3788,123642+22])
            expression (lambda/matching.ml[3789,123667+2]..[3791,123697+38])
              Pexp_match
              expression (lambda/matching.ml[3789,123667+8]..[3789,123667+10])
                Pexp_ident "eo" (lambda/matching.ml[3789,123667+8]..[3789,123667+10])
              [
                <case>
                  pattern (lambda/matching.ml[3790,123683+4]..[3790,123683+8])
                    Ppat_construct "None" (lambda/matching.ml[3790,123683+4]..[3790,123683+8])
                    None
                  expression (lambda/matching.ml[3790,123683+12]..[3790,123683+13])
                    Pexp_ident "k" (lambda/matching.ml[3790,123683+12]..[3790,123683+13])
                <case>
                  pattern (lambda/matching.ml[3791,123697+4]..[3791,123697+10])
                    Ppat_construct "Some" (lambda/matching.ml[3791,123697+4]..[3791,123697+8])
                    Some
                      []
                      pattern (lambda/matching.ml[3791,123697+9]..[3791,123697+10])
                        Ppat_var "e" (lambda/matching.ml[3791,123697+9]..[3791,123697+10])
                  expression (lambda/matching.ml[3791,123697+14]..[3791,123697+38])
                    Pexp_apply
                    expression (lambda/matching.ml[3791,123697+14]..[3791,123697+25])
                      Pexp_ident "Lambda.bind" (lambda/matching.ml[3791,123697+14]..[3791,123697+25])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3791,123697+26]..[3791,123697+32])
                          Pexp_construct "Strict" (lambda/matching.ml[3791,123697+26]..[3791,123697+32])
                          None
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3791,123697+33]..[3791,123697+34])
                          Pexp_ident "v" (lambda/matching.ml[3791,123697+33]..[3791,123697+34])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3791,123697+35]..[3791,123697+36])
                          Pexp_ident "e" (lambda/matching.ml[3791,123697+35]..[3791,123697+36])
                      <arg>
                      Nolabel
                        expression (lambda/matching.ml[3791,123697+37]..[3791,123697+38])
                          Pexp_ident "k" (lambda/matching.ml[3791,123697+37]..[3791,123697+38])
                    ]
              ]
    ]
  structure_item (lambda/matching.ml[3793,123737+0]..[3797,123946+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/matching.ml[3793,123737+4]..[3793,123737+22])
          Ppat_var "for_multiple_match" (lambda/matching.ml[3793,123737+4]..[3793,123737+22])
        expression (lambda/matching.ml[3793,123737+23]..[3797,123946+67]) ghost
          Pexp_fun
          Labelled "scopes"
          None
          pattern (lambda/matching.ml[3793,123737+24]..[3793,123737+30])
            Ppat_var "scopes" (lambda/matching.ml[3793,123737+24]..[3793,123737+30])
          expression (lambda/matching.ml[3793,123737+31]..[3797,123946+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/matching.ml[3793,123737+31]..[3793,123737+34])
              Ppat_var "loc" (lambda/matching.ml[3793,123737+31]..[3793,123737+34])
            expression (lambda/matching.ml[3793,123737+35]..[3797,123946+67]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/matching.ml[3793,123737+35]..[3793,123737+41])
                Ppat_var "paraml" (lambda/matching.ml[3793,123737+35]..[3793,123737+41])
              expression (lambda/matching.ml[3793,123737+42]..[3797,123946+67]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/matching.ml[3793,123737+42]..[3793,123737+54])
                  Ppat_var "pat_act_list" (lambda/matching.ml[3793,123737+42]..[3793,123737+54])
                expression (lambda/matching.ml[3793,123737+55]..[3797,123946+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/matching.ml[3793,123737+55]..[3793,123737+62])
                    Ppat_var "partial" (lambda/matching.ml[3793,123737+55]..[3793,123737+62])
                  expression (lambda/matching.ml[3794,123802+2]..[3797,123946+67])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/matching.ml[3794,123802+6]..[3794,123802+14])
                          Ppat_var "v_paraml" (lambda/matching.ml[3794,123802+6]..[3794,123802+14])
                        expression (lambda/matching.ml[3794,123802+17]..[3794,123802+45])
                          Pexp_apply
                          expression (lambda/matching.ml[3794,123802+17]..[3794,123802+25])
                            Pexp_ident "List.map" (lambda/matching.ml[3794,123802+17]..[3794,123802+25])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3794,123802+26]..[3794,123802+38])
                                Pexp_ident "param_to_var" (lambda/matching.ml[3794,123802+26]..[3794,123802+38])
                            <arg>
                            Nolabel
                              expression (lambda/matching.ml[3794,123802+39]..[3794,123802+45])
                                Pexp_ident "paraml" (lambda/matching.ml[3794,123802+39]..[3794,123802+45])
                          ]
                    ]
                    expression (lambda/matching.ml[3795,123851+2]..[3797,123946+67])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/matching.ml[3795,123851+6]..[3795,123851+12])
                            Ppat_var "paraml" (lambda/matching.ml[3795,123851+6]..[3795,123851+12])
                          expression (lambda/matching.ml[3795,123851+15]..[3795,123851+55])
                            Pexp_apply
                            expression (lambda/matching.ml[3795,123851+15]..[3795,123851+23])
                              Pexp_ident "List.map" (lambda/matching.ml[3795,123851+15]..[3795,123851+23])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3795,123851+24]..[3795,123851+46])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/matching.ml[3795,123851+29]..[3795,123851+35])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/matching.ml[3795,123851+30]..[3795,123851+31])
                                        Ppat_var "v" (lambda/matching.ml[3795,123851+30]..[3795,123851+31])
                                      pattern (lambda/matching.ml[3795,123851+33]..[3795,123851+34])
                                        Ppat_any
                                    ]
                                  expression (lambda/matching.ml[3795,123851+39]..[3795,123851+45])
                                    Pexp_construct "Lvar" (lambda/matching.ml[3795,123851+39]..[3795,123851+43])
                                    Some
                                      expression (lambda/matching.ml[3795,123851+44]..[3795,123851+45])
                                        Pexp_ident "v" (lambda/matching.ml[3795,123851+44]..[3795,123851+45])
                              <arg>
                              Nolabel
                                expression (lambda/matching.ml[3795,123851+47]..[3795,123851+55])
                                  Pexp_ident "v_paraml" (lambda/matching.ml[3795,123851+47]..[3795,123851+55])
                            ]
                      ]
                      expression (lambda/matching.ml[3796,123910+2]..[3797,123946+67])
                        Pexp_apply
                        expression (lambda/matching.ml[3796,123910+2]..[3796,123910+17])
                          Pexp_ident "List.fold_right" (lambda/matching.ml[3796,123910+2]..[3796,123910+17])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3796,123910+18]..[3796,123910+26])
                              Pexp_ident "bind_opt" (lambda/matching.ml[3796,123910+18]..[3796,123910+26])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3796,123910+27]..[3796,123910+35])
                              Pexp_ident "v_paraml" (lambda/matching.ml[3796,123910+27]..[3796,123910+35])
                          <arg>
                          Nolabel
                            expression (lambda/matching.ml[3797,123946+4]..[3797,123946+67])
                              Pexp_apply
                              expression (lambda/matching.ml[3797,123946+5]..[3797,123946+26])
                                Pexp_ident "do_for_multiple_match" (lambda/matching.ml[3797,123946+5]..[3797,123946+26])
                              [
                                <arg>
                                Labelled "scopes"
                                  expression (lambda/matching.ml[3797,123946+28]..[3797,123946+34])
                                    Pexp_ident "scopes" (lambda/matching.ml[3797,123946+28]..[3797,123946+34])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3797,123946+35]..[3797,123946+38])
                                    Pexp_ident "loc" (lambda/matching.ml[3797,123946+35]..[3797,123946+38])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3797,123946+39]..[3797,123946+45])
                                    Pexp_ident "paraml" (lambda/matching.ml[3797,123946+39]..[3797,123946+45])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3797,123946+46]..[3797,123946+58])
                                    Pexp_ident "pat_act_list" (lambda/matching.ml[3797,123946+46]..[3797,123946+58])
                                <arg>
                                Nolabel
                                  expression (lambda/matching.ml[3797,123946+59]..[3797,123946+66])
                                    Pexp_ident "partial" (lambda/matching.ml[3797,123946+59]..[3797,123946+66])
                              ]
                        ]
    ]
]

