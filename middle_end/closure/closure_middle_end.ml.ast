[
  structure_item (middle_end/closure/closure_middle_end.ml[16,1079+0]..[16,1079+37])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/closure/closure_middle_end.ml[16,1079+18]..[16,1079+36])
        Pstr_eval
        expression (middle_end/closure/closure_middle_end.ml[16,1079+18]..[16,1079+36])
          Pexp_constant PConst_string("+a-4-30-40-41-42",(middle_end/closure/closure_middle_end.ml[16,1079+19]..[16,1079+35]),None)
    ]
  structure_item (middle_end/closure/closure_middle_end.ml[18,1118+0]..[30,1581+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure_middle_end.ml[18,1118+4]..[18,1118+23])
          Ppat_var "raw_clambda_dump_if" (middle_end/closure/closure_middle_end.ml[18,1118+4]..[18,1118+23])
        expression (middle_end/closure/closure_middle_end.ml[18,1118+24]..[30,1581+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure_middle_end.ml[18,1118+24]..[18,1118+27])
            Ppat_var "ppf" (middle_end/closure/closure_middle_end.ml[18,1118+24]..[18,1118+27])
          expression (middle_end/closure/closure_middle_end.ml[19,1146+6]..[30,1581+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure_middle_end.ml[19,1146+6]..[19,1146+67])
              Ppat_constraint
              pattern (middle_end/closure/closure_middle_end.ml[19,1146+7]..[19,1146+41])
                Ppat_tuple
                [
                  pattern (middle_end/closure/closure_middle_end.ml[19,1146+8]..[19,1146+15])
                    Ppat_var "ulambda" (middle_end/closure/closure_middle_end.ml[19,1146+8]..[19,1146+15])
                  pattern (middle_end/closure/closure_middle_end.ml[19,1146+17]..[19,1146+18])
                    Ppat_any
                  pattern (middle_end/closure/closure_middle_end.ml[19,1146+20]..[19,1146+40])
                    Ppat_var "structured_constants" (middle_end/closure/closure_middle_end.ml[19,1146+20]..[19,1146+40])
                ]
              core_type (middle_end/closure/closure_middle_end.ml[19,1146+44]..[19,1146+66])
                Ptyp_constr "Clambda.with_constants" (middle_end/closure/closure_middle_end.ml[19,1146+44]..[19,1146+66])
                []
            expression (middle_end/closure/closure_middle_end.ml[20,1216+2]..[30,1581+57])
              Pexp_sequence
              expression (middle_end/closure/closure_middle_end.ml[20,1216+2]..[29,1572+7])
                Pexp_ifthenelse
                expression (middle_end/closure/closure_middle_end.ml[20,1216+5]..[20,1216+54])
                  Pexp_apply
                  expression (middle_end/closure/closure_middle_end.ml[20,1216+30]..[20,1216+32])
                    Pexp_ident "||" (middle_end/closure/closure_middle_end.ml[20,1216+30]..[20,1216+32])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure_middle_end.ml[20,1216+5]..[20,1216+29])
                        Pexp_apply
                        expression (middle_end/closure/closure_middle_end.ml[20,1216+5]..[20,1216+6])
                          Pexp_ident "!" (middle_end/closure/closure_middle_end.ml[20,1216+5]..[20,1216+6])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure_middle_end.ml[20,1216+6]..[20,1216+29])
                              Pexp_ident "Clflags.dump_rawclambda" (middle_end/closure/closure_middle_end.ml[20,1216+6]..[20,1216+29])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure_middle_end.ml[20,1216+33]..[20,1216+54])
                        Pexp_apply
                        expression (middle_end/closure/closure_middle_end.ml[20,1216+33]..[20,1216+34])
                          Pexp_ident "!" (middle_end/closure/closure_middle_end.ml[20,1216+33]..[20,1216+34])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure_middle_end.ml[20,1216+34]..[20,1216+54])
                              Pexp_ident "Clflags.dump_clambda" (middle_end/closure/closure_middle_end.ml[20,1216+34]..[20,1216+54])
                        ]
                  ]
                expression (middle_end/closure/closure_middle_end.ml[21,1276+4]..[29,1572+7])
                  Pexp_sequence
                  expression (middle_end/closure/closure_middle_end.ml[22,1286+6]..[22,1286+39])
                    Pexp_apply
                    expression (middle_end/closure/closure_middle_end.ml[22,1286+6]..[22,1286+20])
                      Pexp_ident "Format.fprintf" (middle_end/closure/closure_middle_end.ml[22,1286+6]..[22,1286+20])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure_middle_end.ml[22,1286+21]..[22,1286+24])
                          Pexp_ident "ppf" (middle_end/closure/closure_middle_end.ml[22,1286+21]..[22,1286+24])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure_middle_end.ml[22,1286+25]..[22,1286+39])
                          Pexp_constant PConst_string("@.clambda:@.",(middle_end/closure/closure_middle_end.ml[22,1286+26]..[22,1286+38]),None)
                    ]
                  expression (middle_end/closure/closure_middle_end.ml[23,1327+6]..[28,1543+28])
                    Pexp_sequence
                    expression (middle_end/closure/closure_middle_end.ml[23,1327+6]..[23,1327+38])
                      Pexp_apply
                      expression (middle_end/closure/closure_middle_end.ml[23,1327+6]..[23,1327+26])
                        Pexp_ident "Printclambda.clambda" (middle_end/closure/closure_middle_end.ml[23,1327+6]..[23,1327+26])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure_middle_end.ml[23,1327+27]..[23,1327+30])
                            Pexp_ident "ppf" (middle_end/closure/closure_middle_end.ml[23,1327+27]..[23,1327+30])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure_middle_end.ml[23,1327+31]..[23,1327+38])
                            Pexp_ident "ulambda" (middle_end/closure/closure_middle_end.ml[23,1327+31]..[23,1327+38])
                      ]
                    expression (middle_end/closure/closure_middle_end.ml[24,1367+6]..[28,1543+28])
                      Pexp_apply
                      expression (middle_end/closure/closure_middle_end.ml[24,1367+6]..[24,1367+15])
                        Pexp_ident "List.iter" (middle_end/closure/closure_middle_end.ml[24,1367+6]..[24,1367+15])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure_middle_end.ml[24,1367+16]..[27,1486+56])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/closure/closure_middle_end.ml[24,1367+21]..[24,1367+55])
                              Ppat_record Open
                              [
                                "Clambda.symbol" (middle_end/closure/closure_middle_end.ml[24,1367+23]..[24,1367+38]) ghost
                                  pattern (middle_end/closure/closure_middle_end.ml[24,1367+23]..[24,1367+38])
                                    Ppat_var "symbol" (middle_end/closure/closure_middle_end.ml[24,1367+23]..[24,1367+38])
                                "definition" (middle_end/closure/closure_middle_end.ml[24,1367+40]..[24,1367+50]) ghost
                                  pattern (middle_end/closure/closure_middle_end.ml[24,1367+40]..[24,1367+50])
                                    Ppat_var "definition" (middle_end/closure/closure_middle_end.ml[24,1367+40]..[24,1367+50])
                              ]
                            expression (middle_end/closure/closure_middle_end.ml[25,1426+10]..[27,1486+55])
                              Pexp_apply
                              expression (middle_end/closure/closure_middle_end.ml[25,1426+10]..[25,1426+24])
                                Pexp_ident "Format.fprintf" (middle_end/closure/closure_middle_end.ml[25,1426+10]..[25,1426+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[25,1426+25]..[25,1426+28])
                                    Pexp_ident "ppf" (middle_end/closure/closure_middle_end.ml[25,1426+25]..[25,1426+28])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[25,1426+29]..[25,1426+40])
                                    Pexp_constant PConst_string("%s:@ %a@.",(middle_end/closure/closure_middle_end.ml[25,1426+30]..[25,1426+39]),None)
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[26,1467+12]..[26,1467+18])
                                    Pexp_ident "symbol" (middle_end/closure/closure_middle_end.ml[26,1467+12]..[26,1467+18])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[27,1486+12]..[27,1486+44])
                                    Pexp_ident "Printclambda.structured_constant" (middle_end/closure/closure_middle_end.ml[27,1486+12]..[27,1486+44])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[27,1486+45]..[27,1486+55])
                                    Pexp_ident "definition" (middle_end/closure/closure_middle_end.ml[27,1486+45]..[27,1486+55])
                              ]
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure_middle_end.ml[28,1543+8]..[28,1543+28])
                            Pexp_ident "structured_constants" (middle_end/closure/closure_middle_end.ml[28,1543+8]..[28,1543+28])
                      ]
                None
              expression (middle_end/closure/closure_middle_end.ml[30,1581+2]..[30,1581+57])
                Pexp_ifthenelse
                expression (middle_end/closure/closure_middle_end.ml[30,1581+5]..[30,1581+22])
                  Pexp_apply
                  expression (middle_end/closure/closure_middle_end.ml[30,1581+5]..[30,1581+6])
                    Pexp_ident "!" (middle_end/closure/closure_middle_end.ml[30,1581+5]..[30,1581+6])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure_middle_end.ml[30,1581+6]..[30,1581+22])
                        Pexp_ident "Clflags.dump_cmm" (middle_end/closure/closure_middle_end.ml[30,1581+6]..[30,1581+22])
                  ]
                expression (middle_end/closure/closure_middle_end.ml[30,1581+28]..[30,1581+57])
                  Pexp_apply
                  expression (middle_end/closure/closure_middle_end.ml[30,1581+28]..[30,1581+42])
                    Pexp_ident "Format.fprintf" (middle_end/closure/closure_middle_end.ml[30,1581+28]..[30,1581+42])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure_middle_end.ml[30,1581+43]..[30,1581+46])
                        Pexp_ident "ppf" (middle_end/closure/closure_middle_end.ml[30,1581+43]..[30,1581+46])
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure_middle_end.ml[30,1581+47]..[30,1581+57])
                        Pexp_constant PConst_string("@.cmm:@.",(middle_end/closure/closure_middle_end.ml[30,1581+48]..[30,1581+56]),None)
                  ]
                None
    ]
  structure_item (middle_end/closure/closure_middle_end.ml[32,1640+0]..[58,2485+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure_middle_end.ml[32,1640+4]..[32,1640+21])
          Ppat_var "lambda_to_clambda" (middle_end/closure/closure_middle_end.ml[32,1640+4]..[32,1640+21])
        expression (middle_end/closure/closure_middle_end.ml[32,1640+22]..[58,2485+23]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/closure/closure_middle_end.ml[32,1640+23]..[32,1640+30])
            Ppat_var "backend" (middle_end/closure/closure_middle_end.ml[32,1640+23]..[32,1640+30])
          expression (middle_end/closure/closure_middle_end.ml[32,1640+31]..[58,2485+23]) ghost
            Pexp_fun
            Labelled "prefixname"
            None
            pattern (middle_end/closure/closure_middle_end.ml[32,1640+43]..[32,1640+44])
              Ppat_any
            expression (middle_end/closure/closure_middle_end.ml[32,1640+45]..[58,2485+23]) ghost
              Pexp_fun
              Labelled "ppf_dump"
              None
              pattern (middle_end/closure/closure_middle_end.ml[32,1640+46]..[32,1640+54])
                Ppat_var "ppf_dump" (middle_end/closure/closure_middle_end.ml[32,1640+46]..[32,1640+54])
              expression (middle_end/closure/closure_middle_end.ml[33,1695+6]..[58,2485+23]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure_middle_end.ml[33,1695+6]..[33,1695+31])
                  Ppat_constraint
                  pattern (middle_end/closure/closure_middle_end.ml[33,1695+7]..[33,1695+13])
                    Ppat_var "lambda" (middle_end/closure/closure_middle_end.ml[33,1695+7]..[33,1695+13])
                  core_type (middle_end/closure/closure_middle_end.ml[33,1695+16]..[33,1695+30])
                    Ptyp_constr "Lambda.program" (middle_end/closure/closure_middle_end.ml[33,1695+16]..[33,1695+30])
                    []
                expression (middle_end/closure/closure_middle_end.ml[34,1729+2]..[58,2485+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure_middle_end.ml[34,1729+6]..[34,1729+13])
                        Ppat_var "clambda" (middle_end/closure/closure_middle_end.ml[34,1729+6]..[34,1729+13])
                      expression (middle_end/closure/closure_middle_end.ml[35,1745+4]..[35,1745+74])
                        Pexp_apply
                        expression (middle_end/closure/closure_middle_end.ml[35,1745+4]..[35,1745+17])
                          Pexp_ident "Closure.intro" (middle_end/closure/closure_middle_end.ml[35,1745+4]..[35,1745+17])
                        [
                          <arg>
                          Labelled "backend"
                            expression (middle_end/closure/closure_middle_end.ml[35,1745+19]..[35,1745+26])
                              Pexp_ident "backend" (middle_end/closure/closure_middle_end.ml[35,1745+19]..[35,1745+26])
                          <arg>
                          Labelled "size"
                            expression (middle_end/closure/closure_middle_end.ml[35,1745+33]..[35,1745+62])
                              Pexp_field
                              expression (middle_end/closure/closure_middle_end.ml[35,1745+33]..[35,1745+39])
                                Pexp_ident "lambda" (middle_end/closure/closure_middle_end.ml[35,1745+33]..[35,1745+39])
                              "main_module_block_size" (middle_end/closure/closure_middle_end.ml[35,1745+40]..[35,1745+62])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure_middle_end.ml[35,1745+63]..[35,1745+74])
                              Pexp_field
                              expression (middle_end/closure/closure_middle_end.ml[35,1745+63]..[35,1745+69])
                                Pexp_ident "lambda" (middle_end/closure/closure_middle_end.ml[35,1745+63]..[35,1745+69])
                              "code" (middle_end/closure/closure_middle_end.ml[35,1745+70]..[35,1745+74])
                        ]
                  ]
                  expression (middle_end/closure/closure_middle_end.ml[37,1825+2]..[58,2485+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/closure/closure_middle_end.ml[37,1825+6]..[37,1825+45]) ghost
                          Ppat_constraint
                          pattern (middle_end/closure/closure_middle_end.ml[37,1825+6]..[37,1825+16])
                            Ppat_var "provenance" (middle_end/closure/closure_middle_end.ml[37,1825+6]..[37,1825+16])
                          core_type (middle_end/closure/closure_middle_end.ml[37,1825+19]..[37,1825+45]) ghost
                            Ptyp_poly
                            core_type (middle_end/closure/closure_middle_end.ml[37,1825+19]..[37,1825+45])
                              Ptyp_constr "Clambda.usymbol_provenance" (middle_end/closure/closure_middle_end.ml[37,1825+19]..[37,1825+45])
                              []
                        expression (middle_end/closure/closure_middle_end.ml[37,1825+6]..[41,2001+5])
                          Pexp_constraint
                          expression (middle_end/closure/closure_middle_end.ml[38,1873+4]..[41,2001+5])
                            Pexp_record
                            [
                              "original_idents" (middle_end/closure/closure_middle_end.ml[38,1873+6]..[38,1873+21])
                                expression (middle_end/closure/closure_middle_end.ml[38,1873+24]..[38,1873+26])
                                  Pexp_construct "[]" (middle_end/closure/closure_middle_end.ml[38,1873+24]..[38,1873+26])
                                  None
                              "module_path" (middle_end/closure/closure_middle_end.ml[39,1901+6]..[39,1901+17])
                                expression (middle_end/closure/closure_middle_end.ml[40,1921+8]..[40,1921+78])
                                  Pexp_construct "Path.Pident" (middle_end/closure/closure_middle_end.ml[40,1921+8]..[40,1921+19])
                                  Some
                                    expression (middle_end/closure/closure_middle_end.ml[40,1921+20]..[40,1921+78])
                                      Pexp_apply
                                      expression (middle_end/closure/closure_middle_end.ml[40,1921+21]..[40,1921+44])
                                        Pexp_ident "Ident.create_persistent" (middle_end/closure/closure_middle_end.ml[40,1921+21]..[40,1921+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure_middle_end.ml[40,1921+45]..[40,1921+77])
                                            Pexp_apply
                                            expression (middle_end/closure/closure_middle_end.ml[40,1921+46]..[40,1921+73])
                                              Pexp_ident "Compilenv.current_unit_name" (middle_end/closure/closure_middle_end.ml[40,1921+46]..[40,1921+73])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure_middle_end.ml[40,1921+74]..[40,1921+76])
                                                  Pexp_construct "()" (middle_end/closure/closure_middle_end.ml[40,1921+74]..[40,1921+76])
                                                  None
                                            ]
                                      ]
                            ]
                            None
                          core_type (middle_end/closure/closure_middle_end.ml[37,1825+19]..[37,1825+45])
                            Ptyp_constr "Clambda.usymbol_provenance" (middle_end/closure/closure_middle_end.ml[37,1825+19]..[37,1825+45])
                            []
                    ]
                    expression (middle_end/closure/closure_middle_end.ml[43,2012+2]..[58,2485+23])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure_middle_end.ml[43,2012+6]..[43,2012+24])
                            Ppat_var "preallocated_block" (middle_end/closure/closure_middle_end.ml[43,2012+6]..[43,2012+24])
                          expression (middle_end/closure/closure_middle_end.ml[44,2039+4]..[50,2242+5])
                            Pexp_open Fresh
                            module_expr (middle_end/closure/closure_middle_end.ml[44,2039+4]..[44,2039+11])
                              Pmod_ident "Clambda" (middle_end/closure/closure_middle_end.ml[44,2039+4]..[44,2039+11])
                            expression (middle_end/closure/closure_middle_end.ml[44,2039+12]..[50,2242+5])
                              Pexp_record
                              [
                                "symbol" (middle_end/closure/closure_middle_end.ml[45,2053+6]..[45,2053+12])
                                  expression (middle_end/closure/closure_middle_end.ml[45,2053+15]..[45,2053+41])
                                    Pexp_apply
                                    expression (middle_end/closure/closure_middle_end.ml[45,2053+15]..[45,2053+36])
                                      Pexp_ident "Compilenv.make_symbol" (middle_end/closure/closure_middle_end.ml[45,2053+15]..[45,2053+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure_middle_end.ml[45,2053+37]..[45,2053+41])
                                          Pexp_construct "None" (middle_end/closure/closure_middle_end.ml[45,2053+37]..[45,2053+41])
                                          None
                                    ]
                                "exported" (middle_end/closure/closure_middle_end.ml[46,2096+6]..[46,2096+14])
                                  expression (middle_end/closure/closure_middle_end.ml[46,2096+17]..[46,2096+21])
                                    Pexp_construct "true" (middle_end/closure/closure_middle_end.ml[46,2096+17]..[46,2096+21])
                                    None
                                "tag" (middle_end/closure/closure_middle_end.ml[47,2119+6]..[47,2119+9])
                                  expression (middle_end/closure/closure_middle_end.ml[47,2119+12]..[47,2119+13])
                                    Pexp_constant PConst_int (0,None)
                                "fields" (middle_end/closure/closure_middle_end.ml[48,2134+6]..[48,2134+12])
                                  expression (middle_end/closure/closure_middle_end.ml[48,2134+15]..[48,2134+70])
                                    Pexp_apply
                                    expression (middle_end/closure/closure_middle_end.ml[48,2134+15]..[48,2134+24])
                                      Pexp_ident "List.init" (middle_end/closure/closure_middle_end.ml[48,2134+15]..[48,2134+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure_middle_end.ml[48,2134+25]..[48,2134+54])
                                          Pexp_field
                                          expression (middle_end/closure/closure_middle_end.ml[48,2134+25]..[48,2134+31])
                                            Pexp_ident "lambda" (middle_end/closure/closure_middle_end.ml[48,2134+25]..[48,2134+31])
                                          "main_module_block_size" (middle_end/closure/closure_middle_end.ml[48,2134+32]..[48,2134+54])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure_middle_end.ml[48,2134+55]..[48,2134+70])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure_middle_end.ml[48,2134+60]..[48,2134+61])
                                            Ppat_any
                                          expression (middle_end/closure/closure_middle_end.ml[48,2134+65]..[48,2134+69])
                                            Pexp_construct "None" (middle_end/closure/closure_middle_end.ml[48,2134+65]..[48,2134+69])
                                            None
                                    ]
                                "provenance" (middle_end/closure/closure_middle_end.ml[49,2206+6]..[49,2206+16])
                                  expression (middle_end/closure/closure_middle_end.ml[49,2206+19]..[49,2206+34])
                                    Pexp_construct "Some" (middle_end/closure/closure_middle_end.ml[49,2206+19]..[49,2206+23])
                                    Some
                                      expression (middle_end/closure/closure_middle_end.ml[49,2206+24]..[49,2206+34])
                                        Pexp_ident "provenance" (middle_end/closure/closure_middle_end.ml[49,2206+24]..[49,2206+34])
                              ]
                              None
                      ]
                      expression (middle_end/closure/closure_middle_end.ml[52,2253+2]..[58,2485+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure_middle_end.ml[52,2253+6]..[52,2253+15])
                              Ppat_var "constants" (middle_end/closure/closure_middle_end.ml[52,2253+6]..[52,2253+15])
                            expression (middle_end/closure/closure_middle_end.ml[52,2253+18]..[52,2253+51])
                              Pexp_apply
                              expression (middle_end/closure/closure_middle_end.ml[52,2253+18]..[52,2253+48])
                                Pexp_ident "Compilenv.structured_constants" (middle_end/closure/closure_middle_end.ml[52,2253+18]..[52,2253+48])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure_middle_end.ml[52,2253+49]..[52,2253+51])
                                    Pexp_construct "()" (middle_end/closure/closure_middle_end.ml[52,2253+49]..[52,2253+51])
                                    None
                              ]
                        ]
                        expression (middle_end/closure/closure_middle_end.ml[53,2308+2]..[58,2485+23])
                          Pexp_sequence
                          expression (middle_end/closure/closure_middle_end.ml[53,2308+2]..[53,2308+41])
                            Pexp_apply
                            expression (middle_end/closure/closure_middle_end.ml[53,2308+2]..[53,2308+38])
                              Pexp_ident "Compilenv.clear_structured_constants" (middle_end/closure/closure_middle_end.ml[53,2308+2]..[53,2308+38])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure_middle_end.ml[53,2308+39]..[53,2308+41])
                                  Pexp_construct "()" (middle_end/closure/closure_middle_end.ml[53,2308+39]..[53,2308+41])
                                  None
                            ]
                          expression (middle_end/closure/closure_middle_end.ml[54,2351+2]..[58,2485+23])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure_middle_end.ml[54,2351+6]..[54,2351+27])
                                  Ppat_var "clambda_and_constants" (middle_end/closure/closure_middle_end.ml[54,2351+6]..[54,2351+27])
                                expression (middle_end/closure/closure_middle_end.ml[55,2381+4]..[55,2381+44])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure_middle_end.ml[55,2381+4]..[55,2381+11])
                                      Pexp_ident "clambda" (middle_end/closure/closure_middle_end.ml[55,2381+4]..[55,2381+11])
                                    expression (middle_end/closure/closure_middle_end.ml[55,2381+13]..[55,2381+33])
                                      Pexp_construct "::" (middle_end/closure/closure_middle_end.ml[55,2381+14]..[55,2381+33]) ghost
                                      Some
                                        expression (middle_end/closure/closure_middle_end.ml[55,2381+14]..[55,2381+33]) ghost
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure_middle_end.ml[55,2381+14]..[55,2381+32])
                                              Pexp_ident "preallocated_block" (middle_end/closure/closure_middle_end.ml[55,2381+14]..[55,2381+32])
                                            expression (middle_end/closure/closure_middle_end.ml[55,2381+32]..[55,2381+33]) ghost
                                              Pexp_construct "[]" (middle_end/closure/closure_middle_end.ml[55,2381+32]..[55,2381+33]) ghost
                                              None
                                          ]
                                    expression (middle_end/closure/closure_middle_end.ml[55,2381+35]..[55,2381+44])
                                      Pexp_ident "constants" (middle_end/closure/closure_middle_end.ml[55,2381+35]..[55,2381+44])
                                  ]
                            ]
                            expression (middle_end/closure/closure_middle_end.ml[57,2431+2]..[58,2485+23])
                              Pexp_sequence
                              expression (middle_end/closure/closure_middle_end.ml[57,2431+2]..[57,2431+52])
                                Pexp_apply
                                expression (middle_end/closure/closure_middle_end.ml[57,2431+2]..[57,2431+21])
                                  Pexp_ident "raw_clambda_dump_if" (middle_end/closure/closure_middle_end.ml[57,2431+2]..[57,2431+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure_middle_end.ml[57,2431+22]..[57,2431+30])
                                      Pexp_ident "ppf_dump" (middle_end/closure/closure_middle_end.ml[57,2431+22]..[57,2431+30])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure_middle_end.ml[57,2431+31]..[57,2431+52])
                                      Pexp_ident "clambda_and_constants" (middle_end/closure/closure_middle_end.ml[57,2431+31]..[57,2431+52])
                                ]
                              expression (middle_end/closure/closure_middle_end.ml[58,2485+2]..[58,2485+23])
                                Pexp_ident "clambda_and_constants" (middle_end/closure/closure_middle_end.ml[58,2485+2]..[58,2485+23])
    ]
]

