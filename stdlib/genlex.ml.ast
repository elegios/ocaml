[
  structure_item (stdlib/genlex.ml[16,1079+0]..[16,1079+23])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (stdlib/genlex.ml[16,1079+18]..[16,1079+22])
        Pstr_eval
        expression (stdlib/genlex.ml[16,1079+18]..[16,1079+22])
          Pexp_constant PConst_string("-3",(stdlib/genlex.ml[16,1079+19]..[16,1079+21]),None)
    ]
  structure_item (stdlib/genlex.ml[18,1157+0]..[24,1263+16])
    Pstr_type Rec
    [
      type_declaration "token" (stdlib/genlex.ml[18,1157+5]..[18,1157+10]) (stdlib/genlex.ml[18,1157+0]..[24,1263+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/genlex.ml[19,1170+4]..[19,1170+17])
                "Kwd" (stdlib/genlex.ml[19,1170+4]..[19,1170+7])
                [
                  core_type (stdlib/genlex.ml[19,1170+11]..[19,1170+17])
                    Ptyp_constr "string" (stdlib/genlex.ml[19,1170+11]..[19,1170+17])
                    []
                ]
                None
              (stdlib/genlex.ml[20,1188+2]..[20,1188+19])
                "Ident" (stdlib/genlex.ml[20,1188+4]..[20,1188+9])
                [
                  core_type (stdlib/genlex.ml[20,1188+13]..[20,1188+19])
                    Ptyp_constr "string" (stdlib/genlex.ml[20,1188+13]..[20,1188+19])
                    []
                ]
                None
              (stdlib/genlex.ml[21,1208+2]..[21,1208+14])
                "Int" (stdlib/genlex.ml[21,1208+4]..[21,1208+7])
                [
                  core_type (stdlib/genlex.ml[21,1208+11]..[21,1208+14])
                    Ptyp_constr "int" (stdlib/genlex.ml[21,1208+11]..[21,1208+14])
                    []
                ]
                None
              (stdlib/genlex.ml[22,1223+2]..[22,1223+18])
                "Float" (stdlib/genlex.ml[22,1223+4]..[22,1223+9])
                [
                  core_type (stdlib/genlex.ml[22,1223+13]..[22,1223+18])
                    Ptyp_constr "float" (stdlib/genlex.ml[22,1223+13]..[22,1223+18])
                    []
                ]
                None
              (stdlib/genlex.ml[23,1242+2]..[23,1242+20])
                "String" (stdlib/genlex.ml[23,1242+4]..[23,1242+10])
                [
                  core_type (stdlib/genlex.ml[23,1242+14]..[23,1242+20])
                    Ptyp_constr "string" (stdlib/genlex.ml[23,1242+14]..[23,1242+20])
                    []
                ]
                None
              (stdlib/genlex.ml[24,1263+2]..[24,1263+16])
                "Char" (stdlib/genlex.ml[24,1263+4]..[24,1263+8])
                [
                  core_type (stdlib/genlex.ml[24,1263+12]..[24,1263+16])
                    Ptyp_constr "char" (stdlib/genlex.ml[24,1263+12]..[24,1263+16])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/genlex.ml[28,1319+0]..[28,1319+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[28,1319+4]..[28,1319+18])
          Ppat_var "initial_buffer" (stdlib/genlex.ml[28,1319+4]..[28,1319+18])
        expression (stdlib/genlex.ml[28,1319+21]..[28,1319+36])
          Pexp_apply
          expression (stdlib/genlex.ml[28,1319+21]..[28,1319+33])
            Pexp_ident "Bytes.create" (stdlib/genlex.ml[28,1319+21]..[28,1319+33])
          [
            <arg>
            Nolabel
              expression (stdlib/genlex.ml[28,1319+34]..[28,1319+36])
                Pexp_constant PConst_int (32,None)
          ]
    ]
  structure_item (stdlib/genlex.ml[30,1357+0]..[30,1357+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[30,1357+4]..[30,1357+10])
          Ppat_var "buffer" (stdlib/genlex.ml[30,1357+4]..[30,1357+10])
        expression (stdlib/genlex.ml[30,1357+13]..[30,1357+31])
          Pexp_apply
          expression (stdlib/genlex.ml[30,1357+13]..[30,1357+16])
            Pexp_ident "ref" (stdlib/genlex.ml[30,1357+13]..[30,1357+16])
          [
            <arg>
            Nolabel
              expression (stdlib/genlex.ml[30,1357+17]..[30,1357+31])
                Pexp_ident "initial_buffer" (stdlib/genlex.ml[30,1357+17]..[30,1357+31])
          ]
    ]
  structure_item (stdlib/genlex.ml[31,1389+0]..[31,1389+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[31,1389+4]..[31,1389+10])
          Ppat_var "bufpos" (stdlib/genlex.ml[31,1389+4]..[31,1389+10])
        expression (stdlib/genlex.ml[31,1389+13]..[31,1389+18])
          Pexp_apply
          expression (stdlib/genlex.ml[31,1389+13]..[31,1389+16])
            Pexp_ident "ref" (stdlib/genlex.ml[31,1389+13]..[31,1389+16])
          [
            <arg>
            Nolabel
              expression (stdlib/genlex.ml[31,1389+17]..[31,1389+18])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (stdlib/genlex.ml[33,1409+0]..[33,1409+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[33,1409+4]..[33,1409+16])
          Ppat_var "reset_buffer" (stdlib/genlex.ml[33,1409+4]..[33,1409+16])
        expression (stdlib/genlex.ml[33,1409+17]..[33,1409+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/genlex.ml[33,1409+17]..[33,1409+19])
            Ppat_construct "()" (stdlib/genlex.ml[33,1409+17]..[33,1409+19])
            None
          expression (stdlib/genlex.ml[33,1409+22]..[33,1409+59])
            Pexp_sequence
            expression (stdlib/genlex.ml[33,1409+22]..[33,1409+46])
              Pexp_apply
              expression (stdlib/genlex.ml[33,1409+29]..[33,1409+31])
                Pexp_ident ":=" (stdlib/genlex.ml[33,1409+29]..[33,1409+31])
              [
                <arg>
                Nolabel
                  expression (stdlib/genlex.ml[33,1409+22]..[33,1409+28])
                    Pexp_ident "buffer" (stdlib/genlex.ml[33,1409+22]..[33,1409+28])
                <arg>
                Nolabel
                  expression (stdlib/genlex.ml[33,1409+32]..[33,1409+46])
                    Pexp_ident "initial_buffer" (stdlib/genlex.ml[33,1409+32]..[33,1409+46])
              ]
            expression (stdlib/genlex.ml[33,1409+48]..[33,1409+59])
              Pexp_apply
              expression (stdlib/genlex.ml[33,1409+55]..[33,1409+57])
                Pexp_ident ":=" (stdlib/genlex.ml[33,1409+55]..[33,1409+57])
              [
                <arg>
                Nolabel
                  expression (stdlib/genlex.ml[33,1409+48]..[33,1409+54])
                    Pexp_ident "bufpos" (stdlib/genlex.ml[33,1409+48]..[33,1409+54])
                <arg>
                Nolabel
                  expression (stdlib/genlex.ml[33,1409+58]..[33,1409+59])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (stdlib/genlex.ml[35,1470+0]..[42,1690+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[35,1470+4]..[35,1470+9])
          Ppat_var "store" (stdlib/genlex.ml[35,1470+4]..[35,1470+9])
        expression (stdlib/genlex.ml[35,1470+10]..[42,1690+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/genlex.ml[35,1470+10]..[35,1470+11])
            Ppat_var "c" (stdlib/genlex.ml[35,1470+10]..[35,1470+11])
          expression (stdlib/genlex.ml[36,1484+2]..[42,1690+13])
            Pexp_sequence
            expression (stdlib/genlex.ml[36,1484+2]..[40,1652+5])
              Pexp_ifthenelse
              expression (stdlib/genlex.ml[36,1484+5]..[36,1484+36])
                Pexp_apply
                expression (stdlib/genlex.ml[36,1484+13]..[36,1484+15])
                  Pexp_ident ">=" (stdlib/genlex.ml[36,1484+13]..[36,1484+15])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[36,1484+5]..[36,1484+12])
                      Pexp_apply
                      expression (stdlib/genlex.ml[36,1484+5]..[36,1484+6])
                        Pexp_ident "!" (stdlib/genlex.ml[36,1484+5]..[36,1484+6])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[36,1484+6]..[36,1484+12])
                            Pexp_ident "bufpos" (stdlib/genlex.ml[36,1484+6]..[36,1484+12])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[36,1484+16]..[36,1484+36])
                      Pexp_apply
                      expression (stdlib/genlex.ml[36,1484+16]..[36,1484+28])
                        Pexp_ident "Bytes.length" (stdlib/genlex.ml[36,1484+16]..[36,1484+28])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[36,1484+29]..[36,1484+36])
                            Pexp_apply
                            expression (stdlib/genlex.ml[36,1484+29]..[36,1484+30])
                              Pexp_ident "!" (stdlib/genlex.ml[36,1484+29]..[36,1484+30])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[36,1484+30]..[36,1484+36])
                                  Pexp_ident "buffer" (stdlib/genlex.ml[36,1484+30]..[36,1484+36])
                            ]
                      ]
                ]
              expression (stdlib/genlex.ml[36,1484+42]..[40,1652+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/genlex.ml[37,1532+8]..[37,1532+17])
                      Ppat_var "newbuffer" (stdlib/genlex.ml[37,1532+8]..[37,1532+17])
                    expression (stdlib/genlex.ml[37,1532+20]..[37,1532+46])
                      Pexp_apply
                      expression (stdlib/genlex.ml[37,1532+20]..[37,1532+32])
                        Pexp_ident "Bytes.create" (stdlib/genlex.ml[37,1532+20]..[37,1532+32])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[37,1532+33]..[37,1532+46])
                            Pexp_apply
                            expression (stdlib/genlex.ml[37,1532+36]..[37,1532+37])
                              Pexp_ident "*" (stdlib/genlex.ml[37,1532+36]..[37,1532+37])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[37,1532+34]..[37,1532+35])
                                  Pexp_constant PConst_int (2,None)
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[37,1532+38]..[37,1532+45])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[37,1532+38]..[37,1532+39])
                                    Pexp_ident "!" (stdlib/genlex.ml[37,1532+38]..[37,1532+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[37,1532+39]..[37,1532+45])
                                        Pexp_ident "bufpos" (stdlib/genlex.ml[37,1532+39]..[37,1532+45])
                                  ]
                            ]
                      ]
                ]
                expression (stdlib/genlex.ml[38,1582+4]..[39,1628+23])
                  Pexp_sequence
                  expression (stdlib/genlex.ml[38,1582+4]..[38,1582+44])
                    Pexp_apply
                    expression (stdlib/genlex.ml[38,1582+4]..[38,1582+14])
                      Pexp_ident "Bytes.blit" (stdlib/genlex.ml[38,1582+4]..[38,1582+14])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[38,1582+15]..[38,1582+22])
                          Pexp_apply
                          expression (stdlib/genlex.ml[38,1582+15]..[38,1582+16])
                            Pexp_ident "!" (stdlib/genlex.ml[38,1582+15]..[38,1582+16])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/genlex.ml[38,1582+16]..[38,1582+22])
                                Pexp_ident "buffer" (stdlib/genlex.ml[38,1582+16]..[38,1582+22])
                          ]
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[38,1582+23]..[38,1582+24])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[38,1582+25]..[38,1582+34])
                          Pexp_ident "newbuffer" (stdlib/genlex.ml[38,1582+25]..[38,1582+34])
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[38,1582+35]..[38,1582+36])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[38,1582+37]..[38,1582+44])
                          Pexp_apply
                          expression (stdlib/genlex.ml[38,1582+37]..[38,1582+38])
                            Pexp_ident "!" (stdlib/genlex.ml[38,1582+37]..[38,1582+38])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/genlex.ml[38,1582+38]..[38,1582+44])
                                Pexp_ident "bufpos" (stdlib/genlex.ml[38,1582+38]..[38,1582+44])
                          ]
                    ]
                  expression (stdlib/genlex.ml[39,1628+4]..[39,1628+23])
                    Pexp_apply
                    expression (stdlib/genlex.ml[39,1628+11]..[39,1628+13])
                      Pexp_ident ":=" (stdlib/genlex.ml[39,1628+11]..[39,1628+13])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[39,1628+4]..[39,1628+10])
                          Pexp_ident "buffer" (stdlib/genlex.ml[39,1628+4]..[39,1628+10])
                      <arg>
                      Nolabel
                        expression (stdlib/genlex.ml[39,1628+14]..[39,1628+23])
                          Pexp_ident "newbuffer" (stdlib/genlex.ml[39,1628+14]..[39,1628+23])
                    ]
              None
            expression (stdlib/genlex.ml[41,1659+2]..[42,1690+13])
              Pexp_sequence
              expression (stdlib/genlex.ml[41,1659+2]..[41,1659+29])
                Pexp_apply
                expression (stdlib/genlex.ml[41,1659+2]..[41,1659+11])
                  Pexp_ident "Bytes.set" (stdlib/genlex.ml[41,1659+2]..[41,1659+11])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[41,1659+12]..[41,1659+19])
                      Pexp_apply
                      expression (stdlib/genlex.ml[41,1659+12]..[41,1659+13])
                        Pexp_ident "!" (stdlib/genlex.ml[41,1659+12]..[41,1659+13])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[41,1659+13]..[41,1659+19])
                            Pexp_ident "buffer" (stdlib/genlex.ml[41,1659+13]..[41,1659+19])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[41,1659+20]..[41,1659+27])
                      Pexp_apply
                      expression (stdlib/genlex.ml[41,1659+20]..[41,1659+21])
                        Pexp_ident "!" (stdlib/genlex.ml[41,1659+20]..[41,1659+21])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[41,1659+21]..[41,1659+27])
                            Pexp_ident "bufpos" (stdlib/genlex.ml[41,1659+21]..[41,1659+27])
                      ]
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[41,1659+28]..[41,1659+29])
                      Pexp_ident "c" (stdlib/genlex.ml[41,1659+28]..[41,1659+29])
                ]
              expression (stdlib/genlex.ml[42,1690+2]..[42,1690+13])
                Pexp_apply
                expression (stdlib/genlex.ml[42,1690+2]..[42,1690+6])
                  Pexp_ident "incr" (stdlib/genlex.ml[42,1690+2]..[42,1690+6])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[42,1690+7]..[42,1690+13])
                      Pexp_ident "bufpos" (stdlib/genlex.ml[42,1690+7]..[42,1690+13])
                ]
    ]
  structure_item (stdlib/genlex.ml[44,1705+0]..[45,1725+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[44,1705+4]..[44,1705+14])
          Ppat_var "get_string" (stdlib/genlex.ml[44,1705+4]..[44,1705+14])
        expression (stdlib/genlex.ml[44,1705+15]..[45,1725+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/genlex.ml[44,1705+15]..[44,1705+17])
            Ppat_construct "()" (stdlib/genlex.ml[44,1705+15]..[44,1705+17])
            None
          expression (stdlib/genlex.ml[45,1725+2]..[45,1725+75])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/genlex.ml[45,1725+6]..[45,1725+7])
                  Ppat_var "s" (stdlib/genlex.ml[45,1725+6]..[45,1725+7])
                expression (stdlib/genlex.ml[45,1725+10]..[45,1725+44])
                  Pexp_apply
                  expression (stdlib/genlex.ml[45,1725+10]..[45,1725+26])
                    Pexp_ident "Bytes.sub_string" (stdlib/genlex.ml[45,1725+10]..[45,1725+26])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/genlex.ml[45,1725+27]..[45,1725+34])
                        Pexp_apply
                        expression (stdlib/genlex.ml[45,1725+27]..[45,1725+28])
                          Pexp_ident "!" (stdlib/genlex.ml[45,1725+27]..[45,1725+28])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/genlex.ml[45,1725+28]..[45,1725+34])
                              Pexp_ident "buffer" (stdlib/genlex.ml[45,1725+28]..[45,1725+34])
                        ]
                    <arg>
                    Nolabel
                      expression (stdlib/genlex.ml[45,1725+35]..[45,1725+36])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (stdlib/genlex.ml[45,1725+37]..[45,1725+44])
                        Pexp_apply
                        expression (stdlib/genlex.ml[45,1725+37]..[45,1725+38])
                          Pexp_ident "!" (stdlib/genlex.ml[45,1725+37]..[45,1725+38])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/genlex.ml[45,1725+38]..[45,1725+44])
                              Pexp_ident "bufpos" (stdlib/genlex.ml[45,1725+38]..[45,1725+44])
                        ]
                  ]
            ]
            expression (stdlib/genlex.ml[45,1725+48]..[45,1725+75])
              Pexp_sequence
              expression (stdlib/genlex.ml[45,1725+48]..[45,1725+72])
                Pexp_apply
                expression (stdlib/genlex.ml[45,1725+55]..[45,1725+57])
                  Pexp_ident ":=" (stdlib/genlex.ml[45,1725+55]..[45,1725+57])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[45,1725+48]..[45,1725+54])
                      Pexp_ident "buffer" (stdlib/genlex.ml[45,1725+48]..[45,1725+54])
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[45,1725+58]..[45,1725+72])
                      Pexp_ident "initial_buffer" (stdlib/genlex.ml[45,1725+58]..[45,1725+72])
                ]
              expression (stdlib/genlex.ml[45,1725+74]..[45,1725+75])
                Pexp_ident "s" (stdlib/genlex.ml[45,1725+74]..[45,1725+75])
    ]
  structure_item (stdlib/genlex.ml[49,1819+0]..[203,8157+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/genlex.ml[49,1819+4]..[49,1819+14])
          Ppat_var "make_lexer" (stdlib/genlex.ml[49,1819+4]..[49,1819+14])
        expression (stdlib/genlex.ml[49,1819+15]..[203,8157+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/genlex.ml[49,1819+15]..[49,1819+23])
            Ppat_var "keywords" (stdlib/genlex.ml[49,1819+15]..[49,1819+23])
          expression (stdlib/genlex.ml[50,1845+2]..[203,8157+59])
            Pexp_let Nonrec
            [
              <def>
                pattern (stdlib/genlex.ml[50,1845+6]..[50,1845+15])
                  Ppat_var "kwd_table" (stdlib/genlex.ml[50,1845+6]..[50,1845+15])
                expression (stdlib/genlex.ml[50,1845+18]..[50,1845+35])
                  Pexp_apply
                  expression (stdlib/genlex.ml[50,1845+18]..[50,1845+32])
                    Pexp_ident "Hashtbl.create" (stdlib/genlex.ml[50,1845+18]..[50,1845+32])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/genlex.ml[50,1845+33]..[50,1845+35])
                        Pexp_constant PConst_int (17,None)
                  ]
            ]
            expression (stdlib/genlex.ml[51,1884+2]..[203,8157+59])
              Pexp_sequence
              expression (stdlib/genlex.ml[51,1884+2]..[51,1884+63])
                Pexp_apply
                expression (stdlib/genlex.ml[51,1884+2]..[51,1884+11])
                  Pexp_ident "List.iter" (stdlib/genlex.ml[51,1884+2]..[51,1884+11])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[51,1884+12]..[51,1884+54])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/genlex.ml[51,1884+17]..[51,1884+18])
                        Ppat_var "s" (stdlib/genlex.ml[51,1884+17]..[51,1884+18])
                      expression (stdlib/genlex.ml[51,1884+22]..[51,1884+53])
                        Pexp_apply
                        expression (stdlib/genlex.ml[51,1884+22]..[51,1884+33])
                          Pexp_ident "Hashtbl.add" (stdlib/genlex.ml[51,1884+22]..[51,1884+33])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/genlex.ml[51,1884+34]..[51,1884+43])
                              Pexp_ident "kwd_table" (stdlib/genlex.ml[51,1884+34]..[51,1884+43])
                          <arg>
                          Nolabel
                            expression (stdlib/genlex.ml[51,1884+44]..[51,1884+45])
                              Pexp_ident "s" (stdlib/genlex.ml[51,1884+44]..[51,1884+45])
                          <arg>
                          Nolabel
                            expression (stdlib/genlex.ml[51,1884+46]..[51,1884+53])
                              Pexp_construct "Kwd" (stdlib/genlex.ml[51,1884+47]..[51,1884+50])
                              Some
                                expression (stdlib/genlex.ml[51,1884+51]..[51,1884+52])
                                  Pexp_ident "s" (stdlib/genlex.ml[51,1884+51]..[51,1884+52])
                        ]
                  <arg>
                  Nolabel
                    expression (stdlib/genlex.ml[51,1884+55]..[51,1884+63])
                      Pexp_ident "keywords" (stdlib/genlex.ml[51,1884+55]..[51,1884+63])
                ]
              expression (stdlib/genlex.ml[52,1949+2]..[203,8157+59])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (stdlib/genlex.ml[52,1949+6]..[52,1949+22])
                      Ppat_var "ident_or_keyword" (stdlib/genlex.ml[52,1949+6]..[52,1949+22])
                    expression (stdlib/genlex.ml[52,1949+23]..[54,2016+27]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/genlex.ml[52,1949+23]..[52,1949+25])
                        Ppat_var "id" (stdlib/genlex.ml[52,1949+23]..[52,1949+25])
                      expression (stdlib/genlex.ml[53,1977+4]..[54,2016+27])
                        Pexp_try
                        expression (stdlib/genlex.ml[53,1977+8]..[53,1977+33])
                          Pexp_apply
                          expression (stdlib/genlex.ml[53,1977+8]..[53,1977+20])
                            Pexp_ident "Hashtbl.find" (stdlib/genlex.ml[53,1977+8]..[53,1977+20])
                          [
                            <arg>
                            Nolabel
                              expression (stdlib/genlex.ml[53,1977+21]..[53,1977+30])
                                Pexp_ident "kwd_table" (stdlib/genlex.ml[53,1977+21]..[53,1977+30])
                            <arg>
                            Nolabel
                              expression (stdlib/genlex.ml[53,1977+31]..[53,1977+33])
                                Pexp_ident "id" (stdlib/genlex.ml[53,1977+31]..[53,1977+33])
                          ]
                        [
                          <case>
                            pattern (stdlib/genlex.ml[54,2016+6]..[54,2016+15])
                              Ppat_construct "Not_found" (stdlib/genlex.ml[54,2016+6]..[54,2016+15])
                              None
                            expression (stdlib/genlex.ml[54,2016+19]..[54,2016+27])
                              Pexp_construct "Ident" (stdlib/genlex.ml[54,2016+19]..[54,2016+24])
                              Some
                                expression (stdlib/genlex.ml[54,2016+25]..[54,2016+27])
                                  Pexp_ident "id" (stdlib/genlex.ml[54,2016+25]..[54,2016+27])
                        ]
                  <def>
                    pattern (stdlib/genlex.ml[55,2044+6]..[55,2044+22])
                      Ppat_var "keyword_or_error" (stdlib/genlex.ml[55,2044+6]..[55,2044+22])
                    expression (stdlib/genlex.ml[55,2044+23]..[58,2140+66]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (stdlib/genlex.ml[55,2044+23]..[55,2044+24])
                        Ppat_var "c" (stdlib/genlex.ml[55,2044+23]..[55,2044+24])
                      expression (stdlib/genlex.ml[56,2071+4]..[58,2140+66])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (stdlib/genlex.ml[56,2071+8]..[56,2071+9])
                              Ppat_var "s" (stdlib/genlex.ml[56,2071+8]..[56,2071+9])
                            expression (stdlib/genlex.ml[56,2071+12]..[56,2071+27])
                              Pexp_apply
                              expression (stdlib/genlex.ml[56,2071+12]..[56,2071+23])
                                Pexp_ident "String.make" (stdlib/genlex.ml[56,2071+12]..[56,2071+23])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/genlex.ml[56,2071+24]..[56,2071+25])
                                    Pexp_constant PConst_int (1,None)
                                <arg>
                                Nolabel
                                  expression (stdlib/genlex.ml[56,2071+26]..[56,2071+27])
                                    Pexp_ident "c" (stdlib/genlex.ml[56,2071+26]..[56,2071+27])
                              ]
                        ]
                        expression (stdlib/genlex.ml[57,2102+4]..[58,2140+66])
                          Pexp_try
                          expression (stdlib/genlex.ml[57,2102+8]..[57,2102+32])
                            Pexp_apply
                            expression (stdlib/genlex.ml[57,2102+8]..[57,2102+20])
                              Pexp_ident "Hashtbl.find" (stdlib/genlex.ml[57,2102+8]..[57,2102+20])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[57,2102+21]..[57,2102+30])
                                  Pexp_ident "kwd_table" (stdlib/genlex.ml[57,2102+21]..[57,2102+30])
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[57,2102+31]..[57,2102+32])
                                  Pexp_ident "s" (stdlib/genlex.ml[57,2102+31]..[57,2102+32])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[58,2140+6]..[58,2140+15])
                                Ppat_construct "Not_found" (stdlib/genlex.ml[58,2140+6]..[58,2140+15])
                                None
                              expression (stdlib/genlex.ml[58,2140+19]..[58,2140+66])
                                Pexp_apply
                                expression (stdlib/genlex.ml[58,2140+19]..[58,2140+24])
                                  Pexp_ident "raise" (stdlib/genlex.ml[58,2140+19]..[58,2140+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[58,2140+25]..[58,2140+66])
                                      Pexp_construct "Stream.Error" (stdlib/genlex.ml[58,2140+26]..[58,2140+38])
                                      Some
                                        expression (stdlib/genlex.ml[58,2140+39]..[58,2140+65])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[58,2140+61]..[58,2140+62])
                                            Pexp_ident "^" (stdlib/genlex.ml[58,2140+61]..[58,2140+62])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[58,2140+40]..[58,2140+60])
                                                Pexp_constant PConst_string("Illegal character ",(stdlib/genlex.ml[58,2140+41]..[58,2140+59]),None)
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[58,2140+63]..[58,2140+64])
                                                Pexp_ident "s" (stdlib/genlex.ml[58,2140+63]..[58,2140+64])
                                          ]
                                ]
                          ]
                ]
                expression (stdlib/genlex.ml[60,2212+2]..[203,8157+59])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (stdlib/genlex.ml[60,2212+10]..[60,2212+20])
                        Ppat_var "next_token" (stdlib/genlex.ml[60,2212+10]..[60,2212+20])
                      expression (stdlib/genlex.ml[60,2212+21]..[91,3510+15]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[60,2212+21]..[60,2212+42])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[60,2212+22]..[60,2212+28])
                            Ppat_var "strm__" (stdlib/genlex.ml[60,2212+22]..[60,2212+28])
                          core_type (stdlib/genlex.ml[60,2212+31]..[60,2212+41])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[60,2212+33]..[60,2212+41])
                            [
                              core_type (stdlib/genlex.ml[60,2212+31]..[60,2212+32])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[61,2257+4]..[91,3510+15])
                          Pexp_match
                          expression (stdlib/genlex.ml[61,2257+10]..[61,2257+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[61,2257+10]..[61,2257+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[61,2257+10]..[61,2257+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[61,2257+22]..[61,2257+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[61,2257+22]..[61,2257+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[62,2291+6]..[62,2291+61])
                                Ppat_construct "Some" (stdlib/genlex.ml[62,2291+6]..[62,2291+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[62,2291+11]..[62,2291+61])
                                    Ppat_or
                                    pattern (stdlib/genlex.ml[62,2291+12]..[62,2291+51])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[62,2291+12]..[62,2291+42])
                                        Ppat_or
                                        pattern (stdlib/genlex.ml[62,2291+12]..[62,2291+33])
                                          Ppat_or
                                          pattern (stdlib/genlex.ml[62,2291+12]..[62,2291+24])
                                            Ppat_or
                                            pattern (stdlib/genlex.ml[62,2291+12]..[62,2291+15])
                                              Ppat_constant PConst_char 20
                                            pattern (stdlib/genlex.ml[62,2291+18]..[62,2291+24])
                                              Ppat_constant PConst_char 0a
                                          pattern (stdlib/genlex.ml[62,2291+27]..[62,2291+33])
                                            Ppat_constant PConst_char 0d
                                        pattern (stdlib/genlex.ml[62,2291+36]..[62,2291+42])
                                          Ppat_constant PConst_char 09
                                      pattern (stdlib/genlex.ml[62,2291+45]..[62,2291+51])
                                        Ppat_constant PConst_char 1a
                                    pattern (stdlib/genlex.ml[62,2291+54]..[62,2291+60])
                                      Ppat_constant PConst_char 0c
                              expression (stdlib/genlex.ml[63,2356+8]..[63,2356+45])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[63,2356+8]..[63,2356+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[63,2356+8]..[63,2356+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[63,2356+8]..[63,2356+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[63,2356+20]..[63,2356+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[63,2356+20]..[63,2356+26])
                                  ]
                                expression (stdlib/genlex.ml[63,2356+28]..[63,2356+45])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[63,2356+28]..[63,2356+38])
                                    Pexp_ident "next_token" (stdlib/genlex.ml[63,2356+28]..[63,2356+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[63,2356+39]..[63,2356+45])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[63,2356+39]..[63,2356+45])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[64,2402+6]..[64,2402+60])
                                Ppat_construct "Some" (stdlib/genlex.ml[64,2402+6]..[64,2402+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[64,2402+11]..[64,2402+60])
                                    Ppat_alias "c" (stdlib/genlex.ml[64,2402+58]..[64,2402+59])
                                    pattern (stdlib/genlex.ml[64,2402+12]..[64,2402+54])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[64,2402+12]..[64,2402+37])
                                        Ppat_or
                                        pattern (stdlib/genlex.ml[64,2402+12]..[64,2402+31])
                                          Ppat_or
                                          pattern (stdlib/genlex.ml[64,2402+12]..[64,2402+20])
                                            Ppat_interval PConst_char 41..PConst_char 5a
                                          pattern (stdlib/genlex.ml[64,2402+23]..[64,2402+31])
                                            Ppat_interval PConst_char 61..PConst_char 7a
                                        pattern (stdlib/genlex.ml[64,2402+34]..[64,2402+37])
                                          Ppat_constant PConst_char 5f
                                      pattern (stdlib/genlex.ml[64,2402+40]..[64,2402+54])
                                        Ppat_interval PConst_char c0..PConst_char ff
                              expression (stdlib/genlex.ml[65,2466+8]..[66,2494+59])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[65,2466+8]..[65,2466+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[65,2466+8]..[65,2466+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[65,2466+8]..[65,2466+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[65,2466+20]..[65,2466+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[65,2466+20]..[65,2466+26])
                                  ]
                                expression (stdlib/genlex.ml[66,2494+8]..[66,2494+59])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[66,2494+12]..[66,2494+13])
                                        Ppat_var "s" (stdlib/genlex.ml[66,2494+12]..[66,2494+13])
                                      expression (stdlib/genlex.ml[66,2494+16]..[66,2494+22])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[66,2494+16]..[66,2494+22])
                                  ]
                                  expression (stdlib/genlex.ml[66,2494+26]..[66,2494+59])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[66,2494+26]..[66,2494+41])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[66,2494+26]..[66,2494+38])
                                        Pexp_ident "reset_buffer" (stdlib/genlex.ml[66,2494+26]..[66,2494+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[66,2494+39]..[66,2494+41])
                                            Pexp_construct "()" (stdlib/genlex.ml[66,2494+39]..[66,2494+41])
                                            None
                                      ]
                                    expression (stdlib/genlex.ml[66,2494+43]..[66,2494+59])
                                      Pexp_sequence
                                      expression (stdlib/genlex.ml[66,2494+43]..[66,2494+50])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[66,2494+43]..[66,2494+48])
                                          Pexp_ident "store" (stdlib/genlex.ml[66,2494+43]..[66,2494+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[66,2494+49]..[66,2494+50])
                                              Pexp_ident "c" (stdlib/genlex.ml[66,2494+49]..[66,2494+50])
                                        ]
                                      expression (stdlib/genlex.ml[66,2494+52]..[66,2494+59])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[66,2494+52]..[66,2494+57])
                                          Pexp_ident "ident" (stdlib/genlex.ml[66,2494+52]..[66,2494+57])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[66,2494+58]..[66,2494+59])
                                              Pexp_ident "s" (stdlib/genlex.ml[66,2494+58]..[66,2494+59])
                                        ]
                            <case>
                              pattern (stdlib/genlex.ml[67,2554+6]..[69,2640+55])
                                Ppat_construct "Some" (stdlib/genlex.ml[67,2554+6]..[67,2554+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[68,2565+8]..[69,2640+55])
                                    Ppat_alias "c" (stdlib/genlex.ml[69,2640+53]..[69,2640+54])
                                    pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+49])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+43])
                                        Ppat_or
                                        pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+37])
                                          Ppat_or
                                          pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+31])
                                            Ppat_or
                                            pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+25])
                                              Ppat_or
                                              pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+18])
                                                Ppat_or
                                                pattern (stdlib/genlex.ml[68,2565+9]..[69,2640+12])
                                                  Ppat_or
                                                  pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+72])
                                                    Ppat_or
                                                    pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+66])
                                                      Ppat_or
                                                      pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+60])
                                                        Ppat_or
                                                        pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+54])
                                                          Ppat_or
                                                          pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+48])
                                                            Ppat_or
                                                            pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+42])
                                                              Ppat_or
                                                              pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+36])
                                                                Ppat_or
                                                                pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+30])
                                                                  Ppat_or
                                                                  pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+24])
                                                                    Ppat_or
                                                                    pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+18])
                                                                      Ppat_or
                                                                      pattern (stdlib/genlex.ml[68,2565+9]..[68,2565+12])
Ppat_constant PConst_char 21
                                                                      pattern (stdlib/genlex.ml[68,2565+15]..[68,2565+18])
Ppat_constant PConst_char 25
                                                                    pattern (stdlib/genlex.ml[68,2565+21]..[68,2565+24])
                                                                      Ppat_constant PConst_char 26
                                                                  pattern (stdlib/genlex.ml[68,2565+27]..[68,2565+30])
                                                                    Ppat_constant PConst_char 24
                                                                pattern (stdlib/genlex.ml[68,2565+33]..[68,2565+36])
                                                                  Ppat_constant PConst_char 23
                                                              pattern (stdlib/genlex.ml[68,2565+39]..[68,2565+42])
                                                                Ppat_constant PConst_char 2b
                                                            pattern (stdlib/genlex.ml[68,2565+45]..[68,2565+48])
                                                              Ppat_constant PConst_char 2f
                                                          pattern (stdlib/genlex.ml[68,2565+51]..[68,2565+54])
                                                            Ppat_constant PConst_char 3a
                                                        pattern (stdlib/genlex.ml[68,2565+57]..[68,2565+60])
                                                          Ppat_constant PConst_char 3c
                                                      pattern (stdlib/genlex.ml[68,2565+63]..[68,2565+66])
                                                        Ppat_constant PConst_char 3d
                                                    pattern (stdlib/genlex.ml[68,2565+69]..[68,2565+72])
                                                      Ppat_constant PConst_char 3e
                                                  pattern (stdlib/genlex.ml[69,2640+9]..[69,2640+12])
                                                    Ppat_constant PConst_char 3f
                                                pattern (stdlib/genlex.ml[69,2640+15]..[69,2640+18])
                                                  Ppat_constant PConst_char 40
                                              pattern (stdlib/genlex.ml[69,2640+21]..[69,2640+25])
                                                Ppat_constant PConst_char 5c
                                            pattern (stdlib/genlex.ml[69,2640+28]..[69,2640+31])
                                              Ppat_constant PConst_char 7e
                                          pattern (stdlib/genlex.ml[69,2640+34]..[69,2640+37])
                                            Ppat_constant PConst_char 5e
                                        pattern (stdlib/genlex.ml[69,2640+40]..[69,2640+43])
                                          Ppat_constant PConst_char 7c
                                      pattern (stdlib/genlex.ml[69,2640+46]..[69,2640+49])
                                        Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[70,2699+8]..[71,2727+60])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[70,2699+8]..[70,2699+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[70,2699+8]..[70,2699+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[70,2699+8]..[70,2699+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[70,2699+20]..[70,2699+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[70,2699+20]..[70,2699+26])
                                  ]
                                expression (stdlib/genlex.ml[71,2727+8]..[71,2727+60])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[71,2727+12]..[71,2727+13])
                                        Ppat_var "s" (stdlib/genlex.ml[71,2727+12]..[71,2727+13])
                                      expression (stdlib/genlex.ml[71,2727+16]..[71,2727+22])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[71,2727+16]..[71,2727+22])
                                  ]
                                  expression (stdlib/genlex.ml[71,2727+26]..[71,2727+60])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[71,2727+26]..[71,2727+41])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[71,2727+26]..[71,2727+38])
                                        Pexp_ident "reset_buffer" (stdlib/genlex.ml[71,2727+26]..[71,2727+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[71,2727+39]..[71,2727+41])
                                            Pexp_construct "()" (stdlib/genlex.ml[71,2727+39]..[71,2727+41])
                                            None
                                      ]
                                    expression (stdlib/genlex.ml[71,2727+43]..[71,2727+60])
                                      Pexp_sequence
                                      expression (stdlib/genlex.ml[71,2727+43]..[71,2727+50])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[71,2727+43]..[71,2727+48])
                                          Pexp_ident "store" (stdlib/genlex.ml[71,2727+43]..[71,2727+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[71,2727+49]..[71,2727+50])
                                              Pexp_ident "c" (stdlib/genlex.ml[71,2727+49]..[71,2727+50])
                                        ]
                                      expression (stdlib/genlex.ml[71,2727+52]..[71,2727+60])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[71,2727+52]..[71,2727+58])
                                          Pexp_ident "ident2" (stdlib/genlex.ml[71,2727+52]..[71,2727+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[71,2727+59]..[71,2727+60])
                                              Pexp_ident "s" (stdlib/genlex.ml[71,2727+59]..[71,2727+60])
                                        ]
                            <case>
                              pattern (stdlib/genlex.ml[72,2788+6]..[72,2788+26])
                                Ppat_construct "Some" (stdlib/genlex.ml[72,2788+6]..[72,2788+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[72,2788+11]..[72,2788+26])
                                    Ppat_alias "c" (stdlib/genlex.ml[72,2788+24]..[72,2788+25])
                                    pattern (stdlib/genlex.ml[72,2788+12]..[72,2788+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[73,2818+8]..[74,2846+60])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[73,2818+8]..[73,2818+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[73,2818+8]..[73,2818+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[73,2818+8]..[73,2818+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[73,2818+20]..[73,2818+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[73,2818+20]..[73,2818+26])
                                  ]
                                expression (stdlib/genlex.ml[74,2846+8]..[74,2846+60])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[74,2846+12]..[74,2846+13])
                                        Ppat_var "s" (stdlib/genlex.ml[74,2846+12]..[74,2846+13])
                                      expression (stdlib/genlex.ml[74,2846+16]..[74,2846+22])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[74,2846+16]..[74,2846+22])
                                  ]
                                  expression (stdlib/genlex.ml[74,2846+26]..[74,2846+60])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[74,2846+26]..[74,2846+41])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[74,2846+26]..[74,2846+38])
                                        Pexp_ident "reset_buffer" (stdlib/genlex.ml[74,2846+26]..[74,2846+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[74,2846+39]..[74,2846+41])
                                            Pexp_construct "()" (stdlib/genlex.ml[74,2846+39]..[74,2846+41])
                                            None
                                      ]
                                    expression (stdlib/genlex.ml[74,2846+43]..[74,2846+60])
                                      Pexp_sequence
                                      expression (stdlib/genlex.ml[74,2846+43]..[74,2846+50])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[74,2846+43]..[74,2846+48])
                                          Pexp_ident "store" (stdlib/genlex.ml[74,2846+43]..[74,2846+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[74,2846+49]..[74,2846+50])
                                              Pexp_ident "c" (stdlib/genlex.ml[74,2846+49]..[74,2846+50])
                                        ]
                                      expression (stdlib/genlex.ml[74,2846+52]..[74,2846+60])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[74,2846+52]..[74,2846+58])
                                          Pexp_ident "number" (stdlib/genlex.ml[74,2846+52]..[74,2846+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[74,2846+59]..[74,2846+60])
                                              Pexp_ident "s" (stdlib/genlex.ml[74,2846+59]..[74,2846+60])
                                        ]
                            <case>
                              pattern (stdlib/genlex.ml[75,2907+6]..[75,2907+15])
                                Ppat_construct "Some" (stdlib/genlex.ml[75,2907+6]..[75,2907+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[75,2907+11]..[75,2907+15])
                                    Ppat_constant PConst_char 27
                              expression (stdlib/genlex.ml[76,2926+8]..[84,3206+11])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[76,2926+8]..[76,2926+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[76,2926+8]..[76,2926+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[76,2926+8]..[76,2926+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[76,2926+20]..[76,2926+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[76,2926+20]..[76,2926+26])
                                  ]
                                expression (stdlib/genlex.ml[77,2954+8]..[84,3206+11])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[77,2954+12]..[77,2954+13])
                                        Ppat_var "c" (stdlib/genlex.ml[77,2954+12]..[77,2954+13])
                                      expression (stdlib/genlex.ml[78,2970+10]..[79,3001+53])
                                        Pexp_try
                                        expression (stdlib/genlex.ml[78,2970+14]..[78,2970+25])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[78,2970+14]..[78,2970+18])
                                            Pexp_ident "char" (stdlib/genlex.ml[78,2970+14]..[78,2970+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[78,2970+19]..[78,2970+25])
                                                Pexp_ident "strm__" (stdlib/genlex.ml[78,2970+19]..[78,2970+25])
                                          ]
                                        [
                                          <case>
                                            pattern (stdlib/genlex.ml[79,3001+12]..[79,3001+26])
                                              Ppat_construct "Stream.Failure" (stdlib/genlex.ml[79,3001+12]..[79,3001+26])
                                              None
                                            expression (stdlib/genlex.ml[79,3001+30]..[79,3001+53])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[79,3001+30]..[79,3001+35])
                                                Pexp_ident "raise" (stdlib/genlex.ml[79,3001+30]..[79,3001+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[79,3001+36]..[79,3001+53])
                                                    Pexp_construct "Stream.Error" (stdlib/genlex.ml[79,3001+37]..[79,3001+49])
                                                    Some
                                                      expression (stdlib/genlex.ml[79,3001+50]..[79,3001+52])
                                                        Pexp_constant PConst_string("",(stdlib/genlex.ml[79,3001+51]..[79,3001+51]),None)
                                              ]
                                        ]
                                  ]
                                  expression (stdlib/genlex.ml[81,3066+8]..[84,3206+11])
                                    Pexp_match
                                    expression (stdlib/genlex.ml[81,3066+20]..[81,3066+38])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[81,3066+20]..[81,3066+31])
                                        Pexp_ident "Stream.peek" (stdlib/genlex.ml[81,3066+20]..[81,3066+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[81,3066+32]..[81,3066+38])
                                            Pexp_ident "strm__" (stdlib/genlex.ml[81,3066+32]..[81,3066+38])
                                      ]
                                    [
                                      <case>
                                        pattern (stdlib/genlex.ml[82,3110+10]..[82,3110+19])
                                          Ppat_construct "Some" (stdlib/genlex.ml[82,3110+10]..[82,3110+14])
                                          Some
                                            []
                                            pattern (stdlib/genlex.ml[82,3110+15]..[82,3110+19])
                                              Ppat_constant PConst_char 27
                                        expression (stdlib/genlex.ml[82,3110+23]..[82,3110+56])
                                          Pexp_sequence
                                          expression (stdlib/genlex.ml[82,3110+23]..[82,3110+41])
                                            Pexp_apply
                                            expression (stdlib/genlex.ml[82,3110+23]..[82,3110+34])
                                              Pexp_ident "Stream.junk" (stdlib/genlex.ml[82,3110+23]..[82,3110+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/genlex.ml[82,3110+35]..[82,3110+41])
                                                  Pexp_ident "strm__" (stdlib/genlex.ml[82,3110+35]..[82,3110+41])
                                            ]
                                          expression (stdlib/genlex.ml[82,3110+43]..[82,3110+56])
                                            Pexp_construct "Some" (stdlib/genlex.ml[82,3110+43]..[82,3110+47])
                                            Some
                                              expression (stdlib/genlex.ml[82,3110+48]..[82,3110+56])
                                                Pexp_construct "Char" (stdlib/genlex.ml[82,3110+49]..[82,3110+53])
                                                Some
                                                  expression (stdlib/genlex.ml[82,3110+54]..[82,3110+55])
                                                    Pexp_ident "c" (stdlib/genlex.ml[82,3110+54]..[82,3110+55])
                                      <case>
                                        pattern (stdlib/genlex.ml[83,3167+10]..[83,3167+11])
                                          Ppat_any
                                        expression (stdlib/genlex.ml[83,3167+15]..[83,3167+38])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[83,3167+15]..[83,3167+20])
                                            Pexp_ident "raise" (stdlib/genlex.ml[83,3167+15]..[83,3167+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[83,3167+21]..[83,3167+38])
                                                Pexp_construct "Stream.Error" (stdlib/genlex.ml[83,3167+22]..[83,3167+34])
                                                Some
                                                  expression (stdlib/genlex.ml[83,3167+35]..[83,3167+37])
                                                    Pexp_constant PConst_string("",(stdlib/genlex.ml[83,3167+36]..[83,3167+36]),None)
                                          ]
                                    ]
                            <case>
                              pattern (stdlib/genlex.ml[85,3218+6]..[85,3218+15])
                                Ppat_construct "Some" (stdlib/genlex.ml[85,3218+6]..[85,3218+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[85,3218+11]..[85,3218+15])
                                    Ppat_constant PConst_char 22
                              expression (stdlib/genlex.ml[86,3237+8]..[87,3265+67])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[86,3237+8]..[86,3237+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[86,3237+8]..[86,3237+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[86,3237+8]..[86,3237+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[86,3237+20]..[86,3237+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[86,3237+20]..[86,3237+26])
                                  ]
                                expression (stdlib/genlex.ml[87,3265+8]..[87,3265+67])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[87,3265+12]..[87,3265+13])
                                        Ppat_var "s" (stdlib/genlex.ml[87,3265+12]..[87,3265+13])
                                      expression (stdlib/genlex.ml[87,3265+16]..[87,3265+22])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[87,3265+16]..[87,3265+22])
                                  ]
                                  expression (stdlib/genlex.ml[87,3265+26]..[87,3265+67])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[87,3265+26]..[87,3265+41])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[87,3265+26]..[87,3265+38])
                                        Pexp_ident "reset_buffer" (stdlib/genlex.ml[87,3265+26]..[87,3265+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[87,3265+39]..[87,3265+41])
                                            Pexp_construct "()" (stdlib/genlex.ml[87,3265+39]..[87,3265+41])
                                            None
                                      ]
                                    expression (stdlib/genlex.ml[87,3265+43]..[87,3265+67])
                                      Pexp_construct "Some" (stdlib/genlex.ml[87,3265+43]..[87,3265+47])
                                      Some
                                        expression (stdlib/genlex.ml[87,3265+48]..[87,3265+67])
                                          Pexp_construct "String" (stdlib/genlex.ml[87,3265+49]..[87,3265+55])
                                          Some
                                            expression (stdlib/genlex.ml[87,3265+56]..[87,3265+66])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[87,3265+57]..[87,3265+63])
                                                Pexp_ident "string" (stdlib/genlex.ml[87,3265+57]..[87,3265+63])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[87,3265+64]..[87,3265+65])
                                                    Pexp_ident "s" (stdlib/genlex.ml[87,3265+64]..[87,3265+65])
                                              ]
                            <case>
                              pattern (stdlib/genlex.ml[88,3333+6]..[88,3333+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[88,3333+6]..[88,3333+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[88,3333+11]..[88,3333+14])
                                    Ppat_constant PConst_char 2d
                              expression (stdlib/genlex.ml[88,3333+18]..[88,3333+55])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[88,3333+18]..[88,3333+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[88,3333+18]..[88,3333+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[88,3333+18]..[88,3333+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[88,3333+30]..[88,3333+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[88,3333+30]..[88,3333+36])
                                  ]
                                expression (stdlib/genlex.ml[88,3333+38]..[88,3333+55])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[88,3333+38]..[88,3333+48])
                                    Pexp_ident "neg_number" (stdlib/genlex.ml[88,3333+38]..[88,3333+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[88,3333+49]..[88,3333+55])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[88,3333+49]..[88,3333+55])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[89,3389+6]..[89,3389+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[89,3389+6]..[89,3389+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[89,3389+11]..[89,3389+14])
                                    Ppat_constant PConst_char 28
                              expression (stdlib/genlex.ml[89,3389+18]..[89,3389+58])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[89,3389+18]..[89,3389+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[89,3389+18]..[89,3389+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[89,3389+18]..[89,3389+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[89,3389+30]..[89,3389+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[89,3389+30]..[89,3389+36])
                                  ]
                                expression (stdlib/genlex.ml[89,3389+38]..[89,3389+58])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[89,3389+38]..[89,3389+51])
                                    Pexp_ident "maybe_comment" (stdlib/genlex.ml[89,3389+38]..[89,3389+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[89,3389+52]..[89,3389+58])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[89,3389+52]..[89,3389+58])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[90,3448+6]..[90,3448+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[90,3448+6]..[90,3448+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[90,3448+11]..[90,3448+12])
                                    Ppat_var "c" (stdlib/genlex.ml[90,3448+11]..[90,3448+12])
                              expression (stdlib/genlex.ml[90,3448+16]..[90,3448+61])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[90,3448+16]..[90,3448+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[90,3448+16]..[90,3448+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[90,3448+16]..[90,3448+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[90,3448+28]..[90,3448+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[90,3448+28]..[90,3448+34])
                                  ]
                                expression (stdlib/genlex.ml[90,3448+36]..[90,3448+61])
                                  Pexp_construct "Some" (stdlib/genlex.ml[90,3448+36]..[90,3448+40])
                                  Some
                                    expression (stdlib/genlex.ml[90,3448+41]..[90,3448+61])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[90,3448+42]..[90,3448+58])
                                        Pexp_ident "keyword_or_error" (stdlib/genlex.ml[90,3448+42]..[90,3448+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[90,3448+59]..[90,3448+60])
                                            Pexp_ident "c" (stdlib/genlex.ml[90,3448+59]..[90,3448+60])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[91,3510+6]..[91,3510+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[91,3510+11]..[91,3510+15])
                                Pexp_construct "None" (stdlib/genlex.ml[91,3510+11]..[91,3510+15])
                                None
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[92,3526+6]..[92,3526+11])
                        Ppat_var "ident" (stdlib/genlex.ml[92,3526+6]..[92,3526+11])
                      expression (stdlib/genlex.ml[92,3526+12]..[97,3749+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[92,3526+12]..[92,3526+33])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[92,3526+13]..[92,3526+19])
                            Ppat_var "strm__" (stdlib/genlex.ml[92,3526+13]..[92,3526+19])
                          core_type (stdlib/genlex.ml[92,3526+22]..[92,3526+32])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[92,3526+24]..[92,3526+32])
                            [
                              core_type (stdlib/genlex.ml[92,3526+22]..[92,3526+23])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[93,3562+4]..[97,3749+50])
                          Pexp_match
                          expression (stdlib/genlex.ml[93,3562+10]..[93,3562+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[93,3562+10]..[93,3562+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[93,3562+10]..[93,3562+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[93,3562+22]..[93,3562+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[93,3562+22]..[93,3562+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[94,3596+6]..[95,3607+75])
                                Ppat_construct "Some" (stdlib/genlex.ml[94,3596+6]..[94,3596+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[95,3607+8]..[95,3607+75])
                                    Ppat_alias "c" (stdlib/genlex.ml[95,3607+73]..[95,3607+74])
                                    pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+69])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+62])
                                        Ppat_or
                                        pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+56])
                                          Ppat_or
                                          pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+45])
                                            Ppat_or
                                            pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+28])
                                              Ppat_or
                                              pattern (stdlib/genlex.ml[95,3607+9]..[95,3607+17])
                                                Ppat_interval PConst_char 41..PConst_char 5a
                                              pattern (stdlib/genlex.ml[95,3607+20]..[95,3607+28])
                                                Ppat_interval PConst_char 61..PConst_char 7a
                                            pattern (stdlib/genlex.ml[95,3607+31]..[95,3607+45])
                                              Ppat_interval PConst_char c0..PConst_char ff
                                          pattern (stdlib/genlex.ml[95,3607+48]..[95,3607+56])
                                            Ppat_interval PConst_char 30..PConst_char 39
                                        pattern (stdlib/genlex.ml[95,3607+59]..[95,3607+62])
                                          Ppat_constant PConst_char 5f
                                      pattern (stdlib/genlex.ml[95,3607+65]..[95,3607+69])
                                        Ppat_constant PConst_char 27
                              expression (stdlib/genlex.ml[96,3686+8]..[96,3686+62])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[96,3686+8]..[96,3686+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[96,3686+8]..[96,3686+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[96,3686+8]..[96,3686+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[96,3686+20]..[96,3686+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[96,3686+20]..[96,3686+26])
                                  ]
                                expression (stdlib/genlex.ml[96,3686+28]..[96,3686+62])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[96,3686+32]..[96,3686+33])
                                        Ppat_var "s" (stdlib/genlex.ml[96,3686+32]..[96,3686+33])
                                      expression (stdlib/genlex.ml[96,3686+36]..[96,3686+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[96,3686+36]..[96,3686+42])
                                  ]
                                  expression (stdlib/genlex.ml[96,3686+46]..[96,3686+62])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[96,3686+46]..[96,3686+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[96,3686+46]..[96,3686+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[96,3686+46]..[96,3686+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[96,3686+52]..[96,3686+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[96,3686+52]..[96,3686+53])
                                      ]
                                    expression (stdlib/genlex.ml[96,3686+55]..[96,3686+62])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[96,3686+55]..[96,3686+60])
                                        Pexp_ident "ident" (stdlib/genlex.ml[96,3686+55]..[96,3686+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[96,3686+61]..[96,3686+62])
                                            Pexp_ident "s" (stdlib/genlex.ml[96,3686+61]..[96,3686+62])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[97,3749+6]..[97,3749+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[97,3749+11]..[97,3749+50])
                                Pexp_construct "Some" (stdlib/genlex.ml[97,3749+11]..[97,3749+15])
                                Some
                                  expression (stdlib/genlex.ml[97,3749+16]..[97,3749+50])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[97,3749+17]..[97,3749+33])
                                      Pexp_ident "ident_or_keyword" (stdlib/genlex.ml[97,3749+17]..[97,3749+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[97,3749+34]..[97,3749+49])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[97,3749+35]..[97,3749+45])
                                            Pexp_ident "get_string" (stdlib/genlex.ml[97,3749+35]..[97,3749+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[97,3749+46]..[97,3749+48])
                                                Pexp_construct "()" (stdlib/genlex.ml[97,3749+46]..[97,3749+48])
                                                None
                                          ]
                                    ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[98,3800+6]..[98,3800+12])
                        Ppat_var "ident2" (stdlib/genlex.ml[98,3800+6]..[98,3800+12])
                      expression (stdlib/genlex.ml[98,3800+13]..[104,4086+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[98,3800+13]..[98,3800+34])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[98,3800+14]..[98,3800+20])
                            Ppat_var "strm__" (stdlib/genlex.ml[98,3800+14]..[98,3800+20])
                          core_type (stdlib/genlex.ml[98,3800+23]..[98,3800+33])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[98,3800+25]..[98,3800+33])
                            [
                              core_type (stdlib/genlex.ml[98,3800+23]..[98,3800+24])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[99,3837+4]..[104,4086+50])
                          Pexp_match
                          expression (stdlib/genlex.ml[99,3837+10]..[99,3837+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[99,3837+10]..[99,3837+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[99,3837+10]..[99,3837+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[99,3837+22]..[99,3837+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[99,3837+22]..[99,3837+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[100,3871+6]..[102,3957+61])
                                Ppat_construct "Some" (stdlib/genlex.ml[100,3871+6]..[100,3871+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[101,3882+8]..[102,3957+61])
                                    Ppat_alias "c" (stdlib/genlex.ml[102,3957+59]..[102,3957+60])
                                    pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+55])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+49])
                                        Ppat_or
                                        pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+43])
                                          Ppat_or
                                          pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+37])
                                            Ppat_or
                                            pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+31])
                                              Ppat_or
                                              pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+24])
                                                Ppat_or
                                                pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+18])
                                                  Ppat_or
                                                  pattern (stdlib/genlex.ml[101,3882+9]..[102,3957+12])
                                                    Ppat_or
                                                    pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+72])
                                                      Ppat_or
                                                      pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+66])
                                                        Ppat_or
                                                        pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+60])
                                                          Ppat_or
                                                          pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+54])
                                                            Ppat_or
                                                            pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+48])
                                                              Ppat_or
                                                              pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+42])
                                                                Ppat_or
                                                                pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+36])
                                                                  Ppat_or
                                                                  pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+30])
                                                                    Ppat_or
                                                                    pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+24])
                                                                      Ppat_or
                                                                      pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+18])
Ppat_or
pattern (stdlib/genlex.ml[101,3882+9]..[101,3882+12])
  Ppat_constant PConst_char 21
pattern (stdlib/genlex.ml[101,3882+15]..[101,3882+18])
  Ppat_constant PConst_char 25
                                                                      pattern (stdlib/genlex.ml[101,3882+21]..[101,3882+24])
Ppat_constant PConst_char 26
                                                                    pattern (stdlib/genlex.ml[101,3882+27]..[101,3882+30])
                                                                      Ppat_constant PConst_char 24
                                                                  pattern (stdlib/genlex.ml[101,3882+33]..[101,3882+36])
                                                                    Ppat_constant PConst_char 23
                                                                pattern (stdlib/genlex.ml[101,3882+39]..[101,3882+42])
                                                                  Ppat_constant PConst_char 2b
                                                              pattern (stdlib/genlex.ml[101,3882+45]..[101,3882+48])
                                                                Ppat_constant PConst_char 2d
                                                            pattern (stdlib/genlex.ml[101,3882+51]..[101,3882+54])
                                                              Ppat_constant PConst_char 2f
                                                          pattern (stdlib/genlex.ml[101,3882+57]..[101,3882+60])
                                                            Ppat_constant PConst_char 3a
                                                        pattern (stdlib/genlex.ml[101,3882+63]..[101,3882+66])
                                                          Ppat_constant PConst_char 3c
                                                      pattern (stdlib/genlex.ml[101,3882+69]..[101,3882+72])
                                                        Ppat_constant PConst_char 3d
                                                    pattern (stdlib/genlex.ml[102,3957+9]..[102,3957+12])
                                                      Ppat_constant PConst_char 3e
                                                  pattern (stdlib/genlex.ml[102,3957+15]..[102,3957+18])
                                                    Ppat_constant PConst_char 3f
                                                pattern (stdlib/genlex.ml[102,3957+21]..[102,3957+24])
                                                  Ppat_constant PConst_char 40
                                              pattern (stdlib/genlex.ml[102,3957+27]..[102,3957+31])
                                                Ppat_constant PConst_char 5c
                                            pattern (stdlib/genlex.ml[102,3957+34]..[102,3957+37])
                                              Ppat_constant PConst_char 7e
                                          pattern (stdlib/genlex.ml[102,3957+40]..[102,3957+43])
                                            Ppat_constant PConst_char 5e
                                        pattern (stdlib/genlex.ml[102,3957+46]..[102,3957+49])
                                          Ppat_constant PConst_char 7c
                                      pattern (stdlib/genlex.ml[102,3957+52]..[102,3957+55])
                                        Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[103,4022+8]..[103,4022+63])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[103,4022+8]..[103,4022+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[103,4022+8]..[103,4022+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[103,4022+8]..[103,4022+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[103,4022+20]..[103,4022+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[103,4022+20]..[103,4022+26])
                                  ]
                                expression (stdlib/genlex.ml[103,4022+28]..[103,4022+63])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[103,4022+32]..[103,4022+33])
                                        Ppat_var "s" (stdlib/genlex.ml[103,4022+32]..[103,4022+33])
                                      expression (stdlib/genlex.ml[103,4022+36]..[103,4022+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[103,4022+36]..[103,4022+42])
                                  ]
                                  expression (stdlib/genlex.ml[103,4022+46]..[103,4022+63])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[103,4022+46]..[103,4022+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[103,4022+46]..[103,4022+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[103,4022+46]..[103,4022+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[103,4022+52]..[103,4022+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[103,4022+52]..[103,4022+53])
                                      ]
                                    expression (stdlib/genlex.ml[103,4022+55]..[103,4022+63])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[103,4022+55]..[103,4022+61])
                                        Pexp_ident "ident2" (stdlib/genlex.ml[103,4022+55]..[103,4022+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[103,4022+62]..[103,4022+63])
                                            Pexp_ident "s" (stdlib/genlex.ml[103,4022+62]..[103,4022+63])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[104,4086+6]..[104,4086+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[104,4086+11]..[104,4086+50])
                                Pexp_construct "Some" (stdlib/genlex.ml[104,4086+11]..[104,4086+15])
                                Some
                                  expression (stdlib/genlex.ml[104,4086+16]..[104,4086+50])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[104,4086+17]..[104,4086+33])
                                      Pexp_ident "ident_or_keyword" (stdlib/genlex.ml[104,4086+17]..[104,4086+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[104,4086+34]..[104,4086+49])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[104,4086+35]..[104,4086+45])
                                            Pexp_ident "get_string" (stdlib/genlex.ml[104,4086+35]..[104,4086+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[104,4086+46]..[104,4086+48])
                                                Pexp_construct "()" (stdlib/genlex.ml[104,4086+46]..[104,4086+48])
                                                None
                                          ]
                                    ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[105,4137+6]..[105,4137+16])
                        Ppat_var "neg_number" (stdlib/genlex.ml[105,4137+6]..[105,4137+16])
                      expression (stdlib/genlex.ml[105,4137+17]..[110,4342+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[105,4137+17]..[105,4137+38])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[105,4137+18]..[105,4137+24])
                            Ppat_var "strm__" (stdlib/genlex.ml[105,4137+18]..[105,4137+24])
                          core_type (stdlib/genlex.ml[105,4137+27]..[105,4137+37])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[105,4137+29]..[105,4137+37])
                            [
                              core_type (stdlib/genlex.ml[105,4137+27]..[105,4137+28])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[106,4178+4]..[110,4342+65])
                          Pexp_match
                          expression (stdlib/genlex.ml[106,4178+10]..[106,4178+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[106,4178+10]..[106,4178+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[106,4178+10]..[106,4178+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[106,4178+22]..[106,4178+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[106,4178+22]..[106,4178+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[107,4212+6]..[107,4212+26])
                                Ppat_construct "Some" (stdlib/genlex.ml[107,4212+6]..[107,4212+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[107,4212+11]..[107,4212+26])
                                    Ppat_alias "c" (stdlib/genlex.ml[107,4212+24]..[107,4212+25])
                                    pattern (stdlib/genlex.ml[107,4212+12]..[107,4212+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[108,4242+8]..[109,4270+71])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[108,4242+8]..[108,4242+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[108,4242+8]..[108,4242+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[108,4242+8]..[108,4242+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[108,4242+20]..[108,4242+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[108,4242+20]..[108,4242+26])
                                  ]
                                expression (stdlib/genlex.ml[109,4270+8]..[109,4270+71])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[109,4270+12]..[109,4270+13])
                                        Ppat_var "s" (stdlib/genlex.ml[109,4270+12]..[109,4270+13])
                                      expression (stdlib/genlex.ml[109,4270+16]..[109,4270+22])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[109,4270+16]..[109,4270+22])
                                  ]
                                  expression (stdlib/genlex.ml[109,4270+26]..[109,4270+71])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[109,4270+26]..[109,4270+41])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[109,4270+26]..[109,4270+38])
                                        Pexp_ident "reset_buffer" (stdlib/genlex.ml[109,4270+26]..[109,4270+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[109,4270+39]..[109,4270+41])
                                            Pexp_construct "()" (stdlib/genlex.ml[109,4270+39]..[109,4270+41])
                                            None
                                      ]
                                    expression (stdlib/genlex.ml[109,4270+43]..[109,4270+71])
                                      Pexp_sequence
                                      expression (stdlib/genlex.ml[109,4270+43]..[109,4270+52])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[109,4270+43]..[109,4270+48])
                                          Pexp_ident "store" (stdlib/genlex.ml[109,4270+43]..[109,4270+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[109,4270+49]..[109,4270+52])
                                              Pexp_constant PConst_char 2d
                                        ]
                                      expression (stdlib/genlex.ml[109,4270+54]..[109,4270+71])
                                        Pexp_sequence
                                        expression (stdlib/genlex.ml[109,4270+54]..[109,4270+61])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[109,4270+54]..[109,4270+59])
                                            Pexp_ident "store" (stdlib/genlex.ml[109,4270+54]..[109,4270+59])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[109,4270+60]..[109,4270+61])
                                                Pexp_ident "c" (stdlib/genlex.ml[109,4270+60]..[109,4270+61])
                                          ]
                                        expression (stdlib/genlex.ml[109,4270+63]..[109,4270+71])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[109,4270+63]..[109,4270+69])
                                            Pexp_ident "number" (stdlib/genlex.ml[109,4270+63]..[109,4270+69])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[109,4270+70]..[109,4270+71])
                                                Pexp_ident "s" (stdlib/genlex.ml[109,4270+70]..[109,4270+71])
                                          ]
                            <case>
                              pattern (stdlib/genlex.ml[110,4342+6]..[110,4342+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[110,4342+11]..[110,4342+65])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (stdlib/genlex.ml[110,4342+15]..[110,4342+16])
                                      Ppat_var "s" (stdlib/genlex.ml[110,4342+15]..[110,4342+16])
                                    expression (stdlib/genlex.ml[110,4342+19]..[110,4342+25])
                                      Pexp_ident "strm__" (stdlib/genlex.ml[110,4342+19]..[110,4342+25])
                                ]
                                expression (stdlib/genlex.ml[110,4342+29]..[110,4342+65])
                                  Pexp_sequence
                                  expression (stdlib/genlex.ml[110,4342+29]..[110,4342+44])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[110,4342+29]..[110,4342+41])
                                      Pexp_ident "reset_buffer" (stdlib/genlex.ml[110,4342+29]..[110,4342+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[110,4342+42]..[110,4342+44])
                                          Pexp_construct "()" (stdlib/genlex.ml[110,4342+42]..[110,4342+44])
                                          None
                                    ]
                                  expression (stdlib/genlex.ml[110,4342+46]..[110,4342+65])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[110,4342+46]..[110,4342+55])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[110,4342+46]..[110,4342+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[110,4342+46]..[110,4342+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[110,4342+52]..[110,4342+55])
                                            Pexp_constant PConst_char 2d
                                      ]
                                    expression (stdlib/genlex.ml[110,4342+57]..[110,4342+65])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[110,4342+57]..[110,4342+63])
                                        Pexp_ident "ident2" (stdlib/genlex.ml[110,4342+57]..[110,4342+63])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[110,4342+64]..[110,4342+65])
                                            Pexp_ident "s" (stdlib/genlex.ml[110,4342+64]..[110,4342+65])
                                      ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[111,4408+6]..[111,4408+12])
                        Ppat_var "number" (stdlib/genlex.ml[111,4408+6]..[111,4408+12])
                      expression (stdlib/genlex.ml[111,4408+13]..[119,4762+53]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[111,4408+13]..[111,4408+34])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[111,4408+14]..[111,4408+20])
                            Ppat_var "strm__" (stdlib/genlex.ml[111,4408+14]..[111,4408+20])
                          core_type (stdlib/genlex.ml[111,4408+23]..[111,4408+33])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[111,4408+25]..[111,4408+33])
                            [
                              core_type (stdlib/genlex.ml[111,4408+23]..[111,4408+24])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[112,4445+4]..[119,4762+53])
                          Pexp_match
                          expression (stdlib/genlex.ml[112,4445+10]..[112,4445+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[112,4445+10]..[112,4445+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[112,4445+10]..[112,4445+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[112,4445+22]..[112,4445+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[112,4445+22]..[112,4445+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[113,4479+6]..[113,4479+26])
                                Ppat_construct "Some" (stdlib/genlex.ml[113,4479+6]..[113,4479+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[113,4479+11]..[113,4479+26])
                                    Ppat_alias "c" (stdlib/genlex.ml[113,4479+24]..[113,4479+25])
                                    pattern (stdlib/genlex.ml[113,4479+12]..[113,4479+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[114,4509+8]..[114,4509+63])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[114,4509+8]..[114,4509+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[114,4509+8]..[114,4509+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[114,4509+8]..[114,4509+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[114,4509+20]..[114,4509+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[114,4509+20]..[114,4509+26])
                                  ]
                                expression (stdlib/genlex.ml[114,4509+28]..[114,4509+63])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[114,4509+32]..[114,4509+33])
                                        Ppat_var "s" (stdlib/genlex.ml[114,4509+32]..[114,4509+33])
                                      expression (stdlib/genlex.ml[114,4509+36]..[114,4509+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[114,4509+36]..[114,4509+42])
                                  ]
                                  expression (stdlib/genlex.ml[114,4509+46]..[114,4509+63])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[114,4509+46]..[114,4509+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[114,4509+46]..[114,4509+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[114,4509+46]..[114,4509+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[114,4509+52]..[114,4509+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[114,4509+52]..[114,4509+53])
                                      ]
                                    expression (stdlib/genlex.ml[114,4509+55]..[114,4509+63])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[114,4509+55]..[114,4509+61])
                                        Pexp_ident "number" (stdlib/genlex.ml[114,4509+55]..[114,4509+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[114,4509+62]..[114,4509+63])
                                            Pexp_ident "s" (stdlib/genlex.ml[114,4509+62]..[114,4509+63])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[115,4573+6]..[115,4573+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[115,4573+6]..[115,4573+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[115,4573+11]..[115,4573+14])
                                    Ppat_constant PConst_char 2e
                              expression (stdlib/genlex.ml[116,4591+8]..[116,4591+71])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[116,4591+8]..[116,4591+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[116,4591+8]..[116,4591+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[116,4591+8]..[116,4591+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[116,4591+20]..[116,4591+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[116,4591+20]..[116,4591+26])
                                  ]
                                expression (stdlib/genlex.ml[116,4591+28]..[116,4591+71])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[116,4591+32]..[116,4591+33])
                                        Ppat_var "s" (stdlib/genlex.ml[116,4591+32]..[116,4591+33])
                                      expression (stdlib/genlex.ml[116,4591+36]..[116,4591+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[116,4591+36]..[116,4591+42])
                                  ]
                                  expression (stdlib/genlex.ml[116,4591+46]..[116,4591+71])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[116,4591+46]..[116,4591+55])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[116,4591+46]..[116,4591+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[116,4591+46]..[116,4591+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[116,4591+52]..[116,4591+55])
                                            Pexp_constant PConst_char 2e
                                      ]
                                    expression (stdlib/genlex.ml[116,4591+57]..[116,4591+71])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[116,4591+57]..[116,4591+69])
                                        Pexp_ident "decimal_part" (stdlib/genlex.ml[116,4591+57]..[116,4591+69])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[116,4591+70]..[116,4591+71])
                                            Pexp_ident "s" (stdlib/genlex.ml[116,4591+70]..[116,4591+71])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[117,4663+6]..[117,4663+22])
                                Ppat_construct "Some" (stdlib/genlex.ml[117,4663+6]..[117,4663+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[117,4663+11]..[117,4663+22])
                                    Ppat_or
                                    pattern (stdlib/genlex.ml[117,4663+12]..[117,4663+15])
                                      Ppat_constant PConst_char 65
                                    pattern (stdlib/genlex.ml[117,4663+18]..[117,4663+21])
                                      Ppat_constant PConst_char 45
                              expression (stdlib/genlex.ml[118,4689+8]..[118,4689+72])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[118,4689+8]..[118,4689+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[118,4689+8]..[118,4689+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[118,4689+8]..[118,4689+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[118,4689+20]..[118,4689+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[118,4689+20]..[118,4689+26])
                                  ]
                                expression (stdlib/genlex.ml[118,4689+28]..[118,4689+72])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[118,4689+32]..[118,4689+33])
                                        Ppat_var "s" (stdlib/genlex.ml[118,4689+32]..[118,4689+33])
                                      expression (stdlib/genlex.ml[118,4689+36]..[118,4689+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[118,4689+36]..[118,4689+42])
                                  ]
                                  expression (stdlib/genlex.ml[118,4689+46]..[118,4689+72])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[118,4689+46]..[118,4689+55])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[118,4689+46]..[118,4689+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[118,4689+46]..[118,4689+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[118,4689+52]..[118,4689+55])
                                            Pexp_constant PConst_char 45
                                      ]
                                    expression (stdlib/genlex.ml[118,4689+57]..[118,4689+72])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[118,4689+57]..[118,4689+70])
                                        Pexp_ident "exponent_part" (stdlib/genlex.ml[118,4689+57]..[118,4689+70])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[118,4689+71]..[118,4689+72])
                                            Pexp_ident "s" (stdlib/genlex.ml[118,4689+71]..[118,4689+72])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[119,4762+6]..[119,4762+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[119,4762+11]..[119,4762+53])
                                Pexp_construct "Some" (stdlib/genlex.ml[119,4762+11]..[119,4762+15])
                                Some
                                  expression (stdlib/genlex.ml[119,4762+16]..[119,4762+53])
                                    Pexp_construct "Int" (stdlib/genlex.ml[119,4762+17]..[119,4762+20])
                                    Some
                                      expression (stdlib/genlex.ml[119,4762+21]..[119,4762+52])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[119,4762+22]..[119,4762+35])
                                          Pexp_ident "int_of_string" (stdlib/genlex.ml[119,4762+22]..[119,4762+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[119,4762+36]..[119,4762+51])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[119,4762+37]..[119,4762+47])
                                                Pexp_ident "get_string" (stdlib/genlex.ml[119,4762+37]..[119,4762+47])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[119,4762+48]..[119,4762+50])
                                                    Pexp_construct "()" (stdlib/genlex.ml[119,4762+48]..[119,4762+50])
                                                    None
                                              ]
                                        ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[120,4816+6]..[120,4816+18])
                        Ppat_var "decimal_part" (stdlib/genlex.ml[120,4816+6]..[120,4816+18])
                      expression (stdlib/genlex.ml[120,4816+19]..[126,5092+57]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[120,4816+19]..[120,4816+40])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[120,4816+20]..[120,4816+26])
                            Ppat_var "strm__" (stdlib/genlex.ml[120,4816+20]..[120,4816+26])
                          core_type (stdlib/genlex.ml[120,4816+29]..[120,4816+39])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[120,4816+31]..[120,4816+39])
                            [
                              core_type (stdlib/genlex.ml[120,4816+29]..[120,4816+30])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[121,4859+4]..[126,5092+57])
                          Pexp_match
                          expression (stdlib/genlex.ml[121,4859+10]..[121,4859+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[121,4859+10]..[121,4859+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[121,4859+10]..[121,4859+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[121,4859+22]..[121,4859+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[121,4859+22]..[121,4859+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[122,4893+6]..[122,4893+26])
                                Ppat_construct "Some" (stdlib/genlex.ml[122,4893+6]..[122,4893+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[122,4893+11]..[122,4893+26])
                                    Ppat_alias "c" (stdlib/genlex.ml[122,4893+24]..[122,4893+25])
                                    pattern (stdlib/genlex.ml[122,4893+12]..[122,4893+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[123,4923+8]..[123,4923+69])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[123,4923+8]..[123,4923+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[123,4923+8]..[123,4923+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[123,4923+8]..[123,4923+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[123,4923+20]..[123,4923+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[123,4923+20]..[123,4923+26])
                                  ]
                                expression (stdlib/genlex.ml[123,4923+28]..[123,4923+69])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[123,4923+32]..[123,4923+33])
                                        Ppat_var "s" (stdlib/genlex.ml[123,4923+32]..[123,4923+33])
                                      expression (stdlib/genlex.ml[123,4923+36]..[123,4923+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[123,4923+36]..[123,4923+42])
                                  ]
                                  expression (stdlib/genlex.ml[123,4923+46]..[123,4923+69])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[123,4923+46]..[123,4923+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[123,4923+46]..[123,4923+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[123,4923+46]..[123,4923+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[123,4923+52]..[123,4923+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[123,4923+52]..[123,4923+53])
                                      ]
                                    expression (stdlib/genlex.ml[123,4923+55]..[123,4923+69])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[123,4923+55]..[123,4923+67])
                                        Pexp_ident "decimal_part" (stdlib/genlex.ml[123,4923+55]..[123,4923+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[123,4923+68]..[123,4923+69])
                                            Pexp_ident "s" (stdlib/genlex.ml[123,4923+68]..[123,4923+69])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[124,4993+6]..[124,4993+22])
                                Ppat_construct "Some" (stdlib/genlex.ml[124,4993+6]..[124,4993+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[124,4993+11]..[124,4993+22])
                                    Ppat_or
                                    pattern (stdlib/genlex.ml[124,4993+12]..[124,4993+15])
                                      Ppat_constant PConst_char 65
                                    pattern (stdlib/genlex.ml[124,4993+18]..[124,4993+21])
                                      Ppat_constant PConst_char 45
                              expression (stdlib/genlex.ml[125,5019+8]..[125,5019+72])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[125,5019+8]..[125,5019+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[125,5019+8]..[125,5019+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[125,5019+8]..[125,5019+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[125,5019+20]..[125,5019+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[125,5019+20]..[125,5019+26])
                                  ]
                                expression (stdlib/genlex.ml[125,5019+28]..[125,5019+72])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[125,5019+32]..[125,5019+33])
                                        Ppat_var "s" (stdlib/genlex.ml[125,5019+32]..[125,5019+33])
                                      expression (stdlib/genlex.ml[125,5019+36]..[125,5019+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[125,5019+36]..[125,5019+42])
                                  ]
                                  expression (stdlib/genlex.ml[125,5019+46]..[125,5019+72])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[125,5019+46]..[125,5019+55])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[125,5019+46]..[125,5019+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[125,5019+46]..[125,5019+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[125,5019+52]..[125,5019+55])
                                            Pexp_constant PConst_char 45
                                      ]
                                    expression (stdlib/genlex.ml[125,5019+57]..[125,5019+72])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[125,5019+57]..[125,5019+70])
                                        Pexp_ident "exponent_part" (stdlib/genlex.ml[125,5019+57]..[125,5019+70])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[125,5019+71]..[125,5019+72])
                                            Pexp_ident "s" (stdlib/genlex.ml[125,5019+71]..[125,5019+72])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[126,5092+6]..[126,5092+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[126,5092+11]..[126,5092+57])
                                Pexp_construct "Some" (stdlib/genlex.ml[126,5092+11]..[126,5092+15])
                                Some
                                  expression (stdlib/genlex.ml[126,5092+16]..[126,5092+57])
                                    Pexp_construct "Float" (stdlib/genlex.ml[126,5092+17]..[126,5092+22])
                                    Some
                                      expression (stdlib/genlex.ml[126,5092+23]..[126,5092+56])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[126,5092+24]..[126,5092+39])
                                          Pexp_ident "float_of_string" (stdlib/genlex.ml[126,5092+24]..[126,5092+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[126,5092+40]..[126,5092+55])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[126,5092+41]..[126,5092+51])
                                                Pexp_ident "get_string" (stdlib/genlex.ml[126,5092+41]..[126,5092+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[126,5092+52]..[126,5092+54])
                                                    Pexp_construct "()" (stdlib/genlex.ml[126,5092+52]..[126,5092+54])
                                                    None
                                              ]
                                        ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[127,5150+6]..[127,5150+19])
                        Ppat_var "exponent_part" (stdlib/genlex.ml[127,5150+6]..[127,5150+19])
                      expression (stdlib/genlex.ml[127,5150+20]..[131,5334+35]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[127,5150+20]..[127,5150+41])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[127,5150+21]..[127,5150+27])
                            Ppat_var "strm__" (stdlib/genlex.ml[127,5150+21]..[127,5150+27])
                          core_type (stdlib/genlex.ml[127,5150+30]..[127,5150+40])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[127,5150+32]..[127,5150+40])
                            [
                              core_type (stdlib/genlex.ml[127,5150+30]..[127,5150+31])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[128,5194+4]..[131,5334+35])
                          Pexp_match
                          expression (stdlib/genlex.ml[128,5194+10]..[128,5194+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[128,5194+10]..[128,5194+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[128,5194+10]..[128,5194+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[128,5194+22]..[128,5194+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[128,5194+22]..[128,5194+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[129,5228+6]..[129,5228+27])
                                Ppat_construct "Some" (stdlib/genlex.ml[129,5228+6]..[129,5228+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[129,5228+11]..[129,5228+27])
                                    Ppat_alias "c" (stdlib/genlex.ml[129,5228+25]..[129,5228+26])
                                    pattern (stdlib/genlex.ml[129,5228+12]..[129,5228+21])
                                      Ppat_or
                                      pattern (stdlib/genlex.ml[129,5228+12]..[129,5228+15])
                                        Ppat_constant PConst_char 2b
                                      pattern (stdlib/genlex.ml[129,5228+18]..[129,5228+21])
                                        Ppat_constant PConst_char 2d
                              expression (stdlib/genlex.ml[130,5259+8]..[130,5259+74])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[130,5259+8]..[130,5259+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[130,5259+8]..[130,5259+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[130,5259+8]..[130,5259+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[130,5259+20]..[130,5259+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[130,5259+20]..[130,5259+26])
                                  ]
                                expression (stdlib/genlex.ml[130,5259+28]..[130,5259+74])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[130,5259+32]..[130,5259+33])
                                        Ppat_var "s" (stdlib/genlex.ml[130,5259+32]..[130,5259+33])
                                      expression (stdlib/genlex.ml[130,5259+36]..[130,5259+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[130,5259+36]..[130,5259+42])
                                  ]
                                  expression (stdlib/genlex.ml[130,5259+46]..[130,5259+74])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[130,5259+46]..[130,5259+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[130,5259+46]..[130,5259+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[130,5259+46]..[130,5259+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[130,5259+52]..[130,5259+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[130,5259+52]..[130,5259+53])
                                      ]
                                    expression (stdlib/genlex.ml[130,5259+55]..[130,5259+74])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[130,5259+55]..[130,5259+72])
                                        Pexp_ident "end_exponent_part" (stdlib/genlex.ml[130,5259+55]..[130,5259+72])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[130,5259+73]..[130,5259+74])
                                            Pexp_ident "s" (stdlib/genlex.ml[130,5259+73]..[130,5259+74])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[131,5334+6]..[131,5334+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[131,5334+11]..[131,5334+35])
                                Pexp_apply
                                expression (stdlib/genlex.ml[131,5334+11]..[131,5334+28])
                                  Pexp_ident "end_exponent_part" (stdlib/genlex.ml[131,5334+11]..[131,5334+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[131,5334+29]..[131,5334+35])
                                      Pexp_ident "strm__" (stdlib/genlex.ml[131,5334+29]..[131,5334+35])
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[132,5370+6]..[132,5370+23])
                        Ppat_var "end_exponent_part" (stdlib/genlex.ml[132,5370+6]..[132,5370+23])
                      expression (stdlib/genlex.ml[132,5370+24]..[136,5557+57]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[132,5370+24]..[132,5370+45])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[132,5370+25]..[132,5370+31])
                            Ppat_var "strm__" (stdlib/genlex.ml[132,5370+25]..[132,5370+31])
                          core_type (stdlib/genlex.ml[132,5370+34]..[132,5370+44])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[132,5370+36]..[132,5370+44])
                            [
                              core_type (stdlib/genlex.ml[132,5370+34]..[132,5370+35])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[133,5418+4]..[136,5557+57])
                          Pexp_match
                          expression (stdlib/genlex.ml[133,5418+10]..[133,5418+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[133,5418+10]..[133,5418+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[133,5418+10]..[133,5418+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[133,5418+22]..[133,5418+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[133,5418+22]..[133,5418+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[134,5452+6]..[134,5452+26])
                                Ppat_construct "Some" (stdlib/genlex.ml[134,5452+6]..[134,5452+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[134,5452+11]..[134,5452+26])
                                    Ppat_alias "c" (stdlib/genlex.ml[134,5452+24]..[134,5452+25])
                                    pattern (stdlib/genlex.ml[134,5452+12]..[134,5452+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[135,5482+8]..[135,5482+74])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[135,5482+8]..[135,5482+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[135,5482+8]..[135,5482+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[135,5482+8]..[135,5482+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[135,5482+20]..[135,5482+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[135,5482+20]..[135,5482+26])
                                  ]
                                expression (stdlib/genlex.ml[135,5482+28]..[135,5482+74])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[135,5482+32]..[135,5482+33])
                                        Ppat_var "s" (stdlib/genlex.ml[135,5482+32]..[135,5482+33])
                                      expression (stdlib/genlex.ml[135,5482+36]..[135,5482+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[135,5482+36]..[135,5482+42])
                                  ]
                                  expression (stdlib/genlex.ml[135,5482+46]..[135,5482+74])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[135,5482+46]..[135,5482+53])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[135,5482+46]..[135,5482+51])
                                        Pexp_ident "store" (stdlib/genlex.ml[135,5482+46]..[135,5482+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[135,5482+52]..[135,5482+53])
                                            Pexp_ident "c" (stdlib/genlex.ml[135,5482+52]..[135,5482+53])
                                      ]
                                    expression (stdlib/genlex.ml[135,5482+55]..[135,5482+74])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[135,5482+55]..[135,5482+72])
                                        Pexp_ident "end_exponent_part" (stdlib/genlex.ml[135,5482+55]..[135,5482+72])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[135,5482+73]..[135,5482+74])
                                            Pexp_ident "s" (stdlib/genlex.ml[135,5482+73]..[135,5482+74])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[136,5557+6]..[136,5557+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[136,5557+11]..[136,5557+57])
                                Pexp_construct "Some" (stdlib/genlex.ml[136,5557+11]..[136,5557+15])
                                Some
                                  expression (stdlib/genlex.ml[136,5557+16]..[136,5557+57])
                                    Pexp_construct "Float" (stdlib/genlex.ml[136,5557+17]..[136,5557+22])
                                    Some
                                      expression (stdlib/genlex.ml[136,5557+23]..[136,5557+56])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[136,5557+24]..[136,5557+39])
                                          Pexp_ident "float_of_string" (stdlib/genlex.ml[136,5557+24]..[136,5557+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[136,5557+40]..[136,5557+55])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[136,5557+41]..[136,5557+51])
                                                Pexp_ident "get_string" (stdlib/genlex.ml[136,5557+41]..[136,5557+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[136,5557+52]..[136,5557+54])
                                                    Pexp_construct "()" (stdlib/genlex.ml[136,5557+52]..[136,5557+54])
                                                    None
                                              ]
                                        ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[137,5615+6]..[137,5615+12])
                        Ppat_var "string" (stdlib/genlex.ml[137,5615+6]..[137,5615+12])
                      expression (stdlib/genlex.ml[137,5615+13]..[148,6016+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[137,5615+13]..[137,5615+34])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[137,5615+14]..[137,5615+20])
                            Ppat_var "strm__" (stdlib/genlex.ml[137,5615+14]..[137,5615+20])
                          core_type (stdlib/genlex.ml[137,5615+23]..[137,5615+33])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[137,5615+25]..[137,5615+33])
                            [
                              core_type (stdlib/genlex.ml[137,5615+23]..[137,5615+24])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[138,5652+4]..[148,6016+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[138,5652+10]..[138,5652+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[138,5652+10]..[138,5652+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[138,5652+10]..[138,5652+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[138,5652+22]..[138,5652+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[138,5652+22]..[138,5652+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[139,5686+6]..[139,5686+15])
                                Ppat_construct "Some" (stdlib/genlex.ml[139,5686+6]..[139,5686+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[139,5686+11]..[139,5686+15])
                                    Ppat_constant PConst_char 22
                              expression (stdlib/genlex.ml[139,5686+19]..[139,5686+52])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[139,5686+19]..[139,5686+37])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[139,5686+19]..[139,5686+30])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[139,5686+19]..[139,5686+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[139,5686+31]..[139,5686+37])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[139,5686+31]..[139,5686+37])
                                  ]
                                expression (stdlib/genlex.ml[139,5686+39]..[139,5686+52])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[139,5686+39]..[139,5686+49])
                                    Pexp_ident "get_string" (stdlib/genlex.ml[139,5686+39]..[139,5686+49])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[139,5686+50]..[139,5686+52])
                                        Pexp_construct "()" (stdlib/genlex.ml[139,5686+50]..[139,5686+52])
                                        None
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[140,5739+6]..[140,5739+15])
                                Ppat_construct "Some" (stdlib/genlex.ml[140,5739+6]..[140,5739+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[140,5739+11]..[140,5739+15])
                                    Ppat_constant PConst_char 5c
                              expression (stdlib/genlex.ml[141,5758+8]..[146,5900+43])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[141,5758+8]..[141,5758+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[141,5758+8]..[141,5758+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[141,5758+8]..[141,5758+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[141,5758+20]..[141,5758+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[141,5758+20]..[141,5758+26])
                                  ]
                                expression (stdlib/genlex.ml[142,5786+8]..[146,5900+43])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[142,5786+12]..[142,5786+13])
                                        Ppat_var "c" (stdlib/genlex.ml[142,5786+12]..[142,5786+13])
                                      expression (stdlib/genlex.ml[143,5802+10]..[144,5835+53])
                                        Pexp_try
                                        expression (stdlib/genlex.ml[143,5802+14]..[143,5802+27])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[143,5802+14]..[143,5802+20])
                                            Pexp_ident "escape" (stdlib/genlex.ml[143,5802+14]..[143,5802+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[143,5802+21]..[143,5802+27])
                                                Pexp_ident "strm__" (stdlib/genlex.ml[143,5802+21]..[143,5802+27])
                                          ]
                                        [
                                          <case>
                                            pattern (stdlib/genlex.ml[144,5835+12]..[144,5835+26])
                                              Ppat_construct "Stream.Failure" (stdlib/genlex.ml[144,5835+12]..[144,5835+26])
                                              None
                                            expression (stdlib/genlex.ml[144,5835+30]..[144,5835+53])
                                              Pexp_apply
                                              expression (stdlib/genlex.ml[144,5835+30]..[144,5835+35])
                                                Pexp_ident "raise" (stdlib/genlex.ml[144,5835+30]..[144,5835+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (stdlib/genlex.ml[144,5835+36]..[144,5835+53])
                                                    Pexp_construct "Stream.Error" (stdlib/genlex.ml[144,5835+37]..[144,5835+49])
                                                    Some
                                                      expression (stdlib/genlex.ml[144,5835+50]..[144,5835+52])
                                                        Pexp_constant PConst_string("",(stdlib/genlex.ml[144,5835+51]..[144,5835+51]),None)
                                              ]
                                        ]
                                  ]
                                  expression (stdlib/genlex.ml[146,5900+8]..[146,5900+43])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (stdlib/genlex.ml[146,5900+12]..[146,5900+13])
                                          Ppat_var "s" (stdlib/genlex.ml[146,5900+12]..[146,5900+13])
                                        expression (stdlib/genlex.ml[146,5900+16]..[146,5900+22])
                                          Pexp_ident "strm__" (stdlib/genlex.ml[146,5900+16]..[146,5900+22])
                                    ]
                                    expression (stdlib/genlex.ml[146,5900+26]..[146,5900+43])
                                      Pexp_sequence
                                      expression (stdlib/genlex.ml[146,5900+26]..[146,5900+33])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[146,5900+26]..[146,5900+31])
                                          Pexp_ident "store" (stdlib/genlex.ml[146,5900+26]..[146,5900+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[146,5900+32]..[146,5900+33])
                                              Pexp_ident "c" (stdlib/genlex.ml[146,5900+32]..[146,5900+33])
                                        ]
                                      expression (stdlib/genlex.ml[146,5900+35]..[146,5900+43])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[146,5900+35]..[146,5900+41])
                                          Pexp_ident "string" (stdlib/genlex.ml[146,5900+35]..[146,5900+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[146,5900+42]..[146,5900+43])
                                              Pexp_ident "s" (stdlib/genlex.ml[146,5900+42]..[146,5900+43])
                                        ]
                            <case>
                              pattern (stdlib/genlex.ml[147,5944+6]..[147,5944+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[147,5944+6]..[147,5944+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[147,5944+11]..[147,5944+12])
                                    Ppat_var "c" (stdlib/genlex.ml[147,5944+11]..[147,5944+12])
                              expression (stdlib/genlex.ml[147,5944+16]..[147,5944+71])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[147,5944+16]..[147,5944+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[147,5944+16]..[147,5944+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[147,5944+16]..[147,5944+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[147,5944+28]..[147,5944+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[147,5944+28]..[147,5944+34])
                                  ]
                                expression (stdlib/genlex.ml[147,5944+36]..[147,5944+71])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[147,5944+40]..[147,5944+41])
                                        Ppat_var "s" (stdlib/genlex.ml[147,5944+40]..[147,5944+41])
                                      expression (stdlib/genlex.ml[147,5944+44]..[147,5944+50])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[147,5944+44]..[147,5944+50])
                                  ]
                                  expression (stdlib/genlex.ml[147,5944+54]..[147,5944+71])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[147,5944+54]..[147,5944+61])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[147,5944+54]..[147,5944+59])
                                        Pexp_ident "store" (stdlib/genlex.ml[147,5944+54]..[147,5944+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[147,5944+60]..[147,5944+61])
                                            Pexp_ident "c" (stdlib/genlex.ml[147,5944+60]..[147,5944+61])
                                      ]
                                    expression (stdlib/genlex.ml[147,5944+63]..[147,5944+71])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[147,5944+63]..[147,5944+69])
                                        Pexp_ident "string" (stdlib/genlex.ml[147,5944+63]..[147,5944+69])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[147,5944+70]..[147,5944+71])
                                            Pexp_ident "s" (stdlib/genlex.ml[147,5944+70]..[147,5944+71])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[148,6016+6]..[148,6016+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[148,6016+11]..[148,6016+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[148,6016+11]..[148,6016+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[148,6016+11]..[148,6016+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[148,6016+17]..[148,6016+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[148,6016+17]..[148,6016+31])
                                      None
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[149,6048+6]..[149,6048+10])
                        Ppat_var "char" (stdlib/genlex.ml[149,6048+6]..[149,6048+10])
                      expression (stdlib/genlex.ml[149,6048+11]..[157,6303+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[149,6048+11]..[149,6048+32])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[149,6048+12]..[149,6048+18])
                            Ppat_var "strm__" (stdlib/genlex.ml[149,6048+12]..[149,6048+18])
                          core_type (stdlib/genlex.ml[149,6048+21]..[149,6048+31])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[149,6048+23]..[149,6048+31])
                            [
                              core_type (stdlib/genlex.ml[149,6048+21]..[149,6048+22])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[150,6083+4]..[157,6303+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[150,6083+10]..[150,6083+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[150,6083+10]..[150,6083+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[150,6083+10]..[150,6083+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[150,6083+22]..[150,6083+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[150,6083+22]..[150,6083+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[151,6117+6]..[151,6117+15])
                                Ppat_construct "Some" (stdlib/genlex.ml[151,6117+6]..[151,6117+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[151,6117+11]..[151,6117+15])
                                    Ppat_constant PConst_char 5c
                              expression (stdlib/genlex.ml[152,6136+8]..[155,6253+11])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[152,6136+8]..[152,6136+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[152,6136+8]..[152,6136+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[152,6136+8]..[152,6136+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[152,6136+20]..[152,6136+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[152,6136+20]..[152,6136+26])
                                  ]
                                expression (stdlib/genlex.ml[153,6164+8]..[155,6253+11])
                                  Pexp_try
                                  expression (stdlib/genlex.ml[153,6164+18]..[153,6164+31])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[153,6164+18]..[153,6164+24])
                                      Pexp_ident "escape" (stdlib/genlex.ml[153,6164+18]..[153,6164+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[153,6164+25]..[153,6164+31])
                                          Pexp_ident "strm__" (stdlib/genlex.ml[153,6164+25]..[153,6164+31])
                                    ]
                                  [
                                    <case>
                                      pattern (stdlib/genlex.ml[154,6201+10]..[154,6201+24])
                                        Ppat_construct "Stream.Failure" (stdlib/genlex.ml[154,6201+10]..[154,6201+24])
                                        None
                                      expression (stdlib/genlex.ml[154,6201+28]..[154,6201+51])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[154,6201+28]..[154,6201+33])
                                          Pexp_ident "raise" (stdlib/genlex.ml[154,6201+28]..[154,6201+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[154,6201+34]..[154,6201+51])
                                              Pexp_construct "Stream.Error" (stdlib/genlex.ml[154,6201+35]..[154,6201+47])
                                              Some
                                                expression (stdlib/genlex.ml[154,6201+48]..[154,6201+50])
                                                  Pexp_constant PConst_string("",(stdlib/genlex.ml[154,6201+49]..[154,6201+49]),None)
                                        ]
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[156,6265+6]..[156,6265+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[156,6265+6]..[156,6265+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[156,6265+11]..[156,6265+12])
                                    Ppat_var "c" (stdlib/genlex.ml[156,6265+11]..[156,6265+12])
                              expression (stdlib/genlex.ml[156,6265+16]..[156,6265+37])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[156,6265+16]..[156,6265+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[156,6265+16]..[156,6265+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[156,6265+16]..[156,6265+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[156,6265+28]..[156,6265+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[156,6265+28]..[156,6265+34])
                                  ]
                                expression (stdlib/genlex.ml[156,6265+36]..[156,6265+37])
                                  Pexp_ident "c" (stdlib/genlex.ml[156,6265+36]..[156,6265+37])
                            <case>
                              pattern (stdlib/genlex.ml[157,6303+6]..[157,6303+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[157,6303+11]..[157,6303+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[157,6303+11]..[157,6303+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[157,6303+11]..[157,6303+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[157,6303+17]..[157,6303+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[157,6303+17]..[157,6303+31])
                                      None
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[158,6335+6]..[158,6335+12])
                        Ppat_var "escape" (stdlib/genlex.ml[158,6335+6]..[158,6335+12])
                      expression (stdlib/genlex.ml[158,6335+13]..[179,7117+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[158,6335+13]..[158,6335+34])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[158,6335+14]..[158,6335+20])
                            Ppat_var "strm__" (stdlib/genlex.ml[158,6335+14]..[158,6335+20])
                          core_type (stdlib/genlex.ml[158,6335+23]..[158,6335+33])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[158,6335+25]..[158,6335+33])
                            [
                              core_type (stdlib/genlex.ml[158,6335+23]..[158,6335+24])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[159,6372+4]..[179,7117+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[159,6372+10]..[159,6372+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[159,6372+10]..[159,6372+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[159,6372+10]..[159,6372+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[159,6372+22]..[159,6372+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[159,6372+22]..[159,6372+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[160,6406+6]..[160,6406+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[160,6406+6]..[160,6406+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[160,6406+11]..[160,6406+14])
                                    Ppat_constant PConst_char 6e
                              expression (stdlib/genlex.ml[160,6406+18]..[160,6406+42])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[160,6406+18]..[160,6406+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[160,6406+18]..[160,6406+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[160,6406+18]..[160,6406+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[160,6406+30]..[160,6406+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[160,6406+30]..[160,6406+36])
                                  ]
                                expression (stdlib/genlex.ml[160,6406+38]..[160,6406+42])
                                  Pexp_constant PConst_char 0a
                            <case>
                              pattern (stdlib/genlex.ml[161,6449+6]..[161,6449+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[161,6449+6]..[161,6449+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[161,6449+11]..[161,6449+14])
                                    Ppat_constant PConst_char 72
                              expression (stdlib/genlex.ml[161,6449+18]..[161,6449+42])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[161,6449+18]..[161,6449+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[161,6449+18]..[161,6449+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[161,6449+18]..[161,6449+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[161,6449+30]..[161,6449+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[161,6449+30]..[161,6449+36])
                                  ]
                                expression (stdlib/genlex.ml[161,6449+38]..[161,6449+42])
                                  Pexp_constant PConst_char 0d
                            <case>
                              pattern (stdlib/genlex.ml[162,6492+6]..[162,6492+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[162,6492+6]..[162,6492+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[162,6492+11]..[162,6492+14])
                                    Ppat_constant PConst_char 74
                              expression (stdlib/genlex.ml[162,6492+18]..[162,6492+42])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[162,6492+18]..[162,6492+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[162,6492+18]..[162,6492+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[162,6492+18]..[162,6492+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[162,6492+30]..[162,6492+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[162,6492+30]..[162,6492+36])
                                  ]
                                expression (stdlib/genlex.ml[162,6492+38]..[162,6492+42])
                                  Pexp_constant PConst_char 09
                            <case>
                              pattern (stdlib/genlex.ml[163,6535+6]..[163,6535+27])
                                Ppat_construct "Some" (stdlib/genlex.ml[163,6535+6]..[163,6535+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[163,6535+11]..[163,6535+27])
                                    Ppat_alias "c1" (stdlib/genlex.ml[163,6535+24]..[163,6535+26])
                                    pattern (stdlib/genlex.ml[163,6535+12]..[163,6535+20])
                                      Ppat_interval PConst_char 30..PConst_char 39
                              expression (stdlib/genlex.ml[164,6566+8]..[177,7067+11])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[164,6566+8]..[164,6566+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[164,6566+8]..[164,6566+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[164,6566+8]..[164,6566+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[164,6566+20]..[164,6566+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[164,6566+20]..[164,6566+26])
                                  ]
                                expression (stdlib/genlex.ml[165,6594+8]..[177,7067+11])
                                  Pexp_match
                                  expression (stdlib/genlex.ml[165,6594+20]..[165,6594+38])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[165,6594+20]..[165,6594+31])
                                      Pexp_ident "Stream.peek" (stdlib/genlex.ml[165,6594+20]..[165,6594+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[165,6594+32]..[165,6594+38])
                                          Pexp_ident "strm__" (stdlib/genlex.ml[165,6594+32]..[165,6594+38])
                                    ]
                                  [
                                    <case>
                                      pattern (stdlib/genlex.ml[166,6638+10]..[166,6638+31])
                                        Ppat_construct "Some" (stdlib/genlex.ml[166,6638+10]..[166,6638+14])
                                        Some
                                          []
                                          pattern (stdlib/genlex.ml[166,6638+15]..[166,6638+31])
                                            Ppat_alias "c2" (stdlib/genlex.ml[166,6638+28]..[166,6638+30])
                                            pattern (stdlib/genlex.ml[166,6638+16]..[166,6638+24])
                                              Ppat_interval PConst_char 30..PConst_char 39
                                      expression (stdlib/genlex.ml[167,6673+12]..[175,7012+15])
                                        Pexp_sequence
                                        expression (stdlib/genlex.ml[167,6673+12]..[167,6673+30])
                                          Pexp_apply
                                          expression (stdlib/genlex.ml[167,6673+12]..[167,6673+23])
                                            Pexp_ident "Stream.junk" (stdlib/genlex.ml[167,6673+12]..[167,6673+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (stdlib/genlex.ml[167,6673+24]..[167,6673+30])
                                                Pexp_ident "strm__" (stdlib/genlex.ml[167,6673+24]..[167,6673+30])
                                          ]
                                        expression (stdlib/genlex.ml[168,6705+12]..[175,7012+15])
                                          Pexp_match
                                          expression (stdlib/genlex.ml[168,6705+24]..[168,6705+42])
                                            Pexp_apply
                                            expression (stdlib/genlex.ml[168,6705+24]..[168,6705+35])
                                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[168,6705+24]..[168,6705+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (stdlib/genlex.ml[168,6705+36]..[168,6705+42])
                                                  Pexp_ident "strm__" (stdlib/genlex.ml[168,6705+36]..[168,6705+42])
                                            ]
                                          [
                                            <case>
                                              pattern (stdlib/genlex.ml[169,6753+14]..[169,6753+35])
                                                Ppat_construct "Some" (stdlib/genlex.ml[169,6753+14]..[169,6753+18])
                                                Some
                                                  []
                                                  pattern (stdlib/genlex.ml[169,6753+19]..[169,6753+35])
                                                    Ppat_alias "c3" (stdlib/genlex.ml[169,6753+32]..[169,6753+34])
                                                    pattern (stdlib/genlex.ml[169,6753+20]..[169,6753+28])
                                                      Ppat_interval PConst_char 30..PConst_char 39
                                              expression (stdlib/genlex.ml[170,6792+16]..[173,6927+41])
                                                Pexp_sequence
                                                expression (stdlib/genlex.ml[170,6792+16]..[170,6792+34])
                                                  Pexp_apply
                                                  expression (stdlib/genlex.ml[170,6792+16]..[170,6792+27])
                                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[170,6792+16]..[170,6792+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/genlex.ml[170,6792+28]..[170,6792+34])
                                                        Pexp_ident "strm__" (stdlib/genlex.ml[170,6792+28]..[170,6792+34])
                                                  ]
                                                expression (stdlib/genlex.ml[171,6828+16]..[173,6927+41])
                                                  Pexp_apply
                                                  expression (stdlib/genlex.ml[171,6828+16]..[171,6828+24])
                                                    Pexp_ident "Char.chr" (stdlib/genlex.ml[171,6828+16]..[171,6828+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (stdlib/genlex.ml[172,6853+18]..[173,6927+41])
                                                        Pexp_apply
                                                        expression (stdlib/genlex.ml[172,6853+72]..[172,6853+73])
                                                          Pexp_ident "+" (stdlib/genlex.ml[172,6853+72]..[172,6853+73])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/genlex.ml[172,6853+19]..[172,6853+71])
                                                              Pexp_apply
                                                              expression (stdlib/genlex.ml[172,6853+45]..[172,6853+46])
                                                                Pexp_ident "+" (stdlib/genlex.ml[172,6853+45]..[172,6853+46])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/genlex.ml[172,6853+19]..[172,6853+44])
                                                                    Pexp_apply
                                                                    expression (stdlib/genlex.ml[172,6853+39]..[172,6853+40])
                                                                      Pexp_ident "*" (stdlib/genlex.ml[172,6853+39]..[172,6853+40])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/genlex.ml[172,6853+19]..[172,6853+38])
  Pexp_apply
  expression (stdlib/genlex.ml[172,6853+33]..[172,6853+34])
    Pexp_ident "-" (stdlib/genlex.ml[172,6853+33]..[172,6853+34])
  [
    <arg>
    Nolabel
      expression (stdlib/genlex.ml[172,6853+20]..[172,6853+32])
        Pexp_apply
        expression (stdlib/genlex.ml[172,6853+20]..[172,6853+29])
          Pexp_ident "Char.code" (stdlib/genlex.ml[172,6853+20]..[172,6853+29])
        [
          <arg>
          Nolabel
            expression (stdlib/genlex.ml[172,6853+30]..[172,6853+32])
              Pexp_ident "c1" (stdlib/genlex.ml[172,6853+30]..[172,6853+32])
        ]
    <arg>
    Nolabel
      expression (stdlib/genlex.ml[172,6853+35]..[172,6853+37])
        Pexp_constant PConst_int (48,None)
  ]
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/genlex.ml[172,6853+41]..[172,6853+44])
  Pexp_constant PConst_int (100,None)
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/genlex.ml[172,6853+47]..[172,6853+71])
                                                                    Pexp_apply
                                                                    expression (stdlib/genlex.ml[172,6853+67]..[172,6853+68])
                                                                      Pexp_ident "*" (stdlib/genlex.ml[172,6853+67]..[172,6853+68])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/genlex.ml[172,6853+47]..[172,6853+66])
  Pexp_apply
  expression (stdlib/genlex.ml[172,6853+61]..[172,6853+62])
    Pexp_ident "-" (stdlib/genlex.ml[172,6853+61]..[172,6853+62])
  [
    <arg>
    Nolabel
      expression (stdlib/genlex.ml[172,6853+48]..[172,6853+60])
        Pexp_apply
        expression (stdlib/genlex.ml[172,6853+48]..[172,6853+57])
          Pexp_ident "Char.code" (stdlib/genlex.ml[172,6853+48]..[172,6853+57])
        [
          <arg>
          Nolabel
            expression (stdlib/genlex.ml[172,6853+58]..[172,6853+60])
              Pexp_ident "c2" (stdlib/genlex.ml[172,6853+58]..[172,6853+60])
        ]
    <arg>
    Nolabel
      expression (stdlib/genlex.ml[172,6853+63]..[172,6853+65])
        Pexp_constant PConst_int (48,None)
  ]
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/genlex.ml[172,6853+69]..[172,6853+71])
  Pexp_constant PConst_int (10,None)
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (stdlib/genlex.ml[173,6927+21]..[173,6927+40])
                                                              Pexp_apply
                                                              expression (stdlib/genlex.ml[173,6927+35]..[173,6927+36])
                                                                Pexp_ident "-" (stdlib/genlex.ml[173,6927+35]..[173,6927+36])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/genlex.ml[173,6927+22]..[173,6927+34])
                                                                    Pexp_apply
                                                                    expression (stdlib/genlex.ml[173,6927+22]..[173,6927+31])
                                                                      Pexp_ident "Char.code" (stdlib/genlex.ml[173,6927+22]..[173,6927+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (stdlib/genlex.ml[173,6927+32]..[173,6927+34])
  Pexp_ident "c3" (stdlib/genlex.ml[173,6927+32]..[173,6927+34])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (stdlib/genlex.ml[173,6927+37]..[173,6927+39])
                                                                    Pexp_constant PConst_int (48,None)
                                                              ]
                                                        ]
                                                  ]
                                            <case>
                                              pattern (stdlib/genlex.ml[174,6969+14]..[174,6969+15])
                                                Ppat_any
                                              expression (stdlib/genlex.ml[174,6969+19]..[174,6969+42])
                                                Pexp_apply
                                                expression (stdlib/genlex.ml[174,6969+19]..[174,6969+24])
                                                  Pexp_ident "raise" (stdlib/genlex.ml[174,6969+19]..[174,6969+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (stdlib/genlex.ml[174,6969+25]..[174,6969+42])
                                                      Pexp_construct "Stream.Error" (stdlib/genlex.ml[174,6969+26]..[174,6969+38])
                                                      Some
                                                        expression (stdlib/genlex.ml[174,6969+39]..[174,6969+41])
                                                          Pexp_constant PConst_string("",(stdlib/genlex.ml[174,6969+40]..[174,6969+40]),None)
                                                ]
                                          ]
                                    <case>
                                      pattern (stdlib/genlex.ml[176,7028+10]..[176,7028+11])
                                        Ppat_any
                                      expression (stdlib/genlex.ml[176,7028+15]..[176,7028+38])
                                        Pexp_apply
                                        expression (stdlib/genlex.ml[176,7028+15]..[176,7028+20])
                                          Pexp_ident "raise" (stdlib/genlex.ml[176,7028+15]..[176,7028+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (stdlib/genlex.ml[176,7028+21]..[176,7028+38])
                                              Pexp_construct "Stream.Error" (stdlib/genlex.ml[176,7028+22]..[176,7028+34])
                                              Some
                                                expression (stdlib/genlex.ml[176,7028+35]..[176,7028+37])
                                                  Pexp_constant PConst_string("",(stdlib/genlex.ml[176,7028+36]..[176,7028+36]),None)
                                        ]
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[178,7079+6]..[178,7079+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[178,7079+6]..[178,7079+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[178,7079+11]..[178,7079+12])
                                    Ppat_var "c" (stdlib/genlex.ml[178,7079+11]..[178,7079+12])
                              expression (stdlib/genlex.ml[178,7079+16]..[178,7079+37])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[178,7079+16]..[178,7079+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[178,7079+16]..[178,7079+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[178,7079+16]..[178,7079+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[178,7079+28]..[178,7079+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[178,7079+28]..[178,7079+34])
                                  ]
                                expression (stdlib/genlex.ml[178,7079+36]..[178,7079+37])
                                  Pexp_ident "c" (stdlib/genlex.ml[178,7079+36]..[178,7079+37])
                            <case>
                              pattern (stdlib/genlex.ml[179,7117+6]..[179,7117+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[179,7117+11]..[179,7117+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[179,7117+11]..[179,7117+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[179,7117+11]..[179,7117+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[179,7117+17]..[179,7117+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[179,7117+17]..[179,7117+31])
                                      None
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[180,7149+6]..[180,7149+19])
                        Ppat_var "maybe_comment" (stdlib/genlex.ml[180,7149+6]..[180,7149+19])
                      expression (stdlib/genlex.ml[180,7149+20]..[184,7315+38]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[180,7149+20]..[180,7149+41])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[180,7149+21]..[180,7149+27])
                            Ppat_var "strm__" (stdlib/genlex.ml[180,7149+21]..[180,7149+27])
                          core_type (stdlib/genlex.ml[180,7149+30]..[180,7149+40])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[180,7149+32]..[180,7149+40])
                            [
                              core_type (stdlib/genlex.ml[180,7149+30]..[180,7149+31])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[181,7193+4]..[184,7315+38])
                          Pexp_match
                          expression (stdlib/genlex.ml[181,7193+10]..[181,7193+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[181,7193+10]..[181,7193+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[181,7193+10]..[181,7193+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[181,7193+22]..[181,7193+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[181,7193+22]..[181,7193+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[182,7227+6]..[182,7227+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[182,7227+6]..[182,7227+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[182,7227+11]..[182,7227+14])
                                    Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[183,7245+8]..[183,7245+69])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[183,7245+8]..[183,7245+26])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[183,7245+8]..[183,7245+19])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[183,7245+8]..[183,7245+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[183,7245+20]..[183,7245+26])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[183,7245+20]..[183,7245+26])
                                  ]
                                expression (stdlib/genlex.ml[183,7245+28]..[183,7245+69])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[183,7245+32]..[183,7245+33])
                                        Ppat_var "s" (stdlib/genlex.ml[183,7245+32]..[183,7245+33])
                                      expression (stdlib/genlex.ml[183,7245+36]..[183,7245+42])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[183,7245+36]..[183,7245+42])
                                  ]
                                  expression (stdlib/genlex.ml[183,7245+46]..[183,7245+69])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[183,7245+46]..[183,7245+55])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[183,7245+46]..[183,7245+53])
                                        Pexp_ident "comment" (stdlib/genlex.ml[183,7245+46]..[183,7245+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[183,7245+54]..[183,7245+55])
                                            Pexp_ident "s" (stdlib/genlex.ml[183,7245+54]..[183,7245+55])
                                      ]
                                    expression (stdlib/genlex.ml[183,7245+57]..[183,7245+69])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[183,7245+57]..[183,7245+67])
                                        Pexp_ident "next_token" (stdlib/genlex.ml[183,7245+57]..[183,7245+67])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[183,7245+68]..[183,7245+69])
                                            Pexp_ident "s" (stdlib/genlex.ml[183,7245+68]..[183,7245+69])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[184,7315+6]..[184,7315+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[184,7315+11]..[184,7315+38])
                                Pexp_construct "Some" (stdlib/genlex.ml[184,7315+11]..[184,7315+15])
                                Some
                                  expression (stdlib/genlex.ml[184,7315+16]..[184,7315+38])
                                    Pexp_apply
                                    expression (stdlib/genlex.ml[184,7315+17]..[184,7315+33])
                                      Pexp_ident "keyword_or_error" (stdlib/genlex.ml[184,7315+17]..[184,7315+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (stdlib/genlex.ml[184,7315+34]..[184,7315+37])
                                          Pexp_constant PConst_char 28
                                    ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[185,7354+6]..[185,7354+13])
                        Ppat_var "comment" (stdlib/genlex.ml[185,7354+6]..[185,7354+13])
                      expression (stdlib/genlex.ml[185,7354+14]..[190,7606+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[185,7354+14]..[185,7354+35])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[185,7354+15]..[185,7354+21])
                            Ppat_var "strm__" (stdlib/genlex.ml[185,7354+15]..[185,7354+21])
                          core_type (stdlib/genlex.ml[185,7354+24]..[185,7354+34])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[185,7354+26]..[185,7354+34])
                            [
                              core_type (stdlib/genlex.ml[185,7354+24]..[185,7354+25])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[186,7392+4]..[190,7606+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[186,7392+10]..[186,7392+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[186,7392+10]..[186,7392+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[186,7392+10]..[186,7392+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[186,7392+22]..[186,7392+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[186,7392+22]..[186,7392+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[187,7426+6]..[187,7426+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[187,7426+6]..[187,7426+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[187,7426+11]..[187,7426+14])
                                    Ppat_constant PConst_char 28
                              expression (stdlib/genlex.ml[187,7426+18]..[187,7426+65])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[187,7426+18]..[187,7426+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[187,7426+18]..[187,7426+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[187,7426+18]..[187,7426+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[187,7426+30]..[187,7426+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[187,7426+30]..[187,7426+36])
                                  ]
                                expression (stdlib/genlex.ml[187,7426+38]..[187,7426+65])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[187,7426+38]..[187,7426+58])
                                    Pexp_ident "maybe_nested_comment" (stdlib/genlex.ml[187,7426+38]..[187,7426+58])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[187,7426+59]..[187,7426+65])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[187,7426+59]..[187,7426+65])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[188,7492+6]..[188,7492+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[188,7492+6]..[188,7492+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[188,7492+11]..[188,7492+14])
                                    Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[188,7492+18]..[188,7492+62])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[188,7492+18]..[188,7492+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[188,7492+18]..[188,7492+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[188,7492+18]..[188,7492+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[188,7492+30]..[188,7492+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[188,7492+30]..[188,7492+36])
                                  ]
                                expression (stdlib/genlex.ml[188,7492+38]..[188,7492+62])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[188,7492+38]..[188,7492+55])
                                    Pexp_ident "maybe_end_comment" (stdlib/genlex.ml[188,7492+38]..[188,7492+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[188,7492+56]..[188,7492+62])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[188,7492+56]..[188,7492+62])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[189,7555+6]..[189,7555+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[189,7555+6]..[189,7555+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[189,7555+11]..[189,7555+12])
                                    Ppat_any
                              expression (stdlib/genlex.ml[189,7555+16]..[189,7555+50])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[189,7555+16]..[189,7555+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[189,7555+16]..[189,7555+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[189,7555+16]..[189,7555+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[189,7555+28]..[189,7555+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[189,7555+28]..[189,7555+34])
                                  ]
                                expression (stdlib/genlex.ml[189,7555+36]..[189,7555+50])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[189,7555+36]..[189,7555+43])
                                    Pexp_ident "comment" (stdlib/genlex.ml[189,7555+36]..[189,7555+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[189,7555+44]..[189,7555+50])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[189,7555+44]..[189,7555+50])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[190,7606+6]..[190,7606+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[190,7606+11]..[190,7606+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[190,7606+11]..[190,7606+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[190,7606+11]..[190,7606+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[190,7606+17]..[190,7606+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[190,7606+17]..[190,7606+31])
                                      None
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[191,7638+6]..[191,7638+26])
                        Ppat_var "maybe_nested_comment" (stdlib/genlex.ml[191,7638+6]..[191,7638+26])
                      expression (stdlib/genlex.ml[191,7638+27]..[195,7851+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[191,7638+27]..[191,7638+48])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[191,7638+28]..[191,7638+34])
                            Ppat_var "strm__" (stdlib/genlex.ml[191,7638+28]..[191,7638+34])
                          core_type (stdlib/genlex.ml[191,7638+37]..[191,7638+47])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[191,7638+39]..[191,7638+47])
                            [
                              core_type (stdlib/genlex.ml[191,7638+37]..[191,7638+38])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[192,7689+4]..[195,7851+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[192,7689+10]..[192,7689+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[192,7689+10]..[192,7689+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[192,7689+10]..[192,7689+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[192,7689+22]..[192,7689+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[192,7689+22]..[192,7689+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[193,7723+6]..[193,7723+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[193,7723+6]..[193,7723+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[193,7723+11]..[193,7723+14])
                                    Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[193,7723+18]..[193,7723+76])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[193,7723+18]..[193,7723+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[193,7723+18]..[193,7723+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[193,7723+18]..[193,7723+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[193,7723+30]..[193,7723+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[193,7723+30]..[193,7723+36])
                                  ]
                                expression (stdlib/genlex.ml[193,7723+38]..[193,7723+76])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (stdlib/genlex.ml[193,7723+42]..[193,7723+43])
                                        Ppat_var "s" (stdlib/genlex.ml[193,7723+42]..[193,7723+43])
                                      expression (stdlib/genlex.ml[193,7723+46]..[193,7723+52])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[193,7723+46]..[193,7723+52])
                                  ]
                                  expression (stdlib/genlex.ml[193,7723+56]..[193,7723+76])
                                    Pexp_sequence
                                    expression (stdlib/genlex.ml[193,7723+56]..[193,7723+65])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[193,7723+56]..[193,7723+63])
                                        Pexp_ident "comment" (stdlib/genlex.ml[193,7723+56]..[193,7723+63])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[193,7723+64]..[193,7723+65])
                                            Pexp_ident "s" (stdlib/genlex.ml[193,7723+64]..[193,7723+65])
                                      ]
                                    expression (stdlib/genlex.ml[193,7723+67]..[193,7723+76])
                                      Pexp_apply
                                      expression (stdlib/genlex.ml[193,7723+67]..[193,7723+74])
                                        Pexp_ident "comment" (stdlib/genlex.ml[193,7723+67]..[193,7723+74])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (stdlib/genlex.ml[193,7723+75]..[193,7723+76])
                                            Pexp_ident "s" (stdlib/genlex.ml[193,7723+75]..[193,7723+76])
                                      ]
                            <case>
                              pattern (stdlib/genlex.ml[194,7800+6]..[194,7800+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[194,7800+6]..[194,7800+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[194,7800+11]..[194,7800+12])
                                    Ppat_any
                              expression (stdlib/genlex.ml[194,7800+16]..[194,7800+50])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[194,7800+16]..[194,7800+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[194,7800+16]..[194,7800+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[194,7800+16]..[194,7800+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[194,7800+28]..[194,7800+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[194,7800+28]..[194,7800+34])
                                  ]
                                expression (stdlib/genlex.ml[194,7800+36]..[194,7800+50])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[194,7800+36]..[194,7800+43])
                                    Pexp_ident "comment" (stdlib/genlex.ml[194,7800+36]..[194,7800+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[194,7800+44]..[194,7800+50])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[194,7800+44]..[194,7800+50])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[195,7851+6]..[195,7851+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[195,7851+11]..[195,7851+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[195,7851+11]..[195,7851+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[195,7851+11]..[195,7851+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[195,7851+17]..[195,7851+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[195,7851+17]..[195,7851+31])
                                      None
                                ]
                          ]
                    <def>
                      pattern (stdlib/genlex.ml[196,7883+6]..[196,7883+23])
                        Ppat_var "maybe_end_comment" (stdlib/genlex.ml[196,7883+6]..[196,7883+23])
                      expression (stdlib/genlex.ml[196,7883+24]..[201,8120+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (stdlib/genlex.ml[196,7883+24]..[196,7883+45])
                          Ppat_constraint
                          pattern (stdlib/genlex.ml[196,7883+25]..[196,7883+31])
                            Ppat_var "strm__" (stdlib/genlex.ml[196,7883+25]..[196,7883+31])
                          core_type (stdlib/genlex.ml[196,7883+34]..[196,7883+44])
                            Ptyp_constr "Stream.t" (stdlib/genlex.ml[196,7883+36]..[196,7883+44])
                            [
                              core_type (stdlib/genlex.ml[196,7883+34]..[196,7883+35])
                                Ptyp_any
                            ]
                        expression (stdlib/genlex.ml[197,7931+4]..[201,8120+31])
                          Pexp_match
                          expression (stdlib/genlex.ml[197,7931+10]..[197,7931+28])
                            Pexp_apply
                            expression (stdlib/genlex.ml[197,7931+10]..[197,7931+21])
                              Pexp_ident "Stream.peek" (stdlib/genlex.ml[197,7931+10]..[197,7931+21])
                            [
                              <arg>
                              Nolabel
                                expression (stdlib/genlex.ml[197,7931+22]..[197,7931+28])
                                  Pexp_ident "strm__" (stdlib/genlex.ml[197,7931+22]..[197,7931+28])
                            ]
                          [
                            <case>
                              pattern (stdlib/genlex.ml[198,7965+6]..[198,7965+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[198,7965+6]..[198,7965+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[198,7965+11]..[198,7965+14])
                                    Ppat_constant PConst_char 29
                              expression (stdlib/genlex.ml[198,7965+18]..[198,7965+40])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[198,7965+18]..[198,7965+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[198,7965+18]..[198,7965+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[198,7965+18]..[198,7965+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[198,7965+30]..[198,7965+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[198,7965+30]..[198,7965+36])
                                  ]
                                expression (stdlib/genlex.ml[198,7965+38]..[198,7965+40])
                                  Pexp_construct "()" (stdlib/genlex.ml[198,7965+38]..[198,7965+40])
                                  None
                            <case>
                              pattern (stdlib/genlex.ml[199,8006+6]..[199,8006+14])
                                Ppat_construct "Some" (stdlib/genlex.ml[199,8006+6]..[199,8006+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[199,8006+11]..[199,8006+14])
                                    Ppat_constant PConst_char 2a
                              expression (stdlib/genlex.ml[199,8006+18]..[199,8006+62])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[199,8006+18]..[199,8006+36])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[199,8006+18]..[199,8006+29])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[199,8006+18]..[199,8006+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[199,8006+30]..[199,8006+36])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[199,8006+30]..[199,8006+36])
                                  ]
                                expression (stdlib/genlex.ml[199,8006+38]..[199,8006+62])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[199,8006+38]..[199,8006+55])
                                    Pexp_ident "maybe_end_comment" (stdlib/genlex.ml[199,8006+38]..[199,8006+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[199,8006+56]..[199,8006+62])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[199,8006+56]..[199,8006+62])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[200,8069+6]..[200,8069+12])
                                Ppat_construct "Some" (stdlib/genlex.ml[200,8069+6]..[200,8069+10])
                                Some
                                  []
                                  pattern (stdlib/genlex.ml[200,8069+11]..[200,8069+12])
                                    Ppat_any
                              expression (stdlib/genlex.ml[200,8069+16]..[200,8069+50])
                                Pexp_sequence
                                expression (stdlib/genlex.ml[200,8069+16]..[200,8069+34])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[200,8069+16]..[200,8069+27])
                                    Pexp_ident "Stream.junk" (stdlib/genlex.ml[200,8069+16]..[200,8069+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[200,8069+28]..[200,8069+34])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[200,8069+28]..[200,8069+34])
                                  ]
                                expression (stdlib/genlex.ml[200,8069+36]..[200,8069+50])
                                  Pexp_apply
                                  expression (stdlib/genlex.ml[200,8069+36]..[200,8069+43])
                                    Pexp_ident "comment" (stdlib/genlex.ml[200,8069+36]..[200,8069+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (stdlib/genlex.ml[200,8069+44]..[200,8069+50])
                                        Pexp_ident "strm__" (stdlib/genlex.ml[200,8069+44]..[200,8069+50])
                                  ]
                            <case>
                              pattern (stdlib/genlex.ml[201,8120+6]..[201,8120+7])
                                Ppat_any
                              expression (stdlib/genlex.ml[201,8120+11]..[201,8120+31])
                                Pexp_apply
                                expression (stdlib/genlex.ml[201,8120+11]..[201,8120+16])
                                  Pexp_ident "raise" (stdlib/genlex.ml[201,8120+11]..[201,8120+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (stdlib/genlex.ml[201,8120+17]..[201,8120+31])
                                      Pexp_construct "Stream.Failure" (stdlib/genlex.ml[201,8120+17]..[201,8120+31])
                                      None
                                ]
                          ]
                  ]
                  expression (stdlib/genlex.ml[203,8157+2]..[203,8157+59])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (stdlib/genlex.ml[203,8157+6]..[203,8157+11])
                      Ppat_var "input" (stdlib/genlex.ml[203,8157+6]..[203,8157+11])
                    expression (stdlib/genlex.ml[203,8157+15]..[203,8157+59])
                      Pexp_apply
                      expression (stdlib/genlex.ml[203,8157+15]..[203,8157+26])
                        Pexp_ident "Stream.from" (stdlib/genlex.ml[203,8157+15]..[203,8157+26])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/genlex.ml[203,8157+27]..[203,8157+59])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (stdlib/genlex.ml[203,8157+32]..[203,8157+38])
                              Ppat_var "_count" (stdlib/genlex.ml[203,8157+32]..[203,8157+38])
                            expression (stdlib/genlex.ml[203,8157+42]..[203,8157+58])
                              Pexp_apply
                              expression (stdlib/genlex.ml[203,8157+42]..[203,8157+52])
                                Pexp_ident "next_token" (stdlib/genlex.ml[203,8157+42]..[203,8157+52])
                              [
                                <arg>
                                Nolabel
                                  expression (stdlib/genlex.ml[203,8157+53]..[203,8157+58])
                                    Pexp_ident "input" (stdlib/genlex.ml[203,8157+53]..[203,8157+58])
                              ]
                      ]
    ]
]

