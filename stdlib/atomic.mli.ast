[
  signature_item (stdlib/atomic.mli[17,1156+0]..[27,1669+46])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/atomic.mli[17,1156+0]..[27,1669+46])
        Pstr_eval
        expression (stdlib/atomic.mli[17,1156+0]..[27,1669+46])
          Pexp_constant PConst_string(" This module provides a purely sequential implementation of the\n    concurrent atomic references provided by the Multicore OCaml\n    standard library:\n\n    https://github.com/ocaml-multicore/ocaml-multicore/blob/parallel_minor_gc/stdlib/atomic.mli\n\n    This sequential implementation is provided in the interest of\n    compatibility: when people will start writing code to run on\n    Multicore, it would be nice if their use of Atomic was\n    backward-compatible with older versions of OCaml without having to\n    import additional compatibility layers. ",(stdlib/atomic.mli[17,1156+0]..[27,1669+46]),None)
    ]
  signature_item (stdlib/atomic.mli[30,1779+0]..[30,1779+10])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/atomic.mli[30,1779+9]..[30,1779+10]) (stdlib/atomic.mli[30,1779+0]..[30,1779+10])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/atomic.mli[29,1717+0]..[29,1717+61])
              Pstr_eval
              expression (stdlib/atomic.mli[29,1717+0]..[29,1717+61])
                Pexp_constant PConst_string(" An atomic (mutable) reference to a value of type ['a]. ",(stdlib/atomic.mli[29,1717+0]..[29,1717+61]),None)
          ]
        ptype_params =
          [
            core_type (stdlib/atomic.mli[30,1779+6]..[30,1779+8])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/atomic.mli[33,1826+0]..[33,1826+21])
    Psig_value
    value_description "make" (stdlib/atomic.mli[33,1826+4]..[33,1826+8]) (stdlib/atomic.mli[33,1826+0]..[33,1826+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[32,1791+0]..[32,1791+34])
            Pstr_eval
            expression (stdlib/atomic.mli[32,1791+0]..[32,1791+34])
              Pexp_constant PConst_string(" Create an atomic reference. ",(stdlib/atomic.mli[32,1791+0]..[32,1791+34]),None)
        ]
      core_type (stdlib/atomic.mli[33,1826+11]..[33,1826+21])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[33,1826+11]..[33,1826+13])
          Ptyp_var a
        core_type (stdlib/atomic.mli[33,1826+17]..[33,1826+21])
          Ptyp_constr "t" (stdlib/atomic.mli[33,1826+20]..[33,1826+21])
          [
            core_type (stdlib/atomic.mli[33,1826+17]..[33,1826+19])
              Ptyp_var a
          ]
      []
  signature_item (stdlib/atomic.mli[36,1903+0]..[36,1903+20])
    Psig_value
    value_description "get" (stdlib/atomic.mli[36,1903+4]..[36,1903+7]) (stdlib/atomic.mli[36,1903+0]..[36,1903+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[35,1849+0]..[35,1849+53])
            Pstr_eval
            expression (stdlib/atomic.mli[35,1849+0]..[35,1849+53])
              Pexp_constant PConst_string(" Get the current value of the atomic reference. ",(stdlib/atomic.mli[35,1849+0]..[35,1849+53]),None)
        ]
      core_type (stdlib/atomic.mli[36,1903+10]..[36,1903+20])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[36,1903+10]..[36,1903+14])
          Ptyp_constr "t" (stdlib/atomic.mli[36,1903+13]..[36,1903+14])
          [
            core_type (stdlib/atomic.mli[36,1903+10]..[36,1903+12])
              Ptyp_var a
          ]
        core_type (stdlib/atomic.mli[36,1903+18]..[36,1903+20])
          Ptyp_var a
      []
  signature_item (stdlib/atomic.mli[39,1974+0]..[39,1974+28])
    Psig_value
    value_description "set" (stdlib/atomic.mli[39,1974+4]..[39,1974+7]) (stdlib/atomic.mli[39,1974+0]..[39,1974+28])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[38,1925+0]..[38,1925+48])
            Pstr_eval
            expression (stdlib/atomic.mli[38,1925+0]..[38,1925+48])
              Pexp_constant PConst_string(" Set a new value for the atomic reference. ",(stdlib/atomic.mli[38,1925+0]..[38,1925+48]),None)
        ]
      core_type (stdlib/atomic.mli[39,1974+10]..[39,1974+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[39,1974+10]..[39,1974+14])
          Ptyp_constr "t" (stdlib/atomic.mli[39,1974+13]..[39,1974+14])
          [
            core_type (stdlib/atomic.mli[39,1974+10]..[39,1974+12])
              Ptyp_var a
          ]
        core_type (stdlib/atomic.mli[39,1974+18]..[39,1974+28])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/atomic.mli[39,1974+18]..[39,1974+20])
            Ptyp_var a
          core_type (stdlib/atomic.mli[39,1974+24]..[39,1974+28])
            Ptyp_constr "unit" (stdlib/atomic.mli[39,1974+24]..[39,1974+28])
            []
      []
  signature_item (stdlib/atomic.mli[42,2083+0]..[42,2083+31])
    Psig_value
    value_description "exchange" (stdlib/atomic.mli[42,2083+4]..[42,2083+12]) (stdlib/atomic.mli[42,2083+0]..[42,2083+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[41,2004+0]..[41,2004+78])
            Pstr_eval
            expression (stdlib/atomic.mli[41,2004+0]..[41,2004+78])
              Pexp_constant PConst_string(" Set a new value for the atomic reference, and return the current value. ",(stdlib/atomic.mli[41,2004+0]..[41,2004+78]),None)
        ]
      core_type (stdlib/atomic.mli[42,2083+15]..[42,2083+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[42,2083+15]..[42,2083+19])
          Ptyp_constr "t" (stdlib/atomic.mli[42,2083+18]..[42,2083+19])
          [
            core_type (stdlib/atomic.mli[42,2083+15]..[42,2083+17])
              Ptyp_var a
          ]
        core_type (stdlib/atomic.mli[42,2083+23]..[42,2083+31])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/atomic.mli[42,2083+23]..[42,2083+25])
            Ptyp_var a
          core_type (stdlib/atomic.mli[42,2083+29]..[42,2083+31])
            Ptyp_var a
      []
  signature_item (stdlib/atomic.mli[49,2391+0]..[49,2391+46])
    Psig_value
    value_description "compare_and_set" (stdlib/atomic.mli[49,2391+4]..[49,2391+19]) (stdlib/atomic.mli[49,2391+0]..[49,2391+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[44,2116+0]..[48,2373+17])
            Pstr_eval
            expression (stdlib/atomic.mli[44,2116+0]..[48,2373+17])
              Pexp_constant PConst_string(" [compare_and_set r seen v] sets the new value of [r] to [v] only\n    if its current value is physically equal to [seen] -- the\n    comparison and the set occur atomically. Returns [true] if the\n    comparison succeeded (so the set happened) and [false]\n    otherwise. ",(stdlib/atomic.mli[44,2116+0]..[48,2373+17]),None)
        ]
      core_type (stdlib/atomic.mli[49,2391+22]..[49,2391+46])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[49,2391+22]..[49,2391+26])
          Ptyp_constr "t" (stdlib/atomic.mli[49,2391+25]..[49,2391+26])
          [
            core_type (stdlib/atomic.mli[49,2391+22]..[49,2391+24])
              Ptyp_var a
          ]
        core_type (stdlib/atomic.mli[49,2391+30]..[49,2391+46])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/atomic.mli[49,2391+30]..[49,2391+32])
            Ptyp_var a
          core_type (stdlib/atomic.mli[49,2391+36]..[49,2391+46])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/atomic.mli[49,2391+36]..[49,2391+38])
              Ptyp_var a
            core_type (stdlib/atomic.mli[49,2391+42]..[49,2391+46])
              Ptyp_constr "bool" (stdlib/atomic.mli[49,2391+42]..[49,2391+46])
              []
      []
  signature_item (stdlib/atomic.mli[53,2571+0]..[53,2571+39])
    Psig_value
    value_description "fetch_and_add" (stdlib/atomic.mli[53,2571+4]..[53,2571+17]) (stdlib/atomic.mli[53,2571+0]..[53,2571+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[51,2439+0]..[52,2510+60])
            Pstr_eval
            expression (stdlib/atomic.mli[51,2439+0]..[52,2510+60])
              Pexp_constant PConst_string(" [fetch_and_add r n] atomically increments the value of [r] by [n],\n    and returns the current value (before the increment). ",(stdlib/atomic.mli[51,2439+0]..[52,2510+60]),None)
        ]
      core_type (stdlib/atomic.mli[53,2571+20]..[53,2571+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[53,2571+20]..[53,2571+25])
          Ptyp_constr "t" (stdlib/atomic.mli[53,2571+24]..[53,2571+25])
          [
            core_type (stdlib/atomic.mli[53,2571+20]..[53,2571+23])
              Ptyp_constr "int" (stdlib/atomic.mli[53,2571+20]..[53,2571+23])
              []
          ]
        core_type (stdlib/atomic.mli[53,2571+29]..[53,2571+39])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/atomic.mli[53,2571+29]..[53,2571+32])
            Ptyp_constr "int" (stdlib/atomic.mli[53,2571+29]..[53,2571+32])
            []
          core_type (stdlib/atomic.mli[53,2571+36]..[53,2571+39])
            Ptyp_constr "int" (stdlib/atomic.mli[53,2571+36]..[53,2571+39])
            []
      []
  signature_item (stdlib/atomic.mli[56,2675+0]..[56,2675+24])
    Psig_value
    value_description "incr" (stdlib/atomic.mli[56,2675+4]..[56,2675+8]) (stdlib/atomic.mli[56,2675+0]..[56,2675+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[55,2612+0]..[55,2612+62])
            Pstr_eval
            expression (stdlib/atomic.mli[55,2612+0]..[55,2612+62])
              Pexp_constant PConst_string(" [incr r] atomically increments the value of [r] by [1]. ",(stdlib/atomic.mli[55,2612+0]..[55,2612+62]),None)
        ]
      core_type (stdlib/atomic.mli[56,2675+11]..[56,2675+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[56,2675+11]..[56,2675+16])
          Ptyp_constr "t" (stdlib/atomic.mli[56,2675+15]..[56,2675+16])
          [
            core_type (stdlib/atomic.mli[56,2675+11]..[56,2675+14])
              Ptyp_constr "int" (stdlib/atomic.mli[56,2675+11]..[56,2675+14])
              []
          ]
        core_type (stdlib/atomic.mli[56,2675+20]..[56,2675+24])
          Ptyp_constr "unit" (stdlib/atomic.mli[56,2675+20]..[56,2675+24])
          []
      []
  signature_item (stdlib/atomic.mli[59,2764+0]..[59,2764+24])
    Psig_value
    value_description "decr" (stdlib/atomic.mli[59,2764+4]..[59,2764+8]) (stdlib/atomic.mli[59,2764+0]..[59,2764+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/atomic.mli[58,2701+0]..[58,2701+62])
            Pstr_eval
            expression (stdlib/atomic.mli[58,2701+0]..[58,2701+62])
              Pexp_constant PConst_string(" [decr r] atomically decrements the value of [r] by [1]. ",(stdlib/atomic.mli[58,2701+0]..[58,2701+62]),None)
        ]
      core_type (stdlib/atomic.mli[59,2764+11]..[59,2764+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/atomic.mli[59,2764+11]..[59,2764+16])
          Ptyp_constr "t" (stdlib/atomic.mli[59,2764+15]..[59,2764+16])
          [
            core_type (stdlib/atomic.mli[59,2764+11]..[59,2764+14])
              Ptyp_constr "int" (stdlib/atomic.mli[59,2764+11]..[59,2764+14])
              []
          ]
        core_type (stdlib/atomic.mli[59,2764+20]..[59,2764+24])
          Ptyp_constr "unit" (stdlib/atomic.mli[59,2764+20]..[59,2764+24])
          []
      []
]

