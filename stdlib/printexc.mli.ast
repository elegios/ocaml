[
  signature_item (stdlib/printexc.mli[16,1079+0]..[16,1079+76])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[16,1079+0]..[16,1079+76])
        Pstr_eval
        expression (stdlib/printexc.mli[16,1079+0]..[16,1079+76])
          Pexp_constant PConst_string(" Facilities for printing exceptions and inspecting current call stack. ",(stdlib/printexc.mli[16,1079+0]..[16,1079+76]),None)
    ]
  signature_item (stdlib/printexc.mli[18,1157+0]..[18,1157+17])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/printexc.mli[18,1157+5]..[18,1157+6]) (stdlib/printexc.mli[18,1157+0]..[18,1157+17])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[19,1175+0]..[19,1175+36])
              Pstr_eval
              expression (stdlib/printexc.mli[19,1175+0]..[19,1175+36])
                Pexp_constant PConst_string(" The type of exception values. ",(stdlib/printexc.mli[19,1175+0]..[19,1175+36]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_open
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/printexc.mli[18,1157+9]..[18,1157+12])
              Ptyp_constr "exn" (stdlib/printexc.mli[18,1157+9]..[18,1157+12])
              []
    ]
  signature_item (stdlib/printexc.mli[21,1213+0]..[21,1213+28])
    Psig_value
    value_description "to_string" (stdlib/printexc.mli[21,1213+4]..[21,1213+13]) (stdlib/printexc.mli[21,1213+0]..[21,1213+28])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[22,1242+0]..[23,1304+24])
            Pstr_eval
            expression (stdlib/printexc.mli[22,1242+0]..[23,1304+24])
              Pexp_constant PConst_string(" [Printexc.to_string e] returns a string representation of\n   the exception [e]. ",(stdlib/printexc.mli[22,1242+0]..[23,1304+24]),None)
        ]
      core_type (stdlib/printexc.mli[21,1213+15]..[21,1213+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[21,1213+15]..[21,1213+18])
          Ptyp_constr "exn" (stdlib/printexc.mli[21,1213+15]..[21,1213+18])
          []
        core_type (stdlib/printexc.mli[21,1213+22]..[21,1213+28])
          Ptyp_constr "string" (stdlib/printexc.mli[21,1213+22]..[21,1213+28])
          []
      []
  signature_item (stdlib/printexc.mli[25,1330+0]..[25,1330+36])
    Psig_value
    value_description "to_string_default" (stdlib/printexc.mli[25,1330+4]..[25,1330+21]) (stdlib/printexc.mli[25,1330+0]..[25,1330+36])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[26,1367+0]..[29,1520+2])
            Pstr_eval
            expression (stdlib/printexc.mli[26,1367+0]..[29,1520+2])
              Pexp_constant PConst_string(" [Printexc.to_string_default e] returns a string representation of the\n    exception [e], ignoring all registered exception printers.\n    @since 4.09\n",(stdlib/printexc.mli[26,1367+0]..[29,1520+2]),None)
        ]
      core_type (stdlib/printexc.mli[25,1330+23]..[25,1330+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[25,1330+23]..[25,1330+26])
          Ptyp_constr "exn" (stdlib/printexc.mli[25,1330+23]..[25,1330+26])
          []
        core_type (stdlib/printexc.mli[25,1330+30]..[25,1330+36])
          Ptyp_constr "string" (stdlib/printexc.mli[25,1330+30]..[25,1330+36])
          []
      []
  signature_item (stdlib/printexc.mli[31,1524+0]..[31,1524+33])
    Psig_value
    value_description "print" (stdlib/printexc.mli[31,1524+4]..[31,1524+9]) (stdlib/printexc.mli[31,1524+0]..[31,1524+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[32,1558+0]..[37,1843+36])
            Pstr_eval
            expression (stdlib/printexc.mli[32,1558+0]..[37,1843+36])
              Pexp_constant PConst_string(" [Printexc.print fn x] applies [fn] to [x] and returns the result.\n   If the evaluation of [fn x] raises any exception, the\n   name of the exception is printed on standard error output,\n   and the exception is raised again.\n   The typical use is to catch and report exceptions that\n   escape a function application. ",(stdlib/printexc.mli[32,1558+0]..[37,1843+36]),None)
        ]
      core_type (stdlib/printexc.mli[31,1524+11]..[31,1524+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[31,1524+12]..[31,1524+20])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[31,1524+12]..[31,1524+14])
            Ptyp_var a
          core_type (stdlib/printexc.mli[31,1524+18]..[31,1524+20])
            Ptyp_var b
        core_type (stdlib/printexc.mli[31,1524+25]..[31,1524+33])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[31,1524+25]..[31,1524+27])
            Ptyp_var a
          core_type (stdlib/printexc.mli[31,1524+31]..[31,1524+33])
            Ptyp_var b
      []
  signature_item (stdlib/printexc.mli[39,1881+0]..[39,1881+33])
    Psig_value
    value_description "catch" (stdlib/printexc.mli[39,1881+4]..[39,1881+9]) (stdlib/printexc.mli[39,1881+0]..[39,1881+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[40,1915+0]..[47,2343+51])
            Pstr_eval
            expression (stdlib/printexc.mli[40,1915+0]..[47,2343+51])
              Pexp_constant PConst_string(" [Printexc.catch fn x] is similar to {!Printexc.print}, but\n   aborts the program with exit code 2 after printing the\n   uncaught exception.  This function is deprecated: the runtime\n   system is now able to print uncaught exceptions as precisely\n   as [Printexc.catch] does.  Moreover, calling [Printexc.catch]\n   makes it harder to track the location of the exception\n   using the debugger or the stack backtrace facility.\n   So, do not use [Printexc.catch] in new code.  ",(stdlib/printexc.mli[40,1915+0]..[47,2343+51]),None)
        ]
      core_type (stdlib/printexc.mli[39,1881+11]..[39,1881+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[39,1881+12]..[39,1881+20])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[39,1881+12]..[39,1881+14])
            Ptyp_var a
          core_type (stdlib/printexc.mli[39,1881+18]..[39,1881+20])
            Ptyp_var b
        core_type (stdlib/printexc.mli[39,1881+25]..[39,1881+33])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[39,1881+25]..[39,1881+27])
            Ptyp_var a
          core_type (stdlib/printexc.mli[39,1881+31]..[39,1881+33])
            Ptyp_var b
      []
  signature_item (stdlib/printexc.mli[49,2396+0]..[49,2396+40])
    Psig_value
    value_description "print_backtrace" (stdlib/printexc.mli[49,2396+4]..[49,2396+19]) (stdlib/printexc.mli[49,2396+0]..[49,2396+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[50,2437+0]..[62,3027+2])
            Pstr_eval
            expression (stdlib/printexc.mli[50,2437+0]..[62,3027+2])
              Pexp_constant PConst_string(" [Printexc.print_backtrace oc] prints an exception backtrace\n    on the output channel [oc].  The backtrace lists the program\n    locations where the most-recently raised exception was raised\n    and where it was propagated through function calls.\n\n    If the call is not inside an exception handler, the returned\n    backtrace is unspecified. If the call is after some\n    exception-catching code (before in the handler, or in a when-guard\n    during the matching of the exception handler), the backtrace may\n    correspond to a later exception than the handled one.\n\n    @since 3.11.0\n",(stdlib/printexc.mli[50,2437+0]..[62,3027+2]),None)
        ]
      core_type (stdlib/printexc.mli[49,2396+21]..[49,2396+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[49,2396+21]..[49,2396+32])
          Ptyp_constr "out_channel" (stdlib/printexc.mli[49,2396+21]..[49,2396+32])
          []
        core_type (stdlib/printexc.mli[49,2396+36]..[49,2396+40])
          Ptyp_constr "unit" (stdlib/printexc.mli[49,2396+36]..[49,2396+40])
          []
      []
  signature_item (stdlib/printexc.mli[64,3031+0]..[64,3031+33])
    Psig_value
    value_description "get_backtrace" (stdlib/printexc.mli[64,3031+4]..[64,3031+17]) (stdlib/printexc.mli[64,3031+0]..[64,3031+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[65,3065+0]..[69,3273+2])
            Pstr_eval
            expression (stdlib/printexc.mli[65,3065+0]..[69,3273+2])
              Pexp_constant PConst_string(" [Printexc.get_backtrace ()] returns a string containing the\n    same exception backtrace that [Printexc.print_backtrace] would\n    print. Same restriction usage than {!print_backtrace}.\n    @since 3.11.0\n",(stdlib/printexc.mli[65,3065+0]..[69,3273+2]),None)
        ]
      core_type (stdlib/printexc.mli[64,3031+19]..[64,3031+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[64,3031+19]..[64,3031+23])
          Ptyp_constr "unit" (stdlib/printexc.mli[64,3031+19]..[64,3031+23])
          []
        core_type (stdlib/printexc.mli[64,3031+27]..[64,3031+33])
          Ptyp_constr "string" (stdlib/printexc.mli[64,3031+27]..[64,3031+33])
          []
      []
  signature_item (stdlib/printexc.mli[71,3277+0]..[71,3277+34])
    Psig_value
    value_description "record_backtrace" (stdlib/printexc.mli[71,3277+4]..[71,3277+20]) (stdlib/printexc.mli[71,3277+0]..[71,3277+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[72,3312+0]..[77,3583+2])
            Pstr_eval
            expression (stdlib/printexc.mli[72,3312+0]..[77,3583+2])
              Pexp_constant PConst_string(" [Printexc.record_backtrace b] turns recording of exception backtraces\n    on (if [b = true]) or off (if [b = false]).  Initially, backtraces\n    are not recorded, unless the [b] flag is given to the program\n    through the [OCAMLRUNPARAM] variable.\n    @since 3.11.0\n",(stdlib/printexc.mli[72,3312+0]..[77,3583+2]),None)
        ]
      core_type (stdlib/printexc.mli[71,3277+22]..[71,3277+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[71,3277+22]..[71,3277+26])
          Ptyp_constr "bool" (stdlib/printexc.mli[71,3277+22]..[71,3277+26])
          []
        core_type (stdlib/printexc.mli[71,3277+30]..[71,3277+34])
          Ptyp_constr "unit" (stdlib/printexc.mli[71,3277+30]..[71,3277+34])
          []
      []
  signature_item (stdlib/printexc.mli[79,3587+0]..[79,3587+34])
    Psig_value
    value_description "backtrace_status" (stdlib/printexc.mli[79,3587+4]..[79,3587+20]) (stdlib/printexc.mli[79,3587+0]..[79,3587+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[80,3622+0]..[83,3757+2])
            Pstr_eval
            expression (stdlib/printexc.mli[80,3622+0]..[83,3757+2])
              Pexp_constant PConst_string(" [Printexc.backtrace_status()] returns [true] if exception\n    backtraces are currently recorded, [false] if not.\n    @since 3.11.0\n",(stdlib/printexc.mli[80,3622+0]..[83,3757+2]),None)
        ]
      core_type (stdlib/printexc.mli[79,3587+22]..[79,3587+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[79,3587+22]..[79,3587+26])
          Ptyp_constr "unit" (stdlib/printexc.mli[79,3587+22]..[79,3587+26])
          []
        core_type (stdlib/printexc.mli[79,3587+30]..[79,3587+34])
          Ptyp_constr "bool" (stdlib/printexc.mli[79,3587+30]..[79,3587+34])
          []
      []
  signature_item (stdlib/printexc.mli[85,3761+0]..[85,3761+52])
    Psig_value
    value_description "register_printer" (stdlib/printexc.mli[85,3761+4]..[85,3761+20]) (stdlib/printexc.mli[85,3761+0]..[85,3761+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[86,3814+0]..[102,4711+2])
            Pstr_eval
            expression (stdlib/printexc.mli[86,3814+0]..[102,4711+2])
              Pexp_constant PConst_string(" [Printexc.register_printer fn] registers [fn] as an exception\n    printer.  The printer should return [None] or raise an exception\n    if it does not know how to convert the passed exception, and [Some\n    s] with [s] the resulting string if it can convert the passed\n    exception. Exceptions raised by the printer are ignored.\n\n    When converting an exception into a string, the printers will be invoked\n    in the reverse order of their registrations, until a printer returns\n    a [Some s] value (if no such printer exists, the runtime will use a\n    generic printer).\n\n    When using this mechanism, one should be aware that an exception backtrace\n    is attached to the thread that saw it raised, rather than to the exception\n    itself. Practically, it means that the code related to [fn] should not use\n    the backtrace if it has itself raised an exception before.\n    @since 3.11.2\n",(stdlib/printexc.mli[86,3814+0]..[102,4711+2]),None)
        ]
      core_type (stdlib/printexc.mli[85,3761+22]..[85,3761+52])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[85,3761+23]..[85,3761+43])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[85,3761+23]..[85,3761+26])
            Ptyp_constr "exn" (stdlib/printexc.mli[85,3761+23]..[85,3761+26])
            []
          core_type (stdlib/printexc.mli[85,3761+30]..[85,3761+43])
            Ptyp_constr "option" (stdlib/printexc.mli[85,3761+37]..[85,3761+43])
            [
              core_type (stdlib/printexc.mli[85,3761+30]..[85,3761+36])
                Ptyp_constr "string" (stdlib/printexc.mli[85,3761+30]..[85,3761+36])
                []
            ]
        core_type (stdlib/printexc.mli[85,3761+48]..[85,3761+52])
          Ptyp_constr "unit" (stdlib/printexc.mli[85,3761+48]..[85,3761+52])
          []
      []
  signature_item (stdlib/printexc.mli[104,4715+0]..[104,4715+38])
    Psig_value
    value_description "use_printers" (stdlib/printexc.mli[104,4715+4]..[104,4715+16]) (stdlib/printexc.mli[104,4715+0]..[104,4715+38])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[105,4754+0]..[108,4913+2])
            Pstr_eval
            expression (stdlib/printexc.mli[105,4754+0]..[108,4913+2])
              Pexp_constant PConst_string(" [Printexc.use_printers e] returns [None] if there are no registered\n    printers and [Some s] with else as the resulting string otherwise.\n    @since 4.09\n",(stdlib/printexc.mli[105,4754+0]..[108,4913+2]),None)
        ]
      core_type (stdlib/printexc.mli[104,4715+18]..[104,4715+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[104,4715+18]..[104,4715+21])
          Ptyp_constr "exn" (stdlib/printexc.mli[104,4715+18]..[104,4715+21])
          []
        core_type (stdlib/printexc.mli[104,4715+25]..[104,4715+38])
          Ptyp_constr "option" (stdlib/printexc.mli[104,4715+32]..[104,4715+38])
          [
            core_type (stdlib/printexc.mli[104,4715+25]..[104,4715+31])
              Ptyp_constr "string" (stdlib/printexc.mli[104,4715+25]..[104,4715+31])
              []
          ]
      []
  signature_item (stdlib/printexc.mli[110,4917+0]..[110,4917+25])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[110,4917+0]..[110,4917+25])
        Pstr_eval
        expression (stdlib/printexc.mli[110,4917+0]..[110,4917+25])
          Pexp_constant PConst_string(" {1 Raw backtraces} ",(stdlib/printexc.mli[110,4917+0]..[110,4917+25]),None)
    ]
  signature_item (stdlib/printexc.mli[112,4944+0]..[112,4944+18])
    Psig_type Rec
    [
      type_declaration "raw_backtrace" (stdlib/printexc.mli[112,4944+5]..[112,4944+18]) (stdlib/printexc.mli[112,4944+0]..[112,4944+18])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[113,4963+0]..[126,5547+2])
              Pstr_eval
              expression (stdlib/printexc.mli[113,4963+0]..[126,5547+2])
                Pexp_constant PConst_string(" The type [raw_backtrace] stores a backtrace in a low-level format,\n    which can be converted to usable form using [raw_backtrace_entries]\n    and [backtrace_slots_of_raw_entry] below.\n\n    Converting backtraces to [backtrace_slot]s is slower than capturing the\n    backtraces. If an application processes many backtraces, it can be useful\n    to use [raw_backtrace] to avoid or delay conversion.\n\n    Raw backtraces cannot be marshalled. If you need marshalling, you\n    should use the array returned by the [backtrace_slots] function of\n    the next section.\n\n    @since 4.01.0\n",(stdlib/printexc.mli[113,4963+0]..[126,5547+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/printexc.mli[128,5551+0]..[128,5551+38])
    Psig_type Rec
    [
      type_declaration "raw_backtrace_entry" (stdlib/printexc.mli[128,5551+5]..[128,5551+24]) (stdlib/printexc.mli[128,5551+0]..[128,5551+38])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[129,5590+0]..[147,6479+20])
              Pstr_eval
              expression (stdlib/printexc.mli[129,5590+0]..[147,6479+20])
                Pexp_constant PConst_string(" A [raw_backtrace_entry] is an element of a [raw_backtrace].\n\n    Each [raw_backtrace_entry] is an opaque integer, whose value is not stable\n    between different programs, or even between different runs of the same\n    binary.\n\n    A [raw_backtrace_entry] can be converted to a usable form using\n    [backtrace_slots_of_raw_entry] below. Note that, due to inlining, a\n    single [raw_backtrace_entry] may convert to several [backtrace_slot]s.\n    Since the values of a [raw_backtrace_entry] are not stable, they cannot\n    be marshalled. If they are to be converted, the conversion must be done\n    by the process that generated them.\n\n    Again due to inlining, there may be multiple distinct raw_backtrace_entry\n    values that convert to equal [backtrace_slot]s. However, if two\n    [raw_backtrace_entry]s are equal as integers, then they represent the same\n    [backtrace_slot]s.\n\n    @since 4.12.0 ",(stdlib/printexc.mli[129,5590+0]..[147,6479+20]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Private
        ptype_manifest =
          Some
            core_type (stdlib/printexc.mli[128,5551+35]..[128,5551+38])
              Ptyp_constr "int" (stdlib/printexc.mli[128,5551+35]..[128,5551+38])
              []
    ]
  signature_item (stdlib/printexc.mli[149,6501+0]..[149,6501+70])
    Psig_value
    value_description "raw_backtrace_entries" (stdlib/printexc.mli[149,6501+4]..[149,6501+25]) (stdlib/printexc.mli[149,6501+0]..[149,6501+70])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[150,6572+0]..[150,6572+20])
            Pstr_eval
            expression (stdlib/printexc.mli[150,6572+0]..[150,6572+20])
              Pexp_constant PConst_string(" @since 4.12.0 ",(stdlib/printexc.mli[150,6572+0]..[150,6572+20]),None)
        ]
      core_type (stdlib/printexc.mli[149,6501+28]..[149,6501+70])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[149,6501+28]..[149,6501+41])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[149,6501+28]..[149,6501+41])
          []
        core_type (stdlib/printexc.mli[149,6501+45]..[149,6501+70])
          Ptyp_constr "array" (stdlib/printexc.mli[149,6501+65]..[149,6501+70])
          [
            core_type (stdlib/printexc.mli[149,6501+45]..[149,6501+64])
              Ptyp_constr "raw_backtrace_entry" (stdlib/printexc.mli[149,6501+45]..[149,6501+64])
              []
          ]
      []
  signature_item (stdlib/printexc.mli[152,6594+0]..[152,6594+44])
    Psig_value
    value_description "get_raw_backtrace" (stdlib/printexc.mli[152,6594+4]..[152,6594+21]) (stdlib/printexc.mli[152,6594+0]..[152,6594+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[153,6639+0]..[158,6853+2])
            Pstr_eval
            expression (stdlib/printexc.mli[153,6639+0]..[158,6853+2])
              Pexp_constant PConst_string(" [Printexc.get_raw_backtrace ()] returns the same exception\n    backtrace that [Printexc.print_backtrace] would print, but in\n    a raw format. Same restriction usage than {!print_backtrace}.\n\n    @since 4.01.0\n",(stdlib/printexc.mli[153,6639+0]..[158,6853+2]),None)
        ]
      core_type (stdlib/printexc.mli[152,6594+23]..[152,6594+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[152,6594+23]..[152,6594+27])
          Ptyp_constr "unit" (stdlib/printexc.mli[152,6594+23]..[152,6594+27])
          []
        core_type (stdlib/printexc.mli[152,6594+31]..[152,6594+44])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[152,6594+31]..[152,6594+44])
          []
      []
  signature_item (stdlib/printexc.mli[160,6857+0]..[160,6857+61])
    Psig_value
    value_description "print_raw_backtrace" (stdlib/printexc.mli[160,6857+4]..[160,6857+23]) (stdlib/printexc.mli[160,6857+0]..[160,6857+61])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[161,6919+0]..[165,7020+2])
            Pstr_eval
            expression (stdlib/printexc.mli[161,6919+0]..[165,7020+2])
              Pexp_constant PConst_string(" Print a raw backtrace in the same format\n    [Printexc.print_backtrace] uses.\n\n    @since 4.01.0\n",(stdlib/printexc.mli[161,6919+0]..[165,7020+2]),None)
        ]
      core_type (stdlib/printexc.mli[160,6857+25]..[160,6857+61])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[160,6857+25]..[160,6857+36])
          Ptyp_constr "out_channel" (stdlib/printexc.mli[160,6857+25]..[160,6857+36])
          []
        core_type (stdlib/printexc.mli[160,6857+40]..[160,6857+61])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[160,6857+40]..[160,6857+53])
            Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[160,6857+40]..[160,6857+53])
            []
          core_type (stdlib/printexc.mli[160,6857+57]..[160,6857+61])
            Ptyp_constr "unit" (stdlib/printexc.mli[160,6857+57]..[160,6857+61])
            []
      []
  signature_item (stdlib/printexc.mli[167,7024+0]..[167,7024+52])
    Psig_value
    value_description "raw_backtrace_to_string" (stdlib/printexc.mli[167,7024+4]..[167,7024+27]) (stdlib/printexc.mli[167,7024+0]..[167,7024+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[168,7077+0]..[172,7192+2])
            Pstr_eval
            expression (stdlib/printexc.mli[168,7077+0]..[172,7192+2])
              Pexp_constant PConst_string(" Return a string from a raw backtrace, in the same format\n    [Printexc.get_backtrace] uses.\n\n    @since 4.01.0\n",(stdlib/printexc.mli[168,7077+0]..[172,7192+2]),None)
        ]
      core_type (stdlib/printexc.mli[167,7024+29]..[167,7024+52])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[167,7024+29]..[167,7024+42])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[167,7024+29]..[167,7024+42])
          []
        core_type (stdlib/printexc.mli[167,7024+46]..[167,7024+52])
          Ptyp_constr "string" (stdlib/printexc.mli[167,7024+46]..[167,7024+52])
          []
      []
  signature_item (stdlib/printexc.mli[174,7196+0]..[175,7254+27])
    Psig_value
    value_description "raise_with_backtrace" (stdlib/printexc.mli[174,7196+9]..[174,7196+29]) (stdlib/printexc.mli[174,7196+0]..[175,7254+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[176,7282+0]..[180,7393+2])
            Pstr_eval
            expression (stdlib/printexc.mli[176,7282+0]..[180,7393+2])
              Pexp_constant PConst_string(" Reraise the exception using the given raw_backtrace for the\n    origin of the exception\n\n    @since 4.05.0\n",(stdlib/printexc.mli[176,7282+0]..[180,7393+2]),None)
        ]
      core_type (stdlib/printexc.mli[174,7196+31]..[174,7196+57])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[174,7196+31]..[174,7196+34])
          Ptyp_constr "exn" (stdlib/printexc.mli[174,7196+31]..[174,7196+34])
          []
        core_type (stdlib/printexc.mli[174,7196+38]..[174,7196+57])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[174,7196+38]..[174,7196+51])
            Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[174,7196+38]..[174,7196+51])
            []
          core_type (stdlib/printexc.mli[174,7196+55]..[174,7196+57])
            Ptyp_var a
      [
        "%raise_with_backtrace"
      ]
  signature_item (stdlib/printexc.mli[182,7397+0]..[182,7397+29])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[182,7397+0]..[182,7397+29])
        Pstr_eval
        expression (stdlib/printexc.mli[182,7397+0]..[182,7397+29])
          Pexp_constant PConst_string(" {1 Current call stack} ",(stdlib/printexc.mli[182,7397+0]..[182,7397+29]),None)
    ]
  signature_item (stdlib/printexc.mli[184,7428+0]..[184,7428+75])
    Psig_value
    value_description "get_callstack" (stdlib/printexc.mli[184,7428+9]..[184,7428+22]) (stdlib/printexc.mli[184,7428+0]..[184,7428+75])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[185,7504+0]..[191,7803+2])
            Pstr_eval
            expression (stdlib/printexc.mli[185,7504+0]..[191,7803+2])
              Pexp_constant PConst_string(" [Printexc.get_callstack n] returns a description of the top of the\n    call stack on the current program point (for the current thread),\n    with at most [n] entries.  (Note: this function is not related to\n    exceptions at all, despite being part of the [Printexc] module.)\n\n    @since 4.01.0\n",(stdlib/printexc.mli[185,7504+0]..[191,7803+2]),None)
        ]
      core_type (stdlib/printexc.mli[184,7428+24]..[184,7428+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[184,7428+24]..[184,7428+27])
          Ptyp_constr "int" (stdlib/printexc.mli[184,7428+24]..[184,7428+27])
          []
        core_type (stdlib/printexc.mli[184,7428+31]..[184,7428+44])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[184,7428+31]..[184,7428+44])
          []
      [
        "caml_get_current_callstack"
      ]
  signature_item (stdlib/printexc.mli[193,7807+0]..[193,7807+30])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[193,7807+0]..[193,7807+30])
        Pstr_eval
        expression (stdlib/printexc.mli[193,7807+0]..[193,7807+30])
          Pexp_constant PConst_string(" {1 Uncaught exceptions} ",(stdlib/printexc.mli[193,7807+0]..[193,7807+30]),None)
    ]
  signature_item (stdlib/printexc.mli[195,7839+0]..[195,7839+68])
    Psig_value
    value_description "default_uncaught_exception_handler" (stdlib/printexc.mli[195,7839+4]..[195,7839+38]) (stdlib/printexc.mli[195,7839+0]..[195,7839+68])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[196,7908+0]..[200,8040+2])
            Pstr_eval
            expression (stdlib/printexc.mli[196,7908+0]..[200,8040+2])
              Pexp_constant PConst_string(" [Printexc.default_uncaught_exception_handler] prints the exception and\n    backtrace on standard error output.\n\n    @since 4.11\n",(stdlib/printexc.mli[196,7908+0]..[200,8040+2]),None)
        ]
      core_type (stdlib/printexc.mli[195,7839+40]..[195,7839+68])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[195,7839+40]..[195,7839+43])
          Ptyp_constr "exn" (stdlib/printexc.mli[195,7839+40]..[195,7839+43])
          []
        core_type (stdlib/printexc.mli[195,7839+47]..[195,7839+68])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[195,7839+47]..[195,7839+60])
            Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[195,7839+47]..[195,7839+60])
            []
          core_type (stdlib/printexc.mli[195,7839+64]..[195,7839+68])
            Ptyp_constr "unit" (stdlib/printexc.mli[195,7839+64]..[195,7839+68])
            []
      []
  signature_item (stdlib/printexc.mli[202,8044+0]..[202,8044+74])
    Psig_value
    value_description "set_uncaught_exception_handler" (stdlib/printexc.mli[202,8044+4]..[202,8044+34]) (stdlib/printexc.mli[202,8044+0]..[202,8044+74])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[203,8119+0]..[218,8822+2])
            Pstr_eval
            expression (stdlib/printexc.mli[203,8119+0]..[218,8822+2])
              Pexp_constant PConst_string(" [Printexc.set_uncaught_exception_handler fn] registers [fn] as the handler\n    for uncaught exceptions. The default handler is\n    {!Printexc.default_uncaught_exception_handler}.\n\n    Note that when [fn] is called all the functions registered with\n    {!Stdlib.at_exit} have already been called. Because of this you must\n    make sure any output channel [fn] writes on is flushed.\n\n    Also note that exceptions raised by user code in the interactive toplevel\n    are not passed to this function as they are caught by the toplevel itself.\n\n    If [fn] raises an exception, both the exceptions passed to [fn] and raised\n    by [fn] will be printed with their respective backtrace.\n\n    @since 4.02.0\n",(stdlib/printexc.mli[203,8119+0]..[218,8822+2]),None)
        ]
      core_type (stdlib/printexc.mli[202,8044+36]..[202,8044+74])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[202,8044+37]..[202,8044+65])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[202,8044+37]..[202,8044+40])
            Ptyp_constr "exn" (stdlib/printexc.mli[202,8044+37]..[202,8044+40])
            []
          core_type (stdlib/printexc.mli[202,8044+44]..[202,8044+65])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/printexc.mli[202,8044+44]..[202,8044+57])
              Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[202,8044+44]..[202,8044+57])
              []
            core_type (stdlib/printexc.mli[202,8044+61]..[202,8044+65])
              Ptyp_constr "unit" (stdlib/printexc.mli[202,8044+61]..[202,8044+65])
              []
        core_type (stdlib/printexc.mli[202,8044+70]..[202,8044+74])
          Ptyp_constr "unit" (stdlib/printexc.mli[202,8044+70]..[202,8044+74])
          []
      []
  signature_item (stdlib/printexc.mli[221,8827+0]..[225,9015+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[221,8827+0]..[225,9015+2])
        Pstr_eval
        expression (stdlib/printexc.mli[221,8827+0]..[225,9015+2])
          Pexp_constant PConst_string(" {1 Manipulation of backtrace information}\n\n    These functions are used to traverse the slots of a raw backtrace\n    and extract information from them in a programmer-friendly format.\n",(stdlib/printexc.mli[221,8827+0]..[225,9015+2]),None)
    ]
  signature_item (stdlib/printexc.mli[227,9019+0]..[227,9019+19])
    Psig_type Rec
    [
      type_declaration "backtrace_slot" (stdlib/printexc.mli[227,9019+5]..[227,9019+19]) (stdlib/printexc.mli[227,9019+0]..[227,9019+19])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[228,9039+0]..[232,9140+2])
              Pstr_eval
              expression (stdlib/printexc.mli[228,9039+0]..[232,9140+2])
                Pexp_constant PConst_string(" The abstract type [backtrace_slot] represents a single slot of\n    a backtrace.\n\n    @since 4.02\n",(stdlib/printexc.mli[228,9039+0]..[232,9140+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/printexc.mli[234,9144+0]..[234,9144+66])
    Psig_value
    value_description "backtrace_slots" (stdlib/printexc.mli[234,9144+4]..[234,9144+19]) (stdlib/printexc.mli[234,9144+0]..[234,9144+66])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[235,9211+0]..[249,9762+2])
            Pstr_eval
            expression (stdlib/printexc.mli[235,9211+0]..[249,9762+2])
              Pexp_constant PConst_string(" Returns the slots of a raw backtrace, or [None] if none of them\n    contain useful information.\n\n    In the return array, the slot at index [0] corresponds to the most\n    recent function call, raise, or primitive [get_backtrace] call in\n    the trace.\n\n    Some possible reasons for returning [None] are as follow:\n    - none of the slots in the trace come from modules compiled with\n    debug information ([-g])\n    - the program is a bytecode program that has not been linked with\n    debug information enabled ([ocamlc -g])\n\n    @since 4.02.0\n",(stdlib/printexc.mli[235,9211+0]..[249,9762+2]),None)
        ]
      core_type (stdlib/printexc.mli[234,9144+22]..[234,9144+66])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[234,9144+22]..[234,9144+35])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[234,9144+22]..[234,9144+35])
          []
        core_type (stdlib/printexc.mli[234,9144+39]..[234,9144+66])
          Ptyp_constr "option" (stdlib/printexc.mli[234,9144+60]..[234,9144+66])
          [
            core_type (stdlib/printexc.mli[234,9144+39]..[234,9144+59])
              Ptyp_constr "array" (stdlib/printexc.mli[234,9144+54]..[234,9144+59])
              [
                core_type (stdlib/printexc.mli[234,9144+39]..[234,9144+53])
                  Ptyp_constr "backtrace_slot" (stdlib/printexc.mli[234,9144+39]..[234,9144+53])
                  []
              ]
          ]
      []
  signature_item (stdlib/printexc.mli[251,9766+0]..[252,9801+52])
    Psig_value
    value_description "backtrace_slots_of_raw_entry" (stdlib/printexc.mli[251,9766+4]..[251,9766+32]) (stdlib/printexc.mli[251,9766+0]..[252,9801+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[253,9854+0]..[261,10159+2])
            Pstr_eval
            expression (stdlib/printexc.mli[253,9854+0]..[261,10159+2])
              Pexp_constant PConst_string(" Returns the slots of a single raw backtrace entry, or [None] if this\n    entry lacks debug information.\n\n    Slots are returned in the same order as [backtrace_slots]: the slot\n    at index [0] is the most recent call, raise, or primitive, and\n    subsequent slots represent callers.\n\n    @since 4.12\n",(stdlib/printexc.mli[253,9854+0]..[261,10159+2]),None)
        ]
      core_type (stdlib/printexc.mli[252,9801+2]..[252,9801+52])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[252,9801+2]..[252,9801+21])
          Ptyp_constr "raw_backtrace_entry" (stdlib/printexc.mli[252,9801+2]..[252,9801+21])
          []
        core_type (stdlib/printexc.mli[252,9801+25]..[252,9801+52])
          Ptyp_constr "option" (stdlib/printexc.mli[252,9801+46]..[252,9801+52])
          [
            core_type (stdlib/printexc.mli[252,9801+25]..[252,9801+45])
              Ptyp_constr "array" (stdlib/printexc.mli[252,9801+40]..[252,9801+45])
              [
                core_type (stdlib/printexc.mli[252,9801+25]..[252,9801+39])
                  Ptyp_constr "backtrace_slot" (stdlib/printexc.mli[252,9801+25]..[252,9801+39])
                  []
              ]
          ]
      []
  signature_item (stdlib/printexc.mli[264,10164+0]..[269,10262+1])
    Psig_type Rec
    [
      type_declaration "location" (stdlib/printexc.mli[264,10164+5]..[264,10164+13]) (stdlib/printexc.mli[264,10164+0]..[269,10262+1])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[270,10264+0]..[275,10428+2])
              Pstr_eval
              expression (stdlib/printexc.mli[270,10264+0]..[275,10428+2])
                Pexp_constant PConst_string(" The type of location information found in backtraces. [start_char]\n    and [end_char] are positions relative to the beginning of the\n    line.\n\n    @since 4.02\n",(stdlib/printexc.mli[270,10264+0]..[275,10428+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/printexc.mli[265,10182+2]..[265,10182+20])
                Immutable
                "filename" (stdlib/printexc.mli[265,10182+2]..[265,10182+10])                core_type (stdlib/printexc.mli[265,10182+13]..[265,10182+19])
                  Ptyp_constr "string" (stdlib/printexc.mli[265,10182+13]..[265,10182+19])
                  []
              (stdlib/printexc.mli[266,10203+2]..[266,10203+20])
                Immutable
                "line_number" (stdlib/printexc.mli[266,10203+2]..[266,10203+13])                core_type (stdlib/printexc.mli[266,10203+16]..[266,10203+19])
                  Ptyp_constr "int" (stdlib/printexc.mli[266,10203+16]..[266,10203+19])
                  []
              (stdlib/printexc.mli[267,10224+2]..[267,10224+19])
                Immutable
                "start_char" (stdlib/printexc.mli[267,10224+2]..[267,10224+12])                core_type (stdlib/printexc.mli[267,10224+15]..[267,10224+18])
                  Ptyp_constr "int" (stdlib/printexc.mli[267,10224+15]..[267,10224+18])
                  []
              (stdlib/printexc.mli[268,10244+2]..[268,10244+17])
                Immutable
                "end_char" (stdlib/printexc.mli[268,10244+2]..[268,10244+10])                core_type (stdlib/printexc.mli[268,10244+13]..[268,10244+16])
                  Ptyp_constr "int" (stdlib/printexc.mli[268,10244+13]..[268,10244+16])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/printexc.mli[278,10453+0]..[330,12097+3])
    Psig_module "Slot" (stdlib/printexc.mli[278,10453+7]..[278,10453+11])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[277,10432+0]..[277,10432+20])
            Pstr_eval
            expression (stdlib/printexc.mli[277,10432+0]..[277,10432+20])
              Pexp_constant PConst_string(" @since 4.02.0 ",(stdlib/printexc.mli[277,10432+0]..[277,10432+20]),None)
        ]
    module_type (stdlib/printexc.mli[278,10453+14]..[330,12097+3])
      Pmty_signature
      [
        signature_item (stdlib/printexc.mli[279,10471+2]..[279,10471+25])
          Psig_type Rec
          [
            type_declaration "t" (stdlib/printexc.mli[279,10471+7]..[279,10471+8]) (stdlib/printexc.mli[279,10471+2]..[279,10471+25])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                Some
                  core_type (stdlib/printexc.mli[279,10471+11]..[279,10471+25])
                    Ptyp_constr "backtrace_slot" (stdlib/printexc.mli[279,10471+11]..[279,10471+25])
                    []
          ]
        signature_item (stdlib/printexc.mli[281,10498+2]..[281,10498+26])
          Psig_value
          value_description "is_raise" (stdlib/printexc.mli[281,10498+6]..[281,10498+14]) (stdlib/printexc.mli[281,10498+2]..[281,10498+26])
            attribute "ocaml.doc"
              [
                structure_item (stdlib/printexc.mli[282,10525+2]..[287,10694+4])
                  Pstr_eval
                  expression (stdlib/printexc.mli[282,10525+2]..[287,10694+4])
                    Pexp_constant PConst_string(" [is_raise slot] is [true] when [slot] refers to a raising\n      point in the code, and [false] when it comes from a simple\n      function call.\n\n      @since 4.02\n  ",(stdlib/printexc.mli[282,10525+2]..[287,10694+4]),None)
              ]
            core_type (stdlib/printexc.mli[281,10498+17]..[281,10498+26])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/printexc.mli[281,10498+17]..[281,10498+18])
                Ptyp_constr "t" (stdlib/printexc.mli[281,10498+17]..[281,10498+18])
                []
              core_type (stdlib/printexc.mli[281,10498+22]..[281,10498+26])
                Ptyp_constr "bool" (stdlib/printexc.mli[281,10498+22]..[281,10498+26])
                []
            []
        signature_item (stdlib/printexc.mli[289,10700+2]..[289,10700+27])
          Psig_value
          value_description "is_inline" (stdlib/printexc.mli[289,10700+6]..[289,10700+15]) (stdlib/printexc.mli[289,10700+2]..[289,10700+27])
            attribute "ocaml.doc"
              [
                structure_item (stdlib/printexc.mli[290,10728+2]..[295,10907+4])
                  Pstr_eval
                  expression (stdlib/printexc.mli[290,10728+2]..[295,10907+4])
                    Pexp_constant PConst_string(" [is_inline slot] is [true] when [slot] refers to a call\n      that got inlined by the compiler, and [false] when it comes from\n      any other context.\n\n      @since 4.04.0\n  ",(stdlib/printexc.mli[290,10728+2]..[295,10907+4]),None)
              ]
            core_type (stdlib/printexc.mli[289,10700+18]..[289,10700+27])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/printexc.mli[289,10700+18]..[289,10700+19])
                Ptyp_constr "t" (stdlib/printexc.mli[289,10700+18]..[289,10700+19])
                []
              core_type (stdlib/printexc.mli[289,10700+23]..[289,10700+27])
                Ptyp_constr "bool" (stdlib/printexc.mli[289,10700+23]..[289,10700+27])
                []
            []
        signature_item (stdlib/printexc.mli[297,10913+2]..[297,10913+37])
          Psig_value
          value_description "location" (stdlib/printexc.mli[297,10913+6]..[297,10913+14]) (stdlib/printexc.mli[297,10913+2]..[297,10913+37])
            attribute "ocaml.doc"
              [
                structure_item (stdlib/printexc.mli[298,10951+2]..[307,11332+4])
                  Pstr_eval
                  expression (stdlib/printexc.mli[298,10951+2]..[307,11332+4])
                    Pexp_constant PConst_string(" [location slot] returns the location information of the slot,\n      if available, and [None] otherwise.\n\n      Some possible reasons for failing to return a location are as follow:\n      - the slot corresponds to a compiler-inserted raise\n      - the slot corresponds to a part of the program that has not been\n      compiled with debug information ([-g])\n\n      @since 4.02\n  ",(stdlib/printexc.mli[298,10951+2]..[307,11332+4]),None)
              ]
            core_type (stdlib/printexc.mli[297,10913+17]..[297,10913+37])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/printexc.mli[297,10913+17]..[297,10913+18])
                Ptyp_constr "t" (stdlib/printexc.mli[297,10913+17]..[297,10913+18])
                []
              core_type (stdlib/printexc.mli[297,10913+22]..[297,10913+37])
                Ptyp_constr "option" (stdlib/printexc.mli[297,10913+31]..[297,10913+37])
                [
                  core_type (stdlib/printexc.mli[297,10913+22]..[297,10913+30])
                    Ptyp_constr "location" (stdlib/printexc.mli[297,10913+22]..[297,10913+30])
                    []
                ]
            []
        signature_item (stdlib/printexc.mli[309,11338+2]..[309,11338+31])
          Psig_value
          value_description "name" (stdlib/printexc.mli[309,11338+6]..[309,11338+10]) (stdlib/printexc.mli[309,11338+2]..[309,11338+31])
            attribute "ocaml.doc"
              [
                structure_item (stdlib/printexc.mli[310,11370+2]..[317,11642+4])
                  Pstr_eval
                  expression (stdlib/printexc.mli[310,11370+2]..[317,11642+4])
                    Pexp_constant PConst_string(" [name slot] returns the name of the function or definition\n      enclosing the location referred to by the slot.\n\n      [name slot] returns None if the name is unavailable, which\n      may happen for the same reasons as [location] returning None.\n\n      @since 4.11\n  ",(stdlib/printexc.mli[310,11370+2]..[317,11642+4]),None)
              ]
            core_type (stdlib/printexc.mli[309,11338+13]..[309,11338+31])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/printexc.mli[309,11338+13]..[309,11338+14])
                Ptyp_constr "t" (stdlib/printexc.mli[309,11338+13]..[309,11338+14])
                []
              core_type (stdlib/printexc.mli[309,11338+18]..[309,11338+31])
                Ptyp_constr "option" (stdlib/printexc.mli[309,11338+25]..[309,11338+31])
                [
                  core_type (stdlib/printexc.mli[309,11338+18]..[309,11338+24])
                    Ptyp_constr "string" (stdlib/printexc.mli[309,11338+18]..[309,11338+24])
                    []
                ]
            []
        signature_item (stdlib/printexc.mli[319,11648+2]..[319,11648+40])
          Psig_value
          value_description "format" (stdlib/printexc.mli[319,11648+6]..[319,11648+12]) (stdlib/printexc.mli[319,11648+2]..[319,11648+40])
            attribute "ocaml.doc"
              [
                structure_item (stdlib/printexc.mli[320,11689+2]..[329,12092+4])
                  Pstr_eval
                  expression (stdlib/printexc.mli[320,11689+2]..[329,12092+4])
                    Pexp_constant PConst_string(" [format pos slot] returns the string representation of [slot] as\n      [raw_backtrace_to_string] would format it, assuming it is the\n      [pos]-th element of the backtrace: the [0]-th element is\n      pretty-printed differently than the others.\n\n      Whole-backtrace printing functions also skip some uninformative\n      slots; in that case, [format pos slot] returns [None].\n\n      @since 4.02\n  ",(stdlib/printexc.mli[320,11689+2]..[329,12092+4]),None)
              ]
            core_type (stdlib/printexc.mli[319,11648+15]..[319,11648+40])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/printexc.mli[319,11648+15]..[319,11648+18])
                Ptyp_constr "int" (stdlib/printexc.mli[319,11648+15]..[319,11648+18])
                []
              core_type (stdlib/printexc.mli[319,11648+22]..[319,11648+40])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/printexc.mli[319,11648+22]..[319,11648+23])
                  Ptyp_constr "t" (stdlib/printexc.mli[319,11648+22]..[319,11648+23])
                  []
                core_type (stdlib/printexc.mli[319,11648+27]..[319,11648+40])
                  Ptyp_constr "option" (stdlib/printexc.mli[319,11648+34]..[319,11648+40])
                  [
                    core_type (stdlib/printexc.mli[319,11648+27]..[319,11648+33])
                      Ptyp_constr "string" (stdlib/printexc.mli[319,11648+27]..[319,11648+33])
                      []
                  ]
            []
      ]
  signature_item (stdlib/printexc.mli[333,12103+0]..[333,12103+30])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[333,12103+0]..[333,12103+30])
        Pstr_eval
        expression (stdlib/printexc.mli[333,12103+0]..[333,12103+30])
          Pexp_constant PConst_string(" {1 Raw backtrace slots} ",(stdlib/printexc.mli[333,12103+0]..[333,12103+30]),None)
    ]
  signature_item (stdlib/printexc.mli[335,12135+0]..[335,12135+23])
    Psig_type Rec
    [
      type_declaration "raw_backtrace_slot" (stdlib/printexc.mli[335,12135+5]..[335,12135+23]) (stdlib/printexc.mli[335,12135+0]..[335,12135+23])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/printexc.mli[336,12159+0]..[349,12811+2])
              Pstr_eval
              expression (stdlib/printexc.mli[336,12159+0]..[349,12811+2])
                Pexp_constant PConst_string(" This type is used to iterate over the slots of a [raw_backtrace].\n    For most purposes, [backtrace_slots_of_raw_entry] is easier to use.\n\n    Like [raw_backtrace_entry], values of this type are process-specific and\n    must absolutely not be marshalled, and are unsafe to use for this reason\n    (marshalling them may not fail, but un-marshalling and using the result\n    will result in undefined behavior).\n\n    Elements of this type can still be compared and hashed: when two elements\n    are equal, then they represent the same source location (the converse is not\n    necessarily true in presence of inlining, for example).\n\n    @since 4.02.0\n",(stdlib/printexc.mli[336,12159+0]..[349,12811+2]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/printexc.mli[351,12815+0]..[351,12815+47])
    Psig_value
    value_description "raw_backtrace_length" (stdlib/printexc.mli[351,12815+4]..[351,12815+24]) (stdlib/printexc.mli[351,12815+0]..[351,12815+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[352,12863+0]..[356,12969+2])
            Pstr_eval
            expression (stdlib/printexc.mli[352,12863+0]..[356,12969+2])
              Pexp_constant PConst_string(" [raw_backtrace_length bckt] returns the number of slots in the\n    backtrace [bckt].\n\n    @since 4.02\n",(stdlib/printexc.mli[352,12863+0]..[356,12969+2]),None)
        ]
      core_type (stdlib/printexc.mli[351,12815+27]..[351,12815+47])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[351,12815+27]..[351,12815+40])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[351,12815+27]..[351,12815+40])
          []
        core_type (stdlib/printexc.mli[351,12815+44]..[351,12815+47])
          Ptyp_constr "int" (stdlib/printexc.mli[351,12815+44]..[351,12815+47])
          []
      []
  signature_item (stdlib/printexc.mli[358,12973+0]..[358,12973+71])
    Psig_value
    value_description "get_raw_backtrace_slot" (stdlib/printexc.mli[358,12973+4]..[358,12973+26]) (stdlib/printexc.mli[358,12973+0]..[358,12973+71])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[359,13045+0]..[363,13164+2])
            Pstr_eval
            expression (stdlib/printexc.mli[359,13045+0]..[363,13164+2])
              Pexp_constant PConst_string(" [get_raw_backtrace_slot bckt pos] returns the slot in position [pos] in the\n    backtrace [bckt].\n\n    @since 4.02\n",(stdlib/printexc.mli[359,13045+0]..[363,13164+2]),None)
        ]
      core_type (stdlib/printexc.mli[358,12973+29]..[358,12973+71])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[358,12973+29]..[358,12973+42])
          Ptyp_constr "raw_backtrace" (stdlib/printexc.mli[358,12973+29]..[358,12973+42])
          []
        core_type (stdlib/printexc.mli[358,12973+46]..[358,12973+71])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/printexc.mli[358,12973+46]..[358,12973+49])
            Ptyp_constr "int" (stdlib/printexc.mli[358,12973+46]..[358,12973+49])
            []
          core_type (stdlib/printexc.mli[358,12973+53]..[358,12973+71])
            Ptyp_constr "raw_backtrace_slot" (stdlib/printexc.mli[358,12973+53]..[358,12973+71])
            []
      []
  signature_item (stdlib/printexc.mli[365,13168+0]..[365,13168+69])
    Psig_value
    value_description "convert_raw_backtrace_slot" (stdlib/printexc.mli[365,13168+4]..[365,13168+30]) (stdlib/printexc.mli[365,13168+0]..[365,13168+69])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[366,13238+0]..[370,13346+2])
            Pstr_eval
            expression (stdlib/printexc.mli[366,13238+0]..[370,13346+2])
              Pexp_constant PConst_string(" Extracts the user-friendly [backtrace_slot] from a low-level\n    [raw_backtrace_slot].\n\n    @since 4.02\n",(stdlib/printexc.mli[366,13238+0]..[370,13346+2]),None)
        ]
      core_type (stdlib/printexc.mli[365,13168+33]..[365,13168+69])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[365,13168+33]..[365,13168+51])
          Ptyp_constr "raw_backtrace_slot" (stdlib/printexc.mli[365,13168+33]..[365,13168+51])
          []
        core_type (stdlib/printexc.mli[365,13168+55]..[365,13168+69])
          Ptyp_constr "backtrace_slot" (stdlib/printexc.mli[365,13168+55]..[365,13168+69])
          []
      []
  signature_item (stdlib/printexc.mli[373,13351+0]..[374,13385+51])
    Psig_value
    value_description "get_raw_backtrace_next_slot" (stdlib/printexc.mli[373,13351+4]..[373,13351+31]) (stdlib/printexc.mli[373,13351+0]..[374,13385+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[375,13437+0]..[394,14057+2])
            Pstr_eval
            expression (stdlib/printexc.mli[375,13437+0]..[394,14057+2])
              Pexp_constant PConst_string(" [get_raw_backtrace_next_slot slot] returns the next slot inlined, if any.\n\n    Sample code to iterate over all frames (inlined and non-inlined):\n    {[\n      (* Iterate over inlined frames *)\n      let rec iter_raw_backtrace_slot f slot =\n        f slot;\n        match get_raw_backtrace_next_slot slot with\n        | None -> ()\n        | Some slot' -> iter_raw_backtrace_slot f slot'\n\n      (* Iterate over stack frames *)\n      let iter_raw_backtrace f bt =\n        for i = 0 to raw_backtrace_length bt - 1 do\n          iter_raw_backtrace_slot f (get_raw_backtrace_slot bt i)\n        done\n    ]}\n\n    @since 4.04.0\n",(stdlib/printexc.mli[375,13437+0]..[394,14057+2]),None)
        ]
      core_type (stdlib/printexc.mli[374,13385+4]..[374,13385+51])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[374,13385+4]..[374,13385+22])
          Ptyp_constr "raw_backtrace_slot" (stdlib/printexc.mli[374,13385+4]..[374,13385+22])
          []
        core_type (stdlib/printexc.mli[374,13385+26]..[374,13385+51])
          Ptyp_constr "option" (stdlib/printexc.mli[374,13385+45]..[374,13385+51])
          [
            core_type (stdlib/printexc.mli[374,13385+26]..[374,13385+44])
              Ptyp_constr "raw_backtrace_slot" (stdlib/printexc.mli[374,13385+26]..[374,13385+44])
              []
          ]
      []
  signature_item (stdlib/printexc.mli[396,14061+0]..[396,14061+26])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/printexc.mli[396,14061+0]..[396,14061+26])
        Pstr_eval
        expression (stdlib/printexc.mli[396,14061+0]..[396,14061+26])
          Pexp_constant PConst_string(" {1 Exception slots} ",(stdlib/printexc.mli[396,14061+0]..[396,14061+26]),None)
    ]
  signature_item (stdlib/printexc.mli[398,14089+0]..[398,14089+27])
    Psig_value
    value_description "exn_slot_id" (stdlib/printexc.mli[398,14089+4]..[398,14089+15]) (stdlib/printexc.mli[398,14089+0]..[398,14089+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[399,14117+0]..[404,14299+2])
            Pstr_eval
            expression (stdlib/printexc.mli[399,14117+0]..[404,14299+2])
              Pexp_constant PConst_string(" [Printexc.exn_slot_id] returns an integer which uniquely identifies\n    the constructor used to create the exception value [exn]\n    (in the current runtime).\n\n    @since 4.02.0\n",(stdlib/printexc.mli[399,14117+0]..[404,14299+2]),None)
        ]
      core_type (stdlib/printexc.mli[398,14089+17]..[398,14089+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[398,14089+17]..[398,14089+20])
          Ptyp_constr "exn" (stdlib/printexc.mli[398,14089+17]..[398,14089+20])
          []
        core_type (stdlib/printexc.mli[398,14089+24]..[398,14089+27])
          Ptyp_constr "int" (stdlib/printexc.mli[398,14089+24]..[398,14089+27])
          []
      []
  signature_item (stdlib/printexc.mli[406,14303+0]..[406,14303+32])
    Psig_value
    value_description "exn_slot_name" (stdlib/printexc.mli[406,14303+4]..[406,14303+17]) (stdlib/printexc.mli[406,14303+0]..[406,14303+32])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/printexc.mli[407,14336+0]..[411,14479+2])
            Pstr_eval
            expression (stdlib/printexc.mli[407,14336+0]..[411,14479+2])
              Pexp_constant PConst_string(" [Printexc.exn_slot_name exn] returns the internal name of the constructor\n    used to create the exception value [exn].\n\n    @since 4.02.0\n",(stdlib/printexc.mli[407,14336+0]..[411,14479+2]),None)
        ]
      core_type (stdlib/printexc.mli[406,14303+19]..[406,14303+32])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/printexc.mli[406,14303+19]..[406,14303+22])
          Ptyp_constr "exn" (stdlib/printexc.mli[406,14303+19]..[406,14303+22])
          []
        core_type (stdlib/printexc.mli[406,14303+26]..[406,14303+32])
          Ptyp_constr "string" (stdlib/printexc.mli[406,14303+26]..[406,14303+32])
          []
      []
]

