[
  structure_item (typing/ident.ml[16,1079+0]..[16,1079+16])
    Pstr_open Fresh
    module_expr (typing/ident.ml[16,1079+5]..[16,1079+16])
      Pmod_ident "Local_store" (typing/ident.ml[16,1079+5]..[16,1079+16])
  structure_item (typing/ident.ml[18,1097+0]..[18,1097+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[18,1097+4]..[18,1097+16])
          Ppat_var "lowest_scope" (typing/ident.ml[18,1097+4]..[18,1097+16])
        expression (typing/ident.ml[18,1097+20]..[18,1097+21])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (typing/ident.ml[19,1119+0]..[19,1119+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[19,1119+4]..[19,1119+17])
          Ppat_var "highest_scope" (typing/ident.ml[19,1119+4]..[19,1119+17])
        expression (typing/ident.ml[19,1119+20]..[19,1119+29])
          Pexp_constant PConst_int (100000000,None)
    ]
  structure_item (typing/ident.ml[21,1150+0]..[25,1277+42])
    Pstr_type Rec
    [
      type_declaration "t" (typing/ident.ml[21,1150+5]..[21,1150+6]) (typing/ident.ml[21,1150+0]..[25,1277+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/ident.ml[22,1159+2]..[22,1159+41])
                "Local" (typing/ident.ml[22,1159+4]..[22,1159+9])
                [
                  (typing/ident.ml[22,1159+15]..[22,1159+28])
                    Immutable
                    "name" (typing/ident.ml[22,1159+15]..[22,1159+19])                    core_type (typing/ident.ml[22,1159+21]..[22,1159+27])
                      Ptyp_constr "string" (typing/ident.ml[22,1159+21]..[22,1159+27])
                      []
                  (typing/ident.ml[22,1159+29]..[22,1159+39])
                    Immutable
                    "stamp" (typing/ident.ml[22,1159+29]..[22,1159+34])                    core_type (typing/ident.ml[22,1159+36]..[22,1159+39])
                      Ptyp_constr "int" (typing/ident.ml[22,1159+36]..[22,1159+39])
                      []
                ]
                None
              (typing/ident.ml[23,1201+2]..[23,1201+54])
                "Scoped" (typing/ident.ml[23,1201+4]..[23,1201+10])
                [
                  (typing/ident.ml[23,1201+16]..[23,1201+29])
                    Immutable
                    "name" (typing/ident.ml[23,1201+16]..[23,1201+20])                    core_type (typing/ident.ml[23,1201+22]..[23,1201+28])
                      Ptyp_constr "string" (typing/ident.ml[23,1201+22]..[23,1201+28])
                      []
                  (typing/ident.ml[23,1201+30]..[23,1201+41])
                    Immutable
                    "stamp" (typing/ident.ml[23,1201+30]..[23,1201+35])                    core_type (typing/ident.ml[23,1201+37]..[23,1201+40])
                      Ptyp_constr "int" (typing/ident.ml[23,1201+37]..[23,1201+40])
                      []
                  (typing/ident.ml[23,1201+42]..[23,1201+52])
                    Immutable
                    "scope" (typing/ident.ml[23,1201+42]..[23,1201+47])                    core_type (typing/ident.ml[23,1201+49]..[23,1201+52])
                      Ptyp_constr "int" (typing/ident.ml[23,1201+49]..[23,1201+52])
                      []
                ]
                None
              (typing/ident.ml[24,1256+2]..[24,1256+20])
                "Global" (typing/ident.ml[24,1256+4]..[24,1256+10])
                [
                  core_type (typing/ident.ml[24,1256+14]..[24,1256+20])
                    Ptyp_constr "string" (typing/ident.ml[24,1256+14]..[24,1256+20])
                    []
                ]
                None
              (typing/ident.ml[25,1277+2]..[25,1277+42])
                "Predef" (typing/ident.ml[25,1277+4]..[25,1277+10])
                [
                  (typing/ident.ml[25,1277+16]..[25,1277+29])
                    Immutable
                    "name" (typing/ident.ml[25,1277+16]..[25,1277+20])                    core_type (typing/ident.ml[25,1277+22]..[25,1277+28])
                      Ptyp_constr "string" (typing/ident.ml[25,1277+22]..[25,1277+28])
                      []
                  (typing/ident.ml[25,1277+30]..[25,1277+40])
                    Immutable
                    "stamp" (typing/ident.ml[25,1277+30]..[25,1277+35])                    core_type (typing/ident.ml[25,1277+37]..[25,1277+40])
                      Ptyp_constr "int" (typing/ident.ml[25,1277+37]..[25,1277+40])
                      []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/ident.ml[31,1495+0]..[31,1495+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[31,1495+4]..[31,1495+16])
          Ppat_var "currentstamp" (typing/ident.ml[31,1495+4]..[31,1495+16])
        expression (typing/ident.ml[31,1495+19]..[31,1495+26])
          Pexp_apply
          expression (typing/ident.ml[31,1495+19]..[31,1495+24])
            Pexp_ident "s_ref" (typing/ident.ml[31,1495+19]..[31,1495+24])
          [
            <arg>
            Nolabel
              expression (typing/ident.ml[31,1495+25]..[31,1495+26])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (typing/ident.ml[32,1522+0]..[32,1522+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[32,1522+4]..[32,1522+15])
          Ppat_var "predefstamp" (typing/ident.ml[32,1522+4]..[32,1522+15])
        expression (typing/ident.ml[32,1522+18]..[32,1522+25])
          Pexp_apply
          expression (typing/ident.ml[32,1522+18]..[32,1522+23])
            Pexp_ident "s_ref" (typing/ident.ml[32,1522+18]..[32,1522+23])
          [
            <arg>
            Nolabel
              expression (typing/ident.ml[32,1522+24]..[32,1522+25])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (typing/ident.ml[34,1549+0]..[36,1599+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[34,1549+4]..[34,1549+17])
          Ppat_var "create_scoped" (typing/ident.ml[34,1549+4]..[34,1549+17])
        expression (typing/ident.ml[34,1549+18]..[36,1599+51]) ghost
          Pexp_fun
          Labelled "scope"
          None
          pattern (typing/ident.ml[34,1549+19]..[34,1549+24])
            Ppat_var "scope" (typing/ident.ml[34,1549+19]..[34,1549+24])
          expression (typing/ident.ml[34,1549+25]..[36,1599+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[34,1549+25]..[34,1549+26])
              Ppat_var "s" (typing/ident.ml[34,1549+25]..[34,1549+26])
            expression (typing/ident.ml[35,1578+2]..[36,1599+51])
              Pexp_sequence
              expression (typing/ident.ml[35,1578+2]..[35,1578+19])
                Pexp_apply
                expression (typing/ident.ml[35,1578+2]..[35,1578+6])
                  Pexp_ident "incr" (typing/ident.ml[35,1578+2]..[35,1578+6])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[35,1578+7]..[35,1578+19])
                      Pexp_ident "currentstamp" (typing/ident.ml[35,1578+7]..[35,1578+19])
                ]
              expression (typing/ident.ml[36,1599+2]..[36,1599+51])
                Pexp_construct "Scoped" (typing/ident.ml[36,1599+2]..[36,1599+8])
                Some
                  expression (typing/ident.ml[36,1599+9]..[36,1599+51])
                    Pexp_record
                    [
                      "name" (typing/ident.ml[36,1599+11]..[36,1599+15])
                        expression (typing/ident.ml[36,1599+18]..[36,1599+19])
                          Pexp_ident "s" (typing/ident.ml[36,1599+18]..[36,1599+19])
                      "stamp" (typing/ident.ml[36,1599+21]..[36,1599+26])
                        expression (typing/ident.ml[36,1599+29]..[36,1599+42])
                          Pexp_apply
                          expression (typing/ident.ml[36,1599+29]..[36,1599+30])
                            Pexp_ident "!" (typing/ident.ml[36,1599+29]..[36,1599+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[36,1599+30]..[36,1599+42])
                                Pexp_ident "currentstamp" (typing/ident.ml[36,1599+30]..[36,1599+42])
                          ]
                      "scope" (typing/ident.ml[36,1599+44]..[36,1599+49]) ghost
                        expression (typing/ident.ml[36,1599+44]..[36,1599+49])
                          Pexp_ident "scope" (typing/ident.ml[36,1599+44]..[36,1599+49])
                    ]
                    None
    ]
  structure_item (typing/ident.ml[38,1652+0]..[40,1694+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[38,1652+4]..[38,1652+16])
          Ppat_var "create_local" (typing/ident.ml[38,1652+4]..[38,1652+16])
        expression (typing/ident.ml[38,1652+17]..[40,1694+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[38,1652+17]..[38,1652+18])
            Ppat_var "s" (typing/ident.ml[38,1652+17]..[38,1652+18])
          expression (typing/ident.ml[39,1673+2]..[40,1694+43])
            Pexp_sequence
            expression (typing/ident.ml[39,1673+2]..[39,1673+19])
              Pexp_apply
              expression (typing/ident.ml[39,1673+2]..[39,1673+6])
                Pexp_ident "incr" (typing/ident.ml[39,1673+2]..[39,1673+6])
              [
                <arg>
                Nolabel
                  expression (typing/ident.ml[39,1673+7]..[39,1673+19])
                    Pexp_ident "currentstamp" (typing/ident.ml[39,1673+7]..[39,1673+19])
              ]
            expression (typing/ident.ml[40,1694+2]..[40,1694+43])
              Pexp_construct "Local" (typing/ident.ml[40,1694+2]..[40,1694+7])
              Some
                expression (typing/ident.ml[40,1694+8]..[40,1694+43])
                  Pexp_record
                  [
                    "name" (typing/ident.ml[40,1694+10]..[40,1694+14])
                      expression (typing/ident.ml[40,1694+17]..[40,1694+18])
                        Pexp_ident "s" (typing/ident.ml[40,1694+17]..[40,1694+18])
                    "stamp" (typing/ident.ml[40,1694+20]..[40,1694+25])
                      expression (typing/ident.ml[40,1694+28]..[40,1694+41])
                        Pexp_apply
                        expression (typing/ident.ml[40,1694+28]..[40,1694+29])
                          Pexp_ident "!" (typing/ident.ml[40,1694+28]..[40,1694+29])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[40,1694+29]..[40,1694+41])
                              Pexp_ident "currentstamp" (typing/ident.ml[40,1694+29]..[40,1694+41])
                        ]
                  ]
                  None
    ]
  structure_item (typing/ident.ml[42,1739+0]..[44,1781+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[42,1739+4]..[42,1739+17])
          Ppat_var "create_predef" (typing/ident.ml[42,1739+4]..[42,1739+17])
        expression (typing/ident.ml[42,1739+18]..[44,1781+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[42,1739+18]..[42,1739+19])
            Ppat_var "s" (typing/ident.ml[42,1739+18]..[42,1739+19])
          expression (typing/ident.ml[43,1761+2]..[44,1781+43])
            Pexp_sequence
            expression (typing/ident.ml[43,1761+2]..[43,1761+18])
              Pexp_apply
              expression (typing/ident.ml[43,1761+2]..[43,1761+6])
                Pexp_ident "incr" (typing/ident.ml[43,1761+2]..[43,1761+6])
              [
                <arg>
                Nolabel
                  expression (typing/ident.ml[43,1761+7]..[43,1761+18])
                    Pexp_ident "predefstamp" (typing/ident.ml[43,1761+7]..[43,1761+18])
              ]
            expression (typing/ident.ml[44,1781+2]..[44,1781+43])
              Pexp_construct "Predef" (typing/ident.ml[44,1781+2]..[44,1781+8])
              Some
                expression (typing/ident.ml[44,1781+9]..[44,1781+43])
                  Pexp_record
                  [
                    "name" (typing/ident.ml[44,1781+11]..[44,1781+15])
                      expression (typing/ident.ml[44,1781+18]..[44,1781+19])
                        Pexp_ident "s" (typing/ident.ml[44,1781+18]..[44,1781+19])
                    "stamp" (typing/ident.ml[44,1781+21]..[44,1781+26])
                      expression (typing/ident.ml[44,1781+29]..[44,1781+41])
                        Pexp_apply
                        expression (typing/ident.ml[44,1781+29]..[44,1781+30])
                          Pexp_ident "!" (typing/ident.ml[44,1781+29]..[44,1781+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[44,1781+30]..[44,1781+41])
                              Pexp_ident "predefstamp" (typing/ident.ml[44,1781+30]..[44,1781+41])
                        ]
                  ]
                  None
    ]
  structure_item (typing/ident.ml[46,1826+0]..[47,1852+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[46,1826+4]..[46,1826+21])
          Ppat_var "create_persistent" (typing/ident.ml[46,1826+4]..[46,1826+21])
        expression (typing/ident.ml[46,1826+22]..[47,1852+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[46,1826+22]..[46,1826+23])
            Ppat_var "s" (typing/ident.ml[46,1826+22]..[46,1826+23])
          expression (typing/ident.ml[47,1852+2]..[47,1852+10])
            Pexp_construct "Global" (typing/ident.ml[47,1852+2]..[47,1852+8])
            Some
              expression (typing/ident.ml[47,1852+9]..[47,1852+10])
                Pexp_ident "s" (typing/ident.ml[47,1852+9]..[47,1852+10])
    ]
  structure_item (typing/ident.ml[49,1864+0]..[53,1945+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[49,1864+4]..[49,1864+8])
          Ppat_var "name" (typing/ident.ml[49,1864+4]..[49,1864+8])
        expression (typing/ident.ml[49,1864+11]..[53,1945+30])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[50,1884+4]..[53,1945+22])
                Ppat_or
                pattern (typing/ident.ml[50,1884+4]..[52,1929+15])
                  Ppat_or
                  pattern (typing/ident.ml[50,1884+4]..[51,1906+22])
                    Ppat_or
                    pattern (typing/ident.ml[50,1884+4]..[50,1884+21])
                      Ppat_construct "Local" (typing/ident.ml[50,1884+4]..[50,1884+9])
                      Some
                        []
                        pattern (typing/ident.ml[50,1884+10]..[50,1884+21])
                          Ppat_record Open
                          [
                            "name" (typing/ident.ml[50,1884+12]..[50,1884+16]) ghost
                              pattern (typing/ident.ml[50,1884+12]..[50,1884+16])
                                Ppat_var "name" (typing/ident.ml[50,1884+12]..[50,1884+16])
                          ]
                    pattern (typing/ident.ml[51,1906+4]..[51,1906+22])
                      Ppat_construct "Scoped" (typing/ident.ml[51,1906+4]..[51,1906+10])
                      Some
                        []
                        pattern (typing/ident.ml[51,1906+11]..[51,1906+22])
                          Ppat_record Open
                          [
                            "name" (typing/ident.ml[51,1906+13]..[51,1906+17]) ghost
                              pattern (typing/ident.ml[51,1906+13]..[51,1906+17])
                                Ppat_var "name" (typing/ident.ml[51,1906+13]..[51,1906+17])
                          ]
                  pattern (typing/ident.ml[52,1929+4]..[52,1929+15])
                    Ppat_construct "Global" (typing/ident.ml[52,1929+4]..[52,1929+10])
                    Some
                      []
                      pattern (typing/ident.ml[52,1929+11]..[52,1929+15])
                        Ppat_var "name" (typing/ident.ml[52,1929+11]..[52,1929+15])
                pattern (typing/ident.ml[53,1945+4]..[53,1945+22])
                  Ppat_construct "Predef" (typing/ident.ml[53,1945+4]..[53,1945+10])
                  Some
                    []
                    pattern (typing/ident.ml[53,1945+11]..[53,1945+22])
                      Ppat_record Open
                      [
                        "name" (typing/ident.ml[53,1945+13]..[53,1945+17]) ghost
                          pattern (typing/ident.ml[53,1945+13]..[53,1945+17])
                            Ppat_var "name" (typing/ident.ml[53,1945+13]..[53,1945+17])
                      ]
              expression (typing/ident.ml[53,1945+26]..[53,1945+30])
                Pexp_ident "name" (typing/ident.ml[53,1945+26]..[53,1945+30])
          ]
    ]
  structure_item (typing/ident.ml[55,1977+0]..[61,2153+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[55,1977+4]..[55,1977+10])
          Ppat_var "rename" (typing/ident.ml[55,1977+4]..[55,1977+10])
        expression (typing/ident.ml[55,1977+13]..[61,2153+51])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[56,1999+4]..[57,2029+41])
                Ppat_or
                pattern (typing/ident.ml[56,1999+4]..[56,1999+29])
                  Ppat_construct "Local" (typing/ident.ml[56,1999+4]..[56,1999+9])
                  Some
                    []
                    pattern (typing/ident.ml[56,1999+10]..[56,1999+29])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[56,1999+12]..[56,1999+16]) ghost
                          pattern (typing/ident.ml[56,1999+12]..[56,1999+16])
                            Ppat_var "name" (typing/ident.ml[56,1999+12]..[56,1999+16])
                        "stamp" (typing/ident.ml[56,1999+18]..[56,1999+23])
                          pattern (typing/ident.ml[56,1999+26]..[56,1999+27])
                            Ppat_any
                      ]
                pattern (typing/ident.ml[57,2029+4]..[57,2029+41])
                  Ppat_construct "Scoped" (typing/ident.ml[57,2029+4]..[57,2029+10])
                  Some
                    []
                    pattern (typing/ident.ml[57,2029+11]..[57,2029+41])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[57,2029+13]..[57,2029+17]) ghost
                          pattern (typing/ident.ml[57,2029+13]..[57,2029+17])
                            Ppat_var "name" (typing/ident.ml[57,2029+13]..[57,2029+17])
                        "stamp" (typing/ident.ml[57,2029+19]..[57,2029+24])
                          pattern (typing/ident.ml[57,2029+27]..[57,2029+28])
                            Ppat_any
                        "scope" (typing/ident.ml[57,2029+30]..[57,2029+35])
                          pattern (typing/ident.ml[57,2029+38]..[57,2029+39])
                            Ppat_any
                      ]
              expression (typing/ident.ml[58,2074+6]..[59,2099+43])
                Pexp_sequence
                expression (typing/ident.ml[58,2074+6]..[58,2074+23])
                  Pexp_apply
                  expression (typing/ident.ml[58,2074+6]..[58,2074+10])
                    Pexp_ident "incr" (typing/ident.ml[58,2074+6]..[58,2074+10])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[58,2074+11]..[58,2074+23])
                        Pexp_ident "currentstamp" (typing/ident.ml[58,2074+11]..[58,2074+23])
                  ]
                expression (typing/ident.ml[59,2099+6]..[59,2099+43])
                  Pexp_construct "Local" (typing/ident.ml[59,2099+6]..[59,2099+11])
                  Some
                    expression (typing/ident.ml[59,2099+12]..[59,2099+43])
                      Pexp_record
                      [
                        "name" (typing/ident.ml[59,2099+14]..[59,2099+18]) ghost
                          expression (typing/ident.ml[59,2099+14]..[59,2099+18])
                            Pexp_ident "name" (typing/ident.ml[59,2099+14]..[59,2099+18])
                        "stamp" (typing/ident.ml[59,2099+20]..[59,2099+25])
                          expression (typing/ident.ml[59,2099+28]..[59,2099+41])
                            Pexp_apply
                            expression (typing/ident.ml[59,2099+28]..[59,2099+29])
                              Pexp_ident "!" (typing/ident.ml[59,2099+28]..[59,2099+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[59,2099+29]..[59,2099+41])
                                  Pexp_ident "currentstamp" (typing/ident.ml[59,2099+29]..[59,2099+41])
                            ]
                      ]
                      None
            <case>
              pattern (typing/ident.ml[60,2143+4]..[60,2143+6])
                Ppat_var "id" (typing/ident.ml[60,2143+4]..[60,2143+6])
              expression (typing/ident.ml[61,2153+6]..[61,2153+51])
                Pexp_apply
                expression (typing/ident.ml[61,2153+6]..[61,2153+23])
                  Pexp_ident "Misc.fatal_errorf" (typing/ident.ml[61,2153+6]..[61,2153+23])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[61,2153+24]..[61,2153+41])
                      Pexp_constant PConst_string("Ident.rename %s",(typing/ident.ml[61,2153+25]..[61,2153+40]),None)
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[61,2153+42]..[61,2153+51])
                      Pexp_apply
                      expression (typing/ident.ml[61,2153+43]..[61,2153+47])
                        Pexp_ident "name" (typing/ident.ml[61,2153+43]..[61,2153+47])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[61,2153+48]..[61,2153+50])
                            Pexp_ident "id" (typing/ident.ml[61,2153+48]..[61,2153+50])
                      ]
                ]
          ]
    ]
  structure_item (typing/ident.ml[63,2206+0]..[74,2738+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[63,2206+4]..[63,2206+15])
          Ppat_var "unique_name" (typing/ident.ml[63,2206+4]..[63,2206+15])
        expression (typing/ident.ml[63,2206+18]..[74,2738+10])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[64,2233+4]..[65,2259+26])
                Ppat_or
                pattern (typing/ident.ml[64,2233+4]..[64,2233+25])
                  Ppat_construct "Local" (typing/ident.ml[64,2233+4]..[64,2233+9])
                  Some
                    []
                    pattern (typing/ident.ml[64,2233+10]..[64,2233+25])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[64,2233+12]..[64,2233+16]) ghost
                          pattern (typing/ident.ml[64,2233+12]..[64,2233+16])
                            Ppat_var "name" (typing/ident.ml[64,2233+12]..[64,2233+16])
                        "stamp" (typing/ident.ml[64,2233+18]..[64,2233+23]) ghost
                          pattern (typing/ident.ml[64,2233+18]..[64,2233+23])
                            Ppat_var "stamp" (typing/ident.ml[64,2233+18]..[64,2233+23])
                      ]
                pattern (typing/ident.ml[65,2259+4]..[65,2259+26])
                  Ppat_construct "Scoped" (typing/ident.ml[65,2259+4]..[65,2259+10])
                  Some
                    []
                    pattern (typing/ident.ml[65,2259+11]..[65,2259+26])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[65,2259+13]..[65,2259+17]) ghost
                          pattern (typing/ident.ml[65,2259+13]..[65,2259+17])
                            Ppat_var "name" (typing/ident.ml[65,2259+13]..[65,2259+17])
                        "stamp" (typing/ident.ml[65,2259+19]..[65,2259+24]) ghost
                          pattern (typing/ident.ml[65,2259+19]..[65,2259+24])
                            Ppat_var "stamp" (typing/ident.ml[65,2259+19]..[65,2259+24])
                      ]
              expression (typing/ident.ml[65,2259+30]..[65,2259+62])
                Pexp_apply
                expression (typing/ident.ml[65,2259+35]..[65,2259+36])
                  Pexp_ident "^" (typing/ident.ml[65,2259+35]..[65,2259+36])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[65,2259+30]..[65,2259+34])
                      Pexp_ident "name" (typing/ident.ml[65,2259+30]..[65,2259+34])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[65,2259+37]..[65,2259+62])
                      Pexp_apply
                      expression (typing/ident.ml[65,2259+41]..[65,2259+42])
                        Pexp_ident "^" (typing/ident.ml[65,2259+41]..[65,2259+42])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[65,2259+37]..[65,2259+40])
                            Pexp_constant PConst_string("_",(typing/ident.ml[65,2259+38]..[65,2259+39]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[65,2259+43]..[65,2259+62])
                            Pexp_apply
                            expression (typing/ident.ml[65,2259+43]..[65,2259+56])
                              Pexp_ident "Int.to_string" (typing/ident.ml[65,2259+43]..[65,2259+56])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[65,2259+57]..[65,2259+62])
                                  Pexp_ident "stamp" (typing/ident.ml[65,2259+57]..[65,2259+62])
                            ]
                      ]
                ]
            <case>
              pattern (typing/ident.ml[66,2322+4]..[66,2322+15])
                Ppat_construct "Global" (typing/ident.ml[66,2322+4]..[66,2322+10])
                Some
                  []
                  pattern (typing/ident.ml[66,2322+11]..[66,2322+15])
                    Ppat_var "name" (typing/ident.ml[66,2322+11]..[66,2322+15])
              expression (typing/ident.ml[70,2562+6]..[70,2562+17])
                Pexp_apply
                expression (typing/ident.ml[70,2562+11]..[70,2562+12])
                  Pexp_ident "^" (typing/ident.ml[70,2562+11]..[70,2562+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[70,2562+6]..[70,2562+10])
                      Pexp_ident "name" (typing/ident.ml[70,2562+6]..[70,2562+10])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[70,2562+13]..[70,2562+17])
                      Pexp_constant PConst_string("_0",(typing/ident.ml[70,2562+14]..[70,2562+16]),None)
                ]
            <case>
              pattern (typing/ident.ml[71,2580+4]..[71,2580+22])
                Ppat_construct "Predef" (typing/ident.ml[71,2580+4]..[71,2580+10])
                Some
                  []
                  pattern (typing/ident.ml[71,2580+11]..[71,2580+22])
                    Ppat_record Open
                    [
                      "name" (typing/ident.ml[71,2580+13]..[71,2580+17]) ghost
                        pattern (typing/ident.ml[71,2580+13]..[71,2580+17])
                          Ppat_var "name" (typing/ident.ml[71,2580+13]..[71,2580+17])
                    ]
              expression (typing/ident.ml[74,2738+6]..[74,2738+10])
                Pexp_ident "name" (typing/ident.ml[74,2738+6]..[74,2738+10])
          ]
    ]
  structure_item (typing/ident.ml[76,2750+0]..[80,2891+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[76,2750+4]..[76,2750+24])
          Ppat_var "unique_toplevel_name" (typing/ident.ml[76,2750+4]..[76,2750+24])
        expression (typing/ident.ml[76,2750+27]..[80,2891+30])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[77,2786+4]..[78,2812+26])
                Ppat_or
                pattern (typing/ident.ml[77,2786+4]..[77,2786+25])
                  Ppat_construct "Local" (typing/ident.ml[77,2786+4]..[77,2786+9])
                  Some
                    []
                    pattern (typing/ident.ml[77,2786+10]..[77,2786+25])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[77,2786+12]..[77,2786+16]) ghost
                          pattern (typing/ident.ml[77,2786+12]..[77,2786+16])
                            Ppat_var "name" (typing/ident.ml[77,2786+12]..[77,2786+16])
                        "stamp" (typing/ident.ml[77,2786+18]..[77,2786+23]) ghost
                          pattern (typing/ident.ml[77,2786+18]..[77,2786+23])
                            Ppat_var "stamp" (typing/ident.ml[77,2786+18]..[77,2786+23])
                      ]
                pattern (typing/ident.ml[78,2812+4]..[78,2812+26])
                  Ppat_construct "Scoped" (typing/ident.ml[78,2812+4]..[78,2812+10])
                  Some
                    []
                    pattern (typing/ident.ml[78,2812+11]..[78,2812+26])
                      Ppat_record Closed
                      [
                        "name" (typing/ident.ml[78,2812+13]..[78,2812+17]) ghost
                          pattern (typing/ident.ml[78,2812+13]..[78,2812+17])
                            Ppat_var "name" (typing/ident.ml[78,2812+13]..[78,2812+17])
                        "stamp" (typing/ident.ml[78,2812+19]..[78,2812+24]) ghost
                          pattern (typing/ident.ml[78,2812+19]..[78,2812+24])
                            Ppat_var "stamp" (typing/ident.ml[78,2812+19]..[78,2812+24])
                      ]
              expression (typing/ident.ml[78,2812+30]..[78,2812+62])
                Pexp_apply
                expression (typing/ident.ml[78,2812+35]..[78,2812+36])
                  Pexp_ident "^" (typing/ident.ml[78,2812+35]..[78,2812+36])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[78,2812+30]..[78,2812+34])
                      Pexp_ident "name" (typing/ident.ml[78,2812+30]..[78,2812+34])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[78,2812+37]..[78,2812+62])
                      Pexp_apply
                      expression (typing/ident.ml[78,2812+41]..[78,2812+42])
                        Pexp_ident "^" (typing/ident.ml[78,2812+41]..[78,2812+42])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[78,2812+37]..[78,2812+40])
                            Pexp_constant PConst_string("/",(typing/ident.ml[78,2812+38]..[78,2812+39]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[78,2812+43]..[78,2812+62])
                            Pexp_apply
                            expression (typing/ident.ml[78,2812+43]..[78,2812+56])
                              Pexp_ident "Int.to_string" (typing/ident.ml[78,2812+43]..[78,2812+56])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[78,2812+57]..[78,2812+62])
                                  Pexp_ident "stamp" (typing/ident.ml[78,2812+57]..[78,2812+62])
                            ]
                      ]
                ]
            <case>
              pattern (typing/ident.ml[79,2875+4]..[80,2891+22])
                Ppat_or
                pattern (typing/ident.ml[79,2875+4]..[79,2875+15])
                  Ppat_construct "Global" (typing/ident.ml[79,2875+4]..[79,2875+10])
                  Some
                    []
                    pattern (typing/ident.ml[79,2875+11]..[79,2875+15])
                      Ppat_var "name" (typing/ident.ml[79,2875+11]..[79,2875+15])
                pattern (typing/ident.ml[80,2891+4]..[80,2891+22])
                  Ppat_construct "Predef" (typing/ident.ml[80,2891+4]..[80,2891+10])
                  Some
                    []
                    pattern (typing/ident.ml[80,2891+11]..[80,2891+22])
                      Ppat_record Open
                      [
                        "name" (typing/ident.ml[80,2891+13]..[80,2891+17]) ghost
                          pattern (typing/ident.ml[80,2891+13]..[80,2891+17])
                            Ppat_var "name" (typing/ident.ml[80,2891+13]..[80,2891+17])
                      ]
              expression (typing/ident.ml[80,2891+26]..[80,2891+30])
                Pexp_ident "name" (typing/ident.ml[80,2891+26]..[80,2891+30])
          ]
    ]
  structure_item (typing/ident.ml[82,2923+0]..[84,2970+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[82,2923+4]..[82,2923+14])
          Ppat_var "persistent" (typing/ident.ml[82,2923+4]..[82,2923+14])
        expression (typing/ident.ml[82,2923+17]..[84,2970+14])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[83,2949+4]..[83,2949+12])
                Ppat_construct "Global" (typing/ident.ml[83,2949+4]..[83,2949+10])
                Some
                  []
                  pattern (typing/ident.ml[83,2949+11]..[83,2949+12])
                    Ppat_any
              expression (typing/ident.ml[83,2949+16]..[83,2949+20])
                Pexp_construct "true" (typing/ident.ml[83,2949+16]..[83,2949+20])
                None
            <case>
              pattern (typing/ident.ml[84,2970+4]..[84,2970+5])
                Ppat_any
              expression (typing/ident.ml[84,2970+9]..[84,2970+14])
                Pexp_construct "false" (typing/ident.ml[84,2970+9]..[84,2970+14])
                None
          ]
    ]
  structure_item (typing/ident.ml[86,2986+0]..[96,3349+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[86,2986+4]..[86,2986+9])
          Ppat_var "equal" (typing/ident.ml[86,2986+4]..[86,2986+9])
        expression (typing/ident.ml[86,2986+10]..[96,3349+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[86,2986+10]..[86,2986+12])
            Ppat_var "i1" (typing/ident.ml[86,2986+10]..[86,2986+12])
          expression (typing/ident.ml[86,2986+13]..[96,3349+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[86,2986+13]..[86,2986+15])
              Ppat_var "i2" (typing/ident.ml[86,2986+13]..[86,2986+15])
            expression (typing/ident.ml[87,3004+2]..[96,3349+11])
              Pexp_match
              expression (typing/ident.ml[87,3004+8]..[87,3004+14])
                Pexp_tuple
                [
                  expression (typing/ident.ml[87,3004+8]..[87,3004+10])
                    Pexp_ident "i1" (typing/ident.ml[87,3004+8]..[87,3004+10])
                  expression (typing/ident.ml[87,3004+12]..[87,3004+14])
                    Pexp_ident "i2" (typing/ident.ml[87,3004+12]..[87,3004+14])
                ]
              [
                <case>
                  pattern (typing/ident.ml[88,3024+4]..[90,3140+30])
                    Ppat_or
                    pattern (typing/ident.ml[88,3024+4]..[89,3081+58])
                      Ppat_or
                      pattern (typing/ident.ml[88,3024+4]..[88,3024+56])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[88,3024+4]..[88,3024+29])
                            Ppat_construct "Local" (typing/ident.ml[88,3024+4]..[88,3024+9])
                            Some
                              []
                              pattern (typing/ident.ml[88,3024+10]..[88,3024+29])
                                Ppat_record Open
                                [
                                  "name" (typing/ident.ml[88,3024+12]..[88,3024+16])
                                    pattern (typing/ident.ml[88,3024+19]..[88,3024+24])
                                      Ppat_var "name1" (typing/ident.ml[88,3024+19]..[88,3024+24])
                                ]
                          pattern (typing/ident.ml[88,3024+31]..[88,3024+56])
                            Ppat_construct "Local" (typing/ident.ml[88,3024+31]..[88,3024+36])
                            Some
                              []
                              pattern (typing/ident.ml[88,3024+37]..[88,3024+56])
                                Ppat_record Open
                                [
                                  "name" (typing/ident.ml[88,3024+39]..[88,3024+43])
                                    pattern (typing/ident.ml[88,3024+46]..[88,3024+51])
                                      Ppat_var "name2" (typing/ident.ml[88,3024+46]..[88,3024+51])
                                ]
                        ]
                      pattern (typing/ident.ml[89,3081+4]..[89,3081+58])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[89,3081+4]..[89,3081+30])
                            Ppat_construct "Scoped" (typing/ident.ml[89,3081+4]..[89,3081+10])
                            Some
                              []
                              pattern (typing/ident.ml[89,3081+11]..[89,3081+30])
                                Ppat_record Open
                                [
                                  "name" (typing/ident.ml[89,3081+13]..[89,3081+17])
                                    pattern (typing/ident.ml[89,3081+20]..[89,3081+25])
                                      Ppat_var "name1" (typing/ident.ml[89,3081+20]..[89,3081+25])
                                ]
                          pattern (typing/ident.ml[89,3081+32]..[89,3081+58])
                            Ppat_construct "Scoped" (typing/ident.ml[89,3081+32]..[89,3081+38])
                            Some
                              []
                              pattern (typing/ident.ml[89,3081+39]..[89,3081+58])
                                Ppat_record Open
                                [
                                  "name" (typing/ident.ml[89,3081+41]..[89,3081+45])
                                    pattern (typing/ident.ml[89,3081+48]..[89,3081+53])
                                      Ppat_var "name2" (typing/ident.ml[89,3081+48]..[89,3081+53])
                                ]
                        ]
                    pattern (typing/ident.ml[90,3140+4]..[90,3140+30])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[90,3140+4]..[90,3140+16])
                          Ppat_construct "Global" (typing/ident.ml[90,3140+4]..[90,3140+10])
                          Some
                            []
                            pattern (typing/ident.ml[90,3140+11]..[90,3140+16])
                              Ppat_var "name1" (typing/ident.ml[90,3140+11]..[90,3140+16])
                        pattern (typing/ident.ml[90,3140+18]..[90,3140+30])
                          Ppat_construct "Global" (typing/ident.ml[90,3140+18]..[90,3140+24])
                          Some
                            []
                            pattern (typing/ident.ml[90,3140+25]..[90,3140+30])
                              Ppat_var "name2" (typing/ident.ml[90,3140+25]..[90,3140+30])
                      ]
                  expression (typing/ident.ml[91,3174+6]..[91,3174+19])
                    Pexp_apply
                    expression (typing/ident.ml[91,3174+12]..[91,3174+13])
                      Pexp_ident "=" (typing/ident.ml[91,3174+12]..[91,3174+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[91,3174+6]..[91,3174+11])
                          Pexp_ident "name1" (typing/ident.ml[91,3174+6]..[91,3174+11])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[91,3174+14]..[91,3174+19])
                          Pexp_ident "name2" (typing/ident.ml[91,3174+14]..[91,3174+19])
                    ]
                <case>
                  pattern (typing/ident.ml[92,3194+4]..[92,3194+51])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[92,3194+4]..[92,3194+28])
                        Ppat_construct "Predef" (typing/ident.ml[92,3194+4]..[92,3194+10])
                        Some
                          []
                          pattern (typing/ident.ml[92,3194+11]..[92,3194+28])
                            Ppat_record Open
                            [
                              "stamp" (typing/ident.ml[92,3194+13]..[92,3194+18])
                                pattern (typing/ident.ml[92,3194+21]..[92,3194+23])
                                  Ppat_var "s1" (typing/ident.ml[92,3194+21]..[92,3194+23])
                            ]
                      pattern (typing/ident.ml[92,3194+30]..[92,3194+51])
                        Ppat_construct "Predef" (typing/ident.ml[92,3194+30]..[92,3194+36])
                        Some
                          []
                          pattern (typing/ident.ml[92,3194+37]..[92,3194+51])
                            Ppat_record Closed
                            [
                              "stamp" (typing/ident.ml[92,3194+39]..[92,3194+44])
                                pattern (typing/ident.ml[92,3194+47]..[92,3194+49])
                                  Ppat_var "s2" (typing/ident.ml[92,3194+47]..[92,3194+49])
                            ]
                    ]
                  expression (typing/ident.ml[94,3326+6]..[94,3326+13])
                    Pexp_apply
                    expression (typing/ident.ml[94,3326+9]..[94,3326+10])
                      Pexp_ident "=" (typing/ident.ml[94,3326+9]..[94,3326+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[94,3326+6]..[94,3326+8])
                          Pexp_ident "s1" (typing/ident.ml[94,3326+6]..[94,3326+8])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[94,3326+11]..[94,3326+13])
                          Pexp_ident "s2" (typing/ident.ml[94,3326+11]..[94,3326+13])
                    ]
                <case>
                  pattern (typing/ident.ml[95,3340+4]..[95,3340+5])
                    Ppat_any
                  expression (typing/ident.ml[96,3349+6]..[96,3349+11])
                    Pexp_construct "false" (typing/ident.ml[96,3349+6]..[96,3349+11])
                    None
              ]
    ]
  structure_item (typing/ident.ml[98,3362+0]..[107,3639+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[98,3362+4]..[98,3362+8])
          Ppat_var "same" (typing/ident.ml[98,3362+4]..[98,3362+8])
        expression (typing/ident.ml[98,3362+9]..[107,3639+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[98,3362+9]..[98,3362+11])
            Ppat_var "i1" (typing/ident.ml[98,3362+9]..[98,3362+11])
          expression (typing/ident.ml[98,3362+12]..[107,3639+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[98,3362+12]..[98,3362+14])
              Ppat_var "i2" (typing/ident.ml[98,3362+12]..[98,3362+14])
            expression (typing/ident.ml[99,3379+2]..[107,3639+11])
              Pexp_match
              expression (typing/ident.ml[99,3379+8]..[99,3379+14])
                Pexp_tuple
                [
                  expression (typing/ident.ml[99,3379+8]..[99,3379+10])
                    Pexp_ident "i1" (typing/ident.ml[99,3379+8]..[99,3379+10])
                  expression (typing/ident.ml[99,3379+12]..[99,3379+14])
                    Pexp_ident "i2" (typing/ident.ml[99,3379+12]..[99,3379+14])
                ]
              [
                <case>
                  pattern (typing/ident.ml[100,3399+4]..[102,3507+51])
                    Ppat_or
                    pattern (typing/ident.ml[100,3399+4]..[101,3452+54])
                      Ppat_or
                      pattern (typing/ident.ml[100,3399+4]..[100,3399+52])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[100,3399+4]..[100,3399+27])
                            Ppat_construct "Local" (typing/ident.ml[100,3399+4]..[100,3399+9])
                            Some
                              []
                              pattern (typing/ident.ml[100,3399+10]..[100,3399+27])
                                Ppat_record Open
                                [
                                  "stamp" (typing/ident.ml[100,3399+12]..[100,3399+17])
                                    pattern (typing/ident.ml[100,3399+20]..[100,3399+22])
                                      Ppat_var "s1" (typing/ident.ml[100,3399+20]..[100,3399+22])
                                ]
                          pattern (typing/ident.ml[100,3399+29]..[100,3399+52])
                            Ppat_construct "Local" (typing/ident.ml[100,3399+29]..[100,3399+34])
                            Some
                              []
                              pattern (typing/ident.ml[100,3399+35]..[100,3399+52])
                                Ppat_record Open
                                [
                                  "stamp" (typing/ident.ml[100,3399+37]..[100,3399+42])
                                    pattern (typing/ident.ml[100,3399+45]..[100,3399+47])
                                      Ppat_var "s2" (typing/ident.ml[100,3399+45]..[100,3399+47])
                                ]
                        ]
                      pattern (typing/ident.ml[101,3452+4]..[101,3452+54])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[101,3452+4]..[101,3452+28])
                            Ppat_construct "Scoped" (typing/ident.ml[101,3452+4]..[101,3452+10])
                            Some
                              []
                              pattern (typing/ident.ml[101,3452+11]..[101,3452+28])
                                Ppat_record Open
                                [
                                  "stamp" (typing/ident.ml[101,3452+13]..[101,3452+18])
                                    pattern (typing/ident.ml[101,3452+21]..[101,3452+23])
                                      Ppat_var "s1" (typing/ident.ml[101,3452+21]..[101,3452+23])
                                ]
                          pattern (typing/ident.ml[101,3452+30]..[101,3452+54])
                            Ppat_construct "Scoped" (typing/ident.ml[101,3452+30]..[101,3452+36])
                            Some
                              []
                              pattern (typing/ident.ml[101,3452+37]..[101,3452+54])
                                Ppat_record Open
                                [
                                  "stamp" (typing/ident.ml[101,3452+39]..[101,3452+44])
                                    pattern (typing/ident.ml[101,3452+47]..[101,3452+49])
                                      Ppat_var "s2" (typing/ident.ml[101,3452+47]..[101,3452+49])
                                ]
                        ]
                    pattern (typing/ident.ml[102,3507+4]..[102,3507+51])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[102,3507+4]..[102,3507+28])
                          Ppat_construct "Predef" (typing/ident.ml[102,3507+4]..[102,3507+10])
                          Some
                            []
                            pattern (typing/ident.ml[102,3507+11]..[102,3507+28])
                              Ppat_record Open
                              [
                                "stamp" (typing/ident.ml[102,3507+13]..[102,3507+18])
                                  pattern (typing/ident.ml[102,3507+21]..[102,3507+23])
                                    Ppat_var "s1" (typing/ident.ml[102,3507+21]..[102,3507+23])
                              ]
                        pattern (typing/ident.ml[102,3507+30]..[102,3507+51])
                          Ppat_construct "Predef" (typing/ident.ml[102,3507+30]..[102,3507+36])
                          Some
                            []
                            pattern (typing/ident.ml[102,3507+37]..[102,3507+51])
                              Ppat_record Closed
                              [
                                "stamp" (typing/ident.ml[102,3507+39]..[102,3507+44])
                                  pattern (typing/ident.ml[102,3507+47]..[102,3507+49])
                                    Ppat_var "s2" (typing/ident.ml[102,3507+47]..[102,3507+49])
                              ]
                      ]
                  expression (typing/ident.ml[103,3562+6]..[103,3562+13])
                    Pexp_apply
                    expression (typing/ident.ml[103,3562+9]..[103,3562+10])
                      Pexp_ident "=" (typing/ident.ml[103,3562+9]..[103,3562+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[103,3562+6]..[103,3562+8])
                          Pexp_ident "s1" (typing/ident.ml[103,3562+6]..[103,3562+8])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[103,3562+11]..[103,3562+13])
                          Pexp_ident "s2" (typing/ident.ml[103,3562+11]..[103,3562+13])
                    ]
                <case>
                  pattern (typing/ident.ml[104,3576+4]..[104,3576+30])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[104,3576+4]..[104,3576+16])
                        Ppat_construct "Global" (typing/ident.ml[104,3576+4]..[104,3576+10])
                        Some
                          []
                          pattern (typing/ident.ml[104,3576+11]..[104,3576+16])
                            Ppat_var "name1" (typing/ident.ml[104,3576+11]..[104,3576+16])
                      pattern (typing/ident.ml[104,3576+18]..[104,3576+30])
                        Ppat_construct "Global" (typing/ident.ml[104,3576+18]..[104,3576+24])
                        Some
                          []
                          pattern (typing/ident.ml[104,3576+25]..[104,3576+30])
                            Ppat_var "name2" (typing/ident.ml[104,3576+25]..[104,3576+30])
                    ]
                  expression (typing/ident.ml[105,3610+6]..[105,3610+19])
                    Pexp_apply
                    expression (typing/ident.ml[105,3610+12]..[105,3610+13])
                      Pexp_ident "=" (typing/ident.ml[105,3610+12]..[105,3610+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[105,3610+6]..[105,3610+11])
                          Pexp_ident "name1" (typing/ident.ml[105,3610+6]..[105,3610+11])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[105,3610+14]..[105,3610+19])
                          Pexp_ident "name2" (typing/ident.ml[105,3610+14]..[105,3610+19])
                    ]
                <case>
                  pattern (typing/ident.ml[106,3630+4]..[106,3630+5])
                    Ppat_any
                  expression (typing/ident.ml[107,3639+6]..[107,3639+11])
                    Pexp_construct "false" (typing/ident.ml[107,3639+6]..[107,3639+11])
                    None
              ]
    ]
  structure_item (typing/ident.ml[109,3652+0]..[112,3729+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[109,3652+4]..[109,3652+9])
          Ppat_var "stamp" (typing/ident.ml[109,3652+4]..[109,3652+9])
        expression (typing/ident.ml[109,3652+12]..[112,3729+10])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[110,3673+4]..[111,3696+23])
                Ppat_or
                pattern (typing/ident.ml[110,3673+4]..[110,3673+22])
                  Ppat_construct "Local" (typing/ident.ml[110,3673+4]..[110,3673+9])
                  Some
                    []
                    pattern (typing/ident.ml[110,3673+10]..[110,3673+22])
                      Ppat_record Open
                      [
                        "stamp" (typing/ident.ml[110,3673+12]..[110,3673+17]) ghost
                          pattern (typing/ident.ml[110,3673+12]..[110,3673+17])
                            Ppat_var "stamp" (typing/ident.ml[110,3673+12]..[110,3673+17])
                      ]
                pattern (typing/ident.ml[111,3696+4]..[111,3696+23])
                  Ppat_construct "Scoped" (typing/ident.ml[111,3696+4]..[111,3696+10])
                  Some
                    []
                    pattern (typing/ident.ml[111,3696+11]..[111,3696+23])
                      Ppat_record Open
                      [
                        "stamp" (typing/ident.ml[111,3696+13]..[111,3696+18]) ghost
                          pattern (typing/ident.ml[111,3696+13]..[111,3696+18])
                            Ppat_var "stamp" (typing/ident.ml[111,3696+13]..[111,3696+18])
                      ]
              expression (typing/ident.ml[111,3696+27]..[111,3696+32])
                Pexp_ident "stamp" (typing/ident.ml[111,3696+27]..[111,3696+32])
            <case>
              pattern (typing/ident.ml[112,3729+4]..[112,3729+5])
                Ppat_any
              expression (typing/ident.ml[112,3729+9]..[112,3729+10])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (typing/ident.ml[114,3741+0]..[117,3824+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[114,3741+4]..[114,3741+9])
          Ppat_var "scope" (typing/ident.ml[114,3741+4]..[114,3741+9])
        expression (typing/ident.ml[114,3741+12]..[117,3824+39])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[115,3762+4]..[115,3762+23])
                Ppat_construct "Scoped" (typing/ident.ml[115,3762+4]..[115,3762+10])
                Some
                  []
                  pattern (typing/ident.ml[115,3762+11]..[115,3762+23])
                    Ppat_record Open
                    [
                      "scope" (typing/ident.ml[115,3762+13]..[115,3762+18]) ghost
                        pattern (typing/ident.ml[115,3762+13]..[115,3762+18])
                          Ppat_var "scope" (typing/ident.ml[115,3762+13]..[115,3762+18])
                    ]
              expression (typing/ident.ml[115,3762+27]..[115,3762+32])
                Pexp_ident "scope" (typing/ident.ml[115,3762+27]..[115,3762+32])
            <case>
              pattern (typing/ident.ml[116,3795+4]..[116,3795+11])
                Ppat_construct "Local" (typing/ident.ml[116,3795+4]..[116,3795+9])
                Some
                  []
                  pattern (typing/ident.ml[116,3795+10]..[116,3795+11])
                    Ppat_any
              expression (typing/ident.ml[116,3795+15]..[116,3795+28])
                Pexp_ident "highest_scope" (typing/ident.ml[116,3795+15]..[116,3795+28])
            <case>
              pattern (typing/ident.ml[117,3824+4]..[117,3824+23])
                Ppat_or
                pattern (typing/ident.ml[117,3824+4]..[117,3824+12])
                  Ppat_construct "Global" (typing/ident.ml[117,3824+4]..[117,3824+10])
                  Some
                    []
                    pattern (typing/ident.ml[117,3824+11]..[117,3824+12])
                      Ppat_any
                pattern (typing/ident.ml[117,3824+15]..[117,3824+23])
                  Ppat_construct "Predef" (typing/ident.ml[117,3824+15]..[117,3824+21])
                  Some
                    []
                    pattern (typing/ident.ml[117,3824+22]..[117,3824+23])
                      Ppat_any
              expression (typing/ident.ml[117,3824+27]..[117,3824+39])
                Pexp_ident "lowest_scope" (typing/ident.ml[117,3824+27]..[117,3824+39])
          ]
    ]
  structure_item (typing/ident.ml[119,3865+0]..[119,3865+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[119,3865+4]..[119,3865+16])
          Ppat_var "reinit_level" (typing/ident.ml[119,3865+4]..[119,3865+16])
        expression (typing/ident.ml[119,3865+19]..[119,3865+27])
          Pexp_apply
          expression (typing/ident.ml[119,3865+19]..[119,3865+22])
            Pexp_ident "ref" (typing/ident.ml[119,3865+19]..[119,3865+22])
          [
            <arg>
            Nolabel
              expression (typing/ident.ml[119,3865+23]..[119,3865+27])
                Pexp_constant PConst_int (-1,None)
          ]
    ]
  structure_item (typing/ident.ml[121,3894+0]..[124,3970+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[121,3894+4]..[121,3894+10])
          Ppat_var "reinit" (typing/ident.ml[121,3894+4]..[121,3894+10])
        expression (typing/ident.ml[121,3894+11]..[124,3970+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[121,3894+11]..[121,3894+13])
            Ppat_construct "()" (typing/ident.ml[121,3894+11]..[121,3894+13])
            None
          expression (typing/ident.ml[122,3910+2]..[124,3970+36])
            Pexp_ifthenelse
            expression (typing/ident.ml[122,3910+5]..[122,3910+22])
              Pexp_apply
              expression (typing/ident.ml[122,3910+19]..[122,3910+20])
                Pexp_ident "<" (typing/ident.ml[122,3910+19]..[122,3910+20])
              [
                <arg>
                Nolabel
                  expression (typing/ident.ml[122,3910+5]..[122,3910+18])
                    Pexp_apply
                    expression (typing/ident.ml[122,3910+5]..[122,3910+6])
                      Pexp_ident "!" (typing/ident.ml[122,3910+5]..[122,3910+6])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[122,3910+6]..[122,3910+18])
                          Pexp_ident "reinit_level" (typing/ident.ml[122,3910+6]..[122,3910+18])
                    ]
                <arg>
                Nolabel
                  expression (typing/ident.ml[122,3910+21]..[122,3910+22])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (typing/ident.ml[123,3933+7]..[123,3933+36])
              Pexp_apply
              expression (typing/ident.ml[123,3933+20]..[123,3933+22])
                Pexp_ident ":=" (typing/ident.ml[123,3933+20]..[123,3933+22])
              [
                <arg>
                Nolabel
                  expression (typing/ident.ml[123,3933+7]..[123,3933+19])
                    Pexp_ident "reinit_level" (typing/ident.ml[123,3933+7]..[123,3933+19])
                <arg>
                Nolabel
                  expression (typing/ident.ml[123,3933+23]..[123,3933+36])
                    Pexp_apply
                    expression (typing/ident.ml[123,3933+23]..[123,3933+24])
                      Pexp_ident "!" (typing/ident.ml[123,3933+23]..[123,3933+24])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[123,3933+24]..[123,3933+36])
                          Pexp_ident "currentstamp" (typing/ident.ml[123,3933+24]..[123,3933+36])
                    ]
              ]
            Some
              expression (typing/ident.ml[124,3970+7]..[124,3970+36])
                Pexp_apply
                expression (typing/ident.ml[124,3970+20]..[124,3970+22])
                  Pexp_ident ":=" (typing/ident.ml[124,3970+20]..[124,3970+22])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[124,3970+7]..[124,3970+19])
                      Pexp_ident "currentstamp" (typing/ident.ml[124,3970+7]..[124,3970+19])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[124,3970+23]..[124,3970+36])
                      Pexp_apply
                      expression (typing/ident.ml[124,3970+23]..[124,3970+24])
                        Pexp_ident "!" (typing/ident.ml[124,3970+23]..[124,3970+24])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[124,3970+24]..[124,3970+36])
                            Pexp_ident "reinit_level" (typing/ident.ml[124,3970+24]..[124,3970+36])
                      ]
                ]
    ]
  structure_item (typing/ident.ml[126,4008+0]..[130,4077+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[126,4008+4]..[126,4008+10])
          Ppat_var "global" (typing/ident.ml[126,4008+4]..[126,4008+10])
        expression (typing/ident.ml[126,4008+13]..[130,4077+20])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[127,4030+4]..[128,4042+12])
                Ppat_or
                pattern (typing/ident.ml[127,4030+4]..[127,4030+11])
                  Ppat_construct "Local" (typing/ident.ml[127,4030+4]..[127,4030+9])
                  Some
                    []
                    pattern (typing/ident.ml[127,4030+10]..[127,4030+11])
                      Ppat_any
                pattern (typing/ident.ml[128,4042+4]..[128,4042+12])
                  Ppat_construct "Scoped" (typing/ident.ml[128,4042+4]..[128,4042+10])
                  Some
                    []
                    pattern (typing/ident.ml[128,4042+11]..[128,4042+12])
                      Ppat_any
              expression (typing/ident.ml[128,4042+16]..[128,4042+21])
                Pexp_construct "false" (typing/ident.ml[128,4042+16]..[128,4042+21])
                None
            <case>
              pattern (typing/ident.ml[129,4064+4]..[130,4077+12])
                Ppat_or
                pattern (typing/ident.ml[129,4064+4]..[129,4064+12])
                  Ppat_construct "Global" (typing/ident.ml[129,4064+4]..[129,4064+10])
                  Some
                    []
                    pattern (typing/ident.ml[129,4064+11]..[129,4064+12])
                      Ppat_any
                pattern (typing/ident.ml[130,4077+4]..[130,4077+12])
                  Ppat_construct "Predef" (typing/ident.ml[130,4077+4]..[130,4077+10])
                  Some
                    []
                    pattern (typing/ident.ml[130,4077+11]..[130,4077+12])
                      Ppat_any
              expression (typing/ident.ml[130,4077+16]..[130,4077+20])
                Pexp_construct "true" (typing/ident.ml[130,4077+16]..[130,4077+20])
                None
          ]
    ]
  structure_item (typing/ident.ml[132,4099+0]..[134,4145+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[132,4099+4]..[132,4099+13])
          Ppat_var "is_predef" (typing/ident.ml[132,4099+4]..[132,4099+13])
        expression (typing/ident.ml[132,4099+16]..[134,4145+14])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[133,4124+4]..[133,4124+12])
                Ppat_construct "Predef" (typing/ident.ml[133,4124+4]..[133,4124+10])
                Some
                  []
                  pattern (typing/ident.ml[133,4124+11]..[133,4124+12])
                    Ppat_any
              expression (typing/ident.ml[133,4124+16]..[133,4124+20])
                Pexp_construct "true" (typing/ident.ml[133,4124+16]..[133,4124+20])
                None
            <case>
              pattern (typing/ident.ml[134,4145+4]..[134,4145+5])
                Ppat_any
              expression (typing/ident.ml[134,4145+9]..[134,4145+14])
                Pexp_construct "false" (typing/ident.ml[134,4145+9]..[134,4145+14])
                None
          ]
    ]
  structure_item (typing/ident.ml[136,4161+0]..[149,4650+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[136,4161+4]..[136,4161+9])
          Ppat_var "print" (typing/ident.ml[136,4161+4]..[136,4161+9])
        expression (typing/ident.ml[136,4161+10]..[149,4650+57]) ghost
          Pexp_fun
          Labelled "with_scope"
          None
          pattern (typing/ident.ml[136,4161+11]..[136,4161+21])
            Ppat_var "with_scope" (typing/ident.ml[136,4161+11]..[136,4161+21])
          expression (typing/ident.ml[136,4161+22]..[149,4650+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[136,4161+22]..[136,4161+25])
              Ppat_var "ppf" (typing/ident.ml[136,4161+22]..[136,4161+25])
            expression (typing/ident.ml[137,4189+2]..[149,4650+57])
              Pexp_open Fresh
              module_expr (typing/ident.ml[137,4189+11]..[137,4189+17])
                Pmod_ident "Format" (typing/ident.ml[137,4189+11]..[137,4189+17])
              expression (typing/ident.ml[138,4210+2]..[149,4650+57])
                Pexp_function
                [
                  <case>
                    pattern (typing/ident.ml[139,4221+4]..[139,4221+15])
                      Ppat_construct "Global" (typing/ident.ml[139,4221+4]..[139,4221+10])
                      Some
                        []
                        pattern (typing/ident.ml[139,4221+11]..[139,4221+15])
                          Ppat_var "name" (typing/ident.ml[139,4221+11]..[139,4221+15])
                    expression (typing/ident.ml[139,4221+19]..[139,4221+41])
                      Pexp_apply
                      expression (typing/ident.ml[139,4221+19]..[139,4221+26])
                        Pexp_ident "fprintf" (typing/ident.ml[139,4221+19]..[139,4221+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[139,4221+27]..[139,4221+30])
                            Pexp_ident "ppf" (typing/ident.ml[139,4221+27]..[139,4221+30])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[139,4221+31]..[139,4221+36])
                            Pexp_constant PConst_string("%s!",(typing/ident.ml[139,4221+32]..[139,4221+35]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[139,4221+37]..[139,4221+41])
                            Pexp_ident "name" (typing/ident.ml[139,4221+37]..[139,4221+41])
                      ]
                  <case>
                    pattern (typing/ident.ml[140,4263+4]..[140,4263+30])
                      Ppat_construct "Predef" (typing/ident.ml[140,4263+4]..[140,4263+10])
                      Some
                        []
                        pattern (typing/ident.ml[140,4263+11]..[140,4263+30])
                          Ppat_record Closed
                          [
                            "name" (typing/ident.ml[140,4263+13]..[140,4263+17]) ghost
                              pattern (typing/ident.ml[140,4263+13]..[140,4263+17])
                                Ppat_var "name" (typing/ident.ml[140,4263+13]..[140,4263+17])
                            "stamp" (typing/ident.ml[140,4263+19]..[140,4263+24])
                              pattern (typing/ident.ml[140,4263+27]..[140,4263+28])
                                Ppat_var "n" (typing/ident.ml[140,4263+27]..[140,4263+28])
                          ]
                    expression (typing/ident.ml[141,4297+6]..[142,4328+61])
                      Pexp_apply
                      expression (typing/ident.ml[141,4297+6]..[141,4297+13])
                        Pexp_ident "fprintf" (typing/ident.ml[141,4297+6]..[141,4297+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[141,4297+14]..[141,4297+17])
                            Pexp_ident "ppf" (typing/ident.ml[141,4297+14]..[141,4297+17])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[141,4297+18]..[141,4297+25])
                            Pexp_constant PConst_string("%s%s!",(typing/ident.ml[141,4297+19]..[141,4297+24]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[141,4297+26]..[141,4297+30])
                            Pexp_ident "name" (typing/ident.ml[141,4297+26]..[141,4297+30])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[142,4328+8]..[142,4328+61])
                            Pexp_ifthenelse
                            expression (typing/ident.ml[142,4328+12]..[142,4328+31])
                              Pexp_apply
                              expression (typing/ident.ml[142,4328+12]..[142,4328+13])
                                Pexp_ident "!" (typing/ident.ml[142,4328+12]..[142,4328+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[142,4328+13]..[142,4328+31])
                                    Pexp_ident "Clflags.unique_ids" (typing/ident.ml[142,4328+13]..[142,4328+31])
                              ]
                            expression (typing/ident.ml[142,4328+37]..[142,4328+52])
                              Pexp_apply
                              expression (typing/ident.ml[142,4328+37]..[142,4328+44])
                                Pexp_ident "sprintf" (typing/ident.ml[142,4328+37]..[142,4328+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[142,4328+45]..[142,4328+50])
                                    Pexp_constant PConst_string("/%i",(typing/ident.ml[142,4328+46]..[142,4328+49]),None)
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[142,4328+51]..[142,4328+52])
                                    Pexp_ident "n" (typing/ident.ml[142,4328+51]..[142,4328+52])
                              ]
                            Some
                              expression (typing/ident.ml[142,4328+58]..[142,4328+60])
                                Pexp_constant PConst_string("",(typing/ident.ml[142,4328+59]..[142,4328+59]),None)
                      ]
                  <case>
                    pattern (typing/ident.ml[143,4390+4]..[143,4390+29])
                      Ppat_construct "Local" (typing/ident.ml[143,4390+4]..[143,4390+9])
                      Some
                        []
                        pattern (typing/ident.ml[143,4390+10]..[143,4390+29])
                          Ppat_record Closed
                          [
                            "name" (typing/ident.ml[143,4390+12]..[143,4390+16]) ghost
                              pattern (typing/ident.ml[143,4390+12]..[143,4390+16])
                                Ppat_var "name" (typing/ident.ml[143,4390+12]..[143,4390+16])
                            "stamp" (typing/ident.ml[143,4390+18]..[143,4390+23])
                              pattern (typing/ident.ml[143,4390+26]..[143,4390+27])
                                Ppat_var "n" (typing/ident.ml[143,4390+26]..[143,4390+27])
                          ]
                    expression (typing/ident.ml[144,4423+6]..[145,4453+61])
                      Pexp_apply
                      expression (typing/ident.ml[144,4423+6]..[144,4423+13])
                        Pexp_ident "fprintf" (typing/ident.ml[144,4423+6]..[144,4423+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[144,4423+14]..[144,4423+17])
                            Pexp_ident "ppf" (typing/ident.ml[144,4423+14]..[144,4423+17])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[144,4423+18]..[144,4423+24])
                            Pexp_constant PConst_string("%s%s",(typing/ident.ml[144,4423+19]..[144,4423+23]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[144,4423+25]..[144,4423+29])
                            Pexp_ident "name" (typing/ident.ml[144,4423+25]..[144,4423+29])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[145,4453+8]..[145,4453+61])
                            Pexp_ifthenelse
                            expression (typing/ident.ml[145,4453+12]..[145,4453+31])
                              Pexp_apply
                              expression (typing/ident.ml[145,4453+12]..[145,4453+13])
                                Pexp_ident "!" (typing/ident.ml[145,4453+12]..[145,4453+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[145,4453+13]..[145,4453+31])
                                    Pexp_ident "Clflags.unique_ids" (typing/ident.ml[145,4453+13]..[145,4453+31])
                              ]
                            expression (typing/ident.ml[145,4453+37]..[145,4453+52])
                              Pexp_apply
                              expression (typing/ident.ml[145,4453+37]..[145,4453+44])
                                Pexp_ident "sprintf" (typing/ident.ml[145,4453+37]..[145,4453+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[145,4453+45]..[145,4453+50])
                                    Pexp_constant PConst_string("/%i",(typing/ident.ml[145,4453+46]..[145,4453+49]),None)
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[145,4453+51]..[145,4453+52])
                                    Pexp_ident "n" (typing/ident.ml[145,4453+51]..[145,4453+52])
                              ]
                            Some
                              expression (typing/ident.ml[145,4453+58]..[145,4453+60])
                                Pexp_constant PConst_string("",(typing/ident.ml[145,4453+59]..[145,4453+59]),None)
                      ]
                  <case>
                    pattern (typing/ident.ml[146,4515+4]..[146,4515+37])
                      Ppat_construct "Scoped" (typing/ident.ml[146,4515+4]..[146,4515+10])
                      Some
                        []
                        pattern (typing/ident.ml[146,4515+11]..[146,4515+37])
                          Ppat_record Closed
                          [
                            "name" (typing/ident.ml[146,4515+13]..[146,4515+17]) ghost
                              pattern (typing/ident.ml[146,4515+13]..[146,4515+17])
                                Ppat_var "name" (typing/ident.ml[146,4515+13]..[146,4515+17])
                            "stamp" (typing/ident.ml[146,4515+19]..[146,4515+24])
                              pattern (typing/ident.ml[146,4515+27]..[146,4515+28])
                                Ppat_var "n" (typing/ident.ml[146,4515+27]..[146,4515+28])
                            "scope" (typing/ident.ml[146,4515+30]..[146,4515+35]) ghost
                              pattern (typing/ident.ml[146,4515+30]..[146,4515+35])
                                Ppat_var "scope" (typing/ident.ml[146,4515+30]..[146,4515+35])
                          ]
                    expression (typing/ident.ml[147,4556+6]..[149,4650+57])
                      Pexp_apply
                      expression (typing/ident.ml[147,4556+6]..[147,4556+13])
                        Pexp_ident "fprintf" (typing/ident.ml[147,4556+6]..[147,4556+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[147,4556+14]..[147,4556+17])
                            Pexp_ident "ppf" (typing/ident.ml[147,4556+14]..[147,4556+17])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[147,4556+18]..[147,4556+26])
                            Pexp_constant PConst_string("%s%s%s",(typing/ident.ml[147,4556+19]..[147,4556+25]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[147,4556+27]..[147,4556+31])
                            Pexp_ident "name" (typing/ident.ml[147,4556+27]..[147,4556+31])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[148,4588+8]..[148,4588+61])
                            Pexp_ifthenelse
                            expression (typing/ident.ml[148,4588+12]..[148,4588+31])
                              Pexp_apply
                              expression (typing/ident.ml[148,4588+12]..[148,4588+13])
                                Pexp_ident "!" (typing/ident.ml[148,4588+12]..[148,4588+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[148,4588+13]..[148,4588+31])
                                    Pexp_ident "Clflags.unique_ids" (typing/ident.ml[148,4588+13]..[148,4588+31])
                              ]
                            expression (typing/ident.ml[148,4588+37]..[148,4588+52])
                              Pexp_apply
                              expression (typing/ident.ml[148,4588+37]..[148,4588+44])
                                Pexp_ident "sprintf" (typing/ident.ml[148,4588+37]..[148,4588+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[148,4588+45]..[148,4588+50])
                                    Pexp_constant PConst_string("/%i",(typing/ident.ml[148,4588+46]..[148,4588+49]),None)
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[148,4588+51]..[148,4588+52])
                                    Pexp_ident "n" (typing/ident.ml[148,4588+51]..[148,4588+52])
                              ]
                            Some
                              expression (typing/ident.ml[148,4588+58]..[148,4588+60])
                                Pexp_constant PConst_string("",(typing/ident.ml[148,4588+59]..[148,4588+59]),None)
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[149,4650+8]..[149,4650+57])
                            Pexp_ifthenelse
                            expression (typing/ident.ml[149,4650+12]..[149,4650+22])
                              Pexp_ident "with_scope" (typing/ident.ml[149,4650+12]..[149,4650+22])
                            expression (typing/ident.ml[149,4650+28]..[149,4650+48])
                              Pexp_apply
                              expression (typing/ident.ml[149,4650+28]..[149,4650+35])
                                Pexp_ident "sprintf" (typing/ident.ml[149,4650+28]..[149,4650+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[149,4650+36]..[149,4650+42])
                                    Pexp_constant PConst_string("[%i]",(typing/ident.ml[149,4650+37]..[149,4650+41]),None)
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[149,4650+43]..[149,4650+48])
                                    Pexp_ident "scope" (typing/ident.ml[149,4650+43]..[149,4650+48])
                              ]
                            Some
                              expression (typing/ident.ml[149,4650+54]..[149,4650+56])
                                Pexp_constant PConst_string("",(typing/ident.ml[149,4650+55]..[149,4650+55]),None)
                      ]
                ]
    ]
  structure_item (typing/ident.ml[151,4709+0]..[151,4709+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[151,4709+4]..[151,4709+20])
          Ppat_var "print_with_scope" (typing/ident.ml[151,4709+4]..[151,4709+20])
        expression (typing/ident.ml[151,4709+21]..[151,4709+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[151,4709+21]..[151,4709+24])
            Ppat_var "ppf" (typing/ident.ml[151,4709+21]..[151,4709+24])
          expression (typing/ident.ml[151,4709+25]..[151,4709+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[151,4709+25]..[151,4709+27])
              Ppat_var "id" (typing/ident.ml[151,4709+25]..[151,4709+27])
            expression (typing/ident.ml[151,4709+30]..[151,4709+59])
              Pexp_apply
              expression (typing/ident.ml[151,4709+30]..[151,4709+35])
                Pexp_ident "print" (typing/ident.ml[151,4709+30]..[151,4709+35])
              [
                <arg>
                Labelled "with_scope"
                  expression (typing/ident.ml[151,4709+48]..[151,4709+52])
                    Pexp_construct "true" (typing/ident.ml[151,4709+48]..[151,4709+52])
                    None
                <arg>
                Nolabel
                  expression (typing/ident.ml[151,4709+53]..[151,4709+56])
                    Pexp_ident "ppf" (typing/ident.ml[151,4709+53]..[151,4709+56])
                <arg>
                Nolabel
                  expression (typing/ident.ml[151,4709+57]..[151,4709+59])
                    Pexp_ident "id" (typing/ident.ml[151,4709+57]..[151,4709+59])
              ]
    ]
  structure_item (typing/ident.ml[153,4770+0]..[153,4770+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[153,4770+4]..[153,4770+9])
          Ppat_var "print" (typing/ident.ml[153,4770+4]..[153,4770+9])
        expression (typing/ident.ml[153,4770+10]..[153,4770+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[153,4770+10]..[153,4770+13])
            Ppat_var "ppf" (typing/ident.ml[153,4770+10]..[153,4770+13])
          expression (typing/ident.ml[153,4770+14]..[153,4770+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[153,4770+14]..[153,4770+16])
              Ppat_var "id" (typing/ident.ml[153,4770+14]..[153,4770+16])
            expression (typing/ident.ml[153,4770+19]..[153,4770+49])
              Pexp_apply
              expression (typing/ident.ml[153,4770+19]..[153,4770+24])
                Pexp_ident "print" (typing/ident.ml[153,4770+19]..[153,4770+24])
              [
                <arg>
                Labelled "with_scope"
                  expression (typing/ident.ml[153,4770+37]..[153,4770+42])
                    Pexp_construct "false" (typing/ident.ml[153,4770+37]..[153,4770+42])
                    None
                <arg>
                Nolabel
                  expression (typing/ident.ml[153,4770+43]..[153,4770+46])
                    Pexp_ident "ppf" (typing/ident.ml[153,4770+43]..[153,4770+46])
                <arg>
                Nolabel
                  expression (typing/ident.ml[153,4770+47]..[153,4770+49])
                    Pexp_ident "id" (typing/ident.ml[153,4770+47]..[153,4770+49])
              ]
    ]
  structure_item (typing/ident.ml[155,4821+0]..[162,4932+30])
    Pstr_type Rec
    [
      type_declaration "tbl" (typing/ident.ml[155,4821+8]..[155,4821+11]) (typing/ident.ml[155,4821+0]..[157,4845+43])
        ptype_params =
          [
            core_type (typing/ident.ml[155,4821+5]..[155,4821+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/ident.ml[156,4835+4]..[156,4835+9])
                "Empty" (typing/ident.ml[156,4835+4]..[156,4835+9])
                []
                None
              (typing/ident.ml[157,4845+2]..[157,4845+43])
                "Node" (typing/ident.ml[157,4845+4]..[157,4845+8])
                [
                  core_type (typing/ident.ml[157,4845+12]..[157,4845+18])
                    Ptyp_constr "tbl" (typing/ident.ml[157,4845+15]..[157,4845+18])
                    [
                      core_type (typing/ident.ml[157,4845+12]..[157,4845+14])
                        Ptyp_var a
                    ]
                  core_type (typing/ident.ml[157,4845+21]..[157,4845+28])
                    Ptyp_constr "data" (typing/ident.ml[157,4845+24]..[157,4845+28])
                    [
                      core_type (typing/ident.ml[157,4845+21]..[157,4845+23])
                        Ptyp_var a
                    ]
                  core_type (typing/ident.ml[157,4845+31]..[157,4845+37])
                    Ptyp_constr "tbl" (typing/ident.ml[157,4845+34]..[157,4845+37])
                    [
                      core_type (typing/ident.ml[157,4845+31]..[157,4845+33])
                        Ptyp_var a
                    ]
                  core_type (typing/ident.ml[157,4845+40]..[157,4845+43])
                    Ptyp_constr "int" (typing/ident.ml[157,4845+40]..[157,4845+43])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "data" (typing/ident.ml[159,4890+7]..[159,4890+11]) (typing/ident.ml[159,4890+0]..[162,4932+30])
        ptype_params =
          [
            core_type (typing/ident.ml[159,4890+4]..[159,4890+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/ident.ml[160,4904+4]..[160,4904+13])
                Immutable
                "ident" (typing/ident.ml[160,4904+4]..[160,4904+9])                core_type (typing/ident.ml[160,4904+11]..[160,4904+12])
                  Ptyp_constr "t" (typing/ident.ml[160,4904+11]..[160,4904+12])
                  []
              (typing/ident.ml[161,4918+4]..[161,4918+13])
                Immutable
                "data" (typing/ident.ml[161,4918+4]..[161,4918+8])                core_type (typing/ident.ml[161,4918+10]..[161,4918+12])
                  Ptyp_var a
              (typing/ident.ml[162,4932+4]..[162,4932+28])
                Immutable
                "previous" (typing/ident.ml[162,4932+4]..[162,4932+12])                core_type (typing/ident.ml[162,4932+14]..[162,4932+28])
                  Ptyp_constr "option" (typing/ident.ml[162,4932+22]..[162,4932+28])
                  [
                    core_type (typing/ident.ml[162,4932+14]..[162,4932+21])
                      Ptyp_constr "data" (typing/ident.ml[162,4932+17]..[162,4932+21])
                      [
                        core_type (typing/ident.ml[162,4932+14]..[162,4932+16])
                          Ptyp_var a
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/ident.ml[164,4964+0]..[164,4964+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[164,4964+4]..[164,4964+9])
          Ppat_var "empty" (typing/ident.ml[164,4964+4]..[164,4964+9])
        expression (typing/ident.ml[164,4964+12]..[164,4964+17])
          Pexp_construct "Empty" (typing/ident.ml[164,4964+12]..[164,4964+17])
          None
    ]
  structure_item (typing/ident.ml[172,5104+0]..[175,5238+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[172,5104+4]..[172,5104+10])
          Ppat_var "mknode" (typing/ident.ml[172,5104+4]..[172,5104+10])
        expression (typing/ident.ml[172,5104+11]..[175,5238+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[172,5104+11]..[172,5104+12])
            Ppat_var "l" (typing/ident.ml[172,5104+11]..[172,5104+12])
          expression (typing/ident.ml[172,5104+13]..[175,5238+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[172,5104+13]..[172,5104+14])
              Ppat_var "d" (typing/ident.ml[172,5104+13]..[172,5104+14])
            expression (typing/ident.ml[172,5104+15]..[175,5238+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[172,5104+15]..[172,5104+16])
                Ppat_var "r" (typing/ident.ml[172,5104+15]..[172,5104+16])
              expression (typing/ident.ml[173,5123+2]..[175,5238+54])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/ident.ml[173,5123+6]..[173,5123+8])
                      Ppat_var "hl" (typing/ident.ml[173,5123+6]..[173,5123+8])
                    expression (typing/ident.ml[173,5123+11]..[173,5123+55])
                      Pexp_match
                      expression (typing/ident.ml[173,5123+17]..[173,5123+18])
                        Pexp_ident "l" (typing/ident.ml[173,5123+17]..[173,5123+18])
                      [
                        <case>
                          pattern (typing/ident.ml[173,5123+24]..[173,5123+29])
                            Ppat_construct "Empty" (typing/ident.ml[173,5123+24]..[173,5123+29])
                            None
                          expression (typing/ident.ml[173,5123+33]..[173,5123+34])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/ident.ml[173,5123+37]..[173,5123+50])
                            Ppat_construct "Node" (typing/ident.ml[173,5123+37]..[173,5123+41])
                            Some
                              []
                              pattern (typing/ident.ml[173,5123+41]..[173,5123+50])
                                Ppat_tuple
                                [
                                  pattern (typing/ident.ml[173,5123+42]..[173,5123+43])
                                    Ppat_any
                                  pattern (typing/ident.ml[173,5123+44]..[173,5123+45])
                                    Ppat_any
                                  pattern (typing/ident.ml[173,5123+46]..[173,5123+47])
                                    Ppat_any
                                  pattern (typing/ident.ml[173,5123+48]..[173,5123+49])
                                    Ppat_var "h" (typing/ident.ml[173,5123+48]..[173,5123+49])
                                ]
                          expression (typing/ident.ml[173,5123+54]..[173,5123+55])
                            Pexp_ident "h" (typing/ident.ml[173,5123+54]..[173,5123+55])
                      ]
                  <def>
                    pattern (typing/ident.ml[174,5179+6]..[174,5179+8])
                      Ppat_var "hr" (typing/ident.ml[174,5179+6]..[174,5179+8])
                    expression (typing/ident.ml[174,5179+11]..[174,5179+55])
                      Pexp_match
                      expression (typing/ident.ml[174,5179+17]..[174,5179+18])
                        Pexp_ident "r" (typing/ident.ml[174,5179+17]..[174,5179+18])
                      [
                        <case>
                          pattern (typing/ident.ml[174,5179+24]..[174,5179+29])
                            Ppat_construct "Empty" (typing/ident.ml[174,5179+24]..[174,5179+29])
                            None
                          expression (typing/ident.ml[174,5179+33]..[174,5179+34])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/ident.ml[174,5179+37]..[174,5179+50])
                            Ppat_construct "Node" (typing/ident.ml[174,5179+37]..[174,5179+41])
                            Some
                              []
                              pattern (typing/ident.ml[174,5179+41]..[174,5179+50])
                                Ppat_tuple
                                [
                                  pattern (typing/ident.ml[174,5179+42]..[174,5179+43])
                                    Ppat_any
                                  pattern (typing/ident.ml[174,5179+44]..[174,5179+45])
                                    Ppat_any
                                  pattern (typing/ident.ml[174,5179+46]..[174,5179+47])
                                    Ppat_any
                                  pattern (typing/ident.ml[174,5179+48]..[174,5179+49])
                                    Ppat_var "h" (typing/ident.ml[174,5179+48]..[174,5179+49])
                                ]
                          expression (typing/ident.ml[174,5179+54]..[174,5179+55])
                            Pexp_ident "h" (typing/ident.ml[174,5179+54]..[174,5179+55])
                      ]
                ]
                expression (typing/ident.ml[175,5238+2]..[175,5238+54])
                  Pexp_construct "Node" (typing/ident.ml[175,5238+2]..[175,5238+6])
                  Some
                    expression (typing/ident.ml[175,5238+6]..[175,5238+54])
                      Pexp_tuple
                      [
                        expression (typing/ident.ml[175,5238+7]..[175,5238+8])
                          Pexp_ident "l" (typing/ident.ml[175,5238+7]..[175,5238+8])
                        expression (typing/ident.ml[175,5238+10]..[175,5238+11])
                          Pexp_ident "d" (typing/ident.ml[175,5238+10]..[175,5238+11])
                        expression (typing/ident.ml[175,5238+13]..[175,5238+14])
                          Pexp_ident "r" (typing/ident.ml[175,5238+13]..[175,5238+14])
                        expression (typing/ident.ml[175,5238+16]..[175,5238+53])
                          Pexp_ifthenelse
                          expression (typing/ident.ml[175,5238+20]..[175,5238+28])
                            Pexp_apply
                            expression (typing/ident.ml[175,5238+23]..[175,5238+25])
                              Pexp_ident ">=" (typing/ident.ml[175,5238+23]..[175,5238+25])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[175,5238+20]..[175,5238+22])
                                  Pexp_ident "hl" (typing/ident.ml[175,5238+20]..[175,5238+22])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[175,5238+26]..[175,5238+28])
                                  Pexp_ident "hr" (typing/ident.ml[175,5238+26]..[175,5238+28])
                            ]
                          expression (typing/ident.ml[175,5238+34]..[175,5238+40])
                            Pexp_apply
                            expression (typing/ident.ml[175,5238+37]..[175,5238+38])
                              Pexp_ident "+" (typing/ident.ml[175,5238+37]..[175,5238+38])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[175,5238+34]..[175,5238+36])
                                  Pexp_ident "hl" (typing/ident.ml[175,5238+34]..[175,5238+36])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[175,5238+39]..[175,5238+40])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          Some
                            expression (typing/ident.ml[175,5238+46]..[175,5238+52])
                              Pexp_apply
                              expression (typing/ident.ml[175,5238+49]..[175,5238+50])
                                Pexp_ident "+" (typing/ident.ml[175,5238+49]..[175,5238+50])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[175,5238+46]..[175,5238+48])
                                    Pexp_ident "hr" (typing/ident.ml[175,5238+46]..[175,5238+48])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[175,5238+51]..[175,5238+52])
                                    Pexp_constant PConst_int (1,None)
                              ]
                      ]
    ]
  structure_item (typing/ident.ml[177,5294+0]..[199,6154+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[177,5294+4]..[177,5294+11])
          Ppat_var "balance" (typing/ident.ml[177,5294+4]..[177,5294+11])
        expression (typing/ident.ml[177,5294+12]..[199,6154+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[177,5294+12]..[177,5294+13])
            Ppat_var "l" (typing/ident.ml[177,5294+12]..[177,5294+13])
          expression (typing/ident.ml[177,5294+14]..[199,6154+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[177,5294+14]..[177,5294+15])
              Ppat_var "d" (typing/ident.ml[177,5294+14]..[177,5294+15])
            expression (typing/ident.ml[177,5294+16]..[199,6154+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[177,5294+16]..[177,5294+17])
                Ppat_var "r" (typing/ident.ml[177,5294+16]..[177,5294+17])
              expression (typing/ident.ml[178,5314+2]..[199,6154+16])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/ident.ml[178,5314+6]..[178,5314+8])
                      Ppat_var "hl" (typing/ident.ml[178,5314+6]..[178,5314+8])
                    expression (typing/ident.ml[178,5314+11]..[178,5314+55])
                      Pexp_match
                      expression (typing/ident.ml[178,5314+17]..[178,5314+18])
                        Pexp_ident "l" (typing/ident.ml[178,5314+17]..[178,5314+18])
                      [
                        <case>
                          pattern (typing/ident.ml[178,5314+24]..[178,5314+29])
                            Ppat_construct "Empty" (typing/ident.ml[178,5314+24]..[178,5314+29])
                            None
                          expression (typing/ident.ml[178,5314+33]..[178,5314+34])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/ident.ml[178,5314+37]..[178,5314+50])
                            Ppat_construct "Node" (typing/ident.ml[178,5314+37]..[178,5314+41])
                            Some
                              []
                              pattern (typing/ident.ml[178,5314+41]..[178,5314+50])
                                Ppat_tuple
                                [
                                  pattern (typing/ident.ml[178,5314+42]..[178,5314+43])
                                    Ppat_any
                                  pattern (typing/ident.ml[178,5314+44]..[178,5314+45])
                                    Ppat_any
                                  pattern (typing/ident.ml[178,5314+46]..[178,5314+47])
                                    Ppat_any
                                  pattern (typing/ident.ml[178,5314+48]..[178,5314+49])
                                    Ppat_var "h" (typing/ident.ml[178,5314+48]..[178,5314+49])
                                ]
                          expression (typing/ident.ml[178,5314+54]..[178,5314+55])
                            Pexp_ident "h" (typing/ident.ml[178,5314+54]..[178,5314+55])
                      ]
                  <def>
                    pattern (typing/ident.ml[179,5370+6]..[179,5370+8])
                      Ppat_var "hr" (typing/ident.ml[179,5370+6]..[179,5370+8])
                    expression (typing/ident.ml[179,5370+11]..[179,5370+55])
                      Pexp_match
                      expression (typing/ident.ml[179,5370+17]..[179,5370+18])
                        Pexp_ident "r" (typing/ident.ml[179,5370+17]..[179,5370+18])
                      [
                        <case>
                          pattern (typing/ident.ml[179,5370+24]..[179,5370+29])
                            Ppat_construct "Empty" (typing/ident.ml[179,5370+24]..[179,5370+29])
                            None
                          expression (typing/ident.ml[179,5370+33]..[179,5370+34])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/ident.ml[179,5370+37]..[179,5370+50])
                            Ppat_construct "Node" (typing/ident.ml[179,5370+37]..[179,5370+41])
                            Some
                              []
                              pattern (typing/ident.ml[179,5370+41]..[179,5370+50])
                                Ppat_tuple
                                [
                                  pattern (typing/ident.ml[179,5370+42]..[179,5370+43])
                                    Ppat_any
                                  pattern (typing/ident.ml[179,5370+44]..[179,5370+45])
                                    Ppat_any
                                  pattern (typing/ident.ml[179,5370+46]..[179,5370+47])
                                    Ppat_any
                                  pattern (typing/ident.ml[179,5370+48]..[179,5370+49])
                                    Ppat_var "h" (typing/ident.ml[179,5370+48]..[179,5370+49])
                                ]
                          expression (typing/ident.ml[179,5370+54]..[179,5370+55])
                            Pexp_ident "h" (typing/ident.ml[179,5370+54]..[179,5370+55])
                      ]
                ]
                expression (typing/ident.ml[180,5429+2]..[199,6154+16])
                  Pexp_ifthenelse
                  expression (typing/ident.ml[180,5429+5]..[180,5429+16])
                    Pexp_apply
                    expression (typing/ident.ml[180,5429+8]..[180,5429+9])
                      Pexp_ident ">" (typing/ident.ml[180,5429+8]..[180,5429+9])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[180,5429+5]..[180,5429+7])
                          Pexp_ident "hl" (typing/ident.ml[180,5429+5]..[180,5429+7])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[180,5429+10]..[180,5429+16])
                          Pexp_apply
                          expression (typing/ident.ml[180,5429+13]..[180,5429+14])
                            Pexp_ident "+" (typing/ident.ml[180,5429+13]..[180,5429+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[180,5429+10]..[180,5429+12])
                                Pexp_ident "hr" (typing/ident.ml[180,5429+10]..[180,5429+12])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[180,5429+15]..[180,5429+16])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                  expression (typing/ident.ml[181,5451+4]..[188,5761+23])
                    Pexp_match
                    expression (typing/ident.ml[181,5451+10]..[181,5451+11])
                      Pexp_ident "l" (typing/ident.ml[181,5451+10]..[181,5451+11])
                    [
                      <case>
                        pattern (typing/ident.ml[182,5468+6]..[182,5468+26])
                          Ppat_construct "Node" (typing/ident.ml[182,5468+6]..[182,5468+10])
                          Some
                            []
                            pattern (typing/ident.ml[182,5468+11]..[182,5468+26])
                              Ppat_tuple
                              [
                                pattern (typing/ident.ml[182,5468+12]..[182,5468+14])
                                  Ppat_var "ll" (typing/ident.ml[182,5468+12]..[182,5468+14])
                                pattern (typing/ident.ml[182,5468+16]..[182,5468+18])
                                  Ppat_var "ld" (typing/ident.ml[182,5468+16]..[182,5468+18])
                                pattern (typing/ident.ml[182,5468+20]..[182,5468+22])
                                  Ppat_var "lr" (typing/ident.ml[182,5468+20]..[182,5468+22])
                                pattern (typing/ident.ml[182,5468+24]..[182,5468+25])
                                  Ppat_any
                              ]
                        <when>
                          expression (typing/ident.ml[183,5495+11]..[184,5557+58])
                            Pexp_apply
                            expression (typing/ident.ml[183,5495+59]..[183,5495+61])
                              Pexp_ident ">=" (typing/ident.ml[183,5495+59]..[183,5495+61])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[183,5495+11]..[183,5495+58])
                                  Pexp_match
                                  expression (typing/ident.ml[183,5495+18]..[183,5495+20])
                                    Pexp_ident "ll" (typing/ident.ml[183,5495+18]..[183,5495+20])
                                  [
                                    <case>
                                      pattern (typing/ident.ml[183,5495+26]..[183,5495+31])
                                        Ppat_construct "Empty" (typing/ident.ml[183,5495+26]..[183,5495+31])
                                        None
                                      expression (typing/ident.ml[183,5495+35]..[183,5495+36])
                                        Pexp_constant PConst_int (0,None)
                                    <case>
                                      pattern (typing/ident.ml[183,5495+39]..[183,5495+52])
                                        Ppat_construct "Node" (typing/ident.ml[183,5495+39]..[183,5495+43])
                                        Some
                                          []
                                          pattern (typing/ident.ml[183,5495+43]..[183,5495+52])
                                            Ppat_tuple
                                            [
                                              pattern (typing/ident.ml[183,5495+44]..[183,5495+45])
                                                Ppat_any
                                              pattern (typing/ident.ml[183,5495+46]..[183,5495+47])
                                                Ppat_any
                                              pattern (typing/ident.ml[183,5495+48]..[183,5495+49])
                                                Ppat_any
                                              pattern (typing/ident.ml[183,5495+50]..[183,5495+51])
                                                Ppat_var "h" (typing/ident.ml[183,5495+50]..[183,5495+51])
                                            ]
                                      expression (typing/ident.ml[183,5495+56]..[183,5495+57])
                                        Pexp_ident "h" (typing/ident.ml[183,5495+56]..[183,5495+57])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[184,5557+11]..[184,5557+58])
                                  Pexp_match
                                  expression (typing/ident.ml[184,5557+18]..[184,5557+20])
                                    Pexp_ident "lr" (typing/ident.ml[184,5557+18]..[184,5557+20])
                                  [
                                    <case>
                                      pattern (typing/ident.ml[184,5557+26]..[184,5557+31])
                                        Ppat_construct "Empty" (typing/ident.ml[184,5557+26]..[184,5557+31])
                                        None
                                      expression (typing/ident.ml[184,5557+35]..[184,5557+36])
                                        Pexp_constant PConst_int (0,None)
                                    <case>
                                      pattern (typing/ident.ml[184,5557+39]..[184,5557+52])
                                        Ppat_construct "Node" (typing/ident.ml[184,5557+39]..[184,5557+43])
                                        Some
                                          []
                                          pattern (typing/ident.ml[184,5557+43]..[184,5557+52])
                                            Ppat_tuple
                                            [
                                              pattern (typing/ident.ml[184,5557+44]..[184,5557+45])
                                                Ppat_any
                                              pattern (typing/ident.ml[184,5557+46]..[184,5557+47])
                                                Ppat_any
                                              pattern (typing/ident.ml[184,5557+48]..[184,5557+49])
                                                Ppat_any
                                              pattern (typing/ident.ml[184,5557+50]..[184,5557+51])
                                                Ppat_var "h" (typing/ident.ml[184,5557+50]..[184,5557+51])
                                            ]
                                      expression (typing/ident.ml[184,5557+56]..[184,5557+57])
                                        Pexp_ident "h" (typing/ident.ml[184,5557+56]..[184,5557+57])
                                  ]
                            ]
                        expression (typing/ident.ml[185,5619+8]..[185,5619+36])
                          Pexp_apply
                          expression (typing/ident.ml[185,5619+8]..[185,5619+14])
                            Pexp_ident "mknode" (typing/ident.ml[185,5619+8]..[185,5619+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[185,5619+15]..[185,5619+17])
                                Pexp_ident "ll" (typing/ident.ml[185,5619+15]..[185,5619+17])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[185,5619+18]..[185,5619+20])
                                Pexp_ident "ld" (typing/ident.ml[185,5619+18]..[185,5619+20])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[185,5619+21]..[185,5619+36])
                                Pexp_apply
                                expression (typing/ident.ml[185,5619+22]..[185,5619+28])
                                  Pexp_ident "mknode" (typing/ident.ml[185,5619+22]..[185,5619+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[185,5619+29]..[185,5619+31])
                                      Pexp_ident "lr" (typing/ident.ml[185,5619+29]..[185,5619+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[185,5619+32]..[185,5619+33])
                                      Pexp_ident "d" (typing/ident.ml[185,5619+32]..[185,5619+33])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[185,5619+34]..[185,5619+35])
                                      Pexp_ident "r" (typing/ident.ml[185,5619+34]..[185,5619+35])
                                ]
                          ]
                      <case>
                        pattern (typing/ident.ml[186,5656+6]..[186,5656+46])
                          Ppat_construct "Node" (typing/ident.ml[186,5656+6]..[186,5656+10])
                          Some
                            []
                            pattern (typing/ident.ml[186,5656+11]..[186,5656+46])
                              Ppat_tuple
                              [
                                pattern (typing/ident.ml[186,5656+12]..[186,5656+14])
                                  Ppat_var "ll" (typing/ident.ml[186,5656+12]..[186,5656+14])
                                pattern (typing/ident.ml[186,5656+16]..[186,5656+18])
                                  Ppat_var "ld" (typing/ident.ml[186,5656+16]..[186,5656+18])
                                pattern (typing/ident.ml[186,5656+20]..[186,5656+42])
                                  Ppat_construct "Node" (typing/ident.ml[186,5656+20]..[186,5656+24])
                                  Some
                                    []
                                    pattern (typing/ident.ml[186,5656+24]..[186,5656+42])
                                      Ppat_tuple
                                      [
                                        pattern (typing/ident.ml[186,5656+25]..[186,5656+28])
                                          Ppat_var "lrl" (typing/ident.ml[186,5656+25]..[186,5656+28])
                                        pattern (typing/ident.ml[186,5656+30]..[186,5656+33])
                                          Ppat_var "lrd" (typing/ident.ml[186,5656+30]..[186,5656+33])
                                        pattern (typing/ident.ml[186,5656+35]..[186,5656+38])
                                          Ppat_var "lrr" (typing/ident.ml[186,5656+35]..[186,5656+38])
                                        pattern (typing/ident.ml[186,5656+40]..[186,5656+41])
                                          Ppat_any
                                      ]
                                pattern (typing/ident.ml[186,5656+44]..[186,5656+45])
                                  Ppat_any
                              ]
                        expression (typing/ident.ml[187,5706+8]..[187,5706+54])
                          Pexp_apply
                          expression (typing/ident.ml[187,5706+8]..[187,5706+14])
                            Pexp_ident "mknode" (typing/ident.ml[187,5706+8]..[187,5706+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[187,5706+15]..[187,5706+33])
                                Pexp_apply
                                expression (typing/ident.ml[187,5706+16]..[187,5706+22])
                                  Pexp_ident "mknode" (typing/ident.ml[187,5706+16]..[187,5706+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+23]..[187,5706+25])
                                      Pexp_ident "ll" (typing/ident.ml[187,5706+23]..[187,5706+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+26]..[187,5706+28])
                                      Pexp_ident "ld" (typing/ident.ml[187,5706+26]..[187,5706+28])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+29]..[187,5706+32])
                                      Pexp_ident "lrl" (typing/ident.ml[187,5706+29]..[187,5706+32])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[187,5706+34]..[187,5706+37])
                                Pexp_ident "lrd" (typing/ident.ml[187,5706+34]..[187,5706+37])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[187,5706+38]..[187,5706+54])
                                Pexp_apply
                                expression (typing/ident.ml[187,5706+39]..[187,5706+45])
                                  Pexp_ident "mknode" (typing/ident.ml[187,5706+39]..[187,5706+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+46]..[187,5706+49])
                                      Pexp_ident "lrr" (typing/ident.ml[187,5706+46]..[187,5706+49])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+50]..[187,5706+51])
                                      Pexp_ident "d" (typing/ident.ml[187,5706+50]..[187,5706+51])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[187,5706+52]..[187,5706+53])
                                      Pexp_ident "r" (typing/ident.ml[187,5706+52]..[187,5706+53])
                                ]
                          ]
                      <case>
                        pattern (typing/ident.ml[188,5761+6]..[188,5761+7])
                          Ppat_any
                        expression (typing/ident.ml[188,5761+11]..[188,5761+23])
                          Pexp_assert
                          expression (typing/ident.ml[188,5761+18]..[188,5761+23])
                            Pexp_construct "false" (typing/ident.ml[188,5761+18]..[188,5761+23])
                            None
                    ]
                  Some
                    expression (typing/ident.ml[189,5785+7]..[199,6154+16])
                      Pexp_ifthenelse
                      expression (typing/ident.ml[189,5785+10]..[189,5785+21])
                        Pexp_apply
                        expression (typing/ident.ml[189,5785+13]..[189,5785+14])
                          Pexp_ident ">" (typing/ident.ml[189,5785+13]..[189,5785+14])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[189,5785+10]..[189,5785+12])
                              Pexp_ident "hr" (typing/ident.ml[189,5785+10]..[189,5785+12])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[189,5785+15]..[189,5785+21])
                              Pexp_apply
                              expression (typing/ident.ml[189,5785+18]..[189,5785+19])
                                Pexp_ident "+" (typing/ident.ml[189,5785+18]..[189,5785+19])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[189,5785+15]..[189,5785+17])
                                    Pexp_ident "hl" (typing/ident.ml[189,5785+15]..[189,5785+17])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[189,5785+20]..[189,5785+21])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                      expression (typing/ident.ml[190,5812+4]..[197,6123+23])
                        Pexp_match
                        expression (typing/ident.ml[190,5812+10]..[190,5812+11])
                          Pexp_ident "r" (typing/ident.ml[190,5812+10]..[190,5812+11])
                        [
                          <case>
                            pattern (typing/ident.ml[191,5829+6]..[191,5829+26])
                              Ppat_construct "Node" (typing/ident.ml[191,5829+6]..[191,5829+10])
                              Some
                                []
                                pattern (typing/ident.ml[191,5829+11]..[191,5829+26])
                                  Ppat_tuple
                                  [
                                    pattern (typing/ident.ml[191,5829+12]..[191,5829+14])
                                      Ppat_var "rl" (typing/ident.ml[191,5829+12]..[191,5829+14])
                                    pattern (typing/ident.ml[191,5829+16]..[191,5829+18])
                                      Ppat_var "rd" (typing/ident.ml[191,5829+16]..[191,5829+18])
                                    pattern (typing/ident.ml[191,5829+20]..[191,5829+22])
                                      Ppat_var "rr" (typing/ident.ml[191,5829+20]..[191,5829+22])
                                    pattern (typing/ident.ml[191,5829+24]..[191,5829+25])
                                      Ppat_any
                                  ]
                            <when>
                              expression (typing/ident.ml[192,5856+11]..[193,5918+58])
                                Pexp_apply
                                expression (typing/ident.ml[192,5856+59]..[192,5856+61])
                                  Pexp_ident ">=" (typing/ident.ml[192,5856+59]..[192,5856+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[192,5856+11]..[192,5856+58])
                                      Pexp_match
                                      expression (typing/ident.ml[192,5856+18]..[192,5856+20])
                                        Pexp_ident "rr" (typing/ident.ml[192,5856+18]..[192,5856+20])
                                      [
                                        <case>
                                          pattern (typing/ident.ml[192,5856+26]..[192,5856+31])
                                            Ppat_construct "Empty" (typing/ident.ml[192,5856+26]..[192,5856+31])
                                            None
                                          expression (typing/ident.ml[192,5856+35]..[192,5856+36])
                                            Pexp_constant PConst_int (0,None)
                                        <case>
                                          pattern (typing/ident.ml[192,5856+39]..[192,5856+52])
                                            Ppat_construct "Node" (typing/ident.ml[192,5856+39]..[192,5856+43])
                                            Some
                                              []
                                              pattern (typing/ident.ml[192,5856+43]..[192,5856+52])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/ident.ml[192,5856+44]..[192,5856+45])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[192,5856+46]..[192,5856+47])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[192,5856+48]..[192,5856+49])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[192,5856+50]..[192,5856+51])
                                                    Ppat_var "h" (typing/ident.ml[192,5856+50]..[192,5856+51])
                                                ]
                                          expression (typing/ident.ml[192,5856+56]..[192,5856+57])
                                            Pexp_ident "h" (typing/ident.ml[192,5856+56]..[192,5856+57])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[193,5918+11]..[193,5918+58])
                                      Pexp_match
                                      expression (typing/ident.ml[193,5918+18]..[193,5918+20])
                                        Pexp_ident "rl" (typing/ident.ml[193,5918+18]..[193,5918+20])
                                      [
                                        <case>
                                          pattern (typing/ident.ml[193,5918+26]..[193,5918+31])
                                            Ppat_construct "Empty" (typing/ident.ml[193,5918+26]..[193,5918+31])
                                            None
                                          expression (typing/ident.ml[193,5918+35]..[193,5918+36])
                                            Pexp_constant PConst_int (0,None)
                                        <case>
                                          pattern (typing/ident.ml[193,5918+39]..[193,5918+52])
                                            Ppat_construct "Node" (typing/ident.ml[193,5918+39]..[193,5918+43])
                                            Some
                                              []
                                              pattern (typing/ident.ml[193,5918+43]..[193,5918+52])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/ident.ml[193,5918+44]..[193,5918+45])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[193,5918+46]..[193,5918+47])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[193,5918+48]..[193,5918+49])
                                                    Ppat_any
                                                  pattern (typing/ident.ml[193,5918+50]..[193,5918+51])
                                                    Ppat_var "h" (typing/ident.ml[193,5918+50]..[193,5918+51])
                                                ]
                                          expression (typing/ident.ml[193,5918+56]..[193,5918+57])
                                            Pexp_ident "h" (typing/ident.ml[193,5918+56]..[193,5918+57])
                                      ]
                                ]
                            expression (typing/ident.ml[194,5980+8]..[194,5980+36])
                              Pexp_apply
                              expression (typing/ident.ml[194,5980+8]..[194,5980+14])
                                Pexp_ident "mknode" (typing/ident.ml[194,5980+8]..[194,5980+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[194,5980+15]..[194,5980+30])
                                    Pexp_apply
                                    expression (typing/ident.ml[194,5980+16]..[194,5980+22])
                                      Pexp_ident "mknode" (typing/ident.ml[194,5980+16]..[194,5980+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[194,5980+23]..[194,5980+24])
                                          Pexp_ident "l" (typing/ident.ml[194,5980+23]..[194,5980+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[194,5980+25]..[194,5980+26])
                                          Pexp_ident "d" (typing/ident.ml[194,5980+25]..[194,5980+26])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[194,5980+27]..[194,5980+29])
                                          Pexp_ident "rl" (typing/ident.ml[194,5980+27]..[194,5980+29])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[194,5980+31]..[194,5980+33])
                                    Pexp_ident "rd" (typing/ident.ml[194,5980+31]..[194,5980+33])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[194,5980+34]..[194,5980+36])
                                    Pexp_ident "rr" (typing/ident.ml[194,5980+34]..[194,5980+36])
                              ]
                          <case>
                            pattern (typing/ident.ml[195,6017+6]..[195,6017+47])
                              Ppat_construct "Node" (typing/ident.ml[195,6017+6]..[195,6017+10])
                              Some
                                []
                                pattern (typing/ident.ml[195,6017+11]..[195,6017+47])
                                  Ppat_tuple
                                  [
                                    pattern (typing/ident.ml[195,6017+12]..[195,6017+35])
                                      Ppat_construct "Node" (typing/ident.ml[195,6017+12]..[195,6017+16])
                                      Some
                                        []
                                        pattern (typing/ident.ml[195,6017+17]..[195,6017+35])
                                          Ppat_tuple
                                          [
                                            pattern (typing/ident.ml[195,6017+18]..[195,6017+21])
                                              Ppat_var "rll" (typing/ident.ml[195,6017+18]..[195,6017+21])
                                            pattern (typing/ident.ml[195,6017+23]..[195,6017+26])
                                              Ppat_var "rld" (typing/ident.ml[195,6017+23]..[195,6017+26])
                                            pattern (typing/ident.ml[195,6017+28]..[195,6017+31])
                                              Ppat_var "rlr" (typing/ident.ml[195,6017+28]..[195,6017+31])
                                            pattern (typing/ident.ml[195,6017+33]..[195,6017+34])
                                              Ppat_any
                                          ]
                                    pattern (typing/ident.ml[195,6017+37]..[195,6017+39])
                                      Ppat_var "rd" (typing/ident.ml[195,6017+37]..[195,6017+39])
                                    pattern (typing/ident.ml[195,6017+41]..[195,6017+43])
                                      Ppat_var "rr" (typing/ident.ml[195,6017+41]..[195,6017+43])
                                    pattern (typing/ident.ml[195,6017+45]..[195,6017+46])
                                      Ppat_any
                                  ]
                            expression (typing/ident.ml[196,6068+8]..[196,6068+54])
                              Pexp_apply
                              expression (typing/ident.ml[196,6068+8]..[196,6068+14])
                                Pexp_ident "mknode" (typing/ident.ml[196,6068+8]..[196,6068+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[196,6068+15]..[196,6068+31])
                                    Pexp_apply
                                    expression (typing/ident.ml[196,6068+16]..[196,6068+22])
                                      Pexp_ident "mknode" (typing/ident.ml[196,6068+16]..[196,6068+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+23]..[196,6068+24])
                                          Pexp_ident "l" (typing/ident.ml[196,6068+23]..[196,6068+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+25]..[196,6068+26])
                                          Pexp_ident "d" (typing/ident.ml[196,6068+25]..[196,6068+26])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+27]..[196,6068+30])
                                          Pexp_ident "rll" (typing/ident.ml[196,6068+27]..[196,6068+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[196,6068+32]..[196,6068+35])
                                    Pexp_ident "rld" (typing/ident.ml[196,6068+32]..[196,6068+35])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[196,6068+36]..[196,6068+54])
                                    Pexp_apply
                                    expression (typing/ident.ml[196,6068+37]..[196,6068+43])
                                      Pexp_ident "mknode" (typing/ident.ml[196,6068+37]..[196,6068+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+44]..[196,6068+47])
                                          Pexp_ident "rlr" (typing/ident.ml[196,6068+44]..[196,6068+47])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+48]..[196,6068+50])
                                          Pexp_ident "rd" (typing/ident.ml[196,6068+48]..[196,6068+50])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[196,6068+51]..[196,6068+53])
                                          Pexp_ident "rr" (typing/ident.ml[196,6068+51]..[196,6068+53])
                                    ]
                              ]
                          <case>
                            pattern (typing/ident.ml[197,6123+6]..[197,6123+7])
                              Ppat_any
                            expression (typing/ident.ml[197,6123+11]..[197,6123+23])
                              Pexp_assert
                              expression (typing/ident.ml[197,6123+18]..[197,6123+23])
                                Pexp_construct "false" (typing/ident.ml[197,6123+18]..[197,6123+23])
                                None
                        ]
                      Some
                        expression (typing/ident.ml[199,6154+4]..[199,6154+16])
                          Pexp_apply
                          expression (typing/ident.ml[199,6154+4]..[199,6154+10])
                            Pexp_ident "mknode" (typing/ident.ml[199,6154+4]..[199,6154+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[199,6154+11]..[199,6154+12])
                                Pexp_ident "l" (typing/ident.ml[199,6154+11]..[199,6154+12])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[199,6154+13]..[199,6154+14])
                                Pexp_ident "d" (typing/ident.ml[199,6154+13]..[199,6154+14])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[199,6154+15]..[199,6154+16])
                                Pexp_ident "r" (typing/ident.ml[199,6154+15]..[199,6154+16])
                          ]
    ]
  structure_item (typing/ident.ml[201,6172+0]..[211,6529+35])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[201,6172+8]..[201,6172+11])
          Ppat_var "add" (typing/ident.ml[201,6172+8]..[201,6172+11])
        expression (typing/ident.ml[201,6172+12]..[211,6529+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[201,6172+12]..[201,6172+14])
            Ppat_var "id" (typing/ident.ml[201,6172+12]..[201,6172+14])
          expression (typing/ident.ml[201,6172+15]..[211,6529+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[201,6172+15]..[201,6172+19])
              Ppat_var "data" (typing/ident.ml[201,6172+15]..[201,6172+19])
            expression (typing/ident.ml[201,6172+22]..[211,6529+35])
              Pexp_function
              [
                <case>
                  pattern (typing/ident.ml[202,6203+4]..[202,6203+9])
                    Ppat_construct "Empty" (typing/ident.ml[202,6203+4]..[202,6203+9])
                    None
                  expression (typing/ident.ml[203,6216+6]..[203,6216+71])
                    Pexp_construct "Node" (typing/ident.ml[203,6216+6]..[203,6216+10])
                    Some
                      expression (typing/ident.ml[203,6216+10]..[203,6216+71])
                        Pexp_tuple
                        [
                          expression (typing/ident.ml[203,6216+11]..[203,6216+16])
                            Pexp_construct "Empty" (typing/ident.ml[203,6216+11]..[203,6216+16])
                            None
                          expression (typing/ident.ml[203,6216+18]..[203,6216+60])
                            Pexp_record
                            [
                              "ident" (typing/ident.ml[203,6216+19]..[203,6216+24])
                                expression (typing/ident.ml[203,6216+27]..[203,6216+29])
                                  Pexp_ident "id" (typing/ident.ml[203,6216+27]..[203,6216+29])
                              "data" (typing/ident.ml[203,6216+31]..[203,6216+35])
                                expression (typing/ident.ml[203,6216+38]..[203,6216+42])
                                  Pexp_ident "data" (typing/ident.ml[203,6216+38]..[203,6216+42])
                              "previous" (typing/ident.ml[203,6216+44]..[203,6216+52])
                                expression (typing/ident.ml[203,6216+55]..[203,6216+59])
                                  Pexp_construct "None" (typing/ident.ml[203,6216+55]..[203,6216+59])
                                  None
                            ]
                            None
                          expression (typing/ident.ml[203,6216+62]..[203,6216+67])
                            Pexp_construct "Empty" (typing/ident.ml[203,6216+62]..[203,6216+67])
                            None
                          expression (typing/ident.ml[203,6216+69]..[203,6216+70])
                            Pexp_constant PConst_int (1,None)
                        ]
                <case>
                  pattern (typing/ident.ml[204,6288+4]..[204,6288+20])
                    Ppat_construct "Node" (typing/ident.ml[204,6288+4]..[204,6288+8])
                    Some
                      []
                      pattern (typing/ident.ml[204,6288+8]..[204,6288+20])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[204,6288+9]..[204,6288+10])
                            Ppat_var "l" (typing/ident.ml[204,6288+9]..[204,6288+10])
                          pattern (typing/ident.ml[204,6288+12]..[204,6288+13])
                            Ppat_var "k" (typing/ident.ml[204,6288+12]..[204,6288+13])
                          pattern (typing/ident.ml[204,6288+15]..[204,6288+16])
                            Ppat_var "r" (typing/ident.ml[204,6288+15]..[204,6288+16])
                          pattern (typing/ident.ml[204,6288+18]..[204,6288+19])
                            Ppat_var "h" (typing/ident.ml[204,6288+18]..[204,6288+19])
                        ]
                  expression (typing/ident.ml[205,6312+6]..[211,6529+35])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/ident.ml[205,6312+10]..[205,6312+11])
                          Ppat_var "c" (typing/ident.ml[205,6312+10]..[205,6312+11])
                        expression (typing/ident.ml[205,6312+14]..[205,6312+53])
                          Pexp_apply
                          expression (typing/ident.ml[205,6312+14]..[205,6312+28])
                            Pexp_ident "String.compare" (typing/ident.ml[205,6312+14]..[205,6312+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[205,6312+29]..[205,6312+38])
                                Pexp_apply
                                expression (typing/ident.ml[205,6312+30]..[205,6312+34])
                                  Pexp_ident "name" (typing/ident.ml[205,6312+30]..[205,6312+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[205,6312+35]..[205,6312+37])
                                      Pexp_ident "id" (typing/ident.ml[205,6312+35]..[205,6312+37])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[205,6312+39]..[205,6312+53])
                                Pexp_apply
                                expression (typing/ident.ml[205,6312+40]..[205,6312+44])
                                  Pexp_ident "name" (typing/ident.ml[205,6312+40]..[205,6312+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[205,6312+45]..[205,6312+52])
                                      Pexp_field
                                      expression (typing/ident.ml[205,6312+45]..[205,6312+46])
                                        Pexp_ident "k" (typing/ident.ml[205,6312+45]..[205,6312+46])
                                      "ident" (typing/ident.ml[205,6312+47]..[205,6312+52])
                                ]
                          ]
                    ]
                    expression (typing/ident.ml[206,6369+6]..[211,6529+35])
                      Pexp_ifthenelse
                      expression (typing/ident.ml[206,6369+9]..[206,6369+14])
                        Pexp_apply
                        expression (typing/ident.ml[206,6369+11]..[206,6369+12])
                          Pexp_ident "=" (typing/ident.ml[206,6369+11]..[206,6369+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[206,6369+9]..[206,6369+10])
                              Pexp_ident "c" (typing/ident.ml[206,6369+9]..[206,6369+10])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[206,6369+13]..[206,6369+14])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (typing/ident.ml[207,6389+8]..[207,6389+67])
                        Pexp_construct "Node" (typing/ident.ml[207,6389+8]..[207,6389+12])
                        Some
                          expression (typing/ident.ml[207,6389+12]..[207,6389+67])
                            Pexp_tuple
                            [
                              expression (typing/ident.ml[207,6389+13]..[207,6389+14])
                                Pexp_ident "l" (typing/ident.ml[207,6389+13]..[207,6389+14])
                              expression (typing/ident.ml[207,6389+16]..[207,6389+60])
                                Pexp_record
                                [
                                  "ident" (typing/ident.ml[207,6389+17]..[207,6389+22])
                                    expression (typing/ident.ml[207,6389+25]..[207,6389+27])
                                      Pexp_ident "id" (typing/ident.ml[207,6389+25]..[207,6389+27])
                                  "data" (typing/ident.ml[207,6389+29]..[207,6389+33])
                                    expression (typing/ident.ml[207,6389+36]..[207,6389+40])
                                      Pexp_ident "data" (typing/ident.ml[207,6389+36]..[207,6389+40])
                                  "previous" (typing/ident.ml[207,6389+42]..[207,6389+50])
                                    expression (typing/ident.ml[207,6389+53]..[207,6389+59])
                                      Pexp_construct "Some" (typing/ident.ml[207,6389+53]..[207,6389+57])
                                      Some
                                        expression (typing/ident.ml[207,6389+58]..[207,6389+59])
                                          Pexp_ident "k" (typing/ident.ml[207,6389+58]..[207,6389+59])
                                ]
                                None
                              expression (typing/ident.ml[207,6389+62]..[207,6389+63])
                                Pexp_ident "r" (typing/ident.ml[207,6389+62]..[207,6389+63])
                              expression (typing/ident.ml[207,6389+65]..[207,6389+66])
                                Pexp_ident "h" (typing/ident.ml[207,6389+65]..[207,6389+66])
                            ]
                      Some
                        expression (typing/ident.ml[208,6457+11]..[211,6529+35])
                          Pexp_ifthenelse
                          expression (typing/ident.ml[208,6457+14]..[208,6457+19])
                            Pexp_apply
                            expression (typing/ident.ml[208,6457+16]..[208,6457+17])
                              Pexp_ident "<" (typing/ident.ml[208,6457+16]..[208,6457+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[208,6457+14]..[208,6457+15])
                                  Pexp_ident "c" (typing/ident.ml[208,6457+14]..[208,6457+15])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[208,6457+18]..[208,6457+19])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (typing/ident.ml[209,6482+8]..[209,6482+35])
                            Pexp_apply
                            expression (typing/ident.ml[209,6482+8]..[209,6482+15])
                              Pexp_ident "balance" (typing/ident.ml[209,6482+8]..[209,6482+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[209,6482+16]..[209,6482+31])
                                  Pexp_apply
                                  expression (typing/ident.ml[209,6482+17]..[209,6482+20])
                                    Pexp_ident "add" (typing/ident.ml[209,6482+17]..[209,6482+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[209,6482+21]..[209,6482+23])
                                        Pexp_ident "id" (typing/ident.ml[209,6482+21]..[209,6482+23])
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[209,6482+24]..[209,6482+28])
                                        Pexp_ident "data" (typing/ident.ml[209,6482+24]..[209,6482+28])
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[209,6482+29]..[209,6482+30])
                                        Pexp_ident "l" (typing/ident.ml[209,6482+29]..[209,6482+30])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[209,6482+32]..[209,6482+33])
                                  Pexp_ident "k" (typing/ident.ml[209,6482+32]..[209,6482+33])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[209,6482+34]..[209,6482+35])
                                  Pexp_ident "r" (typing/ident.ml[209,6482+34]..[209,6482+35])
                            ]
                          Some
                            expression (typing/ident.ml[211,6529+8]..[211,6529+35])
                              Pexp_apply
                              expression (typing/ident.ml[211,6529+8]..[211,6529+15])
                                Pexp_ident "balance" (typing/ident.ml[211,6529+8]..[211,6529+15])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[211,6529+16]..[211,6529+17])
                                    Pexp_ident "l" (typing/ident.ml[211,6529+16]..[211,6529+17])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[211,6529+18]..[211,6529+19])
                                    Pexp_ident "k" (typing/ident.ml[211,6529+18]..[211,6529+19])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[211,6529+20]..[211,6529+35])
                                    Pexp_apply
                                    expression (typing/ident.ml[211,6529+21]..[211,6529+24])
                                      Pexp_ident "add" (typing/ident.ml[211,6529+21]..[211,6529+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[211,6529+25]..[211,6529+27])
                                          Pexp_ident "id" (typing/ident.ml[211,6529+25]..[211,6529+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[211,6529+28]..[211,6529+32])
                                          Pexp_ident "data" (typing/ident.ml[211,6529+28]..[211,6529+32])
                                      <arg>
                                      Nolabel
                                        expression (typing/ident.ml[211,6529+33]..[211,6529+34])
                                          Pexp_ident "r" (typing/ident.ml[211,6529+33]..[211,6529+34])
                                    ]
                              ]
              ]
    ]
  structure_item (typing/ident.ml[213,6566+0]..[216,6657+38])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[213,6566+8]..[213,6566+19])
          Ppat_var "min_binding" (typing/ident.ml[213,6566+8]..[213,6566+19])
        expression (typing/ident.ml[213,6566+22]..[216,6657+38])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[214,6597+4]..[214,6597+9])
                Ppat_construct "Empty" (typing/ident.ml[214,6597+4]..[214,6597+9])
                None
              expression (typing/ident.ml[214,6597+13]..[214,6597+28])
                Pexp_apply
                expression (typing/ident.ml[214,6597+13]..[214,6597+18])
                  Pexp_ident "raise" (typing/ident.ml[214,6597+13]..[214,6597+18])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[214,6597+19]..[214,6597+28])
                      Pexp_construct "Not_found" (typing/ident.ml[214,6597+19]..[214,6597+28])
                      None
                ]
            <case>
              pattern (typing/ident.ml[215,6626+4]..[215,6626+25])
                Ppat_construct "Node" (typing/ident.ml[215,6626+4]..[215,6626+8])
                Some
                  []
                  pattern (typing/ident.ml[215,6626+9]..[215,6626+25])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[215,6626+10]..[215,6626+15])
                        Ppat_construct "Empty" (typing/ident.ml[215,6626+10]..[215,6626+15])
                        None
                      pattern (typing/ident.ml[215,6626+17]..[215,6626+18])
                        Ppat_var "d" (typing/ident.ml[215,6626+17]..[215,6626+18])
                      pattern (typing/ident.ml[215,6626+20]..[215,6626+21])
                        Ppat_any
                      pattern (typing/ident.ml[215,6626+23]..[215,6626+24])
                        Ppat_any
                    ]
              expression (typing/ident.ml[215,6626+29]..[215,6626+30])
                Pexp_ident "d" (typing/ident.ml[215,6626+29]..[215,6626+30])
            <case>
              pattern (typing/ident.ml[216,6657+4]..[216,6657+21])
                Ppat_construct "Node" (typing/ident.ml[216,6657+4]..[216,6657+8])
                Some
                  []
                  pattern (typing/ident.ml[216,6657+9]..[216,6657+21])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[216,6657+10]..[216,6657+11])
                        Ppat_var "l" (typing/ident.ml[216,6657+10]..[216,6657+11])
                      pattern (typing/ident.ml[216,6657+13]..[216,6657+14])
                        Ppat_any
                      pattern (typing/ident.ml[216,6657+16]..[216,6657+17])
                        Ppat_any
                      pattern (typing/ident.ml[216,6657+19]..[216,6657+20])
                        Ppat_any
                    ]
              expression (typing/ident.ml[216,6657+25]..[216,6657+38])
                Pexp_apply
                expression (typing/ident.ml[216,6657+25]..[216,6657+36])
                  Pexp_ident "min_binding" (typing/ident.ml[216,6657+25]..[216,6657+36])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[216,6657+37]..[216,6657+38])
                      Pexp_ident "l" (typing/ident.ml[216,6657+37]..[216,6657+38])
                ]
          ]
    ]
  structure_item (typing/ident.ml[218,6697+0]..[221,6812+59])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[218,6697+8]..[218,6697+26])
          Ppat_var "remove_min_binding" (typing/ident.ml[218,6697+8]..[218,6697+26])
        expression (typing/ident.ml[218,6697+29]..[221,6812+59])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[219,6735+4]..[219,6735+9])
                Ppat_construct "Empty" (typing/ident.ml[219,6735+4]..[219,6735+9])
                None
              expression (typing/ident.ml[219,6735+13]..[219,6735+45])
                Pexp_apply
                expression (typing/ident.ml[219,6735+13]..[219,6735+24])
                  Pexp_ident "invalid_arg" (typing/ident.ml[219,6735+13]..[219,6735+24])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[219,6735+25]..[219,6735+45])
                      Pexp_constant PConst_string("Map.remove_min_elt",(typing/ident.ml[219,6735+26]..[219,6735+44]),None)
                ]
            <case>
              pattern (typing/ident.ml[220,6781+4]..[220,6781+25])
                Ppat_construct "Node" (typing/ident.ml[220,6781+4]..[220,6781+8])
                Some
                  []
                  pattern (typing/ident.ml[220,6781+9]..[220,6781+25])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[220,6781+10]..[220,6781+15])
                        Ppat_construct "Empty" (typing/ident.ml[220,6781+10]..[220,6781+15])
                        None
                      pattern (typing/ident.ml[220,6781+17]..[220,6781+18])
                        Ppat_any
                      pattern (typing/ident.ml[220,6781+20]..[220,6781+21])
                        Ppat_var "r" (typing/ident.ml[220,6781+20]..[220,6781+21])
                      pattern (typing/ident.ml[220,6781+23]..[220,6781+24])
                        Ppat_any
                    ]
              expression (typing/ident.ml[220,6781+29]..[220,6781+30])
                Pexp_ident "r" (typing/ident.ml[220,6781+29]..[220,6781+30])
            <case>
              pattern (typing/ident.ml[221,6812+4]..[221,6812+21])
                Ppat_construct "Node" (typing/ident.ml[221,6812+4]..[221,6812+8])
                Some
                  []
                  pattern (typing/ident.ml[221,6812+9]..[221,6812+21])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[221,6812+10]..[221,6812+11])
                        Ppat_var "l" (typing/ident.ml[221,6812+10]..[221,6812+11])
                      pattern (typing/ident.ml[221,6812+13]..[221,6812+14])
                        Ppat_var "d" (typing/ident.ml[221,6812+13]..[221,6812+14])
                      pattern (typing/ident.ml[221,6812+16]..[221,6812+17])
                        Ppat_var "r" (typing/ident.ml[221,6812+16]..[221,6812+17])
                      pattern (typing/ident.ml[221,6812+19]..[221,6812+20])
                        Ppat_any
                    ]
              expression (typing/ident.ml[221,6812+25]..[221,6812+59])
                Pexp_apply
                expression (typing/ident.ml[221,6812+25]..[221,6812+32])
                  Pexp_ident "balance" (typing/ident.ml[221,6812+25]..[221,6812+32])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[221,6812+33]..[221,6812+55])
                      Pexp_apply
                      expression (typing/ident.ml[221,6812+34]..[221,6812+52])
                        Pexp_ident "remove_min_binding" (typing/ident.ml[221,6812+34]..[221,6812+52])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[221,6812+53]..[221,6812+54])
                            Pexp_ident "l" (typing/ident.ml[221,6812+53]..[221,6812+54])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[221,6812+56]..[221,6812+57])
                      Pexp_ident "d" (typing/ident.ml[221,6812+56]..[221,6812+57])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[221,6812+58]..[221,6812+59])
                      Pexp_ident "r" (typing/ident.ml[221,6812+58]..[221,6812+59])
                ]
          ]
    ]
  structure_item (typing/ident.ml[223,6873+0]..[229,6999+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[223,6873+4]..[223,6873+9])
          Ppat_var "merge" (typing/ident.ml[223,6873+4]..[223,6873+9])
        expression (typing/ident.ml[223,6873+10]..[229,6999+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[223,6873+10]..[223,6873+12])
            Ppat_var "t1" (typing/ident.ml[223,6873+10]..[223,6873+12])
          expression (typing/ident.ml[223,6873+13]..[229,6999+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[223,6873+13]..[223,6873+15])
              Ppat_var "t2" (typing/ident.ml[223,6873+13]..[223,6873+15])
            expression (typing/ident.ml[224,6891+2]..[229,6999+42])
              Pexp_match
              expression (typing/ident.ml[224,6891+8]..[224,6891+16])
                Pexp_tuple
                [
                  expression (typing/ident.ml[224,6891+9]..[224,6891+11])
                    Pexp_ident "t1" (typing/ident.ml[224,6891+9]..[224,6891+11])
                  expression (typing/ident.ml[224,6891+13]..[224,6891+15])
                    Pexp_ident "t2" (typing/ident.ml[224,6891+13]..[224,6891+15])
                ]
              [
                <case>
                  pattern (typing/ident.ml[225,6913+4]..[225,6913+14])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[225,6913+5]..[225,6913+10])
                        Ppat_construct "Empty" (typing/ident.ml[225,6913+5]..[225,6913+10])
                        None
                      pattern (typing/ident.ml[225,6913+12]..[225,6913+13])
                        Ppat_var "t" (typing/ident.ml[225,6913+12]..[225,6913+13])
                    ]
                  expression (typing/ident.ml[225,6913+18]..[225,6913+19])
                    Pexp_ident "t" (typing/ident.ml[225,6913+18]..[225,6913+19])
                <case>
                  pattern (typing/ident.ml[226,6933+4]..[226,6933+14])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[226,6933+5]..[226,6933+6])
                        Ppat_var "t" (typing/ident.ml[226,6933+5]..[226,6933+6])
                      pattern (typing/ident.ml[226,6933+8]..[226,6933+13])
                        Ppat_construct "Empty" (typing/ident.ml[226,6933+8]..[226,6933+13])
                        None
                    ]
                  expression (typing/ident.ml[226,6933+18]..[226,6933+19])
                    Pexp_ident "t" (typing/ident.ml[226,6933+18]..[226,6933+19])
                <case>
                  pattern (typing/ident.ml[227,6953+4]..[227,6953+10])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[227,6953+5]..[227,6953+6])
                        Ppat_any
                      pattern (typing/ident.ml[227,6953+8]..[227,6953+9])
                        Ppat_any
                    ]
                  expression (typing/ident.ml[228,6967+6]..[229,6999+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/ident.ml[228,6967+10]..[228,6967+11])
                          Ppat_var "d" (typing/ident.ml[228,6967+10]..[228,6967+11])
                        expression (typing/ident.ml[228,6967+14]..[228,6967+28])
                          Pexp_apply
                          expression (typing/ident.ml[228,6967+14]..[228,6967+25])
                            Pexp_ident "min_binding" (typing/ident.ml[228,6967+14]..[228,6967+25])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[228,6967+26]..[228,6967+28])
                                Pexp_ident "t2" (typing/ident.ml[228,6967+26]..[228,6967+28])
                          ]
                    ]
                    expression (typing/ident.ml[229,6999+6]..[229,6999+42])
                      Pexp_apply
                      expression (typing/ident.ml[229,6999+6]..[229,6999+13])
                        Pexp_ident "balance" (typing/ident.ml[229,6999+6]..[229,6999+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[229,6999+14]..[229,6999+16])
                            Pexp_ident "t1" (typing/ident.ml[229,6999+14]..[229,6999+16])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[229,6999+17]..[229,6999+18])
                            Pexp_ident "d" (typing/ident.ml[229,6999+17]..[229,6999+18])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[229,6999+19]..[229,6999+42])
                            Pexp_apply
                            expression (typing/ident.ml[229,6999+20]..[229,6999+38])
                              Pexp_ident "remove_min_binding" (typing/ident.ml[229,6999+20]..[229,6999+38])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[229,6999+39]..[229,6999+41])
                                  Pexp_ident "t2" (typing/ident.ml[229,6999+39]..[229,6999+41])
                            ]
                      ]
              ]
    ]
  structure_item (typing/ident.ml[231,7043+0]..[243,7408+69])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[231,7043+8]..[231,7043+14])
          Ppat_var "remove" (typing/ident.ml[231,7043+8]..[231,7043+14])
        expression (typing/ident.ml[231,7043+15]..[243,7408+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[231,7043+15]..[231,7043+17])
            Ppat_var "id" (typing/ident.ml[231,7043+15]..[231,7043+17])
          expression (typing/ident.ml[231,7043+20]..[243,7408+69])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[232,7072+4]..[232,7072+9])
                  Ppat_construct "Empty" (typing/ident.ml[232,7072+4]..[232,7072+9])
                  None
                expression (typing/ident.ml[233,7085+6]..[233,7085+11])
                  Pexp_construct "Empty" (typing/ident.ml[233,7085+6]..[233,7085+11])
                  None
              <case>
                pattern (typing/ident.ml[234,7097+4]..[234,7097+28])
                  Ppat_alias "m" (typing/ident.ml[234,7097+26]..[234,7097+27])
                  pattern (typing/ident.ml[234,7097+5]..[234,7097+22])
                    Ppat_construct "Node" (typing/ident.ml[234,7097+5]..[234,7097+9])
                    Some
                      []
                      pattern (typing/ident.ml[234,7097+10]..[234,7097+22])
                        Ppat_tuple
                        [
                          pattern (typing/ident.ml[234,7097+11]..[234,7097+12])
                            Ppat_var "l" (typing/ident.ml[234,7097+11]..[234,7097+12])
                          pattern (typing/ident.ml[234,7097+14]..[234,7097+15])
                            Ppat_var "k" (typing/ident.ml[234,7097+14]..[234,7097+15])
                          pattern (typing/ident.ml[234,7097+17]..[234,7097+18])
                            Ppat_var "r" (typing/ident.ml[234,7097+17]..[234,7097+18])
                          pattern (typing/ident.ml[234,7097+20]..[234,7097+21])
                            Ppat_var "h" (typing/ident.ml[234,7097+20]..[234,7097+21])
                        ]
                expression (typing/ident.ml[235,7129+6]..[243,7408+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/ident.ml[235,7129+10]..[235,7129+11])
                        Ppat_var "c" (typing/ident.ml[235,7129+10]..[235,7129+11])
                      expression (typing/ident.ml[235,7129+14]..[235,7129+53])
                        Pexp_apply
                        expression (typing/ident.ml[235,7129+14]..[235,7129+28])
                          Pexp_ident "String.compare" (typing/ident.ml[235,7129+14]..[235,7129+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[235,7129+29]..[235,7129+38])
                              Pexp_apply
                              expression (typing/ident.ml[235,7129+30]..[235,7129+34])
                                Pexp_ident "name" (typing/ident.ml[235,7129+30]..[235,7129+34])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[235,7129+35]..[235,7129+37])
                                    Pexp_ident "id" (typing/ident.ml[235,7129+35]..[235,7129+37])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[235,7129+39]..[235,7129+53])
                              Pexp_apply
                              expression (typing/ident.ml[235,7129+40]..[235,7129+44])
                                Pexp_ident "name" (typing/ident.ml[235,7129+40]..[235,7129+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[235,7129+45]..[235,7129+52])
                                    Pexp_field
                                    expression (typing/ident.ml[235,7129+45]..[235,7129+46])
                                      Pexp_ident "k" (typing/ident.ml[235,7129+45]..[235,7129+46])
                                    "ident" (typing/ident.ml[235,7129+47]..[235,7129+52])
                              ]
                        ]
                  ]
                  expression (typing/ident.ml[236,7186+6]..[243,7408+69])
                    Pexp_ifthenelse
                    expression (typing/ident.ml[236,7186+9]..[236,7186+14])
                      Pexp_apply
                      expression (typing/ident.ml[236,7186+11]..[236,7186+12])
                        Pexp_ident "=" (typing/ident.ml[236,7186+11]..[236,7186+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[236,7186+9]..[236,7186+10])
                            Pexp_ident "c" (typing/ident.ml[236,7186+9]..[236,7186+10])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[236,7186+13]..[236,7186+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (typing/ident.ml[237,7206+8]..[239,7264+37])
                      Pexp_match
                      expression (typing/ident.ml[237,7206+14]..[237,7206+24])
                        Pexp_field
                        expression (typing/ident.ml[237,7206+14]..[237,7206+15])
                          Pexp_ident "k" (typing/ident.ml[237,7206+14]..[237,7206+15])
                        "previous" (typing/ident.ml[237,7206+16]..[237,7206+24])
                      [
                        <case>
                          pattern (typing/ident.ml[238,7236+10]..[238,7236+14])
                            Ppat_construct "None" (typing/ident.ml[238,7236+10]..[238,7236+14])
                            None
                          expression (typing/ident.ml[238,7236+18]..[238,7236+27])
                            Pexp_apply
                            expression (typing/ident.ml[238,7236+18]..[238,7236+23])
                              Pexp_ident "merge" (typing/ident.ml[238,7236+18]..[238,7236+23])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[238,7236+24]..[238,7236+25])
                                  Pexp_ident "l" (typing/ident.ml[238,7236+24]..[238,7236+25])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[238,7236+26]..[238,7236+27])
                                  Pexp_ident "r" (typing/ident.ml[238,7236+26]..[238,7236+27])
                            ]
                        <case>
                          pattern (typing/ident.ml[239,7264+10]..[239,7264+16])
                            Ppat_construct "Some" (typing/ident.ml[239,7264+10]..[239,7264+14])
                            Some
                              []
                              pattern (typing/ident.ml[239,7264+15]..[239,7264+16])
                                Ppat_var "k" (typing/ident.ml[239,7264+15]..[239,7264+16])
                          expression (typing/ident.ml[239,7264+20]..[239,7264+37])
                            Pexp_construct "Node" (typing/ident.ml[239,7264+20]..[239,7264+24])
                            Some
                              expression (typing/ident.ml[239,7264+25]..[239,7264+37])
                                Pexp_tuple
                                [
                                  expression (typing/ident.ml[239,7264+26]..[239,7264+27])
                                    Pexp_ident "l" (typing/ident.ml[239,7264+26]..[239,7264+27])
                                  expression (typing/ident.ml[239,7264+29]..[239,7264+30])
                                    Pexp_ident "k" (typing/ident.ml[239,7264+29]..[239,7264+30])
                                  expression (typing/ident.ml[239,7264+32]..[239,7264+33])
                                    Pexp_ident "r" (typing/ident.ml[239,7264+32]..[239,7264+33])
                                  expression (typing/ident.ml[239,7264+35]..[239,7264+36])
                                    Pexp_ident "h" (typing/ident.ml[239,7264+35]..[239,7264+36])
                                ]
                      ]
                    Some
                      expression (typing/ident.ml[240,7302+11]..[243,7408+69])
                        Pexp_ifthenelse
                        expression (typing/ident.ml[240,7302+14]..[240,7302+19])
                          Pexp_apply
                          expression (typing/ident.ml[240,7302+16]..[240,7302+17])
                            Pexp_ident "<" (typing/ident.ml[240,7302+16]..[240,7302+17])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[240,7302+14]..[240,7302+15])
                                Pexp_ident "c" (typing/ident.ml[240,7302+14]..[240,7302+15])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[240,7302+18]..[240,7302+19])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (typing/ident.ml[241,7327+8]..[241,7327+69])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/ident.ml[241,7327+12]..[241,7327+14])
                                Ppat_var "ll" (typing/ident.ml[241,7327+12]..[241,7327+14])
                              expression (typing/ident.ml[241,7327+17]..[241,7327+28])
                                Pexp_apply
                                expression (typing/ident.ml[241,7327+17]..[241,7327+23])
                                  Pexp_ident "remove" (typing/ident.ml[241,7327+17]..[241,7327+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[241,7327+24]..[241,7327+26])
                                      Pexp_ident "id" (typing/ident.ml[241,7327+24]..[241,7327+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[241,7327+27]..[241,7327+28])
                                      Pexp_ident "l" (typing/ident.ml[241,7327+27]..[241,7327+28])
                                ]
                          ]
                          expression (typing/ident.ml[241,7327+32]..[241,7327+69])
                            Pexp_ifthenelse
                            expression (typing/ident.ml[241,7327+35]..[241,7327+42])
                              Pexp_apply
                              expression (typing/ident.ml[241,7327+37]..[241,7327+39])
                                Pexp_ident "==" (typing/ident.ml[241,7327+37]..[241,7327+39])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[241,7327+35]..[241,7327+36])
                                    Pexp_ident "l" (typing/ident.ml[241,7327+35]..[241,7327+36])
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[241,7327+40]..[241,7327+42])
                                    Pexp_ident "ll" (typing/ident.ml[241,7327+40]..[241,7327+42])
                              ]
                            expression (typing/ident.ml[241,7327+48]..[241,7327+49])
                              Pexp_ident "m" (typing/ident.ml[241,7327+48]..[241,7327+49])
                            Some
                              expression (typing/ident.ml[241,7327+55]..[241,7327+69])
                                Pexp_apply
                                expression (typing/ident.ml[241,7327+55]..[241,7327+62])
                                  Pexp_ident "balance" (typing/ident.ml[241,7327+55]..[241,7327+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[241,7327+63]..[241,7327+65])
                                      Pexp_ident "ll" (typing/ident.ml[241,7327+63]..[241,7327+65])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[241,7327+66]..[241,7327+67])
                                      Pexp_ident "k" (typing/ident.ml[241,7327+66]..[241,7327+67])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[241,7327+68]..[241,7327+69])
                                      Pexp_ident "r" (typing/ident.ml[241,7327+68]..[241,7327+69])
                                ]
                        Some
                          expression (typing/ident.ml[243,7408+8]..[243,7408+69])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/ident.ml[243,7408+12]..[243,7408+14])
                                  Ppat_var "rr" (typing/ident.ml[243,7408+12]..[243,7408+14])
                                expression (typing/ident.ml[243,7408+17]..[243,7408+28])
                                  Pexp_apply
                                  expression (typing/ident.ml[243,7408+17]..[243,7408+23])
                                    Pexp_ident "remove" (typing/ident.ml[243,7408+17]..[243,7408+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[243,7408+24]..[243,7408+26])
                                        Pexp_ident "id" (typing/ident.ml[243,7408+24]..[243,7408+26])
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[243,7408+27]..[243,7408+28])
                                        Pexp_ident "r" (typing/ident.ml[243,7408+27]..[243,7408+28])
                                  ]
                            ]
                            expression (typing/ident.ml[243,7408+32]..[243,7408+69])
                              Pexp_ifthenelse
                              expression (typing/ident.ml[243,7408+35]..[243,7408+42])
                                Pexp_apply
                                expression (typing/ident.ml[243,7408+37]..[243,7408+39])
                                  Pexp_ident "==" (typing/ident.ml[243,7408+37]..[243,7408+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[243,7408+35]..[243,7408+36])
                                      Pexp_ident "r" (typing/ident.ml[243,7408+35]..[243,7408+36])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[243,7408+40]..[243,7408+42])
                                      Pexp_ident "rr" (typing/ident.ml[243,7408+40]..[243,7408+42])
                                ]
                              expression (typing/ident.ml[243,7408+48]..[243,7408+49])
                                Pexp_ident "m" (typing/ident.ml[243,7408+48]..[243,7408+49])
                              Some
                                expression (typing/ident.ml[243,7408+55]..[243,7408+69])
                                  Pexp_apply
                                  expression (typing/ident.ml[243,7408+55]..[243,7408+62])
                                    Pexp_ident "balance" (typing/ident.ml[243,7408+55]..[243,7408+62])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[243,7408+63]..[243,7408+64])
                                        Pexp_ident "l" (typing/ident.ml[243,7408+63]..[243,7408+64])
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[243,7408+65]..[243,7408+66])
                                        Pexp_ident "k" (typing/ident.ml[243,7408+65]..[243,7408+66])
                                    <arg>
                                    Nolabel
                                      expression (typing/ident.ml[243,7408+67]..[243,7408+69])
                                        Pexp_ident "rr" (typing/ident.ml[243,7408+67]..[243,7408+69])
                                  ]
            ]
    ]
  structure_item (typing/ident.ml[245,7479+0]..[249,7563+69])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[245,7479+8]..[245,7479+21])
          Ppat_var "find_previous" (typing/ident.ml[245,7479+8]..[245,7479+21])
        expression (typing/ident.ml[245,7479+22]..[249,7563+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[245,7479+22]..[245,7479+24])
            Ppat_var "id" (typing/ident.ml[245,7479+22]..[245,7479+24])
          expression (typing/ident.ml[245,7479+27]..[249,7563+69])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[246,7515+4]..[246,7515+8])
                  Ppat_construct "None" (typing/ident.ml[246,7515+4]..[246,7515+8])
                  None
                expression (typing/ident.ml[247,7527+6]..[247,7527+21])
                  Pexp_apply
                  expression (typing/ident.ml[247,7527+6]..[247,7527+11])
                    Pexp_ident "raise" (typing/ident.ml[247,7527+6]..[247,7527+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[247,7527+12]..[247,7527+21])
                        Pexp_construct "Not_found" (typing/ident.ml[247,7527+12]..[247,7527+21])
                        None
                  ]
              <case>
                pattern (typing/ident.ml[248,7549+4]..[248,7549+10])
                  Ppat_construct "Some" (typing/ident.ml[248,7549+4]..[248,7549+8])
                  Some
                    []
                    pattern (typing/ident.ml[248,7549+9]..[248,7549+10])
                      Ppat_var "k" (typing/ident.ml[248,7549+9]..[248,7549+10])
                expression (typing/ident.ml[249,7563+6]..[249,7563+69])
                  Pexp_ifthenelse
                  expression (typing/ident.ml[249,7563+9]..[249,7563+24])
                    Pexp_apply
                    expression (typing/ident.ml[249,7563+9]..[249,7563+13])
                      Pexp_ident "same" (typing/ident.ml[249,7563+9]..[249,7563+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[249,7563+14]..[249,7563+16])
                          Pexp_ident "id" (typing/ident.ml[249,7563+14]..[249,7563+16])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[249,7563+17]..[249,7563+24])
                          Pexp_field
                          expression (typing/ident.ml[249,7563+17]..[249,7563+18])
                            Pexp_ident "k" (typing/ident.ml[249,7563+17]..[249,7563+18])
                          "ident" (typing/ident.ml[249,7563+19]..[249,7563+24])
                    ]
                  expression (typing/ident.ml[249,7563+30]..[249,7563+36])
                    Pexp_field
                    expression (typing/ident.ml[249,7563+30]..[249,7563+31])
                      Pexp_ident "k" (typing/ident.ml[249,7563+30]..[249,7563+31])
                    "data" (typing/ident.ml[249,7563+32]..[249,7563+36])
                  Some
                    expression (typing/ident.ml[249,7563+42]..[249,7563+69])
                      Pexp_apply
                      expression (typing/ident.ml[249,7563+42]..[249,7563+55])
                        Pexp_ident "find_previous" (typing/ident.ml[249,7563+42]..[249,7563+55])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[249,7563+56]..[249,7563+58])
                            Pexp_ident "id" (typing/ident.ml[249,7563+56]..[249,7563+58])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[249,7563+59]..[249,7563+69])
                            Pexp_field
                            expression (typing/ident.ml[249,7563+59]..[249,7563+60])
                              Pexp_ident "k" (typing/ident.ml[249,7563+59]..[249,7563+60])
                            "previous" (typing/ident.ml[249,7563+61]..[249,7563+69])
                      ]
            ]
    ]
  structure_item (typing/ident.ml[251,7634+0]..[261,7901+45])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[251,7634+8]..[251,7634+17])
          Ppat_var "find_same" (typing/ident.ml[251,7634+8]..[251,7634+17])
        expression (typing/ident.ml[251,7634+18]..[261,7901+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[251,7634+18]..[251,7634+20])
            Ppat_var "id" (typing/ident.ml[251,7634+18]..[251,7634+20])
          expression (typing/ident.ml[251,7634+23]..[261,7901+45])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[252,7666+4]..[252,7666+9])
                  Ppat_construct "Empty" (typing/ident.ml[252,7666+4]..[252,7666+9])
                  None
                expression (typing/ident.ml[253,7679+6]..[253,7679+21])
                  Pexp_apply
                  expression (typing/ident.ml[253,7679+6]..[253,7679+11])
                    Pexp_ident "raise" (typing/ident.ml[253,7679+6]..[253,7679+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[253,7679+12]..[253,7679+21])
                        Pexp_construct "Not_found" (typing/ident.ml[253,7679+12]..[253,7679+21])
                        None
                  ]
              <case>
                pattern (typing/ident.ml[254,7701+4]..[254,7701+20])
                  Ppat_construct "Node" (typing/ident.ml[254,7701+4]..[254,7701+8])
                  Some
                    []
                    pattern (typing/ident.ml[254,7701+8]..[254,7701+20])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[254,7701+9]..[254,7701+10])
                          Ppat_var "l" (typing/ident.ml[254,7701+9]..[254,7701+10])
                        pattern (typing/ident.ml[254,7701+12]..[254,7701+13])
                          Ppat_var "k" (typing/ident.ml[254,7701+12]..[254,7701+13])
                        pattern (typing/ident.ml[254,7701+15]..[254,7701+16])
                          Ppat_var "r" (typing/ident.ml[254,7701+15]..[254,7701+16])
                        pattern (typing/ident.ml[254,7701+18]..[254,7701+19])
                          Ppat_any
                      ]
                expression (typing/ident.ml[255,7725+6]..[261,7901+45])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/ident.ml[255,7725+10]..[255,7725+11])
                        Ppat_var "c" (typing/ident.ml[255,7725+10]..[255,7725+11])
                      expression (typing/ident.ml[255,7725+14]..[255,7725+53])
                        Pexp_apply
                        expression (typing/ident.ml[255,7725+14]..[255,7725+28])
                          Pexp_ident "String.compare" (typing/ident.ml[255,7725+14]..[255,7725+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[255,7725+29]..[255,7725+38])
                              Pexp_apply
                              expression (typing/ident.ml[255,7725+30]..[255,7725+34])
                                Pexp_ident "name" (typing/ident.ml[255,7725+30]..[255,7725+34])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[255,7725+35]..[255,7725+37])
                                    Pexp_ident "id" (typing/ident.ml[255,7725+35]..[255,7725+37])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[255,7725+39]..[255,7725+53])
                              Pexp_apply
                              expression (typing/ident.ml[255,7725+40]..[255,7725+44])
                                Pexp_ident "name" (typing/ident.ml[255,7725+40]..[255,7725+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[255,7725+45]..[255,7725+52])
                                    Pexp_field
                                    expression (typing/ident.ml[255,7725+45]..[255,7725+46])
                                      Pexp_ident "k" (typing/ident.ml[255,7725+45]..[255,7725+46])
                                    "ident" (typing/ident.ml[255,7725+47]..[255,7725+52])
                              ]
                        ]
                  ]
                  expression (typing/ident.ml[256,7782+6]..[261,7901+45])
                    Pexp_ifthenelse
                    expression (typing/ident.ml[256,7782+9]..[256,7782+14])
                      Pexp_apply
                      expression (typing/ident.ml[256,7782+11]..[256,7782+12])
                        Pexp_ident "=" (typing/ident.ml[256,7782+11]..[256,7782+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[256,7782+9]..[256,7782+10])
                            Pexp_ident "c" (typing/ident.ml[256,7782+9]..[256,7782+10])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[256,7782+13]..[256,7782+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (typing/ident.ml[257,7802+8]..[259,7849+40])
                      Pexp_ifthenelse
                      expression (typing/ident.ml[257,7802+11]..[257,7802+26])
                        Pexp_apply
                        expression (typing/ident.ml[257,7802+11]..[257,7802+15])
                          Pexp_ident "same" (typing/ident.ml[257,7802+11]..[257,7802+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[257,7802+16]..[257,7802+18])
                              Pexp_ident "id" (typing/ident.ml[257,7802+16]..[257,7802+18])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[257,7802+19]..[257,7802+26])
                              Pexp_field
                              expression (typing/ident.ml[257,7802+19]..[257,7802+20])
                                Pexp_ident "k" (typing/ident.ml[257,7802+19]..[257,7802+20])
                              "ident" (typing/ident.ml[257,7802+21]..[257,7802+26])
                        ]
                      expression (typing/ident.ml[258,7829+13]..[258,7829+19])
                        Pexp_field
                        expression (typing/ident.ml[258,7829+13]..[258,7829+14])
                          Pexp_ident "k" (typing/ident.ml[258,7829+13]..[258,7829+14])
                        "data" (typing/ident.ml[258,7829+15]..[258,7829+19])
                      Some
                        expression (typing/ident.ml[259,7849+13]..[259,7849+40])
                          Pexp_apply
                          expression (typing/ident.ml[259,7849+13]..[259,7849+26])
                            Pexp_ident "find_previous" (typing/ident.ml[259,7849+13]..[259,7849+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[259,7849+27]..[259,7849+29])
                                Pexp_ident "id" (typing/ident.ml[259,7849+27]..[259,7849+29])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[259,7849+30]..[259,7849+40])
                                Pexp_field
                                expression (typing/ident.ml[259,7849+30]..[259,7849+31])
                                  Pexp_ident "k" (typing/ident.ml[259,7849+30]..[259,7849+31])
                                "previous" (typing/ident.ml[259,7849+32]..[259,7849+40])
                          ]
                    Some
                      expression (typing/ident.ml[261,7901+8]..[261,7901+45])
                        Pexp_apply
                        expression (typing/ident.ml[261,7901+8]..[261,7901+17])
                          Pexp_ident "find_same" (typing/ident.ml[261,7901+8]..[261,7901+17])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[261,7901+18]..[261,7901+20])
                              Pexp_ident "id" (typing/ident.ml[261,7901+18]..[261,7901+20])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[261,7901+21]..[261,7901+45])
                              Pexp_ifthenelse
                              expression (typing/ident.ml[261,7901+25]..[261,7901+30])
                                Pexp_apply
                                expression (typing/ident.ml[261,7901+27]..[261,7901+28])
                                  Pexp_ident "<" (typing/ident.ml[261,7901+27]..[261,7901+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[261,7901+25]..[261,7901+26])
                                      Pexp_ident "c" (typing/ident.ml[261,7901+25]..[261,7901+26])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[261,7901+29]..[261,7901+30])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (typing/ident.ml[261,7901+36]..[261,7901+37])
                                Pexp_ident "l" (typing/ident.ml[261,7901+36]..[261,7901+37])
                              Some
                                expression (typing/ident.ml[261,7901+43]..[261,7901+44])
                                  Pexp_ident "r" (typing/ident.ml[261,7901+43]..[261,7901+44])
                        ]
            ]
    ]
  structure_item (typing/ident.ml[263,7948+0]..[271,8142+44])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[263,7948+8]..[263,7948+17])
          Ppat_var "find_name" (typing/ident.ml[263,7948+8]..[263,7948+17])
        expression (typing/ident.ml[263,7948+18]..[271,8142+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[263,7948+18]..[263,7948+19])
            Ppat_var "n" (typing/ident.ml[263,7948+18]..[263,7948+19])
          expression (typing/ident.ml[263,7948+22]..[271,8142+44])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[264,7979+4]..[264,7979+9])
                  Ppat_construct "Empty" (typing/ident.ml[264,7979+4]..[264,7979+9])
                  None
                expression (typing/ident.ml[265,7992+6]..[265,7992+21])
                  Pexp_apply
                  expression (typing/ident.ml[265,7992+6]..[265,7992+11])
                    Pexp_ident "raise" (typing/ident.ml[265,7992+6]..[265,7992+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[265,7992+12]..[265,7992+21])
                        Pexp_construct "Not_found" (typing/ident.ml[265,7992+12]..[265,7992+21])
                        None
                  ]
              <case>
                pattern (typing/ident.ml[266,8014+4]..[266,8014+20])
                  Ppat_construct "Node" (typing/ident.ml[266,8014+4]..[266,8014+8])
                  Some
                    []
                    pattern (typing/ident.ml[266,8014+8]..[266,8014+20])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[266,8014+9]..[266,8014+10])
                          Ppat_var "l" (typing/ident.ml[266,8014+9]..[266,8014+10])
                        pattern (typing/ident.ml[266,8014+12]..[266,8014+13])
                          Ppat_var "k" (typing/ident.ml[266,8014+12]..[266,8014+13])
                        pattern (typing/ident.ml[266,8014+15]..[266,8014+16])
                          Ppat_var "r" (typing/ident.ml[266,8014+15]..[266,8014+16])
                        pattern (typing/ident.ml[266,8014+18]..[266,8014+19])
                          Ppat_any
                      ]
                expression (typing/ident.ml[267,8038+6]..[271,8142+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/ident.ml[267,8038+10]..[267,8038+11])
                        Ppat_var "c" (typing/ident.ml[267,8038+10]..[267,8038+11])
                      expression (typing/ident.ml[267,8038+14]..[267,8038+45])
                        Pexp_apply
                        expression (typing/ident.ml[267,8038+14]..[267,8038+28])
                          Pexp_ident "String.compare" (typing/ident.ml[267,8038+14]..[267,8038+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[267,8038+29]..[267,8038+30])
                              Pexp_ident "n" (typing/ident.ml[267,8038+29]..[267,8038+30])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[267,8038+31]..[267,8038+45])
                              Pexp_apply
                              expression (typing/ident.ml[267,8038+32]..[267,8038+36])
                                Pexp_ident "name" (typing/ident.ml[267,8038+32]..[267,8038+36])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[267,8038+37]..[267,8038+44])
                                    Pexp_field
                                    expression (typing/ident.ml[267,8038+37]..[267,8038+38])
                                      Pexp_ident "k" (typing/ident.ml[267,8038+37]..[267,8038+38])
                                    "ident" (typing/ident.ml[267,8038+39]..[267,8038+44])
                              ]
                        ]
                  ]
                  expression (typing/ident.ml[268,8087+6]..[271,8142+44])
                    Pexp_ifthenelse
                    expression (typing/ident.ml[268,8087+9]..[268,8087+14])
                      Pexp_apply
                      expression (typing/ident.ml[268,8087+11]..[268,8087+12])
                        Pexp_ident "=" (typing/ident.ml[268,8087+11]..[268,8087+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[268,8087+9]..[268,8087+10])
                            Pexp_ident "c" (typing/ident.ml[268,8087+9]..[268,8087+10])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[268,8087+13]..[268,8087+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (typing/ident.ml[269,8107+8]..[269,8107+23])
                      Pexp_tuple
                      [
                        expression (typing/ident.ml[269,8107+8]..[269,8107+15])
                          Pexp_field
                          expression (typing/ident.ml[269,8107+8]..[269,8107+9])
                            Pexp_ident "k" (typing/ident.ml[269,8107+8]..[269,8107+9])
                          "ident" (typing/ident.ml[269,8107+10]..[269,8107+15])
                        expression (typing/ident.ml[269,8107+17]..[269,8107+23])
                          Pexp_field
                          expression (typing/ident.ml[269,8107+17]..[269,8107+18])
                            Pexp_ident "k" (typing/ident.ml[269,8107+17]..[269,8107+18])
                          "data" (typing/ident.ml[269,8107+19]..[269,8107+23])
                      ]
                    Some
                      expression (typing/ident.ml[271,8142+8]..[271,8142+44])
                        Pexp_apply
                        expression (typing/ident.ml[271,8142+8]..[271,8142+17])
                          Pexp_ident "find_name" (typing/ident.ml[271,8142+8]..[271,8142+17])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[271,8142+18]..[271,8142+19])
                              Pexp_ident "n" (typing/ident.ml[271,8142+18]..[271,8142+19])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[271,8142+20]..[271,8142+44])
                              Pexp_ifthenelse
                              expression (typing/ident.ml[271,8142+24]..[271,8142+29])
                                Pexp_apply
                                expression (typing/ident.ml[271,8142+26]..[271,8142+27])
                                  Pexp_ident "<" (typing/ident.ml[271,8142+26]..[271,8142+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[271,8142+24]..[271,8142+25])
                                      Pexp_ident "c" (typing/ident.ml[271,8142+24]..[271,8142+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[271,8142+28]..[271,8142+29])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (typing/ident.ml[271,8142+35]..[271,8142+36])
                                Pexp_ident "l" (typing/ident.ml[271,8142+35]..[271,8142+36])
                              Some
                                expression (typing/ident.ml[271,8142+42]..[271,8142+43])
                                  Pexp_ident "r" (typing/ident.ml[271,8142+42]..[271,8142+43])
                        ]
            ]
    ]
  structure_item (typing/ident.ml[273,8188+0]..[275,8230+53])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[273,8188+8]..[273,8188+15])
          Ppat_var "get_all" (typing/ident.ml[273,8188+8]..[273,8188+15])
        expression (typing/ident.ml[273,8188+18]..[275,8230+53])
          Pexp_function
          [
            <case>
              pattern (typing/ident.ml[274,8215+4]..[274,8215+8])
                Ppat_construct "None" (typing/ident.ml[274,8215+4]..[274,8215+8])
                None
              expression (typing/ident.ml[274,8215+12]..[274,8215+14])
                Pexp_construct "[]" (typing/ident.ml[274,8215+12]..[274,8215+14])
                None
            <case>
              pattern (typing/ident.ml[275,8230+4]..[275,8230+10])
                Ppat_construct "Some" (typing/ident.ml[275,8230+4]..[275,8230+8])
                Some
                  []
                  pattern (typing/ident.ml[275,8230+9]..[275,8230+10])
                    Ppat_var "k" (typing/ident.ml[275,8230+9]..[275,8230+10])
              expression (typing/ident.ml[275,8230+14]..[275,8230+53])
                Pexp_construct "::" (typing/ident.ml[275,8230+32]..[275,8230+34])
                Some
                  expression (typing/ident.ml[275,8230+14]..[275,8230+53]) ghost
                    Pexp_tuple
                    [
                      expression (typing/ident.ml[275,8230+14]..[275,8230+31])
                        Pexp_tuple
                        [
                          expression (typing/ident.ml[275,8230+15]..[275,8230+22])
                            Pexp_field
                            expression (typing/ident.ml[275,8230+15]..[275,8230+16])
                              Pexp_ident "k" (typing/ident.ml[275,8230+15]..[275,8230+16])
                            "ident" (typing/ident.ml[275,8230+17]..[275,8230+22])
                          expression (typing/ident.ml[275,8230+24]..[275,8230+30])
                            Pexp_field
                            expression (typing/ident.ml[275,8230+24]..[275,8230+25])
                              Pexp_ident "k" (typing/ident.ml[275,8230+24]..[275,8230+25])
                            "data" (typing/ident.ml[275,8230+26]..[275,8230+30])
                        ]
                      expression (typing/ident.ml[275,8230+35]..[275,8230+53])
                        Pexp_apply
                        expression (typing/ident.ml[275,8230+35]..[275,8230+42])
                          Pexp_ident "get_all" (typing/ident.ml[275,8230+35]..[275,8230+42])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[275,8230+43]..[275,8230+53])
                              Pexp_field
                              expression (typing/ident.ml[275,8230+43]..[275,8230+44])
                                Pexp_ident "k" (typing/ident.ml[275,8230+43]..[275,8230+44])
                              "previous" (typing/ident.ml[275,8230+45]..[275,8230+53])
                        ]
                    ]
          ]
    ]
  structure_item (typing/ident.ml[277,8285+0]..[285,8489+43])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[277,8285+8]..[277,8285+16])
          Ppat_var "find_all" (typing/ident.ml[277,8285+8]..[277,8285+16])
        expression (typing/ident.ml[277,8285+17]..[285,8489+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[277,8285+17]..[277,8285+18])
            Ppat_var "n" (typing/ident.ml[277,8285+17]..[277,8285+18])
          expression (typing/ident.ml[277,8285+21]..[285,8489+43])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[278,8315+4]..[278,8315+9])
                  Ppat_construct "Empty" (typing/ident.ml[278,8315+4]..[278,8315+9])
                  None
                expression (typing/ident.ml[279,8328+6]..[279,8328+8])
                  Pexp_construct "[]" (typing/ident.ml[279,8328+6]..[279,8328+8])
                  None
              <case>
                pattern (typing/ident.ml[280,8337+4]..[280,8337+20])
                  Ppat_construct "Node" (typing/ident.ml[280,8337+4]..[280,8337+8])
                  Some
                    []
                    pattern (typing/ident.ml[280,8337+8]..[280,8337+20])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[280,8337+9]..[280,8337+10])
                          Ppat_var "l" (typing/ident.ml[280,8337+9]..[280,8337+10])
                        pattern (typing/ident.ml[280,8337+12]..[280,8337+13])
                          Ppat_var "k" (typing/ident.ml[280,8337+12]..[280,8337+13])
                        pattern (typing/ident.ml[280,8337+15]..[280,8337+16])
                          Ppat_var "r" (typing/ident.ml[280,8337+15]..[280,8337+16])
                        pattern (typing/ident.ml[280,8337+18]..[280,8337+19])
                          Ppat_any
                      ]
                expression (typing/ident.ml[281,8361+6]..[285,8489+43])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/ident.ml[281,8361+10]..[281,8361+11])
                        Ppat_var "c" (typing/ident.ml[281,8361+10]..[281,8361+11])
                      expression (typing/ident.ml[281,8361+14]..[281,8361+45])
                        Pexp_apply
                        expression (typing/ident.ml[281,8361+14]..[281,8361+28])
                          Pexp_ident "String.compare" (typing/ident.ml[281,8361+14]..[281,8361+28])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[281,8361+29]..[281,8361+30])
                              Pexp_ident "n" (typing/ident.ml[281,8361+29]..[281,8361+30])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[281,8361+31]..[281,8361+45])
                              Pexp_apply
                              expression (typing/ident.ml[281,8361+32]..[281,8361+36])
                                Pexp_ident "name" (typing/ident.ml[281,8361+32]..[281,8361+36])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[281,8361+37]..[281,8361+44])
                                    Pexp_field
                                    expression (typing/ident.ml[281,8361+37]..[281,8361+38])
                                      Pexp_ident "k" (typing/ident.ml[281,8361+37]..[281,8361+38])
                                    "ident" (typing/ident.ml[281,8361+39]..[281,8361+44])
                              ]
                        ]
                  ]
                  expression (typing/ident.ml[282,8410+6]..[285,8489+43])
                    Pexp_ifthenelse
                    expression (typing/ident.ml[282,8410+9]..[282,8410+14])
                      Pexp_apply
                      expression (typing/ident.ml[282,8410+11]..[282,8410+12])
                        Pexp_ident "=" (typing/ident.ml[282,8410+11]..[282,8410+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[282,8410+9]..[282,8410+10])
                            Pexp_ident "c" (typing/ident.ml[282,8410+9]..[282,8410+10])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[282,8410+13]..[282,8410+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (typing/ident.ml[283,8430+8]..[283,8430+47])
                      Pexp_construct "::" (typing/ident.ml[283,8430+26]..[283,8430+28])
                      Some
                        expression (typing/ident.ml[283,8430+8]..[283,8430+47]) ghost
                          Pexp_tuple
                          [
                            expression (typing/ident.ml[283,8430+8]..[283,8430+25])
                              Pexp_tuple
                              [
                                expression (typing/ident.ml[283,8430+9]..[283,8430+16])
                                  Pexp_field
                                  expression (typing/ident.ml[283,8430+9]..[283,8430+10])
                                    Pexp_ident "k" (typing/ident.ml[283,8430+9]..[283,8430+10])
                                  "ident" (typing/ident.ml[283,8430+11]..[283,8430+16])
                                expression (typing/ident.ml[283,8430+18]..[283,8430+24])
                                  Pexp_field
                                  expression (typing/ident.ml[283,8430+18]..[283,8430+19])
                                    Pexp_ident "k" (typing/ident.ml[283,8430+18]..[283,8430+19])
                                  "data" (typing/ident.ml[283,8430+20]..[283,8430+24])
                              ]
                            expression (typing/ident.ml[283,8430+29]..[283,8430+47])
                              Pexp_apply
                              expression (typing/ident.ml[283,8430+29]..[283,8430+36])
                                Pexp_ident "get_all" (typing/ident.ml[283,8430+29]..[283,8430+36])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[283,8430+37]..[283,8430+47])
                                    Pexp_field
                                    expression (typing/ident.ml[283,8430+37]..[283,8430+38])
                                      Pexp_ident "k" (typing/ident.ml[283,8430+37]..[283,8430+38])
                                    "previous" (typing/ident.ml[283,8430+39]..[283,8430+47])
                              ]
                          ]
                    Some
                      expression (typing/ident.ml[285,8489+8]..[285,8489+43])
                        Pexp_apply
                        expression (typing/ident.ml[285,8489+8]..[285,8489+16])
                          Pexp_ident "find_all" (typing/ident.ml[285,8489+8]..[285,8489+16])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[285,8489+17]..[285,8489+18])
                              Pexp_ident "n" (typing/ident.ml[285,8489+17]..[285,8489+18])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[285,8489+19]..[285,8489+43])
                              Pexp_ifthenelse
                              expression (typing/ident.ml[285,8489+23]..[285,8489+28])
                                Pexp_apply
                                expression (typing/ident.ml[285,8489+25]..[285,8489+26])
                                  Pexp_ident "<" (typing/ident.ml[285,8489+25]..[285,8489+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[285,8489+23]..[285,8489+24])
                                      Pexp_ident "c" (typing/ident.ml[285,8489+23]..[285,8489+24])
                                  <arg>
                                  Nolabel
                                    expression (typing/ident.ml[285,8489+27]..[285,8489+28])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (typing/ident.ml[285,8489+34]..[285,8489+35])
                                Pexp_ident "l" (typing/ident.ml[285,8489+34]..[285,8489+35])
                              Some
                                expression (typing/ident.ml[285,8489+41]..[285,8489+42])
                                  Pexp_ident "r" (typing/ident.ml[285,8489+41]..[285,8489+42])
                        ]
            ]
    ]
  structure_item (typing/ident.ml[287,8534+0]..[294,8708+42])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[287,8534+8]..[287,8534+16])
          Ppat_var "fold_aux" (typing/ident.ml[287,8534+8]..[287,8534+16])
        expression (typing/ident.ml[287,8534+17]..[294,8708+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[287,8534+17]..[287,8534+18])
            Ppat_var "f" (typing/ident.ml[287,8534+17]..[287,8534+18])
          expression (typing/ident.ml[287,8534+19]..[294,8708+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[287,8534+19]..[287,8534+24])
              Ppat_var "stack" (typing/ident.ml[287,8534+19]..[287,8534+24])
            expression (typing/ident.ml[287,8534+25]..[294,8708+42]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[287,8534+25]..[287,8534+29])
                Ppat_var "accu" (typing/ident.ml[287,8534+25]..[287,8534+29])
              expression (typing/ident.ml[287,8534+32]..[294,8708+42])
                Pexp_function
                [
                  <case>
                    pattern (typing/ident.ml[288,8575+4]..[288,8575+9])
                      Ppat_construct "Empty" (typing/ident.ml[288,8575+4]..[288,8575+9])
                      None
                    expression (typing/ident.ml[289,8588+6]..[292,8674+9])
                      Pexp_match
                      expression (typing/ident.ml[289,8588+18]..[289,8588+23])
                        Pexp_ident "stack" (typing/ident.ml[289,8588+18]..[289,8588+23])
                      [
                        <case>
                          pattern (typing/ident.ml[290,8617+8]..[290,8617+10])
                            Ppat_construct "[]" (typing/ident.ml[290,8617+8]..[290,8617+10])
                            None
                          expression (typing/ident.ml[290,8617+14]..[290,8617+18])
                            Pexp_ident "accu" (typing/ident.ml[290,8617+14]..[290,8617+18])
                        <case>
                          pattern (typing/ident.ml[291,8636+8]..[291,8636+14])
                            Ppat_construct "::" (typing/ident.ml[291,8636+10]..[291,8636+12])
                            Some
                              []
                              pattern (typing/ident.ml[291,8636+8]..[291,8636+14]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/ident.ml[291,8636+8]..[291,8636+9])
                                    Ppat_var "a" (typing/ident.ml[291,8636+8]..[291,8636+9])
                                  pattern (typing/ident.ml[291,8636+13]..[291,8636+14])
                                    Ppat_var "l" (typing/ident.ml[291,8636+13]..[291,8636+14])
                                ]
                          expression (typing/ident.ml[291,8636+18]..[291,8636+37])
                            Pexp_apply
                            expression (typing/ident.ml[291,8636+18]..[291,8636+26])
                              Pexp_ident "fold_aux" (typing/ident.ml[291,8636+18]..[291,8636+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[291,8636+27]..[291,8636+28])
                                  Pexp_ident "f" (typing/ident.ml[291,8636+27]..[291,8636+28])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[291,8636+29]..[291,8636+30])
                                  Pexp_ident "l" (typing/ident.ml[291,8636+29]..[291,8636+30])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[291,8636+31]..[291,8636+35])
                                  Pexp_ident "accu" (typing/ident.ml[291,8636+31]..[291,8636+35])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[291,8636+36]..[291,8636+37])
                                  Pexp_ident "a" (typing/ident.ml[291,8636+36]..[291,8636+37])
                            ]
                      ]
                  <case>
                    pattern (typing/ident.ml[293,8684+4]..[293,8684+20])
                      Ppat_construct "Node" (typing/ident.ml[293,8684+4]..[293,8684+8])
                      Some
                        []
                        pattern (typing/ident.ml[293,8684+8]..[293,8684+20])
                          Ppat_tuple
                          [
                            pattern (typing/ident.ml[293,8684+9]..[293,8684+10])
                              Ppat_var "l" (typing/ident.ml[293,8684+9]..[293,8684+10])
                            pattern (typing/ident.ml[293,8684+12]..[293,8684+13])
                              Ppat_var "k" (typing/ident.ml[293,8684+12]..[293,8684+13])
                            pattern (typing/ident.ml[293,8684+15]..[293,8684+16])
                              Ppat_var "r" (typing/ident.ml[293,8684+15]..[293,8684+16])
                            pattern (typing/ident.ml[293,8684+18]..[293,8684+19])
                              Ppat_any
                          ]
                    expression (typing/ident.ml[294,8708+6]..[294,8708+42])
                      Pexp_apply
                      expression (typing/ident.ml[294,8708+6]..[294,8708+14])
                        Pexp_ident "fold_aux" (typing/ident.ml[294,8708+6]..[294,8708+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[294,8708+15]..[294,8708+16])
                            Pexp_ident "f" (typing/ident.ml[294,8708+15]..[294,8708+16])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[294,8708+17]..[294,8708+29])
                            Pexp_construct "::" (typing/ident.ml[294,8708+20]..[294,8708+22])
                            Some
                              expression (typing/ident.ml[294,8708+18]..[294,8708+28]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/ident.ml[294,8708+18]..[294,8708+19])
                                    Pexp_ident "l" (typing/ident.ml[294,8708+18]..[294,8708+19])
                                  expression (typing/ident.ml[294,8708+23]..[294,8708+28])
                                    Pexp_ident "stack" (typing/ident.ml[294,8708+23]..[294,8708+28])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[294,8708+30]..[294,8708+40])
                            Pexp_apply
                            expression (typing/ident.ml[294,8708+31]..[294,8708+32])
                              Pexp_ident "f" (typing/ident.ml[294,8708+31]..[294,8708+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[294,8708+33]..[294,8708+34])
                                  Pexp_ident "k" (typing/ident.ml[294,8708+33]..[294,8708+34])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[294,8708+35]..[294,8708+39])
                                  Pexp_ident "accu" (typing/ident.ml[294,8708+35]..[294,8708+39])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[294,8708+41]..[294,8708+42])
                            Pexp_ident "r" (typing/ident.ml[294,8708+41]..[294,8708+42])
                      ]
                ]
    ]
  structure_item (typing/ident.ml[296,8752+0]..[296,8752+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[296,8752+4]..[296,8752+13])
          Ppat_var "fold_name" (typing/ident.ml[296,8752+4]..[296,8752+13])
        expression (typing/ident.ml[296,8752+14]..[296,8752+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[296,8752+14]..[296,8752+15])
            Ppat_var "f" (typing/ident.ml[296,8752+14]..[296,8752+15])
          expression (typing/ident.ml[296,8752+16]..[296,8752+75]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[296,8752+16]..[296,8752+19])
              Ppat_var "tbl" (typing/ident.ml[296,8752+16]..[296,8752+19])
            expression (typing/ident.ml[296,8752+20]..[296,8752+75]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[296,8752+20]..[296,8752+24])
                Ppat_var "accu" (typing/ident.ml[296,8752+20]..[296,8752+24])
              expression (typing/ident.ml[296,8752+27]..[296,8752+75])
                Pexp_apply
                expression (typing/ident.ml[296,8752+27]..[296,8752+35])
                  Pexp_ident "fold_aux" (typing/ident.ml[296,8752+27]..[296,8752+35])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[296,8752+36]..[296,8752+63])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/ident.ml[296,8752+41]..[296,8752+42])
                        Ppat_var "k" (typing/ident.ml[296,8752+41]..[296,8752+42])
                      expression (typing/ident.ml[296,8752+46]..[296,8752+62])
                        Pexp_apply
                        expression (typing/ident.ml[296,8752+46]..[296,8752+47])
                          Pexp_ident "f" (typing/ident.ml[296,8752+46]..[296,8752+47])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[296,8752+48]..[296,8752+55])
                              Pexp_field
                              expression (typing/ident.ml[296,8752+48]..[296,8752+49])
                                Pexp_ident "k" (typing/ident.ml[296,8752+48]..[296,8752+49])
                              "ident" (typing/ident.ml[296,8752+50]..[296,8752+55])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[296,8752+56]..[296,8752+62])
                              Pexp_field
                              expression (typing/ident.ml[296,8752+56]..[296,8752+57])
                                Pexp_ident "k" (typing/ident.ml[296,8752+56]..[296,8752+57])
                              "data" (typing/ident.ml[296,8752+58]..[296,8752+62])
                        ]
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[296,8752+64]..[296,8752+66])
                      Pexp_construct "[]" (typing/ident.ml[296,8752+64]..[296,8752+66])
                      None
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[296,8752+67]..[296,8752+71])
                      Pexp_ident "accu" (typing/ident.ml[296,8752+67]..[296,8752+71])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[296,8752+72]..[296,8752+75])
                      Pexp_ident "tbl" (typing/ident.ml[296,8752+72]..[296,8752+75])
                ]
    ]
  structure_item (typing/ident.ml[298,8829+0]..[301,8890+60])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[298,8829+8]..[298,8829+17])
          Ppat_var "fold_data" (typing/ident.ml[298,8829+8]..[298,8829+17])
        expression (typing/ident.ml[298,8829+18]..[301,8890+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[298,8829+18]..[298,8829+19])
            Ppat_var "f" (typing/ident.ml[298,8829+18]..[298,8829+19])
          expression (typing/ident.ml[298,8829+20]..[301,8890+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[298,8829+20]..[298,8829+21])
              Ppat_var "d" (typing/ident.ml[298,8829+20]..[298,8829+21])
            expression (typing/ident.ml[298,8829+22]..[301,8890+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[298,8829+22]..[298,8829+26])
                Ppat_var "accu" (typing/ident.ml[298,8829+22]..[298,8829+26])
              expression (typing/ident.ml[299,8858+2]..[301,8890+60])
                Pexp_match
                expression (typing/ident.ml[299,8858+8]..[299,8858+9])
                  Pexp_ident "d" (typing/ident.ml[299,8858+8]..[299,8858+9])
                [
                  <case>
                    pattern (typing/ident.ml[300,8873+4]..[300,8873+8])
                      Ppat_construct "None" (typing/ident.ml[300,8873+4]..[300,8873+8])
                      None
                    expression (typing/ident.ml[300,8873+12]..[300,8873+16])
                      Pexp_ident "accu" (typing/ident.ml[300,8873+12]..[300,8873+16])
                  <case>
                    pattern (typing/ident.ml[301,8890+4]..[301,8890+10])
                      Ppat_construct "Some" (typing/ident.ml[301,8890+4]..[301,8890+8])
                      Some
                        []
                        pattern (typing/ident.ml[301,8890+9]..[301,8890+10])
                          Ppat_var "k" (typing/ident.ml[301,8890+9]..[301,8890+10])
                    expression (typing/ident.ml[301,8890+14]..[301,8890+60])
                      Pexp_apply
                      expression (typing/ident.ml[301,8890+14]..[301,8890+15])
                        Pexp_ident "f" (typing/ident.ml[301,8890+14]..[301,8890+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[301,8890+16]..[301,8890+23])
                            Pexp_field
                            expression (typing/ident.ml[301,8890+16]..[301,8890+17])
                              Pexp_ident "k" (typing/ident.ml[301,8890+16]..[301,8890+17])
                            "ident" (typing/ident.ml[301,8890+18]..[301,8890+23])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[301,8890+24]..[301,8890+30])
                            Pexp_field
                            expression (typing/ident.ml[301,8890+24]..[301,8890+25])
                              Pexp_ident "k" (typing/ident.ml[301,8890+24]..[301,8890+25])
                            "data" (typing/ident.ml[301,8890+26]..[301,8890+30])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[301,8890+31]..[301,8890+60])
                            Pexp_apply
                            expression (typing/ident.ml[301,8890+32]..[301,8890+41])
                              Pexp_ident "fold_data" (typing/ident.ml[301,8890+32]..[301,8890+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[301,8890+42]..[301,8890+43])
                                  Pexp_ident "f" (typing/ident.ml[301,8890+42]..[301,8890+43])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[301,8890+44]..[301,8890+54])
                                  Pexp_field
                                  expression (typing/ident.ml[301,8890+44]..[301,8890+45])
                                    Pexp_ident "k" (typing/ident.ml[301,8890+44]..[301,8890+45])
                                  "previous" (typing/ident.ml[301,8890+46]..[301,8890+54])
                              <arg>
                              Nolabel
                                expression (typing/ident.ml[301,8890+55]..[301,8890+59])
                                  Pexp_ident "accu" (typing/ident.ml[301,8890+55]..[301,8890+59])
                            ]
                      ]
                ]
    ]
  structure_item (typing/ident.ml[303,8952+0]..[304,8978+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[303,8952+4]..[303,8952+12])
          Ppat_var "fold_all" (typing/ident.ml[303,8952+4]..[303,8952+12])
        expression (typing/ident.ml[303,8952+13]..[304,8978+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[303,8952+13]..[303,8952+14])
            Ppat_var "f" (typing/ident.ml[303,8952+13]..[303,8952+14])
          expression (typing/ident.ml[303,8952+15]..[304,8978+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[303,8952+15]..[303,8952+18])
              Ppat_var "tbl" (typing/ident.ml[303,8952+15]..[303,8952+18])
            expression (typing/ident.ml[303,8952+19]..[304,8978+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/ident.ml[303,8952+19]..[303,8952+23])
                Ppat_var "accu" (typing/ident.ml[303,8952+19]..[303,8952+23])
              expression (typing/ident.ml[304,8978+2]..[304,8978+54])
                Pexp_apply
                expression (typing/ident.ml[304,8978+2]..[304,8978+10])
                  Pexp_ident "fold_aux" (typing/ident.ml[304,8978+2]..[304,8978+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[304,8978+11]..[304,8978+42])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/ident.ml[304,8978+16]..[304,8978+17])
                        Ppat_var "k" (typing/ident.ml[304,8978+16]..[304,8978+17])
                      expression (typing/ident.ml[304,8978+21]..[304,8978+41])
                        Pexp_apply
                        expression (typing/ident.ml[304,8978+21]..[304,8978+30])
                          Pexp_ident "fold_data" (typing/ident.ml[304,8978+21]..[304,8978+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[304,8978+31]..[304,8978+32])
                              Pexp_ident "f" (typing/ident.ml[304,8978+31]..[304,8978+32])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[304,8978+33]..[304,8978+41])
                              Pexp_construct "Some" (typing/ident.ml[304,8978+34]..[304,8978+38])
                              Some
                                expression (typing/ident.ml[304,8978+39]..[304,8978+40])
                                  Pexp_ident "k" (typing/ident.ml[304,8978+39]..[304,8978+40])
                        ]
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[304,8978+43]..[304,8978+45])
                      Pexp_construct "[]" (typing/ident.ml[304,8978+43]..[304,8978+45])
                      None
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[304,8978+46]..[304,8978+50])
                      Pexp_ident "accu" (typing/ident.ml[304,8978+46]..[304,8978+50])
                  <arg>
                  Nolabel
                    expression (typing/ident.ml[304,8978+51]..[304,8978+54])
                      Pexp_ident "tbl" (typing/ident.ml[304,8978+51]..[304,8978+54])
                ]
    ]
  structure_item (typing/ident.ml[308,9099+0]..[311,9165+42])
    Pstr_value Rec
    [
      <def>
        pattern (typing/ident.ml[308,9099+8]..[308,9099+12])
          Ppat_var "iter" (typing/ident.ml[308,9099+8]..[308,9099+12])
        expression (typing/ident.ml[308,9099+13]..[311,9165+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[308,9099+13]..[308,9099+14])
            Ppat_var "f" (typing/ident.ml[308,9099+13]..[308,9099+14])
          expression (typing/ident.ml[308,9099+17]..[311,9165+42])
            Pexp_function
            [
              <case>
                pattern (typing/ident.ml[309,9125+4]..[309,9125+9])
                  Ppat_construct "Empty" (typing/ident.ml[309,9125+4]..[309,9125+9])
                  None
                expression (typing/ident.ml[309,9125+13]..[309,9125+15])
                  Pexp_construct "()" (typing/ident.ml[309,9125+13]..[309,9125+15])
                  None
              <case>
                pattern (typing/ident.ml[310,9141+4]..[310,9141+20])
                  Ppat_construct "Node" (typing/ident.ml[310,9141+4]..[310,9141+8])
                  Some
                    []
                    pattern (typing/ident.ml[310,9141+8]..[310,9141+20])
                      Ppat_tuple
                      [
                        pattern (typing/ident.ml[310,9141+9]..[310,9141+10])
                          Ppat_var "l" (typing/ident.ml[310,9141+9]..[310,9141+10])
                        pattern (typing/ident.ml[310,9141+12]..[310,9141+13])
                          Ppat_var "k" (typing/ident.ml[310,9141+12]..[310,9141+13])
                        pattern (typing/ident.ml[310,9141+15]..[310,9141+16])
                          Ppat_var "r" (typing/ident.ml[310,9141+15]..[310,9141+16])
                        pattern (typing/ident.ml[310,9141+18]..[310,9141+19])
                          Ppat_any
                      ]
                expression (typing/ident.ml[311,9165+6]..[311,9165+42])
                  Pexp_sequence
                  expression (typing/ident.ml[311,9165+6]..[311,9165+14])
                    Pexp_apply
                    expression (typing/ident.ml[311,9165+6]..[311,9165+10])
                      Pexp_ident "iter" (typing/ident.ml[311,9165+6]..[311,9165+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[311,9165+11]..[311,9165+12])
                          Pexp_ident "f" (typing/ident.ml[311,9165+11]..[311,9165+12])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[311,9165+13]..[311,9165+14])
                          Pexp_ident "l" (typing/ident.ml[311,9165+13]..[311,9165+14])
                    ]
                  expression (typing/ident.ml[311,9165+16]..[311,9165+42])
                    Pexp_sequence
                    expression (typing/ident.ml[311,9165+16]..[311,9165+32])
                      Pexp_apply
                      expression (typing/ident.ml[311,9165+16]..[311,9165+17])
                        Pexp_ident "f" (typing/ident.ml[311,9165+16]..[311,9165+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[311,9165+18]..[311,9165+25])
                            Pexp_field
                            expression (typing/ident.ml[311,9165+18]..[311,9165+19])
                              Pexp_ident "k" (typing/ident.ml[311,9165+18]..[311,9165+19])
                            "ident" (typing/ident.ml[311,9165+20]..[311,9165+25])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[311,9165+26]..[311,9165+32])
                            Pexp_field
                            expression (typing/ident.ml[311,9165+26]..[311,9165+27])
                              Pexp_ident "k" (typing/ident.ml[311,9165+26]..[311,9165+27])
                            "data" (typing/ident.ml[311,9165+28]..[311,9165+32])
                      ]
                    expression (typing/ident.ml[311,9165+34]..[311,9165+42])
                      Pexp_apply
                      expression (typing/ident.ml[311,9165+34]..[311,9165+38])
                        Pexp_ident "iter" (typing/ident.ml[311,9165+34]..[311,9165+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[311,9165+39]..[311,9165+40])
                            Pexp_ident "f" (typing/ident.ml[311,9165+39]..[311,9165+40])
                        <arg>
                        Nolabel
                          expression (typing/ident.ml[311,9165+41]..[311,9165+42])
                            Pexp_ident "r" (typing/ident.ml[311,9165+41]..[311,9165+42])
                      ]
            ]
    ]
  structure_item (typing/ident.ml[316,9292+0]..[316,9292+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[316,9292+4]..[316,9292+12])
          Ppat_var "key_name" (typing/ident.ml[316,9292+4]..[316,9292+12])
        expression (typing/ident.ml[316,9292+15]..[316,9292+17])
          Pexp_constant PConst_string("",(typing/ident.ml[316,9292+16]..[316,9292+16]),None)
    ]
  structure_item (typing/ident.ml[318,9311+0]..[327,9500+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[318,9311+4]..[318,9311+22])
          Ppat_var "make_key_generator" (typing/ident.ml[318,9311+4]..[318,9311+22])
        expression (typing/ident.ml[318,9311+23]..[327,9500+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[318,9311+23]..[318,9311+25])
            Ppat_construct "()" (typing/ident.ml[318,9311+23]..[318,9311+25])
            None
          expression (typing/ident.ml[319,9339+2]..[327,9500+73])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/ident.ml[319,9339+6]..[319,9339+7])
                  Ppat_var "c" (typing/ident.ml[319,9339+6]..[319,9339+7])
                expression (typing/ident.ml[319,9339+10]..[319,9339+15])
                  Pexp_apply
                  expression (typing/ident.ml[319,9339+10]..[319,9339+13])
                    Pexp_ident "ref" (typing/ident.ml[319,9339+10]..[319,9339+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[319,9339+14]..[319,9339+15])
                        Pexp_constant PConst_int (1,None)
                  ]
            ]
            expression (typing/ident.ml[320,9358+2]..[327,9500+73])
              Pexp_function
              [
                <case>
                  pattern (typing/ident.ml[321,9369+4]..[322,9381+12])
                    Ppat_or
                    pattern (typing/ident.ml[321,9369+4]..[321,9369+11])
                      Ppat_construct "Local" (typing/ident.ml[321,9369+4]..[321,9369+9])
                      Some
                        []
                        pattern (typing/ident.ml[321,9369+10]..[321,9369+11])
                          Ppat_any
                    pattern (typing/ident.ml[322,9381+4]..[322,9381+12])
                      Ppat_construct "Scoped" (typing/ident.ml[322,9381+4]..[322,9381+10])
                      Some
                        []
                        pattern (typing/ident.ml[322,9381+11]..[322,9381+12])
                          Ppat_any
                  expression (typing/ident.ml[323,9397+6]..[325,9436+46])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/ident.ml[323,9397+10]..[323,9397+15])
                          Ppat_var "stamp" (typing/ident.ml[323,9397+10]..[323,9397+15])
                        expression (typing/ident.ml[323,9397+18]..[323,9397+20])
                          Pexp_apply
                          expression (typing/ident.ml[323,9397+18]..[323,9397+19])
                            Pexp_ident "!" (typing/ident.ml[323,9397+18]..[323,9397+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[323,9397+19]..[323,9397+20])
                                Pexp_ident "c" (typing/ident.ml[323,9397+19]..[323,9397+20])
                          ]
                    ]
                    expression (typing/ident.ml[324,9421+6]..[325,9436+46])
                      Pexp_sequence
                      expression (typing/ident.ml[324,9421+6]..[324,9421+12])
                        Pexp_apply
                        expression (typing/ident.ml[324,9421+6]..[324,9421+10])
                          Pexp_ident "decr" (typing/ident.ml[324,9421+6]..[324,9421+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[324,9421+11]..[324,9421+12])
                              Pexp_ident "c" (typing/ident.ml[324,9421+11]..[324,9421+12])
                        ]
                      expression (typing/ident.ml[325,9436+6]..[325,9436+46])
                        Pexp_construct "Local" (typing/ident.ml[325,9436+6]..[325,9436+11])
                        Some
                          expression (typing/ident.ml[325,9436+12]..[325,9436+46])
                            Pexp_record
                            [
                              "name" (typing/ident.ml[325,9436+14]..[325,9436+18])
                                expression (typing/ident.ml[325,9436+21]..[325,9436+29])
                                  Pexp_ident "key_name" (typing/ident.ml[325,9436+21]..[325,9436+29])
                              "stamp" (typing/ident.ml[325,9436+31]..[325,9436+36])
                                expression (typing/ident.ml[325,9436+39]..[325,9436+44])
                                  Pexp_ident "stamp" (typing/ident.ml[325,9436+39]..[325,9436+44])
                            ]
                            None
                <case>
                  pattern (typing/ident.ml[326,9483+4]..[326,9483+13])
                    Ppat_var "global_id" (typing/ident.ml[326,9483+4]..[326,9483+13])
                  expression (typing/ident.ml[327,9500+6]..[327,9500+73])
                    Pexp_apply
                    expression (typing/ident.ml[327,9500+6]..[327,9500+23])
                      Pexp_ident "Misc.fatal_errorf" (typing/ident.ml[327,9500+6]..[327,9500+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[327,9500+24]..[327,9500+56])
                          Pexp_constant PConst_string("Ident.make_key_generator () %s",(typing/ident.ml[327,9500+25]..[327,9500+55]),None)
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[327,9500+57]..[327,9500+73])
                          Pexp_apply
                          expression (typing/ident.ml[327,9500+58]..[327,9500+62])
                            Pexp_ident "name" (typing/ident.ml[327,9500+58]..[327,9500+62])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[327,9500+63]..[327,9500+72])
                                Pexp_ident "global_id" (typing/ident.ml[327,9500+63]..[327,9500+72])
                          ]
                    ]
              ]
    ]
  structure_item (typing/ident.ml[329,9575+0]..[346,10014+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[329,9575+4]..[329,9575+11])
          Ppat_var "compare" (typing/ident.ml[329,9575+4]..[329,9575+11])
        expression (typing/ident.ml[329,9575+12]..[346,10014+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[329,9575+12]..[329,9575+13])
            Ppat_var "x" (typing/ident.ml[329,9575+12]..[329,9575+13])
          expression (typing/ident.ml[329,9575+14]..[346,10014+71]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[329,9575+14]..[329,9575+15])
              Ppat_var "y" (typing/ident.ml[329,9575+14]..[329,9575+15])
            expression (typing/ident.ml[330,9593+2]..[346,10014+71])
              Pexp_match
              expression (typing/ident.ml[330,9593+8]..[330,9593+12])
                Pexp_tuple
                [
                  expression (typing/ident.ml[330,9593+8]..[330,9593+9])
                    Pexp_ident "x" (typing/ident.ml[330,9593+8]..[330,9593+9])
                  expression (typing/ident.ml[330,9593+11]..[330,9593+12])
                    Pexp_ident "y" (typing/ident.ml[330,9593+11]..[330,9593+12])
                ]
              [
                <case>
                  pattern (typing/ident.ml[331,9611+4]..[331,9611+20])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[331,9611+4]..[331,9611+11])
                        Ppat_construct "Local" (typing/ident.ml[331,9611+4]..[331,9611+9])
                        Some
                          []
                          pattern (typing/ident.ml[331,9611+10]..[331,9611+11])
                            Ppat_var "x" (typing/ident.ml[331,9611+10]..[331,9611+11])
                      pattern (typing/ident.ml[331,9611+13]..[331,9611+20])
                        Ppat_construct "Local" (typing/ident.ml[331,9611+13]..[331,9611+18])
                        Some
                          []
                          pattern (typing/ident.ml[331,9611+19]..[331,9611+20])
                            Ppat_var "y" (typing/ident.ml[331,9611+19]..[331,9611+20])
                    ]
                  expression (typing/ident.ml[332,9635+6]..[334,9693+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/ident.ml[332,9635+10]..[332,9635+11])
                          Ppat_var "c" (typing/ident.ml[332,9635+10]..[332,9635+11])
                        expression (typing/ident.ml[332,9635+14]..[332,9635+31])
                          Pexp_apply
                          expression (typing/ident.ml[332,9635+22]..[332,9635+23])
                            Pexp_ident "-" (typing/ident.ml[332,9635+22]..[332,9635+23])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[332,9635+14]..[332,9635+21])
                                Pexp_field
                                expression (typing/ident.ml[332,9635+14]..[332,9635+15])
                                  Pexp_ident "x" (typing/ident.ml[332,9635+14]..[332,9635+15])
                                "stamp" (typing/ident.ml[332,9635+16]..[332,9635+21])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[332,9635+24]..[332,9635+31])
                                Pexp_field
                                expression (typing/ident.ml[332,9635+24]..[332,9635+25])
                                  Pexp_ident "y" (typing/ident.ml[332,9635+24]..[332,9635+25])
                                "stamp" (typing/ident.ml[332,9635+26]..[332,9635+31])
                          ]
                    ]
                    expression (typing/ident.ml[333,9670+6]..[334,9693+32])
                      Pexp_ifthenelse
                      expression (typing/ident.ml[333,9670+9]..[333,9670+15])
                        Pexp_apply
                        expression (typing/ident.ml[333,9670+11]..[333,9670+13])
                          Pexp_ident "<>" (typing/ident.ml[333,9670+11]..[333,9670+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[333,9670+9]..[333,9670+10])
                              Pexp_ident "c" (typing/ident.ml[333,9670+9]..[333,9670+10])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[333,9670+14]..[333,9670+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (typing/ident.ml[333,9670+21]..[333,9670+22])
                        Pexp_ident "c" (typing/ident.ml[333,9670+21]..[333,9670+22])
                      Some
                        expression (typing/ident.ml[334,9693+11]..[334,9693+32])
                          Pexp_apply
                          expression (typing/ident.ml[334,9693+11]..[334,9693+18])
                            Pexp_ident "compare" (typing/ident.ml[334,9693+11]..[334,9693+18])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[334,9693+19]..[334,9693+25])
                                Pexp_field
                                expression (typing/ident.ml[334,9693+19]..[334,9693+20])
                                  Pexp_ident "x" (typing/ident.ml[334,9693+19]..[334,9693+20])
                                "name" (typing/ident.ml[334,9693+21]..[334,9693+25])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[334,9693+26]..[334,9693+32])
                                Pexp_field
                                expression (typing/ident.ml[334,9693+26]..[334,9693+27])
                                  Pexp_ident "y" (typing/ident.ml[334,9693+26]..[334,9693+27])
                                "name" (typing/ident.ml[334,9693+28]..[334,9693+32])
                          ]
                <case>
                  pattern (typing/ident.ml[335,9726+4]..[335,9726+14])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[335,9726+4]..[335,9726+11])
                        Ppat_construct "Local" (typing/ident.ml[335,9726+4]..[335,9726+9])
                        Some
                          []
                          pattern (typing/ident.ml[335,9726+10]..[335,9726+11])
                            Ppat_any
                      pattern (typing/ident.ml[335,9726+13]..[335,9726+14])
                        Ppat_any
                    ]
                  expression (typing/ident.ml[335,9726+18]..[335,9726+19])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (typing/ident.ml[336,9746+4]..[336,9746+14])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[336,9746+4]..[336,9746+5])
                        Ppat_any
                      pattern (typing/ident.ml[336,9746+7]..[336,9746+14])
                        Ppat_construct "Local" (typing/ident.ml[336,9746+7]..[336,9746+12])
                        Some
                          []
                          pattern (typing/ident.ml[336,9746+13]..[336,9746+14])
                            Ppat_any
                    ]
                  expression (typing/ident.ml[336,9746+18]..[336,9746+22])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (typing/ident.ml[337,9769+4]..[337,9769+22])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[337,9769+4]..[337,9769+12])
                        Ppat_construct "Scoped" (typing/ident.ml[337,9769+4]..[337,9769+10])
                        Some
                          []
                          pattern (typing/ident.ml[337,9769+11]..[337,9769+12])
                            Ppat_var "x" (typing/ident.ml[337,9769+11]..[337,9769+12])
                      pattern (typing/ident.ml[337,9769+14]..[337,9769+22])
                        Ppat_construct "Scoped" (typing/ident.ml[337,9769+14]..[337,9769+20])
                        Some
                          []
                          pattern (typing/ident.ml[337,9769+21]..[337,9769+22])
                            Ppat_var "y" (typing/ident.ml[337,9769+21]..[337,9769+22])
                    ]
                  expression (typing/ident.ml[338,9795+6]..[340,9853+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/ident.ml[338,9795+10]..[338,9795+11])
                          Ppat_var "c" (typing/ident.ml[338,9795+10]..[338,9795+11])
                        expression (typing/ident.ml[338,9795+14]..[338,9795+31])
                          Pexp_apply
                          expression (typing/ident.ml[338,9795+22]..[338,9795+23])
                            Pexp_ident "-" (typing/ident.ml[338,9795+22]..[338,9795+23])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[338,9795+14]..[338,9795+21])
                                Pexp_field
                                expression (typing/ident.ml[338,9795+14]..[338,9795+15])
                                  Pexp_ident "x" (typing/ident.ml[338,9795+14]..[338,9795+15])
                                "stamp" (typing/ident.ml[338,9795+16]..[338,9795+21])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[338,9795+24]..[338,9795+31])
                                Pexp_field
                                expression (typing/ident.ml[338,9795+24]..[338,9795+25])
                                  Pexp_ident "y" (typing/ident.ml[338,9795+24]..[338,9795+25])
                                "stamp" (typing/ident.ml[338,9795+26]..[338,9795+31])
                          ]
                    ]
                    expression (typing/ident.ml[339,9830+6]..[340,9853+32])
                      Pexp_ifthenelse
                      expression (typing/ident.ml[339,9830+9]..[339,9830+15])
                        Pexp_apply
                        expression (typing/ident.ml[339,9830+11]..[339,9830+13])
                          Pexp_ident "<>" (typing/ident.ml[339,9830+11]..[339,9830+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[339,9830+9]..[339,9830+10])
                              Pexp_ident "c" (typing/ident.ml[339,9830+9]..[339,9830+10])
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[339,9830+14]..[339,9830+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (typing/ident.ml[339,9830+21]..[339,9830+22])
                        Pexp_ident "c" (typing/ident.ml[339,9830+21]..[339,9830+22])
                      Some
                        expression (typing/ident.ml[340,9853+11]..[340,9853+32])
                          Pexp_apply
                          expression (typing/ident.ml[340,9853+11]..[340,9853+18])
                            Pexp_ident "compare" (typing/ident.ml[340,9853+11]..[340,9853+18])
                          [
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[340,9853+19]..[340,9853+25])
                                Pexp_field
                                expression (typing/ident.ml[340,9853+19]..[340,9853+20])
                                  Pexp_ident "x" (typing/ident.ml[340,9853+19]..[340,9853+20])
                                "name" (typing/ident.ml[340,9853+21]..[340,9853+25])
                            <arg>
                            Nolabel
                              expression (typing/ident.ml[340,9853+26]..[340,9853+32])
                                Pexp_field
                                expression (typing/ident.ml[340,9853+26]..[340,9853+27])
                                  Pexp_ident "y" (typing/ident.ml[340,9853+26]..[340,9853+27])
                                "name" (typing/ident.ml[340,9853+28]..[340,9853+32])
                          ]
                <case>
                  pattern (typing/ident.ml[341,9886+4]..[341,9886+15])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[341,9886+4]..[341,9886+12])
                        Ppat_construct "Scoped" (typing/ident.ml[341,9886+4]..[341,9886+10])
                        Some
                          []
                          pattern (typing/ident.ml[341,9886+11]..[341,9886+12])
                            Ppat_any
                      pattern (typing/ident.ml[341,9886+14]..[341,9886+15])
                        Ppat_any
                    ]
                  expression (typing/ident.ml[341,9886+19]..[341,9886+20])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (typing/ident.ml[342,9907+4]..[342,9907+15])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[342,9907+4]..[342,9907+5])
                        Ppat_any
                      pattern (typing/ident.ml[342,9907+7]..[342,9907+15])
                        Ppat_construct "Scoped" (typing/ident.ml[342,9907+7]..[342,9907+13])
                        Some
                          []
                          pattern (typing/ident.ml[342,9907+14]..[342,9907+15])
                            Ppat_any
                    ]
                  expression (typing/ident.ml[342,9907+19]..[342,9907+23])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (typing/ident.ml[343,9931+4]..[343,9931+22])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[343,9931+4]..[343,9931+12])
                        Ppat_construct "Global" (typing/ident.ml[343,9931+4]..[343,9931+10])
                        Some
                          []
                          pattern (typing/ident.ml[343,9931+11]..[343,9931+12])
                            Ppat_var "x" (typing/ident.ml[343,9931+11]..[343,9931+12])
                      pattern (typing/ident.ml[343,9931+14]..[343,9931+22])
                        Ppat_construct "Global" (typing/ident.ml[343,9931+14]..[343,9931+20])
                        Some
                          []
                          pattern (typing/ident.ml[343,9931+21]..[343,9931+22])
                            Ppat_var "y" (typing/ident.ml[343,9931+21]..[343,9931+22])
                    ]
                  expression (typing/ident.ml[343,9931+26]..[343,9931+37])
                    Pexp_apply
                    expression (typing/ident.ml[343,9931+26]..[343,9931+33])
                      Pexp_ident "compare" (typing/ident.ml[343,9931+26]..[343,9931+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[343,9931+34]..[343,9931+35])
                          Pexp_ident "x" (typing/ident.ml[343,9931+34]..[343,9931+35])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[343,9931+36]..[343,9931+37])
                          Pexp_ident "y" (typing/ident.ml[343,9931+36]..[343,9931+37])
                    ]
                <case>
                  pattern (typing/ident.ml[344,9969+4]..[344,9969+15])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[344,9969+4]..[344,9969+12])
                        Ppat_construct "Global" (typing/ident.ml[344,9969+4]..[344,9969+10])
                        Some
                          []
                          pattern (typing/ident.ml[344,9969+11]..[344,9969+12])
                            Ppat_any
                      pattern (typing/ident.ml[344,9969+14]..[344,9969+15])
                        Ppat_any
                    ]
                  expression (typing/ident.ml[344,9969+19]..[344,9969+20])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (typing/ident.ml[345,9990+4]..[345,9990+15])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[345,9990+4]..[345,9990+5])
                        Ppat_any
                      pattern (typing/ident.ml[345,9990+7]..[345,9990+15])
                        Ppat_construct "Global" (typing/ident.ml[345,9990+7]..[345,9990+13])
                        Some
                          []
                          pattern (typing/ident.ml[345,9990+14]..[345,9990+15])
                            Ppat_any
                    ]
                  expression (typing/ident.ml[345,9990+19]..[345,9990+23])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (typing/ident.ml[346,10014+4]..[346,10014+54])
                    Ppat_tuple
                    [
                      pattern (typing/ident.ml[346,10014+4]..[346,10014+28])
                        Ppat_construct "Predef" (typing/ident.ml[346,10014+4]..[346,10014+10])
                        Some
                          []
                          pattern (typing/ident.ml[346,10014+11]..[346,10014+28])
                            Ppat_record Open
                            [
                              "stamp" (typing/ident.ml[346,10014+13]..[346,10014+18])
                                pattern (typing/ident.ml[346,10014+21]..[346,10014+23])
                                  Ppat_var "s1" (typing/ident.ml[346,10014+21]..[346,10014+23])
                            ]
                      pattern (typing/ident.ml[346,10014+30]..[346,10014+54])
                        Ppat_construct "Predef" (typing/ident.ml[346,10014+30]..[346,10014+36])
                        Some
                          []
                          pattern (typing/ident.ml[346,10014+37]..[346,10014+54])
                            Ppat_record Open
                            [
                              "stamp" (typing/ident.ml[346,10014+39]..[346,10014+44])
                                pattern (typing/ident.ml[346,10014+47]..[346,10014+49])
                                  Ppat_var "s2" (typing/ident.ml[346,10014+47]..[346,10014+49])
                            ]
                    ]
                  expression (typing/ident.ml[346,10014+58]..[346,10014+71])
                    Pexp_apply
                    expression (typing/ident.ml[346,10014+58]..[346,10014+65])
                      Pexp_ident "compare" (typing/ident.ml[346,10014+58]..[346,10014+65])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[346,10014+66]..[346,10014+68])
                          Pexp_ident "s1" (typing/ident.ml[346,10014+66]..[346,10014+68])
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[346,10014+69]..[346,10014+71])
                          Pexp_ident "s2" (typing/ident.ml[346,10014+69]..[346,10014+71])
                    ]
              ]
    ]
  structure_item (typing/ident.ml[348,10087+0]..[348,10087+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[348,10087+4]..[348,10087+10])
          Ppat_var "output" (typing/ident.ml[348,10087+4]..[348,10087+10])
        expression (typing/ident.ml[348,10087+11]..[348,10087+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[348,10087+11]..[348,10087+13])
            Ppat_var "oc" (typing/ident.ml[348,10087+11]..[348,10087+13])
          expression (typing/ident.ml[348,10087+14]..[348,10087+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/ident.ml[348,10087+14]..[348,10087+16])
              Ppat_var "id" (typing/ident.ml[348,10087+14]..[348,10087+16])
            expression (typing/ident.ml[348,10087+19]..[348,10087+52])
              Pexp_apply
              expression (typing/ident.ml[348,10087+19]..[348,10087+32])
                Pexp_ident "output_string" (typing/ident.ml[348,10087+19]..[348,10087+32])
              [
                <arg>
                Nolabel
                  expression (typing/ident.ml[348,10087+33]..[348,10087+35])
                    Pexp_ident "oc" (typing/ident.ml[348,10087+33]..[348,10087+35])
                <arg>
                Nolabel
                  expression (typing/ident.ml[348,10087+36]..[348,10087+52])
                    Pexp_apply
                    expression (typing/ident.ml[348,10087+37]..[348,10087+48])
                      Pexp_ident "unique_name" (typing/ident.ml[348,10087+37]..[348,10087+48])
                    [
                      <arg>
                      Nolabel
                        expression (typing/ident.ml[348,10087+49]..[348,10087+51])
                          Pexp_ident "id" (typing/ident.ml[348,10087+49]..[348,10087+51])
                    ]
              ]
    ]
  structure_item (typing/ident.ml[349,10140+0]..[349,10140+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[349,10140+4]..[349,10140+8])
          Ppat_var "hash" (typing/ident.ml[349,10140+4]..[349,10140+8])
        expression (typing/ident.ml[349,10140+9]..[349,10140+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/ident.ml[349,10140+9]..[349,10140+10])
            Ppat_var "i" (typing/ident.ml[349,10140+9]..[349,10140+10])
          expression (typing/ident.ml[349,10140+13]..[349,10140+52])
            Pexp_apply
            expression (typing/ident.ml[349,10140+38]..[349,10140+42])
              Pexp_ident "lxor" (typing/ident.ml[349,10140+38]..[349,10140+42])
            [
              <arg>
              Nolabel
                expression (typing/ident.ml[349,10140+13]..[349,10140+37])
                  Pexp_apply
                  expression (typing/ident.ml[349,10140+14]..[349,10140+23])
                    Pexp_ident "Char.code" (typing/ident.ml[349,10140+14]..[349,10140+23])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[349,10140+24]..[349,10140+36])
                        Pexp_apply
                        expression (typing/ident.ml[349,10140+24]..[349,10140+36]) ghost
                          Pexp_ident "String.get" (typing/ident.ml[349,10140+24]..[349,10140+36]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[349,10140+24]..[349,10140+32])
                              Pexp_apply
                              expression (typing/ident.ml[349,10140+25]..[349,10140+29])
                                Pexp_ident "name" (typing/ident.ml[349,10140+25]..[349,10140+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/ident.ml[349,10140+30]..[349,10140+31])
                                    Pexp_ident "i" (typing/ident.ml[349,10140+30]..[349,10140+31])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/ident.ml[349,10140+34]..[349,10140+35])
                              Pexp_constant PConst_int (0,None)
                        ]
                  ]
              <arg>
              Nolabel
                expression (typing/ident.ml[349,10140+43]..[349,10140+52])
                  Pexp_apply
                  expression (typing/ident.ml[349,10140+44]..[349,10140+49])
                    Pexp_ident "stamp" (typing/ident.ml[349,10140+44]..[349,10140+49])
                  [
                    <arg>
                    Nolabel
                      expression (typing/ident.ml[349,10140+50]..[349,10140+51])
                        Pexp_ident "i" (typing/ident.ml[349,10140+50]..[349,10140+51])
                  ]
            ]
    ]
  structure_item (typing/ident.ml[351,10194+0]..[351,10194+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[351,10194+4]..[351,10194+18])
          Ppat_var "original_equal" (typing/ident.ml[351,10194+4]..[351,10194+18])
        expression (typing/ident.ml[351,10194+21]..[351,10194+26])
          Pexp_ident "equal" (typing/ident.ml[351,10194+21]..[351,10194+26])
    ]
  structure_item (typing/ident.ml[352,10221+0]..[359,10378+4])
    Pstr_include    module_expr (typing/ident.ml[352,10221+8]..[359,10378+4])
      Pmod_apply
      module_expr (typing/ident.ml[352,10221+8]..[352,10221+25])
        Pmod_ident "Identifiable.Make" (typing/ident.ml[352,10221+8]..[352,10221+25])
      module_expr (typing/ident.ml[352,10221+27]..[359,10378+3])
        Pmod_structure
        [
          structure_item (typing/ident.ml[353,10255+2]..[353,10255+19])
            Pstr_type Nonrec
            [
              type_declaration "t" (typing/ident.ml[353,10255+14]..[353,10255+15]) (typing/ident.ml[353,10255+2]..[353,10255+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/ident.ml[353,10255+18]..[353,10255+19])
                      Ptyp_constr "t" (typing/ident.ml[353,10255+18]..[353,10255+19])
                      []
            ]
          structure_item (typing/ident.ml[354,10275+2]..[354,10275+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/ident.ml[354,10275+6]..[354,10275+13])
                  Ppat_var "compare" (typing/ident.ml[354,10275+6]..[354,10275+13])
                expression (typing/ident.ml[354,10275+16]..[354,10275+23])
                  Pexp_ident "compare" (typing/ident.ml[354,10275+16]..[354,10275+23])
            ]
          structure_item (typing/ident.ml[355,10299+2]..[355,10299+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/ident.ml[355,10299+6]..[355,10299+12])
                  Ppat_var "output" (typing/ident.ml[355,10299+6]..[355,10299+12])
                expression (typing/ident.ml[355,10299+15]..[355,10299+21])
                  Pexp_ident "output" (typing/ident.ml[355,10299+15]..[355,10299+21])
            ]
          structure_item (typing/ident.ml[356,10321+2]..[356,10321+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/ident.ml[356,10321+6]..[356,10321+11])
                  Ppat_var "print" (typing/ident.ml[356,10321+6]..[356,10321+11])
                expression (typing/ident.ml[356,10321+14]..[356,10321+19])
                  Pexp_ident "print" (typing/ident.ml[356,10321+14]..[356,10321+19])
            ]
          structure_item (typing/ident.ml[357,10341+2]..[357,10341+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/ident.ml[357,10341+6]..[357,10341+10])
                  Ppat_var "hash" (typing/ident.ml[357,10341+6]..[357,10341+10])
                expression (typing/ident.ml[357,10341+13]..[357,10341+17])
                  Pexp_ident "hash" (typing/ident.ml[357,10341+13]..[357,10341+17])
            ]
          structure_item (typing/ident.ml[358,10359+2]..[358,10359+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/ident.ml[358,10359+6]..[358,10359+11])
                  Ppat_var "equal" (typing/ident.ml[358,10359+6]..[358,10359+11])
                expression (typing/ident.ml[358,10359+14]..[358,10359+18])
                  Pexp_ident "same" (typing/ident.ml[358,10359+14]..[358,10359+18])
            ]
        ]
  structure_item (typing/ident.ml[360,10383+0]..[360,10383+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/ident.ml[360,10383+4]..[360,10383+9])
          Ppat_var "equal" (typing/ident.ml[360,10383+4]..[360,10383+9])
        expression (typing/ident.ml[360,10383+12]..[360,10383+26])
          Pexp_ident "original_equal" (typing/ident.ml[360,10383+12]..[360,10383+26])
    ]
]

