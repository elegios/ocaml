[
  structure_item (typing/patterns.ml[17,1156+0]..[17,1156+13])
    Pstr_open Fresh
    module_expr (typing/patterns.ml[17,1156+5]..[17,1156+13])
      Pmod_ident "Asttypes" (typing/patterns.ml[17,1156+5]..[17,1156+13])
  structure_item (typing/patterns.ml[18,1170+0]..[18,1170+10])
    Pstr_open Fresh
    module_expr (typing/patterns.ml[18,1170+5]..[18,1170+10])
      Pmod_ident "Types" (typing/patterns.ml[18,1170+5]..[18,1170+10])
  structure_item (typing/patterns.ml[19,1181+0]..[19,1181+14])
    Pstr_open Fresh
    module_expr (typing/patterns.ml[19,1181+5]..[19,1181+14])
      Pmod_ident "Typedtree" (typing/patterns.ml[19,1181+5]..[19,1181+14])
  structure_item (typing/patterns.ml[23,1239+0]..[30,1392+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/patterns.ml[23,1239+4]..[23,1239+9])
          Ppat_var "omega" (typing/patterns.ml[23,1239+4]..[23,1239+9])
        expression (typing/patterns.ml[23,1239+12]..[30,1392+1])
          Pexp_record
          [
            "pat_desc" (typing/patterns.ml[24,1253+2]..[24,1253+10])
              expression (typing/patterns.ml[24,1253+13]..[24,1253+21])
                Pexp_construct "Tpat_any" (typing/patterns.ml[24,1253+13]..[24,1253+21])
                None
            "pat_loc" (typing/patterns.ml[25,1276+2]..[25,1276+9])
              expression (typing/patterns.ml[25,1276+12]..[25,1276+25])
                Pexp_ident "Location.none" (typing/patterns.ml[25,1276+12]..[25,1276+25])
            "pat_extra" (typing/patterns.ml[26,1303+2]..[26,1303+11])
              expression (typing/patterns.ml[26,1303+14]..[26,1303+16])
                Pexp_construct "[]" (typing/patterns.ml[26,1303+14]..[26,1303+16])
                None
            "pat_type" (typing/patterns.ml[27,1321+2]..[27,1321+10])
              expression (typing/patterns.ml[27,1321+13]..[27,1321+23])
                Pexp_ident "Ctype.none" (typing/patterns.ml[27,1321+13]..[27,1321+23])
            "pat_env" (typing/patterns.ml[28,1346+2]..[28,1346+9])
              expression (typing/patterns.ml[28,1346+12]..[28,1346+21])
                Pexp_ident "Env.empty" (typing/patterns.ml[28,1346+12]..[28,1346+21])
            "pat_attributes" (typing/patterns.ml[29,1369+2]..[29,1369+16])
              expression (typing/patterns.ml[29,1369+19]..[29,1369+21])
                Pexp_construct "[]" (typing/patterns.ml[29,1369+19]..[29,1369+21])
                None
          ]
          None
    ]
  structure_item (typing/patterns.ml[32,1395+0]..[33,1414+46])
    Pstr_value Rec
    [
      <def>
        pattern (typing/patterns.ml[32,1395+8]..[32,1395+14])
          Ppat_var "omegas" (typing/patterns.ml[32,1395+8]..[32,1395+14])
        expression (typing/patterns.ml[32,1395+15]..[33,1414+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/patterns.ml[32,1395+15]..[32,1395+16])
            Ppat_var "i" (typing/patterns.ml[32,1395+15]..[32,1395+16])
          expression (typing/patterns.ml[33,1414+2]..[33,1414+46])
            Pexp_ifthenelse
            expression (typing/patterns.ml[33,1414+5]..[33,1414+11])
              Pexp_apply
              expression (typing/patterns.ml[33,1414+7]..[33,1414+9])
                Pexp_ident "<=" (typing/patterns.ml[33,1414+7]..[33,1414+9])
              [
                <arg>
                Nolabel
                  expression (typing/patterns.ml[33,1414+5]..[33,1414+6])
                    Pexp_ident "i" (typing/patterns.ml[33,1414+5]..[33,1414+6])
                <arg>
                Nolabel
                  expression (typing/patterns.ml[33,1414+10]..[33,1414+11])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (typing/patterns.ml[33,1414+17]..[33,1414+19])
              Pexp_construct "[]" (typing/patterns.ml[33,1414+17]..[33,1414+19])
              None
            Some
              expression (typing/patterns.ml[33,1414+25]..[33,1414+46])
                Pexp_construct "::" (typing/patterns.ml[33,1414+31]..[33,1414+33])
                Some
                  expression (typing/patterns.ml[33,1414+25]..[33,1414+46]) ghost
                    Pexp_tuple
                    [
                      expression (typing/patterns.ml[33,1414+25]..[33,1414+30])
                        Pexp_ident "omega" (typing/patterns.ml[33,1414+25]..[33,1414+30])
                      expression (typing/patterns.ml[33,1414+34]..[33,1414+46])
                        Pexp_apply
                        expression (typing/patterns.ml[33,1414+34]..[33,1414+40])
                          Pexp_ident "omegas" (typing/patterns.ml[33,1414+34]..[33,1414+40])
                        [
                          <arg>
                          Nolabel
                            expression (typing/patterns.ml[33,1414+41]..[33,1414+46])
                              Pexp_apply
                              expression (typing/patterns.ml[33,1414+43]..[33,1414+44])
                                Pexp_ident "-" (typing/patterns.ml[33,1414+43]..[33,1414+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/patterns.ml[33,1414+42]..[33,1414+43])
                                    Pexp_ident "i" (typing/patterns.ml[33,1414+42]..[33,1414+43])
                                <arg>
                                Nolabel
                                  expression (typing/patterns.ml[33,1414+44]..[33,1414+45])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                    ]
    ]
  structure_item (typing/patterns.ml[35,1462+0]..[35,1462+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/patterns.ml[35,1462+4]..[35,1462+14])
          Ppat_var "omega_list" (typing/patterns.ml[35,1462+4]..[35,1462+14])
        expression (typing/patterns.ml[35,1462+15]..[35,1462+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/patterns.ml[35,1462+15]..[35,1462+16])
            Ppat_var "l" (typing/patterns.ml[35,1462+15]..[35,1462+16])
          expression (typing/patterns.ml[35,1462+19]..[35,1462+46])
            Pexp_apply
            expression (typing/patterns.ml[35,1462+19]..[35,1462+27])
              Pexp_ident "List.map" (typing/patterns.ml[35,1462+19]..[35,1462+27])
            [
              <arg>
              Nolabel
                expression (typing/patterns.ml[35,1462+28]..[35,1462+44])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/patterns.ml[35,1462+33]..[35,1462+34])
                    Ppat_any
                  expression (typing/patterns.ml[35,1462+38]..[35,1462+43])
                    Pexp_ident "omega" (typing/patterns.ml[35,1462+38]..[35,1462+43])
              <arg>
              Nolabel
                expression (typing/patterns.ml[35,1462+45]..[35,1462+46])
                  Pexp_ident "l" (typing/patterns.ml[35,1462+45]..[35,1462+46])
            ]
    ]
  structure_item (typing/patterns.ml[37,1510+0]..[45,1712+3])
    Pstr_module
    "Non_empty_row" (typing/patterns.ml[37,1510+7]..[37,1510+20])
      module_expr (typing/patterns.ml[37,1510+23]..[45,1712+3])
        Pmod_structure
        [
          structure_item (typing/patterns.ml[38,1540+2]..[38,1540+41])
            Pstr_type Rec
            [
              type_declaration "t" (typing/patterns.ml[38,1540+10]..[38,1540+11]) (typing/patterns.ml[38,1540+2]..[38,1540+41])
                ptype_params =
                  [
                    core_type (typing/patterns.ml[38,1540+7]..[38,1540+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[38,1540+14]..[38,1540+41])
                      Ptyp_tuple
                      [
                        core_type (typing/patterns.ml[38,1540+14]..[38,1540+16])
                          Ptyp_var a
                        core_type (typing/patterns.ml[38,1540+19]..[38,1540+41])
                          Ptyp_constr "list" (typing/patterns.ml[38,1540+37]..[38,1540+41])
                          [
                            core_type (typing/patterns.ml[38,1540+19]..[38,1540+36])
                              Ptyp_constr "Typedtree.pattern" (typing/patterns.ml[38,1540+19]..[38,1540+36])
                              []
                          ]
                      ]
            ]
          structure_item (typing/patterns.ml[40,1583+2]..[42,1636+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[40,1583+6]..[40,1583+16])
                  Ppat_var "of_initial" (typing/patterns.ml[40,1583+6]..[40,1583+16])
                expression (typing/patterns.ml[40,1583+19]..[42,1636+32])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/patterns.ml[41,1611+6]..[41,1611+8])
                        Ppat_construct "[]" (typing/patterns.ml[41,1611+6]..[41,1611+8])
                        None
                      expression (typing/patterns.ml[41,1611+12]..[41,1611+24])
                        Pexp_assert
                        expression (typing/patterns.ml[41,1611+19]..[41,1611+24])
                          Pexp_construct "false" (typing/patterns.ml[41,1611+19]..[41,1611+24])
                          None
                    <case>
                      pattern (typing/patterns.ml[42,1636+6]..[42,1636+17])
                        Ppat_construct "::" (typing/patterns.ml[42,1636+10]..[42,1636+12])
                        Some
                          []
                          pattern (typing/patterns.ml[42,1636+6]..[42,1636+17]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[42,1636+6]..[42,1636+9])
                                Ppat_var "pat" (typing/patterns.ml[42,1636+6]..[42,1636+9])
                              pattern (typing/patterns.ml[42,1636+13]..[42,1636+17])
                                Ppat_var "patl" (typing/patterns.ml[42,1636+13]..[42,1636+17])
                            ]
                      expression (typing/patterns.ml[42,1636+21]..[42,1636+32])
                        Pexp_tuple
                        [
                          expression (typing/patterns.ml[42,1636+22]..[42,1636+25])
                            Pexp_ident "pat" (typing/patterns.ml[42,1636+22]..[42,1636+25])
                          expression (typing/patterns.ml[42,1636+27]..[42,1636+31])
                            Pexp_ident "patl" (typing/patterns.ml[42,1636+27]..[42,1636+31])
                        ]
                  ]
            ]
          structure_item (typing/patterns.ml[44,1670+2]..[44,1670+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[44,1670+6]..[44,1670+15])
                  Ppat_var "map_first" (typing/patterns.ml[44,1670+6]..[44,1670+15])
                expression (typing/patterns.ml[44,1670+16]..[44,1670+41]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/patterns.ml[44,1670+16]..[44,1670+17])
                    Ppat_var "f" (typing/patterns.ml[44,1670+16]..[44,1670+17])
                  expression (typing/patterns.ml[44,1670+18]..[44,1670+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/patterns.ml[44,1670+18]..[44,1670+27])
                      Ppat_tuple
                      [
                        pattern (typing/patterns.ml[44,1670+19]..[44,1670+20])
                          Ppat_var "p" (typing/patterns.ml[44,1670+19]..[44,1670+20])
                        pattern (typing/patterns.ml[44,1670+22]..[44,1670+26])
                          Ppat_var "patl" (typing/patterns.ml[44,1670+22]..[44,1670+26])
                      ]
                    expression (typing/patterns.ml[44,1670+30]..[44,1670+41])
                      Pexp_tuple
                      [
                        expression (typing/patterns.ml[44,1670+31]..[44,1670+34])
                          Pexp_apply
                          expression (typing/patterns.ml[44,1670+31]..[44,1670+32])
                            Pexp_ident "f" (typing/patterns.ml[44,1670+31]..[44,1670+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/patterns.ml[44,1670+33]..[44,1670+34])
                                Pexp_ident "p" (typing/patterns.ml[44,1670+33]..[44,1670+34])
                          ]
                        expression (typing/patterns.ml[44,1670+36]..[44,1670+40])
                          Pexp_ident "patl" (typing/patterns.ml[44,1670+36]..[44,1670+40])
                      ]
            ]
        ]
  structure_item (typing/patterns.ml[51,1871+0]..[68,2349+3])
    Pstr_module
    "Simple" (typing/patterns.ml[51,1871+7]..[51,1871+13])
      module_expr (typing/patterns.ml[51,1871+16]..[68,2349+3])
        Pmod_structure
        [
          structure_item (typing/patterns.ml[52,1894+2]..[63,2263+3])
            Pstr_type Rec
            [
              type_declaration "view" (typing/patterns.ml[52,1894+7]..[52,1894+11]) (typing/patterns.ml[52,1894+2]..[63,2263+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[52,1894+14]..[63,2263+3])
                      Ptyp_variant closed=Closed
                      [
                        Rtag "Any" true
                          []
                        Rtag "Constant" false
                          [
                            core_type (typing/patterns.ml[54,1921+19]..[54,1921+27])
                              Ptyp_constr "constant" (typing/patterns.ml[54,1921+19]..[54,1921+27])
                              []
                          ]
                        Rtag "Tuple" false
                          [
                            core_type (typing/patterns.ml[55,1949+16]..[55,1949+28])
                              Ptyp_constr "list" (typing/patterns.ml[55,1949+24]..[55,1949+28])
                              [
                                core_type (typing/patterns.ml[55,1949+16]..[55,1949+23])
                                  Ptyp_constr "pattern" (typing/patterns.ml[55,1949+16]..[55,1949+23])
                                  []
                              ]
                          ]
                        Rtag "Construct" false
                          [
                            core_type (typing/patterns.ml[57,1998+8]..[57,1998+64])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[57,1998+8]..[57,1998+23])
                                  Ptyp_constr "loc" (typing/patterns.ml[57,1998+20]..[57,1998+23])
                                  [
                                    core_type (typing/patterns.ml[57,1998+8]..[57,1998+19])
                                      Ptyp_constr "Longident.t" (typing/patterns.ml[57,1998+8]..[57,1998+19])
                                      []
                                  ]
                                core_type (typing/patterns.ml[57,1998+26]..[57,1998+49])
                                  Ptyp_constr "constructor_description" (typing/patterns.ml[57,1998+26]..[57,1998+49])
                                  []
                                core_type (typing/patterns.ml[57,1998+52]..[57,1998+64])
                                  Ptyp_constr "list" (typing/patterns.ml[57,1998+60]..[57,1998+64])
                                  [
                                    core_type (typing/patterns.ml[57,1998+52]..[57,1998+59])
                                      Ptyp_constr "pattern" (typing/patterns.ml[57,1998+52]..[57,1998+59])
                                      []
                                  ]
                              ]
                          ]
                        Rtag "Variant" false
                          [
                            core_type (typing/patterns.ml[58,2063+18]..[58,2063+55])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[58,2063+18]..[58,2063+23])
                                  Ptyp_constr "label" (typing/patterns.ml[58,2063+18]..[58,2063+23])
                                  []
                                core_type (typing/patterns.ml[58,2063+26]..[58,2063+40])
                                  Ptyp_constr "option" (typing/patterns.ml[58,2063+34]..[58,2063+40])
                                  [
                                    core_type (typing/patterns.ml[58,2063+26]..[58,2063+33])
                                      Ptyp_constr "pattern" (typing/patterns.ml[58,2063+26]..[58,2063+33])
                                      []
                                  ]
                                core_type (typing/patterns.ml[58,2063+43]..[58,2063+55])
                                  Ptyp_constr "ref" (typing/patterns.ml[58,2063+52]..[58,2063+55])
                                  [
                                    core_type (typing/patterns.ml[58,2063+43]..[58,2063+51])
                                      Ptyp_constr "row_desc" (typing/patterns.ml[58,2063+43]..[58,2063+51])
                                      []
                                  ]
                              ]
                          ]
                        Rtag "Record" false
                          [
                            core_type (typing/patterns.ml[60,2136+8]..[60,2136+74])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[60,2136+8]..[60,2136+60])
                                  Ptyp_constr "list" (typing/patterns.ml[60,2136+56]..[60,2136+60])
                                  [
                                    core_type (typing/patterns.ml[60,2136+9]..[60,2136+54])
                                      Ptyp_tuple
                                      [
                                        core_type (typing/patterns.ml[60,2136+9]..[60,2136+24])
                                          Ptyp_constr "loc" (typing/patterns.ml[60,2136+21]..[60,2136+24])
                                          [
                                            core_type (typing/patterns.ml[60,2136+9]..[60,2136+20])
                                              Ptyp_constr "Longident.t" (typing/patterns.ml[60,2136+9]..[60,2136+20])
                                              []
                                          ]
                                        core_type (typing/patterns.ml[60,2136+27]..[60,2136+44])
                                          Ptyp_constr "label_description" (typing/patterns.ml[60,2136+27]..[60,2136+44])
                                          []
                                        core_type (typing/patterns.ml[60,2136+47]..[60,2136+54])
                                          Ptyp_constr "pattern" (typing/patterns.ml[60,2136+47]..[60,2136+54])
                                          []
                                      ]
                                  ]
                                core_type (typing/patterns.ml[60,2136+63]..[60,2136+74])
                                  Ptyp_constr "closed_flag" (typing/patterns.ml[60,2136+63]..[60,2136+74])
                                  []
                              ]
                          ]
                        Rtag "Array" false
                          [
                            core_type (typing/patterns.ml[61,2211+16]..[61,2211+28])
                              Ptyp_constr "list" (typing/patterns.ml[61,2211+24]..[61,2211+28])
                              [
                                core_type (typing/patterns.ml[61,2211+16]..[61,2211+23])
                                  Ptyp_constr "pattern" (typing/patterns.ml[61,2211+16]..[61,2211+23])
                                  []
                              ]
                          ]
                        Rtag "Lazy" false
                          [
                            core_type (typing/patterns.ml[62,2240+15]..[62,2240+22])
                              Ptyp_constr "pattern" (typing/patterns.ml[62,2240+15]..[62,2240+22])
                              []
                          ]
                      ]
                      None
            ]
          structure_item (typing/patterns.ml[65,2268+2]..[65,2268+34])
            Pstr_type Rec
            [
              type_declaration "pattern" (typing/patterns.ml[65,2268+7]..[65,2268+14]) (typing/patterns.ml[65,2268+2]..[65,2268+34])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[65,2268+17]..[65,2268+34])
                      Ptyp_constr "pattern_data" (typing/patterns.ml[65,2268+22]..[65,2268+34])
                      [
                        core_type (typing/patterns.ml[65,2268+17]..[65,2268+21])
                          Ptyp_constr "view" (typing/patterns.ml[65,2268+17]..[65,2268+21])
                          []
                      ]
            ]
          structure_item (typing/patterns.ml[67,2304+2]..[67,2304+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[67,2304+6]..[67,2304+11])
                  Ppat_var "omega" (typing/patterns.ml[67,2304+6]..[67,2304+11])
                expression (typing/patterns.ml[67,2304+14]..[67,2304+44])
                  Pexp_record
                  [
                    "pat_desc" (typing/patterns.ml[67,2304+27]..[67,2304+35])
                      expression (typing/patterns.ml[67,2304+38]..[67,2304+42])
                        Pexp_variant "Any"
                        None
                  ]
                  Some
                    expression (typing/patterns.ml[67,2304+16]..[67,2304+21])
                      Pexp_ident "omega" (typing/patterns.ml[67,2304+16]..[67,2304+21])
            ]
        ]
  structure_item (typing/patterns.ml[70,2354+0]..[77,2505+3])
    Pstr_module
    "Half_simple" (typing/patterns.ml[70,2354+7]..[70,2354+18])
      module_expr (typing/patterns.ml[70,2354+21]..[77,2505+3])
        Pmod_structure
        [
          structure_item (typing/patterns.ml[71,2382+2]..[74,2465+3])
            Pstr_type Rec
            [
              type_declaration "view" (typing/patterns.ml[71,2382+7]..[71,2382+11]) (typing/patterns.ml[71,2382+2]..[74,2465+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[71,2382+14]..[74,2465+3])
                      Ptyp_variant closed=Closed
                      [
                        Rinherit
                          core_type (typing/patterns.ml[72,2398+6]..[72,2398+17])
                            Ptyp_constr "Simple.view" (typing/patterns.ml[72,2398+6]..[72,2398+17])
                            []
                        Rtag "Or" false
                          [
                            core_type (typing/patterns.ml[73,2416+13]..[73,2416+48])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[73,2416+13]..[73,2416+20])
                                  Ptyp_constr "pattern" (typing/patterns.ml[73,2416+13]..[73,2416+20])
                                  []
                                core_type (typing/patterns.ml[73,2416+23]..[73,2416+30])
                                  Ptyp_constr "pattern" (typing/patterns.ml[73,2416+23]..[73,2416+30])
                                  []
                                core_type (typing/patterns.ml[73,2416+33]..[73,2416+48])
                                  Ptyp_constr "option" (typing/patterns.ml[73,2416+42]..[73,2416+48])
                                  [
                                    core_type (typing/patterns.ml[73,2416+33]..[73,2416+41])
                                      Ptyp_constr "row_desc" (typing/patterns.ml[73,2416+33]..[73,2416+41])
                                      []
                                  ]
                              ]
                          ]
                      ]
                      None
            ]
          structure_item (typing/patterns.ml[76,2470+2]..[76,2470+34])
            Pstr_type Rec
            [
              type_declaration "pattern" (typing/patterns.ml[76,2470+7]..[76,2470+14]) (typing/patterns.ml[76,2470+2]..[76,2470+34])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[76,2470+17]..[76,2470+34])
                      Ptyp_constr "pattern_data" (typing/patterns.ml[76,2470+22]..[76,2470+34])
                      [
                        core_type (typing/patterns.ml[76,2470+17]..[76,2470+21])
                          Ptyp_constr "view" (typing/patterns.ml[76,2470+17]..[76,2470+21])
                          []
                      ]
            ]
        ]
  structure_item (typing/patterns.ml[79,2510+0]..[135,4296+3])
    Pstr_module
    "General" (typing/patterns.ml[79,2510+7]..[79,2510+14])
      module_expr (typing/patterns.ml[79,2510+17]..[135,4296+3])
        Pmod_structure
        [
          structure_item (typing/patterns.ml[80,2534+2]..[84,2655+3])
            Pstr_type Rec
            [
              type_declaration "view" (typing/patterns.ml[80,2534+7]..[80,2534+11]) (typing/patterns.ml[80,2534+2]..[84,2655+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[80,2534+14]..[84,2655+3])
                      Ptyp_variant closed=Closed
                      [
                        Rinherit
                          core_type (typing/patterns.ml[81,2550+6]..[81,2550+22])
                            Ptyp_constr "Half_simple.view" (typing/patterns.ml[81,2550+6]..[81,2550+22])
                            []
                        Rtag "Var" false
                          [
                            core_type (typing/patterns.ml[82,2573+14]..[82,2573+34])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[82,2573+14]..[82,2573+21])
                                  Ptyp_constr "Ident.t" (typing/patterns.ml[82,2573+14]..[82,2573+21])
                                  []
                                core_type (typing/patterns.ml[82,2573+24]..[82,2573+34])
                                  Ptyp_constr "loc" (typing/patterns.ml[82,2573+31]..[82,2573+34])
                                  [
                                    core_type (typing/patterns.ml[82,2573+24]..[82,2573+30])
                                      Ptyp_constr "string" (typing/patterns.ml[82,2573+24]..[82,2573+30])
                                      []
                                  ]
                              ]
                          ]
                        Rtag "Alias" false
                          [
                            core_type (typing/patterns.ml[83,2608+16]..[83,2608+46])
                              Ptyp_tuple
                              [
                                core_type (typing/patterns.ml[83,2608+16]..[83,2608+23])
                                  Ptyp_constr "pattern" (typing/patterns.ml[83,2608+16]..[83,2608+23])
                                  []
                                core_type (typing/patterns.ml[83,2608+26]..[83,2608+33])
                                  Ptyp_constr "Ident.t" (typing/patterns.ml[83,2608+26]..[83,2608+33])
                                  []
                                core_type (typing/patterns.ml[83,2608+36]..[83,2608+46])
                                  Ptyp_constr "loc" (typing/patterns.ml[83,2608+43]..[83,2608+46])
                                  [
                                    core_type (typing/patterns.ml[83,2608+36]..[83,2608+42])
                                      Ptyp_constr "string" (typing/patterns.ml[83,2608+36]..[83,2608+42])
                                      []
                                  ]
                              ]
                          ]
                      ]
                      None
            ]
          structure_item (typing/patterns.ml[85,2659+2]..[85,2659+34])
            Pstr_type Rec
            [
              type_declaration "pattern" (typing/patterns.ml[85,2659+7]..[85,2659+14]) (typing/patterns.ml[85,2659+2]..[85,2659+34])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (typing/patterns.ml[85,2659+17]..[85,2659+34])
                      Ptyp_constr "pattern_data" (typing/patterns.ml[85,2659+22]..[85,2659+34])
                      [
                        core_type (typing/patterns.ml[85,2659+17]..[85,2659+21])
                          Ptyp_constr "view" (typing/patterns.ml[85,2659+17]..[85,2659+21])
                          []
                      ]
            ]
          structure_item (typing/patterns.ml[87,2695+2]..[106,3285+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[87,2695+6]..[87,2695+15])
                  Ppat_var "view_desc" (typing/patterns.ml[87,2695+6]..[87,2695+15])
                expression (typing/patterns.ml[87,2695+18]..[106,3285+28])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/patterns.ml[88,2722+6]..[88,2722+14])
                        Ppat_construct "Tpat_any" (typing/patterns.ml[88,2722+6]..[88,2722+14])
                        None
                      expression (typing/patterns.ml[89,2740+7]..[89,2740+11])
                        Pexp_variant "Any"
                        None
                    <case>
                      pattern (typing/patterns.ml[90,2752+6]..[90,2752+24])
                        Ppat_construct "Tpat_var" (typing/patterns.ml[90,2752+6]..[90,2752+14])
                        Some
                          []
                          pattern (typing/patterns.ml[90,2752+15]..[90,2752+24])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[90,2752+16]..[90,2752+18])
                                Ppat_var "id" (typing/patterns.ml[90,2752+16]..[90,2752+18])
                              pattern (typing/patterns.ml[90,2752+20]..[90,2752+23])
                                Ppat_var "str" (typing/patterns.ml[90,2752+20]..[90,2752+23])
                            ]
                      expression (typing/patterns.ml[91,2780+7]..[91,2780+21])
                        Pexp_variant "Var"
                        Some
                          expression (typing/patterns.ml[91,2780+12]..[91,2780+21])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[91,2780+13]..[91,2780+15])
                                Pexp_ident "id" (typing/patterns.ml[91,2780+13]..[91,2780+15])
                              expression (typing/patterns.ml[91,2780+17]..[91,2780+20])
                                Pexp_ident "str" (typing/patterns.ml[91,2780+17]..[91,2780+20])
                            ]
                    <case>
                      pattern (typing/patterns.ml[92,2802+6]..[92,2802+29])
                        Ppat_construct "Tpat_alias" (typing/patterns.ml[92,2802+6]..[92,2802+16])
                        Some
                          []
                          pattern (typing/patterns.ml[92,2802+17]..[92,2802+29])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[92,2802+18]..[92,2802+19])
                                Ppat_var "p" (typing/patterns.ml[92,2802+18]..[92,2802+19])
                              pattern (typing/patterns.ml[92,2802+21]..[92,2802+23])
                                Ppat_var "id" (typing/patterns.ml[92,2802+21]..[92,2802+23])
                              pattern (typing/patterns.ml[92,2802+25]..[92,2802+28])
                                Ppat_var "str" (typing/patterns.ml[92,2802+25]..[92,2802+28])
                            ]
                      expression (typing/patterns.ml[93,2835+7]..[93,2835+26])
                        Pexp_variant "Alias"
                        Some
                          expression (typing/patterns.ml[93,2835+14]..[93,2835+26])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[93,2835+15]..[93,2835+16])
                                Pexp_ident "p" (typing/patterns.ml[93,2835+15]..[93,2835+16])
                              expression (typing/patterns.ml[93,2835+18]..[93,2835+20])
                                Pexp_ident "id" (typing/patterns.ml[93,2835+18]..[93,2835+20])
                              expression (typing/patterns.ml[93,2835+22]..[93,2835+25])
                                Pexp_ident "str" (typing/patterns.ml[93,2835+22]..[93,2835+25])
                            ]
                    <case>
                      pattern (typing/patterns.ml[94,2862+6]..[94,2862+23])
                        Ppat_construct "Tpat_constant" (typing/patterns.ml[94,2862+6]..[94,2862+19])
                        Some
                          []
                          pattern (typing/patterns.ml[94,2862+20]..[94,2862+23])
                            Ppat_var "cst" (typing/patterns.ml[94,2862+20]..[94,2862+23])
                      expression (typing/patterns.ml[95,2889+7]..[95,2889+20])
                        Pexp_variant "Constant"
                        Some
                          expression (typing/patterns.ml[95,2889+17]..[95,2889+20])
                            Pexp_ident "cst" (typing/patterns.ml[95,2889+17]..[95,2889+20])
                    <case>
                      pattern (typing/patterns.ml[96,2910+6]..[96,2910+19])
                        Ppat_construct "Tpat_tuple" (typing/patterns.ml[96,2910+6]..[96,2910+16])
                        Some
                          []
                          pattern (typing/patterns.ml[96,2910+17]..[96,2910+19])
                            Ppat_var "ps" (typing/patterns.ml[96,2910+17]..[96,2910+19])
                      expression (typing/patterns.ml[97,2933+7]..[97,2933+16])
                        Pexp_variant "Tuple"
                        Some
                          expression (typing/patterns.ml[97,2933+14]..[97,2933+16])
                            Pexp_ident "ps" (typing/patterns.ml[97,2933+14]..[97,2933+16])
                    <case>
                      pattern (typing/patterns.ml[98,2950+6]..[98,2950+48])
                        Ppat_construct "Tpat_construct" (typing/patterns.ml[98,2950+6]..[98,2950+20])
                        Some
                          []
                          pattern (typing/patterns.ml[98,2950+21]..[98,2950+48])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[98,2950+22]..[98,2950+26])
                                Ppat_var "cstr" (typing/patterns.ml[98,2950+22]..[98,2950+26])
                              pattern (typing/patterns.ml[98,2950+28]..[98,2950+38])
                                Ppat_var "cstr_descr" (typing/patterns.ml[98,2950+28]..[98,2950+38])
                              pattern (typing/patterns.ml[98,2950+40]..[98,2950+44])
                                Ppat_var "args" (typing/patterns.ml[98,2950+40]..[98,2950+44])
                              pattern (typing/patterns.ml[98,2950+46]..[98,2950+47])
                                Ppat_any
                            ]
                      expression (typing/patterns.ml[99,3002+7]..[99,3002+42])
                        Pexp_variant "Construct"
                        Some
                          expression (typing/patterns.ml[99,3002+18]..[99,3002+42])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[99,3002+19]..[99,3002+23])
                                Pexp_ident "cstr" (typing/patterns.ml[99,3002+19]..[99,3002+23])
                              expression (typing/patterns.ml[99,3002+25]..[99,3002+35])
                                Pexp_ident "cstr_descr" (typing/patterns.ml[99,3002+25]..[99,3002+35])
                              expression (typing/patterns.ml[99,3002+37]..[99,3002+41])
                                Pexp_ident "args" (typing/patterns.ml[99,3002+37]..[99,3002+41])
                            ]
                    <case>
                      pattern (typing/patterns.ml[100,3045+6]..[100,3045+40])
                        Ppat_construct "Tpat_variant" (typing/patterns.ml[100,3045+6]..[100,3045+18])
                        Some
                          []
                          pattern (typing/patterns.ml[100,3045+19]..[100,3045+40])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[100,3045+20]..[100,3045+24])
                                Ppat_var "cstr" (typing/patterns.ml[100,3045+20]..[100,3045+24])
                              pattern (typing/patterns.ml[100,3045+26]..[100,3045+29])
                                Ppat_var "arg" (typing/patterns.ml[100,3045+26]..[100,3045+29])
                              pattern (typing/patterns.ml[100,3045+31]..[100,3045+39])
                                Ppat_var "row_desc" (typing/patterns.ml[100,3045+31]..[100,3045+39])
                            ]
                      expression (typing/patterns.ml[101,3089+7]..[101,3089+37])
                        Pexp_variant "Variant"
                        Some
                          expression (typing/patterns.ml[101,3089+16]..[101,3089+37])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[101,3089+17]..[101,3089+21])
                                Pexp_ident "cstr" (typing/patterns.ml[101,3089+17]..[101,3089+21])
                              expression (typing/patterns.ml[101,3089+23]..[101,3089+26])
                                Pexp_ident "arg" (typing/patterns.ml[101,3089+23]..[101,3089+26])
                              expression (typing/patterns.ml[101,3089+28]..[101,3089+36])
                                Pexp_ident "row_desc" (typing/patterns.ml[101,3089+28]..[101,3089+36])
                            ]
                    <case>
                      pattern (typing/patterns.ml[102,3127+6]..[102,3127+34])
                        Ppat_construct "Tpat_record" (typing/patterns.ml[102,3127+6]..[102,3127+17])
                        Some
                          []
                          pattern (typing/patterns.ml[102,3127+18]..[102,3127+34])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[102,3127+19]..[102,3127+25])
                                Ppat_var "fields" (typing/patterns.ml[102,3127+19]..[102,3127+25])
                              pattern (typing/patterns.ml[102,3127+27]..[102,3127+33])
                                Ppat_var "closed" (typing/patterns.ml[102,3127+27]..[102,3127+33])
                            ]
                      expression (typing/patterns.ml[103,3165+7]..[103,3165+31])
                        Pexp_variant "Record"
                        Some
                          expression (typing/patterns.ml[103,3165+15]..[103,3165+31])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[103,3165+16]..[103,3165+22])
                                Pexp_ident "fields" (typing/patterns.ml[103,3165+16]..[103,3165+22])
                              expression (typing/patterns.ml[103,3165+24]..[103,3165+30])
                                Pexp_ident "closed" (typing/patterns.ml[103,3165+24]..[103,3165+30])
                            ]
                    <case>
                      pattern (typing/patterns.ml[104,3197+6]..[104,3197+19])
                        Ppat_construct "Tpat_array" (typing/patterns.ml[104,3197+6]..[104,3197+16])
                        Some
                          []
                          pattern (typing/patterns.ml[104,3197+17]..[104,3197+19])
                            Ppat_var "ps" (typing/patterns.ml[104,3197+17]..[104,3197+19])
                      expression (typing/patterns.ml[104,3197+23]..[104,3197+32])
                        Pexp_variant "Array"
                        Some
                          expression (typing/patterns.ml[104,3197+30]..[104,3197+32])
                            Pexp_ident "ps" (typing/patterns.ml[104,3197+30]..[104,3197+32])
                    <case>
                      pattern (typing/patterns.ml[105,3230+6]..[105,3230+30])
                        Ppat_construct "Tpat_or" (typing/patterns.ml[105,3230+6]..[105,3230+13])
                        Some
                          []
                          pattern (typing/patterns.ml[105,3230+14]..[105,3230+30])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[105,3230+15]..[105,3230+16])
                                Ppat_var "p" (typing/patterns.ml[105,3230+15]..[105,3230+16])
                              pattern (typing/patterns.ml[105,3230+18]..[105,3230+19])
                                Ppat_var "q" (typing/patterns.ml[105,3230+18]..[105,3230+19])
                              pattern (typing/patterns.ml[105,3230+21]..[105,3230+29])
                                Ppat_var "row_desc" (typing/patterns.ml[105,3230+21]..[105,3230+29])
                            ]
                      expression (typing/patterns.ml[105,3230+34]..[105,3230+54])
                        Pexp_variant "Or"
                        Some
                          expression (typing/patterns.ml[105,3230+38]..[105,3230+54])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[105,3230+39]..[105,3230+40])
                                Pexp_ident "p" (typing/patterns.ml[105,3230+39]..[105,3230+40])
                              expression (typing/patterns.ml[105,3230+42]..[105,3230+43])
                                Pexp_ident "q" (typing/patterns.ml[105,3230+42]..[105,3230+43])
                              expression (typing/patterns.ml[105,3230+45]..[105,3230+53])
                                Pexp_ident "row_desc" (typing/patterns.ml[105,3230+45]..[105,3230+53])
                            ]
                    <case>
                      pattern (typing/patterns.ml[106,3285+6]..[106,3285+17])
                        Ppat_construct "Tpat_lazy" (typing/patterns.ml[106,3285+6]..[106,3285+15])
                        Some
                          []
                          pattern (typing/patterns.ml[106,3285+16]..[106,3285+17])
                            Ppat_var "p" (typing/patterns.ml[106,3285+16]..[106,3285+17])
                      expression (typing/patterns.ml[106,3285+21]..[106,3285+28])
                        Pexp_variant "Lazy"
                        Some
                          expression (typing/patterns.ml[106,3285+27]..[106,3285+28])
                            Pexp_ident "p" (typing/patterns.ml[106,3285+27]..[106,3285+28])
                  ]
            ]
          structure_item (typing/patterns.ml[108,3315+2]..[109,3340+46])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[108,3315+6]..[108,3315+10])
                  Ppat_var "view" (typing/patterns.ml[108,3315+6]..[108,3315+10])
                expression (typing/patterns.ml[108,3315+11]..[109,3340+46]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/patterns.ml[108,3315+11]..[108,3315+12])
                    Ppat_var "p" (typing/patterns.ml[108,3315+11]..[108,3315+12])
                  expression (typing/patterns.ml[108,3315+13]..[109,3340+46])
                    Pexp_constraint
                    expression (typing/patterns.ml[109,3340+4]..[109,3340+46])
                      Pexp_record
                      [
                        "pat_desc" (typing/patterns.ml[109,3340+13]..[109,3340+21])
                          expression (typing/patterns.ml[109,3340+24]..[109,3340+44])
                            Pexp_apply
                            expression (typing/patterns.ml[109,3340+24]..[109,3340+33])
                              Pexp_ident "view_desc" (typing/patterns.ml[109,3340+24]..[109,3340+33])
                            [
                              <arg>
                              Nolabel
                                expression (typing/patterns.ml[109,3340+34]..[109,3340+44])
                                  Pexp_field
                                  expression (typing/patterns.ml[109,3340+34]..[109,3340+35])
                                    Pexp_ident "p" (typing/patterns.ml[109,3340+34]..[109,3340+35])
                                  "pat_desc" (typing/patterns.ml[109,3340+36]..[109,3340+44])
                            ]
                      ]
                      Some
                        expression (typing/patterns.ml[109,3340+6]..[109,3340+7])
                          Pexp_ident "p" (typing/patterns.ml[109,3340+6]..[109,3340+7])
                    core_type (typing/patterns.ml[108,3315+15]..[108,3315+22])
                      Ptyp_constr "pattern" (typing/patterns.ml[108,3315+15]..[108,3315+22])
                      []
            ]
          structure_item (typing/patterns.ml[111,3388+2]..[125,3945+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[111,3388+6]..[111,3388+16])
                  Ppat_var "erase_desc" (typing/patterns.ml[111,3388+6]..[111,3388+16])
                expression (typing/patterns.ml[111,3388+19]..[125,3945+28])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/patterns.ml[112,3416+6]..[112,3416+10])
                        Ppat_variant "Any"
                        None
                      expression (typing/patterns.ml[112,3416+14]..[112,3416+22])
                        Pexp_construct "Tpat_any" (typing/patterns.ml[112,3416+14]..[112,3416+22])
                        None
                    <case>
                      pattern (typing/patterns.ml[113,3439+6]..[113,3439+20])
                        Ppat_variant "Var"
                        Some
                          pattern (typing/patterns.ml[113,3439+11]..[113,3439+20])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[113,3439+12]..[113,3439+14])
                                Ppat_var "id" (typing/patterns.ml[113,3439+12]..[113,3439+14])
                              pattern (typing/patterns.ml[113,3439+16]..[113,3439+19])
                                Ppat_var "str" (typing/patterns.ml[113,3439+16]..[113,3439+19])
                            ]
                      expression (typing/patterns.ml[113,3439+24]..[113,3439+42])
                        Pexp_construct "Tpat_var" (typing/patterns.ml[113,3439+24]..[113,3439+32])
                        Some
                          expression (typing/patterns.ml[113,3439+33]..[113,3439+42])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[113,3439+34]..[113,3439+36])
                                Pexp_ident "id" (typing/patterns.ml[113,3439+34]..[113,3439+36])
                              expression (typing/patterns.ml[113,3439+38]..[113,3439+41])
                                Pexp_ident "str" (typing/patterns.ml[113,3439+38]..[113,3439+41])
                            ]
                    <case>
                      pattern (typing/patterns.ml[114,3482+6]..[114,3482+25])
                        Ppat_variant "Alias"
                        Some
                          pattern (typing/patterns.ml[114,3482+13]..[114,3482+25])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[114,3482+14]..[114,3482+15])
                                Ppat_var "p" (typing/patterns.ml[114,3482+14]..[114,3482+15])
                              pattern (typing/patterns.ml[114,3482+17]..[114,3482+19])
                                Ppat_var "id" (typing/patterns.ml[114,3482+17]..[114,3482+19])
                              pattern (typing/patterns.ml[114,3482+21]..[114,3482+24])
                                Ppat_var "str" (typing/patterns.ml[114,3482+21]..[114,3482+24])
                            ]
                      expression (typing/patterns.ml[114,3482+29]..[114,3482+52])
                        Pexp_construct "Tpat_alias" (typing/patterns.ml[114,3482+29]..[114,3482+39])
                        Some
                          expression (typing/patterns.ml[114,3482+40]..[114,3482+52])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[114,3482+41]..[114,3482+42])
                                Pexp_ident "p" (typing/patterns.ml[114,3482+41]..[114,3482+42])
                              expression (typing/patterns.ml[114,3482+44]..[114,3482+46])
                                Pexp_ident "id" (typing/patterns.ml[114,3482+44]..[114,3482+46])
                              expression (typing/patterns.ml[114,3482+48]..[114,3482+51])
                                Pexp_ident "str" (typing/patterns.ml[114,3482+48]..[114,3482+51])
                            ]
                    <case>
                      pattern (typing/patterns.ml[115,3535+6]..[115,3535+19])
                        Ppat_variant "Constant"
                        Some
                          pattern (typing/patterns.ml[115,3535+16]..[115,3535+19])
                            Ppat_var "cst" (typing/patterns.ml[115,3535+16]..[115,3535+19])
                      expression (typing/patterns.ml[115,3535+23]..[115,3535+40])
                        Pexp_construct "Tpat_constant" (typing/patterns.ml[115,3535+23]..[115,3535+36])
                        Some
                          expression (typing/patterns.ml[115,3535+37]..[115,3535+40])
                            Pexp_ident "cst" (typing/patterns.ml[115,3535+37]..[115,3535+40])
                    <case>
                      pattern (typing/patterns.ml[116,3576+6]..[116,3576+15])
                        Ppat_variant "Tuple"
                        Some
                          pattern (typing/patterns.ml[116,3576+13]..[116,3576+15])
                            Ppat_var "ps" (typing/patterns.ml[116,3576+13]..[116,3576+15])
                      expression (typing/patterns.ml[116,3576+19]..[116,3576+32])
                        Pexp_construct "Tpat_tuple" (typing/patterns.ml[116,3576+19]..[116,3576+29])
                        Some
                          expression (typing/patterns.ml[116,3576+30]..[116,3576+32])
                            Pexp_ident "ps" (typing/patterns.ml[116,3576+30]..[116,3576+32])
                    <case>
                      pattern (typing/patterns.ml[117,3609+6]..[117,3609+40])
                        Ppat_variant "Construct"
                        Some
                          pattern (typing/patterns.ml[117,3609+17]..[117,3609+40])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[117,3609+18]..[117,3609+22])
                                Ppat_var "cstr" (typing/patterns.ml[117,3609+18]..[117,3609+22])
                              pattern (typing/patterns.ml[117,3609+24]..[117,3609+33])
                                Ppat_var "cst_descr" (typing/patterns.ml[117,3609+24]..[117,3609+33])
                              pattern (typing/patterns.ml[117,3609+35]..[117,3609+39])
                                Ppat_var "args" (typing/patterns.ml[117,3609+35]..[117,3609+39])
                            ]
                      expression (typing/patterns.ml[118,3653+7]..[118,3653+51])
                        Pexp_construct "Tpat_construct" (typing/patterns.ml[118,3653+7]..[118,3653+21])
                        Some
                          expression (typing/patterns.ml[118,3653+22]..[118,3653+51])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[118,3653+23]..[118,3653+27])
                                Pexp_ident "cstr" (typing/patterns.ml[118,3653+23]..[118,3653+27])
                              expression (typing/patterns.ml[118,3653+29]..[118,3653+38])
                                Pexp_ident "cst_descr" (typing/patterns.ml[118,3653+29]..[118,3653+38])
                              expression (typing/patterns.ml[118,3653+40]..[118,3653+44])
                                Pexp_ident "args" (typing/patterns.ml[118,3653+40]..[118,3653+44])
                              expression (typing/patterns.ml[118,3653+46]..[118,3653+50])
                                Pexp_construct "None" (typing/patterns.ml[118,3653+46]..[118,3653+50])
                                None
                            ]
                    <case>
                      pattern (typing/patterns.ml[119,3705+6]..[119,3705+36])
                        Ppat_variant "Variant"
                        Some
                          pattern (typing/patterns.ml[119,3705+15]..[119,3705+36])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[119,3705+16]..[119,3705+20])
                                Ppat_var "cstr" (typing/patterns.ml[119,3705+16]..[119,3705+20])
                              pattern (typing/patterns.ml[119,3705+22]..[119,3705+25])
                                Ppat_var "arg" (typing/patterns.ml[119,3705+22]..[119,3705+25])
                              pattern (typing/patterns.ml[119,3705+27]..[119,3705+35])
                                Ppat_var "row_desc" (typing/patterns.ml[119,3705+27]..[119,3705+35])
                            ]
                      expression (typing/patterns.ml[120,3745+7]..[120,3745+41])
                        Pexp_construct "Tpat_variant" (typing/patterns.ml[120,3745+7]..[120,3745+19])
                        Some
                          expression (typing/patterns.ml[120,3745+20]..[120,3745+41])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[120,3745+21]..[120,3745+25])
                                Pexp_ident "cstr" (typing/patterns.ml[120,3745+21]..[120,3745+25])
                              expression (typing/patterns.ml[120,3745+27]..[120,3745+30])
                                Pexp_ident "arg" (typing/patterns.ml[120,3745+27]..[120,3745+30])
                              expression (typing/patterns.ml[120,3745+32]..[120,3745+40])
                                Pexp_ident "row_desc" (typing/patterns.ml[120,3745+32]..[120,3745+40])
                            ]
                    <case>
                      pattern (typing/patterns.ml[121,3787+6]..[121,3787+30])
                        Ppat_variant "Record"
                        Some
                          pattern (typing/patterns.ml[121,3787+14]..[121,3787+30])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[121,3787+15]..[121,3787+21])
                                Ppat_var "fields" (typing/patterns.ml[121,3787+15]..[121,3787+21])
                              pattern (typing/patterns.ml[121,3787+23]..[121,3787+29])
                                Ppat_var "closed" (typing/patterns.ml[121,3787+23]..[121,3787+29])
                            ]
                      expression (typing/patterns.ml[122,3821+7]..[122,3821+35])
                        Pexp_construct "Tpat_record" (typing/patterns.ml[122,3821+7]..[122,3821+18])
                        Some
                          expression (typing/patterns.ml[122,3821+19]..[122,3821+35])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[122,3821+20]..[122,3821+26])
                                Pexp_ident "fields" (typing/patterns.ml[122,3821+20]..[122,3821+26])
                              expression (typing/patterns.ml[122,3821+28]..[122,3821+34])
                                Pexp_ident "closed" (typing/patterns.ml[122,3821+28]..[122,3821+34])
                            ]
                    <case>
                      pattern (typing/patterns.ml[123,3857+6]..[123,3857+15])
                        Ppat_variant "Array"
                        Some
                          pattern (typing/patterns.ml[123,3857+13]..[123,3857+15])
                            Ppat_var "ps" (typing/patterns.ml[123,3857+13]..[123,3857+15])
                      expression (typing/patterns.ml[123,3857+19]..[123,3857+32])
                        Pexp_construct "Tpat_array" (typing/patterns.ml[123,3857+19]..[123,3857+29])
                        Some
                          expression (typing/patterns.ml[123,3857+30]..[123,3857+32])
                            Pexp_ident "ps" (typing/patterns.ml[123,3857+30]..[123,3857+32])
                    <case>
                      pattern (typing/patterns.ml[124,3890+6]..[124,3890+26])
                        Ppat_variant "Or"
                        Some
                          pattern (typing/patterns.ml[124,3890+10]..[124,3890+26])
                            Ppat_tuple
                            [
                              pattern (typing/patterns.ml[124,3890+11]..[124,3890+12])
                                Ppat_var "p" (typing/patterns.ml[124,3890+11]..[124,3890+12])
                              pattern (typing/patterns.ml[124,3890+14]..[124,3890+15])
                                Ppat_var "q" (typing/patterns.ml[124,3890+14]..[124,3890+15])
                              pattern (typing/patterns.ml[124,3890+17]..[124,3890+25])
                                Ppat_var "row_desc" (typing/patterns.ml[124,3890+17]..[124,3890+25])
                            ]
                      expression (typing/patterns.ml[124,3890+30]..[124,3890+54])
                        Pexp_construct "Tpat_or" (typing/patterns.ml[124,3890+30]..[124,3890+37])
                        Some
                          expression (typing/patterns.ml[124,3890+38]..[124,3890+54])
                            Pexp_tuple
                            [
                              expression (typing/patterns.ml[124,3890+39]..[124,3890+40])
                                Pexp_ident "p" (typing/patterns.ml[124,3890+39]..[124,3890+40])
                              expression (typing/patterns.ml[124,3890+42]..[124,3890+43])
                                Pexp_ident "q" (typing/patterns.ml[124,3890+42]..[124,3890+43])
                              expression (typing/patterns.ml[124,3890+45]..[124,3890+53])
                                Pexp_ident "row_desc" (typing/patterns.ml[124,3890+45]..[124,3890+53])
                            ]
                    <case>
                      pattern (typing/patterns.ml[125,3945+6]..[125,3945+13])
                        Ppat_variant "Lazy"
                        Some
                          pattern (typing/patterns.ml[125,3945+12]..[125,3945+13])
                            Ppat_var "p" (typing/patterns.ml[125,3945+12]..[125,3945+13])
                      expression (typing/patterns.ml[125,3945+17]..[125,3945+28])
                        Pexp_construct "Tpat_lazy" (typing/patterns.ml[125,3945+17]..[125,3945+26])
                        Some
                          expression (typing/patterns.ml[125,3945+27]..[125,3945+28])
                            Pexp_ident "p" (typing/patterns.ml[125,3945+27]..[125,3945+28])
                  ]
            ]
          structure_item (typing/patterns.ml[127,3975+2]..[128,4011+47])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/patterns.ml[127,3975+6]..[127,3975+11])
                  Ppat_var "erase" (typing/patterns.ml[127,3975+6]..[127,3975+11])
                expression (typing/patterns.ml[127,3975+12]..[128,4011+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/patterns.ml[127,3975+12]..[127,3975+13])
                    Ppat_var "p" (typing/patterns.ml[127,3975+12]..[127,3975+13])
                  expression (typing/patterns.ml[127,3975+14]..[128,4011+47])
                    Pexp_constraint
                    expression (typing/patterns.ml[128,4011+4]..[128,4011+47])
                      Pexp_record
                      [
                        "pat_desc" (typing/patterns.ml[128,4011+13]..[128,4011+21])
                          expression (typing/patterns.ml[128,4011+24]..[128,4011+45])
                            Pexp_apply
                            expression (typing/patterns.ml[128,4011+24]..[128,4011+34])
                              Pexp_ident "erase_desc" (typing/patterns.ml[128,4011+24]..[128,4011+34])
                            [
                              <arg>
                              Nolabel
                                expression (typing/patterns.ml[128,4011+35]..[128,4011+45])
                                  Pexp_field
                                  expression (typing/patterns.ml[128,4011+35]..[128,4011+36])
                                    Pexp_ident "p" (typing/patterns.ml[128,4011+35]..[128,4011+36])
                                  "pat_desc" (typing/patterns.ml[128,4011+37]..[128,4011+45])
                            ]
                      ]
                      Some
                        expression (typing/patterns.ml[128,4011+6]..[128,4011+7])
                          Pexp_ident "p" (typing/patterns.ml[128,4011+6]..[128,4011+7])
                    core_type (typing/patterns.ml[127,3975+16]..[127,3975+33])
                      Ptyp_constr "Typedtree.pattern" (typing/patterns.ml[127,3975+16]..[127,3975+33])
                      []
            ]
          structure_item (typing/patterns.ml[130,4060+2]..[134,4234+61])
            Pstr_value Rec
            [
              <def>
                pattern (typing/patterns.ml[130,4060+10]..[130,4060+20])
                  Ppat_var "strip_vars" (typing/patterns.ml[130,4060+10]..[130,4060+20])
                expression (typing/patterns.ml[130,4060+21]..[134,4234+61]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/patterns.ml[130,4060+21]..[130,4060+34])
                    Ppat_constraint
                    pattern (typing/patterns.ml[130,4060+22]..[130,4060+23])
                      Ppat_var "p" (typing/patterns.ml[130,4060+22]..[130,4060+23])
                    core_type (typing/patterns.ml[130,4060+26]..[130,4060+33])
                      Ptyp_constr "pattern" (typing/patterns.ml[130,4060+26]..[130,4060+33])
                      []
                  expression (typing/patterns.ml[130,4060+35]..[134,4234+61])
                    Pexp_constraint
                    expression (typing/patterns.ml[131,4119+4]..[134,4234+61])
                      Pexp_match
                      expression (typing/patterns.ml[131,4119+10]..[131,4119+20])
                        Pexp_field
                        expression (typing/patterns.ml[131,4119+10]..[131,4119+11])
                          Pexp_ident "p" (typing/patterns.ml[131,4119+10]..[131,4119+11])
                        "pat_desc" (typing/patterns.ml[131,4119+12]..[131,4119+20])
                      [
                        <case>
                          pattern (typing/patterns.ml[132,4145+6]..[132,4145+22])
                            Ppat_variant "Alias"
                            Some
                              pattern (typing/patterns.ml[132,4145+13]..[132,4145+22])
                                Ppat_tuple
                                [
                                  pattern (typing/patterns.ml[132,4145+14]..[132,4145+15])
                                    Ppat_var "p" (typing/patterns.ml[132,4145+14]..[132,4145+15])
                                  pattern (typing/patterns.ml[132,4145+17]..[132,4145+18])
                                    Ppat_any
                                  pattern (typing/patterns.ml[132,4145+20]..[132,4145+21])
                                    Ppat_any
                                ]
                          expression (typing/patterns.ml[132,4145+26]..[132,4145+45])
                            Pexp_apply
                            expression (typing/patterns.ml[132,4145+26]..[132,4145+36])
                              Pexp_ident "strip_vars" (typing/patterns.ml[132,4145+26]..[132,4145+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/patterns.ml[132,4145+37]..[132,4145+45])
                                  Pexp_apply
                                  expression (typing/patterns.ml[132,4145+38]..[132,4145+42])
                                    Pexp_ident "view" (typing/patterns.ml[132,4145+38]..[132,4145+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/patterns.ml[132,4145+43]..[132,4145+44])
                                        Pexp_ident "p" (typing/patterns.ml[132,4145+43]..[132,4145+44])
                                  ]
                            ]
                        <case>
                          pattern (typing/patterns.ml[133,4191+6]..[133,4191+12])
                            Ppat_variant "Var"
                            Some
                              pattern (typing/patterns.ml[133,4191+11]..[133,4191+12])
                                Ppat_any
                          expression (typing/patterns.ml[133,4191+16]..[133,4191+42])
                            Pexp_record
                            [
                              "pat_desc" (typing/patterns.ml[133,4191+25]..[133,4191+33])
                                expression (typing/patterns.ml[133,4191+36]..[133,4191+40])
                                  Pexp_variant "Any"
                                  None
                            ]
                            Some
                              expression (typing/patterns.ml[133,4191+18]..[133,4191+19])
                                Pexp_ident "p" (typing/patterns.ml[133,4191+18]..[133,4191+19])
                        <case>
                          pattern (typing/patterns.ml[134,4234+6]..[134,4234+31])
                            Ppat_alias "view" (typing/patterns.ml[134,4234+27]..[134,4234+31])
                            pattern (typing/patterns.ml[134,4234+6]..[134,4234+23])
                              Ppat_type
                              "Half_simple.view" (typing/patterns.ml[134,4234+7]..[134,4234+23])
                          expression (typing/patterns.ml[134,4234+35]..[134,4234+61])
                            Pexp_record
                            [
                              "pat_desc" (typing/patterns.ml[134,4234+44]..[134,4234+52])
                                expression (typing/patterns.ml[134,4234+55]..[134,4234+59])
                                  Pexp_ident "view" (typing/patterns.ml[134,4234+55]..[134,4234+59])
                            ]
                            Some
                              expression (typing/patterns.ml[134,4234+37]..[134,4234+38])
                                Pexp_ident "p" (typing/patterns.ml[134,4234+37]..[134,4234+38])
                      ]
                    core_type (typing/patterns.ml[130,4060+37]..[130,4060+56])
                      Ptyp_constr "Half_simple.pattern" (typing/patterns.ml[130,4060+37]..[130,4060+56])
                      []
            ]
        ]
  structure_item (typing/patterns.ml[139,4349+0]..[254,7785+3])
    Pstr_module
    "Head" (typing/patterns.ml[139,4349+7]..[139,4349+11])
      module_expr (typing/patterns.ml[139,4349+12]..[254,7785+3])
        Pmod_constraint
        module_expr (typing/patterns.ml[164,4991+6]..[254,7785+3])
          Pmod_structure
          [
            structure_item (typing/patterns.ml[165,5004+2]..[178,5424+10])
              Pstr_type Rec
              [
                type_declaration "desc" (typing/patterns.ml[165,5004+7]..[165,5004+11]) (typing/patterns.ml[165,5004+2]..[178,5424+10])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (typing/patterns.ml[166,5018+4]..[166,5018+9])
                          "Any" (typing/patterns.ml[166,5018+6]..[166,5018+9])
                          []
                          None
                        (typing/patterns.ml[167,5028+4]..[167,5028+42])
                          "Construct" (typing/patterns.ml[167,5028+6]..[167,5028+15])
                          [
                            core_type (typing/patterns.ml[167,5028+19]..[167,5028+42])
                              Ptyp_constr "constructor_description" (typing/patterns.ml[167,5028+19]..[167,5028+42])
                              []
                          ]
                          None
                        (typing/patterns.ml[168,5071+4]..[168,5071+26])
                          "Constant" (typing/patterns.ml[168,5071+6]..[168,5071+14])
                          [
                            core_type (typing/patterns.ml[168,5071+18]..[168,5071+26])
                              Ptyp_constr "constant" (typing/patterns.ml[168,5071+18]..[168,5071+26])
                              []
                          ]
                          None
                        (typing/patterns.ml[169,5098+4]..[169,5098+18])
                          "Tuple" (typing/patterns.ml[169,5098+6]..[169,5098+11])
                          [
                            core_type (typing/patterns.ml[169,5098+15]..[169,5098+18])
                              Ptyp_constr "int" (typing/patterns.ml[169,5098+15]..[169,5098+18])
                              []
                          ]
                          None
                        (typing/patterns.ml[170,5117+4]..[170,5117+38])
                          "Record" (typing/patterns.ml[170,5117+6]..[170,5117+12])
                          [
                            core_type (typing/patterns.ml[170,5117+16]..[170,5117+38])
                              Ptyp_constr "list" (typing/patterns.ml[170,5117+34]..[170,5117+38])
                              [
                                core_type (typing/patterns.ml[170,5117+16]..[170,5117+33])
                                  Ptyp_constr "label_description" (typing/patterns.ml[170,5117+16]..[170,5117+33])
                                  []
                              ]
                          ]
                          None
                        (typing/patterns.ml[171,5156+4]..[174,5244+40])
                          "Variant" (typing/patterns.ml[171,5156+6]..[171,5156+13])
                          [
                            (typing/patterns.ml[172,5173+10]..[172,5173+21])
                              Immutable
                              "tag" (typing/patterns.ml[172,5173+10]..[172,5173+13])                              core_type (typing/patterns.ml[172,5173+15]..[172,5173+20])
                                Ptyp_constr "label" (typing/patterns.ml[172,5173+15]..[172,5173+20])
                                []
                            (typing/patterns.ml[172,5173+22]..[172,5173+36])
                              Immutable
                              "has_arg" (typing/patterns.ml[172,5173+22]..[172,5173+29])                              core_type (typing/patterns.ml[172,5173+31]..[172,5173+35])
                                Ptyp_constr "bool" (typing/patterns.ml[172,5173+31]..[172,5173+35])
                                []
                            (typing/patterns.ml[173,5210+10]..[173,5210+33])
                              Immutable
                              "cstr_row" (typing/patterns.ml[173,5210+10]..[173,5210+18])                              core_type (typing/patterns.ml[173,5210+20]..[173,5210+32])
                                Ptyp_constr "ref" (typing/patterns.ml[173,5210+29]..[173,5210+32])
                                [
                                  core_type (typing/patterns.ml[173,5210+20]..[173,5210+28])
                                    Ptyp_constr "row_desc" (typing/patterns.ml[173,5210+20]..[173,5210+28])
                                    []
                                ]
                            (typing/patterns.ml[174,5244+10]..[174,5244+38])
                              Immutable
                              "type_row" (typing/patterns.ml[174,5244+10]..[174,5244+18])                              core_type (typing/patterns.ml[174,5244+21]..[174,5244+37])
                                Ptyp_arrow
                                Nolabel
                                core_type (typing/patterns.ml[174,5244+21]..[174,5244+25])
                                  Ptyp_constr "unit" (typing/patterns.ml[174,5244+21]..[174,5244+25])
                                  []
                                core_type (typing/patterns.ml[174,5244+29]..[174,5244+37])
                                  Ptyp_constr "row_desc" (typing/patterns.ml[174,5244+29]..[174,5244+37])
                                  []
                          ]
                          None
                        (typing/patterns.ml[177,5405+4]..[177,5405+18])
                          "Array" (typing/patterns.ml[177,5405+6]..[177,5405+11])
                          [
                            core_type (typing/patterns.ml[177,5405+15]..[177,5405+18])
                              Ptyp_constr "int" (typing/patterns.ml[177,5405+15]..[177,5405+18])
                              []
                          ]
                          None
                        (typing/patterns.ml[178,5424+4]..[178,5424+10])
                          "Lazy" (typing/patterns.ml[178,5424+6]..[178,5424+10])
                          []
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (typing/patterns.ml[180,5436+2]..[180,5436+28])
              Pstr_type Rec
              [
                type_declaration "t" (typing/patterns.ml[180,5436+7]..[180,5436+8]) (typing/patterns.ml[180,5436+2]..[180,5436+28])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/patterns.ml[180,5436+11]..[180,5436+28])
                        Ptyp_constr "pattern_data" (typing/patterns.ml[180,5436+16]..[180,5436+28])
                        [
                          core_type (typing/patterns.ml[180,5436+11]..[180,5436+15])
                            Ptyp_constr "desc" (typing/patterns.ml[180,5436+11]..[180,5436+15])
                            []
                        ]
              ]
            structure_item (typing/patterns.ml[182,5466+2]..[212,6517+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/patterns.ml[182,5466+6]..[182,5466+17])
                    Ppat_var "deconstruct" (typing/patterns.ml[182,5466+6]..[182,5466+17])
                  expression (typing/patterns.ml[182,5466+18]..[212,6517+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/patterns.ml[182,5466+18]..[182,5466+38])
                      Ppat_constraint
                      pattern (typing/patterns.ml[182,5466+19]..[182,5466+20])
                        Ppat_var "q" (typing/patterns.ml[182,5466+19]..[182,5466+20])
                      core_type (typing/patterns.ml[182,5466+23]..[182,5466+37])
                        Ptyp_constr "Simple.pattern" (typing/patterns.ml[182,5466+23]..[182,5466+37])
                        []
                    expression (typing/patterns.ml[183,5507+4]..[212,6517+36])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/patterns.ml[183,5507+8]..[183,5507+24])
                            Ppat_var "deconstruct_desc" (typing/patterns.ml[183,5507+8]..[183,5507+24])
                          expression (typing/patterns.ml[183,5507+27]..[209,6438+19])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/patterns.ml[184,5543+8]..[184,5543+12])
                                  Ppat_variant "Any"
                                  None
                                expression (typing/patterns.ml[184,5543+16]..[184,5543+23])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[184,5543+16]..[184,5543+19])
                                      Pexp_construct "Any" (typing/patterns.ml[184,5543+16]..[184,5543+19])
                                      None
                                    expression (typing/patterns.ml[184,5543+21]..[184,5543+23])
                                      Pexp_construct "[]" (typing/patterns.ml[184,5543+21]..[184,5543+23])
                                      None
                                  ]
                              <case>
                                pattern (typing/patterns.ml[185,5567+8]..[185,5567+19])
                                  Ppat_variant "Constant"
                                  Some
                                    pattern (typing/patterns.ml[185,5567+18]..[185,5567+19])
                                      Ppat_var "c" (typing/patterns.ml[185,5567+18]..[185,5567+19])
                                expression (typing/patterns.ml[185,5567+23]..[185,5567+37])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[185,5567+23]..[185,5567+33])
                                      Pexp_construct "Constant" (typing/patterns.ml[185,5567+23]..[185,5567+31])
                                      Some
                                        expression (typing/patterns.ml[185,5567+32]..[185,5567+33])
                                          Pexp_ident "c" (typing/patterns.ml[185,5567+32]..[185,5567+33])
                                    expression (typing/patterns.ml[185,5567+35]..[185,5567+37])
                                      Pexp_construct "[]" (typing/patterns.ml[185,5567+35]..[185,5567+37])
                                      None
                                  ]
                              <case>
                                pattern (typing/patterns.ml[186,5605+8]..[186,5605+19])
                                  Ppat_variant "Tuple"
                                  Some
                                    pattern (typing/patterns.ml[186,5605+15]..[186,5605+19])
                                      Ppat_var "args" (typing/patterns.ml[186,5605+15]..[186,5605+19])
                                expression (typing/patterns.ml[187,5628+10]..[187,5628+40])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[187,5628+10]..[187,5628+34])
                                      Pexp_construct "Tuple" (typing/patterns.ml[187,5628+10]..[187,5628+15])
                                      Some
                                        expression (typing/patterns.ml[187,5628+16]..[187,5628+34])
                                          Pexp_apply
                                          expression (typing/patterns.ml[187,5628+17]..[187,5628+28])
                                            Pexp_ident "List.length" (typing/patterns.ml[187,5628+17]..[187,5628+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[187,5628+29]..[187,5628+33])
                                                Pexp_ident "args" (typing/patterns.ml[187,5628+29]..[187,5628+33])
                                          ]
                                    expression (typing/patterns.ml[187,5628+36]..[187,5628+40])
                                      Pexp_ident "args" (typing/patterns.ml[187,5628+36]..[187,5628+40])
                                  ]
                              <case>
                                pattern (typing/patterns.ml[188,5669+8]..[188,5669+31])
                                  Ppat_variant "Construct"
                                  Some
                                    pattern (typing/patterns.ml[188,5669+19]..[188,5669+31])
                                      Ppat_tuple
                                      [
                                        pattern (typing/patterns.ml[188,5669+20]..[188,5669+21])
                                          Ppat_any
                                        pattern (typing/patterns.ml[188,5669+23]..[188,5669+24])
                                          Ppat_var "c" (typing/patterns.ml[188,5669+23]..[188,5669+24])
                                        pattern (typing/patterns.ml[188,5669+26]..[188,5669+30])
                                          Ppat_var "args" (typing/patterns.ml[188,5669+26]..[188,5669+30])
                                      ]
                                expression (typing/patterns.ml[189,5704+10]..[189,5704+27])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[189,5704+10]..[189,5704+21])
                                      Pexp_construct "Construct" (typing/patterns.ml[189,5704+10]..[189,5704+19])
                                      Some
                                        expression (typing/patterns.ml[189,5704+20]..[189,5704+21])
                                          Pexp_ident "c" (typing/patterns.ml[189,5704+20]..[189,5704+21])
                                    expression (typing/patterns.ml[189,5704+23]..[189,5704+27])
                                      Pexp_ident "args" (typing/patterns.ml[189,5704+23]..[189,5704+27])
                                  ]
                              <case>
                                pattern (typing/patterns.ml[190,5732+8]..[190,5732+37])
                                  Ppat_variant "Variant"
                                  Some
                                    pattern (typing/patterns.ml[190,5732+17]..[190,5732+37])
                                      Ppat_tuple
                                      [
                                        pattern (typing/patterns.ml[190,5732+18]..[190,5732+21])
                                          Ppat_var "tag" (typing/patterns.ml[190,5732+18]..[190,5732+21])
                                        pattern (typing/patterns.ml[190,5732+23]..[190,5732+26])
                                          Ppat_var "arg" (typing/patterns.ml[190,5732+23]..[190,5732+26])
                                        pattern (typing/patterns.ml[190,5732+28]..[190,5732+36])
                                          Ppat_var "cstr_row" (typing/patterns.ml[190,5732+28]..[190,5732+36])
                                      ]
                                expression (typing/patterns.ml[191,5773+10]..[201,6114+58])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/patterns.ml[191,5773+14]..[191,5773+27])
                                        Ppat_tuple
                                        [
                                          pattern (typing/patterns.ml[191,5773+14]..[191,5773+21])
                                            Ppat_var "has_arg" (typing/patterns.ml[191,5773+14]..[191,5773+21])
                                          pattern (typing/patterns.ml[191,5773+23]..[191,5773+27])
                                            Ppat_var "pats" (typing/patterns.ml[191,5773+23]..[191,5773+27])
                                        ]
                                      expression (typing/patterns.ml[192,5803+12]..[194,5862+33])
                                        Pexp_match
                                        expression (typing/patterns.ml[192,5803+18]..[192,5803+21])
                                          Pexp_ident "arg" (typing/patterns.ml[192,5803+18]..[192,5803+21])
                                        [
                                          <case>
                                            pattern (typing/patterns.ml[193,5830+14]..[193,5830+18])
                                              Ppat_construct "None" (typing/patterns.ml[193,5830+14]..[193,5830+18])
                                              None
                                            expression (typing/patterns.ml[193,5830+22]..[193,5830+31])
                                              Pexp_tuple
                                              [
                                                expression (typing/patterns.ml[193,5830+22]..[193,5830+27])
                                                  Pexp_construct "false" (typing/patterns.ml[193,5830+22]..[193,5830+27])
                                                  None
                                                expression (typing/patterns.ml[193,5830+29]..[193,5830+31])
                                                  Pexp_construct "[]" (typing/patterns.ml[193,5830+29]..[193,5830+31])
                                                  None
                                              ]
                                          <case>
                                            pattern (typing/patterns.ml[194,5862+14]..[194,5862+20])
                                              Ppat_construct "Some" (typing/patterns.ml[194,5862+14]..[194,5862+18])
                                              Some
                                                []
                                                pattern (typing/patterns.ml[194,5862+19]..[194,5862+20])
                                                  Ppat_var "a" (typing/patterns.ml[194,5862+19]..[194,5862+20])
                                            expression (typing/patterns.ml[194,5862+24]..[194,5862+33])
                                              Pexp_tuple
                                              [
                                                expression (typing/patterns.ml[194,5862+24]..[194,5862+28])
                                                  Pexp_construct "true" (typing/patterns.ml[194,5862+24]..[194,5862+28])
                                                  None
                                                expression (typing/patterns.ml[194,5862+30]..[194,5862+33])
                                                  Pexp_construct "::" (typing/patterns.ml[194,5862+31]..[194,5862+33]) ghost
                                                  Some
                                                    expression (typing/patterns.ml[194,5862+31]..[194,5862+33]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/patterns.ml[194,5862+31]..[194,5862+32])
                                                          Pexp_ident "a" (typing/patterns.ml[194,5862+31]..[194,5862+32])
                                                        expression (typing/patterns.ml[194,5862+32]..[194,5862+33]) ghost
                                                          Pexp_construct "[]" (typing/patterns.ml[194,5862+32]..[194,5862+33]) ghost
                                                          None
                                                      ]
                                              ]
                                        ]
                                  ]
                                  expression (typing/patterns.ml[196,5909+10]..[201,6114+58])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/patterns.ml[196,5909+14]..[196,5909+22])
                                          Ppat_var "type_row" (typing/patterns.ml[196,5909+14]..[196,5909+22])
                                        expression (typing/patterns.ml[196,5909+23]..[199,6069+31]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/patterns.ml[196,5909+23]..[196,5909+25])
                                            Ppat_construct "()" (typing/patterns.ml[196,5909+23]..[196,5909+25])
                                            None
                                          expression (typing/patterns.ml[197,5937+12]..[199,6069+31])
                                            Pexp_match
                                            expression (typing/patterns.ml[197,5937+18]..[197,5937+67])
                                              Pexp_apply
                                              expression (typing/patterns.ml[197,5937+18]..[197,5937+26])
                                                Pexp_ident "get_desc" (typing/patterns.ml[197,5937+18]..[197,5937+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/patterns.ml[197,5937+27]..[197,5937+67])
                                                    Pexp_apply
                                                    expression (typing/patterns.ml[197,5937+28]..[197,5937+45])
                                                      Pexp_ident "Ctype.expand_head" (typing/patterns.ml[197,5937+28]..[197,5937+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/patterns.ml[197,5937+46]..[197,5937+55])
                                                          Pexp_field
                                                          expression (typing/patterns.ml[197,5937+46]..[197,5937+47])
                                                            Pexp_ident "q" (typing/patterns.ml[197,5937+46]..[197,5937+47])
                                                          "pat_env" (typing/patterns.ml[197,5937+48]..[197,5937+55])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/patterns.ml[197,5937+56]..[197,5937+66])
                                                          Pexp_field
                                                          expression (typing/patterns.ml[197,5937+56]..[197,5937+57])
                                                            Pexp_ident "q" (typing/patterns.ml[197,5937+56]..[197,5937+57])
                                                          "pat_type" (typing/patterns.ml[197,5937+58]..[197,5937+66])
                                                    ]
                                              ]
                                            [
                                              <case>
                                                pattern (typing/patterns.ml[198,6010+14]..[198,6010+31])
                                                  Ppat_construct "Tvariant" (typing/patterns.ml[198,6010+14]..[198,6010+22])
                                                  Some
                                                    []
                                                    pattern (typing/patterns.ml[198,6010+23]..[198,6010+31])
                                                      Ppat_var "type_row" (typing/patterns.ml[198,6010+23]..[198,6010+31])
                                                expression (typing/patterns.ml[198,6010+35]..[198,6010+58])
                                                  Pexp_apply
                                                  expression (typing/patterns.ml[198,6010+35]..[198,6010+49])
                                                    Pexp_ident "Btype.row_repr" (typing/patterns.ml[198,6010+35]..[198,6010+49])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/patterns.ml[198,6010+50]..[198,6010+58])
                                                        Pexp_ident "type_row" (typing/patterns.ml[198,6010+50]..[198,6010+58])
                                                  ]
                                              <case>
                                                pattern (typing/patterns.ml[199,6069+14]..[199,6069+15])
                                                  Ppat_any
                                                expression (typing/patterns.ml[199,6069+19]..[199,6069+31])
                                                  Pexp_assert
                                                  expression (typing/patterns.ml[199,6069+26]..[199,6069+31])
                                                    Pexp_construct "false" (typing/patterns.ml[199,6069+26]..[199,6069+31])
                                                    None
                                            ]
                                    ]
                                    expression (typing/patterns.ml[201,6114+10]..[201,6114+58])
                                      Pexp_tuple
                                      [
                                        expression (typing/patterns.ml[201,6114+10]..[201,6114+52])
                                          Pexp_construct "Variant" (typing/patterns.ml[201,6114+10]..[201,6114+17])
                                          Some
                                            expression (typing/patterns.ml[201,6114+18]..[201,6114+52])
                                              Pexp_record
                                              [
                                                "tag" (typing/patterns.ml[201,6114+19]..[201,6114+22]) ghost
                                                  expression (typing/patterns.ml[201,6114+19]..[201,6114+22])
                                                    Pexp_ident "tag" (typing/patterns.ml[201,6114+19]..[201,6114+22])
                                                "has_arg" (typing/patterns.ml[201,6114+24]..[201,6114+31]) ghost
                                                  expression (typing/patterns.ml[201,6114+24]..[201,6114+31])
                                                    Pexp_ident "has_arg" (typing/patterns.ml[201,6114+24]..[201,6114+31])
                                                "cstr_row" (typing/patterns.ml[201,6114+33]..[201,6114+41]) ghost
                                                  expression (typing/patterns.ml[201,6114+33]..[201,6114+41])
                                                    Pexp_ident "cstr_row" (typing/patterns.ml[201,6114+33]..[201,6114+41])
                                                "type_row" (typing/patterns.ml[201,6114+43]..[201,6114+51]) ghost
                                                  expression (typing/patterns.ml[201,6114+43]..[201,6114+51])
                                                    Pexp_ident "type_row" (typing/patterns.ml[201,6114+43]..[201,6114+51])
                                              ]
                                              None
                                        expression (typing/patterns.ml[201,6114+54]..[201,6114+58])
                                          Pexp_ident "pats" (typing/patterns.ml[201,6114+54]..[201,6114+58])
                                      ]
                              <case>
                                pattern (typing/patterns.ml[202,6173+8]..[202,6173+19])
                                  Ppat_variant "Array"
                                  Some
                                    pattern (typing/patterns.ml[202,6173+15]..[202,6173+19])
                                      Ppat_var "args" (typing/patterns.ml[202,6173+15]..[202,6173+19])
                                expression (typing/patterns.ml[203,6196+10]..[203,6196+40])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[203,6196+10]..[203,6196+34])
                                      Pexp_construct "Array" (typing/patterns.ml[203,6196+10]..[203,6196+15])
                                      Some
                                        expression (typing/patterns.ml[203,6196+16]..[203,6196+34])
                                          Pexp_apply
                                          expression (typing/patterns.ml[203,6196+17]..[203,6196+28])
                                            Pexp_ident "List.length" (typing/patterns.ml[203,6196+17]..[203,6196+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[203,6196+29]..[203,6196+33])
                                                Pexp_ident "args" (typing/patterns.ml[203,6196+29]..[203,6196+33])
                                          ]
                                    expression (typing/patterns.ml[203,6196+36]..[203,6196+40])
                                      Pexp_ident "args" (typing/patterns.ml[203,6196+36]..[203,6196+40])
                                  ]
                              <case>
                                pattern (typing/patterns.ml[204,6237+8]..[204,6237+26])
                                  Ppat_variant "Record"
                                  Some
                                    pattern (typing/patterns.ml[204,6237+16]..[204,6237+26])
                                      Ppat_tuple
                                      [
                                        pattern (typing/patterns.ml[204,6237+17]..[204,6237+22])
                                          Ppat_var "largs" (typing/patterns.ml[204,6237+17]..[204,6237+22])
                                        pattern (typing/patterns.ml[204,6237+24]..[204,6237+25])
                                          Ppat_any
                                      ]
                                expression (typing/patterns.ml[205,6267+10]..[207,6391+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/patterns.ml[205,6267+14]..[205,6267+18])
                                        Ppat_var "lbls" (typing/patterns.ml[205,6267+14]..[205,6267+18])
                                      expression (typing/patterns.ml[205,6267+21]..[205,6267+58])
                                        Pexp_apply
                                        expression (typing/patterns.ml[205,6267+21]..[205,6267+29])
                                          Pexp_ident "List.map" (typing/patterns.ml[205,6267+21]..[205,6267+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/patterns.ml[205,6267+30]..[205,6267+52])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/patterns.ml[205,6267+35]..[205,6267+44])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/patterns.ml[205,6267+36]..[205,6267+37])
                                                    Ppat_any
                                                  pattern (typing/patterns.ml[205,6267+38]..[205,6267+41])
                                                    Ppat_var "lbl" (typing/patterns.ml[205,6267+38]..[205,6267+41])
                                                  pattern (typing/patterns.ml[205,6267+42]..[205,6267+43])
                                                    Ppat_any
                                                ]
                                              expression (typing/patterns.ml[205,6267+48]..[205,6267+51])
                                                Pexp_ident "lbl" (typing/patterns.ml[205,6267+48]..[205,6267+51])
                                          <arg>
                                          Nolabel
                                            expression (typing/patterns.ml[205,6267+53]..[205,6267+58])
                                              Pexp_ident "largs" (typing/patterns.ml[205,6267+53]..[205,6267+58])
                                        ]
                                  ]
                                  expression (typing/patterns.ml[206,6329+10]..[207,6391+27])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/patterns.ml[206,6329+14]..[206,6329+18])
                                          Ppat_var "pats" (typing/patterns.ml[206,6329+14]..[206,6329+18])
                                        expression (typing/patterns.ml[206,6329+21]..[206,6329+58])
                                          Pexp_apply
                                          expression (typing/patterns.ml[206,6329+21]..[206,6329+29])
                                            Pexp_ident "List.map" (typing/patterns.ml[206,6329+21]..[206,6329+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[206,6329+30]..[206,6329+52])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/patterns.ml[206,6329+35]..[206,6329+44])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/patterns.ml[206,6329+36]..[206,6329+37])
                                                      Ppat_any
                                                    pattern (typing/patterns.ml[206,6329+38]..[206,6329+39])
                                                      Ppat_any
                                                    pattern (typing/patterns.ml[206,6329+40]..[206,6329+43])
                                                      Ppat_var "pat" (typing/patterns.ml[206,6329+40]..[206,6329+43])
                                                  ]
                                                expression (typing/patterns.ml[206,6329+48]..[206,6329+51])
                                                  Pexp_ident "pat" (typing/patterns.ml[206,6329+48]..[206,6329+51])
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[206,6329+53]..[206,6329+58])
                                                Pexp_ident "largs" (typing/patterns.ml[206,6329+53]..[206,6329+58])
                                          ]
                                    ]
                                    expression (typing/patterns.ml[207,6391+10]..[207,6391+27])
                                      Pexp_tuple
                                      [
                                        expression (typing/patterns.ml[207,6391+10]..[207,6391+21])
                                          Pexp_construct "Record" (typing/patterns.ml[207,6391+10]..[207,6391+16])
                                          Some
                                            expression (typing/patterns.ml[207,6391+17]..[207,6391+21])
                                              Pexp_ident "lbls" (typing/patterns.ml[207,6391+17]..[207,6391+21])
                                        expression (typing/patterns.ml[207,6391+23]..[207,6391+27])
                                          Pexp_ident "pats" (typing/patterns.ml[207,6391+23]..[207,6391+27])
                                      ]
                              <case>
                                pattern (typing/patterns.ml[208,6419+8]..[208,6419+15])
                                  Ppat_variant "Lazy"
                                  Some
                                    pattern (typing/patterns.ml[208,6419+14]..[208,6419+15])
                                      Ppat_var "p" (typing/patterns.ml[208,6419+14]..[208,6419+15])
                                expression (typing/patterns.ml[209,6438+10]..[209,6438+19])
                                  Pexp_tuple
                                  [
                                    expression (typing/patterns.ml[209,6438+10]..[209,6438+14])
                                      Pexp_construct "Lazy" (typing/patterns.ml[209,6438+10]..[209,6438+14])
                                      None
                                    expression (typing/patterns.ml[209,6438+16]..[209,6438+19])
                                      Pexp_construct "::" (typing/patterns.ml[209,6438+17]..[209,6438+19]) ghost
                                      Some
                                        expression (typing/patterns.ml[209,6438+17]..[209,6438+19]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/patterns.ml[209,6438+17]..[209,6438+18])
                                              Pexp_ident "p" (typing/patterns.ml[209,6438+17]..[209,6438+18])
                                            expression (typing/patterns.ml[209,6438+18]..[209,6438+19]) ghost
                                              Pexp_construct "[]" (typing/patterns.ml[209,6438+18]..[209,6438+19]) ghost
                                              None
                                          ]
                                  ]
                            ]
                      ]
                      expression (typing/patterns.ml[211,6465+4]..[212,6517+36])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/patterns.ml[211,6465+8]..[211,6465+18])
                              Ppat_tuple
                              [
                                pattern (typing/patterns.ml[211,6465+8]..[211,6465+12])
                                  Ppat_var "desc" (typing/patterns.ml[211,6465+8]..[211,6465+12])
                                pattern (typing/patterns.ml[211,6465+14]..[211,6465+18])
                                  Ppat_var "pats" (typing/patterns.ml[211,6465+14]..[211,6465+18])
                              ]
                            expression (typing/patterns.ml[211,6465+21]..[211,6465+48])
                              Pexp_apply
                              expression (typing/patterns.ml[211,6465+21]..[211,6465+37])
                                Pexp_ident "deconstruct_desc" (typing/patterns.ml[211,6465+21]..[211,6465+37])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/patterns.ml[211,6465+38]..[211,6465+48])
                                    Pexp_field
                                    expression (typing/patterns.ml[211,6465+38]..[211,6465+39])
                                      Pexp_ident "q" (typing/patterns.ml[211,6465+38]..[211,6465+39])
                                    "pat_desc" (typing/patterns.ml[211,6465+40]..[211,6465+48])
                              ]
                        ]
                        expression (typing/patterns.ml[212,6517+4]..[212,6517+36])
                          Pexp_tuple
                          [
                            expression (typing/patterns.ml[212,6517+4]..[212,6517+30])
                              Pexp_record
                              [
                                "pat_desc" (typing/patterns.ml[212,6517+13]..[212,6517+21])
                                  expression (typing/patterns.ml[212,6517+24]..[212,6517+28])
                                    Pexp_ident "desc" (typing/patterns.ml[212,6517+24]..[212,6517+28])
                              ]
                              Some
                                expression (typing/patterns.ml[212,6517+6]..[212,6517+7])
                                  Pexp_ident "q" (typing/patterns.ml[212,6517+6]..[212,6517+7])
                            expression (typing/patterns.ml[212,6517+32]..[212,6517+36])
                              Pexp_ident "pats" (typing/patterns.ml[212,6517+32]..[212,6517+36])
                          ]
              ]
            structure_item (typing/patterns.ml[214,6555+2]..[222,6798+17])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/patterns.ml[214,6555+6]..[214,6555+11])
                    Ppat_var "arity" (typing/patterns.ml[214,6555+6]..[214,6555+11])
                  expression (typing/patterns.ml[214,6555+12]..[222,6798+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/patterns.ml[214,6555+12]..[214,6555+13])
                      Ppat_var "t" (typing/patterns.ml[214,6555+12]..[214,6555+13])
                    expression (typing/patterns.ml[215,6571+4]..[222,6798+17])
                      Pexp_match
                      expression (typing/patterns.ml[215,6571+10]..[215,6571+20])
                        Pexp_field
                        expression (typing/patterns.ml[215,6571+10]..[215,6571+11])
                          Pexp_ident "t" (typing/patterns.ml[215,6571+10]..[215,6571+11])
                        "pat_desc" (typing/patterns.ml[215,6571+12]..[215,6571+20])
                      [
                        <case>
                          pattern (typing/patterns.ml[216,6597+8]..[216,6597+11])
                            Ppat_construct "Any" (typing/patterns.ml[216,6597+8]..[216,6597+11])
                            None
                          expression (typing/patterns.ml[216,6597+15]..[216,6597+16])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/patterns.ml[217,6614+8]..[217,6614+18])
                            Ppat_construct "Constant" (typing/patterns.ml[217,6614+8]..[217,6614+16])
                            Some
                              []
                              pattern (typing/patterns.ml[217,6614+17]..[217,6614+18])
                                Ppat_any
                          expression (typing/patterns.ml[217,6614+22]..[217,6614+23])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/patterns.ml[218,6638+8]..[218,6638+19])
                            Ppat_construct "Construct" (typing/patterns.ml[218,6638+8]..[218,6638+17])
                            Some
                              []
                              pattern (typing/patterns.ml[218,6638+18]..[218,6638+19])
                                Ppat_var "c" (typing/patterns.ml[218,6638+18]..[218,6638+19])
                          expression (typing/patterns.ml[218,6638+23]..[218,6638+35])
                            Pexp_field
                            expression (typing/patterns.ml[218,6638+23]..[218,6638+24])
                              Pexp_ident "c" (typing/patterns.ml[218,6638+23]..[218,6638+24])
                            "cstr_arity" (typing/patterns.ml[218,6638+25]..[218,6638+35])
                        <case>
                          pattern (typing/patterns.ml[219,6674+8]..[219,6674+25])
                            Ppat_or
                            pattern (typing/patterns.ml[219,6674+8]..[219,6674+15])
                              Ppat_construct "Tuple" (typing/patterns.ml[219,6674+8]..[219,6674+13])
                              Some
                                []
                                pattern (typing/patterns.ml[219,6674+14]..[219,6674+15])
                                  Ppat_var "n" (typing/patterns.ml[219,6674+14]..[219,6674+15])
                            pattern (typing/patterns.ml[219,6674+18]..[219,6674+25])
                              Ppat_construct "Array" (typing/patterns.ml[219,6674+18]..[219,6674+23])
                              Some
                                []
                                pattern (typing/patterns.ml[219,6674+24]..[219,6674+25])
                                  Ppat_var "n" (typing/patterns.ml[219,6674+24]..[219,6674+25])
                          expression (typing/patterns.ml[219,6674+29]..[219,6674+30])
                            Pexp_ident "n" (typing/patterns.ml[219,6674+29]..[219,6674+30])
                        <case>
                          pattern (typing/patterns.ml[220,6705+8]..[220,6705+16])
                            Ppat_construct "Record" (typing/patterns.ml[220,6705+8]..[220,6705+14])
                            Some
                              []
                              pattern (typing/patterns.ml[220,6705+15]..[220,6705+16])
                                Ppat_var "l" (typing/patterns.ml[220,6705+15]..[220,6705+16])
                          expression (typing/patterns.ml[220,6705+20]..[220,6705+33])
                            Pexp_apply
                            expression (typing/patterns.ml[220,6705+20]..[220,6705+31])
                              Pexp_ident "List.length" (typing/patterns.ml[220,6705+20]..[220,6705+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/patterns.ml[220,6705+32]..[220,6705+33])
                                  Pexp_ident "l" (typing/patterns.ml[220,6705+32]..[220,6705+33])
                            ]
                        <case>
                          pattern (typing/patterns.ml[221,6739+8]..[221,6739+30])
                            Ppat_construct "Variant" (typing/patterns.ml[221,6739+8]..[221,6739+15])
                            Some
                              []
                              pattern (typing/patterns.ml[221,6739+16]..[221,6739+30])
                                Ppat_record Open
                                [
                                  "has_arg" (typing/patterns.ml[221,6739+18]..[221,6739+25]) ghost
                                    pattern (typing/patterns.ml[221,6739+18]..[221,6739+25])
                                      Ppat_var "has_arg" (typing/patterns.ml[221,6739+18]..[221,6739+25])
                                ]
                          expression (typing/patterns.ml[221,6739+34]..[221,6739+58])
                            Pexp_ifthenelse
                            expression (typing/patterns.ml[221,6739+37]..[221,6739+44])
                              Pexp_ident "has_arg" (typing/patterns.ml[221,6739+37]..[221,6739+44])
                            expression (typing/patterns.ml[221,6739+50]..[221,6739+51])
                              Pexp_constant PConst_int (1,None)
                            Some
                              expression (typing/patterns.ml[221,6739+57]..[221,6739+58])
                                Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (typing/patterns.ml[222,6798+8]..[222,6798+12])
                            Ppat_construct "Lazy" (typing/patterns.ml[222,6798+8]..[222,6798+12])
                            None
                          expression (typing/patterns.ml[222,6798+16]..[222,6798+17])
                            Pexp_constant PConst_int (1,None)
                      ]
              ]
            structure_item (typing/patterns.ml[224,6817+2]..[251,7734+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/patterns.ml[224,6817+6]..[224,6817+22])
                    Ppat_var "to_omega_pattern" (typing/patterns.ml[224,6817+6]..[224,6817+22])
                  expression (typing/patterns.ml[224,6817+23]..[251,7734+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/patterns.ml[224,6817+23]..[224,6817+24])
                      Ppat_var "t" (typing/patterns.ml[224,6817+23]..[224,6817+24])
                    expression (typing/patterns.ml[225,6844+4]..[251,7734+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/patterns.ml[225,6844+8]..[225,6844+16])
                            Ppat_var "pat_desc" (typing/patterns.ml[225,6844+8]..[225,6844+16])
                          expression (typing/patterns.ml[226,6863+6]..[246,7640+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/patterns.ml[226,6863+10]..[226,6863+15])
                                  Ppat_var "mkloc" (typing/patterns.ml[226,6863+10]..[226,6863+15])
                                expression (typing/patterns.ml[226,6863+16]..[226,6863+46]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/patterns.ml[226,6863+16]..[226,6863+17])
                                    Ppat_var "x" (typing/patterns.ml[226,6863+16]..[226,6863+17])
                                  expression (typing/patterns.ml[226,6863+20]..[226,6863+46])
                                    Pexp_apply
                                    expression (typing/patterns.ml[226,6863+20]..[226,6863+34])
                                      Pexp_ident "Location.mkloc" (typing/patterns.ml[226,6863+20]..[226,6863+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/patterns.ml[226,6863+35]..[226,6863+36])
                                          Pexp_ident "x" (typing/patterns.ml[226,6863+35]..[226,6863+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/patterns.ml[226,6863+37]..[226,6863+46])
                                          Pexp_field
                                          expression (typing/patterns.ml[226,6863+37]..[226,6863+38])
                                            Pexp_ident "t" (typing/patterns.ml[226,6863+37]..[226,6863+38])
                                          "pat_loc" (typing/patterns.ml[226,6863+39]..[226,6863+46])
                                    ]
                            ]
                            expression (typing/patterns.ml[227,6913+6]..[246,7640+35])
                              Pexp_match
                              expression (typing/patterns.ml[227,6913+12]..[227,6913+22])
                                Pexp_field
                                expression (typing/patterns.ml[227,6913+12]..[227,6913+13])
                                  Pexp_ident "t" (typing/patterns.ml[227,6913+12]..[227,6913+13])
                                "pat_desc" (typing/patterns.ml[227,6913+14]..[227,6913+22])
                              [
                                <case>
                                  pattern (typing/patterns.ml[228,6941+8]..[228,6941+11])
                                    Ppat_construct "Any" (typing/patterns.ml[228,6941+8]..[228,6941+11])
                                    None
                                  expression (typing/patterns.ml[228,6941+15]..[228,6941+23])
                                    Pexp_construct "Tpat_any" (typing/patterns.ml[228,6941+15]..[228,6941+23])
                                    None
                                <case>
                                  pattern (typing/patterns.ml[229,6965+8]..[229,6965+12])
                                    Ppat_construct "Lazy" (typing/patterns.ml[229,6965+8]..[229,6965+12])
                                    None
                                  expression (typing/patterns.ml[229,6965+16]..[229,6965+31])
                                    Pexp_construct "Tpat_lazy" (typing/patterns.ml[229,6965+16]..[229,6965+25])
                                    Some
                                      expression (typing/patterns.ml[229,6965+26]..[229,6965+31])
                                        Pexp_ident "omega" (typing/patterns.ml[229,6965+26]..[229,6965+31])
                                <case>
                                  pattern (typing/patterns.ml[230,6997+8]..[230,6997+18])
                                    Ppat_construct "Constant" (typing/patterns.ml[230,6997+8]..[230,6997+16])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[230,6997+17]..[230,6997+18])
                                        Ppat_var "c" (typing/patterns.ml[230,6997+17]..[230,6997+18])
                                  expression (typing/patterns.ml[230,6997+22]..[230,6997+37])
                                    Pexp_construct "Tpat_constant" (typing/patterns.ml[230,6997+22]..[230,6997+35])
                                    Some
                                      expression (typing/patterns.ml[230,6997+36]..[230,6997+37])
                                        Pexp_ident "c" (typing/patterns.ml[230,6997+36]..[230,6997+37])
                                <case>
                                  pattern (typing/patterns.ml[231,7035+8]..[231,7035+15])
                                    Ppat_construct "Tuple" (typing/patterns.ml[231,7035+8]..[231,7035+13])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[231,7035+14]..[231,7035+15])
                                        Ppat_var "n" (typing/patterns.ml[231,7035+14]..[231,7035+15])
                                  expression (typing/patterns.ml[231,7035+19]..[231,7035+40])
                                    Pexp_construct "Tpat_tuple" (typing/patterns.ml[231,7035+19]..[231,7035+29])
                                    Some
                                      expression (typing/patterns.ml[231,7035+30]..[231,7035+40])
                                        Pexp_apply
                                        expression (typing/patterns.ml[231,7035+31]..[231,7035+37])
                                          Pexp_ident "omegas" (typing/patterns.ml[231,7035+31]..[231,7035+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/patterns.ml[231,7035+38]..[231,7035+39])
                                              Pexp_ident "n" (typing/patterns.ml[231,7035+38]..[231,7035+39])
                                        ]
                                <case>
                                  pattern (typing/patterns.ml[232,7076+8]..[232,7076+15])
                                    Ppat_construct "Array" (typing/patterns.ml[232,7076+8]..[232,7076+13])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[232,7076+14]..[232,7076+15])
                                        Ppat_var "n" (typing/patterns.ml[232,7076+14]..[232,7076+15])
                                  expression (typing/patterns.ml[232,7076+19]..[232,7076+40])
                                    Pexp_construct "Tpat_array" (typing/patterns.ml[232,7076+19]..[232,7076+29])
                                    Some
                                      expression (typing/patterns.ml[232,7076+30]..[232,7076+40])
                                        Pexp_apply
                                        expression (typing/patterns.ml[232,7076+31]..[232,7076+37])
                                          Pexp_ident "omegas" (typing/patterns.ml[232,7076+31]..[232,7076+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/patterns.ml[232,7076+38]..[232,7076+39])
                                              Pexp_ident "n" (typing/patterns.ml[232,7076+38]..[232,7076+39])
                                        ]
                                <case>
                                  pattern (typing/patterns.ml[233,7117+8]..[233,7117+19])
                                    Ppat_construct "Construct" (typing/patterns.ml[233,7117+8]..[233,7117+17])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[233,7117+18]..[233,7117+19])
                                        Ppat_var "c" (typing/patterns.ml[233,7117+18]..[233,7117+19])
                                  expression (typing/patterns.ml[234,7140+10]..[235,7204+64])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/patterns.ml[234,7140+14]..[234,7140+21])
                                          Ppat_var "lid_loc" (typing/patterns.ml[234,7140+14]..[234,7140+21])
                                        expression (typing/patterns.ml[234,7140+24]..[234,7140+60])
                                          Pexp_apply
                                          expression (typing/patterns.ml[234,7140+24]..[234,7140+29])
                                            Pexp_ident "mkloc" (typing/patterns.ml[234,7140+24]..[234,7140+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[234,7140+30]..[234,7140+60])
                                                Pexp_construct "Longident.Lident" (typing/patterns.ml[234,7140+31]..[234,7140+47])
                                                Some
                                                  expression (typing/patterns.ml[234,7140+48]..[234,7140+59])
                                                    Pexp_field
                                                    expression (typing/patterns.ml[234,7140+48]..[234,7140+49])
                                                      Pexp_ident "c" (typing/patterns.ml[234,7140+48]..[234,7140+49])
                                                    "cstr_name" (typing/patterns.ml[234,7140+50]..[234,7140+59])
                                          ]
                                    ]
                                    expression (typing/patterns.ml[235,7204+10]..[235,7204+64])
                                      Pexp_construct "Tpat_construct" (typing/patterns.ml[235,7204+10]..[235,7204+24])
                                      Some
                                        expression (typing/patterns.ml[235,7204+25]..[235,7204+64])
                                          Pexp_tuple
                                          [
                                            expression (typing/patterns.ml[235,7204+26]..[235,7204+33])
                                              Pexp_ident "lid_loc" (typing/patterns.ml[235,7204+26]..[235,7204+33])
                                            expression (typing/patterns.ml[235,7204+35]..[235,7204+36])
                                              Pexp_ident "c" (typing/patterns.ml[235,7204+35]..[235,7204+36])
                                            expression (typing/patterns.ml[235,7204+38]..[235,7204+57])
                                              Pexp_apply
                                              expression (typing/patterns.ml[235,7204+38]..[235,7204+44])
                                                Pexp_ident "omegas" (typing/patterns.ml[235,7204+38]..[235,7204+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/patterns.ml[235,7204+45]..[235,7204+57])
                                                    Pexp_field
                                                    expression (typing/patterns.ml[235,7204+45]..[235,7204+46])
                                                      Pexp_ident "c" (typing/patterns.ml[235,7204+45]..[235,7204+46])
                                                    "cstr_arity" (typing/patterns.ml[235,7204+47]..[235,7204+57])
                                              ]
                                            expression (typing/patterns.ml[235,7204+59]..[235,7204+63])
                                              Pexp_construct "None" (typing/patterns.ml[235,7204+59]..[235,7204+63])
                                              None
                                          ]
                                <case>
                                  pattern (typing/patterns.ml[236,7269+8]..[236,7269+42])
                                    Ppat_construct "Variant" (typing/patterns.ml[236,7269+8]..[236,7269+15])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[236,7269+16]..[236,7269+42])
                                        Ppat_record Closed
                                        [
                                          "tag" (typing/patterns.ml[236,7269+18]..[236,7269+21]) ghost
                                            pattern (typing/patterns.ml[236,7269+18]..[236,7269+21])
                                              Ppat_var "tag" (typing/patterns.ml[236,7269+18]..[236,7269+21])
                                          "has_arg" (typing/patterns.ml[236,7269+23]..[236,7269+30]) ghost
                                            pattern (typing/patterns.ml[236,7269+23]..[236,7269+30])
                                              Ppat_var "has_arg" (typing/patterns.ml[236,7269+23]..[236,7269+30])
                                          "cstr_row" (typing/patterns.ml[236,7269+32]..[236,7269+40]) ghost
                                            pattern (typing/patterns.ml[236,7269+32]..[236,7269+40])
                                              Ppat_var "cstr_row" (typing/patterns.ml[236,7269+32]..[236,7269+40])
                                        ]
                                  expression (typing/patterns.ml[237,7315+10]..[238,7379+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/patterns.ml[237,7315+14]..[237,7315+21])
                                          Ppat_var "arg_opt" (typing/patterns.ml[237,7315+14]..[237,7315+21])
                                        expression (typing/patterns.ml[237,7315+24]..[237,7315+60])
                                          Pexp_ifthenelse
                                          expression (typing/patterns.ml[237,7315+27]..[237,7315+34])
                                            Pexp_ident "has_arg" (typing/patterns.ml[237,7315+27]..[237,7315+34])
                                          expression (typing/patterns.ml[237,7315+40]..[237,7315+50])
                                            Pexp_construct "Some" (typing/patterns.ml[237,7315+40]..[237,7315+44])
                                            Some
                                              expression (typing/patterns.ml[237,7315+45]..[237,7315+50])
                                                Pexp_ident "omega" (typing/patterns.ml[237,7315+45]..[237,7315+50])
                                          Some
                                            expression (typing/patterns.ml[237,7315+56]..[237,7315+60])
                                              Pexp_construct "None" (typing/patterns.ml[237,7315+56]..[237,7315+60])
                                              None
                                    ]
                                    expression (typing/patterns.ml[238,7379+10]..[238,7379+47])
                                      Pexp_construct "Tpat_variant" (typing/patterns.ml[238,7379+10]..[238,7379+22])
                                      Some
                                        expression (typing/patterns.ml[238,7379+23]..[238,7379+47])
                                          Pexp_tuple
                                          [
                                            expression (typing/patterns.ml[238,7379+24]..[238,7379+27])
                                              Pexp_ident "tag" (typing/patterns.ml[238,7379+24]..[238,7379+27])
                                            expression (typing/patterns.ml[238,7379+29]..[238,7379+36])
                                              Pexp_ident "arg_opt" (typing/patterns.ml[238,7379+29]..[238,7379+36])
                                            expression (typing/patterns.ml[238,7379+38]..[238,7379+46])
                                              Pexp_ident "cstr_row" (typing/patterns.ml[238,7379+38]..[238,7379+46])
                                          ]
                                <case>
                                  pattern (typing/patterns.ml[239,7427+8]..[239,7427+19])
                                    Ppat_construct "Record" (typing/patterns.ml[239,7427+8]..[239,7427+14])
                                    Some
                                      []
                                      pattern (typing/patterns.ml[239,7427+15]..[239,7427+19])
                                        Ppat_var "lbls" (typing/patterns.ml[239,7427+15]..[239,7427+19])
                                  expression (typing/patterns.ml[240,7450+10]..[246,7640+35])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/patterns.ml[240,7450+14]..[240,7450+17])
                                          Ppat_var "lst" (typing/patterns.ml[240,7450+14]..[240,7450+17])
                                        expression (typing/patterns.ml[241,7470+12]..[244,7608+18])
                                          Pexp_apply
                                          expression (typing/patterns.ml[241,7470+12]..[241,7470+20])
                                            Pexp_ident "List.map" (typing/patterns.ml[241,7470+12]..[241,7470+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[241,7470+21]..[244,7608+13])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/patterns.ml[241,7470+26]..[241,7470+29])
                                                  Ppat_var "lbl" (typing/patterns.ml[241,7470+26]..[241,7470+29])
                                                expression (typing/patterns.ml[242,7503+14]..[243,7572+35])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/patterns.ml[242,7503+18]..[242,7503+25])
                                                        Ppat_var "lid_loc" (typing/patterns.ml[242,7503+18]..[242,7503+25])
                                                      expression (typing/patterns.ml[242,7503+28]..[242,7503+65])
                                                        Pexp_apply
                                                        expression (typing/patterns.ml[242,7503+28]..[242,7503+33])
                                                          Pexp_ident "mkloc" (typing/patterns.ml[242,7503+28]..[242,7503+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/patterns.ml[242,7503+34]..[242,7503+65])
                                                              Pexp_construct "Longident.Lident" (typing/patterns.ml[242,7503+35]..[242,7503+51])
                                                              Some
                                                                expression (typing/patterns.ml[242,7503+52]..[242,7503+64])
                                                                  Pexp_field
                                                                  expression (typing/patterns.ml[242,7503+52]..[242,7503+55])
                                                                    Pexp_ident "lbl" (typing/patterns.ml[242,7503+52]..[242,7503+55])
                                                                  "lbl_name" (typing/patterns.ml[242,7503+56]..[242,7503+64])
                                                        ]
                                                  ]
                                                  expression (typing/patterns.ml[243,7572+14]..[243,7572+35])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/patterns.ml[243,7572+15]..[243,7572+22])
                                                        Pexp_ident "lid_loc" (typing/patterns.ml[243,7572+15]..[243,7572+22])
                                                      expression (typing/patterns.ml[243,7572+24]..[243,7572+27])
                                                        Pexp_ident "lbl" (typing/patterns.ml[243,7572+24]..[243,7572+27])
                                                      expression (typing/patterns.ml[243,7572+29]..[243,7572+34])
                                                        Pexp_ident "omega" (typing/patterns.ml[243,7572+29]..[243,7572+34])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/patterns.ml[244,7608+14]..[244,7608+18])
                                                Pexp_ident "lbls" (typing/patterns.ml[244,7608+14]..[244,7608+18])
                                          ]
                                    ]
                                    expression (typing/patterns.ml[246,7640+10]..[246,7640+35])
                                      Pexp_construct "Tpat_record" (typing/patterns.ml[246,7640+10]..[246,7640+21])
                                      Some
                                        expression (typing/patterns.ml[246,7640+22]..[246,7640+35])
                                          Pexp_tuple
                                          [
                                            expression (typing/patterns.ml[246,7640+23]..[246,7640+26])
                                              Pexp_ident "lst" (typing/patterns.ml[246,7640+23]..[246,7640+26])
                                            expression (typing/patterns.ml[246,7640+28]..[246,7640+34])
                                              Pexp_construct "Closed" (typing/patterns.ml[246,7640+28]..[246,7640+34])
                                              None
                                          ]
                              ]
                      ]
                      expression (typing/patterns.ml[248,7683+4]..[251,7734+5])
                        Pexp_record
                        [
                          "pat_desc" (typing/patterns.ml[249,7696+6]..[249,7696+14]) ghost
                            expression (typing/patterns.ml[249,7696+6]..[249,7696+14])
                              Pexp_ident "pat_desc" (typing/patterns.ml[249,7696+6]..[249,7696+14])
                          "pat_extra" (typing/patterns.ml[250,7712+6]..[250,7712+15])
                            expression (typing/patterns.ml[250,7712+18]..[250,7712+20])
                              Pexp_construct "[]" (typing/patterns.ml[250,7712+18]..[250,7712+20])
                              None
                        ]
                        Some
                          expression (typing/patterns.ml[248,7683+6]..[248,7683+7])
                            Pexp_ident "t" (typing/patterns.ml[248,7683+6]..[248,7683+7])
              ]
            structure_item (typing/patterns.ml[253,7741+2]..[253,7741+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/patterns.ml[253,7741+6]..[253,7741+11])
                    Ppat_var "omega" (typing/patterns.ml[253,7741+6]..[253,7741+11])
                  expression (typing/patterns.ml[253,7741+14]..[253,7741+43])
                    Pexp_record
                    [
                      "pat_desc" (typing/patterns.ml[253,7741+27]..[253,7741+35])
                        expression (typing/patterns.ml[253,7741+38]..[253,7741+41])
                          Pexp_construct "Any" (typing/patterns.ml[253,7741+38]..[253,7741+41])
                          None
                    ]
                    Some
                      expression (typing/patterns.ml[253,7741+16]..[253,7741+21])
                        Pexp_ident "omega" (typing/patterns.ml[253,7741+16]..[253,7741+21])
              ]
          ]
        module_type (typing/patterns.ml[139,4349+14]..[164,4991+3])
          Pmty_signature
          [
            signature_item (typing/patterns.ml[140,4367+2]..[151,4667+10])
              Psig_type Rec
              [
                type_declaration "desc" (typing/patterns.ml[140,4367+7]..[140,4367+11]) (typing/patterns.ml[140,4367+2]..[151,4667+10])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (typing/patterns.ml[141,4381+4]..[141,4381+9])
                          "Any" (typing/patterns.ml[141,4381+6]..[141,4381+9])
                          []
                          None
                        (typing/patterns.ml[142,4391+4]..[142,4391+42])
                          "Construct" (typing/patterns.ml[142,4391+6]..[142,4391+15])
                          [
                            core_type (typing/patterns.ml[142,4391+19]..[142,4391+42])
                              Ptyp_constr "constructor_description" (typing/patterns.ml[142,4391+19]..[142,4391+42])
                              []
                          ]
                          None
                        (typing/patterns.ml[143,4434+4]..[143,4434+26])
                          "Constant" (typing/patterns.ml[143,4434+6]..[143,4434+14])
                          [
                            core_type (typing/patterns.ml[143,4434+18]..[143,4434+26])
                              Ptyp_constr "constant" (typing/patterns.ml[143,4434+18]..[143,4434+26])
                              []
                          ]
                          None
                        (typing/patterns.ml[144,4461+4]..[144,4461+18])
                          "Tuple" (typing/patterns.ml[144,4461+6]..[144,4461+11])
                          [
                            core_type (typing/patterns.ml[144,4461+15]..[144,4461+18])
                              Ptyp_constr "int" (typing/patterns.ml[144,4461+15]..[144,4461+18])
                              []
                          ]
                          None
                        (typing/patterns.ml[145,4480+4]..[145,4480+38])
                          "Record" (typing/patterns.ml[145,4480+6]..[145,4480+12])
                          [
                            core_type (typing/patterns.ml[145,4480+16]..[145,4480+38])
                              Ptyp_constr "list" (typing/patterns.ml[145,4480+34]..[145,4480+38])
                              [
                                core_type (typing/patterns.ml[145,4480+16]..[145,4480+33])
                                  Ptyp_constr "label_description" (typing/patterns.ml[145,4480+16]..[145,4480+33])
                                  []
                              ]
                          ]
                          None
                        (typing/patterns.ml[146,4519+4]..[149,4607+40])
                          "Variant" (typing/patterns.ml[146,4519+6]..[146,4519+13])
                          [
                            (typing/patterns.ml[147,4536+10]..[147,4536+21])
                              Immutable
                              "tag" (typing/patterns.ml[147,4536+10]..[147,4536+13])                              core_type (typing/patterns.ml[147,4536+15]..[147,4536+20])
                                Ptyp_constr "label" (typing/patterns.ml[147,4536+15]..[147,4536+20])
                                []
                            (typing/patterns.ml[147,4536+22]..[147,4536+36])
                              Immutable
                              "has_arg" (typing/patterns.ml[147,4536+22]..[147,4536+29])                              core_type (typing/patterns.ml[147,4536+31]..[147,4536+35])
                                Ptyp_constr "bool" (typing/patterns.ml[147,4536+31]..[147,4536+35])
                                []
                            (typing/patterns.ml[148,4573+10]..[148,4573+33])
                              Immutable
                              "cstr_row" (typing/patterns.ml[148,4573+10]..[148,4573+18])                              core_type (typing/patterns.ml[148,4573+20]..[148,4573+32])
                                Ptyp_constr "ref" (typing/patterns.ml[148,4573+29]..[148,4573+32])
                                [
                                  core_type (typing/patterns.ml[148,4573+20]..[148,4573+28])
                                    Ptyp_constr "row_desc" (typing/patterns.ml[148,4573+20]..[148,4573+28])
                                    []
                                ]
                            (typing/patterns.ml[149,4607+10]..[149,4607+38])
                              Immutable
                              "type_row" (typing/patterns.ml[149,4607+10]..[149,4607+18])                              core_type (typing/patterns.ml[149,4607+21]..[149,4607+37])
                                Ptyp_arrow
                                Nolabel
                                core_type (typing/patterns.ml[149,4607+21]..[149,4607+25])
                                  Ptyp_constr "unit" (typing/patterns.ml[149,4607+21]..[149,4607+25])
                                  []
                                core_type (typing/patterns.ml[149,4607+29]..[149,4607+37])
                                  Ptyp_constr "row_desc" (typing/patterns.ml[149,4607+29]..[149,4607+37])
                                  []
                          ]
                          None
                        (typing/patterns.ml[150,4648+4]..[150,4648+18])
                          "Array" (typing/patterns.ml[150,4648+6]..[150,4648+11])
                          [
                            core_type (typing/patterns.ml[150,4648+15]..[150,4648+18])
                              Ptyp_constr "int" (typing/patterns.ml[150,4648+15]..[150,4648+18])
                              []
                          ]
                          None
                        (typing/patterns.ml[151,4667+4]..[151,4667+10])
                          "Lazy" (typing/patterns.ml[151,4667+6]..[151,4667+10])
                          []
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (typing/patterns.ml[153,4679+2]..[153,4679+28])
              Psig_type Rec
              [
                type_declaration "t" (typing/patterns.ml[153,4679+7]..[153,4679+8]) (typing/patterns.ml[153,4679+2]..[153,4679+28])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/patterns.ml[153,4679+11]..[153,4679+28])
                        Ptyp_constr "pattern_data" (typing/patterns.ml[153,4679+16]..[153,4679+28])
                        [
                          core_type (typing/patterns.ml[153,4679+11]..[153,4679+15])
                            Ptyp_constr "desc" (typing/patterns.ml[153,4679+11]..[153,4679+15])
                            []
                        ]
              ]
            signature_item (typing/patterns.ml[155,4709+2]..[155,4709+22])
              Psig_value
              value_description "arity" (typing/patterns.ml[155,4709+6]..[155,4709+11]) (typing/patterns.ml[155,4709+2]..[155,4709+22])
                core_type (typing/patterns.ml[155,4709+14]..[155,4709+22])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/patterns.ml[155,4709+14]..[155,4709+15])
                    Ptyp_constr "t" (typing/patterns.ml[155,4709+14]..[155,4709+15])
                    []
                  core_type (typing/patterns.ml[155,4709+19]..[155,4709+22])
                    Ptyp_constr "int" (typing/patterns.ml[155,4709+19]..[155,4709+22])
                    []
                []
            signature_item (typing/patterns.ml[158,4812+2]..[158,4812+54])
              Psig_value
              value_description "deconstruct" (typing/patterns.ml[158,4812+6]..[158,4812+17]) (typing/patterns.ml[158,4812+2]..[158,4812+54])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/patterns.ml[157,4733+2]..[157,4733+78])
                      Pstr_eval
                      expression (typing/patterns.ml[157,4733+2]..[157,4733+78])
                        Pexp_constant PConst_string(" [deconstruct p] returns the head of [p] and the list of sub patterns. ",(typing/patterns.ml[157,4733+2]..[157,4733+78]),None)
                  ]
                core_type (typing/patterns.ml[158,4812+20]..[158,4812+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/patterns.ml[158,4812+20]..[158,4812+34])
                    Ptyp_constr "Simple.pattern" (typing/patterns.ml[158,4812+20]..[158,4812+34])
                    []
                  core_type (typing/patterns.ml[158,4812+38]..[158,4812+54])
                    Ptyp_tuple
                    [
                      core_type (typing/patterns.ml[158,4812+38]..[158,4812+39])
                        Ptyp_constr "t" (typing/patterns.ml[158,4812+38]..[158,4812+39])
                        []
                      core_type (typing/patterns.ml[158,4812+42]..[158,4812+54])
                        Ptyp_constr "list" (typing/patterns.ml[158,4812+50]..[158,4812+54])
                        [
                          core_type (typing/patterns.ml[158,4812+42]..[158,4812+49])
                            Ptyp_constr "pattern" (typing/patterns.ml[158,4812+42]..[158,4812+49])
                            []
                        ]
                    ]
                []
            signature_item (typing/patterns.ml[161,4936+2]..[161,4936+37])
              Psig_value
              value_description "to_omega_pattern" (typing/patterns.ml[161,4936+6]..[161,4936+22]) (typing/patterns.ml[161,4936+2]..[161,4936+37])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/patterns.ml[160,4868+2]..[160,4868+67])
                      Pstr_eval
                      expression (typing/patterns.ml[160,4868+2]..[160,4868+67])
                        Pexp_constant PConst_string(" reconstructs a pattern, putting wildcards as sub-patterns. ",(typing/patterns.ml[160,4868+2]..[160,4868+67]),None)
                  ]
                core_type (typing/patterns.ml[161,4936+25]..[161,4936+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/patterns.ml[161,4936+25]..[161,4936+26])
                    Ptyp_constr "t" (typing/patterns.ml[161,4936+25]..[161,4936+26])
                    []
                  core_type (typing/patterns.ml[161,4936+30]..[161,4936+37])
                    Ptyp_constr "pattern" (typing/patterns.ml[161,4936+30]..[161,4936+37])
                    []
                []
            signature_item (typing/patterns.ml[163,4975+2]..[163,4975+15])
              Psig_value
              value_description "omega" (typing/patterns.ml[163,4975+6]..[163,4975+11]) (typing/patterns.ml[163,4975+2]..[163,4975+15])
                core_type (typing/patterns.ml[163,4975+14]..[163,4975+15])
                  Ptyp_constr "t" (typing/patterns.ml[163,4975+14]..[163,4975+15])
                  []
                []
          ]
]

