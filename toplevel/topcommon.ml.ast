[
  structure_item (toplevel/topcommon.ml[19,1179+0]..[19,1179+11])
    Pstr_open Fresh
    module_expr (toplevel/topcommon.ml[19,1179+5]..[19,1179+11])
      Pmod_ident "Format" (toplevel/topcommon.ml[19,1179+5]..[19,1179+11])
  structure_item (toplevel/topcommon.ml[20,1191+0]..[20,1191+14])
    Pstr_open Fresh
    module_expr (toplevel/topcommon.ml[20,1191+5]..[20,1191+14])
      Pmod_ident "Parsetree" (toplevel/topcommon.ml[20,1191+5]..[20,1191+14])
  structure_item (toplevel/topcommon.ml[21,1206+0]..[21,1206+16])
    Pstr_open Fresh
    module_expr (toplevel/topcommon.ml[21,1206+5]..[21,1206+16])
      Pmod_ident "Outcometree" (toplevel/topcommon.ml[21,1206+5]..[21,1206+16])
  structure_item (toplevel/topcommon.ml[22,1223+0]..[22,1223+15])
    Pstr_open Fresh
    module_expr (toplevel/topcommon.ml[22,1223+5]..[22,1223+15])
      Pmod_ident "Ast_helper" (toplevel/topcommon.ml[22,1223+5]..[22,1223+15])
  structure_item (toplevel/topcommon.ml[26,1275+0]..[26,1275+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[26,1275+4]..[26,1275+25])
          Ppat_var "parse_toplevel_phrase" (toplevel/topcommon.ml[26,1275+4]..[26,1275+25])
        expression (toplevel/topcommon.ml[26,1275+28]..[26,1275+53])
          Pexp_apply
          expression (toplevel/topcommon.ml[26,1275+28]..[26,1275+31])
            Pexp_ident "ref" (toplevel/topcommon.ml[26,1275+28]..[26,1275+31])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[26,1275+32]..[26,1275+53])
                Pexp_ident "Parse.toplevel_phrase" (toplevel/topcommon.ml[26,1275+32]..[26,1275+53])
          ]
    ]
  structure_item (toplevel/topcommon.ml[27,1329+0]..[27,1329+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[27,1329+4]..[27,1329+18])
          Ppat_var "parse_use_file" (toplevel/topcommon.ml[27,1329+4]..[27,1329+18])
        expression (toplevel/topcommon.ml[27,1329+21]..[27,1329+39])
          Pexp_apply
          expression (toplevel/topcommon.ml[27,1329+21]..[27,1329+24])
            Pexp_ident "ref" (toplevel/topcommon.ml[27,1329+21]..[27,1329+24])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[27,1329+25]..[27,1329+39])
                Pexp_ident "Parse.use_file" (toplevel/topcommon.ml[27,1329+25]..[27,1329+39])
          ]
    ]
  structure_item (toplevel/topcommon.ml[28,1369+0]..[28,1369+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[28,1369+4]..[28,1369+18])
          Ppat_var "print_location" (toplevel/topcommon.ml[28,1369+4]..[28,1369+18])
        expression (toplevel/topcommon.ml[28,1369+21]..[28,1369+39])
          Pexp_ident "Location.print_loc" (toplevel/topcommon.ml[28,1369+21]..[28,1369+39])
    ]
  structure_item (toplevel/topcommon.ml[29,1409+0]..[29,1409+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[29,1409+4]..[29,1409+15])
          Ppat_var "print_error" (toplevel/topcommon.ml[29,1409+4]..[29,1409+15])
        expression (toplevel/topcommon.ml[29,1409+18]..[29,1409+39])
          Pexp_ident "Location.print_report" (toplevel/topcommon.ml[29,1409+18]..[29,1409+39])
    ]
  structure_item (toplevel/topcommon.ml[30,1449+0]..[30,1449+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[30,1449+4]..[30,1449+17])
          Ppat_var "print_warning" (toplevel/topcommon.ml[30,1449+4]..[30,1449+17])
        expression (toplevel/topcommon.ml[30,1449+20]..[30,1449+42])
          Pexp_ident "Location.print_warning" (toplevel/topcommon.ml[30,1449+20]..[30,1449+42])
    ]
  structure_item (toplevel/topcommon.ml[31,1492+0]..[31,1492+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[31,1492+4]..[31,1492+14])
          Ppat_var "input_name" (toplevel/topcommon.ml[31,1492+4]..[31,1492+14])
        expression (toplevel/topcommon.ml[31,1492+17]..[31,1492+36])
          Pexp_ident "Location.input_name" (toplevel/topcommon.ml[31,1492+17]..[31,1492+36])
    ]
  structure_item (toplevel/topcommon.ml[33,1530+0]..[51,1961+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[33,1530+4]..[33,1530+22])
          Ppat_var "parse_mod_use_file" (toplevel/topcommon.ml[33,1530+4]..[33,1530+22])
        expression (toplevel/topcommon.ml[33,1530+23]..[51,1961+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[33,1530+23]..[33,1530+27])
            Ppat_var "name" (toplevel/topcommon.ml[33,1530+23]..[33,1530+27])
          expression (toplevel/topcommon.ml[33,1530+28]..[51,1961+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[33,1530+28]..[33,1530+30])
              Ppat_var "lb" (toplevel/topcommon.ml[33,1530+28]..[33,1530+30])
            expression (toplevel/topcommon.ml[34,1563+2]..[51,1961+4])
              Pexp_let Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[34,1563+6]..[34,1563+13])
                    Ppat_var "modname" (toplevel/topcommon.ml[34,1563+6]..[34,1563+13])
                  expression (toplevel/topcommon.ml[35,1579+4]..[36,1607+58])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[35,1579+4]..[35,1579+27])
                      Pexp_ident "String.capitalize_ascii" (toplevel/topcommon.ml[35,1579+4]..[35,1579+27])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[36,1607+6]..[36,1607+58])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[36,1607+7]..[36,1607+32])
                            Pexp_ident "Filename.remove_extension" (toplevel/topcommon.ml[36,1607+7]..[36,1607+32])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[36,1607+33]..[36,1607+57])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[36,1607+34]..[36,1607+51])
                                  Pexp_ident "Filename.basename" (toplevel/topcommon.ml[36,1607+34]..[36,1607+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[36,1607+52]..[36,1607+56])
                                      Pexp_ident "name" (toplevel/topcommon.ml[36,1607+52]..[36,1607+56])
                                ]
                          ]
                    ]
              ]
              expression (toplevel/topcommon.ml[38,1671+2]..[51,1961+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (toplevel/topcommon.ml[38,1671+6]..[38,1671+11])
                      Ppat_var "items" (toplevel/topcommon.ml[38,1671+6]..[38,1671+11])
                    expression (toplevel/topcommon.ml[39,1685+4]..[42,1772+30])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[39,1685+4]..[39,1685+15])
                        Pexp_ident "List.concat" (toplevel/topcommon.ml[39,1685+4]..[39,1685+15])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[40,1701+6]..[42,1772+30])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[40,1701+7]..[40,1701+15])
                              Pexp_ident "List.map" (toplevel/topcommon.ml[40,1701+7]..[40,1701+15])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[41,1717+9]..[41,1717+54])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (toplevel/topcommon.ml[41,1717+19]..[41,1717+29])
                                        Ppat_construct "Ptop_def" (toplevel/topcommon.ml[41,1717+19]..[41,1717+27])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[41,1717+28]..[41,1717+29])
                                            Ppat_var "s" (toplevel/topcommon.ml[41,1717+28]..[41,1717+29])
                                      expression (toplevel/topcommon.ml[41,1717+33]..[41,1717+34])
                                        Pexp_ident "s" (toplevel/topcommon.ml[41,1717+33]..[41,1717+34])
                                    <case>
                                      pattern (toplevel/topcommon.ml[41,1717+37]..[41,1717+47])
                                        Ppat_construct "Ptop_dir" (toplevel/topcommon.ml[41,1717+37]..[41,1717+45])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[41,1717+46]..[41,1717+47])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[41,1717+51]..[41,1717+53])
                                        Pexp_construct "[]" (toplevel/topcommon.ml[41,1717+51]..[41,1717+53])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[42,1772+9]..[42,1772+29])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[42,1772+10]..[42,1772+25])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[42,1772+10]..[42,1772+11])
                                      Pexp_ident "!" (toplevel/topcommon.ml[42,1772+10]..[42,1772+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[42,1772+11]..[42,1772+25])
                                          Pexp_ident "parse_use_file" (toplevel/topcommon.ml[42,1772+11]..[42,1772+25])
                                    ]
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[42,1772+26]..[42,1772+28])
                                        Pexp_ident "lb" (toplevel/topcommon.ml[42,1772+26]..[42,1772+28])
                                  ]
                            ]
                      ]
                ]
                expression (toplevel/topcommon.ml[44,1808+2]..[51,1961+4])
                  Pexp_construct "::" (toplevel/topcommon.ml[44,1808+4]..[51,1961+4]) ghost
                  Some
                    expression (toplevel/topcommon.ml[44,1808+4]..[51,1961+4]) ghost
                      Pexp_tuple
                      [
                        expression (toplevel/topcommon.ml[44,1808+4]..[50,1952+8])
                          Pexp_construct "Ptop_def" (toplevel/topcommon.ml[44,1808+4]..[44,1808+12])
                          Some
                            expression (toplevel/topcommon.ml[45,1821+6]..[50,1952+8])
                              Pexp_construct "::" (toplevel/topcommon.ml[45,1821+8]..[50,1952+8]) ghost
                              Some
                                expression (toplevel/topcommon.ml[45,1821+8]..[50,1952+8]) ghost
                                  Pexp_tuple
                                  [
                                    expression (toplevel/topcommon.ml[45,1821+8]..[49,1940+11])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[45,1821+8]..[45,1821+19])
                                        Pexp_ident "Str.module_" (toplevel/topcommon.ml[45,1821+8]..[45,1821+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[46,1841+10]..[49,1940+11])
                                            Pexp_apply
                                            expression (toplevel/topcommon.ml[46,1841+11]..[46,1841+16])
                                              Pexp_ident "Mb.mk" (toplevel/topcommon.ml[46,1841+11]..[46,1841+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (toplevel/topcommon.ml[47,1858+13]..[47,1858+46])
                                                  Pexp_apply
                                                  expression (toplevel/topcommon.ml[47,1858+14]..[47,1858+30])
                                                    Pexp_ident "Location.mknoloc" (toplevel/topcommon.ml[47,1858+14]..[47,1858+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (toplevel/topcommon.ml[47,1858+31]..[47,1858+45])
                                                        Pexp_construct "Some" (toplevel/topcommon.ml[47,1858+32]..[47,1858+36])
                                                        Some
                                                          expression (toplevel/topcommon.ml[47,1858+37]..[47,1858+44])
                                                            Pexp_ident "modname" (toplevel/topcommon.ml[47,1858+37]..[47,1858+44])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (toplevel/topcommon.ml[48,1905+13]..[48,1905+34])
                                                  Pexp_apply
                                                  expression (toplevel/topcommon.ml[48,1905+14]..[48,1905+27])
                                                    Pexp_ident "Mod.structure" (toplevel/topcommon.ml[48,1905+14]..[48,1905+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (toplevel/topcommon.ml[48,1905+28]..[48,1905+33])
                                                        Pexp_ident "items" (toplevel/topcommon.ml[48,1905+28]..[48,1905+33])
                                                  ]
                                            ]
                                      ]
                                    expression (toplevel/topcommon.ml[50,1952+7]..[50,1952+8]) ghost
                                      Pexp_construct "[]" (toplevel/topcommon.ml[50,1952+7]..[50,1952+8]) ghost
                                      None
                                  ]
                        expression (toplevel/topcommon.ml[51,1961+3]..[51,1961+4]) ghost
                          Pexp_construct "[]" (toplevel/topcommon.ml[51,1961+3]..[51,1961+4]) ghost
                          None
                      ]
    ]
  structure_item (toplevel/topcommon.ml[55,1993+0]..[55,1993+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[55,1993+4]..[55,1993+21])
          Ppat_var "max_printer_depth" (toplevel/topcommon.ml[55,1993+4]..[55,1993+21])
        expression (toplevel/topcommon.ml[55,1993+24]..[55,1993+31])
          Pexp_apply
          expression (toplevel/topcommon.ml[55,1993+24]..[55,1993+27])
            Pexp_ident "ref" (toplevel/topcommon.ml[55,1993+24]..[55,1993+27])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[55,1993+28]..[55,1993+31])
                Pexp_constant PConst_int (100,None)
          ]
    ]
  structure_item (toplevel/topcommon.ml[56,2025+0]..[56,2025+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[56,2025+4]..[56,2025+21])
          Ppat_var "max_printer_steps" (toplevel/topcommon.ml[56,2025+4]..[56,2025+21])
        expression (toplevel/topcommon.ml[56,2025+24]..[56,2025+31])
          Pexp_apply
          expression (toplevel/topcommon.ml[56,2025+24]..[56,2025+27])
            Pexp_ident "ref" (toplevel/topcommon.ml[56,2025+24]..[56,2025+27])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[56,2025+28]..[56,2025+31])
                Pexp_constant PConst_int (300,None)
          ]
    ]
  structure_item (toplevel/topcommon.ml[58,2058+0]..[58,2058+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[58,2058+4]..[58,2058+19])
          Ppat_var "print_out_value" (toplevel/topcommon.ml[58,2058+4]..[58,2058+19])
        expression (toplevel/topcommon.ml[58,2058+22]..[58,2058+38])
          Pexp_ident "Oprint.out_value" (toplevel/topcommon.ml[58,2058+22]..[58,2058+38])
    ]
  structure_item (toplevel/topcommon.ml[59,2097+0]..[59,2097+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[59,2097+4]..[59,2097+18])
          Ppat_var "print_out_type" (toplevel/topcommon.ml[59,2097+4]..[59,2097+18])
        expression (toplevel/topcommon.ml[59,2097+21]..[59,2097+36])
          Pexp_ident "Oprint.out_type" (toplevel/topcommon.ml[59,2097+21]..[59,2097+36])
    ]
  structure_item (toplevel/topcommon.ml[60,2134+0]..[60,2134+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[60,2134+4]..[60,2134+24])
          Ppat_var "print_out_class_type" (toplevel/topcommon.ml[60,2134+4]..[60,2134+24])
        expression (toplevel/topcommon.ml[60,2134+27]..[60,2134+48])
          Pexp_ident "Oprint.out_class_type" (toplevel/topcommon.ml[60,2134+27]..[60,2134+48])
    ]
  structure_item (toplevel/topcommon.ml[61,2183+0]..[61,2183+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[61,2183+4]..[61,2183+25])
          Ppat_var "print_out_module_type" (toplevel/topcommon.ml[61,2183+4]..[61,2183+25])
        expression (toplevel/topcommon.ml[61,2183+28]..[61,2183+50])
          Pexp_ident "Oprint.out_module_type" (toplevel/topcommon.ml[61,2183+28]..[61,2183+50])
    ]
  structure_item (toplevel/topcommon.ml[62,2234+0]..[62,2234+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[62,2234+4]..[62,2234+28])
          Ppat_var "print_out_type_extension" (toplevel/topcommon.ml[62,2234+4]..[62,2234+28])
        expression (toplevel/topcommon.ml[62,2234+31]..[62,2234+56])
          Pexp_ident "Oprint.out_type_extension" (toplevel/topcommon.ml[62,2234+31]..[62,2234+56])
    ]
  structure_item (toplevel/topcommon.ml[63,2291+0]..[63,2291+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[63,2291+4]..[63,2291+22])
          Ppat_var "print_out_sig_item" (toplevel/topcommon.ml[63,2291+4]..[63,2291+22])
        expression (toplevel/topcommon.ml[63,2291+25]..[63,2291+44])
          Pexp_ident "Oprint.out_sig_item" (toplevel/topcommon.ml[63,2291+25]..[63,2291+44])
    ]
  structure_item (toplevel/topcommon.ml[64,2336+0]..[64,2336+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[64,2336+4]..[64,2336+23])
          Ppat_var "print_out_signature" (toplevel/topcommon.ml[64,2336+4]..[64,2336+23])
        expression (toplevel/topcommon.ml[64,2336+26]..[64,2336+46])
          Pexp_ident "Oprint.out_signature" (toplevel/topcommon.ml[64,2336+26]..[64,2336+46])
    ]
  structure_item (toplevel/topcommon.ml[65,2383+0]..[65,2383+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[65,2383+4]..[65,2383+20])
          Ppat_var "print_out_phrase" (toplevel/topcommon.ml[65,2383+4]..[65,2383+20])
        expression (toplevel/topcommon.ml[65,2383+23]..[65,2383+40])
          Pexp_ident "Oprint.out_phrase" (toplevel/topcommon.ml[65,2383+23]..[65,2383+40])
    ]
  structure_item (toplevel/topcommon.ml[70,2481+0]..[70,2481+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[70,2481+4]..[70,2481+16])
          Ppat_var "toplevel_env" (toplevel/topcommon.ml[70,2481+4]..[70,2481+16])
        expression (toplevel/topcommon.ml[70,2481+19]..[70,2481+32])
          Pexp_apply
          expression (toplevel/topcommon.ml[70,2481+19]..[70,2481+22])
            Pexp_ident "ref" (toplevel/topcommon.ml[70,2481+19]..[70,2481+22])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[70,2481+23]..[70,2481+32])
                Pexp_ident "Env.empty" (toplevel/topcommon.ml[70,2481+23]..[70,2481+32])
          ]
    ]
  structure_item (toplevel/topcommon.ml[72,2515+0]..[72,2515+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[72,2515+4]..[72,2515+13])
          Ppat_var "backtrace" (toplevel/topcommon.ml[72,2515+4]..[72,2515+13])
        expression (toplevel/topcommon.ml[72,2515+16]..[72,2515+24])
          Pexp_apply
          expression (toplevel/topcommon.ml[72,2515+16]..[72,2515+19])
            Pexp_ident "ref" (toplevel/topcommon.ml[72,2515+16]..[72,2515+19])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[72,2515+20]..[72,2515+24])
                Pexp_construct "None" (toplevel/topcommon.ml[72,2515+20]..[72,2515+24])
                None
          ]
    ]
  structure_item (toplevel/topcommon.ml[76,2578+0]..[76,2578+36])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (toplevel/topcommon.ml[76,2578+0]..[76,2578+36])
          pext_name = "Undefined_global"
          pext_kind =
            Pext_decl
              [
                core_type (toplevel/topcommon.ml[76,2578+30]..[76,2578+36])
                  Ptyp_constr "string" (toplevel/topcommon.ml[76,2578+30]..[76,2578+36])
                  []
              ]
              None
  structure_item (toplevel/topcommon.ml[78,2616+0]..[84,2779+3])
    Pstr_modtype "EVAL_BASE" (toplevel/topcommon.ml[78,2616+12]..[78,2616+21])
      module_type (toplevel/topcommon.ml[78,2616+24]..[84,2779+3])
        Pmty_signature
        [
          signature_item (toplevel/topcommon.ml[82,2743+2]..[82,2743+34])
            Psig_value
            value_description "eval_ident" (toplevel/topcommon.ml[82,2743+6]..[82,2743+16]) (toplevel/topcommon.ml[82,2743+2]..[82,2743+34])
              core_type (toplevel/topcommon.ml[82,2743+18]..[82,2743+34])
                Ptyp_arrow
                Nolabel
                core_type (toplevel/topcommon.ml[82,2743+18]..[82,2743+25])
                  Ptyp_constr "Ident.t" (toplevel/topcommon.ml[82,2743+18]..[82,2743+25])
                  []
                core_type (toplevel/topcommon.ml[82,2743+29]..[82,2743+34])
                  Ptyp_constr "Obj.t" (toplevel/topcommon.ml[82,2743+29]..[82,2743+34])
                  []
              []
        ]
  structure_item (toplevel/topcommon.ml[86,2784+0]..[155,4963+3])
    Pstr_module
    "MakeEvalPrinter" (toplevel/topcommon.ml[86,2784+7]..[86,2784+22])
      module_expr (toplevel/topcommon.ml[86,2784+23]..[155,4963+3])
        Pmod_functor "E" (toplevel/topcommon.ml[86,2784+24]..[86,2784+25])
        module_type (toplevel/topcommon.ml[86,2784+27]..[86,2784+36])
          Pmty_ident "EVAL_BASE" (toplevel/topcommon.ml[86,2784+27]..[86,2784+36])
        module_expr (toplevel/topcommon.ml[86,2784+40]..[155,4963+3])
          Pmod_structure
          [
            structure_item (toplevel/topcommon.ml[88,2832+2]..[90,2905+56])
              Pstr_value Rec
              [
                <def>
                  pattern (toplevel/topcommon.ml[88,2832+10]..[88,2832+22])
                    Ppat_var "eval_address" (toplevel/topcommon.ml[88,2832+10]..[88,2832+22])
                  expression (toplevel/topcommon.ml[88,2832+25]..[90,2905+56])
                    Pexp_function
                    [
                      <case>
                        pattern (toplevel/topcommon.ml[89,2866+6]..[89,2866+19])
                          Ppat_construct "Env.Aident" (toplevel/topcommon.ml[89,2866+6]..[89,2866+16])
                          Some
                            []
                            pattern (toplevel/topcommon.ml[89,2866+17]..[89,2866+19])
                              Ppat_var "id" (toplevel/topcommon.ml[89,2866+17]..[89,2866+19])
                        expression (toplevel/topcommon.ml[89,2866+23]..[89,2866+38])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[89,2866+23]..[89,2866+35])
                            Pexp_ident "E.eval_ident" (toplevel/topcommon.ml[89,2866+23]..[89,2866+35])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[89,2866+36]..[89,2866+38])
                                Pexp_ident "id" (toplevel/topcommon.ml[89,2866+36]..[89,2866+38])
                          ]
                      <case>
                        pattern (toplevel/topcommon.ml[90,2905+6]..[90,2905+22])
                          Ppat_construct "Env.Adot" (toplevel/topcommon.ml[90,2905+6]..[90,2905+14])
                          Some
                            []
                            pattern (toplevel/topcommon.ml[90,2905+14]..[90,2905+22])
                              Ppat_tuple
                              [
                                pattern (toplevel/topcommon.ml[90,2905+15]..[90,2905+16])
                                  Ppat_var "p" (toplevel/topcommon.ml[90,2905+15]..[90,2905+16])
                                pattern (toplevel/topcommon.ml[90,2905+18]..[90,2905+21])
                                  Ppat_var "pos" (toplevel/topcommon.ml[90,2905+18]..[90,2905+21])
                              ]
                        expression (toplevel/topcommon.ml[90,2905+26]..[90,2905+56])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[90,2905+26]..[90,2905+35])
                            Pexp_ident "Obj.field" (toplevel/topcommon.ml[90,2905+26]..[90,2905+35])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[90,2905+36]..[90,2905+52])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[90,2905+37]..[90,2905+49])
                                  Pexp_ident "eval_address" (toplevel/topcommon.ml[90,2905+37]..[90,2905+49])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[90,2905+50]..[90,2905+51])
                                      Pexp_ident "p" (toplevel/topcommon.ml[90,2905+50]..[90,2905+51])
                                ]
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[90,2905+53]..[90,2905+56])
                                Pexp_ident "pos" (toplevel/topcommon.ml[90,2905+53]..[90,2905+56])
                          ]
                    ]
              ]
            structure_item (toplevel/topcommon.ml[92,2963+2]..[96,3085+73])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[92,2963+6]..[92,2963+15])
                    Ppat_var "eval_path" (toplevel/topcommon.ml[92,2963+6]..[92,2963+15])
                  expression (toplevel/topcommon.ml[92,2963+16]..[96,3085+73]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[92,2963+16]..[92,2963+20])
                      Ppat_var "find" (toplevel/topcommon.ml[92,2963+16]..[92,2963+20])
                    expression (toplevel/topcommon.ml[92,2963+21]..[96,3085+73]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[92,2963+21]..[92,2963+24])
                        Ppat_var "env" (toplevel/topcommon.ml[92,2963+21]..[92,2963+24])
                      expression (toplevel/topcommon.ml[92,2963+25]..[96,3085+73]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (toplevel/topcommon.ml[92,2963+25]..[92,2963+29])
                          Ppat_var "path" (toplevel/topcommon.ml[92,2963+25]..[92,2963+29])
                        expression (toplevel/topcommon.ml[93,2995+4]..[96,3085+73])
                          Pexp_match
                          expression (toplevel/topcommon.ml[93,2995+10]..[93,2995+23])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[93,2995+10]..[93,2995+14])
                              Pexp_ident "find" (toplevel/topcommon.ml[93,2995+10]..[93,2995+14])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[93,2995+15]..[93,2995+19])
                                  Pexp_ident "path" (toplevel/topcommon.ml[93,2995+15]..[93,2995+19])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[93,2995+20]..[93,2995+23])
                                  Pexp_ident "env" (toplevel/topcommon.ml[93,2995+20]..[93,2995+23])
                            ]
                          [
                            <case>
                              pattern (toplevel/topcommon.ml[94,3024+6]..[94,3024+10])
                                Ppat_var "addr" (toplevel/topcommon.ml[94,3024+6]..[94,3024+10])
                              expression (toplevel/topcommon.ml[94,3024+14]..[94,3024+31])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[94,3024+14]..[94,3024+26])
                                  Pexp_ident "eval_address" (toplevel/topcommon.ml[94,3024+14]..[94,3024+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[94,3024+27]..[94,3024+31])
                                      Pexp_ident "addr" (toplevel/topcommon.ml[94,3024+27]..[94,3024+31])
                                ]
                            <case>
                              pattern (toplevel/topcommon.ml[95,3056+6]..[95,3056+25])
                                Ppat_exception
                                pattern (toplevel/topcommon.ml[95,3056+16]..[95,3056+25])
                                  Ppat_construct "Not_found" (toplevel/topcommon.ml[95,3056+16]..[95,3056+25])
                                  None
                              expression (toplevel/topcommon.ml[96,3085+8]..[96,3085+73])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[96,3085+8]..[96,3085+24])
                                  Pexp_ident "Misc.fatal_error" (toplevel/topcommon.ml[96,3085+8]..[96,3085+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[96,3085+25]..[96,3085+73])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[96,3085+54]..[96,3085+55])
                                        Pexp_ident "^" (toplevel/topcommon.ml[96,3085+54]..[96,3085+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[96,3085+26]..[96,3085+53])
                                            Pexp_constant PConst_string("Cannot find address for: ",(toplevel/topcommon.ml[96,3085+27]..[96,3085+52]),None)
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[96,3085+56]..[96,3085+72])
                                            Pexp_apply
                                            expression (toplevel/topcommon.ml[96,3085+57]..[96,3085+66])
                                              Pexp_ident "Path.name" (toplevel/topcommon.ml[96,3085+57]..[96,3085+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (toplevel/topcommon.ml[96,3085+67]..[96,3085+71])
                                                  Pexp_ident "path" (toplevel/topcommon.ml[96,3085+67]..[96,3085+71])
                                            ]
                                      ]
                                ]
                          ]
              ]
            structure_item (toplevel/topcommon.ml[98,3160+2]..[99,3194+46])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[98,3160+6]..[98,3160+22])
                    Ppat_var "eval_module_path" (toplevel/topcommon.ml[98,3160+6]..[98,3160+22])
                  expression (toplevel/topcommon.ml[98,3160+23]..[99,3194+46]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[98,3160+23]..[98,3160+26])
                      Ppat_var "env" (toplevel/topcommon.ml[98,3160+23]..[98,3160+26])
                    expression (toplevel/topcommon.ml[98,3160+27]..[99,3194+46]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[98,3160+27]..[98,3160+31])
                        Ppat_var "path" (toplevel/topcommon.ml[98,3160+27]..[98,3160+31])
                      expression (toplevel/topcommon.ml[99,3194+4]..[99,3194+46])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[99,3194+4]..[99,3194+13])
                          Pexp_ident "eval_path" (toplevel/topcommon.ml[99,3194+4]..[99,3194+13])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[99,3194+14]..[99,3194+37])
                              Pexp_ident "Env.find_module_address" (toplevel/topcommon.ml[99,3194+14]..[99,3194+37])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[99,3194+38]..[99,3194+41])
                              Pexp_ident "env" (toplevel/topcommon.ml[99,3194+38]..[99,3194+41])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[99,3194+42]..[99,3194+46])
                              Pexp_ident "path" (toplevel/topcommon.ml[99,3194+42]..[99,3194+46])
                        ]
              ]
            structure_item (toplevel/topcommon.ml[101,3242+2]..[102,3275+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[101,3242+6]..[101,3242+21])
                    Ppat_var "eval_value_path" (toplevel/topcommon.ml[101,3242+6]..[101,3242+21])
                  expression (toplevel/topcommon.ml[101,3242+22]..[102,3275+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[101,3242+22]..[101,3242+25])
                      Ppat_var "env" (toplevel/topcommon.ml[101,3242+22]..[101,3242+25])
                    expression (toplevel/topcommon.ml[101,3242+26]..[102,3275+45]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[101,3242+26]..[101,3242+30])
                        Ppat_var "path" (toplevel/topcommon.ml[101,3242+26]..[101,3242+30])
                      expression (toplevel/topcommon.ml[102,3275+4]..[102,3275+45])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[102,3275+4]..[102,3275+13])
                          Pexp_ident "eval_path" (toplevel/topcommon.ml[102,3275+4]..[102,3275+13])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[102,3275+14]..[102,3275+36])
                              Pexp_ident "Env.find_value_address" (toplevel/topcommon.ml[102,3275+14]..[102,3275+36])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[102,3275+37]..[102,3275+40])
                              Pexp_ident "env" (toplevel/topcommon.ml[102,3275+37]..[102,3275+40])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[102,3275+41]..[102,3275+45])
                              Pexp_ident "path" (toplevel/topcommon.ml[102,3275+41]..[102,3275+45])
                        ]
              ]
            structure_item (toplevel/topcommon.ml[104,3322+2]..[105,3359+51])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[104,3322+6]..[104,3322+25])
                    Ppat_var "eval_extension_path" (toplevel/topcommon.ml[104,3322+6]..[104,3322+25])
                  expression (toplevel/topcommon.ml[104,3322+26]..[105,3359+51]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[104,3322+26]..[104,3322+29])
                      Ppat_var "env" (toplevel/topcommon.ml[104,3322+26]..[104,3322+29])
                    expression (toplevel/topcommon.ml[104,3322+30]..[105,3359+51]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[104,3322+30]..[104,3322+34])
                        Ppat_var "path" (toplevel/topcommon.ml[104,3322+30]..[104,3322+34])
                      expression (toplevel/topcommon.ml[105,3359+4]..[105,3359+51])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[105,3359+4]..[105,3359+13])
                          Pexp_ident "eval_path" (toplevel/topcommon.ml[105,3359+4]..[105,3359+13])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[105,3359+14]..[105,3359+42])
                              Pexp_ident "Env.find_constructor_address" (toplevel/topcommon.ml[105,3359+14]..[105,3359+42])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[105,3359+43]..[105,3359+46])
                              Pexp_ident "env" (toplevel/topcommon.ml[105,3359+43]..[105,3359+46])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[105,3359+47]..[105,3359+51])
                              Pexp_ident "path" (toplevel/topcommon.ml[105,3359+47]..[105,3359+51])
                        ]
              ]
            structure_item (toplevel/topcommon.ml[107,3412+2]..[108,3445+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[107,3412+6]..[107,3412+21])
                    Ppat_var "eval_class_path" (toplevel/topcommon.ml[107,3412+6]..[107,3412+21])
                  expression (toplevel/topcommon.ml[107,3412+22]..[108,3445+45]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[107,3412+22]..[107,3412+25])
                      Ppat_var "env" (toplevel/topcommon.ml[107,3412+22]..[107,3412+25])
                    expression (toplevel/topcommon.ml[107,3412+26]..[108,3445+45]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[107,3412+26]..[107,3412+30])
                        Ppat_var "path" (toplevel/topcommon.ml[107,3412+26]..[107,3412+30])
                      expression (toplevel/topcommon.ml[108,3445+4]..[108,3445+45])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[108,3445+4]..[108,3445+13])
                          Pexp_ident "eval_path" (toplevel/topcommon.ml[108,3445+4]..[108,3445+13])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[108,3445+14]..[108,3445+36])
                              Pexp_ident "Env.find_class_address" (toplevel/topcommon.ml[108,3445+14]..[108,3445+36])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[108,3445+37]..[108,3445+40])
                              Pexp_ident "env" (toplevel/topcommon.ml[108,3445+37]..[108,3445+40])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[108,3445+41]..[108,3445+45])
                              Pexp_ident "path" (toplevel/topcommon.ml[108,3445+41]..[108,3445+45])
                        ]
              ]
            structure_item (toplevel/topcommon.ml[111,3493+2]..[119,3744+8])
              Pstr_module
              "Printer" (toplevel/topcommon.ml[111,3493+9]..[111,3493+16])
                module_expr (toplevel/topcommon.ml[111,3493+19]..[119,3744+8])
                  Pmod_apply
                  module_expr (toplevel/topcommon.ml[111,3493+19]..[111,3493+40])
                    Pmod_apply
                    module_expr (toplevel/topcommon.ml[111,3493+19]..[111,3493+35])
                      Pmod_ident "Genprintval.Make" (toplevel/topcommon.ml[111,3493+19]..[111,3493+35])
                    module_expr (toplevel/topcommon.ml[111,3493+36]..[111,3493+39])
                      Pmod_ident "Obj" (toplevel/topcommon.ml[111,3493+36]..[111,3493+39])
                  module_expr (toplevel/topcommon.ml[111,3493+41]..[119,3744+7])
                    Pmod_structure
                    [
                      structure_item (toplevel/topcommon.ml[112,3541+6]..[112,3541+23])
                        Pstr_type Rec
                        [
                          type_declaration "valu" (toplevel/topcommon.ml[112,3541+11]..[112,3541+15]) (toplevel/topcommon.ml[112,3541+6]..[112,3541+23])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (toplevel/topcommon.ml[112,3541+18]..[112,3541+23])
                                  Ptyp_constr "Obj.t" (toplevel/topcommon.ml[112,3541+18]..[112,3541+23])
                                  []
                        ]
                      structure_item (toplevel/topcommon.ml[113,3565+6]..[113,3565+21])
                        Pstr_exception
                        type_exception
                          ptyext_constructor =
                            extension_constructor (toplevel/topcommon.ml[113,3565+6]..[113,3565+21])
                              pext_name = "Error"
                              pext_kind =
                                Pext_decl
                                  []
                                  None
                      structure_item (toplevel/topcommon.ml[114,3587+6]..[117,3682+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (toplevel/topcommon.ml[114,3587+10]..[114,3587+22])
                              Ppat_var "eval_address" (toplevel/topcommon.ml[114,3587+10]..[114,3587+22])
                            expression (toplevel/topcommon.ml[114,3587+23]..[117,3682+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (toplevel/topcommon.ml[114,3587+23]..[114,3587+27])
                                Ppat_var "addr" (toplevel/topcommon.ml[114,3587+23]..[114,3587+27])
                              expression (toplevel/topcommon.ml[115,3617+8]..[117,3682+21])
                                Pexp_try
                                expression (toplevel/topcommon.ml[115,3617+12]..[115,3617+29])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[115,3617+12]..[115,3617+24])
                                    Pexp_ident "eval_address" (toplevel/topcommon.ml[115,3617+12]..[115,3617+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[115,3617+25]..[115,3617+29])
                                        Pexp_ident "addr" (toplevel/topcommon.ml[115,3617+25]..[115,3617+29])
                                  ]
                                [
                                  <case>
                                    pattern (toplevel/topcommon.ml[116,3647+13]..[116,3647+31])
                                      Ppat_construct "Undefined_global" (toplevel/topcommon.ml[116,3647+13]..[116,3647+29])
                                      Some
                                        []
                                        pattern (toplevel/topcommon.ml[116,3647+30]..[116,3647+31])
                                          Ppat_any
                                    expression (toplevel/topcommon.ml[117,3682+10]..[117,3682+21])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[117,3682+10]..[117,3682+15])
                                        Pexp_ident "raise" (toplevel/topcommon.ml[117,3682+10]..[117,3682+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[117,3682+16]..[117,3682+21])
                                            Pexp_construct "Error" (toplevel/topcommon.ml[117,3682+16]..[117,3682+21])
                                            None
                                      ]
                                ]
                        ]
                      structure_item (toplevel/topcommon.ml[118,3704+6]..[118,3704+39])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (toplevel/topcommon.ml[118,3704+10]..[118,3704+20])
                              Ppat_var "same_value" (toplevel/topcommon.ml[118,3704+10]..[118,3704+20])
                            expression (toplevel/topcommon.ml[118,3704+21]..[118,3704+39]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (toplevel/topcommon.ml[118,3704+21]..[118,3704+23])
                                Ppat_var "v1" (toplevel/topcommon.ml[118,3704+21]..[118,3704+23])
                              expression (toplevel/topcommon.ml[118,3704+24]..[118,3704+39]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (toplevel/topcommon.ml[118,3704+24]..[118,3704+26])
                                  Ppat_var "v2" (toplevel/topcommon.ml[118,3704+24]..[118,3704+26])
                                expression (toplevel/topcommon.ml[118,3704+29]..[118,3704+39])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[118,3704+33]..[118,3704+35])
                                    Pexp_ident "==" (toplevel/topcommon.ml[118,3704+33]..[118,3704+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[118,3704+30]..[118,3704+32])
                                        Pexp_ident "v1" (toplevel/topcommon.ml[118,3704+30]..[118,3704+32])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[118,3704+36]..[118,3704+38])
                                        Pexp_ident "v2" (toplevel/topcommon.ml[118,3704+36]..[118,3704+38])
                                  ]
                        ]
                    ]
            structure_item (toplevel/topcommon.ml[121,3754+2]..[122,3794+66])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[121,3754+6]..[121,3754+29])
                    Ppat_var "print_untyped_exception" (toplevel/topcommon.ml[121,3754+6]..[121,3754+29])
                  expression (toplevel/topcommon.ml[121,3754+30]..[122,3794+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[121,3754+30]..[121,3754+33])
                      Ppat_var "ppf" (toplevel/topcommon.ml[121,3754+30]..[121,3754+33])
                    expression (toplevel/topcommon.ml[121,3754+34]..[122,3794+66]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[121,3754+34]..[121,3754+37])
                        Ppat_var "obj" (toplevel/topcommon.ml[121,3754+34]..[121,3754+37])
                      expression (toplevel/topcommon.ml[122,3794+4]..[122,3794+66])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[122,3794+4]..[122,3794+20])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[122,3794+4]..[122,3794+5])
                            Pexp_ident "!" (toplevel/topcommon.ml[122,3794+4]..[122,3794+5])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[122,3794+5]..[122,3794+20])
                                Pexp_ident "print_out_value" (toplevel/topcommon.ml[122,3794+5]..[122,3794+20])
                          ]
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[122,3794+21]..[122,3794+24])
                              Pexp_ident "ppf" (toplevel/topcommon.ml[122,3794+21]..[122,3794+24])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[122,3794+25]..[122,3794+66])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[122,3794+26]..[122,3794+61])
                                Pexp_ident "Printer.outval_of_untyped_exception" (toplevel/topcommon.ml[122,3794+26]..[122,3794+61])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[122,3794+62]..[122,3794+65])
                                    Pexp_ident "obj" (toplevel/topcommon.ml[122,3794+62]..[122,3794+65])
                              ]
                        ]
              ]
            structure_item (toplevel/topcommon.ml[123,3861+2]..[125,3962+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[123,3861+6]..[123,3861+21])
                    Ppat_var "outval_of_value" (toplevel/topcommon.ml[123,3861+6]..[123,3861+21])
                  expression (toplevel/topcommon.ml[123,3861+22]..[125,3962+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[123,3861+22]..[123,3861+25])
                      Ppat_var "env" (toplevel/topcommon.ml[123,3861+22]..[123,3861+25])
                    expression (toplevel/topcommon.ml[123,3861+26]..[125,3962+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[123,3861+26]..[123,3861+29])
                        Ppat_var "obj" (toplevel/topcommon.ml[123,3861+26]..[123,3861+29])
                      expression (toplevel/topcommon.ml[123,3861+30]..[125,3962+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (toplevel/topcommon.ml[123,3861+30]..[123,3861+32])
                          Ppat_var "ty" (toplevel/topcommon.ml[123,3861+30]..[123,3861+32])
                        expression (toplevel/topcommon.ml[124,3896+4]..[125,3962+36])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[124,3896+4]..[124,3896+27])
                            Pexp_ident "Printer.outval_of_value" (toplevel/topcommon.ml[124,3896+4]..[124,3896+27])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[124,3896+28]..[124,3896+46])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[124,3896+28]..[124,3896+29])
                                  Pexp_ident "!" (toplevel/topcommon.ml[124,3896+28]..[124,3896+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[124,3896+29]..[124,3896+46])
                                      Pexp_ident "max_printer_steps" (toplevel/topcommon.ml[124,3896+29]..[124,3896+46])
                                ]
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[124,3896+47]..[124,3896+65])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[124,3896+47]..[124,3896+48])
                                  Pexp_ident "!" (toplevel/topcommon.ml[124,3896+47]..[124,3896+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[124,3896+48]..[124,3896+65])
                                      Pexp_ident "max_printer_depth" (toplevel/topcommon.ml[124,3896+48]..[124,3896+65])
                                ]
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[125,3962+6]..[125,3962+25])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (toplevel/topcommon.ml[125,3962+11]..[125,3962+12])
                                  Ppat_any
                                expression (toplevel/topcommon.ml[125,3962+13]..[125,3962+24]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (toplevel/topcommon.ml[125,3962+13]..[125,3962+14])
                                    Ppat_any
                                  expression (toplevel/topcommon.ml[125,3962+15]..[125,3962+24]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (toplevel/topcommon.ml[125,3962+15]..[125,3962+16])
                                      Ppat_any
                                    expression (toplevel/topcommon.ml[125,3962+20]..[125,3962+24])
                                      Pexp_construct "None" (toplevel/topcommon.ml[125,3962+20]..[125,3962+24])
                                      None
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[125,3962+26]..[125,3962+29])
                                Pexp_ident "env" (toplevel/topcommon.ml[125,3962+26]..[125,3962+29])
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[125,3962+30]..[125,3962+33])
                                Pexp_ident "obj" (toplevel/topcommon.ml[125,3962+30]..[125,3962+33])
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[125,3962+34]..[125,3962+36])
                                Pexp_ident "ty" (toplevel/topcommon.ml[125,3962+34]..[125,3962+36])
                          ]
              ]
            structure_item (toplevel/topcommon.ml[126,3999+2]..[127,4034+53])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[126,3999+6]..[126,3999+17])
                    Ppat_var "print_value" (toplevel/topcommon.ml[126,3999+6]..[126,3999+17])
                  expression (toplevel/topcommon.ml[126,3999+18]..[127,4034+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[126,3999+18]..[126,3999+21])
                      Ppat_var "env" (toplevel/topcommon.ml[126,3999+18]..[126,3999+21])
                    expression (toplevel/topcommon.ml[126,3999+22]..[127,4034+53]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[126,3999+22]..[126,3999+25])
                        Ppat_var "obj" (toplevel/topcommon.ml[126,3999+22]..[126,3999+25])
                      expression (toplevel/topcommon.ml[126,3999+26]..[127,4034+53]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (toplevel/topcommon.ml[126,3999+26]..[126,3999+29])
                          Ppat_var "ppf" (toplevel/topcommon.ml[126,3999+26]..[126,3999+29])
                        expression (toplevel/topcommon.ml[126,3999+30]..[127,4034+53]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (toplevel/topcommon.ml[126,3999+30]..[126,3999+32])
                            Ppat_var "ty" (toplevel/topcommon.ml[126,3999+30]..[126,3999+32])
                          expression (toplevel/topcommon.ml[127,4034+4]..[127,4034+53])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[127,4034+4]..[127,4034+20])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[127,4034+4]..[127,4034+5])
                                Pexp_ident "!" (toplevel/topcommon.ml[127,4034+4]..[127,4034+5])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[127,4034+5]..[127,4034+20])
                                    Pexp_ident "print_out_value" (toplevel/topcommon.ml[127,4034+5]..[127,4034+20])
                              ]
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[127,4034+21]..[127,4034+24])
                                  Pexp_ident "ppf" (toplevel/topcommon.ml[127,4034+21]..[127,4034+24])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[127,4034+25]..[127,4034+53])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[127,4034+26]..[127,4034+41])
                                    Pexp_ident "outval_of_value" (toplevel/topcommon.ml[127,4034+26]..[127,4034+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[127,4034+42]..[127,4034+45])
                                        Pexp_ident "env" (toplevel/topcommon.ml[127,4034+42]..[127,4034+45])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[127,4034+46]..[127,4034+49])
                                        Pexp_ident "obj" (toplevel/topcommon.ml[127,4034+46]..[127,4034+49])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[127,4034+50]..[127,4034+52])
                                        Pexp_ident "ty" (toplevel/topcommon.ml[127,4034+50]..[127,4034+52])
                                  ]
                            ]
              ]
            structure_item (toplevel/topcommon.ml[131,4143+2]..[132,4184+54])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[131,4143+6]..[131,4143+25])
                    Ppat_var "print_out_exception" (toplevel/topcommon.ml[131,4143+6]..[131,4143+25])
                  expression (toplevel/topcommon.ml[131,4143+26]..[132,4184+54]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[131,4143+26]..[131,4143+29])
                      Ppat_var "ppf" (toplevel/topcommon.ml[131,4143+26]..[131,4143+29])
                    expression (toplevel/topcommon.ml[131,4143+30]..[132,4184+54]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[131,4143+30]..[131,4143+33])
                        Ppat_var "exn" (toplevel/topcommon.ml[131,4143+30]..[131,4143+33])
                      expression (toplevel/topcommon.ml[131,4143+34]..[132,4184+54]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (toplevel/topcommon.ml[131,4143+34]..[131,4143+38])
                          Ppat_var "outv" (toplevel/topcommon.ml[131,4143+34]..[131,4143+38])
                        expression (toplevel/topcommon.ml[132,4184+4]..[132,4184+54])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[132,4184+4]..[132,4184+21])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[132,4184+4]..[132,4184+5])
                              Pexp_ident "!" (toplevel/topcommon.ml[132,4184+4]..[132,4184+5])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[132,4184+5]..[132,4184+21])
                                  Pexp_ident "print_out_phrase" (toplevel/topcommon.ml[132,4184+5]..[132,4184+21])
                            ]
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[132,4184+22]..[132,4184+25])
                                Pexp_ident "ppf" (toplevel/topcommon.ml[132,4184+22]..[132,4184+25])
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[132,4184+26]..[132,4184+54])
                                Pexp_construct "Ophr_exception" (toplevel/topcommon.ml[132,4184+27]..[132,4184+41])
                                Some
                                  expression (toplevel/topcommon.ml[132,4184+42]..[132,4184+53])
                                    Pexp_tuple
                                    [
                                      expression (toplevel/topcommon.ml[132,4184+43]..[132,4184+46])
                                        Pexp_ident "exn" (toplevel/topcommon.ml[132,4184+43]..[132,4184+46])
                                      expression (toplevel/topcommon.ml[132,4184+48]..[132,4184+52])
                                        Pexp_ident "outv" (toplevel/topcommon.ml[132,4184+48]..[132,4184+52])
                                    ]
                          ]
              ]
            structure_item (toplevel/topcommon.ml[134,4240+2]..[144,4583+27])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[134,4240+6]..[134,4240+29])
                    Ppat_var "print_exception_outcome" (toplevel/topcommon.ml[134,4240+6]..[134,4240+29])
                  expression (toplevel/topcommon.ml[134,4240+30]..[144,4583+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[134,4240+30]..[134,4240+33])
                      Ppat_var "ppf" (toplevel/topcommon.ml[134,4240+30]..[134,4240+33])
                    expression (toplevel/topcommon.ml[134,4240+34]..[144,4583+27]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[134,4240+34]..[134,4240+37])
                        Ppat_var "exn" (toplevel/topcommon.ml[134,4240+34]..[134,4240+37])
                      expression (toplevel/topcommon.ml[135,4280+4]..[144,4583+27])
                        Pexp_sequence
                        expression (toplevel/topcommon.ml[135,4280+4]..[135,4280+48])
                          Pexp_ifthenelse
                          expression (toplevel/topcommon.ml[135,4280+7]..[135,4280+26])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[135,4280+11]..[135,4280+12])
                              Pexp_ident "=" (toplevel/topcommon.ml[135,4280+11]..[135,4280+12])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[135,4280+7]..[135,4280+10])
                                  Pexp_ident "exn" (toplevel/topcommon.ml[135,4280+7]..[135,4280+10])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[135,4280+13]..[135,4280+26])
                                  Pexp_construct "Out_of_memory" (toplevel/topcommon.ml[135,4280+13]..[135,4280+26])
                                  None
                            ]
                          expression (toplevel/topcommon.ml[135,4280+32]..[135,4280+48])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[135,4280+32]..[135,4280+45])
                              Pexp_ident "Gc.full_major" (toplevel/topcommon.ml[135,4280+32]..[135,4280+45])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[135,4280+46]..[135,4280+48])
                                  Pexp_construct "()" (toplevel/topcommon.ml[135,4280+46]..[135,4280+48])
                                  None
                            ]
                          None
                        expression (toplevel/topcommon.ml[136,4330+4]..[144,4583+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (toplevel/topcommon.ml[136,4330+8]..[136,4330+12])
                                Ppat_var "outv" (toplevel/topcommon.ml[136,4330+8]..[136,4330+12])
                              expression (toplevel/topcommon.ml[136,4330+15]..[136,4330+75])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[136,4330+15]..[136,4330+30])
                                  Pexp_ident "outval_of_value" (toplevel/topcommon.ml[136,4330+15]..[136,4330+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[136,4330+31]..[136,4330+44])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[136,4330+31]..[136,4330+32])
                                        Pexp_ident "!" (toplevel/topcommon.ml[136,4330+31]..[136,4330+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[136,4330+32]..[136,4330+44])
                                            Pexp_ident "toplevel_env" (toplevel/topcommon.ml[136,4330+32]..[136,4330+44])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[136,4330+45]..[136,4330+59])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[136,4330+46]..[136,4330+54])
                                        Pexp_ident "Obj.repr" (toplevel/topcommon.ml[136,4330+46]..[136,4330+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[136,4330+55]..[136,4330+58])
                                            Pexp_ident "exn" (toplevel/topcommon.ml[136,4330+55]..[136,4330+58])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[136,4330+60]..[136,4330+75])
                                      Pexp_ident "Predef.type_exn" (toplevel/topcommon.ml[136,4330+60]..[136,4330+75])
                                ]
                          ]
                          expression (toplevel/topcommon.ml[137,4409+4]..[144,4583+27])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[137,4409+4]..[137,4409+36])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[137,4409+4]..[137,4409+23])
                                Pexp_ident "print_out_exception" (toplevel/topcommon.ml[137,4409+4]..[137,4409+23])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[137,4409+24]..[137,4409+27])
                                    Pexp_ident "ppf" (toplevel/topcommon.ml[137,4409+24]..[137,4409+27])
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[137,4409+28]..[137,4409+31])
                                    Pexp_ident "exn" (toplevel/topcommon.ml[137,4409+28]..[137,4409+31])
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[137,4409+32]..[137,4409+36])
                                    Pexp_ident "outv" (toplevel/topcommon.ml[137,4409+32]..[137,4409+36])
                              ]
                            expression (toplevel/topcommon.ml[138,4447+4]..[144,4583+27])
                              Pexp_ifthenelse
                              expression (toplevel/topcommon.ml[138,4447+7]..[138,4447+35])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[138,4447+7]..[138,4447+32])
                                  Pexp_ident "Printexc.backtrace_status" (toplevel/topcommon.ml[138,4447+7]..[138,4447+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[138,4447+33]..[138,4447+35])
                                      Pexp_construct "()" (toplevel/topcommon.ml[138,4447+33]..[138,4447+35])
                                      None
                                ]
                              expression (toplevel/topcommon.ml[140,4492+6]..[144,4583+27])
                                Pexp_match
                                expression (toplevel/topcommon.ml[140,4492+12]..[140,4492+22])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[140,4492+12]..[140,4492+13])
                                    Pexp_ident "!" (toplevel/topcommon.ml[140,4492+12]..[140,4492+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[140,4492+13]..[140,4492+22])
                                        Pexp_ident "backtrace" (toplevel/topcommon.ml[140,4492+13]..[140,4492+22])
                                  ]
                                [
                                  <case>
                                    pattern (toplevel/topcommon.ml[141,4520+8]..[141,4520+12])
                                      Ppat_construct "None" (toplevel/topcommon.ml[141,4520+8]..[141,4520+12])
                                      None
                                    expression (toplevel/topcommon.ml[141,4520+16]..[141,4520+18])
                                      Pexp_construct "()" (toplevel/topcommon.ml[141,4520+16]..[141,4520+18])
                                      None
                                  <case>
                                    pattern (toplevel/topcommon.ml[142,4539+8]..[142,4539+14])
                                      Ppat_construct "Some" (toplevel/topcommon.ml[142,4539+8]..[142,4539+12])
                                      Some
                                        []
                                        pattern (toplevel/topcommon.ml[142,4539+13]..[142,4539+14])
                                          Ppat_var "b" (toplevel/topcommon.ml[142,4539+13]..[142,4539+14])
                                    expression (toplevel/topcommon.ml[143,4557+10]..[144,4583+27])
                                      Pexp_sequence
                                      expression (toplevel/topcommon.ml[143,4557+10]..[143,4557+24])
                                        Pexp_apply
                                        expression (toplevel/topcommon.ml[143,4557+10]..[143,4557+22])
                                          Pexp_ident "print_string" (toplevel/topcommon.ml[143,4557+10]..[143,4557+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[143,4557+23]..[143,4557+24])
                                              Pexp_ident "b" (toplevel/topcommon.ml[143,4557+23]..[143,4557+24])
                                        ]
                                      expression (toplevel/topcommon.ml[144,4583+10]..[144,4583+27])
                                        Pexp_apply
                                        expression (toplevel/topcommon.ml[144,4583+20]..[144,4583+22])
                                          Pexp_ident ":=" (toplevel/topcommon.ml[144,4583+20]..[144,4583+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[144,4583+10]..[144,4583+19])
                                              Pexp_ident "backtrace" (toplevel/topcommon.ml[144,4583+10]..[144,4583+19])
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[144,4583+23]..[144,4583+27])
                                              Pexp_construct "None" (toplevel/topcommon.ml[144,4583+23]..[144,4583+27])
                                              None
                                        ]
                                ]
                              None
              ]
            structure_item (toplevel/topcommon.ml[146,4612+2]..[148,4694+42])
              Pstr_type Rec
              [
                type_declaration "gen_printer" (toplevel/topcommon.ml[146,4612+16]..[146,4612+27]) (toplevel/topcommon.ml[146,4612+2]..[148,4694+42])
                  ptype_params =
                    [
                      core_type (toplevel/topcommon.ml[146,4612+8]..[146,4612+10])
                        Ptyp_var a
                      core_type (toplevel/topcommon.ml[146,4612+12]..[146,4612+14])
                        Ptyp_var b
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (toplevel/topcommon.ml[147,4677+4]..[147,4677+16])
                          "Zero" (toplevel/topcommon.ml[147,4677+6]..[147,4677+10])
                          [
                            core_type (toplevel/topcommon.ml[147,4677+14]..[147,4677+16])
                              Ptyp_var b
                          ]
                          None
                        (toplevel/topcommon.ml[148,4694+4]..[148,4694+42])
                          "Succ" (toplevel/topcommon.ml[148,4694+6]..[148,4694+10])
                          [
                            core_type (toplevel/topcommon.ml[148,4694+15]..[148,4694+41])
                              Ptyp_arrow
                              Nolabel
                              core_type (toplevel/topcommon.ml[148,4694+15]..[148,4694+17])
                                Ptyp_var a
                              core_type (toplevel/topcommon.ml[148,4694+21]..[148,4694+41])
                                Ptyp_constr "gen_printer" (toplevel/topcommon.ml[148,4694+30]..[148,4694+41])
                                [
                                  core_type (toplevel/topcommon.ml[148,4694+22]..[148,4694+24])
                                    Ptyp_var a
                                  core_type (toplevel/topcommon.ml[148,4694+26]..[148,4694+28])
                                    Ptyp_var b
                                ]
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (toplevel/topcommon.ml[146,4612+30]..[146,4612+62])
                        Ptyp_constr "Genprintval.gen_printer" (toplevel/topcommon.ml[146,4612+39]..[146,4612+62])
                        [
                          core_type (toplevel/topcommon.ml[146,4612+31]..[146,4612+33])
                            Ptyp_var a
                          core_type (toplevel/topcommon.ml[146,4612+35]..[146,4612+37])
                            Ptyp_var b
                        ]
              ]
            structure_item (toplevel/topcommon.ml[150,4738+2]..[150,4738+47])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[150,4738+6]..[150,4738+21])
                    Ppat_var "install_printer" (toplevel/topcommon.ml[150,4738+6]..[150,4738+21])
                  expression (toplevel/topcommon.ml[150,4738+24]..[150,4738+47])
                    Pexp_ident "Printer.install_printer" (toplevel/topcommon.ml[150,4738+24]..[150,4738+47])
              ]
            structure_item (toplevel/topcommon.ml[151,4786+2]..[151,4786+63])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[151,4786+6]..[151,4786+29])
                    Ppat_var "install_generic_printer" (toplevel/topcommon.ml[151,4786+6]..[151,4786+29])
                  expression (toplevel/topcommon.ml[151,4786+32]..[151,4786+63])
                    Pexp_ident "Printer.install_generic_printer" (toplevel/topcommon.ml[151,4786+32]..[151,4786+63])
              ]
            structure_item (toplevel/topcommon.ml[152,4850+2]..[152,4850+65])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[152,4850+6]..[152,4850+30])
                    Ppat_var "install_generic_printer'" (toplevel/topcommon.ml[152,4850+6]..[152,4850+30])
                  expression (toplevel/topcommon.ml[152,4850+33]..[152,4850+65])
                    Pexp_ident "Printer.install_generic_printer'" (toplevel/topcommon.ml[152,4850+33]..[152,4850+65])
              ]
            structure_item (toplevel/topcommon.ml[153,4916+2]..[153,4916+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[153,4916+6]..[153,4916+20])
                    Ppat_var "remove_printer" (toplevel/topcommon.ml[153,4916+6]..[153,4916+20])
                  expression (toplevel/topcommon.ml[153,4916+23]..[153,4916+45])
                    Pexp_ident "Printer.remove_printer" (toplevel/topcommon.ml[153,4916+23]..[153,4916+45])
              ]
          ]
  structure_item (toplevel/topcommon.ml[160,5000+0]..[160,5000+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[160,5000+4]..[160,5000+25])
          Ppat_var "toplevel_startup_hook" (toplevel/topcommon.ml[160,5000+4]..[160,5000+25])
        expression (toplevel/topcommon.ml[160,5000+28]..[160,5000+46])
          Pexp_apply
          expression (toplevel/topcommon.ml[160,5000+28]..[160,5000+31])
            Pexp_ident "ref" (toplevel/topcommon.ml[160,5000+28]..[160,5000+31])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[160,5000+32]..[160,5000+46])
                Pexp_fun
                Nolabel
                None
                pattern (toplevel/topcommon.ml[160,5000+37]..[160,5000+39])
                  Ppat_construct "()" (toplevel/topcommon.ml[160,5000+37]..[160,5000+39])
                  None
                expression (toplevel/topcommon.ml[160,5000+43]..[160,5000+45])
                  Pexp_construct "()" (toplevel/topcommon.ml[160,5000+43]..[160,5000+45])
                  None
          ]
    ]
  structure_item (toplevel/topcommon.ml[162,5048+0]..[162,5048+15])
    Pstr_type Rec
    [
      type_declaration "event" (toplevel/topcommon.ml[162,5048+5]..[162,5048+10]) (toplevel/topcommon.ml[162,5048+0]..[162,5048+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_open
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (toplevel/topcommon.ml[163,5064+0]..[165,5090+15])
    Pstr_typext
    type_extension
      ptyext_path = "event" (toplevel/topcommon.ml[163,5064+5]..[163,5064+10])
      ptyext_params =
        []
      ptyext_constructors =
        [
          extension_constructor (toplevel/topcommon.ml[164,5078+2]..[164,5078+11])
            pext_name = "Startup"
            pext_kind =
              Pext_decl
                []
                None
          extension_constructor (toplevel/topcommon.ml[165,5090+2]..[165,5090+15])
            pext_name = "After_setup"
            pext_kind =
              Pext_decl
                []
                None
        ]
      ptyext_private = Public
  structure_item (toplevel/topcommon.ml[167,5107+0]..[167,5107+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[167,5107+4]..[167,5107+9])
          Ppat_var "hooks" (toplevel/topcommon.ml[167,5107+4]..[167,5107+9])
        expression (toplevel/topcommon.ml[167,5107+12]..[167,5107+18])
          Pexp_apply
          expression (toplevel/topcommon.ml[167,5107+12]..[167,5107+15])
            Pexp_ident "ref" (toplevel/topcommon.ml[167,5107+12]..[167,5107+15])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[167,5107+16]..[167,5107+18])
                Pexp_construct "[]" (toplevel/topcommon.ml[167,5107+16]..[167,5107+18])
                None
          ]
    ]
  structure_item (toplevel/topcommon.ml[169,5127+0]..[169,5127+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[169,5127+4]..[169,5127+12])
          Ppat_var "add_hook" (toplevel/topcommon.ml[169,5127+4]..[169,5127+12])
        expression (toplevel/topcommon.ml[169,5127+13]..[169,5127+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[169,5127+13]..[169,5127+14])
            Ppat_var "f" (toplevel/topcommon.ml[169,5127+13]..[169,5127+14])
          expression (toplevel/topcommon.ml[169,5127+17]..[169,5127+37])
            Pexp_apply
            expression (toplevel/topcommon.ml[169,5127+23]..[169,5127+25])
              Pexp_ident ":=" (toplevel/topcommon.ml[169,5127+23]..[169,5127+25])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[169,5127+17]..[169,5127+22])
                  Pexp_ident "hooks" (toplevel/topcommon.ml[169,5127+17]..[169,5127+22])
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[169,5127+26]..[169,5127+37])
                  Pexp_construct "::" (toplevel/topcommon.ml[169,5127+28]..[169,5127+30])
                  Some
                    expression (toplevel/topcommon.ml[169,5127+26]..[169,5127+37]) ghost
                      Pexp_tuple
                      [
                        expression (toplevel/topcommon.ml[169,5127+26]..[169,5127+27])
                          Pexp_ident "f" (toplevel/topcommon.ml[169,5127+26]..[169,5127+27])
                        expression (toplevel/topcommon.ml[169,5127+31]..[169,5127+37])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[169,5127+31]..[169,5127+32])
                            Pexp_ident "!" (toplevel/topcommon.ml[169,5127+31]..[169,5127+32])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[169,5127+32]..[169,5127+37])
                                Pexp_ident "hooks" (toplevel/topcommon.ml[169,5127+32]..[169,5127+37])
                          ]
                      ]
            ]
    ]
  structure_item (toplevel/topcommon.ml[171,5166+0]..[174,5241+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[171,5166+4]..[171,5166+6])
          Ppat_construct "()" (toplevel/topcommon.ml[171,5166+4]..[171,5166+6])
          None
        expression (toplevel/topcommon.ml[172,5175+2]..[174,5241+16])
          Pexp_apply
          expression (toplevel/topcommon.ml[172,5175+2]..[172,5175+10])
            Pexp_ident "add_hook" (toplevel/topcommon.ml[172,5175+2]..[172,5175+10])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[172,5175+11]..[174,5241+16])
                Pexp_function
                [
                  <case>
                    pattern (toplevel/topcommon.ml[173,5196+8]..[173,5196+15])
                      Ppat_construct "Startup" (toplevel/topcommon.ml[173,5196+8]..[173,5196+15])
                      None
                    expression (toplevel/topcommon.ml[173,5196+19]..[173,5196+44])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[173,5196+19]..[173,5196+41])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[173,5196+19]..[173,5196+20])
                          Pexp_ident "!" (toplevel/topcommon.ml[173,5196+19]..[173,5196+20])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[173,5196+20]..[173,5196+41])
                              Pexp_ident "toplevel_startup_hook" (toplevel/topcommon.ml[173,5196+20]..[173,5196+41])
                        ]
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[173,5196+42]..[173,5196+44])
                            Pexp_construct "()" (toplevel/topcommon.ml[173,5196+42]..[173,5196+44])
                            None
                      ]
                  <case>
                    pattern (toplevel/topcommon.ml[174,5241+8]..[174,5241+9])
                      Ppat_any
                    expression (toplevel/topcommon.ml[174,5241+13]..[174,5241+15])
                      Pexp_construct "()" (toplevel/topcommon.ml[174,5241+13]..[174,5241+15])
                      None
                ]
          ]
    ]
  structure_item (toplevel/topcommon.ml[176,5259+0]..[176,5259+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[176,5259+4]..[176,5259+13])
          Ppat_var "run_hooks" (toplevel/topcommon.ml[176,5259+4]..[176,5259+13])
        expression (toplevel/topcommon.ml[176,5259+14]..[176,5259+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[176,5259+14]..[176,5259+18])
            Ppat_var "hook" (toplevel/topcommon.ml[176,5259+14]..[176,5259+18])
          expression (toplevel/topcommon.ml[176,5259+21]..[176,5259+55])
            Pexp_apply
            expression (toplevel/topcommon.ml[176,5259+21]..[176,5259+30])
              Pexp_ident "List.iter" (toplevel/topcommon.ml[176,5259+21]..[176,5259+30])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[176,5259+31]..[176,5259+48])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (toplevel/topcommon.ml[176,5259+36]..[176,5259+37])
                    Ppat_var "f" (toplevel/topcommon.ml[176,5259+36]..[176,5259+37])
                  expression (toplevel/topcommon.ml[176,5259+41]..[176,5259+47])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[176,5259+41]..[176,5259+42])
                      Pexp_ident "f" (toplevel/topcommon.ml[176,5259+41]..[176,5259+42])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[176,5259+43]..[176,5259+47])
                          Pexp_ident "hook" (toplevel/topcommon.ml[176,5259+43]..[176,5259+47])
                    ]
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[176,5259+49]..[176,5259+55])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[176,5259+49]..[176,5259+50])
                    Pexp_ident "!" (toplevel/topcommon.ml[176,5259+49]..[176,5259+50])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[176,5259+50]..[176,5259+55])
                        Pexp_ident "hooks" (toplevel/topcommon.ml[176,5259+50]..[176,5259+55])
                  ]
            ]
    ]
  structure_item (toplevel/topcommon.ml[180,5345+0]..[180,5345+60])
    Pstr_type Rec
    [
      type_declaration "evaluation_outcome" (toplevel/topcommon.ml[180,5345+5]..[180,5345+23]) (toplevel/topcommon.ml[180,5345+0]..[180,5345+60])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (toplevel/topcommon.ml[180,5345+26]..[180,5345+41])
                "Result" (toplevel/topcommon.ml[180,5345+26]..[180,5345+32])
                [
                  core_type (toplevel/topcommon.ml[180,5345+36]..[180,5345+41])
                    Ptyp_constr "Obj.t" (toplevel/topcommon.ml[180,5345+36]..[180,5345+41])
                    []
                ]
                None
              (toplevel/topcommon.ml[180,5345+42]..[180,5345+60])
                "Exception" (toplevel/topcommon.ml[180,5345+44]..[180,5345+53])
                [
                  core_type (toplevel/topcommon.ml[180,5345+57]..[180,5345+60])
                    Ptyp_constr "exn" (toplevel/topcommon.ml[180,5345+57]..[180,5345+60])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (toplevel/topcommon.ml[182,5407+0]..[184,5467+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[182,5407+4]..[182,5407+20])
          Ppat_var "record_backtrace" (toplevel/topcommon.ml[182,5407+4]..[182,5407+20])
        expression (toplevel/topcommon.ml[182,5407+21]..[184,5467+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[182,5407+21]..[182,5407+23])
            Ppat_construct "()" (toplevel/topcommon.ml[182,5407+21]..[182,5407+23])
            None
          expression (toplevel/topcommon.ml[183,5433+2]..[184,5467+52])
            Pexp_ifthenelse
            expression (toplevel/topcommon.ml[183,5433+5]..[183,5433+33])
              Pexp_apply
              expression (toplevel/topcommon.ml[183,5433+5]..[183,5433+30])
                Pexp_ident "Printexc.backtrace_status" (toplevel/topcommon.ml[183,5433+5]..[183,5433+30])
              [
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[183,5433+31]..[183,5433+33])
                    Pexp_construct "()" (toplevel/topcommon.ml[183,5433+31]..[183,5433+33])
                    None
              ]
            expression (toplevel/topcommon.ml[184,5467+7]..[184,5467+52])
              Pexp_apply
              expression (toplevel/topcommon.ml[184,5467+17]..[184,5467+19])
                Pexp_ident ":=" (toplevel/topcommon.ml[184,5467+17]..[184,5467+19])
              [
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[184,5467+7]..[184,5467+16])
                    Pexp_ident "backtrace" (toplevel/topcommon.ml[184,5467+7]..[184,5467+16])
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[184,5467+20]..[184,5467+52])
                    Pexp_construct "Some" (toplevel/topcommon.ml[184,5467+20]..[184,5467+24])
                    Some
                      expression (toplevel/topcommon.ml[184,5467+25]..[184,5467+52])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[184,5467+26]..[184,5467+48])
                          Pexp_ident "Printexc.get_backtrace" (toplevel/topcommon.ml[184,5467+26]..[184,5467+48])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[184,5467+49]..[184,5467+51])
                              Pexp_construct "()" (toplevel/topcommon.ml[184,5467+49]..[184,5467+51])
                              None
                        ]
              ]
            None
    ]
  structure_item (toplevel/topcommon.ml[186,5521+0]..[198,5876+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[186,5521+4]..[186,5521+21])
          Ppat_var "preprocess_phrase" (toplevel/topcommon.ml[186,5521+4]..[186,5521+21])
        expression (toplevel/topcommon.ml[186,5521+22]..[198,5876+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[186,5521+22]..[186,5521+25])
            Ppat_var "ppf" (toplevel/topcommon.ml[186,5521+22]..[186,5521+25])
          expression (toplevel/topcommon.ml[186,5521+26]..[198,5876+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[186,5521+26]..[186,5521+29])
              Ppat_var "phr" (toplevel/topcommon.ml[186,5521+26]..[186,5521+29])
            expression (toplevel/topcommon.ml[187,5553+2]..[198,5876+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[187,5553+6]..[187,5553+9])
                    Ppat_var "phr" (toplevel/topcommon.ml[187,5553+6]..[187,5553+9])
                  expression (toplevel/topcommon.ml[188,5565+4]..[194,5730+16])
                    Pexp_match
                    expression (toplevel/topcommon.ml[188,5565+10]..[188,5565+13])
                      Pexp_ident "phr" (toplevel/topcommon.ml[188,5565+10]..[188,5565+13])
                    [
                      <case>
                        pattern (toplevel/topcommon.ml[189,5584+6]..[189,5584+18])
                          Ppat_construct "Ptop_def" (toplevel/topcommon.ml[189,5584+6]..[189,5584+14])
                          Some
                            []
                            pattern (toplevel/topcommon.ml[189,5584+15]..[189,5584+18])
                              Ppat_var "str" (toplevel/topcommon.ml[189,5584+15]..[189,5584+18])
                        expression (toplevel/topcommon.ml[190,5606+8]..[193,5709+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (toplevel/topcommon.ml[190,5606+12]..[190,5606+15])
                                Ppat_var "str" (toplevel/topcommon.ml[190,5606+12]..[190,5606+15])
                              expression (toplevel/topcommon.ml[191,5624+10]..[191,5624+73])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[191,5624+10]..[191,5624+36])
                                  Pexp_ident "Pparse.apply_rewriters_str" (toplevel/topcommon.ml[191,5624+10]..[191,5624+36])
                                [
                                  <arg>
                                  Labelled "restore"
                                    expression (toplevel/topcommon.ml[191,5624+46]..[191,5624+50])
                                      Pexp_construct "true" (toplevel/topcommon.ml[191,5624+46]..[191,5624+50])
                                      None
                                  <arg>
                                  Labelled "tool_name"
                                    expression (toplevel/topcommon.ml[191,5624+62]..[191,5624+69])
                                      Pexp_constant PConst_string("ocaml",(toplevel/topcommon.ml[191,5624+63]..[191,5624+68]),None)
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[191,5624+70]..[191,5624+73])
                                      Pexp_ident "str" (toplevel/topcommon.ml[191,5624+70]..[191,5624+73])
                                ]
                          ]
                          expression (toplevel/topcommon.ml[193,5709+8]..[193,5709+20])
                            Pexp_construct "Ptop_def" (toplevel/topcommon.ml[193,5709+8]..[193,5709+16])
                            Some
                              expression (toplevel/topcommon.ml[193,5709+17]..[193,5709+20])
                                Pexp_ident "str" (toplevel/topcommon.ml[193,5709+17]..[193,5709+20])
                      <case>
                        pattern (toplevel/topcommon.ml[194,5730+6]..[194,5730+9])
                          Ppat_var "phr" (toplevel/topcommon.ml[194,5730+6]..[194,5730+9])
                        expression (toplevel/topcommon.ml[194,5730+13]..[194,5730+16])
                          Pexp_ident "phr" (toplevel/topcommon.ml[194,5730+13]..[194,5730+16])
                    ]
              ]
              expression (toplevel/topcommon.ml[196,5752+2]..[198,5876+5])
                Pexp_sequence
                expression (toplevel/topcommon.ml[196,5752+2]..[196,5752+61])
                  Pexp_ifthenelse
                  expression (toplevel/topcommon.ml[196,5752+5]..[196,5752+28])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[196,5752+5]..[196,5752+6])
                      Pexp_ident "!" (toplevel/topcommon.ml[196,5752+5]..[196,5752+6])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[196,5752+6]..[196,5752+28])
                          Pexp_ident "Clflags.dump_parsetree" (toplevel/topcommon.ml[196,5752+6]..[196,5752+28])
                    ]
                  expression (toplevel/topcommon.ml[196,5752+34]..[196,5752+61])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[196,5752+34]..[196,5752+53])
                      Pexp_ident "Printast.top_phrase" (toplevel/topcommon.ml[196,5752+34]..[196,5752+53])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[196,5752+54]..[196,5752+57])
                          Pexp_ident "ppf" (toplevel/topcommon.ml[196,5752+54]..[196,5752+57])
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[196,5752+58]..[196,5752+61])
                          Pexp_ident "phr" (toplevel/topcommon.ml[196,5752+58]..[196,5752+61])
                    ]
                  None
                expression (toplevel/topcommon.ml[197,5815+2]..[198,5876+5])
                  Pexp_sequence
                  expression (toplevel/topcommon.ml[197,5815+2]..[197,5815+59])
                    Pexp_ifthenelse
                    expression (toplevel/topcommon.ml[197,5815+5]..[197,5815+25])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[197,5815+5]..[197,5815+6])
                        Pexp_ident "!" (toplevel/topcommon.ml[197,5815+5]..[197,5815+6])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[197,5815+6]..[197,5815+25])
                            Pexp_ident "Clflags.dump_source" (toplevel/topcommon.ml[197,5815+6]..[197,5815+25])
                      ]
                    expression (toplevel/topcommon.ml[197,5815+31]..[197,5815+59])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[197,5815+31]..[197,5815+51])
                        Pexp_ident "Pprintast.top_phrase" (toplevel/topcommon.ml[197,5815+31]..[197,5815+51])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[197,5815+52]..[197,5815+55])
                            Pexp_ident "ppf" (toplevel/topcommon.ml[197,5815+52]..[197,5815+55])
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[197,5815+56]..[197,5815+59])
                            Pexp_ident "phr" (toplevel/topcommon.ml[197,5815+56]..[197,5815+59])
                      ]
                    None
                  expression (toplevel/topcommon.ml[198,5876+2]..[198,5876+5])
                    Pexp_ident "phr" (toplevel/topcommon.ml[198,5876+2]..[198,5876+5])
    ]
  structure_item (toplevel/topcommon.ml[202,5981+0]..[202,5981+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[202,5981+4]..[202,5981+17])
          Ppat_var "phrase_buffer" (toplevel/topcommon.ml[202,5981+4]..[202,5981+17])
        expression (toplevel/topcommon.ml[202,5981+20]..[202,5981+38])
          Pexp_apply
          expression (toplevel/topcommon.ml[202,5981+20]..[202,5981+33])
            Pexp_ident "Buffer.create" (toplevel/topcommon.ml[202,5981+20]..[202,5981+33])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[202,5981+34]..[202,5981+38])
                Pexp_constant PConst_int (1024,None)
          ]
    ]
  structure_item (toplevel/topcommon.ml[206,6065+0]..[206,6065+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[206,6065+4]..[206,6065+14])
          Ppat_var "first_line" (toplevel/topcommon.ml[206,6065+4]..[206,6065+14])
        expression (toplevel/topcommon.ml[206,6065+17]..[206,6065+25])
          Pexp_apply
          expression (toplevel/topcommon.ml[206,6065+17]..[206,6065+20])
            Pexp_ident "ref" (toplevel/topcommon.ml[206,6065+17]..[206,6065+20])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[206,6065+21]..[206,6065+25])
                Pexp_construct "true" (toplevel/topcommon.ml[206,6065+21]..[206,6065+25])
                None
          ]
    ]
  structure_item (toplevel/topcommon.ml[207,6091+0]..[207,6091+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[207,6091+4]..[207,6091+11])
          Ppat_var "got_eof" (toplevel/topcommon.ml[207,6091+4]..[207,6091+11])
        expression (toplevel/topcommon.ml[207,6091+14]..[207,6091+23])
          Pexp_apply
          expression (toplevel/topcommon.ml[207,6091+14]..[207,6091+17])
            Pexp_ident "ref" (toplevel/topcommon.ml[207,6091+14]..[207,6091+17])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[207,6091+18]..[207,6091+23])
                Pexp_construct "false" (toplevel/topcommon.ml[207,6091+18]..[207,6091+23])
                None
          ]
    ]
  structure_item (toplevel/topcommon.ml[209,6116+0]..[227,6588+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[209,6116+4]..[209,6116+22])
          Ppat_var "read_input_default" (toplevel/topcommon.ml[209,6116+4]..[209,6116+22])
        expression (toplevel/topcommon.ml[209,6116+23]..[227,6588+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[209,6116+23]..[209,6116+29])
            Ppat_var "prompt" (toplevel/topcommon.ml[209,6116+23]..[209,6116+29])
          expression (toplevel/topcommon.ml[209,6116+30]..[227,6588+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[209,6116+30]..[209,6116+36])
              Ppat_var "buffer" (toplevel/topcommon.ml[209,6116+30]..[209,6116+36])
            expression (toplevel/topcommon.ml[209,6116+37]..[227,6588+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (toplevel/topcommon.ml[209,6116+37]..[209,6116+40])
                Ppat_var "len" (toplevel/topcommon.ml[209,6116+37]..[209,6116+40])
              expression (toplevel/topcommon.ml[210,6159+2]..[227,6588+17])
                Pexp_sequence
                expression (toplevel/topcommon.ml[210,6159+2]..[210,6159+29])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[210,6159+2]..[210,6159+15])
                    Pexp_ident "output_string" (toplevel/topcommon.ml[210,6159+2]..[210,6159+15])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[210,6159+16]..[210,6159+22])
                        Pexp_ident "stdout" (toplevel/topcommon.ml[210,6159+16]..[210,6159+22])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[210,6159+23]..[210,6159+29])
                        Pexp_ident "prompt" (toplevel/topcommon.ml[210,6159+23]..[210,6159+29])
                  ]
                expression (toplevel/topcommon.ml[210,6159+31]..[227,6588+17])
                  Pexp_sequence
                  expression (toplevel/topcommon.ml[210,6159+31]..[210,6159+43])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[210,6159+31]..[210,6159+36])
                      Pexp_ident "flush" (toplevel/topcommon.ml[210,6159+31]..[210,6159+36])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[210,6159+37]..[210,6159+43])
                          Pexp_ident "stdout" (toplevel/topcommon.ml[210,6159+37]..[210,6159+43])
                    ]
                  expression (toplevel/topcommon.ml[211,6204+2]..[227,6588+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (toplevel/topcommon.ml[211,6204+6]..[211,6204+7])
                          Ppat_var "i" (toplevel/topcommon.ml[211,6204+6]..[211,6204+7])
                        expression (toplevel/topcommon.ml[211,6204+10]..[211,6204+15])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[211,6204+10]..[211,6204+13])
                            Pexp_ident "ref" (toplevel/topcommon.ml[211,6204+10]..[211,6204+13])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[211,6204+14]..[211,6204+15])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
                    expression (toplevel/topcommon.ml[212,6223+2]..[227,6588+17])
                      Pexp_try
                      expression (toplevel/topcommon.ml[213,6229+4]..[222,6517+15])
                        Pexp_sequence
                        expression (toplevel/topcommon.ml[213,6229+4]..[221,6507+8])
                          Pexp_while
                          expression (toplevel/topcommon.ml[213,6229+10]..[213,6229+14])
                            Pexp_construct "true" (toplevel/topcommon.ml[213,6229+10]..[213,6229+14])
                            None
                          expression (toplevel/topcommon.ml[214,6247+6]..[220,6472+34])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[214,6247+6]..[214,6247+34])
                              Pexp_ifthenelse
                              expression (toplevel/topcommon.ml[214,6247+9]..[214,6247+18])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[214,6247+12]..[214,6247+14])
                                  Pexp_ident ">=" (toplevel/topcommon.ml[214,6247+12]..[214,6247+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[214,6247+9]..[214,6247+11])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[214,6247+9]..[214,6247+10])
                                        Pexp_ident "!" (toplevel/topcommon.ml[214,6247+9]..[214,6247+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[214,6247+10]..[214,6247+11])
                                            Pexp_ident "i" (toplevel/topcommon.ml[214,6247+10]..[214,6247+11])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[214,6247+15]..[214,6247+18])
                                      Pexp_ident "len" (toplevel/topcommon.ml[214,6247+15]..[214,6247+18])
                                ]
                              expression (toplevel/topcommon.ml[214,6247+24]..[214,6247+34])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[214,6247+24]..[214,6247+29])
                                  Pexp_ident "raise" (toplevel/topcommon.ml[214,6247+24]..[214,6247+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[214,6247+30]..[214,6247+34])
                                      Pexp_construct "Exit" (toplevel/topcommon.ml[214,6247+30]..[214,6247+34])
                                      None
                                ]
                              None
                            expression (toplevel/topcommon.ml[215,6283+6]..[220,6472+34])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (toplevel/topcommon.ml[215,6283+10]..[215,6283+11])
                                    Ppat_var "c" (toplevel/topcommon.ml[215,6283+10]..[215,6283+11])
                                  expression (toplevel/topcommon.ml[215,6283+14]..[215,6283+30])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[215,6283+14]..[215,6283+24])
                                      Pexp_ident "input_char" (toplevel/topcommon.ml[215,6283+14]..[215,6283+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[215,6283+25]..[215,6283+30])
                                          Pexp_ident "stdin" (toplevel/topcommon.ml[215,6283+25]..[215,6283+30])
                                    ]
                              ]
                              expression (toplevel/topcommon.ml[216,6317+6]..[220,6472+34])
                                Pexp_sequence
                                expression (toplevel/topcommon.ml[216,6317+6]..[216,6317+27])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[216,6317+6]..[216,6317+15])
                                    Pexp_ident "Bytes.set" (toplevel/topcommon.ml[216,6317+6]..[216,6317+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[216,6317+16]..[216,6317+22])
                                        Pexp_ident "buffer" (toplevel/topcommon.ml[216,6317+16]..[216,6317+22])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[216,6317+23]..[216,6317+25])
                                        Pexp_apply
                                        expression (toplevel/topcommon.ml[216,6317+23]..[216,6317+24])
                                          Pexp_ident "!" (toplevel/topcommon.ml[216,6317+23]..[216,6317+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[216,6317+24]..[216,6317+25])
                                              Pexp_ident "i" (toplevel/topcommon.ml[216,6317+24]..[216,6317+25])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[216,6317+26]..[216,6317+27])
                                        Pexp_ident "c" (toplevel/topcommon.ml[216,6317+26]..[216,6317+27])
                                  ]
                                expression (toplevel/topcommon.ml[218,6419+6]..[220,6472+34])
                                  Pexp_sequence
                                  expression (toplevel/topcommon.ml[218,6419+6]..[218,6419+37])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[218,6419+6]..[218,6419+21])
                                      Pexp_ident "Buffer.add_char" (toplevel/topcommon.ml[218,6419+6]..[218,6419+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[218,6419+22]..[218,6419+35])
                                          Pexp_ident "phrase_buffer" (toplevel/topcommon.ml[218,6419+22]..[218,6419+35])
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[218,6419+36]..[218,6419+37])
                                          Pexp_ident "c" (toplevel/topcommon.ml[218,6419+36]..[218,6419+37])
                                    ]
                                  expression (toplevel/topcommon.ml[219,6458+6]..[220,6472+34])
                                    Pexp_sequence
                                    expression (toplevel/topcommon.ml[219,6458+6]..[219,6458+12])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[219,6458+6]..[219,6458+10])
                                        Pexp_ident "incr" (toplevel/topcommon.ml[219,6458+6]..[219,6458+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[219,6458+11]..[219,6458+12])
                                            Pexp_ident "i" (toplevel/topcommon.ml[219,6458+11]..[219,6458+12])
                                      ]
                                    expression (toplevel/topcommon.ml[220,6472+6]..[220,6472+33])
                                      Pexp_ifthenelse
                                      expression (toplevel/topcommon.ml[220,6472+9]..[220,6472+17])
                                        Pexp_apply
                                        expression (toplevel/topcommon.ml[220,6472+11]..[220,6472+12])
                                          Pexp_ident "=" (toplevel/topcommon.ml[220,6472+11]..[220,6472+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[220,6472+9]..[220,6472+10])
                                              Pexp_ident "c" (toplevel/topcommon.ml[220,6472+9]..[220,6472+10])
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[220,6472+13]..[220,6472+17])
                                              Pexp_constant PConst_char 0a
                                        ]
                                      expression (toplevel/topcommon.ml[220,6472+23]..[220,6472+33])
                                        Pexp_apply
                                        expression (toplevel/topcommon.ml[220,6472+23]..[220,6472+28])
                                          Pexp_ident "raise" (toplevel/topcommon.ml[220,6472+23]..[220,6472+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (toplevel/topcommon.ml[220,6472+29]..[220,6472+33])
                                              Pexp_construct "Exit" (toplevel/topcommon.ml[220,6472+29]..[220,6472+33])
                                              None
                                        ]
                                      None
                        expression (toplevel/topcommon.ml[222,6517+4]..[222,6517+15])
                          Pexp_tuple
                          [
                            expression (toplevel/topcommon.ml[222,6517+5]..[222,6517+7])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[222,6517+5]..[222,6517+6])
                                Pexp_ident "!" (toplevel/topcommon.ml[222,6517+5]..[222,6517+6])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[222,6517+6]..[222,6517+7])
                                    Pexp_ident "i" (toplevel/topcommon.ml[222,6517+6]..[222,6517+7])
                              ]
                            expression (toplevel/topcommon.ml[222,6517+9]..[222,6517+14])
                              Pexp_construct "false" (toplevel/topcommon.ml[222,6517+9]..[222,6517+14])
                              None
                          ]
                      [
                        <case>
                          pattern (toplevel/topcommon.ml[224,6540+4]..[224,6540+15])
                            Ppat_construct "End_of_file" (toplevel/topcommon.ml[224,6540+4]..[224,6540+15])
                            None
                          expression (toplevel/topcommon.ml[225,6559+6]..[225,6559+16])
                            Pexp_tuple
                            [
                              expression (toplevel/topcommon.ml[225,6559+7]..[225,6559+9])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[225,6559+7]..[225,6559+8])
                                  Pexp_ident "!" (toplevel/topcommon.ml[225,6559+7]..[225,6559+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[225,6559+8]..[225,6559+9])
                                      Pexp_ident "i" (toplevel/topcommon.ml[225,6559+8]..[225,6559+9])
                                ]
                              expression (toplevel/topcommon.ml[225,6559+11]..[225,6559+15])
                                Pexp_construct "true" (toplevel/topcommon.ml[225,6559+11]..[225,6559+15])
                                None
                            ]
                        <case>
                          pattern (toplevel/topcommon.ml[226,6576+4]..[226,6576+8])
                            Ppat_construct "Exit" (toplevel/topcommon.ml[226,6576+4]..[226,6576+8])
                            None
                          expression (toplevel/topcommon.ml[227,6588+6]..[227,6588+17])
                            Pexp_tuple
                            [
                              expression (toplevel/topcommon.ml[227,6588+7]..[227,6588+9])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[227,6588+7]..[227,6588+8])
                                  Pexp_ident "!" (toplevel/topcommon.ml[227,6588+7]..[227,6588+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[227,6588+8]..[227,6588+9])
                                      Pexp_ident "i" (toplevel/topcommon.ml[227,6588+8]..[227,6588+9])
                                ]
                              expression (toplevel/topcommon.ml[227,6588+11]..[227,6588+16])
                                Pexp_construct "false" (toplevel/topcommon.ml[227,6588+11]..[227,6588+16])
                                None
                            ]
                      ]
    ]
  structure_item (toplevel/topcommon.ml[229,6607+0]..[229,6607+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[229,6607+4]..[229,6607+26])
          Ppat_var "read_interactive_input" (toplevel/topcommon.ml[229,6607+4]..[229,6607+26])
        expression (toplevel/topcommon.ml[229,6607+29]..[229,6607+51])
          Pexp_apply
          expression (toplevel/topcommon.ml[229,6607+29]..[229,6607+32])
            Pexp_ident "ref" (toplevel/topcommon.ml[229,6607+29]..[229,6607+32])
          [
            <arg>
            Nolabel
              expression (toplevel/topcommon.ml[229,6607+33]..[229,6607+51])
                Pexp_ident "read_input_default" (toplevel/topcommon.ml[229,6607+33]..[229,6607+51])
          ]
    ]
  structure_item (toplevel/topcommon.ml[231,6660+0]..[248,7155+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[231,6660+4]..[231,6660+17])
          Ppat_var "refill_lexbuf" (toplevel/topcommon.ml[231,6660+4]..[231,6660+17])
        expression (toplevel/topcommon.ml[231,6660+18]..[248,7155+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[231,6660+18]..[231,6660+24])
            Ppat_var "buffer" (toplevel/topcommon.ml[231,6660+18]..[231,6660+24])
          expression (toplevel/topcommon.ml[231,6660+25]..[248,7155+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[231,6660+25]..[231,6660+28])
              Ppat_var "len" (toplevel/topcommon.ml[231,6660+25]..[231,6660+28])
            expression (toplevel/topcommon.ml[232,6691+2]..[248,7155+5])
              Pexp_ifthenelse
              expression (toplevel/topcommon.ml[232,6691+5]..[232,6691+13])
                Pexp_apply
                expression (toplevel/topcommon.ml[232,6691+5]..[232,6691+6])
                  Pexp_ident "!" (toplevel/topcommon.ml[232,6691+5]..[232,6691+6])
                [
                  <arg>
                  Nolabel
                    expression (toplevel/topcommon.ml[232,6691+6]..[232,6691+13])
                      Pexp_ident "got_eof" (toplevel/topcommon.ml[232,6691+6]..[232,6691+13])
                ]
              expression (toplevel/topcommon.ml[232,6691+19]..[232,6691+40])
                Pexp_sequence
                expression (toplevel/topcommon.ml[232,6691+20]..[232,6691+36])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[232,6691+28]..[232,6691+30])
                    Pexp_ident ":=" (toplevel/topcommon.ml[232,6691+28]..[232,6691+30])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[232,6691+20]..[232,6691+27])
                        Pexp_ident "got_eof" (toplevel/topcommon.ml[232,6691+20]..[232,6691+27])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[232,6691+31]..[232,6691+36])
                        Pexp_construct "false" (toplevel/topcommon.ml[232,6691+31]..[232,6691+36])
                        None
                  ]
                expression (toplevel/topcommon.ml[232,6691+38]..[232,6691+39])
                  Pexp_constant PConst_int (0,None)
              Some
                expression (toplevel/topcommon.ml[232,6691+46]..[248,7155+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (toplevel/topcommon.ml[233,6743+8]..[233,6743+14])
                        Ppat_var "prompt" (toplevel/topcommon.ml[233,6743+8]..[233,6743+14])
                      expression (toplevel/topcommon.ml[234,6760+6]..[238,6919+15])
                        Pexp_ifthenelse
                        expression (toplevel/topcommon.ml[234,6760+9]..[234,6760+26])
                          Pexp_apply
                          expression (toplevel/topcommon.ml[234,6760+9]..[234,6760+10])
                            Pexp_ident "!" (toplevel/topcommon.ml[234,6760+9]..[234,6760+10])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/topcommon.ml[234,6760+10]..[234,6760+26])
                                Pexp_ident "Clflags.noprompt" (toplevel/topcommon.ml[234,6760+10]..[234,6760+26])
                          ]
                        expression (toplevel/topcommon.ml[234,6760+32]..[234,6760+34])
                          Pexp_constant PConst_string("",(toplevel/topcommon.ml[234,6760+33]..[234,6760+33]),None)
                        Some
                          expression (toplevel/topcommon.ml[235,6795+11]..[238,6919+15])
                            Pexp_ifthenelse
                            expression (toplevel/topcommon.ml[235,6795+14]..[235,6795+25])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[235,6795+14]..[235,6795+15])
                                Pexp_ident "!" (toplevel/topcommon.ml[235,6795+14]..[235,6795+15])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[235,6795+15]..[235,6795+25])
                                    Pexp_ident "first_line" (toplevel/topcommon.ml[235,6795+15]..[235,6795+25])
                              ]
                            expression (toplevel/topcommon.ml[235,6795+31]..[235,6795+35])
                              Pexp_constant PConst_string("# ",(toplevel/topcommon.ml[235,6795+32]..[235,6795+34]),None)
                            Some
                              expression (toplevel/topcommon.ml[236,6831+11]..[238,6919+15])
                                Pexp_ifthenelse
                                expression (toplevel/topcommon.ml[236,6831+14]..[236,6831+35])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[236,6831+14]..[236,6831+15])
                                    Pexp_ident "!" (toplevel/topcommon.ml[236,6831+14]..[236,6831+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[236,6831+15]..[236,6831+35])
                                        Pexp_ident "Clflags.nopromptcont" (toplevel/topcommon.ml[236,6831+15]..[236,6831+35])
                                  ]
                                expression (toplevel/topcommon.ml[236,6831+41]..[236,6831+43])
                                  Pexp_constant PConst_string("",(toplevel/topcommon.ml[236,6831+42]..[236,6831+42]),None)
                                Some
                                  expression (toplevel/topcommon.ml[237,6875+11]..[238,6919+15])
                                    Pexp_ifthenelse
                                    expression (toplevel/topcommon.ml[237,6875+14]..[237,6875+33])
                                      Pexp_apply
                                      expression (toplevel/topcommon.ml[237,6875+14]..[237,6875+30])
                                        Pexp_ident "Lexer.in_comment" (toplevel/topcommon.ml[237,6875+14]..[237,6875+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (toplevel/topcommon.ml[237,6875+31]..[237,6875+33])
                                            Pexp_construct "()" (toplevel/topcommon.ml[237,6875+31]..[237,6875+33])
                                            None
                                      ]
                                    expression (toplevel/topcommon.ml[237,6875+39]..[237,6875+43])
                                      Pexp_constant PConst_string("* ",(toplevel/topcommon.ml[237,6875+40]..[237,6875+42]),None)
                                    Some
                                      expression (toplevel/topcommon.ml[238,6919+11]..[238,6919+15])
                                        Pexp_constant PConst_string("  ",(toplevel/topcommon.ml[238,6919+12]..[238,6919+14]),None)
                  ]
                  expression (toplevel/topcommon.ml[240,6942+4]..[247,7145+9])
                    Pexp_sequence
                    expression (toplevel/topcommon.ml[240,6942+4]..[240,6942+23])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[240,6942+15]..[240,6942+17])
                        Pexp_ident ":=" (toplevel/topcommon.ml[240,6942+15]..[240,6942+17])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[240,6942+4]..[240,6942+14])
                            Pexp_ident "first_line" (toplevel/topcommon.ml[240,6942+4]..[240,6942+14])
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[240,6942+18]..[240,6942+23])
                            Pexp_construct "false" (toplevel/topcommon.ml[240,6942+18]..[240,6942+23])
                            None
                      ]
                    expression (toplevel/topcommon.ml[241,6967+4]..[247,7145+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (toplevel/topcommon.ml[241,6967+8]..[241,6967+18])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[241,6967+9]..[241,6967+12])
                                Ppat_var "len" (toplevel/topcommon.ml[241,6967+9]..[241,6967+12])
                              pattern (toplevel/topcommon.ml[241,6967+14]..[241,6967+17])
                                Ppat_var "eof" (toplevel/topcommon.ml[241,6967+14]..[241,6967+17])
                            ]
                          expression (toplevel/topcommon.ml[241,6967+21]..[241,6967+62])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[241,6967+21]..[241,6967+44])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[241,6967+21]..[241,6967+22])
                                Pexp_ident "!" (toplevel/topcommon.ml[241,6967+21]..[241,6967+22])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[241,6967+22]..[241,6967+44])
                                    Pexp_ident "read_interactive_input" (toplevel/topcommon.ml[241,6967+22]..[241,6967+44])
                              ]
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[241,6967+45]..[241,6967+51])
                                  Pexp_ident "prompt" (toplevel/topcommon.ml[241,6967+45]..[241,6967+51])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[241,6967+52]..[241,6967+58])
                                  Pexp_ident "buffer" (toplevel/topcommon.ml[241,6967+52]..[241,6967+58])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[241,6967+59]..[241,6967+62])
                                  Pexp_ident "len" (toplevel/topcommon.ml[241,6967+59]..[241,6967+62])
                            ]
                      ]
                      expression (toplevel/topcommon.ml[242,7033+4]..[247,7145+9])
                        Pexp_ifthenelse
                        expression (toplevel/topcommon.ml[242,7033+7]..[242,7033+10])
                          Pexp_ident "eof" (toplevel/topcommon.ml[242,7033+7]..[242,7033+10])
                        expression (toplevel/topcommon.ml[242,7033+16]..[246,7132+7])
                          Pexp_sequence
                          expression (toplevel/topcommon.ml[243,7055+6]..[243,7055+26])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[243,7055+6]..[243,7055+23])
                              Pexp_ident "Location.echo_eof" (toplevel/topcommon.ml[243,7055+6]..[243,7055+23])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[243,7055+24]..[243,7055+26])
                                  Pexp_construct "()" (toplevel/topcommon.ml[243,7055+24]..[243,7055+26])
                                  None
                            ]
                          expression (toplevel/topcommon.ml[244,7083+6]..[245,7122+9])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[244,7083+6]..[244,7083+37])
                              Pexp_ifthenelse
                              expression (toplevel/topcommon.ml[244,7083+9]..[244,7083+16])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[244,7083+13]..[244,7083+14])
                                  Pexp_ident ">" (toplevel/topcommon.ml[244,7083+13]..[244,7083+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[244,7083+9]..[244,7083+12])
                                      Pexp_ident "len" (toplevel/topcommon.ml[244,7083+9]..[244,7083+12])
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[244,7083+15]..[244,7083+16])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (toplevel/topcommon.ml[244,7083+22]..[244,7083+37])
                                Pexp_apply
                                expression (toplevel/topcommon.ml[244,7083+30]..[244,7083+32])
                                  Pexp_ident ":=" (toplevel/topcommon.ml[244,7083+30]..[244,7083+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[244,7083+22]..[244,7083+29])
                                      Pexp_ident "got_eof" (toplevel/topcommon.ml[244,7083+22]..[244,7083+29])
                                  <arg>
                                  Nolabel
                                    expression (toplevel/topcommon.ml[244,7083+33]..[244,7083+37])
                                      Pexp_construct "true" (toplevel/topcommon.ml[244,7083+33]..[244,7083+37])
                                      None
                                ]
                              None
                            expression (toplevel/topcommon.ml[245,7122+6]..[245,7122+9])
                              Pexp_ident "len" (toplevel/topcommon.ml[245,7122+6]..[245,7122+9])
                        Some
                          expression (toplevel/topcommon.ml[247,7145+6]..[247,7145+9])
                            Pexp_ident "len" (toplevel/topcommon.ml[247,7145+6]..[247,7145+9])
    ]
  structure_item (toplevel/topcommon.ml[250,7162+0]..[266,7790+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[250,7162+4]..[250,7162+13])
          Ppat_var "set_paths" (toplevel/topcommon.ml[250,7162+4]..[250,7162+13])
        expression (toplevel/topcommon.ml[250,7162+14]..[266,7790+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[250,7162+14]..[250,7162+16])
            Ppat_construct "()" (toplevel/topcommon.ml[250,7162+14]..[250,7162+16])
            None
          expression (toplevel/topcommon.ml[254,7359+2]..[266,7790+24])
            Pexp_let Nonrec
            [
              <def>
                pattern (toplevel/topcommon.ml[254,7359+6]..[254,7359+12])
                  Ppat_var "expand" (toplevel/topcommon.ml[254,7359+6]..[254,7359+12])
                expression (toplevel/topcommon.ml[254,7359+15]..[254,7359+60])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[254,7359+15]..[254,7359+36])
                    Pexp_ident "Misc.expand_directory" (toplevel/topcommon.ml[254,7359+15]..[254,7359+36])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[254,7359+37]..[254,7359+60])
                        Pexp_ident "Config.standard_library" (toplevel/topcommon.ml[254,7359+37]..[254,7359+60])
                  ]
            ]
            expression (toplevel/topcommon.ml[255,7423+2]..[266,7790+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (toplevel/topcommon.ml[255,7423+6]..[255,7423+23])
                    Ppat_var "current_load_path" (toplevel/topcommon.ml[255,7423+6]..[255,7423+23])
                  expression (toplevel/topcommon.ml[255,7423+26]..[255,7423+48])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[255,7423+26]..[255,7423+45])
                      Pexp_ident "Load_path.get_paths" (toplevel/topcommon.ml[255,7423+26]..[255,7423+45])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[255,7423+46]..[255,7423+48])
                          Pexp_construct "()" (toplevel/topcommon.ml[255,7423+46]..[255,7423+48])
                          None
                    ]
              ]
              expression (toplevel/topcommon.ml[256,7475+2]..[266,7790+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (toplevel/topcommon.ml[256,7475+6]..[256,7475+15])
                      Ppat_var "load_path" (toplevel/topcommon.ml[256,7475+6]..[256,7475+15])
                    expression (toplevel/topcommon.ml[256,7475+18]..[263,7751+5])
                      Pexp_apply
                      expression (toplevel/topcommon.ml[256,7475+18]..[256,7475+29])
                        Pexp_ident "List.concat" (toplevel/topcommon.ml[256,7475+18]..[256,7475+29])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/topcommon.ml[256,7475+30]..[263,7751+5])
                            Pexp_construct "::" (toplevel/topcommon.ml[257,7507+6]..[263,7751+5]) ghost
                            Some
                              expression (toplevel/topcommon.ml[257,7507+6]..[263,7751+5]) ghost
                                Pexp_tuple
                                [
                                  expression (toplevel/topcommon.ml[257,7507+6]..[257,7507+12])
                                    Pexp_construct "::" (toplevel/topcommon.ml[257,7507+8]..[257,7507+12]) ghost
                                    Some
                                      expression (toplevel/topcommon.ml[257,7507+8]..[257,7507+12]) ghost
                                        Pexp_tuple
                                        [
                                          expression (toplevel/topcommon.ml[257,7507+8]..[257,7507+10])
                                            Pexp_constant PConst_string("",(toplevel/topcommon.ml[257,7507+9]..[257,7507+9]),None)
                                          expression (toplevel/topcommon.ml[257,7507+11]..[257,7507+12]) ghost
                                            Pexp_construct "[]" (toplevel/topcommon.ml[257,7507+11]..[257,7507+12]) ghost
                                            None
                                        ]
                                  expression (toplevel/topcommon.ml[258,7521+6]..[263,7751+5]) ghost
                                    Pexp_construct "::" (toplevel/topcommon.ml[258,7521+6]..[263,7751+5]) ghost
                                    Some
                                      expression (toplevel/topcommon.ml[258,7521+6]..[263,7751+5]) ghost
                                        Pexp_tuple
                                        [
                                          expression (toplevel/topcommon.ml[258,7521+6]..[258,7521+60])
                                            Pexp_apply
                                            expression (toplevel/topcommon.ml[258,7521+6]..[258,7521+14])
                                              Pexp_ident "List.map" (toplevel/topcommon.ml[258,7521+6]..[258,7521+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (toplevel/topcommon.ml[258,7521+15]..[258,7521+21])
                                                  Pexp_ident "expand" (toplevel/topcommon.ml[258,7521+15]..[258,7521+21])
                                              <arg>
                                              Nolabel
                                                expression (toplevel/topcommon.ml[258,7521+22]..[258,7521+60])
                                                  Pexp_apply
                                                  expression (toplevel/topcommon.ml[258,7521+23]..[258,7521+31])
                                                    Pexp_ident "List.rev" (toplevel/topcommon.ml[258,7521+23]..[258,7521+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (toplevel/topcommon.ml[258,7521+32]..[258,7521+59])
                                                        Pexp_apply
                                                        expression (toplevel/topcommon.ml[258,7521+32]..[258,7521+33])
                                                          Pexp_ident "!" (toplevel/topcommon.ml[258,7521+32]..[258,7521+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (toplevel/topcommon.ml[258,7521+33]..[258,7521+59])
                                                              Pexp_ident "Compenv.first_include_dirs" (toplevel/topcommon.ml[258,7521+33]..[258,7521+59])
                                                        ]
                                                  ]
                                            ]
                                          expression (toplevel/topcommon.ml[259,7583+6]..[263,7751+5]) ghost
                                            Pexp_construct "::" (toplevel/topcommon.ml[259,7583+6]..[263,7751+5]) ghost
                                            Some
                                              expression (toplevel/topcommon.ml[259,7583+6]..[263,7751+5]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (toplevel/topcommon.ml[259,7583+6]..[259,7583+54])
                                                    Pexp_apply
                                                    expression (toplevel/topcommon.ml[259,7583+6]..[259,7583+14])
                                                      Pexp_ident "List.map" (toplevel/topcommon.ml[259,7583+6]..[259,7583+14])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (toplevel/topcommon.ml[259,7583+15]..[259,7583+21])
                                                          Pexp_ident "expand" (toplevel/topcommon.ml[259,7583+15]..[259,7583+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (toplevel/topcommon.ml[259,7583+22]..[259,7583+54])
                                                          Pexp_apply
                                                          expression (toplevel/topcommon.ml[259,7583+23]..[259,7583+31])
                                                            Pexp_ident "List.rev" (toplevel/topcommon.ml[259,7583+23]..[259,7583+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (toplevel/topcommon.ml[259,7583+32]..[259,7583+53])
                                                                Pexp_apply
                                                                expression (toplevel/topcommon.ml[259,7583+32]..[259,7583+33])
                                                                  Pexp_ident "!" (toplevel/topcommon.ml[259,7583+32]..[259,7583+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (toplevel/topcommon.ml[259,7583+33]..[259,7583+53])
                                                                      Pexp_ident "Clflags.include_dirs" (toplevel/topcommon.ml[259,7583+33]..[259,7583+53])
                                                                ]
                                                          ]
                                                    ]
                                                  expression (toplevel/topcommon.ml[260,7639+6]..[263,7751+5]) ghost
                                                    Pexp_construct "::" (toplevel/topcommon.ml[260,7639+6]..[263,7751+5]) ghost
                                                    Some
                                                      expression (toplevel/topcommon.ml[260,7639+6]..[263,7751+5]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (toplevel/topcommon.ml[260,7639+6]..[260,7639+59])
                                                            Pexp_apply
                                                            expression (toplevel/topcommon.ml[260,7639+6]..[260,7639+14])
                                                              Pexp_ident "List.map" (toplevel/topcommon.ml[260,7639+6]..[260,7639+14])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (toplevel/topcommon.ml[260,7639+15]..[260,7639+21])
                                                                  Pexp_ident "expand" (toplevel/topcommon.ml[260,7639+15]..[260,7639+21])
                                                              <arg>
                                                              Nolabel
                                                                expression (toplevel/topcommon.ml[260,7639+22]..[260,7639+59])
                                                                  Pexp_apply
                                                                  expression (toplevel/topcommon.ml[260,7639+23]..[260,7639+31])
                                                                    Pexp_ident "List.rev" (toplevel/topcommon.ml[260,7639+23]..[260,7639+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (toplevel/topcommon.ml[260,7639+32]..[260,7639+58])
Pexp_apply
expression (toplevel/topcommon.ml[260,7639+32]..[260,7639+33])
  Pexp_ident "!" (toplevel/topcommon.ml[260,7639+32]..[260,7639+33])
[
  <arg>
  Nolabel
    expression (toplevel/topcommon.ml[260,7639+33]..[260,7639+58])
      Pexp_ident "Compenv.last_include_dirs" (toplevel/topcommon.ml[260,7639+33]..[260,7639+58])
]
                                                                  ]
                                                            ]
                                                          expression (toplevel/topcommon.ml[261,7700+6]..[263,7751+5]) ghost
                                                            Pexp_construct "::" (toplevel/topcommon.ml[261,7700+6]..[263,7751+5]) ghost
                                                            Some
                                                              expression (toplevel/topcommon.ml[261,7700+6]..[263,7751+5]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (toplevel/topcommon.ml[261,7700+6]..[261,7700+23])
                                                                    Pexp_ident "current_load_path" (toplevel/topcommon.ml[261,7700+6]..[261,7700+23])
                                                                  expression (toplevel/topcommon.ml[262,7725+6]..[263,7751+5]) ghost
                                                                    Pexp_construct "::" (toplevel/topcommon.ml[262,7725+6]..[263,7751+5]) ghost
                                                                    Some
                                                                      expression (toplevel/topcommon.ml[262,7725+6]..[263,7751+5]) ghost
Pexp_tuple
[
  expression (toplevel/topcommon.ml[262,7725+6]..[262,7725+24])
    Pexp_construct "::" (toplevel/topcommon.ml[262,7725+7]..[262,7725+24]) ghost
    Some
      expression (toplevel/topcommon.ml[262,7725+7]..[262,7725+24]) ghost
        Pexp_tuple
        [
          expression (toplevel/topcommon.ml[262,7725+7]..[262,7725+23])
            Pexp_apply
            expression (toplevel/topcommon.ml[262,7725+7]..[262,7725+13])
              Pexp_ident "expand" (toplevel/topcommon.ml[262,7725+7]..[262,7725+13])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[262,7725+14]..[262,7725+23])
                  Pexp_constant PConst_string("+camlp4",(toplevel/topcommon.ml[262,7725+15]..[262,7725+22]),None)
            ]
          expression (toplevel/topcommon.ml[262,7725+23]..[262,7725+24]) ghost
            Pexp_construct "[]" (toplevel/topcommon.ml[262,7725+23]..[262,7725+24]) ghost
            None
        ]
  expression (toplevel/topcommon.ml[263,7751+4]..[263,7751+5]) ghost
    Pexp_construct "[]" (toplevel/topcommon.ml[263,7751+4]..[263,7751+5]) ghost
    None
]
                                                                ]
                                                        ]
                                                ]
                                        ]
                                ]
                      ]
                ]
                expression (toplevel/topcommon.ml[265,7762+2]..[266,7790+24])
                  Pexp_sequence
                  expression (toplevel/topcommon.ml[265,7762+2]..[265,7762+26])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[265,7762+2]..[265,7762+16])
                      Pexp_ident "Load_path.init" (toplevel/topcommon.ml[265,7762+2]..[265,7762+16])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[265,7762+17]..[265,7762+26])
                          Pexp_ident "load_path" (toplevel/topcommon.ml[265,7762+17]..[265,7762+26])
                    ]
                  expression (toplevel/topcommon.ml[266,7790+2]..[266,7790+24])
                    Pexp_apply
                    expression (toplevel/topcommon.ml[266,7790+2]..[266,7790+14])
                      Pexp_ident "Dll.add_path" (toplevel/topcommon.ml[266,7790+2]..[266,7790+14])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/topcommon.ml[266,7790+15]..[266,7790+24])
                          Pexp_ident "load_path" (toplevel/topcommon.ml[266,7790+15]..[266,7790+24])
                    ]
    ]
  structure_item (toplevel/topcommon.ml[268,7816+0]..[269,7849+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[268,7816+4]..[268,7816+27])
          Ppat_var "initialize_toplevel_env" (toplevel/topcommon.ml[268,7816+4]..[268,7816+27])
        expression (toplevel/topcommon.ml[268,7816+28]..[269,7849+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[268,7816+28]..[268,7816+30])
            Ppat_construct "()" (toplevel/topcommon.ml[268,7816+28]..[268,7816+30])
            None
          expression (toplevel/topcommon.ml[269,7849+2]..[269,7849+40])
            Pexp_apply
            expression (toplevel/topcommon.ml[269,7849+15]..[269,7849+17])
              Pexp_ident ":=" (toplevel/topcommon.ml[269,7849+15]..[269,7849+17])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[269,7849+2]..[269,7849+14])
                  Pexp_ident "toplevel_env" (toplevel/topcommon.ml[269,7849+2]..[269,7849+14])
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[269,7849+18]..[269,7849+40])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[269,7849+18]..[269,7849+38])
                    Pexp_ident "Compmisc.initial_env" (toplevel/topcommon.ml[269,7849+18]..[269,7849+38])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[269,7849+38]..[269,7849+40])
                        Pexp_construct "()" (toplevel/topcommon.ml[269,7849+38]..[269,7849+40])
                        None
                  ]
            ]
    ]
  structure_item (toplevel/topcommon.ml[271,7891+0]..[272,7946+24])
    Pstr_primitive
    value_description "caml_sys_modify_argv" (toplevel/topcommon.ml[271,7891+9]..[271,7891+29]) (toplevel/topcommon.ml[271,7891+0]..[272,7946+24])
      core_type (toplevel/topcommon.ml[271,7891+32]..[271,7891+52])
        Ptyp_arrow
        Nolabel
        core_type (toplevel/topcommon.ml[271,7891+32]..[271,7891+44])
          Ptyp_constr "array" (toplevel/topcommon.ml[271,7891+39]..[271,7891+44])
          [
            core_type (toplevel/topcommon.ml[271,7891+32]..[271,7891+38])
              Ptyp_constr "string" (toplevel/topcommon.ml[271,7891+32]..[271,7891+38])
              []
          ]
        core_type (toplevel/topcommon.ml[271,7891+48]..[271,7891+52])
          Ptyp_constr "unit" (toplevel/topcommon.ml[271,7891+48]..[271,7891+52])
          []
      [
        "caml_sys_modify_argv"
      ]
  structure_item (toplevel/topcommon.ml[274,7972+0]..[276,8038+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[274,7972+4]..[274,7972+21])
          Ppat_var "override_sys_argv" (toplevel/topcommon.ml[274,7972+4]..[274,7972+21])
        expression (toplevel/topcommon.ml[274,7972+22]..[276,8038+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[274,7972+22]..[274,7972+30])
            Ppat_var "new_argv" (toplevel/topcommon.ml[274,7972+22]..[274,7972+30])
          expression (toplevel/topcommon.ml[275,8005+2]..[276,8038+18])
            Pexp_sequence
            expression (toplevel/topcommon.ml[275,8005+2]..[275,8005+31])
              Pexp_apply
              expression (toplevel/topcommon.ml[275,8005+2]..[275,8005+22])
                Pexp_ident "caml_sys_modify_argv" (toplevel/topcommon.ml[275,8005+2]..[275,8005+22])
              [
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[275,8005+23]..[275,8005+31])
                    Pexp_ident "new_argv" (toplevel/topcommon.ml[275,8005+23]..[275,8005+31])
              ]
            expression (toplevel/topcommon.ml[276,8038+2]..[276,8038+18])
              Pexp_apply
              expression (toplevel/topcommon.ml[276,8038+14]..[276,8038+16])
                Pexp_ident ":=" (toplevel/topcommon.ml[276,8038+14]..[276,8038+16])
              [
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[276,8038+2]..[276,8038+13])
                    Pexp_ident "Arg.current" (toplevel/topcommon.ml[276,8038+2]..[276,8038+13])
                <arg>
                Nolabel
                  expression (toplevel/topcommon.ml[276,8038+17]..[276,8038+18])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (toplevel/topcommon.ml[282,8144+0]..[287,8323+36])
    Pstr_type Rec
    [
      type_declaration "directive_fun" (toplevel/topcommon.ml[282,8144+5]..[282,8144+18]) (toplevel/topcommon.ml[282,8144+0]..[287,8323+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (toplevel/topcommon.ml[283,8165+2]..[283,8165+36])
                "Directive_none" (toplevel/topcommon.ml[283,8165+4]..[283,8165+18])
                [
                  core_type (toplevel/topcommon.ml[283,8165+23]..[283,8165+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (toplevel/topcommon.ml[283,8165+23]..[283,8165+27])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[283,8165+23]..[283,8165+27])
                      []
                    core_type (toplevel/topcommon.ml[283,8165+31]..[283,8165+35])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[283,8165+31]..[283,8165+35])
                      []
                ]
                None
              (toplevel/topcommon.ml[284,8202+2]..[284,8202+40])
                "Directive_string" (toplevel/topcommon.ml[284,8202+4]..[284,8202+20])
                [
                  core_type (toplevel/topcommon.ml[284,8202+25]..[284,8202+39])
                    Ptyp_arrow
                    Nolabel
                    core_type (toplevel/topcommon.ml[284,8202+25]..[284,8202+31])
                      Ptyp_constr "string" (toplevel/topcommon.ml[284,8202+25]..[284,8202+31])
                      []
                    core_type (toplevel/topcommon.ml[284,8202+35]..[284,8202+39])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[284,8202+35]..[284,8202+39])
                      []
                ]
                None
              (toplevel/topcommon.ml[285,8243+2]..[285,8243+34])
                "Directive_int" (toplevel/topcommon.ml[285,8243+4]..[285,8243+17])
                [
                  core_type (toplevel/topcommon.ml[285,8243+22]..[285,8243+33])
                    Ptyp_arrow
                    Nolabel
                    core_type (toplevel/topcommon.ml[285,8243+22]..[285,8243+25])
                      Ptyp_constr "int" (toplevel/topcommon.ml[285,8243+22]..[285,8243+25])
                      []
                    core_type (toplevel/topcommon.ml[285,8243+29]..[285,8243+33])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[285,8243+29]..[285,8243+33])
                      []
                ]
                None
              (toplevel/topcommon.ml[286,8278+2]..[286,8278+44])
                "Directive_ident" (toplevel/topcommon.ml[286,8278+4]..[286,8278+19])
                [
                  core_type (toplevel/topcommon.ml[286,8278+24]..[286,8278+43])
                    Ptyp_arrow
                    Nolabel
                    core_type (toplevel/topcommon.ml[286,8278+24]..[286,8278+35])
                      Ptyp_constr "Longident.t" (toplevel/topcommon.ml[286,8278+24]..[286,8278+35])
                      []
                    core_type (toplevel/topcommon.ml[286,8278+39]..[286,8278+43])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[286,8278+39]..[286,8278+43])
                      []
                ]
                None
              (toplevel/topcommon.ml[287,8323+2]..[287,8323+36])
                "Directive_bool" (toplevel/topcommon.ml[287,8323+4]..[287,8323+18])
                [
                  core_type (toplevel/topcommon.ml[287,8323+23]..[287,8323+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (toplevel/topcommon.ml[287,8323+23]..[287,8323+27])
                      Ptyp_constr "bool" (toplevel/topcommon.ml[287,8323+23]..[287,8323+27])
                      []
                    core_type (toplevel/topcommon.ml[287,8323+31]..[287,8323+35])
                      Ptyp_constr "unit" (toplevel/topcommon.ml[287,8323+31]..[287,8323+35])
                      []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (toplevel/topcommon.ml[289,8361+0]..[292,8419+1])
    Pstr_type Rec
    [
      type_declaration "directive_info" (toplevel/topcommon.ml[289,8361+5]..[289,8361+19]) (toplevel/topcommon.ml[289,8361+0]..[292,8419+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (toplevel/topcommon.ml[290,8385+2]..[290,8385+18])
                Immutable
                "section" (toplevel/topcommon.ml[290,8385+2]..[290,8385+9])                core_type (toplevel/topcommon.ml[290,8385+11]..[290,8385+17])
                  Ptyp_constr "string" (toplevel/topcommon.ml[290,8385+11]..[290,8385+17])
                  []
              (toplevel/topcommon.ml[291,8404+2]..[291,8404+14])
                Immutable
                "doc" (toplevel/topcommon.ml[291,8404+2]..[291,8404+5])                core_type (toplevel/topcommon.ml[291,8404+7]..[291,8404+13])
                  Ptyp_constr "string" (toplevel/topcommon.ml[291,8404+7]..[291,8404+13])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (toplevel/topcommon.ml[294,8422+0]..[294,8422+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[294,8422+4]..[294,8422+19])
          Ppat_var "directive_table" (toplevel/topcommon.ml[294,8422+4]..[294,8422+19])
        expression (toplevel/topcommon.ml[294,8422+22]..[294,8422+77])
          Pexp_constraint
          expression (toplevel/topcommon.ml[294,8422+23]..[294,8422+40])
            Pexp_apply
            expression (toplevel/topcommon.ml[294,8422+23]..[294,8422+37])
              Pexp_ident "Hashtbl.create" (toplevel/topcommon.ml[294,8422+23]..[294,8422+37])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[294,8422+38]..[294,8422+40])
                  Pexp_constant PConst_int (23,None)
            ]
          core_type (toplevel/topcommon.ml[294,8422+43]..[294,8422+76])
            Ptyp_constr "Hashtbl.t" (toplevel/topcommon.ml[294,8422+67]..[294,8422+76])
            [
              core_type (toplevel/topcommon.ml[294,8422+44]..[294,8422+50])
                Ptyp_constr "string" (toplevel/topcommon.ml[294,8422+44]..[294,8422+50])
                []
              core_type (toplevel/topcommon.ml[294,8422+52]..[294,8422+65])
                Ptyp_constr "directive_fun" (toplevel/topcommon.ml[294,8422+52]..[294,8422+65])
                []
            ]
    ]
  structure_item (toplevel/topcommon.ml[296,8501+0]..[297,8528+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[296,8501+4]..[296,8501+24])
          Ppat_var "directive_info_table" (toplevel/topcommon.ml[296,8501+4]..[296,8501+24])
        expression (toplevel/topcommon.ml[297,8528+2]..[297,8528+58])
          Pexp_constraint
          expression (toplevel/topcommon.ml[297,8528+3]..[297,8528+20])
            Pexp_apply
            expression (toplevel/topcommon.ml[297,8528+3]..[297,8528+17])
              Pexp_ident "Hashtbl.create" (toplevel/topcommon.ml[297,8528+3]..[297,8528+17])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[297,8528+18]..[297,8528+20])
                  Pexp_constant PConst_int (23,None)
            ]
          core_type (toplevel/topcommon.ml[297,8528+23]..[297,8528+57])
            Ptyp_constr "Hashtbl.t" (toplevel/topcommon.ml[297,8528+48]..[297,8528+57])
            [
              core_type (toplevel/topcommon.ml[297,8528+24]..[297,8528+30])
                Ptyp_constr "string" (toplevel/topcommon.ml[297,8528+24]..[297,8528+30])
                []
              core_type (toplevel/topcommon.ml[297,8528+32]..[297,8528+46])
                Ptyp_constr "directive_info" (toplevel/topcommon.ml[297,8528+32]..[297,8528+46])
                []
            ]
    ]
  structure_item (toplevel/topcommon.ml[299,8588+0]..[301,8674+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[299,8588+4]..[299,8588+17])
          Ppat_var "add_directive" (toplevel/topcommon.ml[299,8588+4]..[299,8588+17])
        expression (toplevel/topcommon.ml[299,8588+18]..[301,8674+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[299,8588+18]..[299,8588+22])
            Ppat_var "name" (toplevel/topcommon.ml[299,8588+18]..[299,8588+22])
          expression (toplevel/topcommon.ml[299,8588+23]..[301,8674+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[299,8588+23]..[299,8588+30])
              Ppat_var "dir_fun" (toplevel/topcommon.ml[299,8588+23]..[299,8588+30])
            expression (toplevel/topcommon.ml[299,8588+31]..[301,8674+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (toplevel/topcommon.ml[299,8588+31]..[299,8588+39])
                Ppat_var "dir_info" (toplevel/topcommon.ml[299,8588+31]..[299,8588+39])
              expression (toplevel/topcommon.ml[300,8630+2]..[301,8674+48])
                Pexp_sequence
                expression (toplevel/topcommon.ml[300,8630+2]..[300,8630+42])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[300,8630+2]..[300,8630+13])
                    Pexp_ident "Hashtbl.add" (toplevel/topcommon.ml[300,8630+2]..[300,8630+13])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[300,8630+14]..[300,8630+29])
                        Pexp_ident "directive_table" (toplevel/topcommon.ml[300,8630+14]..[300,8630+29])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[300,8630+30]..[300,8630+34])
                        Pexp_ident "name" (toplevel/topcommon.ml[300,8630+30]..[300,8630+34])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[300,8630+35]..[300,8630+42])
                        Pexp_ident "dir_fun" (toplevel/topcommon.ml[300,8630+35]..[300,8630+42])
                  ]
                expression (toplevel/topcommon.ml[301,8674+2]..[301,8674+48])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[301,8674+2]..[301,8674+13])
                    Pexp_ident "Hashtbl.add" (toplevel/topcommon.ml[301,8674+2]..[301,8674+13])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[301,8674+14]..[301,8674+34])
                        Pexp_ident "directive_info_table" (toplevel/topcommon.ml[301,8674+14]..[301,8674+34])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[301,8674+35]..[301,8674+39])
                        Pexp_ident "name" (toplevel/topcommon.ml[301,8674+35]..[301,8674+39])
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[301,8674+40]..[301,8674+48])
                        Pexp_ident "dir_info" (toplevel/topcommon.ml[301,8674+40]..[301,8674+48])
                  ]
    ]
  structure_item (toplevel/topcommon.ml[303,8724+0]..[304,8749+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[303,8724+4]..[303,8724+17])
          Ppat_var "get_directive" (toplevel/topcommon.ml[303,8724+4]..[303,8724+17])
        expression (toplevel/topcommon.ml[303,8724+18]..[304,8749+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[303,8724+18]..[303,8724+22])
            Ppat_var "name" (toplevel/topcommon.ml[303,8724+18]..[303,8724+22])
          expression (toplevel/topcommon.ml[304,8749+2]..[304,8749+39])
            Pexp_apply
            expression (toplevel/topcommon.ml[304,8749+2]..[304,8749+18])
              Pexp_ident "Hashtbl.find_opt" (toplevel/topcommon.ml[304,8749+2]..[304,8749+18])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[304,8749+19]..[304,8749+34])
                  Pexp_ident "directive_table" (toplevel/topcommon.ml[304,8749+19]..[304,8749+34])
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[304,8749+35]..[304,8749+39])
                  Pexp_ident "name" (toplevel/topcommon.ml[304,8749+35]..[304,8749+39])
            ]
    ]
  structure_item (toplevel/topcommon.ml[306,8790+0]..[307,8820+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[306,8790+4]..[306,8790+22])
          Ppat_var "get_directive_info" (toplevel/topcommon.ml[306,8790+4]..[306,8790+22])
        expression (toplevel/topcommon.ml[306,8790+23]..[307,8820+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[306,8790+23]..[306,8790+27])
            Ppat_var "name" (toplevel/topcommon.ml[306,8790+23]..[306,8790+27])
          expression (toplevel/topcommon.ml[307,8820+2]..[307,8820+44])
            Pexp_apply
            expression (toplevel/topcommon.ml[307,8820+2]..[307,8820+18])
              Pexp_ident "Hashtbl.find_opt" (toplevel/topcommon.ml[307,8820+2]..[307,8820+18])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[307,8820+19]..[307,8820+39])
                  Pexp_ident "directive_info_table" (toplevel/topcommon.ml[307,8820+19]..[307,8820+39])
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[307,8820+40]..[307,8820+44])
                  Pexp_ident "name" (toplevel/topcommon.ml[307,8820+40]..[307,8820+44])
            ]
    ]
  structure_item (toplevel/topcommon.ml[309,8866+0]..[310,8895+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[309,8866+4]..[309,8866+23])
          Ppat_var "all_directive_names" (toplevel/topcommon.ml[309,8866+4]..[309,8866+23])
        expression (toplevel/topcommon.ml[309,8866+24]..[310,8895+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[309,8866+24]..[309,8866+26])
            Ppat_construct "()" (toplevel/topcommon.ml[309,8866+24]..[309,8866+26])
            None
          expression (toplevel/topcommon.ml[310,8895+2]..[310,8895+61])
            Pexp_apply
            expression (toplevel/topcommon.ml[310,8895+2]..[310,8895+14])
              Pexp_ident "Hashtbl.fold" (toplevel/topcommon.ml[310,8895+2]..[310,8895+14])
            [
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[310,8895+15]..[310,8895+42])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (toplevel/topcommon.ml[310,8895+20]..[310,8895+23])
                    Ppat_var "dir" (toplevel/topcommon.ml[310,8895+20]..[310,8895+23])
                  expression (toplevel/topcommon.ml[310,8895+24]..[310,8895+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/topcommon.ml[310,8895+24]..[310,8895+25])
                      Ppat_any
                    expression (toplevel/topcommon.ml[310,8895+26]..[310,8895+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (toplevel/topcommon.ml[310,8895+26]..[310,8895+29])
                        Ppat_var "acc" (toplevel/topcommon.ml[310,8895+26]..[310,8895+29])
                      expression (toplevel/topcommon.ml[310,8895+33]..[310,8895+41])
                        Pexp_construct "::" (toplevel/topcommon.ml[310,8895+36]..[310,8895+38])
                        Some
                          expression (toplevel/topcommon.ml[310,8895+33]..[310,8895+41]) ghost
                            Pexp_tuple
                            [
                              expression (toplevel/topcommon.ml[310,8895+33]..[310,8895+36])
                                Pexp_ident "dir" (toplevel/topcommon.ml[310,8895+33]..[310,8895+36])
                              expression (toplevel/topcommon.ml[310,8895+38]..[310,8895+41])
                                Pexp_ident "acc" (toplevel/topcommon.ml[310,8895+38]..[310,8895+41])
                            ]
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[310,8895+43]..[310,8895+58])
                  Pexp_ident "directive_table" (toplevel/topcommon.ml[310,8895+43]..[310,8895+58])
              <arg>
              Nolabel
                expression (toplevel/topcommon.ml[310,8895+59]..[310,8895+61])
                  Pexp_construct "[]" (toplevel/topcommon.ml[310,8895+59]..[310,8895+61])
                  None
            ]
    ]
  structure_item (toplevel/topcommon.ml[312,8958+0]..[358,10970+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/topcommon.ml[312,8958+4]..[312,8958+21])
          Ppat_var "try_run_directive" (toplevel/topcommon.ml[312,8958+4]..[312,8958+21])
        expression (toplevel/topcommon.ml[312,8958+22]..[358,10970+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/topcommon.ml[312,8958+22]..[312,8958+25])
            Ppat_var "ppf" (toplevel/topcommon.ml[312,8958+22]..[312,8958+25])
          expression (toplevel/topcommon.ml[312,8958+26]..[358,10970+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/topcommon.ml[312,8958+26]..[312,8958+34])
              Ppat_var "dir_name" (toplevel/topcommon.ml[312,8958+26]..[312,8958+34])
            expression (toplevel/topcommon.ml[312,8958+35]..[358,10970+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (toplevel/topcommon.ml[312,8958+35]..[312,8958+43])
                Ppat_var "pdir_arg" (toplevel/topcommon.ml[312,8958+35]..[312,8958+43])
              expression (toplevel/topcommon.ml[313,9004+2]..[358,10970+5])
                Pexp_match
                expression (toplevel/topcommon.ml[313,9004+14]..[313,9004+36])
                  Pexp_apply
                  expression (toplevel/topcommon.ml[313,9004+14]..[313,9004+27])
                    Pexp_ident "get_directive" (toplevel/topcommon.ml[313,9004+14]..[313,9004+27])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/topcommon.ml[313,9004+28]..[313,9004+36])
                        Pexp_ident "dir_name" (toplevel/topcommon.ml[313,9004+28]..[313,9004+36])
                  ]
                [
                  <case>
                    pattern (toplevel/topcommon.ml[314,9046+4]..[314,9046+8])
                      Ppat_construct "None" (toplevel/topcommon.ml[314,9046+4]..[314,9046+8])
                      None
                    expression (toplevel/topcommon.ml[315,9058+6]..[320,9270+11])
                      Pexp_sequence
                      expression (toplevel/topcommon.ml[315,9058+6]..[315,9058+52])
                        Pexp_apply
                        expression (toplevel/topcommon.ml[315,9058+6]..[315,9058+13])
                          Pexp_ident "fprintf" (toplevel/topcommon.ml[315,9058+6]..[315,9058+13])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[315,9058+14]..[315,9058+17])
                              Pexp_ident "ppf" (toplevel/topcommon.ml[315,9058+14]..[315,9058+17])
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[315,9058+18]..[315,9058+43])
                              Pexp_constant PConst_string("Unknown directive `%s'.",(toplevel/topcommon.ml[315,9058+19]..[315,9058+42]),None)
                          <arg>
                          Nolabel
                            expression (toplevel/topcommon.ml[315,9058+44]..[315,9058+52])
                              Pexp_ident "dir_name" (toplevel/topcommon.ml[315,9058+44]..[315,9058+52])
                        ]
                      expression (toplevel/topcommon.ml[316,9112+6]..[320,9270+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (toplevel/topcommon.ml[316,9112+10]..[316,9112+20])
                              Ppat_var "directives" (toplevel/topcommon.ml[316,9112+10]..[316,9112+20])
                            expression (toplevel/topcommon.ml[316,9112+23]..[316,9112+45])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[316,9112+23]..[316,9112+42])
                                Pexp_ident "all_directive_names" (toplevel/topcommon.ml[316,9112+23]..[316,9112+42])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[316,9112+43]..[316,9112+45])
                                    Pexp_construct "()" (toplevel/topcommon.ml[316,9112+43]..[316,9112+45])
                                    None
                              ]
                        ]
                        expression (toplevel/topcommon.ml[317,9161+6]..[320,9270+11])
                          Pexp_sequence
                          expression (toplevel/topcommon.ml[317,9161+6]..[318,9189+55])
                            Pexp_apply
                            expression (toplevel/topcommon.ml[317,9161+6]..[317,9161+23])
                              Pexp_ident "Misc.did_you_mean" (toplevel/topcommon.ml[317,9161+6]..[317,9161+23])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[317,9161+24]..[317,9161+27])
                                  Pexp_ident "ppf" (toplevel/topcommon.ml[317,9161+24]..[317,9161+27])
                              <arg>
                              Nolabel
                                expression (toplevel/topcommon.ml[318,9189+8]..[318,9189+55])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (toplevel/topcommon.ml[318,9189+13]..[318,9189+15])
                                    Ppat_construct "()" (toplevel/topcommon.ml[318,9189+13]..[318,9189+15])
                                    None
                                  expression (toplevel/topcommon.ml[318,9189+19]..[318,9189+54])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[318,9189+19]..[318,9189+34])
                                      Pexp_ident "Misc.spellcheck" (toplevel/topcommon.ml[318,9189+19]..[318,9189+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[318,9189+35]..[318,9189+45])
                                          Pexp_ident "directives" (toplevel/topcommon.ml[318,9189+35]..[318,9189+45])
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[318,9189+46]..[318,9189+54])
                                          Pexp_ident "dir_name" (toplevel/topcommon.ml[318,9189+46]..[318,9189+54])
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[319,9246+6]..[320,9270+11])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[319,9246+6]..[319,9246+22])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[319,9246+6]..[319,9246+13])
                                Pexp_ident "fprintf" (toplevel/topcommon.ml[319,9246+6]..[319,9246+13])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[319,9246+14]..[319,9246+17])
                                    Pexp_ident "ppf" (toplevel/topcommon.ml[319,9246+14]..[319,9246+17])
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[319,9246+18]..[319,9246+22])
                                    Pexp_constant PConst_string("@.",(toplevel/topcommon.ml[319,9246+19]..[319,9246+21]),None)
                              ]
                            expression (toplevel/topcommon.ml[320,9270+6]..[320,9270+11])
                              Pexp_construct "false" (toplevel/topcommon.ml[320,9270+6]..[320,9270+11])
                              None
                  <case>
                    pattern (toplevel/topcommon.ml[321,9282+4]..[321,9282+10])
                      Ppat_construct "Some" (toplevel/topcommon.ml[321,9282+4]..[321,9282+8])
                      Some
                        []
                        pattern (toplevel/topcommon.ml[321,9282+9]..[321,9282+10])
                          Ppat_var "d" (toplevel/topcommon.ml[321,9282+9]..[321,9282+10])
                    expression (toplevel/topcommon.ml[322,9296+6]..[357,10954+15])
                      Pexp_match
                      expression (toplevel/topcommon.ml[322,9296+12]..[322,9296+23])
                        Pexp_tuple
                        [
                          expression (toplevel/topcommon.ml[322,9296+12]..[322,9296+13])
                            Pexp_ident "d" (toplevel/topcommon.ml[322,9296+12]..[322,9296+13])
                          expression (toplevel/topcommon.ml[322,9296+15]..[322,9296+23])
                            Pexp_ident "pdir_arg" (toplevel/topcommon.ml[322,9296+15]..[322,9296+23])
                        ]
                      [
                        <case>
                          pattern (toplevel/topcommon.ml[323,9325+8]..[323,9325+30])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[323,9325+8]..[323,9325+24])
                                Ppat_construct "Directive_none" (toplevel/topcommon.ml[323,9325+8]..[323,9325+22])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[323,9325+23]..[323,9325+24])
                                    Ppat_var "f" (toplevel/topcommon.ml[323,9325+23]..[323,9325+24])
                              pattern (toplevel/topcommon.ml[323,9325+26]..[323,9325+30])
                                Ppat_construct "None" (toplevel/topcommon.ml[323,9325+26]..[323,9325+30])
                                None
                            ]
                          expression (toplevel/topcommon.ml[323,9325+34]..[323,9325+44])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[323,9325+34]..[323,9325+38])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[323,9325+34]..[323,9325+35])
                                Pexp_ident "f" (toplevel/topcommon.ml[323,9325+34]..[323,9325+35])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[323,9325+36]..[323,9325+38])
                                    Pexp_construct "()" (toplevel/topcommon.ml[323,9325+36]..[323,9325+38])
                                    None
                              ]
                            expression (toplevel/topcommon.ml[323,9325+40]..[323,9325+44])
                              Pexp_construct "true" (toplevel/topcommon.ml[323,9325+40]..[323,9325+44])
                              None
                        <case>
                          pattern (toplevel/topcommon.ml[324,9370+8]..[324,9370+61])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[324,9370+8]..[324,9370+26])
                                Ppat_construct "Directive_string" (toplevel/topcommon.ml[324,9370+8]..[324,9370+24])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[324,9370+25]..[324,9370+26])
                                    Ppat_var "f" (toplevel/topcommon.ml[324,9370+25]..[324,9370+26])
                              pattern (toplevel/topcommon.ml[324,9370+28]..[324,9370+61])
                                Ppat_construct "Some" (toplevel/topcommon.ml[324,9370+28]..[324,9370+32])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[324,9370+33]..[324,9370+61])
                                    Ppat_record Closed
                                    [
                                      "pdira_desc" (toplevel/topcommon.ml[324,9370+34]..[324,9370+44])
                                        pattern (toplevel/topcommon.ml[324,9370+47]..[324,9370+60])
                                          Ppat_construct "Pdir_string" (toplevel/topcommon.ml[324,9370+47]..[324,9370+58])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[324,9370+59]..[324,9370+60])
                                              Ppat_var "s" (toplevel/topcommon.ml[324,9370+59]..[324,9370+60])
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[324,9370+65]..[324,9370+74])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[324,9370+65]..[324,9370+68])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[324,9370+65]..[324,9370+66])
                                Pexp_ident "f" (toplevel/topcommon.ml[324,9370+65]..[324,9370+66])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[324,9370+67]..[324,9370+68])
                                    Pexp_ident "s" (toplevel/topcommon.ml[324,9370+67]..[324,9370+68])
                              ]
                            expression (toplevel/topcommon.ml[324,9370+70]..[324,9370+74])
                              Pexp_construct "true" (toplevel/topcommon.ml[324,9370+70]..[324,9370+74])
                              None
                        <case>
                          pattern (toplevel/topcommon.ml[325,9445+8]..[325,9445+63])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[325,9445+8]..[325,9445+23])
                                Ppat_construct "Directive_int" (toplevel/topcommon.ml[325,9445+8]..[325,9445+21])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[325,9445+22]..[325,9445+23])
                                    Ppat_var "f" (toplevel/topcommon.ml[325,9445+22]..[325,9445+23])
                              pattern (toplevel/topcommon.ml[325,9445+25]..[325,9445+63])
                                Ppat_construct "Some" (toplevel/topcommon.ml[325,9445+25]..[325,9445+29])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[325,9445+30]..[325,9445+63])
                                    Ppat_record Closed
                                    [
                                      "pdira_desc" (toplevel/topcommon.ml[325,9445+31]..[325,9445+41])
                                        pattern (toplevel/topcommon.ml[325,9445+44]..[325,9445+61])
                                          Ppat_construct "Pdir_int" (toplevel/topcommon.ml[325,9445+44]..[325,9445+52])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[325,9445+53]..[325,9445+61])
                                              Ppat_tuple
                                              [
                                                pattern (toplevel/topcommon.ml[325,9445+54]..[325,9445+55])
                                                  Ppat_var "n" (toplevel/topcommon.ml[325,9445+54]..[325,9445+55])
                                                pattern (toplevel/topcommon.ml[325,9445+56]..[325,9445+60])
                                                  Ppat_construct "None" (toplevel/topcommon.ml[325,9445+56]..[325,9445+60])
                                                  None
                                              ]
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[326,9512+9]..[333,9802+12])
                            Pexp_match
                            expression (toplevel/topcommon.ml[326,9512+21]..[326,9512+53])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[326,9512+21]..[326,9512+51])
                                Pexp_ident "Misc.Int_literal_converter.int" (toplevel/topcommon.ml[326,9512+21]..[326,9512+51])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[326,9512+52]..[326,9512+53])
                                    Pexp_ident "n" (toplevel/topcommon.ml[326,9512+52]..[326,9512+53])
                              ]
                            [
                              <case>
                                pattern (toplevel/topcommon.ml[327,9571+11]..[327,9571+12])
                                  Ppat_var "n" (toplevel/topcommon.ml[327,9571+11]..[327,9571+12])
                                expression (toplevel/topcommon.ml[327,9571+16]..[327,9571+25])
                                  Pexp_sequence
                                  expression (toplevel/topcommon.ml[327,9571+16]..[327,9571+19])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[327,9571+16]..[327,9571+17])
                                      Pexp_ident "f" (toplevel/topcommon.ml[327,9571+16]..[327,9571+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[327,9571+18]..[327,9571+19])
                                          Pexp_ident "n" (toplevel/topcommon.ml[327,9571+18]..[327,9571+19])
                                    ]
                                  expression (toplevel/topcommon.ml[327,9571+21]..[327,9571+25])
                                    Pexp_construct "true" (toplevel/topcommon.ml[327,9571+21]..[327,9571+25])
                                    None
                              <case>
                                pattern (toplevel/topcommon.ml[328,9597+11]..[328,9597+22])
                                  Ppat_exception
                                  pattern (toplevel/topcommon.ml[328,9597+21]..[328,9597+22])
                                    Ppat_any
                                expression (toplevel/topcommon.ml[329,9623+11]..[332,9785+16])
                                  Pexp_sequence
                                  expression (toplevel/topcommon.ml[329,9623+11]..[331,9756+27])
                                    Pexp_apply
                                    expression (toplevel/topcommon.ml[329,9623+11]..[329,9623+18])
                                      Pexp_ident "fprintf" (toplevel/topcommon.ml[329,9623+11]..[329,9623+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[329,9623+19]..[329,9623+22])
                                          Pexp_ident "ppf" (toplevel/topcommon.ml[329,9623+19]..[329,9623+22])
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[329,9623+23]..[330,9686+69])
                                          Pexp_constant PConst_string("Integer literal exceeds the range of representable integers for directive `%s'.@.",(toplevel/topcommon.ml[329,9623+24]..[330,9686+68]),None)
                                      <arg>
                                      Nolabel
                                        expression (toplevel/topcommon.ml[331,9756+19]..[331,9756+27])
                                          Pexp_ident "dir_name" (toplevel/topcommon.ml[331,9756+19]..[331,9756+27])
                                    ]
                                  expression (toplevel/topcommon.ml[332,9785+11]..[332,9785+16])
                                    Pexp_construct "false" (toplevel/topcommon.ml[332,9785+11]..[332,9785+16])
                                    None
                            ]
                        <case>
                          pattern (toplevel/topcommon.ml[334,9815+8]..[334,9815+65])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[334,9815+8]..[334,9815+23])
                                Ppat_construct "Directive_int" (toplevel/topcommon.ml[334,9815+8]..[334,9815+21])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[334,9815+22]..[334,9815+23])
                                    Ppat_any
                              pattern (toplevel/topcommon.ml[334,9815+25]..[334,9815+65])
                                Ppat_construct "Some" (toplevel/topcommon.ml[334,9815+25]..[334,9815+29])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[334,9815+30]..[334,9815+65])
                                    Ppat_record Closed
                                    [
                                      "pdira_desc" (toplevel/topcommon.ml[334,9815+31]..[334,9815+41])
                                        pattern (toplevel/topcommon.ml[334,9815+44]..[334,9815+64])
                                          Ppat_construct "Pdir_int" (toplevel/topcommon.ml[334,9815+44]..[334,9815+52])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[334,9815+53]..[334,9815+64])
                                              Ppat_tuple
                                              [
                                                pattern (toplevel/topcommon.ml[334,9815+54]..[334,9815+55])
                                                  Ppat_any
                                                pattern (toplevel/topcommon.ml[334,9815+57]..[334,9815+63])
                                                  Ppat_construct "Some" (toplevel/topcommon.ml[334,9815+57]..[334,9815+61])
                                                  Some
                                                    []
                                                    pattern (toplevel/topcommon.ml[334,9815+62]..[334,9815+63])
                                                      Ppat_any
                                              ]
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[335,9884+10]..[337,9974+15])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[335,9884+10]..[336,9952+20])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[335,9884+10]..[335,9884+17])
                                Pexp_ident "fprintf" (toplevel/topcommon.ml[335,9884+10]..[335,9884+17])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[335,9884+18]..[335,9884+21])
                                    Pexp_ident "ppf" (toplevel/topcommon.ml[335,9884+18]..[335,9884+21])
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[335,9884+22]..[335,9884+67])
                                    Pexp_constant PConst_string("Wrong integer literal for directive `%s'.@.",(toplevel/topcommon.ml[335,9884+23]..[335,9884+66]),None)
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[336,9952+12]..[336,9952+20])
                                    Pexp_ident "dir_name" (toplevel/topcommon.ml[336,9952+12]..[336,9952+20])
                              ]
                            expression (toplevel/topcommon.ml[337,9974+10]..[337,9974+15])
                              Pexp_construct "false" (toplevel/topcommon.ml[337,9974+10]..[337,9974+15])
                              None
                        <case>
                          pattern (toplevel/topcommon.ml[338,9990+8]..[338,9990+61])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[338,9990+8]..[338,9990+25])
                                Ppat_construct "Directive_ident" (toplevel/topcommon.ml[338,9990+8]..[338,9990+23])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[338,9990+24]..[338,9990+25])
                                    Ppat_var "f" (toplevel/topcommon.ml[338,9990+24]..[338,9990+25])
                              pattern (toplevel/topcommon.ml[338,9990+27]..[338,9990+61])
                                Ppat_construct "Some" (toplevel/topcommon.ml[338,9990+27]..[338,9990+31])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[338,9990+32]..[338,9990+61])
                                    Ppat_record Closed
                                    [
                                      "pdira_desc" (toplevel/topcommon.ml[338,9990+33]..[338,9990+43])
                                        pattern (toplevel/topcommon.ml[338,9990+46]..[338,9990+60])
                                          Ppat_construct "Pdir_ident" (toplevel/topcommon.ml[338,9990+46]..[338,9990+56])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[338,9990+57]..[338,9990+60])
                                              Ppat_var "lid" (toplevel/topcommon.ml[338,9990+57]..[338,9990+60])
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[338,9990+65]..[338,9990+76])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[338,9990+65]..[338,9990+70])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[338,9990+65]..[338,9990+66])
                                Pexp_ident "f" (toplevel/topcommon.ml[338,9990+65]..[338,9990+66])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[338,9990+67]..[338,9990+70])
                                    Pexp_ident "lid" (toplevel/topcommon.ml[338,9990+67]..[338,9990+70])
                              ]
                            expression (toplevel/topcommon.ml[338,9990+72]..[338,9990+76])
                              Pexp_construct "true" (toplevel/topcommon.ml[338,9990+72]..[338,9990+76])
                              None
                        <case>
                          pattern (toplevel/topcommon.ml[339,10067+8]..[339,10067+57])
                            Ppat_tuple
                            [
                              pattern (toplevel/topcommon.ml[339,10067+8]..[339,10067+24])
                                Ppat_construct "Directive_bool" (toplevel/topcommon.ml[339,10067+8]..[339,10067+22])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[339,10067+23]..[339,10067+24])
                                    Ppat_var "f" (toplevel/topcommon.ml[339,10067+23]..[339,10067+24])
                              pattern (toplevel/topcommon.ml[339,10067+26]..[339,10067+57])
                                Ppat_construct "Some" (toplevel/topcommon.ml[339,10067+26]..[339,10067+30])
                                Some
                                  []
                                  pattern (toplevel/topcommon.ml[339,10067+31]..[339,10067+57])
                                    Ppat_record Closed
                                    [
                                      "pdira_desc" (toplevel/topcommon.ml[339,10067+32]..[339,10067+42])
                                        pattern (toplevel/topcommon.ml[339,10067+45]..[339,10067+56])
                                          Ppat_construct "Pdir_bool" (toplevel/topcommon.ml[339,10067+45]..[339,10067+54])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[339,10067+55]..[339,10067+56])
                                              Ppat_var "b" (toplevel/topcommon.ml[339,10067+55]..[339,10067+56])
                                    ]
                            ]
                          expression (toplevel/topcommon.ml[339,10067+61]..[339,10067+70])
                            Pexp_sequence
                            expression (toplevel/topcommon.ml[339,10067+61]..[339,10067+64])
                              Pexp_apply
                              expression (toplevel/topcommon.ml[339,10067+61]..[339,10067+62])
                                Pexp_ident "f" (toplevel/topcommon.ml[339,10067+61]..[339,10067+62])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/topcommon.ml[339,10067+63]..[339,10067+64])
                                    Pexp_ident "b" (toplevel/topcommon.ml[339,10067+63]..[339,10067+64])
                              ]
                            expression (toplevel/topcommon.ml[339,10067+66]..[339,10067+70])
                              Pexp_construct "true" (toplevel/topcommon.ml[339,10067+66]..[339,10067+70])
                              None
                        <case>
                          pattern (toplevel/topcommon.ml[340,10138+8]..[340,10138+9])
                            Ppat_any
                          expression (toplevel/topcommon.ml[341,10151+10]..[357,10954+15])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (toplevel/topcommon.ml[341,10151+14]..[341,10151+22])
                                  Ppat_var "dir_type" (toplevel/topcommon.ml[341,10151+14]..[341,10151+22])
                                expression (toplevel/topcommon.ml[341,10151+25]..[346,10395+52])
                                  Pexp_match
                                  expression (toplevel/topcommon.ml[341,10151+31]..[341,10151+32])
                                    Pexp_ident "d" (toplevel/topcommon.ml[341,10151+31]..[341,10151+32])
                                  [
                                    <case>
                                      pattern (toplevel/topcommon.ml[342,10189+12]..[342,10189+28])
                                        Ppat_construct "Directive_none" (toplevel/topcommon.ml[342,10189+12]..[342,10189+26])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[342,10189+27]..[342,10189+28])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[342,10189+34]..[342,10189+47])
                                        Pexp_constant PConst_string("no argument",(toplevel/topcommon.ml[342,10189+35]..[342,10189+46]),None)
                                    <case>
                                      pattern (toplevel/topcommon.ml[343,10237+12]..[343,10237+30])
                                        Ppat_construct "Directive_string" (toplevel/topcommon.ml[343,10237+12]..[343,10237+28])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[343,10237+29]..[343,10237+30])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[343,10237+34]..[343,10237+54])
                                        Pexp_constant PConst_string("a `string' literal",(toplevel/topcommon.ml[343,10237+35]..[343,10237+53]),None)
                                    <case>
                                      pattern (toplevel/topcommon.ml[344,10292+12]..[344,10292+27])
                                        Ppat_construct "Directive_int" (toplevel/topcommon.ml[344,10292+12]..[344,10292+25])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[344,10292+26]..[344,10292+27])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[344,10292+34]..[344,10292+52])
                                        Pexp_constant PConst_string("an `int' literal",(toplevel/topcommon.ml[344,10292+35]..[344,10292+51]),None)
                                    <case>
                                      pattern (toplevel/topcommon.ml[345,10345+12]..[345,10345+29])
                                        Ppat_construct "Directive_ident" (toplevel/topcommon.ml[345,10345+12]..[345,10345+27])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[345,10345+28]..[345,10345+29])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[345,10345+34]..[345,10345+49])
                                        Pexp_constant PConst_string("an identifier",(toplevel/topcommon.ml[345,10345+35]..[345,10345+48]),None)
                                    <case>
                                      pattern (toplevel/topcommon.ml[346,10395+12]..[346,10395+28])
                                        Ppat_construct "Directive_bool" (toplevel/topcommon.ml[346,10395+12]..[346,10395+26])
                                        Some
                                          []
                                          pattern (toplevel/topcommon.ml[346,10395+27]..[346,10395+28])
                                            Ppat_any
                                      expression (toplevel/topcommon.ml[346,10395+34]..[346,10395+52])
                                        Pexp_constant PConst_string("a `bool' literal",(toplevel/topcommon.ml[346,10395+35]..[346,10395+51]),None)
                                  ]
                            ]
                            expression (toplevel/topcommon.ml[348,10461+10]..[357,10954+15])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (toplevel/topcommon.ml[348,10461+14]..[348,10461+22])
                                    Ppat_var "arg_type" (toplevel/topcommon.ml[348,10461+14]..[348,10461+22])
                                  expression (toplevel/topcommon.ml[348,10461+25]..[353,10772+67])
                                    Pexp_match
                                    expression (toplevel/topcommon.ml[348,10461+31]..[348,10461+39])
                                      Pexp_ident "pdir_arg" (toplevel/topcommon.ml[348,10461+31]..[348,10461+39])
                                    [
                                      <case>
                                        pattern (toplevel/topcommon.ml[349,10506+12]..[349,10506+16])
                                          Ppat_construct "None" (toplevel/topcommon.ml[349,10506+12]..[349,10506+16])
                                          None
                                        expression (toplevel/topcommon.ml[349,10506+49]..[349,10506+62])
                                          Pexp_constant PConst_string("no argument",(toplevel/topcommon.ml[349,10506+50]..[349,10506+61]),None)
                                      <case>
                                        pattern (toplevel/topcommon.ml[350,10569+12]..[350,10569+45])
                                          Ppat_construct "Some" (toplevel/topcommon.ml[350,10569+12]..[350,10569+16])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[350,10569+17]..[350,10569+45])
                                              Ppat_record Closed
                                              [
                                                "pdira_desc" (toplevel/topcommon.ml[350,10569+18]..[350,10569+28])
                                                  pattern (toplevel/topcommon.ml[350,10569+31]..[350,10569+44])
                                                    Ppat_construct "Pdir_string" (toplevel/topcommon.ml[350,10569+31]..[350,10569+42])
                                                    Some
                                                      []
                                                      pattern (toplevel/topcommon.ml[350,10569+43]..[350,10569+44])
                                                        Ppat_any
                                              ]
                                        expression (toplevel/topcommon.ml[350,10569+49]..[350,10569+69])
                                          Pexp_constant PConst_string("a `string' literal",(toplevel/topcommon.ml[350,10569+50]..[350,10569+68]),None)
                                      <case>
                                        pattern (toplevel/topcommon.ml[351,10639+12]..[351,10639+42])
                                          Ppat_construct "Some" (toplevel/topcommon.ml[351,10639+12]..[351,10639+16])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[351,10639+17]..[351,10639+42])
                                              Ppat_record Closed
                                              [
                                                "pdira_desc" (toplevel/topcommon.ml[351,10639+18]..[351,10639+28])
                                                  pattern (toplevel/topcommon.ml[351,10639+31]..[351,10639+41])
                                                    Ppat_construct "Pdir_int" (toplevel/topcommon.ml[351,10639+31]..[351,10639+39])
                                                    Some
                                                      []
                                                      pattern (toplevel/topcommon.ml[351,10639+40]..[351,10639+41])
                                                        Ppat_any
                                              ]
                                        expression (toplevel/topcommon.ml[351,10639+49]..[351,10639+67])
                                          Pexp_constant PConst_string("an `int' literal",(toplevel/topcommon.ml[351,10639+50]..[351,10639+66]),None)
                                      <case>
                                        pattern (toplevel/topcommon.ml[352,10707+12]..[352,10707+44])
                                          Ppat_construct "Some" (toplevel/topcommon.ml[352,10707+12]..[352,10707+16])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[352,10707+17]..[352,10707+44])
                                              Ppat_record Closed
                                              [
                                                "pdira_desc" (toplevel/topcommon.ml[352,10707+18]..[352,10707+28])
                                                  pattern (toplevel/topcommon.ml[352,10707+31]..[352,10707+43])
                                                    Ppat_construct "Pdir_ident" (toplevel/topcommon.ml[352,10707+31]..[352,10707+41])
                                                    Some
                                                      []
                                                      pattern (toplevel/topcommon.ml[352,10707+42]..[352,10707+43])
                                                        Ppat_any
                                              ]
                                        expression (toplevel/topcommon.ml[352,10707+49]..[352,10707+64])
                                          Pexp_constant PConst_string("an identifier",(toplevel/topcommon.ml[352,10707+50]..[352,10707+63]),None)
                                      <case>
                                        pattern (toplevel/topcommon.ml[353,10772+12]..[353,10772+43])
                                          Ppat_construct "Some" (toplevel/topcommon.ml[353,10772+12]..[353,10772+16])
                                          Some
                                            []
                                            pattern (toplevel/topcommon.ml[353,10772+17]..[353,10772+43])
                                              Ppat_record Closed
                                              [
                                                "pdira_desc" (toplevel/topcommon.ml[353,10772+18]..[353,10772+28])
                                                  pattern (toplevel/topcommon.ml[353,10772+31]..[353,10772+42])
                                                    Ppat_construct "Pdir_bool" (toplevel/topcommon.ml[353,10772+31]..[353,10772+40])
                                                    Some
                                                      []
                                                      pattern (toplevel/topcommon.ml[353,10772+41]..[353,10772+42])
                                                        Ppat_any
                                              ]
                                        expression (toplevel/topcommon.ml[353,10772+49]..[353,10772+67])
                                          Pexp_constant PConst_string("a `bool' literal",(toplevel/topcommon.ml[353,10772+50]..[353,10772+66]),None)
                                    ]
                              ]
                              expression (toplevel/topcommon.ml[355,10853+10]..[357,10954+15])
                                Pexp_sequence
                                expression (toplevel/topcommon.ml[355,10853+10]..[356,10914+38])
                                  Pexp_apply
                                  expression (toplevel/topcommon.ml[355,10853+10]..[355,10853+17])
                                    Pexp_ident "fprintf" (toplevel/topcommon.ml[355,10853+10]..[355,10853+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[355,10853+18]..[355,10853+21])
                                        Pexp_ident "ppf" (toplevel/topcommon.ml[355,10853+18]..[355,10853+21])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[355,10853+22]..[355,10853+60])
                                        Pexp_constant PConst_string("Directive `%s' expects %s, got %s.@.",(toplevel/topcommon.ml[355,10853+23]..[355,10853+59]),None)
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[356,10914+12]..[356,10914+20])
                                        Pexp_ident "dir_name" (toplevel/topcommon.ml[356,10914+12]..[356,10914+20])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[356,10914+21]..[356,10914+29])
                                        Pexp_ident "dir_type" (toplevel/topcommon.ml[356,10914+21]..[356,10914+29])
                                    <arg>
                                    Nolabel
                                      expression (toplevel/topcommon.ml[356,10914+30]..[356,10914+38])
                                        Pexp_ident "arg_type" (toplevel/topcommon.ml[356,10914+30]..[356,10914+38])
                                  ]
                                expression (toplevel/topcommon.ml[357,10954+10]..[357,10954+15])
                                  Pexp_construct "false" (toplevel/topcommon.ml[357,10954+10]..[357,10954+15])
                                  None
                      ]
                ]
    ]
]

