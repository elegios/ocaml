[
  signature_item (ocamldoc/odoc_comments.mli[16,1079+0]..[16,1079+28])
    Psig_attribute "ocaml.text"
    [
      structure_item (ocamldoc/odoc_comments.mli[16,1079+0]..[16,1079+28])
        Pstr_eval
        expression (ocamldoc/odoc_comments.mli[16,1079+0]..[16,1079+28])
          Pexp_constant PConst_string(" Analysis of comments. ",(ocamldoc/odoc_comments.mli[16,1079+0]..[16,1079+28]),None)
    ]
  signature_item (ocamldoc/odoc_comments.mli[18,1109+0]..[18,1109+25])
    Psig_value
    value_description "simple_blank" (ocamldoc/odoc_comments.mli[18,1109+4]..[18,1109+16]) (ocamldoc/odoc_comments.mli[18,1109+0]..[18,1109+25])
      core_type (ocamldoc/odoc_comments.mli[18,1109+19]..[18,1109+25])
        Ptyp_constr "string" (ocamldoc/odoc_comments.mli[18,1109+19]..[18,1109+25])
        []
      []
  signature_item (ocamldoc/odoc_comments.mli[21,1193+0]..[25,1321+5])
    Psig_modtype "Texter" (ocamldoc/odoc_comments.mli[21,1193+12]..[21,1193+18])
      attribute "ocaml.doc"
        [
          structure_item (ocamldoc/odoc_comments.mli[20,1136+0]..[20,1136+56])
            Pstr_eval
            expression (ocamldoc/odoc_comments.mli[20,1136+0]..[20,1136+56])
              Pexp_constant PConst_string(" The type of modules in argument to Info_retriever ",(ocamldoc/odoc_comments.mli[20,1136+0]..[20,1136+56]),None)
        ]
      module_type (ocamldoc/odoc_comments.mli[22,1214+2]..[25,1321+5])
        Pmty_signature
        [
          signature_item (ocamldoc/odoc_comments.mli[24,1270+4]..[24,1270+50])
            Psig_value
            value_description "text_of_string" (ocamldoc/odoc_comments.mli[24,1270+8]..[24,1270+22]) (ocamldoc/odoc_comments.mli[24,1270+4]..[24,1270+50])
              attribute "ocaml.doc"
                [
                  structure_item (ocamldoc/odoc_comments.mli[23,1220+4]..[23,1220+49])
                    Pstr_eval
                    expression (ocamldoc/odoc_comments.mli[23,1220+4]..[23,1220+49])
                      Pexp_constant PConst_string(" Return a text structure from a string. ",(ocamldoc/odoc_comments.mli[23,1220+4]..[23,1220+49]),None)
                ]
              core_type (ocamldoc/odoc_comments.mli[24,1270+25]..[24,1270+50])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[24,1270+25]..[24,1270+31])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[24,1270+25]..[24,1270+31])
                  []
                core_type (ocamldoc/odoc_comments.mli[24,1270+35]..[24,1270+50])
                  Ptyp_constr "Odoc_types.text" (ocamldoc/odoc_comments.mli[24,1270+35]..[24,1270+50])
                  []
              []
        ]
  signature_item (ocamldoc/odoc_comments.mli[28,1382+0]..[59,2863+5])
    Psig_module "Basic_info_retriever" (ocamldoc/odoc_comments.mli[28,1382+7]..[28,1382+27])
      attribute "ocaml.doc"
        [
          structure_item (ocamldoc/odoc_comments.mli[27,1328+0]..[27,1328+53])
            Pstr_eval
            expression (ocamldoc/odoc_comments.mli[27,1328+0]..[27,1328+53])
              Pexp_constant PConst_string(" The basic module for special comments analysis.",(ocamldoc/odoc_comments.mli[27,1328+0]..[27,1328+53]),None)
        ]
    module_type (ocamldoc/odoc_comments.mli[29,1412+2]..[59,2863+5])
      Pmty_signature
      [
        signature_item (ocamldoc/odoc_comments.mli[31,1484+4]..[32,1520+32])
          Psig_value
          value_description "blank_line_outside_simple" (ocamldoc/odoc_comments.mli[31,1484+8]..[31,1484+33]) (ocamldoc/odoc_comments.mli[31,1484+4]..[32,1520+32])
            attribute "ocaml.doc"
              [
                structure_item (ocamldoc/odoc_comments.mli[30,1418+4]..[30,1418+65])
                  Pstr_eval
                  expression (ocamldoc/odoc_comments.mli[30,1418+4]..[30,1418+65])
                    Pexp_constant PConst_string(" Return true if the given string contains a blank line. ",(ocamldoc/odoc_comments.mli[30,1418+4]..[30,1418+65]),None)
              ]
            core_type (ocamldoc/odoc_comments.mli[32,1520+8]..[32,1520+32])
              Ptyp_arrow
              Nolabel
              core_type (ocamldoc/odoc_comments.mli[32,1520+8]..[32,1520+14])
                Ptyp_constr "string" (ocamldoc/odoc_comments.mli[32,1520+8]..[32,1520+14])
                []
              core_type (ocamldoc/odoc_comments.mli[32,1520+18]..[32,1520+32])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[32,1520+18]..[32,1520+24])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[32,1520+18]..[32,1520+24])
                  []
                core_type (ocamldoc/odoc_comments.mli[32,1520+28]..[32,1520+32])
                  Ptyp_constr "bool" (ocamldoc/odoc_comments.mli[32,1520+28]..[32,1520+32])
                  []
            []
        signature_item (ocamldoc/odoc_comments.mli[35,1635+4]..[35,1635+68])
          Psig_value
          value_description "all_special" (ocamldoc/odoc_comments.mli[35,1635+8]..[35,1635+19]) (ocamldoc/odoc_comments.mli[35,1635+4]..[35,1635+68])
            attribute "ocaml.doc"
              [
                structure_item (ocamldoc/odoc_comments.mli[34,1554+4]..[34,1554+80])
                  Pstr_eval
                  expression (ocamldoc/odoc_comments.mli[34,1554+4]..[34,1554+80])
                    Pexp_constant PConst_string(" This function retrieves all the special comments in the given string. ",(ocamldoc/odoc_comments.mli[34,1554+4]..[34,1554+80]),None)
              ]
            core_type (ocamldoc/odoc_comments.mli[35,1635+22]..[35,1635+68])
              Ptyp_arrow
              Nolabel
              core_type (ocamldoc/odoc_comments.mli[35,1635+22]..[35,1635+28])
                Ptyp_constr "string" (ocamldoc/odoc_comments.mli[35,1635+22]..[35,1635+28])
                []
              core_type (ocamldoc/odoc_comments.mli[35,1635+32]..[35,1635+68])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[35,1635+32]..[35,1635+38])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[35,1635+32]..[35,1635+38])
                  []
                core_type (ocamldoc/odoc_comments.mli[35,1635+42]..[35,1635+68])
                  Ptyp_tuple
                  [
                    core_type (ocamldoc/odoc_comments.mli[35,1635+42]..[35,1635+45])
                      Ptyp_constr "int" (ocamldoc/odoc_comments.mli[35,1635+42]..[35,1635+45])
                      []
                    core_type (ocamldoc/odoc_comments.mli[35,1635+48]..[35,1635+68])
                      Ptyp_constr "list" (ocamldoc/odoc_comments.mli[35,1635+64]..[35,1635+68])
                      [
                        core_type (ocamldoc/odoc_comments.mli[35,1635+48]..[35,1635+63])
                          Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[35,1635+48]..[35,1635+63])
                          []
                      ]
                  ]
            []
        signature_item (ocamldoc/odoc_comments.mli[41,2003+4]..[42,2032+56])
          Psig_value
          value_description "just_after_special" (ocamldoc/odoc_comments.mli[41,2003+8]..[41,2003+26]) (ocamldoc/odoc_comments.mli[41,2003+4]..[42,2032+56])
            attribute "ocaml.doc"
              [
                structure_item (ocamldoc/odoc_comments.mli[37,1705+4]..[40,1921+81])
                  Pstr_eval
                  expression (ocamldoc/odoc_comments.mli[37,1705+4]..[40,1921+81])
                    Pexp_constant PConst_string(" [just_after_special file str] return the pair ([length], [info_opt])\n       where [info_opt] is the first optional special comment found\n       in [str], without any blank line before. [length] is the number\n       of chars from the beginning of [str] to the end of the special comment. ",(ocamldoc/odoc_comments.mli[37,1705+4]..[40,1921+81]),None)
              ]
            core_type (ocamldoc/odoc_comments.mli[42,2032+8]..[42,2032+56])
              Ptyp_arrow
              Nolabel
              core_type (ocamldoc/odoc_comments.mli[42,2032+8]..[42,2032+14])
                Ptyp_constr "string" (ocamldoc/odoc_comments.mli[42,2032+8]..[42,2032+14])
                []
              core_type (ocamldoc/odoc_comments.mli[42,2032+18]..[42,2032+56])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[42,2032+18]..[42,2032+24])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[42,2032+18]..[42,2032+24])
                  []
                core_type (ocamldoc/odoc_comments.mli[42,2032+28]..[42,2032+56])
                  Ptyp_tuple
                  [
                    core_type (ocamldoc/odoc_comments.mli[42,2032+28]..[42,2032+31])
                      Ptyp_constr "int" (ocamldoc/odoc_comments.mli[42,2032+28]..[42,2032+31])
                      []
                    core_type (ocamldoc/odoc_comments.mli[42,2032+34]..[42,2032+56])
                      Ptyp_constr "option" (ocamldoc/odoc_comments.mli[42,2032+50]..[42,2032+56])
                      [
                        core_type (ocamldoc/odoc_comments.mli[42,2032+34]..[42,2032+49])
                          Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[42,2032+34]..[42,2032+49])
                          []
                      ]
                  ]
            []
        signature_item (ocamldoc/odoc_comments.mli[48,2352+4]..[49,2376+56])
          Psig_value
          value_description "first_special" (ocamldoc/odoc_comments.mli[48,2352+8]..[48,2352+21]) (ocamldoc/odoc_comments.mli[48,2352+4]..[49,2376+56])
            attribute "ocaml.doc"
              [
                structure_item (ocamldoc/odoc_comments.mli[44,2090+4]..[47,2301+50])
                  Pstr_eval
                  expression (ocamldoc/odoc_comments.mli[44,2090+4]..[47,2301+50])
                    Pexp_constant PConst_string(" [first_special file str] return the pair ([length], [info_opt])\n       where [info_opt] is the first optional special comment found\n       in [str]. [length] is the number of chars from the beginning of\n       [str] to the end of the special comment. ",(ocamldoc/odoc_comments.mli[44,2090+4]..[47,2301+50]),None)
              ]
            core_type (ocamldoc/odoc_comments.mli[49,2376+8]..[49,2376+56])
              Ptyp_arrow
              Nolabel
              core_type (ocamldoc/odoc_comments.mli[49,2376+8]..[49,2376+14])
                Ptyp_constr "string" (ocamldoc/odoc_comments.mli[49,2376+8]..[49,2376+14])
                []
              core_type (ocamldoc/odoc_comments.mli[49,2376+18]..[49,2376+56])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[49,2376+18]..[49,2376+24])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[49,2376+18]..[49,2376+24])
                  []
                core_type (ocamldoc/odoc_comments.mli[49,2376+28]..[49,2376+56])
                  Ptyp_tuple
                  [
                    core_type (ocamldoc/odoc_comments.mli[49,2376+28]..[49,2376+31])
                      Ptyp_constr "int" (ocamldoc/odoc_comments.mli[49,2376+28]..[49,2376+31])
                      []
                    core_type (ocamldoc/odoc_comments.mli[49,2376+34]..[49,2376+56])
                      Ptyp_constr "option" (ocamldoc/odoc_comments.mli[49,2376+50]..[49,2376+56])
                      [
                        core_type (ocamldoc/odoc_comments.mli[49,2376+34]..[49,2376+49])
                          Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[49,2376+34]..[49,2376+49])
                          []
                      ]
                  ]
            []
        signature_item (ocamldoc/odoc_comments.mli[55,2741+4]..[57,2799+62])
          Psig_value
          value_description "get_comments" (ocamldoc/odoc_comments.mli[55,2741+8]..[55,2741+20]) (ocamldoc/odoc_comments.mli[55,2741+4]..[57,2799+62])
            attribute "ocaml.doc"
              [
                structure_item (ocamldoc/odoc_comments.mli[51,2434+4]..[54,2684+56])
                  Pstr_eval
                  expression (ocamldoc/odoc_comments.mli[51,2434+4]..[54,2684+56])
                    Pexp_constant PConst_string(" Return a pair [(comment_opt, element_comment_list)], where [comment_opt] is the last special\n       comment found in the given string and not followed by a blank line,\n       and [element_comment_list] the list of values built from the other\n       special comments found and the given function. ",(ocamldoc/odoc_comments.mli[51,2434+4]..[54,2684+56]),None)
              ]
            core_type (ocamldoc/odoc_comments.mli[56,2764+8]..[57,2799+62])
              Ptyp_arrow
              Nolabel
              core_type (ocamldoc/odoc_comments.mli[56,2764+9]..[56,2764+30])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[56,2764+9]..[56,2764+24])
                  Ptyp_constr "Odoc_types.text" (ocamldoc/odoc_comments.mli[56,2764+9]..[56,2764+24])
                  []
                core_type (ocamldoc/odoc_comments.mli[56,2764+28]..[56,2764+30])
                  Ptyp_var a
              core_type (ocamldoc/odoc_comments.mli[57,2799+10]..[57,2799+62])
                Ptyp_arrow
                Nolabel
                core_type (ocamldoc/odoc_comments.mli[57,2799+10]..[57,2799+16])
                  Ptyp_constr "string" (ocamldoc/odoc_comments.mli[57,2799+10]..[57,2799+16])
                  []
                core_type (ocamldoc/odoc_comments.mli[57,2799+20]..[57,2799+62])
                  Ptyp_arrow
                  Nolabel
                  core_type (ocamldoc/odoc_comments.mli[57,2799+20]..[57,2799+26])
                    Ptyp_constr "string" (ocamldoc/odoc_comments.mli[57,2799+20]..[57,2799+26])
                    []
                  core_type (ocamldoc/odoc_comments.mli[57,2799+30]..[57,2799+62])
                    Ptyp_tuple
                    [
                      core_type (ocamldoc/odoc_comments.mli[57,2799+30]..[57,2799+52])
                        Ptyp_constr "option" (ocamldoc/odoc_comments.mli[57,2799+46]..[57,2799+52])
                        [
                          core_type (ocamldoc/odoc_comments.mli[57,2799+30]..[57,2799+45])
                            Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[57,2799+30]..[57,2799+45])
                            []
                        ]
                      core_type (ocamldoc/odoc_comments.mli[57,2799+55]..[57,2799+62])
                        Ptyp_constr "list" (ocamldoc/odoc_comments.mli[57,2799+58]..[57,2799+62])
                        [
                          core_type (ocamldoc/odoc_comments.mli[57,2799+55]..[57,2799+57])
                            Ptyp_var a
                        ]
                    ]
            []
      ]
  signature_item (ocamldoc/odoc_comments.mli[66,3079+0]..[66,3079+46])
    Psig_value
    value_description "info_of_string" (ocamldoc/odoc_comments.mli[66,3079+4]..[66,3079+18]) (ocamldoc/odoc_comments.mli[66,3079+0]..[66,3079+46])
      attribute "ocaml.doc"
        [
          structure_item (ocamldoc/odoc_comments.mli[61,2870+0]..[65,3076+2])
            Pstr_eval
            expression (ocamldoc/odoc_comments.mli[61,2870+0]..[65,3076+2])
              Pexp_constant PConst_string(" [info_of_string s] parses the given string\n   like a regular ocamldoc comment and return an\n   {!Odoc_types.info} structure.\n   @return an empty structure if there was a syntax error. TODO: change this\n",(ocamldoc/odoc_comments.mli[61,2870+0]..[65,3076+2]),None)
        ]
      core_type (ocamldoc/odoc_comments.mli[66,3079+21]..[66,3079+46])
        Ptyp_arrow
        Nolabel
        core_type (ocamldoc/odoc_comments.mli[66,3079+21]..[66,3079+27])
          Ptyp_constr "string" (ocamldoc/odoc_comments.mli[66,3079+21]..[66,3079+27])
          []
        core_type (ocamldoc/odoc_comments.mli[66,3079+31]..[66,3079+46])
          Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[66,3079+31]..[66,3079+46])
          []
      []
  signature_item (ocamldoc/odoc_comments.mli[75,3456+0]..[76,3483+58])
    Psig_value
    value_description "info_of_comment_file" (ocamldoc/odoc_comments.mli[75,3456+4]..[75,3456+24]) (ocamldoc/odoc_comments.mli[75,3456+0]..[76,3483+58])
      attribute "ocaml.doc"
        [
          structure_item (ocamldoc/odoc_comments.mli[68,3127+0]..[74,3453+2])
            Pstr_eval
            expression (ocamldoc/odoc_comments.mli[68,3127+0]..[74,3453+2])
              Pexp_constant PConst_string(" [info_of_comment_file file] parses the given file\n   and return an {!Odoc_types.info} structure. The content of the\n   file must have the same syntax as the content of a special comment.\n   The given module list is used for cross reference.\n   @raise Failure if the file could not be opened or there is a\n   syntax error.\n",(ocamldoc/odoc_comments.mli[68,3127+0]..[74,3453+2]),None)
        ]
      core_type (ocamldoc/odoc_comments.mli[76,3483+4]..[76,3483+58])
        Ptyp_arrow
        Nolabel
        core_type (ocamldoc/odoc_comments.mli[76,3483+4]..[76,3483+29])
          Ptyp_constr "list" (ocamldoc/odoc_comments.mli[76,3483+25]..[76,3483+29])
          [
            core_type (ocamldoc/odoc_comments.mli[76,3483+4]..[76,3483+24])
              Ptyp_constr "Odoc_module.t_module" (ocamldoc/odoc_comments.mli[76,3483+4]..[76,3483+24])
              []
          ]
        core_type (ocamldoc/odoc_comments.mli[76,3483+33]..[76,3483+58])
          Ptyp_arrow
          Nolabel
          core_type (ocamldoc/odoc_comments.mli[76,3483+33]..[76,3483+39])
            Ptyp_constr "string" (ocamldoc/odoc_comments.mli[76,3483+33]..[76,3483+39])
            []
          core_type (ocamldoc/odoc_comments.mli[76,3483+43]..[76,3483+58])
            Ptyp_constr "Odoc_types.info" (ocamldoc/odoc_comments.mli[76,3483+43]..[76,3483+58])
            []
      []
]

