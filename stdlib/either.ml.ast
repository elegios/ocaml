[
  structure_item (stdlib/either.ml[16,1079+0]..[16,1079+42])
    Pstr_type Rec
    [
      type_declaration "t" (stdlib/either.ml[16,1079+14]..[16,1079+15]) (stdlib/either.ml[16,1079+0]..[16,1079+42])
        ptype_params =
          [
            core_type (stdlib/either.ml[16,1079+6]..[16,1079+8])
              Ptyp_var a
            core_type (stdlib/either.ml[16,1079+10]..[16,1079+12])
              Ptyp_var b
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/either.ml[16,1079+18]..[16,1079+28])
                "Left" (stdlib/either.ml[16,1079+18]..[16,1079+22])
                [
                  core_type (stdlib/either.ml[16,1079+26]..[16,1079+28])
                    Ptyp_var a
                ]
                None
              (stdlib/either.ml[16,1079+29]..[16,1079+42])
                "Right" (stdlib/either.ml[16,1079+31]..[16,1079+36])
                [
                  core_type (stdlib/either.ml[16,1079+40]..[16,1079+42])
                    Ptyp_var b
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (stdlib/either.ml[18,1123+0]..[18,1123+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[18,1123+4]..[18,1123+8])
          Ppat_var "left" (stdlib/either.ml[18,1123+4]..[18,1123+8])
        expression (stdlib/either.ml[18,1123+9]..[18,1123+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/either.ml[18,1123+9]..[18,1123+10])
            Ppat_var "v" (stdlib/either.ml[18,1123+9]..[18,1123+10])
          expression (stdlib/either.ml[18,1123+13]..[18,1123+19])
            Pexp_construct "Left" (stdlib/either.ml[18,1123+13]..[18,1123+17])
            Some
              expression (stdlib/either.ml[18,1123+18]..[18,1123+19])
                Pexp_ident "v" (stdlib/either.ml[18,1123+18]..[18,1123+19])
    ]
  structure_item (stdlib/either.ml[19,1143+0]..[19,1143+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[19,1143+4]..[19,1143+9])
          Ppat_var "right" (stdlib/either.ml[19,1143+4]..[19,1143+9])
        expression (stdlib/either.ml[19,1143+10]..[19,1143+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/either.ml[19,1143+10]..[19,1143+11])
            Ppat_var "v" (stdlib/either.ml[19,1143+10]..[19,1143+11])
          expression (stdlib/either.ml[19,1143+14]..[19,1143+21])
            Pexp_construct "Right" (stdlib/either.ml[19,1143+14]..[19,1143+19])
            Some
              expression (stdlib/either.ml[19,1143+20]..[19,1143+21])
                Pexp_ident "v" (stdlib/either.ml[19,1143+20]..[19,1143+21])
    ]
  structure_item (stdlib/either.ml[21,1166+0]..[23,1206+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[21,1166+4]..[21,1166+11])
          Ppat_var "is_left" (stdlib/either.ml[21,1166+4]..[21,1166+11])
        expression (stdlib/either.ml[21,1166+14]..[23,1206+18])
          Pexp_function
          [
            <case>
              pattern (stdlib/either.ml[22,1189+2]..[22,1189+8])
                Ppat_construct "Left" (stdlib/either.ml[22,1189+2]..[22,1189+6])
                Some
                  []
                  pattern (stdlib/either.ml[22,1189+7]..[22,1189+8])
                    Ppat_any
              expression (stdlib/either.ml[22,1189+12]..[22,1189+16])
                Pexp_construct "true" (stdlib/either.ml[22,1189+12]..[22,1189+16])
                None
            <case>
              pattern (stdlib/either.ml[23,1206+2]..[23,1206+9])
                Ppat_construct "Right" (stdlib/either.ml[23,1206+2]..[23,1206+7])
                Some
                  []
                  pattern (stdlib/either.ml[23,1206+8]..[23,1206+9])
                    Ppat_any
              expression (stdlib/either.ml[23,1206+13]..[23,1206+18])
                Pexp_construct "false" (stdlib/either.ml[23,1206+13]..[23,1206+18])
                None
          ]
    ]
  structure_item (stdlib/either.ml[25,1226+0]..[27,1268+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[25,1226+4]..[25,1226+12])
          Ppat_var "is_right" (stdlib/either.ml[25,1226+4]..[25,1226+12])
        expression (stdlib/either.ml[25,1226+15]..[27,1268+17])
          Pexp_function
          [
            <case>
              pattern (stdlib/either.ml[26,1250+2]..[26,1250+8])
                Ppat_construct "Left" (stdlib/either.ml[26,1250+2]..[26,1250+6])
                Some
                  []
                  pattern (stdlib/either.ml[26,1250+7]..[26,1250+8])
                    Ppat_any
              expression (stdlib/either.ml[26,1250+12]..[26,1250+17])
                Pexp_construct "false" (stdlib/either.ml[26,1250+12]..[26,1250+17])
                None
            <case>
              pattern (stdlib/either.ml[27,1268+2]..[27,1268+9])
                Ppat_construct "Right" (stdlib/either.ml[27,1268+2]..[27,1268+7])
                Some
                  []
                  pattern (stdlib/either.ml[27,1268+8]..[27,1268+9])
                    Ppat_any
              expression (stdlib/either.ml[27,1268+13]..[27,1268+17])
                Pexp_construct "true" (stdlib/either.ml[27,1268+13]..[27,1268+17])
                None
          ]
    ]
  structure_item (stdlib/either.ml[29,1287+0]..[31,1331+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[29,1287+4]..[29,1287+13])
          Ppat_var "find_left" (stdlib/either.ml[29,1287+4]..[29,1287+13])
        expression (stdlib/either.ml[29,1287+16]..[31,1331+17])
          Pexp_function
          [
            <case>
              pattern (stdlib/either.ml[30,1312+2]..[30,1312+8])
                Ppat_construct "Left" (stdlib/either.ml[30,1312+2]..[30,1312+6])
                Some
                  []
                  pattern (stdlib/either.ml[30,1312+7]..[30,1312+8])
                    Ppat_var "v" (stdlib/either.ml[30,1312+7]..[30,1312+8])
              expression (stdlib/either.ml[30,1312+12]..[30,1312+18])
                Pexp_construct "Some" (stdlib/either.ml[30,1312+12]..[30,1312+16])
                Some
                  expression (stdlib/either.ml[30,1312+17]..[30,1312+18])
                    Pexp_ident "v" (stdlib/either.ml[30,1312+17]..[30,1312+18])
            <case>
              pattern (stdlib/either.ml[31,1331+2]..[31,1331+9])
                Ppat_construct "Right" (stdlib/either.ml[31,1331+2]..[31,1331+7])
                Some
                  []
                  pattern (stdlib/either.ml[31,1331+8]..[31,1331+9])
                    Ppat_any
              expression (stdlib/either.ml[31,1331+13]..[31,1331+17])
                Pexp_construct "None" (stdlib/either.ml[31,1331+13]..[31,1331+17])
                None
          ]
    ]
  structure_item (stdlib/either.ml[33,1350+0]..[35,1393+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[33,1350+4]..[33,1350+14])
          Ppat_var "find_right" (stdlib/either.ml[33,1350+4]..[33,1350+14])
        expression (stdlib/either.ml[33,1350+17]..[35,1393+19])
          Pexp_function
          [
            <case>
              pattern (stdlib/either.ml[34,1376+2]..[34,1376+8])
                Ppat_construct "Left" (stdlib/either.ml[34,1376+2]..[34,1376+6])
                Some
                  []
                  pattern (stdlib/either.ml[34,1376+7]..[34,1376+8])
                    Ppat_any
              expression (stdlib/either.ml[34,1376+12]..[34,1376+16])
                Pexp_construct "None" (stdlib/either.ml[34,1376+12]..[34,1376+16])
                None
            <case>
              pattern (stdlib/either.ml[35,1393+2]..[35,1393+9])
                Ppat_construct "Right" (stdlib/either.ml[35,1393+2]..[35,1393+7])
                Some
                  []
                  pattern (stdlib/either.ml[35,1393+8]..[35,1393+9])
                    Ppat_var "v" (stdlib/either.ml[35,1393+8]..[35,1393+9])
              expression (stdlib/either.ml[35,1393+13]..[35,1393+19])
                Pexp_construct "Some" (stdlib/either.ml[35,1393+13]..[35,1393+17])
                Some
                  expression (stdlib/either.ml[35,1393+18]..[35,1393+19])
                    Pexp_ident "v" (stdlib/either.ml[35,1393+18]..[35,1393+19])
          ]
    ]
  structure_item (stdlib/either.ml[37,1414+0]..[39,1463+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[37,1414+4]..[37,1414+12])
          Ppat_var "map_left" (stdlib/either.ml[37,1414+4]..[37,1414+12])
        expression (stdlib/either.ml[37,1414+13]..[39,1463+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/either.ml[37,1414+13]..[37,1414+14])
            Ppat_var "f" (stdlib/either.ml[37,1414+13]..[37,1414+14])
          expression (stdlib/either.ml[37,1414+17]..[39,1463+19])
            Pexp_function
            [
              <case>
                pattern (stdlib/either.ml[38,1440+2]..[38,1440+8])
                  Ppat_construct "Left" (stdlib/either.ml[38,1440+2]..[38,1440+6])
                  Some
                    []
                    pattern (stdlib/either.ml[38,1440+7]..[38,1440+8])
                      Ppat_var "v" (stdlib/either.ml[38,1440+7]..[38,1440+8])
                expression (stdlib/either.ml[38,1440+12]..[38,1440+22])
                  Pexp_construct "Left" (stdlib/either.ml[38,1440+12]..[38,1440+16])
                  Some
                    expression (stdlib/either.ml[38,1440+17]..[38,1440+22])
                      Pexp_apply
                      expression (stdlib/either.ml[38,1440+18]..[38,1440+19])
                        Pexp_ident "f" (stdlib/either.ml[38,1440+18]..[38,1440+19])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/either.ml[38,1440+20]..[38,1440+21])
                            Pexp_ident "v" (stdlib/either.ml[38,1440+20]..[38,1440+21])
                      ]
              <case>
                pattern (stdlib/either.ml[39,1463+2]..[39,1463+14])
                  Ppat_alias "e" (stdlib/either.ml[39,1463+13]..[39,1463+14])
                  pattern (stdlib/either.ml[39,1463+2]..[39,1463+9])
                    Ppat_construct "Right" (stdlib/either.ml[39,1463+2]..[39,1463+7])
                    Some
                      []
                      pattern (stdlib/either.ml[39,1463+8]..[39,1463+9])
                        Ppat_any
                expression (stdlib/either.ml[39,1463+18]..[39,1463+19])
                  Pexp_ident "e" (stdlib/either.ml[39,1463+18]..[39,1463+19])
            ]
    ]
  structure_item (stdlib/either.ml[41,1484+0]..[43,1530+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[41,1484+4]..[41,1484+13])
          Ppat_var "map_right" (stdlib/either.ml[41,1484+4]..[41,1484+13])
        expression (stdlib/either.ml[41,1484+14]..[43,1530+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/either.ml[41,1484+14]..[41,1484+15])
            Ppat_var "f" (stdlib/either.ml[41,1484+14]..[41,1484+15])
          expression (stdlib/either.ml[41,1484+18]..[43,1530+24])
            Pexp_function
            [
              <case>
                pattern (stdlib/either.ml[42,1511+2]..[42,1511+13])
                  Ppat_alias "e" (stdlib/either.ml[42,1511+12]..[42,1511+13])
                  pattern (stdlib/either.ml[42,1511+2]..[42,1511+8])
                    Ppat_construct "Left" (stdlib/either.ml[42,1511+2]..[42,1511+6])
                    Some
                      []
                      pattern (stdlib/either.ml[42,1511+7]..[42,1511+8])
                        Ppat_any
                expression (stdlib/either.ml[42,1511+17]..[42,1511+18])
                  Pexp_ident "e" (stdlib/either.ml[42,1511+17]..[42,1511+18])
              <case>
                pattern (stdlib/either.ml[43,1530+2]..[43,1530+9])
                  Ppat_construct "Right" (stdlib/either.ml[43,1530+2]..[43,1530+7])
                  Some
                    []
                    pattern (stdlib/either.ml[43,1530+8]..[43,1530+9])
                      Ppat_var "v" (stdlib/either.ml[43,1530+8]..[43,1530+9])
                expression (stdlib/either.ml[43,1530+13]..[43,1530+24])
                  Pexp_construct "Right" (stdlib/either.ml[43,1530+13]..[43,1530+18])
                  Some
                    expression (stdlib/either.ml[43,1530+19]..[43,1530+24])
                      Pexp_apply
                      expression (stdlib/either.ml[43,1530+20]..[43,1530+21])
                        Pexp_ident "f" (stdlib/either.ml[43,1530+20]..[43,1530+21])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/either.ml[43,1530+22]..[43,1530+23])
                            Pexp_ident "v" (stdlib/either.ml[43,1530+22]..[43,1530+23])
                      ]
            ]
    ]
  structure_item (stdlib/either.ml[45,1556+0]..[47,1614+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[45,1556+4]..[45,1556+7])
          Ppat_var "map" (stdlib/either.ml[45,1556+4]..[45,1556+7])
        expression (stdlib/either.ml[45,1556+8]..[47,1614+28]) ghost
          Pexp_fun
          Labelled "left"
          None
          pattern (stdlib/either.ml[45,1556+9]..[45,1556+13])
            Ppat_var "left" (stdlib/either.ml[45,1556+9]..[45,1556+13])
          expression (stdlib/either.ml[45,1556+14]..[47,1614+28]) ghost
            Pexp_fun
            Labelled "right"
            None
            pattern (stdlib/either.ml[45,1556+15]..[45,1556+20])
              Ppat_var "right" (stdlib/either.ml[45,1556+15]..[45,1556+20])
            expression (stdlib/either.ml[45,1556+23]..[47,1614+28])
              Pexp_function
              [
                <case>
                  pattern (stdlib/either.ml[46,1588+2]..[46,1588+8])
                    Ppat_construct "Left" (stdlib/either.ml[46,1588+2]..[46,1588+6])
                    Some
                      []
                      pattern (stdlib/either.ml[46,1588+7]..[46,1588+8])
                        Ppat_var "v" (stdlib/either.ml[46,1588+7]..[46,1588+8])
                  expression (stdlib/either.ml[46,1588+12]..[46,1588+25])
                    Pexp_construct "Left" (stdlib/either.ml[46,1588+12]..[46,1588+16])
                    Some
                      expression (stdlib/either.ml[46,1588+17]..[46,1588+25])
                        Pexp_apply
                        expression (stdlib/either.ml[46,1588+18]..[46,1588+22])
                          Pexp_ident "left" (stdlib/either.ml[46,1588+18]..[46,1588+22])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[46,1588+23]..[46,1588+24])
                              Pexp_ident "v" (stdlib/either.ml[46,1588+23]..[46,1588+24])
                        ]
                <case>
                  pattern (stdlib/either.ml[47,1614+2]..[47,1614+9])
                    Ppat_construct "Right" (stdlib/either.ml[47,1614+2]..[47,1614+7])
                    Some
                      []
                      pattern (stdlib/either.ml[47,1614+8]..[47,1614+9])
                        Ppat_var "v" (stdlib/either.ml[47,1614+8]..[47,1614+9])
                  expression (stdlib/either.ml[47,1614+13]..[47,1614+28])
                    Pexp_construct "Right" (stdlib/either.ml[47,1614+13]..[47,1614+18])
                    Some
                      expression (stdlib/either.ml[47,1614+19]..[47,1614+28])
                        Pexp_apply
                        expression (stdlib/either.ml[47,1614+20]..[47,1614+25])
                          Pexp_ident "right" (stdlib/either.ml[47,1614+20]..[47,1614+25])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[47,1614+26]..[47,1614+27])
                              Pexp_ident "v" (stdlib/either.ml[47,1614+26]..[47,1614+27])
                        ]
              ]
    ]
  structure_item (stdlib/either.ml[49,1644+0]..[51,1696+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[49,1644+4]..[49,1644+8])
          Ppat_var "fold" (stdlib/either.ml[49,1644+4]..[49,1644+8])
        expression (stdlib/either.ml[49,1644+9]..[51,1696+20]) ghost
          Pexp_fun
          Labelled "left"
          None
          pattern (stdlib/either.ml[49,1644+10]..[49,1644+14])
            Ppat_var "left" (stdlib/either.ml[49,1644+10]..[49,1644+14])
          expression (stdlib/either.ml[49,1644+15]..[51,1696+20]) ghost
            Pexp_fun
            Labelled "right"
            None
            pattern (stdlib/either.ml[49,1644+16]..[49,1644+21])
              Ppat_var "right" (stdlib/either.ml[49,1644+16]..[49,1644+21])
            expression (stdlib/either.ml[49,1644+24]..[51,1696+20])
              Pexp_function
              [
                <case>
                  pattern (stdlib/either.ml[50,1677+2]..[50,1677+8])
                    Ppat_construct "Left" (stdlib/either.ml[50,1677+2]..[50,1677+6])
                    Some
                      []
                      pattern (stdlib/either.ml[50,1677+7]..[50,1677+8])
                        Ppat_var "v" (stdlib/either.ml[50,1677+7]..[50,1677+8])
                  expression (stdlib/either.ml[50,1677+12]..[50,1677+18])
                    Pexp_apply
                    expression (stdlib/either.ml[50,1677+12]..[50,1677+16])
                      Pexp_ident "left" (stdlib/either.ml[50,1677+12]..[50,1677+16])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/either.ml[50,1677+17]..[50,1677+18])
                          Pexp_ident "v" (stdlib/either.ml[50,1677+17]..[50,1677+18])
                    ]
                <case>
                  pattern (stdlib/either.ml[51,1696+2]..[51,1696+9])
                    Ppat_construct "Right" (stdlib/either.ml[51,1696+2]..[51,1696+7])
                    Some
                      []
                      pattern (stdlib/either.ml[51,1696+8]..[51,1696+9])
                        Ppat_var "v" (stdlib/either.ml[51,1696+8]..[51,1696+9])
                  expression (stdlib/either.ml[51,1696+13]..[51,1696+20])
                    Pexp_apply
                    expression (stdlib/either.ml[51,1696+13]..[51,1696+18])
                      Pexp_ident "right" (stdlib/either.ml[51,1696+13]..[51,1696+18])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/either.ml[51,1696+19]..[51,1696+20])
                          Pexp_ident "v" (stdlib/either.ml[51,1696+19]..[51,1696+20])
                    ]
              ]
    ]
  structure_item (stdlib/either.ml[53,1718+0]..[53,1718+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[53,1718+4]..[53,1718+8])
          Ppat_var "iter" (stdlib/either.ml[53,1718+4]..[53,1718+8])
        expression (stdlib/either.ml[53,1718+11]..[53,1718+15])
          Pexp_ident "fold" (stdlib/either.ml[53,1718+11]..[53,1718+15])
    ]
  structure_item (stdlib/either.ml[55,1735+0]..[55,1735+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[55,1735+4]..[55,1735+11])
          Ppat_var "for_all" (stdlib/either.ml[55,1735+4]..[55,1735+11])
        expression (stdlib/either.ml[55,1735+14]..[55,1735+18])
          Pexp_ident "fold" (stdlib/either.ml[55,1735+14]..[55,1735+18])
    ]
  structure_item (stdlib/either.ml[57,1755+0]..[60,1873+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[57,1755+4]..[57,1755+9])
          Ppat_var "equal" (stdlib/either.ml[57,1755+4]..[57,1755+9])
        expression (stdlib/either.ml[57,1755+10]..[60,1873+44]) ghost
          Pexp_fun
          Labelled "left"
          None
          pattern (stdlib/either.ml[57,1755+11]..[57,1755+15])
            Ppat_var "left" (stdlib/either.ml[57,1755+11]..[57,1755+15])
          expression (stdlib/either.ml[57,1755+16]..[60,1873+44]) ghost
            Pexp_fun
            Labelled "right"
            None
            pattern (stdlib/either.ml[57,1755+17]..[57,1755+22])
              Ppat_var "right" (stdlib/either.ml[57,1755+17]..[57,1755+22])
            expression (stdlib/either.ml[57,1755+23]..[60,1873+44]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/either.ml[57,1755+23]..[57,1755+25])
                Ppat_var "e1" (stdlib/either.ml[57,1755+23]..[57,1755+25])
              expression (stdlib/either.ml[57,1755+26]..[60,1873+44]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/either.ml[57,1755+26]..[57,1755+28])
                  Ppat_var "e2" (stdlib/either.ml[57,1755+26]..[57,1755+28])
                expression (stdlib/either.ml[57,1755+31]..[60,1873+44])
                  Pexp_match
                  expression (stdlib/either.ml[57,1755+37]..[57,1755+43])
                    Pexp_tuple
                    [
                      expression (stdlib/either.ml[57,1755+37]..[57,1755+39])
                        Pexp_ident "e1" (stdlib/either.ml[57,1755+37]..[57,1755+39])
                      expression (stdlib/either.ml[57,1755+41]..[57,1755+43])
                        Pexp_ident "e2" (stdlib/either.ml[57,1755+41]..[57,1755+43])
                    ]
                  [
                    <case>
                      pattern (stdlib/either.ml[58,1804+2]..[58,1804+18])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[58,1804+2]..[58,1804+9])
                            Ppat_construct "Left" (stdlib/either.ml[58,1804+2]..[58,1804+6])
                            Some
                              []
                              pattern (stdlib/either.ml[58,1804+7]..[58,1804+9])
                                Ppat_var "v1" (stdlib/either.ml[58,1804+7]..[58,1804+9])
                          pattern (stdlib/either.ml[58,1804+11]..[58,1804+18])
                            Ppat_construct "Left" (stdlib/either.ml[58,1804+11]..[58,1804+15])
                            Some
                              []
                              pattern (stdlib/either.ml[58,1804+16]..[58,1804+18])
                                Ppat_var "v2" (stdlib/either.ml[58,1804+16]..[58,1804+18])
                        ]
                      expression (stdlib/either.ml[58,1804+22]..[58,1804+32])
                        Pexp_apply
                        expression (stdlib/either.ml[58,1804+22]..[58,1804+26])
                          Pexp_ident "left" (stdlib/either.ml[58,1804+22]..[58,1804+26])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[58,1804+27]..[58,1804+29])
                              Pexp_ident "v1" (stdlib/either.ml[58,1804+27]..[58,1804+29])
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[58,1804+30]..[58,1804+32])
                              Pexp_ident "v2" (stdlib/either.ml[58,1804+30]..[58,1804+32])
                        ]
                    <case>
                      pattern (stdlib/either.ml[59,1837+2]..[59,1837+20])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[59,1837+2]..[59,1837+10])
                            Ppat_construct "Right" (stdlib/either.ml[59,1837+2]..[59,1837+7])
                            Some
                              []
                              pattern (stdlib/either.ml[59,1837+8]..[59,1837+10])
                                Ppat_var "v1" (stdlib/either.ml[59,1837+8]..[59,1837+10])
                          pattern (stdlib/either.ml[59,1837+12]..[59,1837+20])
                            Ppat_construct "Right" (stdlib/either.ml[59,1837+12]..[59,1837+17])
                            Some
                              []
                              pattern (stdlib/either.ml[59,1837+18]..[59,1837+20])
                                Ppat_var "v2" (stdlib/either.ml[59,1837+18]..[59,1837+20])
                        ]
                      expression (stdlib/either.ml[59,1837+24]..[59,1837+35])
                        Pexp_apply
                        expression (stdlib/either.ml[59,1837+24]..[59,1837+29])
                          Pexp_ident "right" (stdlib/either.ml[59,1837+24]..[59,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[59,1837+30]..[59,1837+32])
                              Pexp_ident "v1" (stdlib/either.ml[59,1837+30]..[59,1837+32])
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[59,1837+33]..[59,1837+35])
                              Pexp_ident "v2" (stdlib/either.ml[59,1837+33]..[59,1837+35])
                        ]
                    <case>
                      pattern (stdlib/either.ml[60,1873+2]..[60,1873+35])
                        Ppat_or
                        pattern (stdlib/either.ml[60,1873+2]..[60,1873+17])
                          Ppat_tuple
                          [
                            pattern (stdlib/either.ml[60,1873+2]..[60,1873+8])
                              Ppat_construct "Left" (stdlib/either.ml[60,1873+2]..[60,1873+6])
                              Some
                                []
                                pattern (stdlib/either.ml[60,1873+7]..[60,1873+8])
                                  Ppat_any
                            pattern (stdlib/either.ml[60,1873+10]..[60,1873+17])
                              Ppat_construct "Right" (stdlib/either.ml[60,1873+10]..[60,1873+15])
                              Some
                                []
                                pattern (stdlib/either.ml[60,1873+16]..[60,1873+17])
                                  Ppat_any
                          ]
                        pattern (stdlib/either.ml[60,1873+20]..[60,1873+35])
                          Ppat_tuple
                          [
                            pattern (stdlib/either.ml[60,1873+20]..[60,1873+27])
                              Ppat_construct "Right" (stdlib/either.ml[60,1873+20]..[60,1873+25])
                              Some
                                []
                                pattern (stdlib/either.ml[60,1873+26]..[60,1873+27])
                                  Ppat_any
                            pattern (stdlib/either.ml[60,1873+29]..[60,1873+35])
                              Ppat_construct "Left" (stdlib/either.ml[60,1873+29]..[60,1873+33])
                              Some
                                []
                                pattern (stdlib/either.ml[60,1873+34]..[60,1873+35])
                                  Ppat_any
                          ]
                      expression (stdlib/either.ml[60,1873+39]..[60,1873+44])
                        Pexp_construct "false" (stdlib/either.ml[60,1873+39]..[60,1873+44])
                        None
                  ]
    ]
  structure_item (stdlib/either.ml[62,1919+0]..[66,2065+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/either.ml[62,1919+4]..[62,1919+11])
          Ppat_var "compare" (stdlib/either.ml[62,1919+4]..[62,1919+11])
        expression (stdlib/either.ml[62,1919+12]..[66,2065+22]) ghost
          Pexp_fun
          Labelled "left"
          None
          pattern (stdlib/either.ml[62,1919+13]..[62,1919+17])
            Ppat_var "left" (stdlib/either.ml[62,1919+13]..[62,1919+17])
          expression (stdlib/either.ml[62,1919+18]..[66,2065+22]) ghost
            Pexp_fun
            Labelled "right"
            None
            pattern (stdlib/either.ml[62,1919+19]..[62,1919+24])
              Ppat_var "right" (stdlib/either.ml[62,1919+19]..[62,1919+24])
            expression (stdlib/either.ml[62,1919+25]..[66,2065+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/either.ml[62,1919+25]..[62,1919+27])
                Ppat_var "e1" (stdlib/either.ml[62,1919+25]..[62,1919+27])
              expression (stdlib/either.ml[62,1919+28]..[66,2065+22]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (stdlib/either.ml[62,1919+28]..[62,1919+30])
                  Ppat_var "e2" (stdlib/either.ml[62,1919+28]..[62,1919+30])
                expression (stdlib/either.ml[62,1919+33]..[66,2065+22])
                  Pexp_match
                  expression (stdlib/either.ml[62,1919+39]..[62,1919+45])
                    Pexp_tuple
                    [
                      expression (stdlib/either.ml[62,1919+39]..[62,1919+41])
                        Pexp_ident "e1" (stdlib/either.ml[62,1919+39]..[62,1919+41])
                      expression (stdlib/either.ml[62,1919+43]..[62,1919+45])
                        Pexp_ident "e2" (stdlib/either.ml[62,1919+43]..[62,1919+45])
                    ]
                  [
                    <case>
                      pattern (stdlib/either.ml[63,1970+2]..[63,1970+18])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[63,1970+2]..[63,1970+9])
                            Ppat_construct "Left" (stdlib/either.ml[63,1970+2]..[63,1970+6])
                            Some
                              []
                              pattern (stdlib/either.ml[63,1970+7]..[63,1970+9])
                                Ppat_var "v1" (stdlib/either.ml[63,1970+7]..[63,1970+9])
                          pattern (stdlib/either.ml[63,1970+11]..[63,1970+18])
                            Ppat_construct "Left" (stdlib/either.ml[63,1970+11]..[63,1970+15])
                            Some
                              []
                              pattern (stdlib/either.ml[63,1970+16]..[63,1970+18])
                                Ppat_var "v2" (stdlib/either.ml[63,1970+16]..[63,1970+18])
                        ]
                      expression (stdlib/either.ml[63,1970+22]..[63,1970+32])
                        Pexp_apply
                        expression (stdlib/either.ml[63,1970+22]..[63,1970+26])
                          Pexp_ident "left" (stdlib/either.ml[63,1970+22]..[63,1970+26])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[63,1970+27]..[63,1970+29])
                              Pexp_ident "v1" (stdlib/either.ml[63,1970+27]..[63,1970+29])
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[63,1970+30]..[63,1970+32])
                              Pexp_ident "v2" (stdlib/either.ml[63,1970+30]..[63,1970+32])
                        ]
                    <case>
                      pattern (stdlib/either.ml[64,2003+2]..[64,2003+20])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[64,2003+2]..[64,2003+10])
                            Ppat_construct "Right" (stdlib/either.ml[64,2003+2]..[64,2003+7])
                            Some
                              []
                              pattern (stdlib/either.ml[64,2003+8]..[64,2003+10])
                                Ppat_var "v1" (stdlib/either.ml[64,2003+8]..[64,2003+10])
                          pattern (stdlib/either.ml[64,2003+12]..[64,2003+20])
                            Ppat_construct "Right" (stdlib/either.ml[64,2003+12]..[64,2003+17])
                            Some
                              []
                              pattern (stdlib/either.ml[64,2003+18]..[64,2003+20])
                                Ppat_var "v2" (stdlib/either.ml[64,2003+18]..[64,2003+20])
                        ]
                      expression (stdlib/either.ml[64,2003+24]..[64,2003+35])
                        Pexp_apply
                        expression (stdlib/either.ml[64,2003+24]..[64,2003+29])
                          Pexp_ident "right" (stdlib/either.ml[64,2003+24]..[64,2003+29])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[64,2003+30]..[64,2003+32])
                              Pexp_ident "v1" (stdlib/either.ml[64,2003+30]..[64,2003+32])
                          <arg>
                          Nolabel
                            expression (stdlib/either.ml[64,2003+33]..[64,2003+35])
                              Pexp_ident "v2" (stdlib/either.ml[64,2003+33]..[64,2003+35])
                        ]
                    <case>
                      pattern (stdlib/either.ml[65,2039+2]..[65,2039+17])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[65,2039+2]..[65,2039+8])
                            Ppat_construct "Left" (stdlib/either.ml[65,2039+2]..[65,2039+6])
                            Some
                              []
                              pattern (stdlib/either.ml[65,2039+7]..[65,2039+8])
                                Ppat_any
                          pattern (stdlib/either.ml[65,2039+10]..[65,2039+17])
                            Ppat_construct "Right" (stdlib/either.ml[65,2039+10]..[65,2039+15])
                            Some
                              []
                              pattern (stdlib/either.ml[65,2039+16]..[65,2039+17])
                                Ppat_any
                        ]
                      expression (stdlib/either.ml[65,2039+21]..[65,2039+25])
                        Pexp_constant PConst_int (-1,None)
                    <case>
                      pattern (stdlib/either.ml[66,2065+2]..[66,2065+17])
                        Ppat_tuple
                        [
                          pattern (stdlib/either.ml[66,2065+2]..[66,2065+9])
                            Ppat_construct "Right" (stdlib/either.ml[66,2065+2]..[66,2065+7])
                            Some
                              []
                              pattern (stdlib/either.ml[66,2065+8]..[66,2065+9])
                                Ppat_any
                          pattern (stdlib/either.ml[66,2065+11]..[66,2065+17])
                            Ppat_construct "Left" (stdlib/either.ml[66,2065+11]..[66,2065+15])
                            Some
                              []
                              pattern (stdlib/either.ml[66,2065+16]..[66,2065+17])
                                Ppat_any
                        ]
                      expression (stdlib/either.ml[66,2065+21]..[66,2065+22])
                        Pexp_constant PConst_int (1,None)
                  ]
    ]
]

