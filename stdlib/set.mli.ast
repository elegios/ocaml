[
  signature_item (stdlib/set.mli[19,1217+0]..[48,2164+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/set.mli[19,1217+0]..[48,2164+2])
        Pstr_eval
        expression (stdlib/set.mli[19,1217+0]..[48,2164+2])
          Pexp_constant PConst_string(" Sets over ordered types.\n\n   This module implements the set data structure, given a total ordering\n   function over the set elements. All operations over sets\n   are purely applicative (no side-effects).\n   The implementation uses balanced binary trees, and is therefore\n   reasonably efficient: insertion and membership take time\n   logarithmic in the size of the set, for instance.\n\n   The {!Make} functor constructs implementations for any type, given a\n   [compare] function.\n   For instance:\n   {[\n     module IntPairs =\n       struct\n         type t = int * int\n         let compare (x0,y0) (x1,y1) =\n           match Stdlib.compare x0 x1 with\n               0 -> Stdlib.compare y0 y1\n             | c -> c\n       end\n\n     module PairsSet = Set.Make(IntPairs)\n\n     let m = PairsSet.(empty |> add (2,3) |> add (5,7) |> add (11,13))\n   ]}\n\n   This creates a new module [PairsSet], with a new type [PairsSet.t]\n   of sets of [int * int].\n",(stdlib/set.mli[19,1217+0]..[48,2164+2]),None)
    ]
  signature_item (stdlib/set.mli[50,2168+0]..[63,2743+5])
    Psig_modtype "OrderedType" (stdlib/set.mli[50,2168+12]..[50,2168+23])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/set.mli[64,2749+0]..[64,2749+46])
            Pstr_eval
            expression (stdlib/set.mli[64,2749+0]..[64,2749+46])
              Pexp_constant PConst_string(" Input signature of the functor {!Make}. ",(stdlib/set.mli[64,2749+0]..[64,2749+46]),None)
        ]
      module_type (stdlib/set.mli[51,2194+2]..[63,2743+5])
        Pmty_signature
        [
          signature_item (stdlib/set.mli[52,2200+4]..[52,2200+10])
            Psig_type Rec
            [
              type_declaration "t" (stdlib/set.mli[52,2200+9]..[52,2200+10]) (stdlib/set.mli[52,2200+4]..[52,2200+10])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/set.mli[53,2211+6]..[53,2211+42])
                      Pstr_eval
                      expression (stdlib/set.mli[53,2211+6]..[53,2211+42])
                        Pexp_constant PConst_string(" The type of the set elements. ",(stdlib/set.mli[53,2211+6]..[53,2211+42]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/set.mli[55,2255+4]..[55,2255+31])
            Psig_value
            value_description "compare" (stdlib/set.mli[55,2255+8]..[55,2255+15]) (stdlib/set.mli[55,2255+4]..[55,2255+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[56,2287+6]..[62,2691+51])
                    Pstr_eval
                    expression (stdlib/set.mli[56,2287+6]..[62,2691+51])
                      Pexp_constant PConst_string(" A total ordering function over the set elements.\n          This is a two-argument function [f] such that\n          [f e1 e2] is zero if the elements [e1] and [e2] are equal,\n          [f e1 e2] is strictly negative if [e1] is smaller than [e2],\n          and [f e1 e2] is strictly positive if [e1] is greater than [e2].\n          Example: a suitable ordering function is the generic structural\n          comparison function {!Stdlib.compare}. ",(stdlib/set.mli[56,2287+6]..[62,2691+51]),None)
                ]
              core_type (stdlib/set.mli[55,2255+18]..[55,2255+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[55,2255+18]..[55,2255+19])
                  Ptyp_constr "t" (stdlib/set.mli[55,2255+18]..[55,2255+19])
                  []
                core_type (stdlib/set.mli[55,2255+23]..[55,2255+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[55,2255+23]..[55,2255+24])
                    Ptyp_constr "t" (stdlib/set.mli[55,2255+23]..[55,2255+24])
                    []
                  core_type (stdlib/set.mli[55,2255+28]..[55,2255+31])
                    Ptyp_constr "int" (stdlib/set.mli[55,2255+28]..[55,2255+31])
                    []
              []
        ]
  signature_item (stdlib/set.mli[66,2797+0]..[308,11542+5])
    Psig_modtype "S" (stdlib/set.mli[66,2797+12]..[66,2797+13])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/set.mli[309,11548+0]..[309,11548+47])
            Pstr_eval
            expression (stdlib/set.mli[309,11548+0]..[309,11548+47])
              Pexp_constant PConst_string(" Output signature of the functor {!Make}. ",(stdlib/set.mli[309,11548+0]..[309,11548+47]),None)
        ]
      module_type (stdlib/set.mli[67,2813+2]..[308,11542+5])
        Pmty_signature
        [
          signature_item (stdlib/set.mli[68,2819+4]..[68,2819+12])
            Psig_type Rec
            [
              type_declaration "elt" (stdlib/set.mli[68,2819+9]..[68,2819+12]) (stdlib/set.mli[68,2819+4]..[68,2819+12])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/set.mli[69,2832+4]..[69,2832+40])
                      Pstr_eval
                      expression (stdlib/set.mli[69,2832+4]..[69,2832+40])
                        Pexp_constant PConst_string(" The type of the set elements. ",(stdlib/set.mli[69,2832+4]..[69,2832+40]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/set.mli[71,2874+4]..[71,2874+10])
            Psig_type Rec
            [
              type_declaration "t" (stdlib/set.mli[71,2874+9]..[71,2874+10]) (stdlib/set.mli[71,2874+4]..[71,2874+10])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/set.mli[72,2885+4]..[72,2885+28])
                      Pstr_eval
                      expression (stdlib/set.mli[72,2885+4]..[72,2885+28])
                        Pexp_constant PConst_string(" The type of sets. ",(stdlib/set.mli[72,2885+4]..[72,2885+28]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (stdlib/set.mli[74,2915+4]..[74,2915+16])
            Psig_value
            value_description "empty" (stdlib/set.mli[74,2915+8]..[74,2915+13]) (stdlib/set.mli[74,2915+4]..[74,2915+16])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[75,2932+4]..[75,2932+25])
                    Pstr_eval
                    expression (stdlib/set.mli[75,2932+4]..[75,2932+25])
                      Pexp_constant PConst_string(" The empty set. ",(stdlib/set.mli[75,2932+4]..[75,2932+25]),None)
                ]
              core_type (stdlib/set.mli[74,2915+15]..[74,2915+16])
                Ptyp_constr "t" (stdlib/set.mli[74,2915+15]..[74,2915+16])
                []
              []
          signature_item (stdlib/set.mli[77,2959+4]..[77,2959+27])
            Psig_value
            value_description "is_empty" (stdlib/set.mli[77,2959+8]..[77,2959+16]) (stdlib/set.mli[77,2959+4]..[77,2959+27])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[78,2987+4]..[78,2987+46])
                    Pstr_eval
                    expression (stdlib/set.mli[78,2987+4]..[78,2987+46])
                      Pexp_constant PConst_string(" Test whether a set is empty or not. ",(stdlib/set.mli[78,2987+4]..[78,2987+46]),None)
                ]
              core_type (stdlib/set.mli[77,2959+18]..[77,2959+27])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[77,2959+18]..[77,2959+19])
                  Ptyp_constr "t" (stdlib/set.mli[77,2959+18]..[77,2959+19])
                  []
                core_type (stdlib/set.mli[77,2959+23]..[77,2959+27])
                  Ptyp_constr "bool" (stdlib/set.mli[77,2959+23]..[77,2959+27])
                  []
              []
          signature_item (stdlib/set.mli[80,3035+4]..[80,3035+29])
            Psig_value
            value_description "mem" (stdlib/set.mli[80,3035+8]..[80,3035+11]) (stdlib/set.mli[80,3035+4]..[80,3035+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[81,3065+4]..[81,3065+62])
                    Pstr_eval
                    expression (stdlib/set.mli[81,3065+4]..[81,3065+62])
                      Pexp_constant PConst_string(" [mem x s] tests whether [x] belongs to the set [s]. ",(stdlib/set.mli[81,3065+4]..[81,3065+62]),None)
                ]
              core_type (stdlib/set.mli[80,3035+13]..[80,3035+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[80,3035+13]..[80,3035+16])
                  Ptyp_constr "elt" (stdlib/set.mli[80,3035+13]..[80,3035+16])
                  []
                core_type (stdlib/set.mli[80,3035+20]..[80,3035+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[80,3035+20]..[80,3035+21])
                    Ptyp_constr "t" (stdlib/set.mli[80,3035+20]..[80,3035+21])
                    []
                  core_type (stdlib/set.mli[80,3035+25]..[80,3035+29])
                    Ptyp_constr "bool" (stdlib/set.mli[80,3035+25]..[80,3035+29])
                    []
              []
          signature_item (stdlib/set.mli[83,3129+4]..[83,3129+26])
            Psig_value
            value_description "add" (stdlib/set.mli[83,3129+8]..[83,3129+11]) (stdlib/set.mli[83,3129+4]..[83,3129+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[84,3156+4]..[87,3359+57])
                    Pstr_eval
                    expression (stdlib/set.mli[84,3156+4]..[87,3359+57])
                      Pexp_constant PConst_string(" [add x s] returns a set containing all elements of [s],\n       plus [x]. If [x] was already in [s], [s] is returned unchanged\n       (the result of the function is then physically equal to [s]).\n       @before 4.03 Physical equality was not ensured. ",(stdlib/set.mli[84,3156+4]..[87,3359+57]),None)
                ]
              core_type (stdlib/set.mli[83,3129+13]..[83,3129+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[83,3129+13]..[83,3129+16])
                  Ptyp_constr "elt" (stdlib/set.mli[83,3129+13]..[83,3129+16])
                  []
                core_type (stdlib/set.mli[83,3129+20]..[83,3129+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[83,3129+20]..[83,3129+21])
                    Ptyp_constr "t" (stdlib/set.mli[83,3129+20]..[83,3129+21])
                    []
                  core_type (stdlib/set.mli[83,3129+25]..[83,3129+26])
                    Ptyp_constr "t" (stdlib/set.mli[83,3129+25]..[83,3129+26])
                    []
              []
          signature_item (stdlib/set.mli[89,3418+4]..[89,3418+27])
            Psig_value
            value_description "singleton" (stdlib/set.mli[89,3418+8]..[89,3418+17]) (stdlib/set.mli[89,3418+4]..[89,3418+27])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[90,3446+4]..[90,3446+73])
                    Pstr_eval
                    expression (stdlib/set.mli[90,3446+4]..[90,3446+73])
                      Pexp_constant PConst_string(" [singleton x] returns the one-element set containing only [x]. ",(stdlib/set.mli[90,3446+4]..[90,3446+73]),None)
                ]
              core_type (stdlib/set.mli[89,3418+19]..[89,3418+27])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[89,3418+19]..[89,3418+22])
                  Ptyp_constr "elt" (stdlib/set.mli[89,3418+19]..[89,3418+22])
                  []
                core_type (stdlib/set.mli[89,3418+26]..[89,3418+27])
                  Ptyp_constr "t" (stdlib/set.mli[89,3418+26]..[89,3418+27])
                  []
              []
          signature_item (stdlib/set.mli[92,3521+4]..[92,3521+29])
            Psig_value
            value_description "remove" (stdlib/set.mli[92,3521+8]..[92,3521+14]) (stdlib/set.mli[92,3521+4]..[92,3521+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[93,3551+4]..[96,3755+57])
                    Pstr_eval
                    expression (stdlib/set.mli[93,3551+4]..[96,3755+57])
                      Pexp_constant PConst_string(" [remove x s] returns a set containing all elements of [s],\n       except [x]. If [x] was not in [s], [s] is returned unchanged\n       (the result of the function is then physically equal to [s]).\n       @before 4.03 Physical equality was not ensured. ",(stdlib/set.mli[93,3551+4]..[96,3755+57]),None)
                ]
              core_type (stdlib/set.mli[92,3521+16]..[92,3521+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[92,3521+16]..[92,3521+19])
                  Ptyp_constr "elt" (stdlib/set.mli[92,3521+16]..[92,3521+19])
                  []
                core_type (stdlib/set.mli[92,3521+23]..[92,3521+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[92,3521+23]..[92,3521+24])
                    Ptyp_constr "t" (stdlib/set.mli[92,3521+23]..[92,3521+24])
                    []
                  core_type (stdlib/set.mli[92,3521+28]..[92,3521+29])
                    Ptyp_constr "t" (stdlib/set.mli[92,3521+28]..[92,3521+29])
                    []
              []
          signature_item (stdlib/set.mli[98,3814+4]..[98,3814+26])
            Psig_value
            value_description "union" (stdlib/set.mli[98,3814+8]..[98,3814+13]) (stdlib/set.mli[98,3814+4]..[98,3814+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[99,3841+4]..[99,3841+21])
                    Pstr_eval
                    expression (stdlib/set.mli[99,3841+4]..[99,3841+21])
                      Pexp_constant PConst_string(" Set union. ",(stdlib/set.mli[99,3841+4]..[99,3841+21]),None)
                ]
              core_type (stdlib/set.mli[98,3814+15]..[98,3814+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[98,3814+15]..[98,3814+16])
                  Ptyp_constr "t" (stdlib/set.mli[98,3814+15]..[98,3814+16])
                  []
                core_type (stdlib/set.mli[98,3814+20]..[98,3814+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[98,3814+20]..[98,3814+21])
                    Ptyp_constr "t" (stdlib/set.mli[98,3814+20]..[98,3814+21])
                    []
                  core_type (stdlib/set.mli[98,3814+25]..[98,3814+26])
                    Ptyp_constr "t" (stdlib/set.mli[98,3814+25]..[98,3814+26])
                    []
              []
          signature_item (stdlib/set.mli[101,3864+4]..[101,3864+26])
            Psig_value
            value_description "inter" (stdlib/set.mli[101,3864+8]..[101,3864+13]) (stdlib/set.mli[101,3864+4]..[101,3864+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[102,3891+4]..[102,3891+28])
                    Pstr_eval
                    expression (stdlib/set.mli[102,3891+4]..[102,3891+28])
                      Pexp_constant PConst_string(" Set intersection. ",(stdlib/set.mli[102,3891+4]..[102,3891+28]),None)
                ]
              core_type (stdlib/set.mli[101,3864+15]..[101,3864+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[101,3864+15]..[101,3864+16])
                  Ptyp_constr "t" (stdlib/set.mli[101,3864+15]..[101,3864+16])
                  []
                core_type (stdlib/set.mli[101,3864+20]..[101,3864+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[101,3864+20]..[101,3864+21])
                    Ptyp_constr "t" (stdlib/set.mli[101,3864+20]..[101,3864+21])
                    []
                  core_type (stdlib/set.mli[101,3864+25]..[101,3864+26])
                    Ptyp_constr "t" (stdlib/set.mli[101,3864+25]..[101,3864+26])
                    []
              []
          signature_item (stdlib/set.mli[104,3921+4]..[104,3921+32])
            Psig_value
            value_description "disjoint" (stdlib/set.mli[104,3921+8]..[104,3921+16]) (stdlib/set.mli[104,3921+4]..[104,3921+32])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[105,3954+4]..[106,3993+24])
                    Pstr_eval
                    expression (stdlib/set.mli[105,3954+4]..[106,3993+24])
                      Pexp_constant PConst_string(" Test if two sets are disjoint.\n        @since 4.08.0 ",(stdlib/set.mli[105,3954+4]..[106,3993+24]),None)
                ]
              core_type (stdlib/set.mli[104,3921+18]..[104,3921+32])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[104,3921+18]..[104,3921+19])
                  Ptyp_constr "t" (stdlib/set.mli[104,3921+18]..[104,3921+19])
                  []
                core_type (stdlib/set.mli[104,3921+23]..[104,3921+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[104,3921+23]..[104,3921+24])
                    Ptyp_constr "t" (stdlib/set.mli[104,3921+23]..[104,3921+24])
                    []
                  core_type (stdlib/set.mli[104,3921+28]..[104,3921+32])
                    Ptyp_constr "bool" (stdlib/set.mli[104,3921+28]..[104,3921+32])
                    []
              []
          signature_item (stdlib/set.mli[108,4019+4]..[108,4019+25])
            Psig_value
            value_description "diff" (stdlib/set.mli[108,4019+8]..[108,4019+12]) (stdlib/set.mli[108,4019+4]..[108,4019+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[109,4045+4]..[110,4112+31])
                    Pstr_eval
                    expression (stdlib/set.mli[109,4045+4]..[110,4112+31])
                      Pexp_constant PConst_string(" Set difference: [diff s1 s2] contains the elements of [s1]\n       that are not in [s2]. ",(stdlib/set.mli[109,4045+4]..[110,4112+31]),None)
                ]
              core_type (stdlib/set.mli[108,4019+14]..[108,4019+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[108,4019+14]..[108,4019+15])
                  Ptyp_constr "t" (stdlib/set.mli[108,4019+14]..[108,4019+15])
                  []
                core_type (stdlib/set.mli[108,4019+19]..[108,4019+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[108,4019+19]..[108,4019+20])
                    Ptyp_constr "t" (stdlib/set.mli[108,4019+19]..[108,4019+20])
                    []
                  core_type (stdlib/set.mli[108,4019+24]..[108,4019+25])
                    Ptyp_constr "t" (stdlib/set.mli[108,4019+24]..[108,4019+25])
                    []
              []
          signature_item (stdlib/set.mli[112,4145+4]..[112,4145+30])
            Psig_value
            value_description "compare" (stdlib/set.mli[112,4145+8]..[112,4145+15]) (stdlib/set.mli[112,4145+4]..[112,4145+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[113,4176+4]..[114,4250+33])
                    Pstr_eval
                    expression (stdlib/set.mli[113,4176+4]..[114,4250+33])
                      Pexp_constant PConst_string(" Total ordering between sets. Can be used as the ordering function\n       for doing sets of sets. ",(stdlib/set.mli[113,4176+4]..[114,4250+33]),None)
                ]
              core_type (stdlib/set.mli[112,4145+17]..[112,4145+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[112,4145+17]..[112,4145+18])
                  Ptyp_constr "t" (stdlib/set.mli[112,4145+17]..[112,4145+18])
                  []
                core_type (stdlib/set.mli[112,4145+22]..[112,4145+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[112,4145+22]..[112,4145+23])
                    Ptyp_constr "t" (stdlib/set.mli[112,4145+22]..[112,4145+23])
                    []
                  core_type (stdlib/set.mli[112,4145+27]..[112,4145+30])
                    Ptyp_constr "int" (stdlib/set.mli[112,4145+27]..[112,4145+30])
                    []
              []
          signature_item (stdlib/set.mli[116,4285+4]..[116,4285+29])
            Psig_value
            value_description "equal" (stdlib/set.mli[116,4285+8]..[116,4285+13]) (stdlib/set.mli[116,4285+4]..[116,4285+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[117,4315+4]..[118,4378+49])
                    Pstr_eval
                    expression (stdlib/set.mli[117,4315+4]..[118,4378+49])
                      Pexp_constant PConst_string(" [equal s1 s2] tests whether the sets [s1] and [s2] are\n       equal, that is, contain equal elements. ",(stdlib/set.mli[117,4315+4]..[118,4378+49]),None)
                ]
              core_type (stdlib/set.mli[116,4285+15]..[116,4285+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[116,4285+15]..[116,4285+16])
                  Ptyp_constr "t" (stdlib/set.mli[116,4285+15]..[116,4285+16])
                  []
                core_type (stdlib/set.mli[116,4285+20]..[116,4285+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[116,4285+20]..[116,4285+21])
                    Ptyp_constr "t" (stdlib/set.mli[116,4285+20]..[116,4285+21])
                    []
                  core_type (stdlib/set.mli[116,4285+25]..[116,4285+29])
                    Ptyp_constr "bool" (stdlib/set.mli[116,4285+25]..[116,4285+29])
                    []
              []
          signature_item (stdlib/set.mli[120,4429+4]..[120,4429+30])
            Psig_value
            value_description "subset" (stdlib/set.mli[120,4429+8]..[120,4429+14]) (stdlib/set.mli[120,4429+4]..[120,4429+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[121,4460+4]..[122,4525+23])
                    Pstr_eval
                    expression (stdlib/set.mli[121,4460+4]..[122,4525+23])
                      Pexp_constant PConst_string(" [subset s1 s2] tests whether the set [s1] is a subset of\n       the set [s2]. ",(stdlib/set.mli[121,4460+4]..[122,4525+23]),None)
                ]
              core_type (stdlib/set.mli[120,4429+16]..[120,4429+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[120,4429+16]..[120,4429+17])
                  Ptyp_constr "t" (stdlib/set.mli[120,4429+16]..[120,4429+17])
                  []
                core_type (stdlib/set.mli[120,4429+21]..[120,4429+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[120,4429+21]..[120,4429+22])
                    Ptyp_constr "t" (stdlib/set.mli[120,4429+21]..[120,4429+22])
                    []
                  core_type (stdlib/set.mli[120,4429+26]..[120,4429+30])
                    Ptyp_constr "bool" (stdlib/set.mli[120,4429+26]..[120,4429+30])
                    []
              []
          signature_item (stdlib/set.mli[124,4550+4]..[124,4550+40])
            Psig_value
            value_description "iter" (stdlib/set.mli[124,4550+8]..[124,4550+12]) (stdlib/set.mli[124,4550+4]..[124,4550+40])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[125,4591+4]..[127,4722+69])
                    Pstr_eval
                    expression (stdlib/set.mli[125,4591+4]..[127,4722+69])
                      Pexp_constant PConst_string(" [iter f s] applies [f] in turn to all elements of [s].\n       The elements of [s] are presented to [f] in increasing order\n       with respect to the ordering over the type of the elements. ",(stdlib/set.mli[125,4591+4]..[127,4722+69]),None)
                ]
              core_type (stdlib/set.mli[124,4550+14]..[124,4550+40])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[124,4550+15]..[124,4550+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[124,4550+15]..[124,4550+18])
                    Ptyp_constr "elt" (stdlib/set.mli[124,4550+15]..[124,4550+18])
                    []
                  core_type (stdlib/set.mli[124,4550+22]..[124,4550+26])
                    Ptyp_constr "unit" (stdlib/set.mli[124,4550+22]..[124,4550+26])
                    []
                core_type (stdlib/set.mli[124,4550+31]..[124,4550+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[124,4550+31]..[124,4550+32])
                    Ptyp_constr "t" (stdlib/set.mli[124,4550+31]..[124,4550+32])
                    []
                  core_type (stdlib/set.mli[124,4550+36]..[124,4550+40])
                    Ptyp_constr "unit" (stdlib/set.mli[124,4550+36]..[124,4550+40])
                    []
              []
          signature_item (stdlib/set.mli[129,4793+4]..[129,4793+35])
            Psig_value
            value_description "map" (stdlib/set.mli[129,4793+8]..[129,4793+11]) (stdlib/set.mli[129,4793+4]..[129,4793+35])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[130,4829+4]..[139,5276+23])
                    Pstr_eval
                    expression (stdlib/set.mli[130,4829+4]..[139,5276+23])
                      Pexp_constant PConst_string(" [map f s] is the set whose elements are [f a0],[f a1]... [f\n        aN], where [a0],[a1]...[aN] are the elements of [s].\n\n       The elements are passed to [f] in increasing order\n       with respect to the ordering over the type of the elements.\n\n       If no element of [s] is changed by [f], [s] is returned\n       unchanged. (If each output of [f] is physically equal to its\n       input, the returned set is physically equal to [s].)\n       @since 4.04.0 ",(stdlib/set.mli[130,4829+4]..[139,5276+23]),None)
                ]
              core_type (stdlib/set.mli[129,4793+13]..[129,4793+35])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[129,4793+14]..[129,4793+24])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[129,4793+14]..[129,4793+17])
                    Ptyp_constr "elt" (stdlib/set.mli[129,4793+14]..[129,4793+17])
                    []
                  core_type (stdlib/set.mli[129,4793+21]..[129,4793+24])
                    Ptyp_constr "elt" (stdlib/set.mli[129,4793+21]..[129,4793+24])
                    []
                core_type (stdlib/set.mli[129,4793+29]..[129,4793+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[129,4793+29]..[129,4793+30])
                    Ptyp_constr "t" (stdlib/set.mli[129,4793+29]..[129,4793+30])
                    []
                  core_type (stdlib/set.mli[129,4793+34]..[129,4793+35])
                    Ptyp_constr "t" (stdlib/set.mli[129,4793+34]..[129,4793+35])
                    []
              []
          signature_item (stdlib/set.mli[141,5301+4]..[141,5301+48])
            Psig_value
            value_description "fold" (stdlib/set.mli[141,5301+8]..[141,5301+12]) (stdlib/set.mli[141,5301+4]..[141,5301+48])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[142,5350+4]..[143,5419+73])
                    Pstr_eval
                    expression (stdlib/set.mli[142,5350+4]..[143,5419+73])
                      Pexp_constant PConst_string(" [fold f s init] computes [(f xN ... (f x2 (f x1 init))...)],\n       where [x1 ... xN] are the elements of [s], in increasing order. ",(stdlib/set.mli[142,5350+4]..[143,5419+73]),None)
                ]
              core_type (stdlib/set.mli[141,5301+14]..[141,5301+48])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[141,5301+15]..[141,5301+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[141,5301+15]..[141,5301+18])
                    Ptyp_constr "elt" (stdlib/set.mli[141,5301+15]..[141,5301+18])
                    []
                  core_type (stdlib/set.mli[141,5301+22]..[141,5301+30])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/set.mli[141,5301+22]..[141,5301+24])
                      Ptyp_var a
                    core_type (stdlib/set.mli[141,5301+28]..[141,5301+30])
                      Ptyp_var a
                core_type (stdlib/set.mli[141,5301+35]..[141,5301+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[141,5301+35]..[141,5301+36])
                    Ptyp_constr "t" (stdlib/set.mli[141,5301+35]..[141,5301+36])
                    []
                  core_type (stdlib/set.mli[141,5301+40]..[141,5301+48])
                    Ptyp_arrow
                    Nolabel
                    core_type (stdlib/set.mli[141,5301+40]..[141,5301+42])
                      Ptyp_var a
                    core_type (stdlib/set.mli[141,5301+46]..[141,5301+48])
                      Ptyp_var a
              []
          signature_item (stdlib/set.mli[145,5494+4]..[145,5494+43])
            Psig_value
            value_description "for_all" (stdlib/set.mli[145,5494+8]..[145,5494+15]) (stdlib/set.mli[145,5494+4]..[145,5494+43])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[146,5538+4]..[147,5594+36])
                    Pstr_eval
                    expression (stdlib/set.mli[146,5538+4]..[147,5594+36])
                      Pexp_constant PConst_string(" [for_all f s] checks if all elements of the set\n       satisfy the predicate [f]. ",(stdlib/set.mli[146,5538+4]..[147,5594+36]),None)
                ]
              core_type (stdlib/set.mli[145,5494+17]..[145,5494+43])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[145,5494+18]..[145,5494+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[145,5494+18]..[145,5494+21])
                    Ptyp_constr "elt" (stdlib/set.mli[145,5494+18]..[145,5494+21])
                    []
                  core_type (stdlib/set.mli[145,5494+25]..[145,5494+29])
                    Ptyp_constr "bool" (stdlib/set.mli[145,5494+25]..[145,5494+29])
                    []
                core_type (stdlib/set.mli[145,5494+34]..[145,5494+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[145,5494+34]..[145,5494+35])
                    Ptyp_constr "t" (stdlib/set.mli[145,5494+34]..[145,5494+35])
                    []
                  core_type (stdlib/set.mli[145,5494+39]..[145,5494+43])
                    Ptyp_constr "bool" (stdlib/set.mli[145,5494+39]..[145,5494+43])
                    []
              []
          signature_item (stdlib/set.mli[149,5632+4]..[149,5632+42])
            Psig_value
            value_description "exists" (stdlib/set.mli[149,5632+8]..[149,5632+14]) (stdlib/set.mli[149,5632+4]..[149,5632+42])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[150,5675+4]..[151,5730+46])
                    Pstr_eval
                    expression (stdlib/set.mli[150,5675+4]..[151,5730+46])
                      Pexp_constant PConst_string(" [exists f s] checks if at least one element of\n       the set satisfies the predicate [f]. ",(stdlib/set.mli[150,5675+4]..[151,5730+46]),None)
                ]
              core_type (stdlib/set.mli[149,5632+16]..[149,5632+42])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[149,5632+17]..[149,5632+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[149,5632+17]..[149,5632+20])
                    Ptyp_constr "elt" (stdlib/set.mli[149,5632+17]..[149,5632+20])
                    []
                  core_type (stdlib/set.mli[149,5632+24]..[149,5632+28])
                    Ptyp_constr "bool" (stdlib/set.mli[149,5632+24]..[149,5632+28])
                    []
                core_type (stdlib/set.mli[149,5632+33]..[149,5632+42])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[149,5632+33]..[149,5632+34])
                    Ptyp_constr "t" (stdlib/set.mli[149,5632+33]..[149,5632+34])
                    []
                  core_type (stdlib/set.mli[149,5632+38]..[149,5632+42])
                    Ptyp_constr "bool" (stdlib/set.mli[149,5632+38]..[149,5632+42])
                    []
              []
          signature_item (stdlib/set.mli[153,5778+4]..[153,5778+39])
            Psig_value
            value_description "filter" (stdlib/set.mli[153,5778+8]..[153,5778+14]) (stdlib/set.mli[153,5778+4]..[153,5778+39])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[154,5818+4]..[158,6054+56])
                    Pstr_eval
                    expression (stdlib/set.mli[154,5818+4]..[158,6054+56])
                      Pexp_constant PConst_string(" [filter f s] returns the set of all elements in [s]\n       that satisfy predicate [f]. If [f] satisfies every element in [s],\n       [s] is returned unchanged (the result of the function is then\n       physically equal to [s]).\n       @before 4.03 Physical equality was not ensured.",(stdlib/set.mli[154,5818+4]..[158,6054+56]),None)
                ]
              core_type (stdlib/set.mli[153,5778+16]..[153,5778+39])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[153,5778+17]..[153,5778+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[153,5778+17]..[153,5778+20])
                    Ptyp_constr "elt" (stdlib/set.mli[153,5778+17]..[153,5778+20])
                    []
                  core_type (stdlib/set.mli[153,5778+24]..[153,5778+28])
                    Ptyp_constr "bool" (stdlib/set.mli[153,5778+24]..[153,5778+28])
                    []
                core_type (stdlib/set.mli[153,5778+33]..[153,5778+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[153,5778+33]..[153,5778+34])
                    Ptyp_constr "t" (stdlib/set.mli[153,5778+33]..[153,5778+34])
                    []
                  core_type (stdlib/set.mli[153,5778+38]..[153,5778+39])
                    Ptyp_constr "t" (stdlib/set.mli[153,5778+38]..[153,5778+39])
                    []
              []
          signature_item (stdlib/set.mli[160,6112+4]..[160,6112+49])
            Psig_value
            value_description "filter_map" (stdlib/set.mli[160,6112+8]..[160,6112+18]) (stdlib/set.mli[160,6112+4]..[160,6112+49])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[161,6162+4]..[174,6667+7])
                    Pstr_eval
                    expression (stdlib/set.mli[161,6162+4]..[174,6667+7])
                      Pexp_constant PConst_string(" [filter_map f s] returns the set of all [v] such that\n        [f x = Some v] for some element [x] of [s].\n\n       For example,\n       {[filter_map (fun n -> if n mod 2 = 0 then Some (n / 2) else None) s]}\n       is the set of halves of the even elements of [s].\n\n       If no element of [s] is changed or dropped by [f] (if\n       [f x = Some x] for each element [x]), then\n       [s] is returned unchanged: the result of the function\n       is then physically equal to [s].\n\n       @since 4.11.0\n     ",(stdlib/set.mli[161,6162+4]..[174,6667+7]),None)
                ]
              core_type (stdlib/set.mli[160,6112+20]..[160,6112+49])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[160,6112+21]..[160,6112+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[160,6112+21]..[160,6112+24])
                    Ptyp_constr "elt" (stdlib/set.mli[160,6112+21]..[160,6112+24])
                    []
                  core_type (stdlib/set.mli[160,6112+28]..[160,6112+38])
                    Ptyp_constr "option" (stdlib/set.mli[160,6112+32]..[160,6112+38])
                    [
                      core_type (stdlib/set.mli[160,6112+28]..[160,6112+31])
                        Ptyp_constr "elt" (stdlib/set.mli[160,6112+28]..[160,6112+31])
                        []
                    ]
                core_type (stdlib/set.mli[160,6112+43]..[160,6112+49])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[160,6112+43]..[160,6112+44])
                    Ptyp_constr "t" (stdlib/set.mli[160,6112+43]..[160,6112+44])
                    []
                  core_type (stdlib/set.mli[160,6112+48]..[160,6112+49])
                    Ptyp_constr "t" (stdlib/set.mli[160,6112+48]..[160,6112+49])
                    []
              []
          signature_item (stdlib/set.mli[176,6676+4]..[176,6676+46])
            Psig_value
            value_description "partition" (stdlib/set.mli[176,6676+8]..[176,6676+17]) (stdlib/set.mli[176,6676+4]..[176,6676+46])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[177,6723+4]..[180,6920+38])
                    Pstr_eval
                    expression (stdlib/set.mli[177,6723+4]..[180,6920+38])
                      Pexp_constant PConst_string(" [partition f s] returns a pair of sets [(s1, s2)], where\n       [s1] is the set of all the elements of [s] that satisfy the\n       predicate [f], and [s2] is the set of all the elements of\n       [s] that do not satisfy [f]. ",(stdlib/set.mli[177,6723+4]..[180,6920+38]),None)
                ]
              core_type (stdlib/set.mli[176,6676+19]..[176,6676+46])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[176,6676+20]..[176,6676+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[176,6676+20]..[176,6676+23])
                    Ptyp_constr "elt" (stdlib/set.mli[176,6676+20]..[176,6676+23])
                    []
                  core_type (stdlib/set.mli[176,6676+27]..[176,6676+31])
                    Ptyp_constr "bool" (stdlib/set.mli[176,6676+27]..[176,6676+31])
                    []
                core_type (stdlib/set.mli[176,6676+36]..[176,6676+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[176,6676+36]..[176,6676+37])
                    Ptyp_constr "t" (stdlib/set.mli[176,6676+36]..[176,6676+37])
                    []
                  core_type (stdlib/set.mli[176,6676+41]..[176,6676+46])
                    Ptyp_tuple
                    [
                      core_type (stdlib/set.mli[176,6676+41]..[176,6676+42])
                        Ptyp_constr "t" (stdlib/set.mli[176,6676+41]..[176,6676+42])
                        []
                      core_type (stdlib/set.mli[176,6676+45]..[176,6676+46])
                        Ptyp_constr "t" (stdlib/set.mli[176,6676+45]..[176,6676+46])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[182,6960+4]..[182,6960+26])
            Psig_value
            value_description "cardinal" (stdlib/set.mli[182,6960+8]..[182,6960+16]) (stdlib/set.mli[182,6960+4]..[182,6960+26])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[183,6987+4]..[183,6987+50])
                    Pstr_eval
                    expression (stdlib/set.mli[183,6987+4]..[183,6987+50])
                      Pexp_constant PConst_string(" Return the number of elements of a set. ",(stdlib/set.mli[183,6987+4]..[183,6987+50]),None)
                ]
              core_type (stdlib/set.mli[182,6960+18]..[182,6960+26])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[182,6960+18]..[182,6960+19])
                  Ptyp_constr "t" (stdlib/set.mli[182,6960+18]..[182,6960+19])
                  []
                core_type (stdlib/set.mli[182,6960+23]..[182,6960+26])
                  Ptyp_constr "int" (stdlib/set.mli[182,6960+23]..[182,6960+26])
                  []
              []
          signature_item (stdlib/set.mli[185,7039+4]..[185,7039+31])
            Psig_value
            value_description "elements" (stdlib/set.mli[185,7039+8]..[185,7039+16]) (stdlib/set.mli[185,7039+4]..[185,7039+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[186,7071+4]..[189,7263+27])
                    Pstr_eval
                    expression (stdlib/set.mli[186,7071+4]..[189,7263+27])
                      Pexp_constant PConst_string(" Return the list of all elements of the given set.\n       The returned list is sorted in increasing order with respect\n       to the ordering [Ord.compare], where [Ord] is the argument\n       given to {!Make}. ",(stdlib/set.mli[186,7071+4]..[189,7263+27]),None)
                ]
              core_type (stdlib/set.mli[185,7039+18]..[185,7039+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[185,7039+18]..[185,7039+19])
                  Ptyp_constr "t" (stdlib/set.mli[185,7039+18]..[185,7039+19])
                  []
                core_type (stdlib/set.mli[185,7039+23]..[185,7039+31])
                  Ptyp_constr "list" (stdlib/set.mli[185,7039+27]..[185,7039+31])
                  [
                    core_type (stdlib/set.mli[185,7039+23]..[185,7039+26])
                      Ptyp_constr "elt" (stdlib/set.mli[185,7039+23]..[185,7039+26])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[191,7292+4]..[191,7292+25])
            Psig_value
            value_description "min_elt" (stdlib/set.mli[191,7292+8]..[191,7292+15]) (stdlib/set.mli[191,7292+4]..[191,7292+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[192,7318+4]..[194,7433+42])
                    Pstr_eval
                    expression (stdlib/set.mli[192,7318+4]..[194,7433+42])
                      Pexp_constant PConst_string(" Return the smallest element of the given set\n       (with respect to the [Ord.compare] ordering), or raise\n       [Not_found] if the set is empty. ",(stdlib/set.mli[192,7318+4]..[194,7433+42]),None)
                ]
              core_type (stdlib/set.mli[191,7292+17]..[191,7292+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[191,7292+17]..[191,7292+18])
                  Ptyp_constr "t" (stdlib/set.mli[191,7292+17]..[191,7292+18])
                  []
                core_type (stdlib/set.mli[191,7292+22]..[191,7292+25])
                  Ptyp_constr "elt" (stdlib/set.mli[191,7292+22]..[191,7292+25])
                  []
              []
          signature_item (stdlib/set.mli[196,7477+4]..[196,7477+36])
            Psig_value
            value_description "min_elt_opt" (stdlib/set.mli[196,7477+8]..[196,7477+19]) (stdlib/set.mli[196,7477+4]..[196,7477+36])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[197,7514+4]..[201,7678+6])
                    Pstr_eval
                    expression (stdlib/set.mli[197,7514+4]..[201,7678+6])
                      Pexp_constant PConst_string(" Return the smallest element of the given set\n       (with respect to the [Ord.compare] ordering), or [None]\n       if the set is empty.\n        @since 4.05\n    ",(stdlib/set.mli[197,7514+4]..[201,7678+6]),None)
                ]
              core_type (stdlib/set.mli[196,7477+21]..[196,7477+36])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[196,7477+21]..[196,7477+22])
                  Ptyp_constr "t" (stdlib/set.mli[196,7477+21]..[196,7477+22])
                  []
                core_type (stdlib/set.mli[196,7477+26]..[196,7477+36])
                  Ptyp_constr "option" (stdlib/set.mli[196,7477+30]..[196,7477+36])
                  [
                    core_type (stdlib/set.mli[196,7477+26]..[196,7477+29])
                      Ptyp_constr "elt" (stdlib/set.mli[196,7477+26]..[196,7477+29])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[203,7686+4]..[203,7686+25])
            Psig_value
            value_description "max_elt" (stdlib/set.mli[203,7686+8]..[203,7686+15]) (stdlib/set.mli[203,7686+4]..[203,7686+25])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[204,7712+4]..[205,7781+20])
                    Pstr_eval
                    expression (stdlib/set.mli[204,7712+4]..[205,7781+20])
                      Pexp_constant PConst_string(" Same as {!S.min_elt}, but returns the largest element of the\n       given set. ",(stdlib/set.mli[204,7712+4]..[205,7781+20]),None)
                ]
              core_type (stdlib/set.mli[203,7686+17]..[203,7686+25])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[203,7686+17]..[203,7686+18])
                  Ptyp_constr "t" (stdlib/set.mli[203,7686+17]..[203,7686+18])
                  []
                core_type (stdlib/set.mli[203,7686+22]..[203,7686+25])
                  Ptyp_constr "elt" (stdlib/set.mli[203,7686+22]..[203,7686+25])
                  []
              []
          signature_item (stdlib/set.mli[207,7803+4]..[207,7803+36])
            Psig_value
            value_description "max_elt_opt" (stdlib/set.mli[207,7803+8]..[207,7803+19]) (stdlib/set.mli[207,7803+4]..[207,7803+36])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[208,7840+4]..[211,7952+6])
                    Pstr_eval
                    expression (stdlib/set.mli[208,7840+4]..[211,7952+6])
                      Pexp_constant PConst_string(" Same as {!S.min_elt_opt}, but returns the largest element of the\n        given set.\n        @since 4.05\n    ",(stdlib/set.mli[208,7840+4]..[211,7952+6]),None)
                ]
              core_type (stdlib/set.mli[207,7803+21]..[207,7803+36])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[207,7803+21]..[207,7803+22])
                  Ptyp_constr "t" (stdlib/set.mli[207,7803+21]..[207,7803+22])
                  []
                core_type (stdlib/set.mli[207,7803+26]..[207,7803+36])
                  Ptyp_constr "option" (stdlib/set.mli[207,7803+30]..[207,7803+36])
                  [
                    core_type (stdlib/set.mli[207,7803+26]..[207,7803+29])
                      Ptyp_constr "elt" (stdlib/set.mli[207,7803+26]..[207,7803+29])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[213,7960+4]..[213,7960+24])
            Psig_value
            value_description "choose" (stdlib/set.mli[213,7960+8]..[213,7960+14]) (stdlib/set.mli[213,7960+4]..[213,7960+24])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[214,7985+4]..[216,8119+59])
                    Pstr_eval
                    expression (stdlib/set.mli[214,7985+4]..[216,8119+59])
                      Pexp_constant PConst_string(" Return one element of the given set, or raise [Not_found] if\n       the set is empty. Which element is chosen is unspecified,\n       but equal elements will be chosen for equal sets. ",(stdlib/set.mli[214,7985+4]..[216,8119+59]),None)
                ]
              core_type (stdlib/set.mli[213,7960+16]..[213,7960+24])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[213,7960+16]..[213,7960+17])
                  Ptyp_constr "t" (stdlib/set.mli[213,7960+16]..[213,7960+17])
                  []
                core_type (stdlib/set.mli[213,7960+21]..[213,7960+24])
                  Ptyp_constr "elt" (stdlib/set.mli[213,7960+21]..[213,7960+24])
                  []
              []
          signature_item (stdlib/set.mli[218,8180+4]..[218,8180+35])
            Psig_value
            value_description "choose_opt" (stdlib/set.mli[218,8180+8]..[218,8180+18]) (stdlib/set.mli[218,8180+4]..[218,8180+35])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[219,8216+4]..[223,8418+6])
                    Pstr_eval
                    expression (stdlib/set.mli[219,8216+4]..[223,8418+6])
                      Pexp_constant PConst_string(" Return one element of the given set, or [None] if\n        the set is empty. Which element is chosen is unspecified,\n        but equal elements will be chosen for equal sets.\n        @since 4.05\n    ",(stdlib/set.mli[219,8216+4]..[223,8418+6]),None)
                ]
              core_type (stdlib/set.mli[218,8180+20]..[218,8180+35])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[218,8180+20]..[218,8180+21])
                  Ptyp_constr "t" (stdlib/set.mli[218,8180+20]..[218,8180+21])
                  []
                core_type (stdlib/set.mli[218,8180+25]..[218,8180+35])
                  Ptyp_constr "option" (stdlib/set.mli[218,8180+29]..[218,8180+35])
                  [
                    core_type (stdlib/set.mli[218,8180+25]..[218,8180+28])
                      Ptyp_constr "elt" (stdlib/set.mli[218,8180+25]..[218,8180+28])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[225,8426+4]..[225,8426+39])
            Psig_value
            value_description "split" (stdlib/set.mli[225,8426+8]..[225,8426+13]) (stdlib/set.mli[225,8426+4]..[225,8426+39])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[226,8466+4]..[232,8777+63])
                    Pstr_eval
                    expression (stdlib/set.mli[226,8466+4]..[232,8777+63])
                      Pexp_constant PConst_string(" [split x s] returns a triple [(l, present, r)], where\n          [l] is the set of elements of [s] that are\n          strictly less than [x];\n          [r] is the set of elements of [s] that are\n          strictly greater than [x];\n          [present] is [false] if [s] contains no element equal to [x],\n          or [true] if [s] contains an element equal to [x]. ",(stdlib/set.mli[226,8466+4]..[232,8777+63]),None)
                ]
              core_type (stdlib/set.mli[225,8426+15]..[225,8426+39])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[225,8426+15]..[225,8426+18])
                  Ptyp_constr "elt" (stdlib/set.mli[225,8426+15]..[225,8426+18])
                  []
                core_type (stdlib/set.mli[225,8426+22]..[225,8426+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[225,8426+22]..[225,8426+23])
                    Ptyp_constr "t" (stdlib/set.mli[225,8426+22]..[225,8426+23])
                    []
                  core_type (stdlib/set.mli[225,8426+27]..[225,8426+39])
                    Ptyp_tuple
                    [
                      core_type (stdlib/set.mli[225,8426+27]..[225,8426+28])
                        Ptyp_constr "t" (stdlib/set.mli[225,8426+27]..[225,8426+28])
                        []
                      core_type (stdlib/set.mli[225,8426+31]..[225,8426+35])
                        Ptyp_constr "bool" (stdlib/set.mli[225,8426+31]..[225,8426+35])
                        []
                      core_type (stdlib/set.mli[225,8426+38]..[225,8426+39])
                        Ptyp_constr "t" (stdlib/set.mli[225,8426+38]..[225,8426+39])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[234,8842+4]..[234,8842+29])
            Psig_value
            value_description "find" (stdlib/set.mli[234,8842+8]..[234,8842+12]) (stdlib/set.mli[234,8842+4]..[234,8842+29])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[235,8872+4]..[238,9025+24])
                    Pstr_eval
                    expression (stdlib/set.mli[235,8872+4]..[238,9025+24])
                      Pexp_constant PConst_string(" [find x s] returns the element of [s] equal to [x] (according\n        to [Ord.compare]), or raise [Not_found] if no such element\n        exists.\n        @since 4.01.0 ",(stdlib/set.mli[235,8872+4]..[238,9025+24]),None)
                ]
              core_type (stdlib/set.mli[234,8842+14]..[234,8842+29])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[234,8842+14]..[234,8842+17])
                  Ptyp_constr "elt" (stdlib/set.mli[234,8842+14]..[234,8842+17])
                  []
                core_type (stdlib/set.mli[234,8842+21]..[234,8842+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[234,8842+21]..[234,8842+22])
                    Ptyp_constr "t" (stdlib/set.mli[234,8842+21]..[234,8842+22])
                    []
                  core_type (stdlib/set.mli[234,8842+26]..[234,8842+29])
                    Ptyp_constr "elt" (stdlib/set.mli[234,8842+26]..[234,8842+29])
                    []
              []
          signature_item (stdlib/set.mli[240,9051+4]..[240,9051+40])
            Psig_value
            value_description "find_opt" (stdlib/set.mli[240,9051+8]..[240,9051+16]) (stdlib/set.mli[240,9051+4]..[240,9051+40])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[241,9092+4]..[244,9238+22])
                    Pstr_eval
                    expression (stdlib/set.mli[241,9092+4]..[244,9238+22])
                      Pexp_constant PConst_string(" [find_opt x s] returns the element of [s] equal to [x] (according\n        to [Ord.compare]), or [None] if no such element\n        exists.\n        @since 4.05 ",(stdlib/set.mli[241,9092+4]..[244,9238+22]),None)
                ]
              core_type (stdlib/set.mli[240,9051+18]..[240,9051+40])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[240,9051+18]..[240,9051+21])
                  Ptyp_constr "elt" (stdlib/set.mli[240,9051+18]..[240,9051+21])
                  []
                core_type (stdlib/set.mli[240,9051+25]..[240,9051+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[240,9051+25]..[240,9051+26])
                    Ptyp_constr "t" (stdlib/set.mli[240,9051+25]..[240,9051+26])
                    []
                  core_type (stdlib/set.mli[240,9051+30]..[240,9051+40])
                    Ptyp_constr "option" (stdlib/set.mli[240,9051+34]..[240,9051+40])
                    [
                      core_type (stdlib/set.mli[240,9051+30]..[240,9051+33])
                        Ptyp_constr "elt" (stdlib/set.mli[240,9051+30]..[240,9051+33])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[246,9262+4]..[246,9262+45])
            Psig_value
            value_description "find_first" (stdlib/set.mli[246,9262+8]..[246,9262+18]) (stdlib/set.mli[246,9262+4]..[246,9262+45])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[247,9308+4]..[257,9771+9])
                    Pstr_eval
                    expression (stdlib/set.mli[247,9308+4]..[257,9771+9])
                      Pexp_constant PConst_string(" [find_first f s], where [f] is a monotonically increasing function,\n       returns the lowest element [e] of [s] such that [f e],\n       or raises [Not_found] if no such element exists.\n\n       For example, [find_first (fun e -> Ord.compare e x >= 0) s] will return\n       the first element [e] of [s] where [Ord.compare e x >= 0] (intuitively:\n       [e >= x]), or raise [Not_found] if [x] is greater than any element of\n       [s].\n\n        @since 4.05\n       ",(stdlib/set.mli[247,9308+4]..[257,9771+9]),None)
                ]
              core_type (stdlib/set.mli[246,9262+20]..[246,9262+45])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[246,9262+21]..[246,9262+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[246,9262+21]..[246,9262+24])
                    Ptyp_constr "elt" (stdlib/set.mli[246,9262+21]..[246,9262+24])
                    []
                  core_type (stdlib/set.mli[246,9262+28]..[246,9262+32])
                    Ptyp_constr "bool" (stdlib/set.mli[246,9262+28]..[246,9262+32])
                    []
                core_type (stdlib/set.mli[246,9262+37]..[246,9262+45])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[246,9262+37]..[246,9262+38])
                    Ptyp_constr "t" (stdlib/set.mli[246,9262+37]..[246,9262+38])
                    []
                  core_type (stdlib/set.mli[246,9262+42]..[246,9262+45])
                    Ptyp_constr "elt" (stdlib/set.mli[246,9262+42]..[246,9262+45])
                    []
              []
          signature_item (stdlib/set.mli[259,9782+4]..[259,9782+56])
            Psig_value
            value_description "find_first_opt" (stdlib/set.mli[259,9782+8]..[259,9782+22]) (stdlib/set.mli[259,9782+4]..[259,9782+56])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[260,9839+4]..[264,10066+9])
                    Pstr_eval
                    expression (stdlib/set.mli[260,9839+4]..[264,10066+9])
                      Pexp_constant PConst_string(" [find_first_opt f s], where [f] is a monotonically increasing\n       function, returns an option containing the lowest element [e] of [s]\n       such that [f e], or [None] if no such element exists.\n        @since 4.05\n       ",(stdlib/set.mli[260,9839+4]..[264,10066+9]),None)
                ]
              core_type (stdlib/set.mli[259,9782+24]..[259,9782+56])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[259,9782+25]..[259,9782+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[259,9782+25]..[259,9782+28])
                    Ptyp_constr "elt" (stdlib/set.mli[259,9782+25]..[259,9782+28])
                    []
                  core_type (stdlib/set.mli[259,9782+32]..[259,9782+36])
                    Ptyp_constr "bool" (stdlib/set.mli[259,9782+32]..[259,9782+36])
                    []
                core_type (stdlib/set.mli[259,9782+41]..[259,9782+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[259,9782+41]..[259,9782+42])
                    Ptyp_constr "t" (stdlib/set.mli[259,9782+41]..[259,9782+42])
                    []
                  core_type (stdlib/set.mli[259,9782+46]..[259,9782+56])
                    Ptyp_constr "option" (stdlib/set.mli[259,9782+50]..[259,9782+56])
                    [
                      core_type (stdlib/set.mli[259,9782+46]..[259,9782+49])
                        Ptyp_constr "elt" (stdlib/set.mli[259,9782+46]..[259,9782+49])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[266,10077+4]..[266,10077+44])
            Psig_value
            value_description "find_last" (stdlib/set.mli[266,10077+8]..[266,10077+17]) (stdlib/set.mli[266,10077+4]..[266,10077+44])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[267,10122+4]..[271,10336+9])
                    Pstr_eval
                    expression (stdlib/set.mli[267,10122+4]..[271,10336+9])
                      Pexp_constant PConst_string(" [find_last f s], where [f] is a monotonically decreasing function,\n       returns the highest element [e] of [s] such that [f e],\n       or raises [Not_found] if no such element exists.\n        @since 4.05\n       ",(stdlib/set.mli[267,10122+4]..[271,10336+9]),None)
                ]
              core_type (stdlib/set.mli[266,10077+19]..[266,10077+44])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[266,10077+20]..[266,10077+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[266,10077+20]..[266,10077+23])
                    Ptyp_constr "elt" (stdlib/set.mli[266,10077+20]..[266,10077+23])
                    []
                  core_type (stdlib/set.mli[266,10077+27]..[266,10077+31])
                    Ptyp_constr "bool" (stdlib/set.mli[266,10077+27]..[266,10077+31])
                    []
                core_type (stdlib/set.mli[266,10077+36]..[266,10077+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[266,10077+36]..[266,10077+37])
                    Ptyp_constr "t" (stdlib/set.mli[266,10077+36]..[266,10077+37])
                    []
                  core_type (stdlib/set.mli[266,10077+41]..[266,10077+44])
                    Ptyp_constr "elt" (stdlib/set.mli[266,10077+41]..[266,10077+44])
                    []
              []
          signature_item (stdlib/set.mli[273,10347+4]..[273,10347+55])
            Psig_value
            value_description "find_last_opt" (stdlib/set.mli[273,10347+8]..[273,10347+21]) (stdlib/set.mli[273,10347+4]..[273,10347+55])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[274,10403+4]..[278,10630+9])
                    Pstr_eval
                    expression (stdlib/set.mli[274,10403+4]..[278,10630+9])
                      Pexp_constant PConst_string(" [find_last_opt f s], where [f] is a monotonically decreasing\n       function, returns an option containing the highest element [e] of [s]\n       such that [f e], or [None] if no such element exists.\n        @since 4.05\n       ",(stdlib/set.mli[274,10403+4]..[278,10630+9]),None)
                ]
              core_type (stdlib/set.mli[273,10347+23]..[273,10347+55])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[273,10347+24]..[273,10347+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[273,10347+24]..[273,10347+27])
                    Ptyp_constr "elt" (stdlib/set.mli[273,10347+24]..[273,10347+27])
                    []
                  core_type (stdlib/set.mli[273,10347+31]..[273,10347+35])
                    Ptyp_constr "bool" (stdlib/set.mli[273,10347+31]..[273,10347+35])
                    []
                core_type (stdlib/set.mli[273,10347+40]..[273,10347+55])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[273,10347+40]..[273,10347+41])
                    Ptyp_constr "t" (stdlib/set.mli[273,10347+40]..[273,10347+41])
                    []
                  core_type (stdlib/set.mli[273,10347+45]..[273,10347+55])
                    Ptyp_constr "option" (stdlib/set.mli[273,10347+49]..[273,10347+55])
                    [
                      core_type (stdlib/set.mli[273,10347+45]..[273,10347+48])
                        Ptyp_constr "elt" (stdlib/set.mli[273,10347+45]..[273,10347+48])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[280,10641+4]..[280,10641+30])
            Psig_value
            value_description "of_list" (stdlib/set.mli[280,10641+8]..[280,10641+15]) (stdlib/set.mli[280,10641+4]..[280,10641+30])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[281,10672+4]..[284,10868+24])
                    Pstr_eval
                    expression (stdlib/set.mli[281,10672+4]..[284,10868+24])
                      Pexp_constant PConst_string(" [of_list l] creates a set from a list of elements.\n        This is usually more efficient than folding [add] over the list,\n        except perhaps for lists with many duplicated elements.\n        @since 4.02.0 ",(stdlib/set.mli[281,10672+4]..[284,10868+24]),None)
                ]
              core_type (stdlib/set.mli[280,10641+17]..[280,10641+30])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[280,10641+17]..[280,10641+25])
                  Ptyp_constr "list" (stdlib/set.mli[280,10641+21]..[280,10641+25])
                  [
                    core_type (stdlib/set.mli[280,10641+17]..[280,10641+20])
                      Ptyp_constr "elt" (stdlib/set.mli[280,10641+17]..[280,10641+20])
                      []
                  ]
                core_type (stdlib/set.mli[280,10641+29]..[280,10641+30])
                  Ptyp_constr "t" (stdlib/set.mli[280,10641+29]..[280,10641+30])
                  []
              []
          signature_item (stdlib/set.mli[286,10894+4]..[286,10894+24])
            Psig_attribute "ocaml.text"
            [
              structure_item (stdlib/set.mli[286,10894+4]..[286,10894+24])
                Pstr_eval
                expression (stdlib/set.mli[286,10894+4]..[286,10894+24])
                  Pexp_constant PConst_string(" {1 Iterators} ",(stdlib/set.mli[286,10894+4]..[286,10894+24]),None)
            ]
          signature_item (stdlib/set.mli[288,10920+4]..[288,10920+43])
            Psig_value
            value_description "to_seq_from" (stdlib/set.mli[288,10920+8]..[288,10920+19]) (stdlib/set.mli[288,10920+4]..[288,10920+43])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[289,10964+4]..[291,11081+22])
                    Pstr_eval
                    expression (stdlib/set.mli[289,10964+4]..[291,11081+22])
                      Pexp_constant PConst_string(" [to_seq_from x s] iterates on a subset of the elements of [s]\n        in ascending order, from [x] or above.\n        @since 4.07 ",(stdlib/set.mli[289,10964+4]..[291,11081+22]),None)
                ]
              core_type (stdlib/set.mli[288,10920+22]..[288,10920+43])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[288,10920+22]..[288,10920+25])
                  Ptyp_constr "elt" (stdlib/set.mli[288,10920+22]..[288,10920+25])
                  []
                core_type (stdlib/set.mli[288,10920+29]..[288,10920+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[288,10920+29]..[288,10920+30])
                    Ptyp_constr "t" (stdlib/set.mli[288,10920+29]..[288,10920+30])
                    []
                  core_type (stdlib/set.mli[288,10920+34]..[288,10920+43])
                    Ptyp_constr "Seq.t" (stdlib/set.mli[288,10920+38]..[288,10920+43])
                    [
                      core_type (stdlib/set.mli[288,10920+34]..[288,10920+37])
                        Ptyp_constr "elt" (stdlib/set.mli[288,10920+34]..[288,10920+37])
                        []
                    ]
              []
          signature_item (stdlib/set.mli[293,11105+4]..[293,11105+31])
            Psig_value
            value_description "to_seq" (stdlib/set.mli[293,11105+8]..[293,11105+14]) (stdlib/set.mli[293,11105+4]..[293,11105+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[294,11137+4]..[295,11190+22])
                    Pstr_eval
                    expression (stdlib/set.mli[294,11137+4]..[295,11190+22])
                      Pexp_constant PConst_string(" Iterate on the whole set, in ascending order\n        @since 4.07 ",(stdlib/set.mli[294,11137+4]..[295,11190+22]),None)
                ]
              core_type (stdlib/set.mli[293,11105+17]..[293,11105+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[293,11105+17]..[293,11105+18])
                  Ptyp_constr "t" (stdlib/set.mli[293,11105+17]..[293,11105+18])
                  []
                core_type (stdlib/set.mli[293,11105+22]..[293,11105+31])
                  Ptyp_constr "Seq.t" (stdlib/set.mli[293,11105+26]..[293,11105+31])
                  [
                    core_type (stdlib/set.mli[293,11105+22]..[293,11105+25])
                      Ptyp_constr "elt" (stdlib/set.mli[293,11105+22]..[293,11105+25])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[297,11214+4]..[297,11214+35])
            Psig_value
            value_description "to_rev_seq" (stdlib/set.mli[297,11214+8]..[297,11214+18]) (stdlib/set.mli[297,11214+4]..[297,11214+35])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[298,11250+4]..[299,11304+22])
                    Pstr_eval
                    expression (stdlib/set.mli[298,11250+4]..[299,11304+22])
                      Pexp_constant PConst_string(" Iterate on the whole set, in descending order\n        @since 4.12 ",(stdlib/set.mli[298,11250+4]..[299,11304+22]),None)
                ]
              core_type (stdlib/set.mli[297,11214+21]..[297,11214+35])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[297,11214+21]..[297,11214+22])
                  Ptyp_constr "t" (stdlib/set.mli[297,11214+21]..[297,11214+22])
                  []
                core_type (stdlib/set.mli[297,11214+26]..[297,11214+35])
                  Ptyp_constr "Seq.t" (stdlib/set.mli[297,11214+30]..[297,11214+35])
                  [
                    core_type (stdlib/set.mli[297,11214+26]..[297,11214+29])
                      Ptyp_constr "elt" (stdlib/set.mli[297,11214+26]..[297,11214+29])
                      []
                  ]
              []
          signature_item (stdlib/set.mli[301,11328+4]..[301,11328+37])
            Psig_value
            value_description "add_seq" (stdlib/set.mli[301,11328+8]..[301,11328+15]) (stdlib/set.mli[301,11328+4]..[301,11328+37])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[302,11366+4]..[303,11419+22])
                    Pstr_eval
                    expression (stdlib/set.mli[302,11366+4]..[303,11419+22])
                      Pexp_constant PConst_string(" Add the given elements to the set, in order.\n        @since 4.07 ",(stdlib/set.mli[302,11366+4]..[303,11419+22]),None)
                ]
              core_type (stdlib/set.mli[301,11328+18]..[301,11328+37])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[301,11328+18]..[301,11328+27])
                  Ptyp_constr "Seq.t" (stdlib/set.mli[301,11328+22]..[301,11328+27])
                  [
                    core_type (stdlib/set.mli[301,11328+18]..[301,11328+21])
                      Ptyp_constr "elt" (stdlib/set.mli[301,11328+18]..[301,11328+21])
                      []
                  ]
                core_type (stdlib/set.mli[301,11328+31]..[301,11328+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (stdlib/set.mli[301,11328+31]..[301,11328+32])
                    Ptyp_constr "t" (stdlib/set.mli[301,11328+31]..[301,11328+32])
                    []
                  core_type (stdlib/set.mli[301,11328+36]..[301,11328+37])
                    Ptyp_constr "t" (stdlib/set.mli[301,11328+36]..[301,11328+37])
                    []
              []
          signature_item (stdlib/set.mli[305,11443+4]..[305,11443+31])
            Psig_value
            value_description "of_seq" (stdlib/set.mli[305,11443+8]..[305,11443+14]) (stdlib/set.mli[305,11443+4]..[305,11443+31])
              attribute "ocaml.doc"
                [
                  structure_item (stdlib/set.mli[306,11475+4]..[307,11519+22])
                    Pstr_eval
                    expression (stdlib/set.mli[306,11475+4]..[307,11519+22])
                      Pexp_constant PConst_string(" Build a set from the given bindings\n        @since 4.07 ",(stdlib/set.mli[306,11475+4]..[307,11519+22]),None)
                ]
              core_type (stdlib/set.mli[305,11443+17]..[305,11443+31])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/set.mli[305,11443+17]..[305,11443+26])
                  Ptyp_constr "Seq.t" (stdlib/set.mli[305,11443+21]..[305,11443+26])
                  [
                    core_type (stdlib/set.mli[305,11443+17]..[305,11443+20])
                      Ptyp_constr "elt" (stdlib/set.mli[305,11443+17]..[305,11443+20])
                      []
                  ]
                core_type (stdlib/set.mli[305,11443+30]..[305,11443+31])
                  Ptyp_constr "t" (stdlib/set.mli[305,11443+30]..[305,11443+31])
                  []
              []
        ]
  signature_item (stdlib/set.mli[311,11597+0]..[311,11597+57])
    Psig_module "Make" (stdlib/set.mli[311,11597+7]..[311,11597+11])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/set.mli[312,11655+0]..[313,11715+35])
            Pstr_eval
            expression (stdlib/set.mli[312,11655+0]..[313,11715+35])
              Pexp_constant PConst_string(" Functor building an implementation of the set structure\n   given a totally ordered type. ",(stdlib/set.mli[312,11655+0]..[313,11715+35]),None)
        ]
    module_type (stdlib/set.mli[311,11597+12]..[311,11597+57])
      Pmty_functor "Ord" (stdlib/set.mli[311,11597+13]..[311,11597+16])
      module_type (stdlib/set.mli[311,11597+19]..[311,11597+30])
        Pmty_ident "OrderedType" (stdlib/set.mli[311,11597+19]..[311,11597+30])
      module_type (stdlib/set.mli[311,11597+34]..[311,11597+57])
        Pmty_with
        module_type (stdlib/set.mli[311,11597+34]..[311,11597+35])
          Pmty_ident "S" (stdlib/set.mli[311,11597+34]..[311,11597+35])
        [
          Pwith_type "elt" (stdlib/set.mli[311,11597+46]..[311,11597+49])
            type_declaration "elt" (stdlib/set.mli[311,11597+46]..[311,11597+49]) (stdlib/set.mli[311,11597+41]..[311,11597+57])
              ptype_params =
                []
              ptype_cstrs =
                []
              ptype_kind =
                Ptype_abstract
              ptype_private = Public
              ptype_manifest =
                Some
                  core_type (stdlib/set.mli[311,11597+52]..[311,11597+57])
                    Ptyp_constr "Ord.t" (stdlib/set.mli[311,11597+52]..[311,11597+57])
                    []
        ]
]

