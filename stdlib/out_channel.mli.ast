[
  signature_item (stdlib/out_channel.mli[16,1079+0]..[18,1101+20])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/out_channel.mli[16,1079+0]..[18,1101+20])
        Pstr_eval
        expression (stdlib/out_channel.mli[16,1079+0]..[18,1101+20])
          Pexp_constant PConst_string(" Output channels.\n\n    @since 4.14.0 ",(stdlib/out_channel.mli[16,1079+0]..[18,1101+20]),None)
    ]
  signature_item (stdlib/out_channel.mli[20,1123+0]..[20,1123+20])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/out_channel.mli[20,1123+5]..[20,1123+6]) (stdlib/out_channel.mli[20,1123+0]..[20,1123+20])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/out_channel.mli[21,1144+0]..[21,1144+34])
              Pstr_eval
              expression (stdlib/out_channel.mli[21,1144+0]..[21,1144+34])
                Pexp_constant PConst_string(" The type of output channel. ",(stdlib/out_channel.mli[21,1144+0]..[21,1144+34]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/out_channel.mli[20,1123+9]..[20,1123+20])
              Ptyp_constr "out_channel" (stdlib/out_channel.mli[20,1123+9]..[20,1123+20])
              []
    ]
  signature_item (stdlib/out_channel.mli[23,1180+0]..[32,1730+17])
    Psig_type Rec
    [
      type_declaration "open_flag" (stdlib/out_channel.mli[23,1180+5]..[23,1180+14]) (stdlib/out_channel.mli[23,1180+0]..[32,1730+17])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/out_channel.mli[33,1785+0]..[33,1785+37])
              Pstr_eval
              expression (stdlib/out_channel.mli[33,1785+0]..[33,1785+37])
                Pexp_constant PConst_string(" Opening modes for {!open_gen}. ",(stdlib/out_channel.mli[33,1785+0]..[33,1785+37]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/out_channel.mli[24,1216+2]..[24,1216+15])
                "Open_rdonly" (stdlib/out_channel.mli[24,1216+4]..[24,1216+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[24,1216+21]..[24,1216+45])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[24,1216+21]..[24,1216+45])
                        Pexp_constant PConst_string(" open for reading. ",(stdlib/out_channel.mli[24,1216+21]..[24,1216+45]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[25,1262+2]..[25,1262+15])
                "Open_wronly" (stdlib/out_channel.mli[25,1262+4]..[25,1262+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[25,1262+21]..[25,1262+45])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[25,1262+21]..[25,1262+45])
                        Pexp_constant PConst_string(" open for writing. ",(stdlib/out_channel.mli[25,1262+21]..[25,1262+45]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[26,1308+2]..[26,1308+15])
                "Open_append" (stdlib/out_channel.mli[26,1308+4]..[26,1308+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[26,1308+21]..[26,1308+76])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[26,1308+21]..[26,1308+76])
                        Pexp_constant PConst_string(" open for appending: always write at end of file. ",(stdlib/out_channel.mli[26,1308+21]..[26,1308+76]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[27,1385+2]..[27,1385+14])
                "Open_creat" (stdlib/out_channel.mli[27,1385+4]..[27,1385+14])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[27,1385+21]..[27,1385+65])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[27,1385+21]..[27,1385+65])
                        Pexp_constant PConst_string(" create the file if it does not exist. ",(stdlib/out_channel.mli[27,1385+21]..[27,1385+65]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[28,1451+2]..[28,1451+14])
                "Open_trunc" (stdlib/out_channel.mli[28,1451+4]..[28,1451+14])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[28,1451+21]..[28,1451+64])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[28,1451+21]..[28,1451+64])
                        Pexp_constant PConst_string(" empty the file if it already exists. ",(stdlib/out_channel.mli[28,1451+21]..[28,1451+64]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[29,1516+2]..[29,1516+13])
                "Open_excl" (stdlib/out_channel.mli[29,1516+4]..[29,1516+13])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[29,1516+21]..[29,1516+75])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[29,1516+21]..[29,1516+75])
                        Pexp_constant PConst_string(" fail if Open_creat and the file already exists. ",(stdlib/out_channel.mli[29,1516+21]..[29,1516+75]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[30,1592+2]..[30,1592+15])
                "Open_binary" (stdlib/out_channel.mli[30,1592+4]..[30,1592+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[30,1592+21]..[30,1592+64])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[30,1592+21]..[30,1592+64])
                        Pexp_constant PConst_string(" open in binary mode (no conversion). ",(stdlib/out_channel.mli[30,1592+21]..[30,1592+64]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[31,1657+2]..[31,1657+13])
                "Open_text" (stdlib/out_channel.mli[31,1657+4]..[31,1657+13])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[31,1657+21]..[31,1657+72])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[31,1657+21]..[31,1657+72])
                        Pexp_constant PConst_string(" open in text mode (may perform conversions). ",(stdlib/out_channel.mli[31,1657+21]..[31,1657+72]),None)
                  ]
                []
                None
              (stdlib/out_channel.mli[32,1730+2]..[32,1730+17])
                "Open_nonblock" (stdlib/out_channel.mli[32,1730+4]..[32,1730+17])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/out_channel.mli[32,1730+21]..[32,1730+54])
                      Pstr_eval
                      expression (stdlib/out_channel.mli[32,1730+21]..[32,1730+54])
                        Pexp_constant PConst_string(" open in non-blocking mode. ",(stdlib/out_channel.mli[32,1730+21]..[32,1730+54]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/out_channel.mli[23,1180+17]..[23,1180+33])
              Ptyp_constr "Stdlib.open_flag" (stdlib/out_channel.mli[23,1180+17]..[23,1180+33])
              []
    ]
  signature_item (stdlib/out_channel.mli[35,1824+0]..[35,1824+14])
    Psig_value
    value_description "stdout" (stdlib/out_channel.mli[35,1824+4]..[35,1824+10]) (stdlib/out_channel.mli[35,1824+0]..[35,1824+14])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[36,1839+0]..[36,1839+43])
            Pstr_eval
            expression (stdlib/out_channel.mli[36,1839+0]..[36,1839+43])
              Pexp_constant PConst_string(" The standard output for the process. ",(stdlib/out_channel.mli[36,1839+0]..[36,1839+43]),None)
        ]
      core_type (stdlib/out_channel.mli[35,1824+13]..[35,1824+14])
        Ptyp_constr "t" (stdlib/out_channel.mli[35,1824+13]..[35,1824+14])
        []
      []
  signature_item (stdlib/out_channel.mli[38,1884+0]..[38,1884+14])
    Psig_value
    value_description "stderr" (stdlib/out_channel.mli[38,1884+4]..[38,1884+10]) (stdlib/out_channel.mli[38,1884+0]..[38,1884+14])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[39,1899+0]..[39,1899+49])
            Pstr_eval
            expression (stdlib/out_channel.mli[39,1899+0]..[39,1899+49])
              Pexp_constant PConst_string(" The standard error output for the process. ",(stdlib/out_channel.mli[39,1899+0]..[39,1899+49]),None)
        ]
      core_type (stdlib/out_channel.mli[38,1884+13]..[38,1884+14])
        Ptyp_constr "t" (stdlib/out_channel.mli[38,1884+13]..[38,1884+14])
        []
      []
  signature_item (stdlib/out_channel.mli[41,1950+0]..[41,1950+26])
    Psig_value
    value_description "open_bin" (stdlib/out_channel.mli[41,1950+4]..[41,1950+12]) (stdlib/out_channel.mli[41,1950+0]..[41,1950+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[42,1977+0]..[44,2135+80])
            Pstr_eval
            expression (stdlib/out_channel.mli[42,1977+0]..[44,2135+80])
              Pexp_constant PConst_string(" Open the named file for writing, and return a new output channel on that\n    file, positioned at the beginning of the file. The file is truncated to zero\n    length if it already exists. It is created if it does not already exists. ",(stdlib/out_channel.mli[42,1977+0]..[44,2135+80]),None)
        ]
      core_type (stdlib/out_channel.mli[41,1950+15]..[41,1950+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[41,1950+15]..[41,1950+21])
          Ptyp_constr "string" (stdlib/out_channel.mli[41,1950+15]..[41,1950+21])
          []
        core_type (stdlib/out_channel.mli[41,1950+25]..[41,1950+26])
          Ptyp_constr "t" (stdlib/out_channel.mli[41,1950+25]..[41,1950+26])
          []
      []
  signature_item (stdlib/out_channel.mli[46,2217+0]..[46,2217+27])
    Psig_value
    value_description "open_text" (stdlib/out_channel.mli[46,2217+4]..[46,2217+13]) (stdlib/out_channel.mli[46,2217+0]..[46,2217+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[47,2245+0]..[50,2477+19])
            Pstr_eval
            expression (stdlib/out_channel.mli[47,2245+0]..[50,2477+19])
              Pexp_constant PConst_string(" Same as {!open_bin}, but the file is opened in text mode, so that newline\n    translation takes place during writes. On operating systems that do not\n    distinguish between text mode and binary mode, this function behaves like\n    {!open_bin}. ",(stdlib/out_channel.mli[47,2245+0]..[50,2477+19]),None)
        ]
      core_type (stdlib/out_channel.mli[46,2217+16]..[46,2217+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[46,2217+16]..[46,2217+22])
          Ptyp_constr "string" (stdlib/out_channel.mli[46,2217+16]..[46,2217+22])
          []
        core_type (stdlib/out_channel.mli[46,2217+26]..[46,2217+27])
          Ptyp_constr "t" (stdlib/out_channel.mli[46,2217+26]..[46,2217+27])
          []
      []
  signature_item (stdlib/out_channel.mli[52,2498+0]..[52,2498+51])
    Psig_value
    value_description "open_gen" (stdlib/out_channel.mli[52,2498+4]..[52,2498+12]) (stdlib/out_channel.mli[52,2498+0]..[52,2498+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[53,2550+0]..[57,2852+16])
            Pstr_eval
            expression (stdlib/out_channel.mli[53,2550+0]..[57,2852+16])
              Pexp_constant PConst_string(" [open_gen mode perm filename] opens the named file for writing, as described\n    above. The extra argument [mode] specifies the opening mode. The extra\n    argument [perm] specifies the file permissions, in case the file must be\n    created.  {!open_text} and {!open_bin} are special cases of this\n    function. ",(stdlib/out_channel.mli[53,2550+0]..[57,2852+16]),None)
        ]
      core_type (stdlib/out_channel.mli[52,2498+15]..[52,2498+51])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[52,2498+15]..[52,2498+29])
          Ptyp_constr "list" (stdlib/out_channel.mli[52,2498+25]..[52,2498+29])
          [
            core_type (stdlib/out_channel.mli[52,2498+15]..[52,2498+24])
              Ptyp_constr "open_flag" (stdlib/out_channel.mli[52,2498+15]..[52,2498+24])
              []
          ]
        core_type (stdlib/out_channel.mli[52,2498+33]..[52,2498+51])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[52,2498+33]..[52,2498+36])
            Ptyp_constr "int" (stdlib/out_channel.mli[52,2498+33]..[52,2498+36])
            []
          core_type (stdlib/out_channel.mli[52,2498+40]..[52,2498+51])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/out_channel.mli[52,2498+40]..[52,2498+46])
              Ptyp_constr "string" (stdlib/out_channel.mli[52,2498+40]..[52,2498+46])
              []
            core_type (stdlib/out_channel.mli[52,2498+50]..[52,2498+51])
              Ptyp_constr "t" (stdlib/out_channel.mli[52,2498+50]..[52,2498+51])
              []
      []
  signature_item (stdlib/out_channel.mli[59,2870+0]..[59,2870+29])
    Psig_value
    value_description "seek" (stdlib/out_channel.mli[59,2870+4]..[59,2870+8]) (stdlib/out_channel.mli[59,2870+0]..[59,2870+29])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[60,2900+0]..[62,3055+66])
            Pstr_eval
            expression (stdlib/out_channel.mli[60,2900+0]..[62,3055+66])
              Pexp_constant PConst_string(" [seek chan pos] sets the current writing position to [pos] for channel\n    [chan]. This works only for regular files. On files of other kinds (such as\n    terminals, pipes and sockets), the behavior is unspecified. ",(stdlib/out_channel.mli[60,2900+0]..[62,3055+66]),None)
        ]
      core_type (stdlib/out_channel.mli[59,2870+11]..[59,2870+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[59,2870+11]..[59,2870+12])
          Ptyp_constr "t" (stdlib/out_channel.mli[59,2870+11]..[59,2870+12])
          []
        core_type (stdlib/out_channel.mli[59,2870+16]..[59,2870+29])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[59,2870+16]..[59,2870+21])
            Ptyp_constr "int64" (stdlib/out_channel.mli[59,2870+16]..[59,2870+21])
            []
          core_type (stdlib/out_channel.mli[59,2870+25]..[59,2870+29])
            Ptyp_constr "unit" (stdlib/out_channel.mli[59,2870+25]..[59,2870+29])
            []
      []
  signature_item (stdlib/out_channel.mli[64,3123+0]..[64,3123+20])
    Psig_value
    value_description "pos" (stdlib/out_channel.mli[64,3123+4]..[64,3123+7]) (stdlib/out_channel.mli[64,3123+0]..[64,3123+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[65,3144+0]..[72,3615+46])
            Pstr_eval
            expression (stdlib/out_channel.mli[65,3144+0]..[72,3615+46])
              Pexp_constant PConst_string(" Return the current writing position for the given channel.  Does not work on\n    channels opened with the [Open_append] flag (returns unspecified results).\n\n    For files opened in text mode under Windows, the returned position is\n    approximate (owing to end-of-line conversion); in particular, saving the\n    current position with {!pos}, then going back to this position using {!seek}\n    will not work.  For this programming idiom to work reliably and portably,\n    the file must be opened in binary mode. ",(stdlib/out_channel.mli[65,3144+0]..[72,3615+46]),None)
        ]
      core_type (stdlib/out_channel.mli[64,3123+10]..[64,3123+20])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[64,3123+10]..[64,3123+11])
          Ptyp_constr "t" (stdlib/out_channel.mli[64,3123+10]..[64,3123+11])
          []
        core_type (stdlib/out_channel.mli[64,3123+15]..[64,3123+20])
          Ptyp_constr "int64" (stdlib/out_channel.mli[64,3123+15]..[64,3123+20])
          []
      []
  signature_item (stdlib/out_channel.mli[74,3663+0]..[74,3663+23])
    Psig_value
    value_description "length" (stdlib/out_channel.mli[74,3663+4]..[74,3663+10]) (stdlib/out_channel.mli[74,3663+0]..[74,3663+23])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[75,3687+0]..[77,3842+47])
            Pstr_eval
            expression (stdlib/out_channel.mli[75,3687+0]..[77,3842+47])
              Pexp_constant PConst_string(" Return the size (number of characters) of the regular file on which the\n    given channel is opened.  If the channel is opened on a file that is not a\n    regular file, the result is meaningless. ",(stdlib/out_channel.mli[75,3687+0]..[77,3842+47]),None)
        ]
      core_type (stdlib/out_channel.mli[74,3663+13]..[74,3663+23])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[74,3663+13]..[74,3663+14])
          Ptyp_constr "t" (stdlib/out_channel.mli[74,3663+13]..[74,3663+14])
          []
        core_type (stdlib/out_channel.mli[74,3663+18]..[74,3663+23])
          Ptyp_constr "int64" (stdlib/out_channel.mli[74,3663+18]..[74,3663+23])
          []
      []
  signature_item (stdlib/out_channel.mli[79,3891+0]..[79,3891+21])
    Psig_value
    value_description "close" (stdlib/out_channel.mli[79,3891+4]..[79,3891+9]) (stdlib/out_channel.mli[79,3891+0]..[79,3891+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[80,3913+0]..[84,4227+70])
            Pstr_eval
            expression (stdlib/out_channel.mli[80,3913+0]..[84,4227+70])
              Pexp_constant PConst_string(" Close the given channel, flushing all buffered write operations.  Output\n    functions raise a [Sys_error] exception when they are applied to a closed\n    output channel, except {!close} and {!flush}, which do nothing when applied\n    to an already closed channel.  Note that {!close} may raise [Sys_error] if\n    the operating system signals an error when flushing or closing. ",(stdlib/out_channel.mli[80,3913+0]..[84,4227+70]),None)
        ]
      core_type (stdlib/out_channel.mli[79,3891+12]..[79,3891+21])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[79,3891+12]..[79,3891+13])
          Ptyp_constr "t" (stdlib/out_channel.mli[79,3891+12]..[79,3891+13])
          []
        core_type (stdlib/out_channel.mli[79,3891+17]..[79,3891+21])
          Ptyp_constr "unit" (stdlib/out_channel.mli[79,3891+17]..[79,3891+21])
          []
      []
  signature_item (stdlib/out_channel.mli[86,4299+0]..[86,4299+27])
    Psig_value
    value_description "close_noerr" (stdlib/out_channel.mli[86,4299+4]..[86,4299+15]) (stdlib/out_channel.mli[86,4299+0]..[86,4299+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[87,4327+0]..[87,4327+47])
            Pstr_eval
            expression (stdlib/out_channel.mli[87,4327+0]..[87,4327+47])
              Pexp_constant PConst_string(" Same as {!close}, but ignore all errors. ",(stdlib/out_channel.mli[87,4327+0]..[87,4327+47]),None)
        ]
      core_type (stdlib/out_channel.mli[86,4299+18]..[86,4299+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[86,4299+18]..[86,4299+19])
          Ptyp_constr "t" (stdlib/out_channel.mli[86,4299+18]..[86,4299+19])
          []
        core_type (stdlib/out_channel.mli[86,4299+23]..[86,4299+27])
          Ptyp_constr "unit" (stdlib/out_channel.mli[86,4299+23]..[86,4299+27])
          []
      []
  signature_item (stdlib/out_channel.mli[89,4376+0]..[89,4376+21])
    Psig_value
    value_description "flush" (stdlib/out_channel.mli[89,4376+4]..[89,4376+9]) (stdlib/out_channel.mli[89,4376+0]..[89,4376+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[90,4398+0]..[92,4556+69])
            Pstr_eval
            expression (stdlib/out_channel.mli[90,4398+0]..[92,4556+69])
              Pexp_constant PConst_string(" Flush the buffer associated with the given output channel, performing all\n    pending writes on that channel.  Interactive programs must be careful about\n    flushing standard output and standard error at the right time. ",(stdlib/out_channel.mli[90,4398+0]..[92,4556+69]),None)
        ]
      core_type (stdlib/out_channel.mli[89,4376+12]..[89,4376+21])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[89,4376+12]..[89,4376+13])
          Ptyp_constr "t" (stdlib/out_channel.mli[89,4376+12]..[89,4376+13])
          []
        core_type (stdlib/out_channel.mli[89,4376+17]..[89,4376+21])
          Ptyp_constr "unit" (stdlib/out_channel.mli[89,4376+17]..[89,4376+21])
          []
      []
  signature_item (stdlib/out_channel.mli[94,4627+0]..[94,4627+28])
    Psig_value
    value_description "flush_all" (stdlib/out_channel.mli[94,4627+4]..[94,4627+13]) (stdlib/out_channel.mli[94,4627+0]..[94,4627+28])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[95,4656+0]..[95,4656+53])
            Pstr_eval
            expression (stdlib/out_channel.mli[95,4656+0]..[95,4656+53])
              Pexp_constant PConst_string(" Flush all open output channels; ignore errors. ",(stdlib/out_channel.mli[95,4656+0]..[95,4656+53]),None)
        ]
      core_type (stdlib/out_channel.mli[94,4627+16]..[94,4627+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[94,4627+16]..[94,4627+20])
          Ptyp_constr "unit" (stdlib/out_channel.mli[94,4627+16]..[94,4627+20])
          []
        core_type (stdlib/out_channel.mli[94,4627+24]..[94,4627+28])
          Ptyp_constr "unit" (stdlib/out_channel.mli[94,4627+24]..[94,4627+28])
          []
      []
  signature_item (stdlib/out_channel.mli[97,4711+0]..[97,4711+35])
    Psig_value
    value_description "output_char" (stdlib/out_channel.mli[97,4711+4]..[97,4711+15]) (stdlib/out_channel.mli[97,4711+0]..[97,4711+35])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[98,4747+0]..[98,4747+55])
            Pstr_eval
            expression (stdlib/out_channel.mli[98,4747+0]..[98,4747+55])
              Pexp_constant PConst_string(" Write the character on the given output channel. ",(stdlib/out_channel.mli[98,4747+0]..[98,4747+55]),None)
        ]
      core_type (stdlib/out_channel.mli[97,4711+18]..[97,4711+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[97,4711+18]..[97,4711+19])
          Ptyp_constr "t" (stdlib/out_channel.mli[97,4711+18]..[97,4711+19])
          []
        core_type (stdlib/out_channel.mli[97,4711+23]..[97,4711+35])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[97,4711+23]..[97,4711+27])
            Ptyp_constr "char" (stdlib/out_channel.mli[97,4711+23]..[97,4711+27])
            []
          core_type (stdlib/out_channel.mli[97,4711+31]..[97,4711+35])
            Ptyp_constr "unit" (stdlib/out_channel.mli[97,4711+31]..[97,4711+35])
            []
      []
  signature_item (stdlib/out_channel.mli[100,4804+0]..[100,4804+34])
    Psig_value
    value_description "output_byte" (stdlib/out_channel.mli[100,4804+4]..[100,4804+15]) (stdlib/out_channel.mli[100,4804+0]..[100,4804+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[101,4839+0]..[102,4915+67])
            Pstr_eval
            expression (stdlib/out_channel.mli[101,4839+0]..[102,4915+67])
              Pexp_constant PConst_string(" Write one 8-bit integer (as the single character with that code) on the\n    given output channel. The given integer is taken modulo 256. ",(stdlib/out_channel.mli[101,4839+0]..[102,4915+67]),None)
        ]
      core_type (stdlib/out_channel.mli[100,4804+18]..[100,4804+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[100,4804+18]..[100,4804+19])
          Ptyp_constr "t" (stdlib/out_channel.mli[100,4804+18]..[100,4804+19])
          []
        core_type (stdlib/out_channel.mli[100,4804+23]..[100,4804+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[100,4804+23]..[100,4804+26])
            Ptyp_constr "int" (stdlib/out_channel.mli[100,4804+23]..[100,4804+26])
            []
          core_type (stdlib/out_channel.mli[100,4804+30]..[100,4804+34])
            Ptyp_constr "unit" (stdlib/out_channel.mli[100,4804+30]..[100,4804+34])
            []
      []
  signature_item (stdlib/out_channel.mli[104,4984+0]..[104,4984+39])
    Psig_value
    value_description "output_string" (stdlib/out_channel.mli[104,4984+4]..[104,4984+17]) (stdlib/out_channel.mli[104,4984+0]..[104,4984+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[105,5024+0]..[105,5024+52])
            Pstr_eval
            expression (stdlib/out_channel.mli[105,5024+0]..[105,5024+52])
              Pexp_constant PConst_string(" Write the string on the given output channel. ",(stdlib/out_channel.mli[105,5024+0]..[105,5024+52]),None)
        ]
      core_type (stdlib/out_channel.mli[104,4984+20]..[104,4984+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[104,4984+20]..[104,4984+21])
          Ptyp_constr "t" (stdlib/out_channel.mli[104,4984+20]..[104,4984+21])
          []
        core_type (stdlib/out_channel.mli[104,4984+25]..[104,4984+39])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[104,4984+25]..[104,4984+31])
            Ptyp_constr "string" (stdlib/out_channel.mli[104,4984+25]..[104,4984+31])
            []
          core_type (stdlib/out_channel.mli[104,4984+35]..[104,4984+39])
            Ptyp_constr "unit" (stdlib/out_channel.mli[104,4984+35]..[104,4984+39])
            []
      []
  signature_item (stdlib/out_channel.mli[107,5078+0]..[107,5078+37])
    Psig_value
    value_description "output_bytes" (stdlib/out_channel.mli[107,5078+4]..[107,5078+16]) (stdlib/out_channel.mli[107,5078+0]..[107,5078+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[108,5116+0]..[108,5116+59])
            Pstr_eval
            expression (stdlib/out_channel.mli[108,5116+0]..[108,5116+59])
              Pexp_constant PConst_string(" Write the byte sequence on the given output channel. ",(stdlib/out_channel.mli[108,5116+0]..[108,5116+59]),None)
        ]
      core_type (stdlib/out_channel.mli[107,5078+19]..[107,5078+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[107,5078+19]..[107,5078+20])
          Ptyp_constr "t" (stdlib/out_channel.mli[107,5078+19]..[107,5078+20])
          []
        core_type (stdlib/out_channel.mli[107,5078+24]..[107,5078+37])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[107,5078+24]..[107,5078+29])
            Ptyp_constr "bytes" (stdlib/out_channel.mli[107,5078+24]..[107,5078+29])
            []
          core_type (stdlib/out_channel.mli[107,5078+33]..[107,5078+37])
            Ptyp_constr "unit" (stdlib/out_channel.mli[107,5078+33]..[107,5078+37])
            []
      []
  signature_item (stdlib/out_channel.mli[110,5177+0]..[110,5177+45])
    Psig_value
    value_description "output" (stdlib/out_channel.mli[110,5177+4]..[110,5177+10]) (stdlib/out_channel.mli[110,5177+0]..[110,5177+45])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[111,5223+0]..[115,5447+13])
            Pstr_eval
            expression (stdlib/out_channel.mli[111,5223+0]..[115,5447+13])
              Pexp_constant PConst_string(" [output oc buf pos len] writes [len] characters from byte sequence [buf],\n    starting at offset [pos], to the given output channel [oc].\n\n    @raise Invalid_argument if [pos] and [len] do not designate a valid range of\n    [buf]. ",(stdlib/out_channel.mli[111,5223+0]..[115,5447+13]),None)
        ]
      core_type (stdlib/out_channel.mli[110,5177+13]..[110,5177+45])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[110,5177+13]..[110,5177+14])
          Ptyp_constr "t" (stdlib/out_channel.mli[110,5177+13]..[110,5177+14])
          []
        core_type (stdlib/out_channel.mli[110,5177+18]..[110,5177+45])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[110,5177+18]..[110,5177+23])
            Ptyp_constr "bytes" (stdlib/out_channel.mli[110,5177+18]..[110,5177+23])
            []
          core_type (stdlib/out_channel.mli[110,5177+27]..[110,5177+45])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/out_channel.mli[110,5177+27]..[110,5177+30])
              Ptyp_constr "int" (stdlib/out_channel.mli[110,5177+27]..[110,5177+30])
              []
            core_type (stdlib/out_channel.mli[110,5177+34]..[110,5177+45])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/out_channel.mli[110,5177+34]..[110,5177+37])
                Ptyp_constr "int" (stdlib/out_channel.mli[110,5177+34]..[110,5177+37])
                []
              core_type (stdlib/out_channel.mli[110,5177+41]..[110,5177+45])
                Ptyp_constr "unit" (stdlib/out_channel.mli[110,5177+41]..[110,5177+45])
                []
      []
  signature_item (stdlib/out_channel.mli[117,5462+0]..[117,5462+56])
    Psig_value
    value_description "output_substring" (stdlib/out_channel.mli[117,5462+4]..[117,5462+20]) (stdlib/out_channel.mli[117,5462+0]..[117,5462+56])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[118,5519+0]..[119,5589+16])
            Pstr_eval
            expression (stdlib/out_channel.mli[118,5519+0]..[119,5589+16])
              Pexp_constant PConst_string(" Same as {!output} but take a string as argument instead of a byte\n    sequence. ",(stdlib/out_channel.mli[118,5519+0]..[119,5589+16]),None)
        ]
      core_type (stdlib/out_channel.mli[117,5462+23]..[117,5462+56])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[117,5462+23]..[117,5462+24])
          Ptyp_constr "t" (stdlib/out_channel.mli[117,5462+23]..[117,5462+24])
          []
        core_type (stdlib/out_channel.mli[117,5462+28]..[117,5462+56])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[117,5462+28]..[117,5462+34])
            Ptyp_constr "string" (stdlib/out_channel.mli[117,5462+28]..[117,5462+34])
            []
          core_type (stdlib/out_channel.mli[117,5462+38]..[117,5462+56])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/out_channel.mli[117,5462+38]..[117,5462+41])
              Ptyp_constr "int" (stdlib/out_channel.mli[117,5462+38]..[117,5462+41])
              []
            core_type (stdlib/out_channel.mli[117,5462+45]..[117,5462+56])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/out_channel.mli[117,5462+45]..[117,5462+48])
                Ptyp_constr "int" (stdlib/out_channel.mli[117,5462+45]..[117,5462+48])
                []
              core_type (stdlib/out_channel.mli[117,5462+52]..[117,5462+56])
                Ptyp_constr "unit" (stdlib/out_channel.mli[117,5462+52]..[117,5462+56])
                []
      []
  signature_item (stdlib/out_channel.mli[121,5607+0]..[121,5607+39])
    Psig_value
    value_description "set_binary_mode" (stdlib/out_channel.mli[121,5607+4]..[121,5607+19]) (stdlib/out_channel.mli[121,5607+0]..[121,5607+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/out_channel.mli[122,5647+0]..[131,6088+41])
            Pstr_eval
            expression (stdlib/out_channel.mli[122,5647+0]..[131,6088+41])
              Pexp_constant PConst_string(" [set_binary_mode oc true] sets the channel [oc] to binary mode: no\n    translations take place during output.\n\n    [set_binary_mode oc false] sets the channel [oc] to text mode: depending on\n    the operating system, some translations may take place during output.  For\n    instance, under Windows, end-of-lines will be translated from [\\n] to\n    [\\r\\n].\n\n    This function has no effect under operating systems that do not distinguish\n    between text mode and binary mode. ",(stdlib/out_channel.mli[122,5647+0]..[131,6088+41]),None)
        ]
      core_type (stdlib/out_channel.mli[121,5607+22]..[121,5607+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/out_channel.mli[121,5607+22]..[121,5607+23])
          Ptyp_constr "t" (stdlib/out_channel.mli[121,5607+22]..[121,5607+23])
          []
        core_type (stdlib/out_channel.mli[121,5607+27]..[121,5607+39])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/out_channel.mli[121,5607+27]..[121,5607+31])
            Ptyp_constr "bool" (stdlib/out_channel.mli[121,5607+27]..[121,5607+31])
            []
          core_type (stdlib/out_channel.mli[121,5607+35]..[121,5607+39])
            Ptyp_constr "unit" (stdlib/out_channel.mli[121,5607+35]..[121,5607+39])
            []
      []
]

