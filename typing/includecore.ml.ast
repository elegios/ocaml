[
  structure_item (typing/includecore.ml[18,1125+0]..[18,1125+13])
    Pstr_open Fresh
    module_expr (typing/includecore.ml[18,1125+5]..[18,1125+13])
      Pmod_ident "Asttypes" (typing/includecore.ml[18,1125+5]..[18,1125+13])
  structure_item (typing/includecore.ml[19,1139+0]..[19,1139+9])
    Pstr_open Fresh
    module_expr (typing/includecore.ml[19,1139+5]..[19,1139+9])
      Pmod_ident "Path" (typing/includecore.ml[19,1139+5]..[19,1139+9])
  structure_item (typing/includecore.ml[20,1149+0]..[20,1149+10])
    Pstr_open Fresh
    module_expr (typing/includecore.ml[20,1149+5]..[20,1149+10])
      Pmod_ident "Types" (typing/includecore.ml[20,1149+5]..[20,1149+10])
  structure_item (typing/includecore.ml[21,1160+0]..[21,1160+14])
    Pstr_open Fresh
    module_expr (typing/includecore.ml[21,1160+5]..[21,1160+14])
      Pmod_ident "Typedtree" (typing/includecore.ml[21,1160+5]..[21,1160+14])
  structure_item (typing/includecore.ml[23,1176+0]..[23,1176+52])
    Pstr_type Rec
    [
      type_declaration "position" (typing/includecore.ml[23,1176+5]..[23,1176+13]) (typing/includecore.ml[23,1176+0]..[23,1176+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[23,1176+38]..[23,1176+43])
                "First" (typing/includecore.ml[23,1176+38]..[23,1176+43])
                []
                None
              (typing/includecore.ml[23,1176+44]..[23,1176+52])
                "Second" (typing/includecore.ml[23,1176+46]..[23,1176+52])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/includecore.ml[23,1176+16]..[23,1176+35])
              Ptyp_constr "Errortrace.position" (typing/includecore.ml[23,1176+16]..[23,1176+35])
              []
    ]
  structure_item (typing/includecore.ml[27,1274+0]..[33,1376+24])
    Pstr_type Rec
    [
      type_declaration "primitive_mismatch" (typing/includecore.ml[27,1274+5]..[27,1274+23]) (typing/includecore.ml[27,1274+0]..[33,1376+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[28,1300+2]..[28,1300+8])
                "Name" (typing/includecore.ml[28,1300+4]..[28,1300+8])
                []
                None
              (typing/includecore.ml[29,1309+2]..[29,1309+9])
                "Arity" (typing/includecore.ml[29,1309+4]..[29,1309+9])
                []
                None
              (typing/includecore.ml[30,1319+2]..[30,1319+24])
                "No_alloc" (typing/includecore.ml[30,1319+4]..[30,1319+12])
                [
                  core_type (typing/includecore.ml[30,1319+16]..[30,1319+24])
                    Ptyp_constr "position" (typing/includecore.ml[30,1319+16]..[30,1319+24])
                    []
                ]
                None
              (typing/includecore.ml[31,1344+2]..[31,1344+15])
                "Native_name" (typing/includecore.ml[31,1344+4]..[31,1344+15])
                []
                None
              (typing/includecore.ml[32,1360+2]..[32,1360+15])
                "Result_repr" (typing/includecore.ml[32,1360+4]..[32,1360+15])
                []
                None
              (typing/includecore.ml[33,1376+2]..[33,1376+24])
                "Argument_repr" (typing/includecore.ml[33,1376+4]..[33,1376+17])
                [
                  core_type (typing/includecore.ml[33,1376+21]..[33,1376+24])
                    Ptyp_constr "int" (typing/includecore.ml[33,1376+21]..[33,1376+24])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[35,1402+0]..[45,1727+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[35,1402+4]..[35,1402+20])
          Ppat_var "native_repr_args" (typing/includecore.ml[35,1402+4]..[35,1402+20])
        expression (typing/includecore.ml[35,1402+21]..[45,1727+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[35,1402+21]..[35,1402+25])
            Ppat_var "nra1" (typing/includecore.ml[35,1402+21]..[35,1402+25])
          expression (typing/includecore.ml[35,1402+26]..[45,1727+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[35,1402+26]..[35,1402+30])
              Ppat_var "nra2" (typing/includecore.ml[35,1402+26]..[35,1402+30])
            expression (typing/includecore.ml[36,1435+2]..[45,1727+18])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/includecore.ml[36,1435+10]..[36,1435+14])
                    Ppat_var "loop" (typing/includecore.ml[36,1435+10]..[36,1435+14])
                  expression (typing/includecore.ml[36,1435+15]..[43,1690+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[36,1435+15]..[36,1435+16])
                      Ppat_var "i" (typing/includecore.ml[36,1435+15]..[36,1435+16])
                    expression (typing/includecore.ml[36,1435+17]..[43,1690+31]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[36,1435+17]..[36,1435+21])
                        Ppat_var "nra1" (typing/includecore.ml[36,1435+17]..[36,1435+21])
                      expression (typing/includecore.ml[36,1435+22]..[43,1690+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[36,1435+22]..[36,1435+26])
                          Ppat_var "nra2" (typing/includecore.ml[36,1435+22]..[36,1435+26])
                        expression (typing/includecore.ml[37,1464+4]..[43,1690+31])
                          Pexp_match
                          expression (typing/includecore.ml[37,1464+10]..[37,1464+20])
                            Pexp_tuple
                            [
                              expression (typing/includecore.ml[37,1464+10]..[37,1464+14])
                                Pexp_ident "nra1" (typing/includecore.ml[37,1464+10]..[37,1464+14])
                              expression (typing/includecore.ml[37,1464+16]..[37,1464+20])
                                Pexp_ident "nra2" (typing/includecore.ml[37,1464+16]..[37,1464+20])
                            ]
                          [
                            <case>
                              pattern (typing/includecore.ml[38,1490+6]..[38,1490+12])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[38,1490+6]..[38,1490+8])
                                    Ppat_construct "[]" (typing/includecore.ml[38,1490+6]..[38,1490+8])
                                    None
                                  pattern (typing/includecore.ml[38,1490+10]..[38,1490+12])
                                    Ppat_construct "[]" (typing/includecore.ml[38,1490+10]..[38,1490+12])
                                    None
                                ]
                              expression (typing/includecore.ml[38,1490+16]..[38,1490+20])
                                Pexp_construct "None" (typing/includecore.ml[38,1490+16]..[38,1490+20])
                                None
                            <case>
                              pattern (typing/includecore.ml[39,1511+6]..[39,1511+16])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[39,1511+6]..[39,1511+8])
                                    Ppat_construct "[]" (typing/includecore.ml[39,1511+6]..[39,1511+8])
                                    None
                                  pattern (typing/includecore.ml[39,1511+10]..[39,1511+16])
                                    Ppat_construct "::" (typing/includecore.ml[39,1511+12]..[39,1511+14])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[39,1511+10]..[39,1511+16]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[39,1511+10]..[39,1511+11])
                                            Ppat_any
                                          pattern (typing/includecore.ml[39,1511+15]..[39,1511+16])
                                            Ppat_any
                                        ]
                                ]
                              expression (typing/includecore.ml[39,1511+20]..[39,1511+32])
                                Pexp_assert
                                expression (typing/includecore.ml[39,1511+27]..[39,1511+32])
                                  Pexp_construct "false" (typing/includecore.ml[39,1511+27]..[39,1511+32])
                                  None
                            <case>
                              pattern (typing/includecore.ml[40,1544+6]..[40,1544+16])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[40,1544+6]..[40,1544+12])
                                    Ppat_construct "::" (typing/includecore.ml[40,1544+8]..[40,1544+10])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[40,1544+6]..[40,1544+12]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[40,1544+6]..[40,1544+7])
                                            Ppat_any
                                          pattern (typing/includecore.ml[40,1544+11]..[40,1544+12])
                                            Ppat_any
                                        ]
                                  pattern (typing/includecore.ml[40,1544+14]..[40,1544+16])
                                    Ppat_construct "[]" (typing/includecore.ml[40,1544+14]..[40,1544+16])
                                    None
                                ]
                              expression (typing/includecore.ml[40,1544+20]..[40,1544+32])
                                Pexp_assert
                                expression (typing/includecore.ml[40,1544+27]..[40,1544+32])
                                  Pexp_construct "false" (typing/includecore.ml[40,1544+27]..[40,1544+32])
                                  None
                            <case>
                              pattern (typing/includecore.ml[41,1577+6]..[41,1577+30])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[41,1577+6]..[41,1577+17])
                                    Ppat_construct "::" (typing/includecore.ml[41,1577+10]..[41,1577+12])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[41,1577+6]..[41,1577+17]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[41,1577+6]..[41,1577+9])
                                            Ppat_var "nr1" (typing/includecore.ml[41,1577+6]..[41,1577+9])
                                          pattern (typing/includecore.ml[41,1577+13]..[41,1577+17])
                                            Ppat_var "nra1" (typing/includecore.ml[41,1577+13]..[41,1577+17])
                                        ]
                                  pattern (typing/includecore.ml[41,1577+19]..[41,1577+30])
                                    Ppat_construct "::" (typing/includecore.ml[41,1577+23]..[41,1577+25])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[41,1577+19]..[41,1577+30]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[41,1577+19]..[41,1577+22])
                                            Ppat_var "nr2" (typing/includecore.ml[41,1577+19]..[41,1577+22])
                                          pattern (typing/includecore.ml[41,1577+26]..[41,1577+30])
                                            Ppat_var "nra2" (typing/includecore.ml[41,1577+26]..[41,1577+30])
                                        ]
                                ]
                              expression (typing/includecore.ml[42,1611+6]..[43,1690+31])
                                Pexp_ifthenelse
                                expression (typing/includecore.ml[42,1611+9]..[42,1611+50])
                                  Pexp_apply
                                  expression (typing/includecore.ml[42,1611+9]..[42,1611+12])
                                    Pexp_ident "not" (typing/includecore.ml[42,1611+9]..[42,1611+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[42,1611+13]..[42,1611+50])
                                        Pexp_apply
                                        expression (typing/includecore.ml[42,1611+14]..[42,1611+41])
                                          Pexp_ident "Primitive.equal_native_repr" (typing/includecore.ml[42,1611+14]..[42,1611+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[42,1611+42]..[42,1611+45])
                                              Pexp_ident "nr1" (typing/includecore.ml[42,1611+42]..[42,1611+45])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[42,1611+46]..[42,1611+49])
                                              Pexp_ident "nr2" (typing/includecore.ml[42,1611+46]..[42,1611+49])
                                        ]
                                  ]
                                expression (typing/includecore.ml[42,1611+56]..[42,1611+78])
                                  Pexp_construct "Some" (typing/includecore.ml[42,1611+56]..[42,1611+60])
                                  Some
                                    expression (typing/includecore.ml[42,1611+61]..[42,1611+78])
                                      Pexp_construct "Argument_repr" (typing/includecore.ml[42,1611+62]..[42,1611+75])
                                      Some
                                        expression (typing/includecore.ml[42,1611+76]..[42,1611+77])
                                          Pexp_ident "i" (typing/includecore.ml[42,1611+76]..[42,1611+77])
                                Some
                                  expression (typing/includecore.ml[43,1690+11]..[43,1690+31])
                                    Pexp_apply
                                    expression (typing/includecore.ml[43,1690+11]..[43,1690+15])
                                      Pexp_ident "loop" (typing/includecore.ml[43,1690+11]..[43,1690+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[43,1690+16]..[43,1690+21])
                                          Pexp_apply
                                          expression (typing/includecore.ml[43,1690+18]..[43,1690+19])
                                            Pexp_ident "+" (typing/includecore.ml[43,1690+18]..[43,1690+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[43,1690+17]..[43,1690+18])
                                                Pexp_ident "i" (typing/includecore.ml[43,1690+17]..[43,1690+18])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[43,1690+19]..[43,1690+20])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[43,1690+22]..[43,1690+26])
                                          Pexp_ident "nra1" (typing/includecore.ml[43,1690+22]..[43,1690+26])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[43,1690+27]..[43,1690+31])
                                          Pexp_ident "nra2" (typing/includecore.ml[43,1690+27]..[43,1690+31])
                                    ]
                          ]
              ]
              expression (typing/includecore.ml[45,1727+2]..[45,1727+18])
                Pexp_apply
                expression (typing/includecore.ml[45,1727+2]..[45,1727+6])
                  Pexp_ident "loop" (typing/includecore.ml[45,1727+2]..[45,1727+6])
                [
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[45,1727+7]..[45,1727+8])
                      Pexp_constant PConst_int (1,None)
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[45,1727+9]..[45,1727+13])
                      Pexp_ident "nra1" (typing/includecore.ml[45,1727+9]..[45,1727+13])
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[45,1727+14]..[45,1727+18])
                      Pexp_ident "nra2" (typing/includecore.ml[45,1727+14]..[45,1727+18])
                ]
    ]
  structure_item (typing/includecore.ml[47,1747+0]..[64,2351+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[47,1747+4]..[47,1747+26])
          Ppat_var "primitive_descriptions" (typing/includecore.ml[47,1747+4]..[47,1747+26])
        expression (typing/includecore.ml[47,1747+27]..[64,2351+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[47,1747+27]..[47,1747+30])
            Ppat_var "pd1" (typing/includecore.ml[47,1747+27]..[47,1747+30])
          expression (typing/includecore.ml[47,1747+31]..[64,2351+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[47,1747+31]..[47,1747+34])
              Ppat_var "pd2" (typing/includecore.ml[47,1747+31]..[47,1747+34])
            expression (typing/includecore.ml[48,1784+2]..[64,2351+72])
              Pexp_open Fresh
              module_expr (typing/includecore.ml[48,1784+11]..[48,1784+20])
                Pmod_ident "Primitive" (typing/includecore.ml[48,1784+11]..[48,1784+20])
              expression (typing/includecore.ml[49,1808+2]..[64,2351+72])
                Pexp_ifthenelse
                expression (typing/includecore.ml[49,1808+5]..[49,1808+51])
                  Pexp_apply
                  expression (typing/includecore.ml[49,1808+5]..[49,1808+8])
                    Pexp_ident "not" (typing/includecore.ml[49,1808+5]..[49,1808+8])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includecore.ml[49,1808+9]..[49,1808+51])
                        Pexp_apply
                        expression (typing/includecore.ml[49,1808+10]..[49,1808+22])
                          Pexp_ident "String.equal" (typing/includecore.ml[49,1808+10]..[49,1808+22])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[49,1808+23]..[49,1808+36])
                              Pexp_field
                              expression (typing/includecore.ml[49,1808+23]..[49,1808+26])
                                Pexp_ident "pd1" (typing/includecore.ml[49,1808+23]..[49,1808+26])
                              "prim_name" (typing/includecore.ml[49,1808+27]..[49,1808+36])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[49,1808+37]..[49,1808+50])
                              Pexp_field
                              expression (typing/includecore.ml[49,1808+37]..[49,1808+40])
                                Pexp_ident "pd2" (typing/includecore.ml[49,1808+37]..[49,1808+40])
                              "prim_name" (typing/includecore.ml[49,1808+41]..[49,1808+50])
                        ]
                  ]
                expression (typing/includecore.ml[50,1865+4]..[50,1865+13])
                  Pexp_construct "Some" (typing/includecore.ml[50,1865+4]..[50,1865+8])
                  Some
                    expression (typing/includecore.ml[50,1865+9]..[50,1865+13])
                      Pexp_construct "Name" (typing/includecore.ml[50,1865+9]..[50,1865+13])
                      None
                Some
                  expression (typing/includecore.ml[51,1879+7]..[64,2351+72])
                    Pexp_ifthenelse
                    expression (typing/includecore.ml[51,1879+10]..[51,1879+55])
                      Pexp_apply
                      expression (typing/includecore.ml[51,1879+10]..[51,1879+13])
                        Pexp_ident "not" (typing/includecore.ml[51,1879+10]..[51,1879+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[51,1879+14]..[51,1879+55])
                            Pexp_apply
                            expression (typing/includecore.ml[51,1879+15]..[51,1879+24])
                              Pexp_ident "Int.equal" (typing/includecore.ml[51,1879+15]..[51,1879+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[51,1879+25]..[51,1879+39])
                                  Pexp_field
                                  expression (typing/includecore.ml[51,1879+25]..[51,1879+28])
                                    Pexp_ident "pd1" (typing/includecore.ml[51,1879+25]..[51,1879+28])
                                  "prim_arity" (typing/includecore.ml[51,1879+29]..[51,1879+39])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[51,1879+40]..[51,1879+54])
                                  Pexp_field
                                  expression (typing/includecore.ml[51,1879+40]..[51,1879+43])
                                    Pexp_ident "pd2" (typing/includecore.ml[51,1879+40]..[51,1879+43])
                                  "prim_arity" (typing/includecore.ml[51,1879+44]..[51,1879+54])
                            ]
                      ]
                    expression (typing/includecore.ml[52,1940+4]..[52,1940+14])
                      Pexp_construct "Some" (typing/includecore.ml[52,1940+4]..[52,1940+8])
                      Some
                        expression (typing/includecore.ml[52,1940+9]..[52,1940+14])
                          Pexp_construct "Arity" (typing/includecore.ml[52,1940+9]..[52,1940+14])
                          None
                    Some
                      expression (typing/includecore.ml[53,1955+7]..[64,2351+72])
                        Pexp_ifthenelse
                        expression (typing/includecore.ml[53,1955+10]..[53,1955+48])
                          Pexp_apply
                          expression (typing/includecore.ml[53,1955+31]..[53,1955+33])
                            Pexp_ident "&&" (typing/includecore.ml[53,1955+31]..[53,1955+33])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[53,1955+10]..[53,1955+30])
                                Pexp_apply
                                expression (typing/includecore.ml[53,1955+11]..[53,1955+14])
                                  Pexp_ident "not" (typing/includecore.ml[53,1955+11]..[53,1955+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[53,1955+15]..[53,1955+29])
                                      Pexp_field
                                      expression (typing/includecore.ml[53,1955+15]..[53,1955+18])
                                        Pexp_ident "pd1" (typing/includecore.ml[53,1955+15]..[53,1955+18])
                                      "prim_alloc" (typing/includecore.ml[53,1955+19]..[53,1955+29])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[53,1955+34]..[53,1955+48])
                                Pexp_field
                                expression (typing/includecore.ml[53,1955+34]..[53,1955+37])
                                  Pexp_ident "pd2" (typing/includecore.ml[53,1955+34]..[53,1955+37])
                                "prim_alloc" (typing/includecore.ml[53,1955+38]..[53,1955+48])
                          ]
                        expression (typing/includecore.ml[54,2009+4]..[54,2009+25])
                          Pexp_construct "Some" (typing/includecore.ml[54,2009+4]..[54,2009+8])
                          Some
                            expression (typing/includecore.ml[54,2009+9]..[54,2009+25])
                              Pexp_construct "No_alloc" (typing/includecore.ml[54,2009+10]..[54,2009+18])
                              Some
                                expression (typing/includecore.ml[54,2009+19]..[54,2009+24])
                                  Pexp_construct "First" (typing/includecore.ml[54,2009+19]..[54,2009+24])
                                  None
                        Some
                          expression (typing/includecore.ml[55,2035+7]..[64,2351+72])
                            Pexp_ifthenelse
                            expression (typing/includecore.ml[55,2035+10]..[55,2035+48])
                              Pexp_apply
                              expression (typing/includecore.ml[55,2035+25]..[55,2035+27])
                                Pexp_ident "&&" (typing/includecore.ml[55,2035+25]..[55,2035+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[55,2035+10]..[55,2035+24])
                                    Pexp_field
                                    expression (typing/includecore.ml[55,2035+10]..[55,2035+13])
                                      Pexp_ident "pd1" (typing/includecore.ml[55,2035+10]..[55,2035+13])
                                    "prim_alloc" (typing/includecore.ml[55,2035+14]..[55,2035+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[55,2035+28]..[55,2035+48])
                                    Pexp_apply
                                    expression (typing/includecore.ml[55,2035+29]..[55,2035+32])
                                      Pexp_ident "not" (typing/includecore.ml[55,2035+29]..[55,2035+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[55,2035+33]..[55,2035+47])
                                          Pexp_field
                                          expression (typing/includecore.ml[55,2035+33]..[55,2035+36])
                                            Pexp_ident "pd2" (typing/includecore.ml[55,2035+33]..[55,2035+36])
                                          "prim_alloc" (typing/includecore.ml[55,2035+37]..[55,2035+47])
                                    ]
                              ]
                            expression (typing/includecore.ml[56,2089+4]..[56,2089+26])
                              Pexp_construct "Some" (typing/includecore.ml[56,2089+4]..[56,2089+8])
                              Some
                                expression (typing/includecore.ml[56,2089+9]..[56,2089+26])
                                  Pexp_construct "No_alloc" (typing/includecore.ml[56,2089+10]..[56,2089+18])
                                  Some
                                    expression (typing/includecore.ml[56,2089+19]..[56,2089+25])
                                      Pexp_construct "Second" (typing/includecore.ml[56,2089+19]..[56,2089+25])
                                      None
                            Some
                              expression (typing/includecore.ml[57,2116+7]..[64,2351+72])
                                Pexp_ifthenelse
                                expression (typing/includecore.ml[57,2116+10]..[57,2116+70])
                                  Pexp_apply
                                  expression (typing/includecore.ml[57,2116+10]..[57,2116+13])
                                    Pexp_ident "not" (typing/includecore.ml[57,2116+10]..[57,2116+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[57,2116+14]..[57,2116+70])
                                        Pexp_apply
                                        expression (typing/includecore.ml[57,2116+15]..[57,2116+27])
                                          Pexp_ident "String.equal" (typing/includecore.ml[57,2116+15]..[57,2116+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[57,2116+28]..[57,2116+48])
                                              Pexp_field
                                              expression (typing/includecore.ml[57,2116+28]..[57,2116+31])
                                                Pexp_ident "pd1" (typing/includecore.ml[57,2116+28]..[57,2116+31])
                                              "prim_native_name" (typing/includecore.ml[57,2116+32]..[57,2116+48])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[57,2116+49]..[57,2116+69])
                                              Pexp_field
                                              expression (typing/includecore.ml[57,2116+49]..[57,2116+52])
                                                Pexp_ident "pd2" (typing/includecore.ml[57,2116+49]..[57,2116+52])
                                              "prim_native_name" (typing/includecore.ml[57,2116+53]..[57,2116+69])
                                        ]
                                  ]
                                expression (typing/includecore.ml[58,2192+4]..[58,2192+20])
                                  Pexp_construct "Some" (typing/includecore.ml[58,2192+4]..[58,2192+8])
                                  Some
                                    expression (typing/includecore.ml[58,2192+9]..[58,2192+20])
                                      Pexp_construct "Native_name" (typing/includecore.ml[58,2192+9]..[58,2192+20])
                                      None
                                Some
                                  expression (typing/includecore.ml[59,2213+7]..[64,2351+72])
                                    Pexp_ifthenelse
                                    expression (typing/includecore.ml[59,2213+10]..[61,2260+57])
                                      Pexp_apply
                                      expression (typing/includecore.ml[59,2213+10]..[59,2213+13])
                                        Pexp_ident "not" (typing/includecore.ml[59,2213+10]..[59,2213+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[60,2227+4]..[61,2260+57])
                                            Pexp_apply
                                            expression (typing/includecore.ml[60,2227+5]..[60,2227+32])
                                              Pexp_ident "Primitive.equal_native_repr" (typing/includecore.ml[60,2227+5]..[60,2227+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[61,2260+7]..[61,2260+31])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[61,2260+7]..[61,2260+10])
                                                    Pexp_ident "pd1" (typing/includecore.ml[61,2260+7]..[61,2260+10])
                                                  "prim_native_repr_res" (typing/includecore.ml[61,2260+11]..[61,2260+31])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[61,2260+32]..[61,2260+56])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[61,2260+32]..[61,2260+35])
                                                    Pexp_ident "pd2" (typing/includecore.ml[61,2260+32]..[61,2260+35])
                                                  "prim_native_repr_res" (typing/includecore.ml[61,2260+36]..[61,2260+56])
                                            ]
                                      ]
                                    expression (typing/includecore.ml[62,2323+4]..[62,2323+20])
                                      Pexp_construct "Some" (typing/includecore.ml[62,2323+4]..[62,2323+8])
                                      Some
                                        expression (typing/includecore.ml[62,2323+9]..[62,2323+20])
                                          Pexp_construct "Result_repr" (typing/includecore.ml[62,2323+9]..[62,2323+20])
                                          None
                                    Some
                                      expression (typing/includecore.ml[64,2351+4]..[64,2351+72])
                                        Pexp_apply
                                        expression (typing/includecore.ml[64,2351+4]..[64,2351+20])
                                          Pexp_ident "native_repr_args" (typing/includecore.ml[64,2351+4]..[64,2351+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[64,2351+21]..[64,2351+46])
                                              Pexp_field
                                              expression (typing/includecore.ml[64,2351+21]..[64,2351+24])
                                                Pexp_ident "pd1" (typing/includecore.ml[64,2351+21]..[64,2351+24])
                                              "prim_native_repr_args" (typing/includecore.ml[64,2351+25]..[64,2351+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[64,2351+47]..[64,2351+72])
                                              Pexp_field
                                              expression (typing/includecore.ml[64,2351+47]..[64,2351+50])
                                                Pexp_ident "pd2" (typing/includecore.ml[64,2351+47]..[64,2351+50])
                                              "prim_native_repr_args" (typing/includecore.ml[64,2351+51]..[64,2351+72])
                                        ]
    ]
  structure_item (typing/includecore.ml[66,2425+0]..[69,2512+36])
    Pstr_type Rec
    [
      type_declaration "value_mismatch" (typing/includecore.ml[66,2425+5]..[66,2425+19]) (typing/includecore.ml[66,2425+0]..[69,2512+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[67,2447+2]..[67,2447+44])
                "Primitive_mismatch" (typing/includecore.ml[67,2447+4]..[67,2447+22])
                [
                  core_type (typing/includecore.ml[67,2447+26]..[67,2447+44])
                    Ptyp_constr "primitive_mismatch" (typing/includecore.ml[67,2447+26]..[67,2447+44])
                    []
                ]
                None
              (typing/includecore.ml[68,2492+2]..[68,2492+19])
                "Not_a_primitive" (typing/includecore.ml[68,2492+4]..[68,2492+19])
                []
                None
              (typing/includecore.ml[69,2512+2]..[69,2512+36])
                "Type" (typing/includecore.ml[69,2512+4]..[69,2512+8])
                [
                  core_type (typing/includecore.ml[69,2512+12]..[69,2512+36])
                    Ptyp_constr "Errortrace.moregen_error" (typing/includecore.ml[69,2512+12]..[69,2512+36])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[71,2550+0]..[71,2550+38])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/includecore.ml[71,2550+0]..[71,2550+38])
          pext_name = "Dont_match"
          pext_kind =
            Pext_decl
              [
                core_type (typing/includecore.ml[71,2550+24]..[71,2550+38])
                  Ptyp_constr "value_mismatch" (typing/includecore.ml[71,2550+24]..[71,2550+38])
                  []
              ]
              None
  structure_item (typing/includecore.ml[73,2590+0]..[99,3545+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[73,2590+4]..[73,2590+22])
          Ppat_var "value_descriptions" (typing/includecore.ml[73,2590+4]..[73,2590+22])
        expression (typing/includecore.ml[73,2590+23]..[99,3545+7]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/includecore.ml[73,2590+24]..[73,2590+27])
            Ppat_var "loc" (typing/includecore.ml[73,2590+24]..[73,2590+27])
          expression (typing/includecore.ml[73,2590+28]..[99,3545+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[73,2590+28]..[73,2590+31])
              Ppat_var "env" (typing/includecore.ml[73,2590+28]..[73,2590+31])
            expression (typing/includecore.ml[73,2590+32]..[99,3545+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[73,2590+32]..[73,2590+36])
                Ppat_var "name" (typing/includecore.ml[73,2590+32]..[73,2590+36])
              expression (typing/includecore.ml[74,2627+4]..[99,3545+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[74,2627+4]..[74,2627+35])
                  Ppat_constraint
                  pattern (typing/includecore.ml[74,2627+5]..[74,2627+8])
                    Ppat_var "vd1" (typing/includecore.ml[74,2627+5]..[74,2627+8])
                  core_type (typing/includecore.ml[74,2627+11]..[74,2627+34])
                    Ptyp_constr "Types.value_description" (typing/includecore.ml[74,2627+11]..[74,2627+34])
                    []
                expression (typing/includecore.ml[75,2663+4]..[99,3545+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[75,2663+4]..[75,2663+35])
                    Ppat_constraint
                    pattern (typing/includecore.ml[75,2663+5]..[75,2663+8])
                      Ppat_var "vd2" (typing/includecore.ml[75,2663+5]..[75,2663+8])
                    core_type (typing/includecore.ml[75,2663+11]..[75,2663+34])
                      Ptyp_constr "Types.value_description" (typing/includecore.ml[75,2663+11]..[75,2663+34])
                      []
                  expression (typing/includecore.ml[76,2701+2]..[99,3545+7])
                    Pexp_sequence
                    expression (typing/includecore.ml[76,2701+2]..[81,2837+8])
                      Pexp_apply
                      expression (typing/includecore.ml[76,2701+2]..[76,2701+43])
                        Pexp_ident "Builtin_attributes.check_alerts_inclusion" (typing/includecore.ml[76,2701+2]..[76,2701+43])
                      [
                        <arg>
                        Labelled "def"
                          expression (typing/includecore.ml[77,2745+9]..[77,2745+20])
                            Pexp_field
                            expression (typing/includecore.ml[77,2745+9]..[77,2745+12])
                              Pexp_ident "vd1" (typing/includecore.ml[77,2745+9]..[77,2745+12])
                            "val_loc" (typing/includecore.ml[77,2745+13]..[77,2745+20])
                        <arg>
                        Labelled "use"
                          expression (typing/includecore.ml[78,2766+9]..[78,2766+20])
                            Pexp_field
                            expression (typing/includecore.ml[78,2766+9]..[78,2766+12])
                              Pexp_ident "vd2" (typing/includecore.ml[78,2766+9]..[78,2766+12])
                            "val_loc" (typing/includecore.ml[78,2766+13]..[78,2766+20])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[79,2787+4]..[79,2787+7])
                            Pexp_ident "loc" (typing/includecore.ml[79,2787+4]..[79,2787+7])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[80,2795+4]..[80,2795+22])
                            Pexp_field
                            expression (typing/includecore.ml[80,2795+4]..[80,2795+7])
                              Pexp_ident "vd1" (typing/includecore.ml[80,2795+4]..[80,2795+7])
                            "val_attributes" (typing/includecore.ml[80,2795+8]..[80,2795+22])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[80,2795+23]..[80,2795+41])
                            Pexp_field
                            expression (typing/includecore.ml[80,2795+23]..[80,2795+26])
                              Pexp_ident "vd2" (typing/includecore.ml[80,2795+23]..[80,2795+26])
                            "val_attributes" (typing/includecore.ml[80,2795+27]..[80,2795+41])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[81,2837+4]..[81,2837+8])
                            Pexp_ident "name" (typing/includecore.ml[81,2837+4]..[81,2837+8])
                      ]
                    expression (typing/includecore.ml[82,2847+2]..[99,3545+7])
                      Pexp_match
                      expression (typing/includecore.ml[82,2847+8]..[82,2847+60])
                        Pexp_apply
                        expression (typing/includecore.ml[82,2847+8]..[82,2847+25])
                          Pexp_ident "Ctype.moregeneral" (typing/includecore.ml[82,2847+8]..[82,2847+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[82,2847+26]..[82,2847+29])
                              Pexp_ident "env" (typing/includecore.ml[82,2847+26]..[82,2847+29])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[82,2847+30]..[82,2847+34])
                              Pexp_construct "true" (typing/includecore.ml[82,2847+30]..[82,2847+34])
                              None
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[82,2847+35]..[82,2847+47])
                              Pexp_field
                              expression (typing/includecore.ml[82,2847+35]..[82,2847+38])
                                Pexp_ident "vd1" (typing/includecore.ml[82,2847+35]..[82,2847+38])
                              "val_type" (typing/includecore.ml[82,2847+39]..[82,2847+47])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[82,2847+48]..[82,2847+60])
                              Pexp_field
                              expression (typing/includecore.ml[82,2847+48]..[82,2847+51])
                                Pexp_ident "vd2" (typing/includecore.ml[82,2847+48]..[82,2847+51])
                              "val_type" (typing/includecore.ml[82,2847+52]..[82,2847+60])
                        ]
                      [
                        <case>
                          pattern (typing/includecore.ml[83,2913+4]..[83,2913+31])
                            Ppat_exception
                            pattern (typing/includecore.ml[83,2913+14]..[83,2913+31])
                              Ppat_construct "Ctype.Moregen" (typing/includecore.ml[83,2913+14]..[83,2913+27])
                              Some
                                []
                                pattern (typing/includecore.ml[83,2913+28]..[83,2913+31])
                                  Ppat_var "err" (typing/includecore.ml[83,2913+28]..[83,2913+31])
                          expression (typing/includecore.ml[83,2913+35]..[83,2913+64])
                            Pexp_apply
                            expression (typing/includecore.ml[83,2913+35]..[83,2913+40])
                              Pexp_ident "raise" (typing/includecore.ml[83,2913+35]..[83,2913+40])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[83,2913+41]..[83,2913+64])
                                  Pexp_construct "Dont_match" (typing/includecore.ml[83,2913+42]..[83,2913+52])
                                  Some
                                    expression (typing/includecore.ml[83,2913+53]..[83,2913+63])
                                      Pexp_construct "Type" (typing/includecore.ml[83,2913+54]..[83,2913+58])
                                      Some
                                        expression (typing/includecore.ml[83,2913+59]..[83,2913+62])
                                          Pexp_ident "err" (typing/includecore.ml[83,2913+59]..[83,2913+62])
                            ]
                        <case>
                          pattern (typing/includecore.ml[84,2978+4]..[84,2978+6])
                            Ppat_construct "()" (typing/includecore.ml[84,2978+4]..[84,2978+6])
                            None
                          expression (typing/includecore.ml[84,2978+10]..[99,3545+7])
                            Pexp_match
                            expression (typing/includecore.ml[85,2994+12]..[85,2994+40])
                              Pexp_tuple
                              [
                                expression (typing/includecore.ml[85,2994+13]..[85,2994+25])
                                  Pexp_field
                                  expression (typing/includecore.ml[85,2994+13]..[85,2994+16])
                                    Pexp_ident "vd1" (typing/includecore.ml[85,2994+13]..[85,2994+16])
                                  "val_kind" (typing/includecore.ml[85,2994+17]..[85,2994+25])
                                expression (typing/includecore.ml[85,2994+27]..[85,2994+39])
                                  Pexp_field
                                  expression (typing/includecore.ml[85,2994+27]..[85,2994+30])
                                    Pexp_ident "vd2" (typing/includecore.ml[85,2994+27]..[85,2994+30])
                                  "val_kind" (typing/includecore.ml[85,2994+31]..[85,2994+39])
                              ]
                            [
                              <case>
                                pattern (typing/includecore.ml[86,3040+8]..[86,3040+34])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[86,3040+9]..[86,3040+20])
                                      Ppat_construct "Val_prim" (typing/includecore.ml[86,3040+9]..[86,3040+17])
                                      Some
                                        []
                                        pattern (typing/includecore.ml[86,3040+18]..[86,3040+20])
                                          Ppat_var "p1" (typing/includecore.ml[86,3040+18]..[86,3040+20])
                                    pattern (typing/includecore.ml[86,3040+22]..[86,3040+33])
                                      Ppat_construct "Val_prim" (typing/includecore.ml[86,3040+22]..[86,3040+30])
                                      Some
                                        []
                                        pattern (typing/includecore.ml[86,3040+31]..[86,3040+33])
                                          Ppat_var "p2" (typing/includecore.ml[86,3040+31]..[86,3040+33])
                                  ]
                                expression (typing/includecore.ml[86,3040+38]..[90,3235+11])
                                  Pexp_match
                                  expression (typing/includecore.ml[87,3084+16]..[87,3084+44])
                                    Pexp_apply
                                    expression (typing/includecore.ml[87,3084+16]..[87,3084+38])
                                      Pexp_ident "primitive_descriptions" (typing/includecore.ml[87,3084+16]..[87,3084+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[87,3084+39]..[87,3084+41])
                                          Pexp_ident "p1" (typing/includecore.ml[87,3084+39]..[87,3084+41])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[87,3084+42]..[87,3084+44])
                                          Pexp_ident "p2" (typing/includecore.ml[87,3084+42]..[87,3084+44])
                                    ]
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[88,3134+12]..[88,3134+16])
                                        Ppat_construct "None" (typing/includecore.ml[88,3134+12]..[88,3134+16])
                                        None
                                      expression (typing/includecore.ml[88,3134+20]..[88,3134+32])
                                        Pexp_construct "Tcoerce_none" (typing/includecore.ml[88,3134+20]..[88,3134+32])
                                        None
                                    <case>
                                      pattern (typing/includecore.ml[89,3167+12]..[89,3167+20])
                                        Ppat_construct "Some" (typing/includecore.ml[89,3167+12]..[89,3167+16])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[89,3167+17]..[89,3167+20])
                                            Ppat_var "err" (typing/includecore.ml[89,3167+17]..[89,3167+20])
                                      expression (typing/includecore.ml[89,3167+24]..[89,3167+67])
                                        Pexp_apply
                                        expression (typing/includecore.ml[89,3167+24]..[89,3167+29])
                                          Pexp_ident "raise" (typing/includecore.ml[89,3167+24]..[89,3167+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[89,3167+30]..[89,3167+67])
                                              Pexp_construct "Dont_match" (typing/includecore.ml[89,3167+31]..[89,3167+41])
                                              Some
                                                expression (typing/includecore.ml[89,3167+42]..[89,3167+66])
                                                  Pexp_construct "Primitive_mismatch" (typing/includecore.ml[89,3167+43]..[89,3167+61])
                                                  Some
                                                    expression (typing/includecore.ml[89,3167+62]..[89,3167+65])
                                                      Pexp_ident "err" (typing/includecore.ml[89,3167+62]..[89,3167+65])
                                        ]
                                  ]
                              <case>
                                pattern (typing/includecore.ml[91,3247+8]..[91,3247+23])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[91,3247+9]..[91,3247+19])
                                      Ppat_construct "Val_prim" (typing/includecore.ml[91,3247+9]..[91,3247+17])
                                      Some
                                        []
                                        pattern (typing/includecore.ml[91,3247+18]..[91,3247+19])
                                          Ppat_var "p" (typing/includecore.ml[91,3247+18]..[91,3247+19])
                                    pattern (typing/includecore.ml[91,3247+21]..[91,3247+22])
                                      Ppat_any
                                  ]
                                expression (typing/includecore.ml[92,3274+10]..[96,3421+30])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[92,3274+14]..[92,3274+16])
                                        Ppat_var "pc" (typing/includecore.ml[92,3274+14]..[92,3274+16])
                                      expression (typing/includecore.ml[93,3293+12]..[94,3350+57])
                                        Pexp_record
                                        [
                                          "pc_desc" (typing/includecore.ml[93,3293+14]..[93,3293+21])
                                            expression (typing/includecore.ml[93,3293+24]..[93,3293+25])
                                              Pexp_ident "p" (typing/includecore.ml[93,3293+24]..[93,3293+25])
                                          "pc_type" (typing/includecore.ml[93,3293+27]..[93,3293+34])
                                            expression (typing/includecore.ml[93,3293+37]..[93,3293+55])
                                              Pexp_field
                                              expression (typing/includecore.ml[93,3293+37]..[93,3293+40])
                                                Pexp_ident "vd2" (typing/includecore.ml[93,3293+37]..[93,3293+40])
                                              "Types.val_type" (typing/includecore.ml[93,3293+41]..[93,3293+55])
                                          "pc_env" (typing/includecore.ml[94,3350+14]..[94,3350+20])
                                            expression (typing/includecore.ml[94,3350+23]..[94,3350+26])
                                              Pexp_ident "env" (typing/includecore.ml[94,3350+23]..[94,3350+26])
                                          "pc_loc" (typing/includecore.ml[94,3350+28]..[94,3350+34])
                                            expression (typing/includecore.ml[94,3350+37]..[94,3350+54])
                                              Pexp_field
                                              expression (typing/includecore.ml[94,3350+37]..[94,3350+40])
                                                Pexp_ident "vd1" (typing/includecore.ml[94,3350+37]..[94,3350+40])
                                              "Types.val_loc" (typing/includecore.ml[94,3350+41]..[94,3350+54])
                                        ]
                                        None
                                  ]
                                  expression (typing/includecore.ml[96,3421+10]..[96,3421+30])
                                    Pexp_construct "Tcoerce_primitive" (typing/includecore.ml[96,3421+10]..[96,3421+27])
                                    Some
                                      expression (typing/includecore.ml[96,3421+28]..[96,3421+30])
                                        Pexp_ident "pc" (typing/includecore.ml[96,3421+28]..[96,3421+30])
                              <case>
                                pattern (typing/includecore.ml[97,3452+8]..[97,3452+23])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[97,3452+9]..[97,3452+10])
                                      Ppat_any
                                    pattern (typing/includecore.ml[97,3452+12]..[97,3452+22])
                                      Ppat_construct "Val_prim" (typing/includecore.ml[97,3452+12]..[97,3452+20])
                                      Some
                                        []
                                        pattern (typing/includecore.ml[97,3452+21]..[97,3452+22])
                                          Ppat_any
                                  ]
                                expression (typing/includecore.ml[97,3452+27]..[97,3452+61])
                                  Pexp_apply
                                  expression (typing/includecore.ml[97,3452+27]..[97,3452+32])
                                    Pexp_ident "raise" (typing/includecore.ml[97,3452+27]..[97,3452+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[97,3452+33]..[97,3452+61])
                                        Pexp_construct "Dont_match" (typing/includecore.ml[97,3452+34]..[97,3452+44])
                                        Some
                                          expression (typing/includecore.ml[97,3452+45]..[97,3452+60])
                                            Pexp_construct "Not_a_primitive" (typing/includecore.ml[97,3452+45]..[97,3452+60])
                                            None
                                  ]
                              <case>
                                pattern (typing/includecore.ml[98,3514+8]..[98,3514+14])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[98,3514+9]..[98,3514+10])
                                      Ppat_any
                                    pattern (typing/includecore.ml[98,3514+12]..[98,3514+13])
                                      Ppat_any
                                  ]
                                expression (typing/includecore.ml[98,3514+18]..[98,3514+30])
                                  Pexp_construct "Tcoerce_none" (typing/includecore.ml[98,3514+18]..[98,3514+30])
                                  None
                            ]
                      ]
    ]
  structure_item (typing/includecore.ml[103,3631+0]..[114,4095+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[103,3631+4]..[103,3631+13])
          Ppat_var "is_absrow" (typing/includecore.ml[103,3631+4]..[103,3631+13])
        expression (typing/includecore.ml[103,3631+14]..[114,4095+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[103,3631+14]..[103,3631+17])
            Ppat_var "env" (typing/includecore.ml[103,3631+14]..[103,3631+17])
          expression (typing/includecore.ml[103,3631+18]..[114,4095+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[103,3631+18]..[103,3631+20])
              Ppat_var "ty" (typing/includecore.ml[103,3631+18]..[103,3631+20])
            expression (typing/includecore.ml[104,3654+2]..[114,4095+14])
              Pexp_match
              expression (typing/includecore.ml[104,3654+8]..[104,3654+19])
                Pexp_apply
                expression (typing/includecore.ml[104,3654+8]..[104,3654+16])
                  Pexp_ident "get_desc" (typing/includecore.ml[104,3654+8]..[104,3654+16])
                [
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[104,3654+17]..[104,3654+19])
                      Pexp_ident "ty" (typing/includecore.ml[104,3654+17]..[104,3654+19])
                ]
              [
                <case>
                  pattern (typing/includecore.ml[105,3679+4]..[105,3679+27])
                    Ppat_construct "Tconstr" (typing/includecore.ml[105,3679+4]..[105,3679+11])
                    Some
                      []
                      pattern (typing/includecore.ml[105,3679+11]..[105,3679+27])
                        Ppat_tuple
                        [
                          pattern (typing/includecore.ml[105,3679+12]..[105,3679+20])
                            Ppat_construct "Pident" (typing/includecore.ml[105,3679+12]..[105,3679+18])
                            Some
                              []
                              pattern (typing/includecore.ml[105,3679+19]..[105,3679+20])
                                Ppat_any
                          pattern (typing/includecore.ml[105,3679+22]..[105,3679+23])
                            Ppat_any
                          pattern (typing/includecore.ml[105,3679+25]..[105,3679+26])
                            Ppat_any
                        ]
                  expression (typing/includecore.ml[110,3970+6]..[113,4085+9])
                    Pexp_match
                    expression (typing/includecore.ml[110,3970+18]..[110,3970+53])
                      Pexp_apply
                      expression (typing/includecore.ml[110,3970+18]..[110,3970+26])
                        Pexp_ident "get_desc" (typing/includecore.ml[110,3970+18]..[110,3970+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[110,3970+27]..[110,3970+53])
                            Pexp_apply
                            expression (typing/includecore.ml[110,3970+28]..[110,3970+45])
                              Pexp_ident "Ctype.expand_head" (typing/includecore.ml[110,3970+28]..[110,3970+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[110,3970+46]..[110,3970+49])
                                  Pexp_ident "env" (typing/includecore.ml[110,3970+46]..[110,3970+49])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[110,3970+50]..[110,3970+52])
                                  Pexp_ident "ty" (typing/includecore.ml[110,3970+50]..[110,3970+52])
                            ]
                      ]
                    [
                      <case>
                        pattern (typing/includecore.ml[111,4029+8]..[111,4029+28])
                          Ppat_or
                          pattern (typing/includecore.ml[111,4029+8]..[111,4029+17])
                            Ppat_construct "Tobject" (typing/includecore.ml[111,4029+8]..[111,4029+15])
                            Some
                              []
                              pattern (typing/includecore.ml[111,4029+16]..[111,4029+17])
                                Ppat_any
                          pattern (typing/includecore.ml[111,4029+18]..[111,4029+28])
                            Ppat_construct "Tvariant" (typing/includecore.ml[111,4029+18]..[111,4029+26])
                            Some
                              []
                              pattern (typing/includecore.ml[111,4029+27]..[111,4029+28])
                                Ppat_any
                        expression (typing/includecore.ml[111,4029+32]..[111,4029+36])
                          Pexp_construct "true" (typing/includecore.ml[111,4029+32]..[111,4029+36])
                          None
                      <case>
                        pattern (typing/includecore.ml[112,4066+8]..[112,4066+9])
                          Ppat_any
                        expression (typing/includecore.ml[112,4066+13]..[112,4066+18])
                          Pexp_construct "false" (typing/includecore.ml[112,4066+13]..[112,4066+18])
                          None
                    ]
                <case>
                  pattern (typing/includecore.ml[114,4095+4]..[114,4095+5])
                    Ppat_any
                  expression (typing/includecore.ml[114,4095+9]..[114,4095+14])
                    Pexp_construct "false" (typing/includecore.ml[114,4095+9]..[114,4095+14])
                    None
              ]
    ]
  structure_item (typing/includecore.ml[118,4154+0]..[121,4220+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[118,4154+4]..[118,4154+10])
          Ppat_var "choose" (typing/includecore.ml[118,4154+4]..[118,4154+10])
        expression (typing/includecore.ml[118,4154+11]..[121,4220+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[118,4154+11]..[118,4154+14])
            Ppat_var "ord" (typing/includecore.ml[118,4154+11]..[118,4154+14])
          expression (typing/includecore.ml[118,4154+15]..[121,4220+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[118,4154+15]..[118,4154+20])
              Ppat_var "first" (typing/includecore.ml[118,4154+15]..[118,4154+20])
            expression (typing/includecore.ml[118,4154+21]..[121,4220+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[118,4154+21]..[118,4154+27])
                Ppat_var "second" (typing/includecore.ml[118,4154+21]..[118,4154+27])
              expression (typing/includecore.ml[119,4184+2]..[121,4220+20])
                Pexp_match
                expression (typing/includecore.ml[119,4184+8]..[119,4184+11])
                  Pexp_ident "ord" (typing/includecore.ml[119,4184+8]..[119,4184+11])
                [
                  <case>
                    pattern (typing/includecore.ml[120,4201+4]..[120,4201+9])
                      Ppat_construct "First" (typing/includecore.ml[120,4201+4]..[120,4201+9])
                      None
                    expression (typing/includecore.ml[120,4201+13]..[120,4201+18])
                      Pexp_ident "first" (typing/includecore.ml[120,4201+13]..[120,4201+18])
                  <case>
                    pattern (typing/includecore.ml[121,4220+4]..[121,4220+10])
                      Ppat_construct "Second" (typing/includecore.ml[121,4220+4]..[121,4220+10])
                      None
                    expression (typing/includecore.ml[121,4220+14]..[121,4220+20])
                      Pexp_ident "second" (typing/includecore.ml[121,4220+14]..[121,4220+20])
                ]
    ]
  structure_item (typing/includecore.ml[123,4242+0]..[126,4335+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[123,4242+4]..[123,4242+16])
          Ppat_var "choose_other" (typing/includecore.ml[123,4242+4]..[123,4242+16])
        expression (typing/includecore.ml[123,4242+17]..[126,4335+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[123,4242+17]..[123,4242+20])
            Ppat_var "ord" (typing/includecore.ml[123,4242+17]..[123,4242+20])
          expression (typing/includecore.ml[123,4242+21]..[126,4335+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[123,4242+21]..[123,4242+26])
              Ppat_var "first" (typing/includecore.ml[123,4242+21]..[123,4242+26])
            expression (typing/includecore.ml[123,4242+27]..[126,4335+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[123,4242+27]..[123,4242+33])
                Ppat_var "second" (typing/includecore.ml[123,4242+27]..[123,4242+33])
              expression (typing/includecore.ml[124,4278+2]..[126,4335+39])
                Pexp_match
                expression (typing/includecore.ml[124,4278+8]..[124,4278+11])
                  Pexp_ident "ord" (typing/includecore.ml[124,4278+8]..[124,4278+11])
                [
                  <case>
                    pattern (typing/includecore.ml[125,4295+4]..[125,4295+9])
                      Ppat_construct "First" (typing/includecore.ml[125,4295+4]..[125,4295+9])
                      None
                    expression (typing/includecore.ml[125,4295+13]..[125,4295+39])
                      Pexp_apply
                      expression (typing/includecore.ml[125,4295+13]..[125,4295+19])
                        Pexp_ident "choose" (typing/includecore.ml[125,4295+13]..[125,4295+19])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[125,4295+20]..[125,4295+26])
                            Pexp_construct "Second" (typing/includecore.ml[125,4295+20]..[125,4295+26])
                            None
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[125,4295+27]..[125,4295+32])
                            Pexp_ident "first" (typing/includecore.ml[125,4295+27]..[125,4295+32])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[125,4295+33]..[125,4295+39])
                            Pexp_ident "second" (typing/includecore.ml[125,4295+33]..[125,4295+39])
                      ]
                  <case>
                    pattern (typing/includecore.ml[126,4335+4]..[126,4335+10])
                      Ppat_construct "Second" (typing/includecore.ml[126,4335+4]..[126,4335+10])
                      None
                    expression (typing/includecore.ml[126,4335+14]..[126,4335+39])
                      Pexp_apply
                      expression (typing/includecore.ml[126,4335+14]..[126,4335+20])
                        Pexp_ident "choose" (typing/includecore.ml[126,4335+14]..[126,4335+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[126,4335+21]..[126,4335+26])
                            Pexp_construct "First" (typing/includecore.ml[126,4335+21]..[126,4335+26])
                            None
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[126,4335+27]..[126,4335+32])
                            Pexp_ident "first" (typing/includecore.ml[126,4335+27]..[126,4335+32])
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[126,4335+33]..[126,4335+39])
                            Pexp_ident "second" (typing/includecore.ml[126,4335+33]..[126,4335+39])
                      ]
                ]
    ]
  structure_item (typing/includecore.ml[129,4438+0]..[134,4572+20])
    Pstr_type Rec
    [
      type_declaration "privacy_mismatch" (typing/includecore.ml[129,4438+5]..[129,4438+21]) (typing/includecore.ml[129,4438+0]..[134,4572+20])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[130,4462+2]..[130,4462+29])
                "Private_type_abbreviation" (typing/includecore.ml[130,4462+4]..[130,4462+29])
                []
                None
              (typing/includecore.ml[131,4492+2]..[131,4492+24])
                "Private_variant_type" (typing/includecore.ml[131,4492+4]..[131,4492+24])
                []
                None
              (typing/includecore.ml[132,4517+2]..[132,4517+23])
                "Private_record_type" (typing/includecore.ml[132,4517+4]..[132,4517+23])
                []
                None
              (typing/includecore.ml[133,4541+2]..[133,4541+30])
                "Private_extensible_variant" (typing/includecore.ml[133,4541+4]..[133,4541+30])
                []
                None
              (typing/includecore.ml[134,4572+2]..[134,4572+20])
                "Private_row_type" (typing/includecore.ml[134,4572+4]..[134,4572+20])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[136,4594+0]..[138,4654+26])
    Pstr_type Rec
    [
      type_declaration "label_mismatch" (typing/includecore.ml[136,4594+5]..[136,4594+19]) (typing/includecore.ml[136,4594+0]..[138,4654+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[137,4616+2]..[137,4616+37])
                "Type" (typing/includecore.ml[137,4616+4]..[137,4616+8])
                [
                  core_type (typing/includecore.ml[137,4616+12]..[137,4616+37])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[137,4616+12]..[137,4616+37])
                    []
                ]
                None
              (typing/includecore.ml[138,4654+2]..[138,4654+26])
                "Mutability" (typing/includecore.ml[138,4654+4]..[138,4654+14])
                [
                  core_type (typing/includecore.ml[138,4654+18]..[138,4654+26])
                    Ptyp_constr "position" (typing/includecore.ml[138,4654+18]..[138,4654+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[140,4682+0]..[142,4772+28])
    Pstr_type Rec
    [
      type_declaration "record_change" (typing/includecore.ml[140,4682+5]..[140,4682+18]) (typing/includecore.ml[140,4682+0]..[142,4772+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/includecore.ml[141,4703+2]..[142,4772+28])
              Ptyp_constr "Diffing_with_keys.change" (typing/includecore.ml[142,4772+4]..[142,4772+28])
              [
                core_type (typing/includecore.ml[141,4703+3]..[141,4703+26])
                  Ptyp_constr "Types.label_declaration" (typing/includecore.ml[141,4703+3]..[141,4703+26])
                  []
                core_type (typing/includecore.ml[141,4703+28]..[141,4703+51])
                  Ptyp_constr "Types.label_declaration" (typing/includecore.ml[141,4703+28]..[141,4703+51])
                  []
                core_type (typing/includecore.ml[141,4703+53]..[141,4703+67])
                  Ptyp_constr "label_mismatch" (typing/includecore.ml[141,4703+53]..[141,4703+67])
                  []
              ]
    ]
  structure_item (typing/includecore.ml[144,4802+0]..[146,4866+44])
    Pstr_type Rec
    [
      type_declaration "record_mismatch" (typing/includecore.ml[144,4802+5]..[144,4802+20]) (typing/includecore.ml[144,4802+0]..[146,4866+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[145,4825+2]..[145,4825+40])
                "Label_mismatch" (typing/includecore.ml[145,4825+4]..[145,4825+18])
                [
                  core_type (typing/includecore.ml[145,4825+22]..[145,4825+40])
                    Ptyp_constr "list" (typing/includecore.ml[145,4825+36]..[145,4825+40])
                    [
                      core_type (typing/includecore.ml[145,4825+22]..[145,4825+35])
                        Ptyp_constr "record_change" (typing/includecore.ml[145,4825+22]..[145,4825+35])
                        []
                    ]
                ]
                None
              (typing/includecore.ml[146,4866+2]..[146,4866+44])
                "Unboxed_float_representation" (typing/includecore.ml[146,4866+4]..[146,4866+32])
                [
                  core_type (typing/includecore.ml[146,4866+36]..[146,4866+44])
                    Ptyp_constr "position" (typing/includecore.ml[146,4866+36]..[146,4866+44])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[148,4912+0]..[153,5049+36])
    Pstr_type Rec
    [
      type_declaration "constructor_mismatch" (typing/includecore.ml[148,4912+5]..[148,4912+25]) (typing/includecore.ml[148,4912+0]..[153,5049+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[149,4940+2]..[149,4940+37])
                "Type" (typing/includecore.ml[149,4940+4]..[149,4940+8])
                [
                  core_type (typing/includecore.ml[149,4940+12]..[149,4940+37])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[149,4940+12]..[149,4940+37])
                    []
                ]
                None
              (typing/includecore.ml[150,4978+2]..[150,4978+9])
                "Arity" (typing/includecore.ml[150,4978+4]..[150,4978+9])
                []
                None
              (typing/includecore.ml[151,4988+2]..[151,4988+39])
                "Inline_record" (typing/includecore.ml[151,4988+4]..[151,4988+17])
                [
                  core_type (typing/includecore.ml[151,4988+21]..[151,4988+39])
                    Ptyp_constr "list" (typing/includecore.ml[151,4988+35]..[151,4988+39])
                    [
                      core_type (typing/includecore.ml[151,4988+21]..[151,4988+34])
                        Ptyp_constr "record_change" (typing/includecore.ml[151,4988+21]..[151,4988+34])
                        []
                    ]
                ]
                None
              (typing/includecore.ml[152,5028+2]..[152,5028+20])
                "Kind" (typing/includecore.ml[152,5028+4]..[152,5028+8])
                [
                  core_type (typing/includecore.ml[152,5028+12]..[152,5028+20])
                    Ptyp_constr "position" (typing/includecore.ml[152,5028+12]..[152,5028+20])
                    []
                ]
                None
              (typing/includecore.ml[153,5049+2]..[153,5049+36])
                "Explicit_return_type" (typing/includecore.ml[153,5049+4]..[153,5049+24])
                [
                  core_type (typing/includecore.ml[153,5049+28]..[153,5049+36])
                    Ptyp_constr "position" (typing/includecore.ml[153,5049+28]..[153,5049+36])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[155,5087+0]..[160,5301+50])
    Pstr_type Rec
    [
      type_declaration "extension_constructor_mismatch" (typing/includecore.ml[155,5087+5]..[155,5087+35]) (typing/includecore.ml[155,5087+0]..[160,5301+50])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[156,5125+2]..[156,5125+23])
                "Constructor_privacy" (typing/includecore.ml[156,5125+4]..[156,5125+23])
                []
                None
              (typing/includecore.ml[157,5149+2]..[160,5301+50])
                "Constructor_mismatch" (typing/includecore.ml[157,5149+4]..[157,5149+24])
                [
                  core_type (typing/includecore.ml[157,5149+28]..[157,5149+35])
                    Ptyp_constr "Ident.t" (typing/includecore.ml[157,5149+28]..[157,5149+35])
                    []
                  core_type (typing/includecore.ml[158,5185+30]..[158,5185+57])
                    Ptyp_constr "Types.extension_constructor" (typing/includecore.ml[158,5185+30]..[158,5185+57])
                    []
                  core_type (typing/includecore.ml[159,5243+30]..[159,5243+57])
                    Ptyp_constr "Types.extension_constructor" (typing/includecore.ml[159,5243+30]..[159,5243+57])
                    []
                  core_type (typing/includecore.ml[160,5301+30]..[160,5301+50])
                    Ptyp_constr "constructor_mismatch" (typing/includecore.ml[160,5301+30]..[160,5301+50])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[162,5353+0]..[167,5543+38])
    Pstr_type Rec
    [
      type_declaration "private_variant_mismatch" (typing/includecore.ml[162,5353+5]..[162,5353+29]) (typing/includecore.ml[162,5353+0]..[167,5543+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[163,5385+2]..[163,5385+21])
                "Only_outer_closed" (typing/includecore.ml[163,5385+4]..[163,5385+21])
                []
                None
              (typing/includecore.ml[164,5450+2]..[164,5450+32])
                "Missing" (typing/includecore.ml[164,5450+4]..[164,5450+11])
                [
                  core_type (typing/includecore.ml[164,5450+15]..[164,5450+23])
                    Ptyp_constr "position" (typing/includecore.ml[164,5450+15]..[164,5450+23])
                    []
                  core_type (typing/includecore.ml[164,5450+26]..[164,5450+32])
                    Ptyp_constr "string" (typing/includecore.ml[164,5450+26]..[164,5450+32])
                    []
                ]
                None
              (typing/includecore.ml[165,5483+2]..[165,5483+22])
                "Presence" (typing/includecore.ml[165,5483+4]..[165,5483+12])
                [
                  core_type (typing/includecore.ml[165,5483+16]..[165,5483+22])
                    Ptyp_constr "string" (typing/includecore.ml[165,5483+16]..[165,5483+22])
                    []
                ]
                None
              (typing/includecore.ml[166,5506+2]..[166,5506+36])
                "Incompatible_types_for" (typing/includecore.ml[166,5506+4]..[166,5506+26])
                [
                  core_type (typing/includecore.ml[166,5506+30]..[166,5506+36])
                    Ptyp_constr "string" (typing/includecore.ml[166,5506+30]..[166,5506+36])
                    []
                ]
                None
              (typing/includecore.ml[167,5543+2]..[167,5543+38])
                "Types" (typing/includecore.ml[167,5543+4]..[167,5543+9])
                [
                  core_type (typing/includecore.ml[167,5543+13]..[167,5543+38])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[167,5543+13]..[167,5543+38])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[169,5583+0]..[171,5636+38])
    Pstr_type Rec
    [
      type_declaration "private_object_mismatch" (typing/includecore.ml[169,5583+5]..[169,5583+28]) (typing/includecore.ml[169,5583+0]..[171,5636+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[170,5614+2]..[170,5614+21])
                "Missing" (typing/includecore.ml[170,5614+4]..[170,5614+11])
                [
                  core_type (typing/includecore.ml[170,5614+15]..[170,5614+21])
                    Ptyp_constr "string" (typing/includecore.ml[170,5614+15]..[170,5614+21])
                    []
                ]
                None
              (typing/includecore.ml[171,5636+2]..[171,5636+38])
                "Types" (typing/includecore.ml[171,5636+4]..[171,5636+9])
                [
                  core_type (typing/includecore.ml[171,5636+13]..[171,5636+38])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[171,5636+13]..[171,5636+38])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[173,5676+0]..[175,5764+28])
    Pstr_type Rec
    [
      type_declaration "variant_change" (typing/includecore.ml[173,5676+5]..[173,5676+19]) (typing/includecore.ml[173,5676+0]..[175,5764+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (typing/includecore.ml[174,5698+2]..[175,5764+28])
              Ptyp_constr "Diffing_with_keys.change" (typing/includecore.ml[175,5764+4]..[175,5764+28])
              [
                core_type (typing/includecore.ml[174,5698+3]..[174,5698+38])
                  Ptyp_alias "l"
                  core_type (typing/includecore.ml[174,5698+3]..[174,5698+32])
                    Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[174,5698+3]..[174,5698+32])
                    []
                core_type (typing/includecore.ml[174,5698+40]..[174,5698+42])
                  Ptyp_var l
                core_type (typing/includecore.ml[174,5698+44]..[174,5698+64])
                  Ptyp_constr "constructor_mismatch" (typing/includecore.ml[174,5698+44]..[174,5698+64])
                  []
              ]
    ]
  structure_item (typing/includecore.ml[177,5794+0]..[189,6229+43])
    Pstr_type Rec
    [
      type_declaration "type_mismatch" (typing/includecore.ml[177,5794+5]..[177,5794+18]) (typing/includecore.ml[177,5794+0]..[189,6229+43])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/includecore.ml[178,5815+2]..[178,5815+9])
                "Arity" (typing/includecore.ml[178,5815+4]..[178,5815+9])
                []
                None
              (typing/includecore.ml[179,5825+2]..[179,5825+31])
                "Privacy" (typing/includecore.ml[179,5825+4]..[179,5825+11])
                [
                  core_type (typing/includecore.ml[179,5825+15]..[179,5825+31])
                    Ptyp_constr "privacy_mismatch" (typing/includecore.ml[179,5825+15]..[179,5825+31])
                    []
                ]
                None
              (typing/includecore.ml[180,5857+2]..[180,5857+8])
                "Kind" (typing/includecore.ml[180,5857+4]..[180,5857+8])
                []
                None
              (typing/includecore.ml[181,5866+2]..[181,5866+43])
                "Constraint" (typing/includecore.ml[181,5866+4]..[181,5866+14])
                [
                  core_type (typing/includecore.ml[181,5866+18]..[181,5866+43])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[181,5866+18]..[181,5866+43])
                    []
                ]
                None
              (typing/includecore.ml[182,5910+2]..[182,5910+41])
                "Manifest" (typing/includecore.ml[182,5910+4]..[182,5910+12])
                [
                  core_type (typing/includecore.ml[182,5910+16]..[182,5910+41])
                    Ptyp_constr "Errortrace.equality_error" (typing/includecore.ml[182,5910+16]..[182,5910+41])
                    []
                ]
                None
              (typing/includecore.ml[183,5952+2]..[183,5952+71])
                "Private_variant" (typing/includecore.ml[183,5952+4]..[183,5952+19])
                [
                  core_type (typing/includecore.ml[183,5952+23]..[183,5952+32])
                    Ptyp_constr "type_expr" (typing/includecore.ml[183,5952+23]..[183,5952+32])
                    []
                  core_type (typing/includecore.ml[183,5952+35]..[183,5952+44])
                    Ptyp_constr "type_expr" (typing/includecore.ml[183,5952+35]..[183,5952+44])
                    []
                  core_type (typing/includecore.ml[183,5952+47]..[183,5952+71])
                    Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[183,5952+47]..[183,5952+71])
                    []
                ]
                None
              (typing/includecore.ml[184,6024+2]..[184,6024+69])
                "Private_object" (typing/includecore.ml[184,6024+4]..[184,6024+18])
                [
                  core_type (typing/includecore.ml[184,6024+22]..[184,6024+31])
                    Ptyp_constr "type_expr" (typing/includecore.ml[184,6024+22]..[184,6024+31])
                    []
                  core_type (typing/includecore.ml[184,6024+34]..[184,6024+43])
                    Ptyp_constr "type_expr" (typing/includecore.ml[184,6024+34]..[184,6024+43])
                    []
                  core_type (typing/includecore.ml[184,6024+46]..[184,6024+69])
                    Ptyp_constr "private_object_mismatch" (typing/includecore.ml[184,6024+46]..[184,6024+69])
                    []
                ]
                None
              (typing/includecore.ml[185,6094+2]..[185,6094+12])
                "Variance" (typing/includecore.ml[185,6094+4]..[185,6094+12])
                []
                None
              (typing/includecore.ml[186,6107+2]..[186,6107+38])
                "Record_mismatch" (typing/includecore.ml[186,6107+4]..[186,6107+19])
                [
                  core_type (typing/includecore.ml[186,6107+23]..[186,6107+38])
                    Ptyp_constr "record_mismatch" (typing/includecore.ml[186,6107+23]..[186,6107+38])
                    []
                ]
                None
              (typing/includecore.ml[187,6146+2]..[187,6146+43])
                "Variant_mismatch" (typing/includecore.ml[187,6146+4]..[187,6146+20])
                [
                  core_type (typing/includecore.ml[187,6146+24]..[187,6146+43])
                    Ptyp_constr "list" (typing/includecore.ml[187,6146+39]..[187,6146+43])
                    [
                      core_type (typing/includecore.ml[187,6146+24]..[187,6146+38])
                        Ptyp_constr "variant_change" (typing/includecore.ml[187,6146+24]..[187,6146+38])
                        []
                    ]
                ]
                None
              (typing/includecore.ml[188,6190+2]..[188,6190+38])
                "Unboxed_representation" (typing/includecore.ml[188,6190+4]..[188,6190+26])
                [
                  core_type (typing/includecore.ml[188,6190+30]..[188,6190+38])
                    Ptyp_constr "position" (typing/includecore.ml[188,6190+30]..[188,6190+38])
                    []
                ]
                None
              (typing/includecore.ml[189,6229+2]..[189,6229+43])
                "Immediate" (typing/includecore.ml[189,6229+4]..[189,6229+13])
                [
                  core_type (typing/includecore.ml[189,6229+17]..[189,6229+43])
                    Ptyp_constr "Type_immediacy.Violation.t" (typing/includecore.ml[189,6229+17]..[189,6229+43])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/includecore.ml[191,6274+0]..[209,7086+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[191,6274+4]..[191,6274+29])
          Ppat_var "report_primitive_mismatch" (typing/includecore.ml[191,6274+4]..[191,6274+29])
        expression (typing/includecore.ml[191,6274+30]..[209,7086+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[191,6274+30]..[191,6274+35])
            Ppat_var "first" (typing/includecore.ml[191,6274+30]..[191,6274+35])
          expression (typing/includecore.ml[191,6274+36]..[209,7086+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[191,6274+36]..[191,6274+42])
              Ppat_var "second" (typing/includecore.ml[191,6274+36]..[191,6274+42])
            expression (typing/includecore.ml[191,6274+43]..[209,7086+33]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[191,6274+43]..[191,6274+46])
                Ppat_var "ppf" (typing/includecore.ml[191,6274+43]..[191,6274+46])
              expression (typing/includecore.ml[191,6274+47]..[209,7086+33]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[191,6274+47]..[191,6274+50])
                  Ppat_var "err" (typing/includecore.ml[191,6274+47]..[191,6274+50])
                expression (typing/includecore.ml[192,6327+2]..[209,7086+33])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/includecore.ml[192,6327+6]..[192,6327+8])
                        Ppat_var "pr" (typing/includecore.ml[192,6327+6]..[192,6327+8])
                      expression (typing/includecore.ml[192,6327+9]..[192,6327+37]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[192,6327+9]..[192,6327+12])
                          Ppat_var "fmt" (typing/includecore.ml[192,6327+9]..[192,6327+12])
                        expression (typing/includecore.ml[192,6327+15]..[192,6327+37])
                          Pexp_apply
                          expression (typing/includecore.ml[192,6327+15]..[192,6327+29])
                            Pexp_ident "Format.fprintf" (typing/includecore.ml[192,6327+15]..[192,6327+29])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[192,6327+30]..[192,6327+33])
                                Pexp_ident "ppf" (typing/includecore.ml[192,6327+30]..[192,6327+33])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[192,6327+34]..[192,6327+37])
                                Pexp_ident "fmt" (typing/includecore.ml[192,6327+34]..[192,6327+37])
                          ]
                  ]
                  expression (typing/includecore.ml[193,6368+2]..[209,7086+33])
                    Pexp_match
                    expression (typing/includecore.ml[193,6368+8]..[193,6368+34])
                      Pexp_constraint
                      expression (typing/includecore.ml[193,6368+9]..[193,6368+12])
                        Pexp_ident "err" (typing/includecore.ml[193,6368+9]..[193,6368+12])
                      core_type (typing/includecore.ml[193,6368+15]..[193,6368+33])
                        Ptyp_constr "primitive_mismatch" (typing/includecore.ml[193,6368+15]..[193,6368+33])
                        []
                    [
                      <case>
                        pattern (typing/includecore.ml[194,6408+4]..[194,6408+8])
                          Ppat_construct "Name" (typing/includecore.ml[194,6408+4]..[194,6408+8])
                          None
                        expression (typing/includecore.ml[195,6420+6]..[195,6420+55])
                          Pexp_apply
                          expression (typing/includecore.ml[195,6420+6]..[195,6420+8])
                            Pexp_ident "pr" (typing/includecore.ml[195,6420+6]..[195,6420+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[195,6420+9]..[195,6420+55])
                                Pexp_constant PConst_string("The names of the primitives are not the same",(typing/includecore.ml[195,6420+10]..[195,6420+54]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[196,6476+4]..[196,6476+9])
                          Ppat_construct "Arity" (typing/includecore.ml[196,6476+4]..[196,6476+9])
                          None
                        expression (typing/includecore.ml[197,6489+6]..[198,6563+76])
                          Pexp_apply
                          expression (typing/includecore.ml[197,6489+6]..[197,6489+8])
                            Pexp_ident "pr" (typing/includecore.ml[197,6489+6]..[197,6489+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[197,6489+9]..[198,6563+76])
                                Pexp_constant PConst_string("The syntactic arities of these primitives were not the same.@ (They must have the same number of arrows present in the source.)",(typing/includecore.ml[197,6489+10]..[198,6563+75]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[199,6640+4]..[199,6640+16])
                          Ppat_construct "No_alloc" (typing/includecore.ml[199,6640+4]..[199,6640+12])
                          Some
                            []
                            pattern (typing/includecore.ml[199,6640+13]..[199,6640+16])
                              Ppat_var "ord" (typing/includecore.ml[199,6640+13]..[199,6640+16])
                        expression (typing/includecore.ml[200,6660+6]..[202,6775+39])
                          Pexp_apply
                          expression (typing/includecore.ml[200,6660+6]..[200,6660+8])
                            Pexp_ident "pr" (typing/includecore.ml[200,6660+6]..[200,6660+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[200,6660+9]..[200,6660+54])
                                Pexp_constant PConst_string("%s primitive is [@@@@noalloc] but %s is not",(typing/includecore.ml[200,6660+10]..[200,6660+53]),None)
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[201,6715+8]..[201,6715+59])
                                Pexp_apply
                                expression (typing/includecore.ml[201,6715+9]..[201,6715+32])
                                  Pexp_ident "String.capitalize_ascii" (typing/includecore.ml[201,6715+9]..[201,6715+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[201,6715+33]..[201,6715+58])
                                      Pexp_apply
                                      expression (typing/includecore.ml[201,6715+34]..[201,6715+40])
                                        Pexp_ident "choose" (typing/includecore.ml[201,6715+34]..[201,6715+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[201,6715+41]..[201,6715+44])
                                            Pexp_ident "ord" (typing/includecore.ml[201,6715+41]..[201,6715+44])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[201,6715+45]..[201,6715+50])
                                            Pexp_ident "first" (typing/includecore.ml[201,6715+45]..[201,6715+50])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[201,6715+51]..[201,6715+57])
                                            Pexp_ident "second" (typing/includecore.ml[201,6715+51]..[201,6715+57])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[202,6775+8]..[202,6775+39])
                                Pexp_apply
                                expression (typing/includecore.ml[202,6775+9]..[202,6775+21])
                                  Pexp_ident "choose_other" (typing/includecore.ml[202,6775+9]..[202,6775+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[202,6775+22]..[202,6775+25])
                                      Pexp_ident "ord" (typing/includecore.ml[202,6775+22]..[202,6775+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[202,6775+26]..[202,6775+31])
                                      Pexp_ident "first" (typing/includecore.ml[202,6775+26]..[202,6775+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[202,6775+32]..[202,6775+38])
                                      Pexp_ident "second" (typing/includecore.ml[202,6775+32]..[202,6775+38])
                                ]
                          ]
                      <case>
                        pattern (typing/includecore.ml[203,6815+4]..[203,6815+15])
                          Ppat_construct "Native_name" (typing/includecore.ml[203,6815+4]..[203,6815+15])
                          None
                        expression (typing/includecore.ml[204,6834+6]..[204,6834+62])
                          Pexp_apply
                          expression (typing/includecore.ml[204,6834+6]..[204,6834+8])
                            Pexp_ident "pr" (typing/includecore.ml[204,6834+6]..[204,6834+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[204,6834+9]..[204,6834+62])
                                Pexp_constant PConst_string("The native names of the primitives are not the same",(typing/includecore.ml[204,6834+10]..[204,6834+61]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[205,6897+4]..[205,6897+15])
                          Ppat_construct "Result_repr" (typing/includecore.ml[205,6897+4]..[205,6897+15])
                          None
                        expression (typing/includecore.ml[206,6916+6]..[206,6916+69])
                          Pexp_apply
                          expression (typing/includecore.ml[206,6916+6]..[206,6916+8])
                            Pexp_ident "pr" (typing/includecore.ml[206,6916+6]..[206,6916+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[206,6916+9]..[206,6916+69])
                                Pexp_constant PConst_string("The two primitives' results have different representations",(typing/includecore.ml[206,6916+10]..[206,6916+68]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[207,6986+4]..[207,6986+19])
                          Ppat_construct "Argument_repr" (typing/includecore.ml[207,6986+4]..[207,6986+17])
                          Some
                            []
                            pattern (typing/includecore.ml[207,6986+18]..[207,6986+19])
                              Ppat_var "n" (typing/includecore.ml[207,6986+18]..[207,6986+19])
                        expression (typing/includecore.ml[208,7009+6]..[209,7086+33])
                          Pexp_apply
                          expression (typing/includecore.ml[208,7009+6]..[208,7009+8])
                            Pexp_ident "pr" (typing/includecore.ml[208,7009+6]..[208,7009+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[208,7009+9]..[208,7009+76])
                                Pexp_constant PConst_string("The two primitives' %d%s arguments have different representations",(typing/includecore.ml[208,7009+10]..[208,7009+75]),None)
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[209,7086+8]..[209,7086+9])
                                Pexp_ident "n" (typing/includecore.ml[209,7086+8]..[209,7086+9])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[209,7086+10]..[209,7086+33])
                                Pexp_apply
                                expression (typing/includecore.ml[209,7086+11]..[209,7086+30])
                                  Pexp_ident "Misc.ordinal_suffix" (typing/includecore.ml[209,7086+11]..[209,7086+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[209,7086+31]..[209,7086+32])
                                      Pexp_ident "n" (typing/includecore.ml[209,7086+31]..[209,7086+32])
                                ]
                          ]
                    ]
    ]
  structure_item (typing/includecore.ml[211,7121+0]..[222,7547+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[211,7121+4]..[211,7121+25])
          Ppat_var "report_value_mismatch" (typing/includecore.ml[211,7121+4]..[211,7121+25])
        expression (typing/includecore.ml[211,7121+26]..[222,7547+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[211,7121+26]..[211,7121+31])
            Ppat_var "first" (typing/includecore.ml[211,7121+26]..[211,7121+31])
          expression (typing/includecore.ml[211,7121+32]..[222,7547+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[211,7121+32]..[211,7121+38])
              Ppat_var "second" (typing/includecore.ml[211,7121+32]..[211,7121+38])
            expression (typing/includecore.ml[211,7121+39]..[222,7547+73]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[211,7121+39]..[211,7121+42])
                Ppat_var "env" (typing/includecore.ml[211,7121+39]..[211,7121+42])
              expression (typing/includecore.ml[211,7121+43]..[222,7547+73]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[211,7121+43]..[211,7121+46])
                  Ppat_var "ppf" (typing/includecore.ml[211,7121+43]..[211,7121+46])
                expression (typing/includecore.ml[211,7121+47]..[222,7547+73]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[211,7121+47]..[211,7121+50])
                    Ppat_var "err" (typing/includecore.ml[211,7121+47]..[211,7121+50])
                  expression (typing/includecore.ml[212,7174+2]..[222,7547+73])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includecore.ml[212,7174+6]..[212,7174+8])
                          Ppat_var "pr" (typing/includecore.ml[212,7174+6]..[212,7174+8])
                        expression (typing/includecore.ml[212,7174+9]..[212,7174+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[212,7174+9]..[212,7174+12])
                            Ppat_var "fmt" (typing/includecore.ml[212,7174+9]..[212,7174+12])
                          expression (typing/includecore.ml[212,7174+15]..[212,7174+37])
                            Pexp_apply
                            expression (typing/includecore.ml[212,7174+15]..[212,7174+29])
                              Pexp_ident "Format.fprintf" (typing/includecore.ml[212,7174+15]..[212,7174+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[212,7174+30]..[212,7174+33])
                                  Pexp_ident "ppf" (typing/includecore.ml[212,7174+30]..[212,7174+33])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[212,7174+34]..[212,7174+37])
                                  Pexp_ident "fmt" (typing/includecore.ml[212,7174+34]..[212,7174+37])
                            ]
                    ]
                    expression (typing/includecore.ml[213,7215+2]..[222,7547+73])
                      Pexp_sequence
                      expression (typing/includecore.ml[213,7215+2]..[213,7215+9])
                        Pexp_apply
                        expression (typing/includecore.ml[213,7215+2]..[213,7215+4])
                          Pexp_ident "pr" (typing/includecore.ml[213,7215+2]..[213,7215+4])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[213,7215+5]..[213,7215+9])
                              Pexp_constant PConst_string("@ ",(typing/includecore.ml[213,7215+6]..[213,7215+8]),None)
                        ]
                      expression (typing/includecore.ml[214,7226+2]..[222,7547+73])
                        Pexp_match
                        expression (typing/includecore.ml[214,7226+8]..[214,7226+30])
                          Pexp_constraint
                          expression (typing/includecore.ml[214,7226+9]..[214,7226+12])
                            Pexp_ident "err" (typing/includecore.ml[214,7226+9]..[214,7226+12])
                          core_type (typing/includecore.ml[214,7226+15]..[214,7226+29])
                            Ptyp_constr "value_mismatch" (typing/includecore.ml[214,7226+15]..[214,7226+29])
                            []
                        [
                          <case>
                            pattern (typing/includecore.ml[215,7262+4]..[215,7262+25])
                              Ppat_construct "Primitive_mismatch" (typing/includecore.ml[215,7262+4]..[215,7262+22])
                              Some
                                []
                                pattern (typing/includecore.ml[215,7262+23]..[215,7262+25])
                                  Ppat_var "pm" (typing/includecore.ml[215,7262+23]..[215,7262+25])
                            expression (typing/includecore.ml[216,7291+6]..[216,7291+51])
                              Pexp_apply
                              expression (typing/includecore.ml[216,7291+6]..[216,7291+31])
                                Pexp_ident "report_primitive_mismatch" (typing/includecore.ml[216,7291+6]..[216,7291+31])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[216,7291+32]..[216,7291+37])
                                    Pexp_ident "first" (typing/includecore.ml[216,7291+32]..[216,7291+37])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[216,7291+38]..[216,7291+44])
                                    Pexp_ident "second" (typing/includecore.ml[216,7291+38]..[216,7291+44])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[216,7291+45]..[216,7291+48])
                                    Pexp_ident "ppf" (typing/includecore.ml[216,7291+45]..[216,7291+48])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[216,7291+49]..[216,7291+51])
                                    Pexp_ident "pm" (typing/includecore.ml[216,7291+49]..[216,7291+51])
                              ]
                          <case>
                            pattern (typing/includecore.ml[217,7343+4]..[217,7343+19])
                              Ppat_construct "Not_a_primitive" (typing/includecore.ml[217,7343+4]..[217,7343+19])
                              None
                            expression (typing/includecore.ml[218,7366+6]..[218,7366+49])
                              Pexp_apply
                              expression (typing/includecore.ml[218,7366+6]..[218,7366+8])
                                Pexp_ident "pr" (typing/includecore.ml[218,7366+6]..[218,7366+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[218,7366+9]..[218,7366+49])
                                    Pexp_constant PConst_string("The implementation is not a primitive.",(typing/includecore.ml[218,7366+10]..[218,7366+48]),None)
                              ]
                          <case>
                            pattern (typing/includecore.ml[219,7416+4]..[219,7416+14])
                              Ppat_construct "Type" (typing/includecore.ml[219,7416+4]..[219,7416+8])
                              Some
                                []
                                pattern (typing/includecore.ml[219,7416+9]..[219,7416+14])
                                  Ppat_var "trace" (typing/includecore.ml[219,7416+9]..[219,7416+14])
                            expression (typing/includecore.ml[220,7434+6]..[222,7547+73])
                              Pexp_apply
                              expression (typing/includecore.ml[220,7434+6]..[220,7434+35])
                                Pexp_ident "Printtyp.report_moregen_error" (typing/includecore.ml[220,7434+6]..[220,7434+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[220,7434+36]..[220,7434+39])
                                    Pexp_ident "ppf" (typing/includecore.ml[220,7434+36]..[220,7434+39])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[220,7434+40]..[220,7434+51])
                                    Pexp_construct "Type_scheme" (typing/includecore.ml[220,7434+40]..[220,7434+51])
                                    None
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[220,7434+52]..[220,7434+55])
                                    Pexp_ident "env" (typing/includecore.ml[220,7434+52]..[220,7434+55])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[220,7434+56]..[220,7434+61])
                                    Pexp_ident "trace" (typing/includecore.ml[220,7434+56]..[220,7434+61])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[221,7496+8]..[221,7496+50])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/includecore.ml[221,7496+13]..[221,7496+16])
                                      Ppat_var "ppf" (typing/includecore.ml[221,7496+13]..[221,7496+16])
                                    expression (typing/includecore.ml[221,7496+20]..[221,7496+49])
                                      Pexp_apply
                                      expression (typing/includecore.ml[221,7496+20]..[221,7496+34])
                                        Pexp_ident "Format.fprintf" (typing/includecore.ml[221,7496+20]..[221,7496+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[221,7496+35]..[221,7496+38])
                                            Pexp_ident "ppf" (typing/includecore.ml[221,7496+35]..[221,7496+38])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[221,7496+39]..[221,7496+49])
                                            Pexp_constant PConst_string("The type",(typing/includecore.ml[221,7496+40]..[221,7496+48]),None)
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[222,7547+8]..[222,7547+73])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/includecore.ml[222,7547+13]..[222,7547+16])
                                      Ppat_var "ppf" (typing/includecore.ml[222,7547+13]..[222,7547+16])
                                    expression (typing/includecore.ml[222,7547+20]..[222,7547+72])
                                      Pexp_apply
                                      expression (typing/includecore.ml[222,7547+20]..[222,7547+34])
                                        Pexp_ident "Format.fprintf" (typing/includecore.ml[222,7547+20]..[222,7547+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[222,7547+35]..[222,7547+38])
                                            Pexp_ident "ppf" (typing/includecore.ml[222,7547+35]..[222,7547+38])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[222,7547+39]..[222,7547+72])
                                            Pexp_constant PConst_string("is not compatible with the type",(typing/includecore.ml[222,7547+40]..[222,7547+71]),None)
                                      ]
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[224,7622+0]..[227,7767+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[224,7622+4]..[224,7622+26])
          Ppat_var "report_type_inequality" (typing/includecore.ml[224,7622+4]..[224,7622+26])
        expression (typing/includecore.ml[224,7622+27]..[227,7767+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[224,7622+27]..[224,7622+30])
            Ppat_var "env" (typing/includecore.ml[224,7622+27]..[224,7622+30])
          expression (typing/includecore.ml[224,7622+31]..[227,7767+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[224,7622+31]..[224,7622+34])
              Ppat_var "ppf" (typing/includecore.ml[224,7622+31]..[224,7622+34])
            expression (typing/includecore.ml[224,7622+35]..[227,7767+62]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[224,7622+35]..[224,7622+38])
                Ppat_var "err" (typing/includecore.ml[224,7622+35]..[224,7622+38])
              expression (typing/includecore.ml[225,7663+2]..[227,7767+62])
                Pexp_apply
                expression (typing/includecore.ml[225,7663+2]..[225,7663+32])
                  Pexp_ident "Printtyp.report_equality_error" (typing/includecore.ml[225,7663+2]..[225,7663+32])
                [
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[225,7663+33]..[225,7663+36])
                      Pexp_ident "ppf" (typing/includecore.ml[225,7663+33]..[225,7663+36])
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[225,7663+37]..[225,7663+48])
                      Pexp_construct "Type_scheme" (typing/includecore.ml[225,7663+37]..[225,7663+48])
                      None
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[225,7663+49]..[225,7663+52])
                      Pexp_ident "env" (typing/includecore.ml[225,7663+49]..[225,7663+52])
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[225,7663+53]..[225,7663+56])
                      Pexp_ident "err" (typing/includecore.ml[225,7663+53]..[225,7663+56])
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[226,7720+4]..[226,7720+46])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[226,7720+9]..[226,7720+12])
                        Ppat_var "ppf" (typing/includecore.ml[226,7720+9]..[226,7720+12])
                      expression (typing/includecore.ml[226,7720+16]..[226,7720+45])
                        Pexp_apply
                        expression (typing/includecore.ml[226,7720+16]..[226,7720+30])
                          Pexp_ident "Format.fprintf" (typing/includecore.ml[226,7720+16]..[226,7720+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[226,7720+31]..[226,7720+34])
                              Pexp_ident "ppf" (typing/includecore.ml[226,7720+31]..[226,7720+34])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[226,7720+35]..[226,7720+45])
                              Pexp_constant PConst_string("The type",(typing/includecore.ml[226,7720+36]..[226,7720+44]),None)
                        ]
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[227,7767+4]..[227,7767+62])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[227,7767+9]..[227,7767+12])
                        Ppat_var "ppf" (typing/includecore.ml[227,7767+9]..[227,7767+12])
                      expression (typing/includecore.ml[227,7767+16]..[227,7767+61])
                        Pexp_apply
                        expression (typing/includecore.ml[227,7767+16]..[227,7767+30])
                          Pexp_ident "Format.fprintf" (typing/includecore.ml[227,7767+16]..[227,7767+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[227,7767+31]..[227,7767+34])
                              Pexp_ident "ppf" (typing/includecore.ml[227,7767+31]..[227,7767+34])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[227,7767+35]..[227,7767+61])
                              Pexp_constant PConst_string("is not equal to the type",(typing/includecore.ml[227,7767+36]..[227,7767+60]),None)
                        ]
                ]
    ]
  structure_item (typing/includecore.ml[229,7831+0]..[239,8328+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[229,7831+4]..[229,7831+27])
          Ppat_var "report_privacy_mismatch" (typing/includecore.ml[229,7831+4]..[229,7831+27])
        expression (typing/includecore.ml[229,7831+28]..[239,8328+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[229,7831+28]..[229,7831+31])
            Ppat_var "ppf" (typing/includecore.ml[229,7831+28]..[229,7831+31])
          expression (typing/includecore.ml[229,7831+32]..[239,8328+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[229,7831+32]..[229,7831+35])
              Ppat_var "err" (typing/includecore.ml[229,7831+32]..[229,7831+35])
            expression (typing/includecore.ml[230,7869+2]..[239,8328+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/includecore.ml[230,7869+6]..[230,7869+20])
                    Ppat_tuple
                    [
                      pattern (typing/includecore.ml[230,7869+6]..[230,7869+14])
                        Ppat_var "singular" (typing/includecore.ml[230,7869+6]..[230,7869+14])
                      pattern (typing/includecore.ml[230,7869+16]..[230,7869+20])
                        Ppat_var "item" (typing/includecore.ml[230,7869+16]..[230,7869+20])
                    ]
                  expression (typing/includecore.ml[231,7892+4]..[236,8170+53])
                    Pexp_match
                    expression (typing/includecore.ml[231,7892+10]..[231,7892+13])
                      Pexp_ident "err" (typing/includecore.ml[231,7892+10]..[231,7892+13])
                    [
                      <case>
                        pattern (typing/includecore.ml[232,7911+6]..[232,7911+31])
                          Ppat_construct "Private_type_abbreviation" (typing/includecore.ml[232,7911+6]..[232,7911+31])
                          None
                        expression (typing/includecore.ml[232,7911+36]..[232,7911+62])
                          Pexp_tuple
                          [
                            expression (typing/includecore.ml[232,7911+36]..[232,7911+40])
                              Pexp_construct "true" (typing/includecore.ml[232,7911+36]..[232,7911+40])
                              None
                            expression (typing/includecore.ml[232,7911+43]..[232,7911+62])
                              Pexp_constant PConst_string("type abbreviation",(typing/includecore.ml[232,7911+44]..[232,7911+61]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[233,7974+6]..[233,7974+26])
                          Ppat_construct "Private_variant_type" (typing/includecore.ml[233,7974+6]..[233,7974+26])
                          None
                        expression (typing/includecore.ml[233,7974+36]..[233,7974+67])
                          Pexp_tuple
                          [
                            expression (typing/includecore.ml[233,7974+36]..[233,7974+41])
                              Pexp_construct "false" (typing/includecore.ml[233,7974+36]..[233,7974+41])
                              None
                            expression (typing/includecore.ml[233,7974+43]..[233,7974+67])
                              Pexp_constant PConst_string("variant constructor(s)",(typing/includecore.ml[233,7974+44]..[233,7974+66]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[234,8042+6]..[234,8042+25])
                          Ppat_construct "Private_record_type" (typing/includecore.ml[234,8042+6]..[234,8042+25])
                          None
                        expression (typing/includecore.ml[234,8042+36]..[234,8042+63])
                          Pexp_tuple
                          [
                            expression (typing/includecore.ml[234,8042+36]..[234,8042+40])
                              Pexp_construct "true" (typing/includecore.ml[234,8042+36]..[234,8042+40])
                              None
                            expression (typing/includecore.ml[234,8042+43]..[234,8042+63])
                              Pexp_constant PConst_string("record constructor",(typing/includecore.ml[234,8042+44]..[234,8042+62]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[235,8106+6]..[235,8106+32])
                          Ppat_construct "Private_extensible_variant" (typing/includecore.ml[235,8106+6]..[235,8106+32])
                          None
                        expression (typing/includecore.ml[235,8106+36]..[235,8106+63])
                          Pexp_tuple
                          [
                            expression (typing/includecore.ml[235,8106+36]..[235,8106+40])
                              Pexp_construct "true" (typing/includecore.ml[235,8106+36]..[235,8106+40])
                              None
                            expression (typing/includecore.ml[235,8106+43]..[235,8106+63])
                              Pexp_constant PConst_string("extensible variant",(typing/includecore.ml[235,8106+44]..[235,8106+62]),None)
                          ]
                      <case>
                        pattern (typing/includecore.ml[236,8170+6]..[236,8170+22])
                          Ppat_construct "Private_row_type" (typing/includecore.ml[236,8170+6]..[236,8170+22])
                          None
                        expression (typing/includecore.ml[236,8170+36]..[236,8170+53])
                          Pexp_tuple
                          [
                            expression (typing/includecore.ml[236,8170+36]..[236,8170+40])
                              Pexp_construct "true" (typing/includecore.ml[236,8170+36]..[236,8170+40])
                              None
                            expression (typing/includecore.ml[236,8170+43]..[236,8170+53])
                              Pexp_constant PConst_string("row type",(typing/includecore.ml[236,8170+44]..[236,8170+52]),None)
                          ]
                    ]
              ]
              expression (typing/includecore.ml[237,8224+5]..[239,8328+11])
                Pexp_apply
                expression (typing/includecore.ml[237,8224+5]..[237,8224+19])
                  Pexp_ident "Format.fprintf" (typing/includecore.ml[237,8224+5]..[237,8224+19])
                [
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[237,8224+20]..[237,8224+23])
                      Pexp_ident "ppf" (typing/includecore.ml[237,8224+20]..[237,8224+23])
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[237,8224+24]..[237,8224+50])
                      Pexp_constant PConst_string("%s %s would be revealed.",(typing/includecore.ml[237,8224+25]..[237,8224+49]),None)
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[238,8275+7]..[238,8275+52])
                      Pexp_ifthenelse
                      expression (typing/includecore.ml[238,8275+11]..[238,8275+19])
                        Pexp_ident "singular" (typing/includecore.ml[238,8275+11]..[238,8275+19])
                      expression (typing/includecore.ml[238,8275+25]..[238,8275+36])
                        Pexp_constant PConst_string("A private",(typing/includecore.ml[238,8275+26]..[238,8275+35]),None)
                      Some
                        expression (typing/includecore.ml[238,8275+42]..[238,8275+51])
                          Pexp_constant PConst_string("Private",(typing/includecore.ml[238,8275+43]..[238,8275+50]),None)
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[239,8328+7]..[239,8328+11])
                      Pexp_ident "item" (typing/includecore.ml[239,8328+7]..[239,8328+11])
                ]
    ]
  structure_item (typing/includecore.ml[241,8341+0]..[248,8625+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[241,8341+4]..[241,8341+25])
          Ppat_var "report_label_mismatch" (typing/includecore.ml[241,8341+4]..[241,8341+25])
        expression (typing/includecore.ml[241,8341+26]..[248,8625+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[241,8341+26]..[241,8341+31])
            Ppat_var "first" (typing/includecore.ml[241,8341+26]..[241,8341+31])
          expression (typing/includecore.ml[241,8341+32]..[248,8625+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[241,8341+32]..[241,8341+38])
              Ppat_var "second" (typing/includecore.ml[241,8341+32]..[241,8341+38])
            expression (typing/includecore.ml[241,8341+39]..[248,8625+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[241,8341+39]..[241,8341+42])
                Ppat_var "env" (typing/includecore.ml[241,8341+39]..[241,8341+42])
              expression (typing/includecore.ml[241,8341+43]..[248,8625+39]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[241,8341+43]..[241,8341+46])
                  Ppat_var "ppf" (typing/includecore.ml[241,8341+43]..[241,8341+46])
                expression (typing/includecore.ml[241,8341+47]..[248,8625+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[241,8341+47]..[241,8341+50])
                    Ppat_var "err" (typing/includecore.ml[241,8341+47]..[241,8341+50])
                  expression (typing/includecore.ml[242,8394+2]..[248,8625+39])
                    Pexp_match
                    expression (typing/includecore.ml[242,8394+8]..[242,8394+30])
                      Pexp_constraint
                      expression (typing/includecore.ml[242,8394+9]..[242,8394+12])
                        Pexp_ident "err" (typing/includecore.ml[242,8394+9]..[242,8394+12])
                      core_type (typing/includecore.ml[242,8394+15]..[242,8394+29])
                        Ptyp_constr "label_mismatch" (typing/includecore.ml[242,8394+15]..[242,8394+29])
                        []
                    [
                      <case>
                        pattern (typing/includecore.ml[243,8430+4]..[243,8430+12])
                          Ppat_construct "Type" (typing/includecore.ml[243,8430+4]..[243,8430+8])
                          Some
                            []
                            pattern (typing/includecore.ml[243,8430+9]..[243,8430+12])
                              Ppat_var "err" (typing/includecore.ml[243,8430+9]..[243,8430+12])
                        expression (typing/includecore.ml[244,8446+6]..[244,8446+40])
                          Pexp_apply
                          expression (typing/includecore.ml[244,8446+6]..[244,8446+28])
                            Pexp_ident "report_type_inequality" (typing/includecore.ml[244,8446+6]..[244,8446+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[244,8446+29]..[244,8446+32])
                                Pexp_ident "env" (typing/includecore.ml[244,8446+29]..[244,8446+32])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[244,8446+33]..[244,8446+36])
                                Pexp_ident "ppf" (typing/includecore.ml[244,8446+33]..[244,8446+36])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[244,8446+37]..[244,8446+40])
                                Pexp_ident "err" (typing/includecore.ml[244,8446+37]..[244,8446+40])
                          ]
                      <case>
                        pattern (typing/includecore.ml[245,8487+4]..[245,8487+18])
                          Ppat_construct "Mutability" (typing/includecore.ml[245,8487+4]..[245,8487+14])
                          Some
                            []
                            pattern (typing/includecore.ml[245,8487+15]..[245,8487+18])
                              Ppat_var "ord" (typing/includecore.ml[245,8487+15]..[245,8487+18])
                        expression (typing/includecore.ml[246,8509+6]..[248,8625+39])
                          Pexp_apply
                          expression (typing/includecore.ml[246,8509+6]..[246,8509+20])
                            Pexp_ident "Format.fprintf" (typing/includecore.ml[246,8509+6]..[246,8509+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[246,8509+21]..[246,8509+24])
                                Pexp_ident "ppf" (typing/includecore.ml[246,8509+21]..[246,8509+24])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[246,8509+25]..[246,8509+55])
                                Pexp_constant PConst_string("%s is mutable and %s is not.",(typing/includecore.ml[246,8509+26]..[246,8509+54]),None)
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[247,8565+8]..[247,8565+59])
                                Pexp_apply
                                expression (typing/includecore.ml[247,8565+9]..[247,8565+32])
                                  Pexp_ident "String.capitalize_ascii" (typing/includecore.ml[247,8565+9]..[247,8565+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[247,8565+33]..[247,8565+58])
                                      Pexp_apply
                                      expression (typing/includecore.ml[247,8565+34]..[247,8565+40])
                                        Pexp_ident "choose" (typing/includecore.ml[247,8565+34]..[247,8565+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[247,8565+41]..[247,8565+44])
                                            Pexp_ident "ord" (typing/includecore.ml[247,8565+41]..[247,8565+44])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[247,8565+45]..[247,8565+50])
                                            Pexp_ident "first" (typing/includecore.ml[247,8565+45]..[247,8565+50])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[247,8565+51]..[247,8565+57])
                                            Pexp_ident "second" (typing/includecore.ml[247,8565+51]..[247,8565+57])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[248,8625+8]..[248,8625+39])
                                Pexp_apply
                                expression (typing/includecore.ml[248,8625+9]..[248,8625+21])
                                  Pexp_ident "choose_other" (typing/includecore.ml[248,8625+9]..[248,8625+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[248,8625+22]..[248,8625+25])
                                      Pexp_ident "ord" (typing/includecore.ml[248,8625+22]..[248,8625+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[248,8625+26]..[248,8625+31])
                                      Pexp_ident "first" (typing/includecore.ml[248,8625+26]..[248,8625+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[248,8625+32]..[248,8625+38])
                                      Pexp_ident "second" (typing/includecore.ml[248,8625+32]..[248,8625+38])
                                ]
                          ]
                    ]
    ]
  structure_item (typing/includecore.ml[250,8666+0]..[276,9719+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[250,8666+4]..[250,8666+18])
          Ppat_var "pp_record_diff" (typing/includecore.ml[250,8666+4]..[250,8666+18])
        expression (typing/includecore.ml[250,8666+19]..[276,9719+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[250,8666+19]..[250,8666+24])
            Ppat_var "first" (typing/includecore.ml[250,8666+19]..[250,8666+24])
          expression (typing/includecore.ml[250,8666+25]..[276,9719+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[250,8666+25]..[250,8666+31])
              Ppat_var "second" (typing/includecore.ml[250,8666+25]..[250,8666+31])
            expression (typing/includecore.ml[250,8666+32]..[276,9719+34]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[250,8666+32]..[250,8666+38])
                Ppat_var "prefix" (typing/includecore.ml[250,8666+32]..[250,8666+38])
              expression (typing/includecore.ml[250,8666+39]..[276,9719+34]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[250,8666+39]..[250,8666+43])
                  Ppat_var "decl" (typing/includecore.ml[250,8666+39]..[250,8666+43])
                expression (typing/includecore.ml[250,8666+44]..[276,9719+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[250,8666+44]..[250,8666+47])
                    Ppat_var "env" (typing/includecore.ml[250,8666+44]..[250,8666+47])
                  expression (typing/includecore.ml[250,8666+48]..[276,9719+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[250,8666+48]..[250,8666+51])
                      Ppat_var "ppf" (typing/includecore.ml[250,8666+48]..[250,8666+51])
                    expression (typing/includecore.ml[250,8666+52]..[276,9719+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[250,8666+52]..[250,8666+71])
                        Ppat_constraint
                        pattern (typing/includecore.ml[250,8666+53]..[250,8666+54])
                          Ppat_var "x" (typing/includecore.ml[250,8666+53]..[250,8666+54])
                        core_type (typing/includecore.ml[250,8666+57]..[250,8666+70])
                          Ptyp_constr "record_change" (typing/includecore.ml[250,8666+57]..[250,8666+70])
                          []
                      expression (typing/includecore.ml[251,8740+2]..[276,9719+34])
                        Pexp_match
                        expression (typing/includecore.ml[251,8740+8]..[251,8740+9])
                          Pexp_ident "x" (typing/includecore.ml[251,8740+8]..[251,8740+9])
                        [
                          <case>
                            pattern (typing/includecore.ml[252,8755+4]..[252,8755+13])
                              Ppat_construct "Delete" (typing/includecore.ml[252,8755+4]..[252,8755+10])
                              Some
                                []
                                pattern (typing/includecore.ml[252,8755+11]..[252,8755+13])
                                  Ppat_var "cd" (typing/includecore.ml[252,8755+11]..[252,8755+13])
                            expression (typing/includecore.ml[253,8772+6]..[254,8843+56])
                              Pexp_apply
                              expression (typing/includecore.ml[253,8772+6]..[253,8772+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[253,8772+6]..[253,8772+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[253,8772+21]..[253,8772+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[253,8772+21]..[253,8772+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[253,8772+25]..[253,8772+70])
                                    Pexp_constant PConst_string("%aAn extra field, %s, is provided in %s %s.",(typing/includecore.ml[253,8772+26]..[253,8772+69]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[254,8843+8]..[254,8843+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[254,8843+8]..[254,8843+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[254,8843+15]..[254,8843+16])
                                    Pexp_ident "x" (typing/includecore.ml[254,8843+15]..[254,8843+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[254,8843+17]..[254,8843+45])
                                    Pexp_apply
                                    expression (typing/includecore.ml[254,8843+18]..[254,8843+28])
                                      Pexp_ident "Ident.name" (typing/includecore.ml[254,8843+18]..[254,8843+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[254,8843+29]..[254,8843+44])
                                          Pexp_field
                                          expression (typing/includecore.ml[254,8843+29]..[254,8843+38])
                                            Pexp_field
                                            expression (typing/includecore.ml[254,8843+29]..[254,8843+31])
                                              Pexp_ident "cd" (typing/includecore.ml[254,8843+29]..[254,8843+31])
                                            "delete" (typing/includecore.ml[254,8843+32]..[254,8843+38])
                                          "ld_id" (typing/includecore.ml[254,8843+39]..[254,8843+44])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[254,8843+46]..[254,8843+51])
                                    Pexp_ident "first" (typing/includecore.ml[254,8843+46]..[254,8843+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[254,8843+52]..[254,8843+56])
                                    Pexp_ident "decl" (typing/includecore.ml[254,8843+52]..[254,8843+56])
                              ]
                          <case>
                            pattern (typing/includecore.ml[255,8900+4]..[255,8900+13])
                              Ppat_construct "Insert" (typing/includecore.ml[255,8900+4]..[255,8900+10])
                              Some
                                []
                                pattern (typing/includecore.ml[255,8900+11]..[255,8900+13])
                                  Ppat_var "cd" (typing/includecore.ml[255,8900+11]..[255,8900+13])
                            expression (typing/includecore.ml[256,8917+6]..[257,8981+56])
                              Pexp_apply
                              expression (typing/includecore.ml[256,8917+6]..[256,8917+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[256,8917+6]..[256,8917+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[256,8917+22]..[256,8917+25])
                                    Pexp_ident "ppf" (typing/includecore.ml[256,8917+22]..[256,8917+25])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[256,8917+26]..[256,8917+63])
                                    Pexp_constant PConst_string("%aA field, %s, is missing in %s %s.",(typing/includecore.ml[256,8917+27]..[256,8917+62]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[257,8981+8]..[257,8981+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[257,8981+8]..[257,8981+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[257,8981+15]..[257,8981+16])
                                    Pexp_ident "x" (typing/includecore.ml[257,8981+15]..[257,8981+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[257,8981+17]..[257,8981+45])
                                    Pexp_apply
                                    expression (typing/includecore.ml[257,8981+18]..[257,8981+28])
                                      Pexp_ident "Ident.name" (typing/includecore.ml[257,8981+18]..[257,8981+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[257,8981+29]..[257,8981+44])
                                          Pexp_field
                                          expression (typing/includecore.ml[257,8981+29]..[257,8981+38])
                                            Pexp_field
                                            expression (typing/includecore.ml[257,8981+29]..[257,8981+31])
                                              Pexp_ident "cd" (typing/includecore.ml[257,8981+29]..[257,8981+31])
                                            "insert" (typing/includecore.ml[257,8981+32]..[257,8981+38])
                                          "ld_id" (typing/includecore.ml[257,8981+39]..[257,8981+44])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[257,8981+46]..[257,8981+51])
                                    Pexp_ident "first" (typing/includecore.ml[257,8981+46]..[257,8981+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[257,8981+52]..[257,8981+56])
                                    Pexp_ident "decl" (typing/includecore.ml[257,8981+52]..[257,8981+56])
                              ]
                          <case>
                            pattern (typing/includecore.ml[258,9038+4]..[258,9038+49])
                              Ppat_construct "Change" (typing/includecore.ml[258,9038+4]..[258,9038+10])
                              Some
                                []
                                pattern (typing/includecore.ml[258,9038+11]..[258,9038+49])
                                  Ppat_construct "Type" (typing/includecore.ml[258,9038+11]..[258,9038+15])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[258,9038+16]..[258,9038+49])
                                      Ppat_record Closed
                                      [
                                        "got" (typing/includecore.ml[258,9038+17]..[258,9038+20])
                                          pattern (typing/includecore.ml[258,9038+21]..[258,9038+25])
                                            Ppat_var "lbl1" (typing/includecore.ml[258,9038+21]..[258,9038+25])
                                        "expected" (typing/includecore.ml[258,9038+27]..[258,9038+35])
                                          pattern (typing/includecore.ml[258,9038+36]..[258,9038+40])
                                            Ppat_var "lbl2" (typing/includecore.ml[258,9038+36]..[258,9038+40])
                                        "reason" (typing/includecore.ml[258,9038+42]..[258,9038+48]) ghost
                                          pattern (typing/includecore.ml[258,9038+42]..[258,9038+48])
                                            Ppat_var "reason" (typing/includecore.ml[258,9038+42]..[258,9038+48])
                                      ]
                            expression (typing/includecore.ml[259,9091+6]..[266,9295+55])
                              Pexp_apply
                              expression (typing/includecore.ml[259,9091+6]..[259,9091+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[259,9091+6]..[259,9091+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[259,9091+21]..[259,9091+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[259,9091+21]..[259,9091+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[260,9116+8]..[262,9196+25])
                                    Pexp_constant PConst_string("@[<hv>%aFields do not match:@;<1 2>%a@ is not the same as:@;<1 2>%a@ %a@]",(typing/includecore.ml[260,9116+9]..[262,9196+24]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[263,9222+8]..[263,9222+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[263,9222+8]..[263,9222+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[263,9222+15]..[263,9222+16])
                                    Pexp_ident "x" (typing/includecore.ml[263,9222+15]..[263,9222+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[264,9239+8]..[264,9239+22])
                                    Pexp_ident "Printtyp.label" (typing/includecore.ml[264,9239+8]..[264,9239+22])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[264,9239+23]..[264,9239+27])
                                    Pexp_ident "lbl1" (typing/includecore.ml[264,9239+23]..[264,9239+27])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[265,9267+8]..[265,9267+22])
                                    Pexp_ident "Printtyp.label" (typing/includecore.ml[265,9267+8]..[265,9267+22])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[265,9267+23]..[265,9267+27])
                                    Pexp_ident "lbl2" (typing/includecore.ml[265,9267+23]..[265,9267+27])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[266,9295+8]..[266,9295+48])
                                    Pexp_apply
                                    expression (typing/includecore.ml[266,9295+9]..[266,9295+30])
                                      Pexp_ident "report_label_mismatch" (typing/includecore.ml[266,9295+9]..[266,9295+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[266,9295+31]..[266,9295+36])
                                          Pexp_ident "first" (typing/includecore.ml[266,9295+31]..[266,9295+36])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[266,9295+37]..[266,9295+43])
                                          Pexp_ident "second" (typing/includecore.ml[266,9295+37]..[266,9295+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[266,9295+44]..[266,9295+47])
                                          Pexp_ident "env" (typing/includecore.ml[266,9295+44]..[266,9295+47])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[266,9295+49]..[266,9295+55])
                                    Pexp_ident "reason" (typing/includecore.ml[266,9295+49]..[266,9295+55])
                              ]
                          <case>
                            pattern (typing/includecore.ml[267,9351+4]..[267,9351+17])
                              Ppat_construct "Change" (typing/includecore.ml[267,9351+4]..[267,9351+10])
                              Some
                                []
                                pattern (typing/includecore.ml[267,9351+11]..[267,9351+17])
                                  Ppat_construct "Name" (typing/includecore.ml[267,9351+11]..[267,9351+15])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[267,9351+16]..[267,9351+17])
                                      Ppat_var "n" (typing/includecore.ml[267,9351+16]..[267,9351+17])
                            expression (typing/includecore.ml[268,9372+6]..[269,9441+33])
                              Pexp_apply
                              expression (typing/includecore.ml[268,9372+6]..[268,9372+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[268,9372+6]..[268,9372+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[268,9372+21]..[268,9372+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[268,9372+21]..[268,9372+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[268,9372+25]..[268,9372+68])
                                    Pexp_constant PConst_string("%aFields have different names, %s and %s.",(typing/includecore.ml[268,9372+26]..[268,9372+67]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[269,9441+8]..[269,9441+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[269,9441+8]..[269,9441+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[269,9441+15]..[269,9441+16])
                                    Pexp_ident "x" (typing/includecore.ml[269,9441+15]..[269,9441+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[269,9441+17]..[269,9441+22])
                                    Pexp_field
                                    expression (typing/includecore.ml[269,9441+17]..[269,9441+18])
                                      Pexp_ident "n" (typing/includecore.ml[269,9441+17]..[269,9441+18])
                                    "got" (typing/includecore.ml[269,9441+19]..[269,9441+22])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[269,9441+23]..[269,9441+33])
                                    Pexp_field
                                    expression (typing/includecore.ml[269,9441+23]..[269,9441+24])
                                      Pexp_ident "n" (typing/includecore.ml[269,9441+23]..[269,9441+24])
                                    "expected" (typing/includecore.ml[269,9441+25]..[269,9441+33])
                              ]
                          <case>
                            pattern (typing/includecore.ml[270,9475+4]..[270,9475+11])
                              Ppat_construct "Swap" (typing/includecore.ml[270,9475+4]..[270,9475+8])
                              Some
                                []
                                pattern (typing/includecore.ml[270,9475+9]..[270,9475+11])
                                  Ppat_var "sw" (typing/includecore.ml[270,9475+9]..[270,9475+11])
                            expression (typing/includecore.ml[271,9490+6]..[272,9555+33])
                              Pexp_apply
                              expression (typing/includecore.ml[271,9490+6]..[271,9490+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[271,9490+6]..[271,9490+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[271,9490+21]..[271,9490+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[271,9490+21]..[271,9490+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[271,9490+25]..[271,9490+64])
                                    Pexp_constant PConst_string("%aFields %s and %s have been swapped.",(typing/includecore.ml[271,9490+26]..[271,9490+63]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[272,9555+8]..[272,9555+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[272,9555+8]..[272,9555+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[272,9555+15]..[272,9555+16])
                                    Pexp_ident "x" (typing/includecore.ml[272,9555+15]..[272,9555+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[272,9555+17]..[272,9555+25])
                                    Pexp_field
                                    expression (typing/includecore.ml[272,9555+17]..[272,9555+19])
                                      Pexp_ident "sw" (typing/includecore.ml[272,9555+17]..[272,9555+19])
                                    "first" (typing/includecore.ml[272,9555+20]..[272,9555+25])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[272,9555+26]..[272,9555+33])
                                    Pexp_field
                                    expression (typing/includecore.ml[272,9555+26]..[272,9555+28])
                                      Pexp_ident "sw" (typing/includecore.ml[272,9555+26]..[272,9555+28])
                                    "last" (typing/includecore.ml[272,9555+29]..[272,9555+33])
                              ]
                          <case>
                            pattern (typing/includecore.ml[273,9589+4]..[273,9589+31])
                              Ppat_construct "Move" (typing/includecore.ml[273,9589+4]..[273,9589+8])
                              Some
                                []
                                pattern (typing/includecore.ml[273,9589+9]..[273,9589+31])
                                  Ppat_record Closed
                                  [
                                    "name" (typing/includecore.ml[273,9589+10]..[273,9589+14]) ghost
                                      pattern (typing/includecore.ml[273,9589+10]..[273,9589+14])
                                        Ppat_var "name" (typing/includecore.ml[273,9589+10]..[273,9589+14])
                                    "got" (typing/includecore.ml[273,9589+16]..[273,9589+19]) ghost
                                      pattern (typing/includecore.ml[273,9589+16]..[273,9589+19])
                                        Ppat_var "got" (typing/includecore.ml[273,9589+16]..[273,9589+19])
                                    "expected" (typing/includecore.ml[273,9589+21]..[273,9589+29]) ghost
                                      pattern (typing/includecore.ml[273,9589+21]..[273,9589+29])
                                        Ppat_var "expected" (typing/includecore.ml[273,9589+21]..[273,9589+29])
                                  ]
                            expression (typing/includecore.ml[274,9624+6]..[276,9719+34])
                              Pexp_apply
                              expression (typing/includecore.ml[274,9624+6]..[274,9624+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[274,9624+6]..[274,9624+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[274,9624+21]..[274,9624+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[274,9624+21]..[274,9624+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[275,9649+8]..[275,9649+69])
                                    Pexp_constant PConst_string("@[<2>%aField %s has been moved@ from@ position %d@ to %d.@]",(typing/includecore.ml[275,9649+9]..[275,9649+68]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[276,9719+8]..[276,9719+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[276,9719+8]..[276,9719+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[276,9719+15]..[276,9719+16])
                                    Pexp_ident "x" (typing/includecore.ml[276,9719+15]..[276,9719+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[276,9719+17]..[276,9719+21])
                                    Pexp_ident "name" (typing/includecore.ml[276,9719+17]..[276,9719+21])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[276,9719+22]..[276,9719+30])
                                    Pexp_ident "expected" (typing/includecore.ml[276,9719+22]..[276,9719+30])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[276,9719+31]..[276,9719+34])
                                    Pexp_ident "got" (typing/includecore.ml[276,9719+31]..[276,9719+34])
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[278,9755+0]..[288,10141+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[278,9755+4]..[278,9755+16])
          Ppat_var "report_patch" (typing/includecore.ml[278,9755+4]..[278,9755+16])
        expression (typing/includecore.ml[278,9755+17]..[288,10141+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[278,9755+17]..[278,9755+24])
            Ppat_var "pr_diff" (typing/includecore.ml[278,9755+17]..[278,9755+24])
          expression (typing/includecore.ml[278,9755+25]..[288,10141+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[278,9755+25]..[278,9755+30])
              Ppat_var "first" (typing/includecore.ml[278,9755+25]..[278,9755+30])
            expression (typing/includecore.ml[278,9755+31]..[288,10141+55]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[278,9755+31]..[278,9755+37])
                Ppat_var "second" (typing/includecore.ml[278,9755+31]..[278,9755+37])
              expression (typing/includecore.ml[278,9755+38]..[288,10141+55]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[278,9755+38]..[278,9755+42])
                  Ppat_var "decl" (typing/includecore.ml[278,9755+38]..[278,9755+42])
                expression (typing/includecore.ml[278,9755+43]..[288,10141+55]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[278,9755+43]..[278,9755+46])
                    Ppat_var "env" (typing/includecore.ml[278,9755+43]..[278,9755+46])
                  expression (typing/includecore.ml[278,9755+47]..[288,10141+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[278,9755+47]..[278,9755+50])
                      Ppat_var "ppf" (typing/includecore.ml[278,9755+47]..[278,9755+50])
                    expression (typing/includecore.ml[278,9755+51]..[288,10141+55]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[278,9755+51]..[278,9755+56])
                        Ppat_var "patch" (typing/includecore.ml[278,9755+51]..[278,9755+56])
                      expression (typing/includecore.ml[279,9814+2]..[288,10141+55])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includecore.ml[279,9814+6]..[279,9814+8])
                              Ppat_var "nl" (typing/includecore.ml[279,9814+6]..[279,9814+8])
                            expression (typing/includecore.ml[279,9814+9]..[279,9814+41]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includecore.ml[279,9814+9]..[279,9814+12])
                                Ppat_var "ppf" (typing/includecore.ml[279,9814+9]..[279,9814+12])
                              expression (typing/includecore.ml[279,9814+13]..[279,9814+41]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includecore.ml[279,9814+13]..[279,9814+15])
                                  Ppat_construct "()" (typing/includecore.ml[279,9814+13]..[279,9814+15])
                                  None
                                expression (typing/includecore.ml[279,9814+18]..[279,9814+41])
                                  Pexp_apply
                                  expression (typing/includecore.ml[279,9814+18]..[279,9814+32])
                                    Pexp_ident "Format.fprintf" (typing/includecore.ml[279,9814+18]..[279,9814+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[279,9814+33]..[279,9814+36])
                                        Pexp_ident "ppf" (typing/includecore.ml[279,9814+33]..[279,9814+36])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[279,9814+37]..[279,9814+41])
                                        Pexp_constant PConst_string("@,",(typing/includecore.ml[279,9814+38]..[279,9814+40]),None)
                                  ]
                        ]
                        expression (typing/includecore.ml[280,9859+2]..[288,10141+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includecore.ml[280,9859+6]..[280,9859+15])
                                Ppat_var "no_prefix" (typing/includecore.ml[280,9859+6]..[280,9859+15])
                              expression (typing/includecore.ml[280,9859+16]..[280,9859+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includecore.ml[280,9859+16]..[280,9859+20])
                                  Ppat_var "_ppf" (typing/includecore.ml[280,9859+16]..[280,9859+20])
                                expression (typing/includecore.ml[280,9859+21]..[280,9859+27]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/includecore.ml[280,9859+21]..[280,9859+22])
                                    Ppat_any
                                  expression (typing/includecore.ml[280,9859+25]..[280,9859+27])
                                    Pexp_construct "()" (typing/includecore.ml[280,9859+25]..[280,9859+27])
                                    None
                          ]
                          expression (typing/includecore.ml[281,9890+2]..[288,10141+55])
                            Pexp_match
                            expression (typing/includecore.ml[281,9890+8]..[281,9890+13])
                              Pexp_ident "patch" (typing/includecore.ml[281,9890+8]..[281,9890+13])
                            [
                              <case>
                                pattern (typing/includecore.ml[282,9909+4]..[282,9909+11])
                                  Ppat_construct "::" (typing/includecore.ml[282,9909+6]..[282,9909+11]) ghost
                                  Some
                                    []
                                    pattern (typing/includecore.ml[282,9909+6]..[282,9909+11]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[282,9909+6]..[282,9909+9])
                                          Ppat_var "elt" (typing/includecore.ml[282,9909+6]..[282,9909+9])
                                        pattern (typing/includecore.ml[282,9909+10]..[282,9909+11]) ghost
                                          Ppat_construct "[]" (typing/includecore.ml[282,9909+10]..[282,9909+11]) ghost
                                          None
                                      ]
                                expression (typing/includecore.ml[283,9924+6]..[284,9962+53])
                                  Pexp_apply
                                  expression (typing/includecore.ml[283,9924+6]..[283,9924+20])
                                    Pexp_ident "Format.fprintf" (typing/includecore.ml[283,9924+6]..[283,9924+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[283,9924+21]..[283,9924+24])
                                        Pexp_ident "ppf" (typing/includecore.ml[283,9924+21]..[283,9924+24])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[283,9924+25]..[283,9924+37])
                                        Pexp_constant PConst_string("@[<hv>%a@]",(typing/includecore.ml[283,9924+26]..[283,9924+36]),None)
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[284,9962+8]..[284,9962+49])
                                        Pexp_apply
                                        expression (typing/includecore.ml[284,9962+9]..[284,9962+16])
                                          Pexp_ident "pr_diff" (typing/includecore.ml[284,9962+9]..[284,9962+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[284,9962+17]..[284,9962+22])
                                              Pexp_ident "first" (typing/includecore.ml[284,9962+17]..[284,9962+22])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[284,9962+23]..[284,9962+29])
                                              Pexp_ident "second" (typing/includecore.ml[284,9962+23]..[284,9962+29])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[284,9962+30]..[284,9962+39])
                                              Pexp_ident "no_prefix" (typing/includecore.ml[284,9962+30]..[284,9962+39])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[284,9962+40]..[284,9962+44])
                                              Pexp_ident "decl" (typing/includecore.ml[284,9962+40]..[284,9962+44])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[284,9962+45]..[284,9962+48])
                                              Pexp_ident "env" (typing/includecore.ml[284,9962+45]..[284,9962+48])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[284,9962+50]..[284,9962+53])
                                        Pexp_ident "elt" (typing/includecore.ml[284,9962+50]..[284,9962+53])
                                  ]
                              <case>
                                pattern (typing/includecore.ml[285,10016+4]..[285,10016+5])
                                  Ppat_any
                                expression (typing/includecore.ml[286,10025+6]..[288,10141+55])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[286,10025+10]..[286,10025+17])
                                        Ppat_var "pp_diff" (typing/includecore.ml[286,10025+10]..[286,10025+17])
                                      expression (typing/includecore.ml[286,10025+20]..[286,10025+74])
                                        Pexp_apply
                                        expression (typing/includecore.ml[286,10025+20]..[286,10025+27])
                                          Pexp_ident "pr_diff" (typing/includecore.ml[286,10025+20]..[286,10025+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[286,10025+28]..[286,10025+33])
                                              Pexp_ident "first" (typing/includecore.ml[286,10025+28]..[286,10025+33])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[286,10025+34]..[286,10025+40])
                                              Pexp_ident "second" (typing/includecore.ml[286,10025+34]..[286,10025+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[286,10025+41]..[286,10025+65])
                                              Pexp_ident "Diffing_with_keys.prefix" (typing/includecore.ml[286,10025+41]..[286,10025+65])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[286,10025+66]..[286,10025+70])
                                              Pexp_ident "decl" (typing/includecore.ml[286,10025+66]..[286,10025+70])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[286,10025+71]..[286,10025+74])
                                              Pexp_ident "env" (typing/includecore.ml[286,10025+71]..[286,10025+74])
                                        ]
                                  ]
                                  expression (typing/includecore.ml[287,10103+6]..[288,10141+55])
                                    Pexp_apply
                                    expression (typing/includecore.ml[287,10103+6]..[287,10103+20])
                                      Pexp_ident "Format.fprintf" (typing/includecore.ml[287,10103+6]..[287,10103+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[287,10103+21]..[287,10103+24])
                                          Pexp_ident "ppf" (typing/includecore.ml[287,10103+21]..[287,10103+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[287,10103+25]..[287,10103+37])
                                          Pexp_constant PConst_string("@[<hv>%a@]",(typing/includecore.ml[287,10103+26]..[287,10103+36]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[288,10141+8]..[288,10141+49])
                                          Pexp_apply
                                          expression (typing/includecore.ml[288,10141+9]..[288,10141+29])
                                            Pexp_ident "Format.pp_print_list" (typing/includecore.ml[288,10141+9]..[288,10141+29])
                                          [
                                            <arg>
                                            Labelled "pp_sep"
                                              expression (typing/includecore.ml[288,10141+38]..[288,10141+40])
                                                Pexp_ident "nl" (typing/includecore.ml[288,10141+38]..[288,10141+40])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[288,10141+41]..[288,10141+48])
                                                Pexp_ident "pp_diff" (typing/includecore.ml[288,10141+41]..[288,10141+48])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[288,10141+50]..[288,10141+55])
                                          Pexp_ident "patch" (typing/includecore.ml[288,10141+50]..[288,10141+55])
                                    ]
                            ]
    ]
  structure_item (typing/includecore.ml[290,10198+0]..[298,10557+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[290,10198+4]..[290,10198+26])
          Ppat_var "report_record_mismatch" (typing/includecore.ml[290,10198+4]..[290,10198+26])
        expression (typing/includecore.ml[290,10198+27]..[298,10557+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[290,10198+27]..[290,10198+32])
            Ppat_var "first" (typing/includecore.ml[290,10198+27]..[290,10198+32])
          expression (typing/includecore.ml[290,10198+33]..[298,10557+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[290,10198+33]..[290,10198+39])
              Ppat_var "second" (typing/includecore.ml[290,10198+33]..[290,10198+39])
            expression (typing/includecore.ml[290,10198+40]..[298,10557+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[290,10198+40]..[290,10198+44])
                Ppat_var "decl" (typing/includecore.ml[290,10198+40]..[290,10198+44])
              expression (typing/includecore.ml[290,10198+45]..[298,10557+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[290,10198+45]..[290,10198+48])
                  Ppat_var "env" (typing/includecore.ml[290,10198+45]..[290,10198+48])
                expression (typing/includecore.ml[290,10198+49]..[298,10557+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[290,10198+49]..[290,10198+52])
                    Ppat_var "ppf" (typing/includecore.ml[290,10198+49]..[290,10198+52])
                  expression (typing/includecore.ml[290,10198+53]..[298,10557+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[290,10198+53]..[290,10198+56])
                      Ppat_var "err" (typing/includecore.ml[290,10198+53]..[290,10198+56])
                    expression (typing/includecore.ml[291,10257+2]..[298,10557+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[291,10257+6]..[291,10257+8])
                            Ppat_var "pr" (typing/includecore.ml[291,10257+6]..[291,10257+8])
                          expression (typing/includecore.ml[291,10257+9]..[291,10257+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[291,10257+9]..[291,10257+12])
                              Ppat_var "fmt" (typing/includecore.ml[291,10257+9]..[291,10257+12])
                            expression (typing/includecore.ml[291,10257+15]..[291,10257+37])
                              Pexp_apply
                              expression (typing/includecore.ml[291,10257+15]..[291,10257+29])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[291,10257+15]..[291,10257+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[291,10257+30]..[291,10257+33])
                                    Pexp_ident "ppf" (typing/includecore.ml[291,10257+30]..[291,10257+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[291,10257+34]..[291,10257+37])
                                    Pexp_ident "fmt" (typing/includecore.ml[291,10257+34]..[291,10257+37])
                              ]
                      ]
                      expression (typing/includecore.ml[292,10298+2]..[298,10557+43])
                        Pexp_match
                        expression (typing/includecore.ml[292,10298+8]..[292,10298+11])
                          Pexp_ident "err" (typing/includecore.ml[292,10298+8]..[292,10298+11])
                        [
                          <case>
                            pattern (typing/includecore.ml[293,10315+4]..[293,10315+24])
                              Ppat_construct "Label_mismatch" (typing/includecore.ml[293,10315+4]..[293,10315+18])
                              Some
                                []
                                pattern (typing/includecore.ml[293,10315+19]..[293,10315+24])
                                  Ppat_var "patch" (typing/includecore.ml[293,10315+19]..[293,10315+24])
                            expression (typing/includecore.ml[294,10343+6]..[294,10343+65])
                              Pexp_apply
                              expression (typing/includecore.ml[294,10343+6]..[294,10343+18])
                                Pexp_ident "report_patch" (typing/includecore.ml[294,10343+6]..[294,10343+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+19]..[294,10343+33])
                                    Pexp_ident "pp_record_diff" (typing/includecore.ml[294,10343+19]..[294,10343+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+34]..[294,10343+39])
                                    Pexp_ident "first" (typing/includecore.ml[294,10343+34]..[294,10343+39])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+40]..[294,10343+46])
                                    Pexp_ident "second" (typing/includecore.ml[294,10343+40]..[294,10343+46])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+47]..[294,10343+51])
                                    Pexp_ident "decl" (typing/includecore.ml[294,10343+47]..[294,10343+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+52]..[294,10343+55])
                                    Pexp_ident "env" (typing/includecore.ml[294,10343+52]..[294,10343+55])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+56]..[294,10343+59])
                                    Pexp_ident "ppf" (typing/includecore.ml[294,10343+56]..[294,10343+59])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[294,10343+60]..[294,10343+65])
                                    Pexp_ident "patch" (typing/includecore.ml[294,10343+60]..[294,10343+65])
                              ]
                          <case>
                            pattern (typing/includecore.ml[295,10409+4]..[295,10409+36])
                              Ppat_construct "Unboxed_float_representation" (typing/includecore.ml[295,10409+4]..[295,10409+32])
                              Some
                                []
                                pattern (typing/includecore.ml[295,10409+33]..[295,10409+36])
                                  Ppat_var "ord" (typing/includecore.ml[295,10409+33]..[295,10409+36])
                            expression (typing/includecore.ml[296,10449+6]..[298,10557+43])
                              Pexp_apply
                              expression (typing/includecore.ml[296,10449+6]..[296,10449+8])
                                Pexp_ident "pr" (typing/includecore.ml[296,10449+6]..[296,10449+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[296,10449+9]..[296,10449+68])
                                    Pexp_constant PConst_string("@[<hv>Their internal representations differ:@ %s %s %s.@]",(typing/includecore.ml[296,10449+10]..[296,10449+67]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[297,10518+8]..[297,10518+33])
                                    Pexp_apply
                                    expression (typing/includecore.ml[297,10518+9]..[297,10518+15])
                                      Pexp_ident "choose" (typing/includecore.ml[297,10518+9]..[297,10518+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[297,10518+16]..[297,10518+19])
                                          Pexp_ident "ord" (typing/includecore.ml[297,10518+16]..[297,10518+19])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[297,10518+20]..[297,10518+25])
                                          Pexp_ident "first" (typing/includecore.ml[297,10518+20]..[297,10518+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[297,10518+26]..[297,10518+32])
                                          Pexp_ident "second" (typing/includecore.ml[297,10518+26]..[297,10518+32])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[297,10518+34]..[297,10518+38])
                                    Pexp_ident "decl" (typing/includecore.ml[297,10518+34]..[297,10518+38])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[298,10557+8]..[298,10557+43])
                                    Pexp_constant PConst_string("uses unboxed float representation",(typing/includecore.ml[298,10557+9]..[298,10557+42]),None)
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[300,10602+0]..[314,11250+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[300,10602+4]..[300,10602+31])
          Ppat_var "report_constructor_mismatch" (typing/includecore.ml[300,10602+4]..[300,10602+31])
        expression (typing/includecore.ml[300,10602+32]..[314,11250+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[300,10602+32]..[300,10602+37])
            Ppat_var "first" (typing/includecore.ml[300,10602+32]..[300,10602+37])
          expression (typing/includecore.ml[300,10602+38]..[314,11250+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[300,10602+38]..[300,10602+44])
              Ppat_var "second" (typing/includecore.ml[300,10602+38]..[300,10602+44])
            expression (typing/includecore.ml[300,10602+45]..[314,11250+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[300,10602+45]..[300,10602+49])
                Ppat_var "decl" (typing/includecore.ml[300,10602+45]..[300,10602+49])
              expression (typing/includecore.ml[300,10602+50]..[314,11250+39]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[300,10602+50]..[300,10602+53])
                  Ppat_var "env" (typing/includecore.ml[300,10602+50]..[300,10602+53])
                expression (typing/includecore.ml[300,10602+54]..[314,11250+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[300,10602+54]..[300,10602+57])
                    Ppat_var "ppf" (typing/includecore.ml[300,10602+54]..[300,10602+57])
                  expression (typing/includecore.ml[300,10602+58]..[314,11250+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[300,10602+58]..[300,10602+61])
                      Ppat_var "err" (typing/includecore.ml[300,10602+58]..[300,10602+61])
                    expression (typing/includecore.ml[301,10666+2]..[314,11250+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[301,10666+6]..[301,10666+8])
                            Ppat_var "pr" (typing/includecore.ml[301,10666+6]..[301,10666+8])
                          expression (typing/includecore.ml[301,10666+9]..[301,10666+38]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[301,10666+9]..[301,10666+12])
                              Ppat_var "fmt" (typing/includecore.ml[301,10666+9]..[301,10666+12])
                            expression (typing/includecore.ml[301,10666+16]..[301,10666+38])
                              Pexp_apply
                              expression (typing/includecore.ml[301,10666+16]..[301,10666+30])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[301,10666+16]..[301,10666+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[301,10666+31]..[301,10666+34])
                                    Pexp_ident "ppf" (typing/includecore.ml[301,10666+31]..[301,10666+34])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[301,10666+35]..[301,10666+38])
                                    Pexp_ident "fmt" (typing/includecore.ml[301,10666+35]..[301,10666+38])
                              ]
                      ]
                      expression (typing/includecore.ml[302,10708+2]..[314,11250+39])
                        Pexp_match
                        expression (typing/includecore.ml[302,10708+8]..[302,10708+36])
                          Pexp_constraint
                          expression (typing/includecore.ml[302,10708+9]..[302,10708+12])
                            Pexp_ident "err" (typing/includecore.ml[302,10708+9]..[302,10708+12])
                          core_type (typing/includecore.ml[302,10708+15]..[302,10708+35])
                            Ptyp_constr "constructor_mismatch" (typing/includecore.ml[302,10708+15]..[302,10708+35])
                            []
                        [
                          <case>
                            pattern (typing/includecore.ml[303,10750+4]..[303,10750+12])
                              Ppat_construct "Type" (typing/includecore.ml[303,10750+4]..[303,10750+8])
                              Some
                                []
                                pattern (typing/includecore.ml[303,10750+9]..[303,10750+12])
                                  Ppat_var "err" (typing/includecore.ml[303,10750+9]..[303,10750+12])
                            expression (typing/includecore.ml[303,10750+16]..[303,10750+50])
                              Pexp_apply
                              expression (typing/includecore.ml[303,10750+16]..[303,10750+38])
                                Pexp_ident "report_type_inequality" (typing/includecore.ml[303,10750+16]..[303,10750+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[303,10750+39]..[303,10750+42])
                                    Pexp_ident "env" (typing/includecore.ml[303,10750+39]..[303,10750+42])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[303,10750+43]..[303,10750+46])
                                    Pexp_ident "ppf" (typing/includecore.ml[303,10750+43]..[303,10750+46])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[303,10750+47]..[303,10750+50])
                                    Pexp_ident "err" (typing/includecore.ml[303,10750+47]..[303,10750+50])
                              ]
                          <case>
                            pattern (typing/includecore.ml[304,10801+4]..[304,10801+9])
                              Ppat_construct "Arity" (typing/includecore.ml[304,10801+4]..[304,10801+9])
                              None
                            expression (typing/includecore.ml[304,10801+13]..[304,10801+46])
                              Pexp_apply
                              expression (typing/includecore.ml[304,10801+13]..[304,10801+15])
                                Pexp_ident "pr" (typing/includecore.ml[304,10801+13]..[304,10801+15])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[304,10801+16]..[304,10801+46])
                                    Pexp_constant PConst_string("They have different arities.",(typing/includecore.ml[304,10801+17]..[304,10801+45]),None)
                              ]
                          <case>
                            pattern (typing/includecore.ml[305,10848+4]..[305,10848+21])
                              Ppat_construct "Inline_record" (typing/includecore.ml[305,10848+4]..[305,10848+17])
                              Some
                                []
                                pattern (typing/includecore.ml[305,10848+18]..[305,10848+21])
                                  Ppat_var "err" (typing/includecore.ml[305,10848+18]..[305,10848+21])
                            expression (typing/includecore.ml[306,10873+6]..[306,10873+63])
                              Pexp_apply
                              expression (typing/includecore.ml[306,10873+6]..[306,10873+18])
                                Pexp_ident "report_patch" (typing/includecore.ml[306,10873+6]..[306,10873+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+19]..[306,10873+33])
                                    Pexp_ident "pp_record_diff" (typing/includecore.ml[306,10873+19]..[306,10873+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+34]..[306,10873+39])
                                    Pexp_ident "first" (typing/includecore.ml[306,10873+34]..[306,10873+39])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+40]..[306,10873+46])
                                    Pexp_ident "second" (typing/includecore.ml[306,10873+40]..[306,10873+46])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+47]..[306,10873+51])
                                    Pexp_ident "decl" (typing/includecore.ml[306,10873+47]..[306,10873+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+52]..[306,10873+55])
                                    Pexp_ident "env" (typing/includecore.ml[306,10873+52]..[306,10873+55])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+56]..[306,10873+59])
                                    Pexp_ident "ppf" (typing/includecore.ml[306,10873+56]..[306,10873+59])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[306,10873+60]..[306,10873+63])
                                    Pexp_ident "err" (typing/includecore.ml[306,10873+60]..[306,10873+63])
                              ]
                          <case>
                            pattern (typing/includecore.ml[307,10937+4]..[307,10937+12])
                              Ppat_construct "Kind" (typing/includecore.ml[307,10937+4]..[307,10937+8])
                              Some
                                []
                                pattern (typing/includecore.ml[307,10937+9]..[307,10937+12])
                                  Ppat_var "ord" (typing/includecore.ml[307,10937+9]..[307,10937+12])
                            expression (typing/includecore.ml[308,10953+6]..[310,11063+39])
                              Pexp_apply
                              expression (typing/includecore.ml[308,10953+6]..[308,10953+8])
                                Pexp_ident "pr" (typing/includecore.ml[308,10953+6]..[308,10953+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[308,10953+9]..[308,10953+49])
                                    Pexp_constant PConst_string("%s uses inline records and %s doesn't.",(typing/includecore.ml[308,10953+10]..[308,10953+48]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[309,11003+8]..[309,11003+59])
                                    Pexp_apply
                                    expression (typing/includecore.ml[309,11003+9]..[309,11003+32])
                                      Pexp_ident "String.capitalize_ascii" (typing/includecore.ml[309,11003+9]..[309,11003+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[309,11003+33]..[309,11003+58])
                                          Pexp_apply
                                          expression (typing/includecore.ml[309,11003+34]..[309,11003+40])
                                            Pexp_ident "choose" (typing/includecore.ml[309,11003+34]..[309,11003+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[309,11003+41]..[309,11003+44])
                                                Pexp_ident "ord" (typing/includecore.ml[309,11003+41]..[309,11003+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[309,11003+45]..[309,11003+50])
                                                Pexp_ident "first" (typing/includecore.ml[309,11003+45]..[309,11003+50])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[309,11003+51]..[309,11003+57])
                                                Pexp_ident "second" (typing/includecore.ml[309,11003+51]..[309,11003+57])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[310,11063+8]..[310,11063+39])
                                    Pexp_apply
                                    expression (typing/includecore.ml[310,11063+9]..[310,11063+21])
                                      Pexp_ident "choose_other" (typing/includecore.ml[310,11063+9]..[310,11063+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[310,11063+22]..[310,11063+25])
                                          Pexp_ident "ord" (typing/includecore.ml[310,11063+22]..[310,11063+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[310,11063+26]..[310,11063+31])
                                          Pexp_ident "first" (typing/includecore.ml[310,11063+26]..[310,11063+31])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[310,11063+32]..[310,11063+38])
                                          Pexp_ident "second" (typing/includecore.ml[310,11063+32]..[310,11063+38])
                                    ]
                              ]
                          <case>
                            pattern (typing/includecore.ml[311,11103+4]..[311,11103+28])
                              Ppat_construct "Explicit_return_type" (typing/includecore.ml[311,11103+4]..[311,11103+24])
                              Some
                                []
                                pattern (typing/includecore.ml[311,11103+25]..[311,11103+28])
                                  Ppat_var "ord" (typing/includecore.ml[311,11103+25]..[311,11103+28])
                            expression (typing/includecore.ml[312,11135+6]..[314,11250+39])
                              Pexp_apply
                              expression (typing/includecore.ml[312,11135+6]..[312,11135+8])
                                Pexp_ident "pr" (typing/includecore.ml[312,11135+6]..[312,11135+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[312,11135+9]..[312,11135+54])
                                    Pexp_constant PConst_string("%s has explicit return type and %s doesn't.",(typing/includecore.ml[312,11135+10]..[312,11135+53]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[313,11190+8]..[313,11190+59])
                                    Pexp_apply
                                    expression (typing/includecore.ml[313,11190+9]..[313,11190+32])
                                      Pexp_ident "String.capitalize_ascii" (typing/includecore.ml[313,11190+9]..[313,11190+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[313,11190+33]..[313,11190+58])
                                          Pexp_apply
                                          expression (typing/includecore.ml[313,11190+34]..[313,11190+40])
                                            Pexp_ident "choose" (typing/includecore.ml[313,11190+34]..[313,11190+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[313,11190+41]..[313,11190+44])
                                                Pexp_ident "ord" (typing/includecore.ml[313,11190+41]..[313,11190+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[313,11190+45]..[313,11190+50])
                                                Pexp_ident "first" (typing/includecore.ml[313,11190+45]..[313,11190+50])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[313,11190+51]..[313,11190+57])
                                                Pexp_ident "second" (typing/includecore.ml[313,11190+51]..[313,11190+57])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[314,11250+8]..[314,11250+39])
                                    Pexp_apply
                                    expression (typing/includecore.ml[314,11250+9]..[314,11250+21])
                                      Pexp_ident "choose_other" (typing/includecore.ml[314,11250+9]..[314,11250+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[314,11250+22]..[314,11250+25])
                                          Pexp_ident "ord" (typing/includecore.ml[314,11250+22]..[314,11250+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[314,11250+26]..[314,11250+31])
                                          Pexp_ident "first" (typing/includecore.ml[314,11250+26]..[314,11250+31])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[314,11250+32]..[314,11250+38])
                                          Pexp_ident "second" (typing/includecore.ml[314,11250+32]..[314,11250+38])
                                    ]
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[316,11291+0]..[344,12413+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[316,11291+4]..[316,11291+19])
          Ppat_var "pp_variant_diff" (typing/includecore.ml[316,11291+4]..[316,11291+19])
        expression (typing/includecore.ml[316,11291+20]..[344,12413+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[316,11291+20]..[316,11291+25])
            Ppat_var "first" (typing/includecore.ml[316,11291+20]..[316,11291+25])
          expression (typing/includecore.ml[316,11291+26]..[344,12413+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[316,11291+26]..[316,11291+32])
              Ppat_var "second" (typing/includecore.ml[316,11291+26]..[316,11291+32])
            expression (typing/includecore.ml[316,11291+33]..[344,12413+34]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[316,11291+33]..[316,11291+39])
                Ppat_var "prefix" (typing/includecore.ml[316,11291+33]..[316,11291+39])
              expression (typing/includecore.ml[316,11291+40]..[344,12413+34]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[316,11291+40]..[316,11291+44])
                  Ppat_var "decl" (typing/includecore.ml[316,11291+40]..[316,11291+44])
                expression (typing/includecore.ml[316,11291+45]..[344,12413+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[316,11291+45]..[316,11291+48])
                    Ppat_var "env" (typing/includecore.ml[316,11291+45]..[316,11291+48])
                  expression (typing/includecore.ml[316,11291+49]..[344,12413+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[316,11291+49]..[316,11291+52])
                      Ppat_var "ppf" (typing/includecore.ml[316,11291+49]..[316,11291+52])
                    expression (typing/includecore.ml[316,11291+53]..[344,12413+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[316,11291+53]..[316,11291+73])
                        Ppat_constraint
                        pattern (typing/includecore.ml[316,11291+54]..[316,11291+55])
                          Ppat_var "x" (typing/includecore.ml[316,11291+54]..[316,11291+55])
                        core_type (typing/includecore.ml[316,11291+58]..[316,11291+72])
                          Ptyp_constr "variant_change" (typing/includecore.ml[316,11291+58]..[316,11291+72])
                          []
                      expression (typing/includecore.ml[317,11367+2]..[344,12413+34])
                        Pexp_match
                        expression (typing/includecore.ml[317,11367+8]..[317,11367+9])
                          Pexp_ident "x" (typing/includecore.ml[317,11367+8]..[317,11367+9])
                        [
                          <case>
                            pattern (typing/includecore.ml[318,11382+4]..[318,11382+13])
                              Ppat_construct "Delete" (typing/includecore.ml[318,11382+4]..[318,11382+10])
                              Some
                                []
                                pattern (typing/includecore.ml[318,11382+11]..[318,11382+13])
                                  Ppat_var "cd" (typing/includecore.ml[318,11382+11]..[318,11382+13])
                            expression (typing/includecore.ml[319,11399+6]..[320,11477+56])
                              Pexp_apply
                              expression (typing/includecore.ml[319,11399+6]..[319,11399+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[319,11399+6]..[319,11399+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[319,11399+21]..[319,11399+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[319,11399+21]..[319,11399+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[319,11399+26]..[319,11399+77])
                                    Pexp_constant PConst_string("%aAn extra constructor, %s, is provided in %s %s.",(typing/includecore.ml[319,11399+27]..[319,11399+76]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[320,11477+8]..[320,11477+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[320,11477+8]..[320,11477+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[320,11477+15]..[320,11477+16])
                                    Pexp_ident "x" (typing/includecore.ml[320,11477+15]..[320,11477+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[320,11477+17]..[320,11477+45])
                                    Pexp_apply
                                    expression (typing/includecore.ml[320,11477+18]..[320,11477+28])
                                      Pexp_ident "Ident.name" (typing/includecore.ml[320,11477+18]..[320,11477+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[320,11477+29]..[320,11477+44])
                                          Pexp_field
                                          expression (typing/includecore.ml[320,11477+29]..[320,11477+38])
                                            Pexp_field
                                            expression (typing/includecore.ml[320,11477+29]..[320,11477+31])
                                              Pexp_ident "cd" (typing/includecore.ml[320,11477+29]..[320,11477+31])
                                            "delete" (typing/includecore.ml[320,11477+32]..[320,11477+38])
                                          "cd_id" (typing/includecore.ml[320,11477+39]..[320,11477+44])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[320,11477+46]..[320,11477+51])
                                    Pexp_ident "first" (typing/includecore.ml[320,11477+46]..[320,11477+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[320,11477+52]..[320,11477+56])
                                    Pexp_ident "decl" (typing/includecore.ml[320,11477+52]..[320,11477+56])
                              ]
                          <case>
                            pattern (typing/includecore.ml[321,11534+4]..[321,11534+13])
                              Ppat_construct "Insert" (typing/includecore.ml[321,11534+4]..[321,11534+10])
                              Some
                                []
                                pattern (typing/includecore.ml[321,11534+11]..[321,11534+13])
                                  Ppat_var "cd" (typing/includecore.ml[321,11534+11]..[321,11534+13])
                            expression (typing/includecore.ml[322,11551+6]..[323,11620+56])
                              Pexp_apply
                              expression (typing/includecore.ml[322,11551+6]..[322,11551+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[322,11551+6]..[322,11551+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[322,11551+21]..[322,11551+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[322,11551+21]..[322,11551+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[322,11551+25]..[322,11551+68])
                                    Pexp_constant PConst_string("%aA constructor, %s, is missing in %s %s.",(typing/includecore.ml[322,11551+26]..[322,11551+67]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[323,11620+8]..[323,11620+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[323,11620+8]..[323,11620+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[323,11620+15]..[323,11620+16])
                                    Pexp_ident "x" (typing/includecore.ml[323,11620+15]..[323,11620+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[323,11620+17]..[323,11620+45])
                                    Pexp_apply
                                    expression (typing/includecore.ml[323,11620+18]..[323,11620+28])
                                      Pexp_ident "Ident.name" (typing/includecore.ml[323,11620+18]..[323,11620+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[323,11620+29]..[323,11620+44])
                                          Pexp_field
                                          expression (typing/includecore.ml[323,11620+29]..[323,11620+38])
                                            Pexp_field
                                            expression (typing/includecore.ml[323,11620+29]..[323,11620+31])
                                              Pexp_ident "cd" (typing/includecore.ml[323,11620+29]..[323,11620+31])
                                            "insert" (typing/includecore.ml[323,11620+32]..[323,11620+38])
                                          "cd_id" (typing/includecore.ml[323,11620+39]..[323,11620+44])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[323,11620+46]..[323,11620+51])
                                    Pexp_ident "first" (typing/includecore.ml[323,11620+46]..[323,11620+51])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[323,11620+52]..[323,11620+56])
                                    Pexp_ident "decl" (typing/includecore.ml[323,11620+52]..[323,11620+56])
                              ]
                          <case>
                            pattern (typing/includecore.ml[324,11677+4]..[324,11677+39])
                              Ppat_construct "Change" (typing/includecore.ml[324,11677+4]..[324,11677+10])
                              Some
                                []
                                pattern (typing/includecore.ml[324,11677+11]..[324,11677+39])
                                  Ppat_construct "Type" (typing/includecore.ml[324,11677+11]..[324,11677+15])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[324,11677+16]..[324,11677+39])
                                      Ppat_record Closed
                                      [
                                        "got" (typing/includecore.ml[324,11677+17]..[324,11677+20]) ghost
                                          pattern (typing/includecore.ml[324,11677+17]..[324,11677+20])
                                            Ppat_var "got" (typing/includecore.ml[324,11677+17]..[324,11677+20])
                                        "expected" (typing/includecore.ml[324,11677+22]..[324,11677+30]) ghost
                                          pattern (typing/includecore.ml[324,11677+22]..[324,11677+30])
                                            Ppat_var "expected" (typing/includecore.ml[324,11677+22]..[324,11677+30])
                                        "reason" (typing/includecore.ml[324,11677+32]..[324,11677+38]) ghost
                                          pattern (typing/includecore.ml[324,11677+32]..[324,11677+38])
                                            Ppat_var "reason" (typing/includecore.ml[324,11677+32]..[324,11677+38])
                                      ]
                            expression (typing/includecore.ml[325,11720+6]..[332,11945+66])
                              Pexp_apply
                              expression (typing/includecore.ml[325,11720+6]..[325,11720+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[325,11720+6]..[325,11720+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[325,11720+21]..[325,11720+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[325,11720+21]..[325,11720+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[326,11745+8]..[328,11831+25])
                                    Pexp_constant PConst_string("@[<hv>%aConstructors do not match:@;<1 2>%a@ is not the same as:@;<1 2>%a@ %a@]",(typing/includecore.ml[326,11745+9]..[328,11831+24]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[329,11857+8]..[329,11857+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[329,11857+8]..[329,11857+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[329,11857+15]..[329,11857+16])
                                    Pexp_ident "x" (typing/includecore.ml[329,11857+15]..[329,11857+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[330,11874+8]..[330,11874+28])
                                    Pexp_ident "Printtyp.constructor" (typing/includecore.ml[330,11874+8]..[330,11874+28])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[330,11874+29]..[330,11874+32])
                                    Pexp_ident "got" (typing/includecore.ml[330,11874+29]..[330,11874+32])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[331,11907+8]..[331,11907+28])
                                    Pexp_ident "Printtyp.constructor" (typing/includecore.ml[331,11907+8]..[331,11907+28])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[331,11907+29]..[331,11907+37])
                                    Pexp_ident "expected" (typing/includecore.ml[331,11907+29]..[331,11907+37])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[332,11945+8]..[332,11945+59])
                                    Pexp_apply
                                    expression (typing/includecore.ml[332,11945+9]..[332,11945+36])
                                      Pexp_ident "report_constructor_mismatch" (typing/includecore.ml[332,11945+9]..[332,11945+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[332,11945+37]..[332,11945+42])
                                          Pexp_ident "first" (typing/includecore.ml[332,11945+37]..[332,11945+42])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[332,11945+43]..[332,11945+49])
                                          Pexp_ident "second" (typing/includecore.ml[332,11945+43]..[332,11945+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[332,11945+50]..[332,11945+54])
                                          Pexp_ident "decl" (typing/includecore.ml[332,11945+50]..[332,11945+54])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[332,11945+55]..[332,11945+58])
                                          Pexp_ident "env" (typing/includecore.ml[332,11945+55]..[332,11945+58])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[332,11945+60]..[332,11945+66])
                                    Pexp_ident "reason" (typing/includecore.ml[332,11945+60]..[332,11945+66])
                              ]
                          <case>
                            pattern (typing/includecore.ml[333,12012+4]..[333,12012+17])
                              Ppat_construct "Change" (typing/includecore.ml[333,12012+4]..[333,12012+10])
                              Some
                                []
                                pattern (typing/includecore.ml[333,12012+11]..[333,12012+17])
                                  Ppat_construct "Name" (typing/includecore.ml[333,12012+11]..[333,12012+15])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[333,12012+16]..[333,12012+17])
                                      Ppat_var "n" (typing/includecore.ml[333,12012+16]..[333,12012+17])
                            expression (typing/includecore.ml[334,12033+6]..[336,12116+33])
                              Pexp_apply
                              expression (typing/includecore.ml[334,12033+6]..[334,12033+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[334,12033+6]..[334,12033+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[334,12033+21]..[334,12033+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[334,12033+21]..[334,12033+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[335,12058+8]..[335,12058+57])
                                    Pexp_constant PConst_string("%aConstructors have different names, %s and %s.",(typing/includecore.ml[335,12058+9]..[335,12058+56]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[336,12116+8]..[336,12116+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[336,12116+8]..[336,12116+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[336,12116+15]..[336,12116+16])
                                    Pexp_ident "x" (typing/includecore.ml[336,12116+15]..[336,12116+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[336,12116+17]..[336,12116+22])
                                    Pexp_field
                                    expression (typing/includecore.ml[336,12116+17]..[336,12116+18])
                                      Pexp_ident "n" (typing/includecore.ml[336,12116+17]..[336,12116+18])
                                    "got" (typing/includecore.ml[336,12116+19]..[336,12116+22])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[336,12116+23]..[336,12116+33])
                                    Pexp_field
                                    expression (typing/includecore.ml[336,12116+23]..[336,12116+24])
                                      Pexp_ident "n" (typing/includecore.ml[336,12116+23]..[336,12116+24])
                                    "expected" (typing/includecore.ml[336,12116+25]..[336,12116+33])
                              ]
                          <case>
                            pattern (typing/includecore.ml[337,12150+4]..[337,12150+11])
                              Ppat_construct "Swap" (typing/includecore.ml[337,12150+4]..[337,12150+8])
                              Some
                                []
                                pattern (typing/includecore.ml[337,12150+9]..[337,12150+11])
                                  Ppat_var "sw" (typing/includecore.ml[337,12150+9]..[337,12150+11])
                            expression (typing/includecore.ml[338,12165+6]..[340,12244+33])
                              Pexp_apply
                              expression (typing/includecore.ml[338,12165+6]..[338,12165+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[338,12165+6]..[338,12165+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[338,12165+21]..[338,12165+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[338,12165+21]..[338,12165+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[339,12190+8]..[339,12190+53])
                                    Pexp_constant PConst_string("%aConstructors %s and %s have been swapped.",(typing/includecore.ml[339,12190+9]..[339,12190+52]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[340,12244+8]..[340,12244+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[340,12244+8]..[340,12244+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[340,12244+15]..[340,12244+16])
                                    Pexp_ident "x" (typing/includecore.ml[340,12244+15]..[340,12244+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[340,12244+17]..[340,12244+25])
                                    Pexp_field
                                    expression (typing/includecore.ml[340,12244+17]..[340,12244+19])
                                      Pexp_ident "sw" (typing/includecore.ml[340,12244+17]..[340,12244+19])
                                    "first" (typing/includecore.ml[340,12244+20]..[340,12244+25])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[340,12244+26]..[340,12244+33])
                                    Pexp_field
                                    expression (typing/includecore.ml[340,12244+26]..[340,12244+28])
                                      Pexp_ident "sw" (typing/includecore.ml[340,12244+26]..[340,12244+28])
                                    "last" (typing/includecore.ml[340,12244+29]..[340,12244+33])
                              ]
                          <case>
                            pattern (typing/includecore.ml[341,12278+4]..[341,12278+30])
                              Ppat_construct "Move" (typing/includecore.ml[341,12278+4]..[341,12278+8])
                              Some
                                []
                                pattern (typing/includecore.ml[341,12278+9]..[341,12278+30])
                                  Ppat_record Closed
                                  [
                                    "name" (typing/includecore.ml[341,12278+10]..[341,12278+14]) ghost
                                      pattern (typing/includecore.ml[341,12278+10]..[341,12278+14])
                                        Ppat_var "name" (typing/includecore.ml[341,12278+10]..[341,12278+14])
                                    "got" (typing/includecore.ml[341,12278+16]..[341,12278+19]) ghost
                                      pattern (typing/includecore.ml[341,12278+16]..[341,12278+19])
                                        Ppat_var "got" (typing/includecore.ml[341,12278+16]..[341,12278+19])
                                    "expected" (typing/includecore.ml[341,12278+21]..[341,12278+29]) ghost
                                      pattern (typing/includecore.ml[341,12278+21]..[341,12278+29])
                                        Ppat_var "expected" (typing/includecore.ml[341,12278+21]..[341,12278+29])
                                  ]
                            expression (typing/includecore.ml[342,12312+6]..[344,12413+34])
                              Pexp_apply
                              expression (typing/includecore.ml[342,12312+6]..[342,12312+20])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[342,12312+6]..[342,12312+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[342,12312+21]..[342,12312+24])
                                    Pexp_ident "ppf" (typing/includecore.ml[342,12312+21]..[342,12312+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[343,12337+8]..[343,12337+75])
                                    Pexp_constant PConst_string("@[<2>%aConstructor %s has been moved@ from@ position %d@ to %d.@]",(typing/includecore.ml[343,12337+9]..[343,12337+74]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[344,12413+8]..[344,12413+14])
                                    Pexp_ident "prefix" (typing/includecore.ml[344,12413+8]..[344,12413+14])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[344,12413+15]..[344,12413+16])
                                    Pexp_ident "x" (typing/includecore.ml[344,12413+15]..[344,12413+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[344,12413+17]..[344,12413+21])
                                    Pexp_ident "name" (typing/includecore.ml[344,12413+17]..[344,12413+21])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[344,12413+22]..[344,12413+30])
                                    Pexp_ident "expected" (typing/includecore.ml[344,12413+22]..[344,12413+30])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[344,12413+31]..[344,12413+34])
                                    Pexp_ident "got" (typing/includecore.ml[344,12413+31]..[344,12413+34])
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[346,12449+0]..[356,12965+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[346,12449+4]..[346,12449+41])
          Ppat_var "report_extension_constructor_mismatch" (typing/includecore.ml[346,12449+4]..[346,12449+41])
        expression (typing/includecore.ml[346,12449+42]..[356,12965+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[346,12449+42]..[346,12449+47])
            Ppat_var "first" (typing/includecore.ml[346,12449+42]..[346,12449+47])
          expression (typing/includecore.ml[346,12449+48]..[356,12965+63]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[346,12449+48]..[346,12449+54])
              Ppat_var "second" (typing/includecore.ml[346,12449+48]..[346,12449+54])
            expression (typing/includecore.ml[346,12449+55]..[356,12965+63]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[346,12449+55]..[346,12449+59])
                Ppat_var "decl" (typing/includecore.ml[346,12449+55]..[346,12449+59])
              expression (typing/includecore.ml[346,12449+60]..[356,12965+63]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[346,12449+60]..[346,12449+63])
                  Ppat_var "env" (typing/includecore.ml[346,12449+60]..[346,12449+63])
                expression (typing/includecore.ml[346,12449+64]..[356,12965+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[346,12449+64]..[346,12449+67])
                    Ppat_var "ppf" (typing/includecore.ml[346,12449+64]..[346,12449+67])
                  expression (typing/includecore.ml[346,12449+68]..[356,12965+63]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[346,12449+68]..[346,12449+71])
                      Ppat_var "err" (typing/includecore.ml[346,12449+68]..[346,12449+71])
                    expression (typing/includecore.ml[347,12523+2]..[356,12965+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[347,12523+6]..[347,12523+8])
                            Ppat_var "pr" (typing/includecore.ml[347,12523+6]..[347,12523+8])
                          expression (typing/includecore.ml[347,12523+9]..[347,12523+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[347,12523+9]..[347,12523+12])
                              Ppat_var "fmt" (typing/includecore.ml[347,12523+9]..[347,12523+12])
                            expression (typing/includecore.ml[347,12523+15]..[347,12523+37])
                              Pexp_apply
                              expression (typing/includecore.ml[347,12523+15]..[347,12523+29])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[347,12523+15]..[347,12523+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[347,12523+30]..[347,12523+33])
                                    Pexp_ident "ppf" (typing/includecore.ml[347,12523+30]..[347,12523+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[347,12523+34]..[347,12523+37])
                                    Pexp_ident "fmt" (typing/includecore.ml[347,12523+34]..[347,12523+37])
                              ]
                      ]
                      expression (typing/includecore.ml[348,12564+2]..[356,12965+63])
                        Pexp_match
                        expression (typing/includecore.ml[348,12564+8]..[348,12564+46])
                          Pexp_constraint
                          expression (typing/includecore.ml[348,12564+9]..[348,12564+12])
                            Pexp_ident "err" (typing/includecore.ml[348,12564+9]..[348,12564+12])
                          core_type (typing/includecore.ml[348,12564+15]..[348,12564+45])
                            Ptyp_constr "extension_constructor_mismatch" (typing/includecore.ml[348,12564+15]..[348,12564+45])
                            []
                        [
                          <case>
                            pattern (typing/includecore.ml[349,12616+4]..[349,12616+23])
                              Ppat_construct "Constructor_privacy" (typing/includecore.ml[349,12616+4]..[349,12616+23])
                              None
                            expression (typing/includecore.ml[350,12643+6]..[350,12643+62])
                              Pexp_apply
                              expression (typing/includecore.ml[350,12643+6]..[350,12643+8])
                                Pexp_ident "pr" (typing/includecore.ml[350,12643+6]..[350,12643+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[350,12643+9]..[350,12643+62])
                                    Pexp_constant PConst_string("Private extension constructor(s) would be revealed.",(typing/includecore.ml[350,12643+10]..[350,12643+61]),None)
                              ]
                          <case>
                            pattern (typing/includecore.ml[351,12706+4]..[351,12706+46])
                              Ppat_construct "Constructor_mismatch" (typing/includecore.ml[351,12706+4]..[351,12706+24])
                              Some
                                []
                                pattern (typing/includecore.ml[351,12706+25]..[351,12706+46])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[351,12706+26]..[351,12706+28])
                                      Ppat_var "id" (typing/includecore.ml[351,12706+26]..[351,12706+28])
                                    pattern (typing/includecore.ml[351,12706+30]..[351,12706+34])
                                      Ppat_var "ext1" (typing/includecore.ml[351,12706+30]..[351,12706+34])
                                    pattern (typing/includecore.ml[351,12706+36]..[351,12706+40])
                                      Ppat_var "ext2" (typing/includecore.ml[351,12706+36]..[351,12706+40])
                                    pattern (typing/includecore.ml[351,12706+42]..[351,12706+45])
                                      Ppat_var "err" (typing/includecore.ml[351,12706+42]..[351,12706+45])
                                  ]
                            expression (typing/includecore.ml[352,12756+6]..[356,12965+63])
                              Pexp_apply
                              expression (typing/includecore.ml[352,12756+6]..[352,12756+8])
                                Pexp_ident "pr" (typing/includecore.ml[352,12756+6]..[352,12756+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[352,12756+9]..[353,12830+26])
                                    Pexp_constant PConst_string("@[<hv>Constructors do not match:@;<1 2>%a@ is not the same as:@;<1 2>%a@ %a@]",(typing/includecore.ml[352,12756+10]..[353,12830+25]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[354,12857+8]..[354,12857+48])
                                    Pexp_apply
                                    expression (typing/includecore.ml[354,12857+9]..[354,12857+44])
                                      Pexp_ident "Printtyp.extension_only_constructor" (typing/includecore.ml[354,12857+9]..[354,12857+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[354,12857+45]..[354,12857+47])
                                          Pexp_ident "id" (typing/includecore.ml[354,12857+45]..[354,12857+47])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[354,12857+49]..[354,12857+53])
                                    Pexp_ident "ext1" (typing/includecore.ml[354,12857+49]..[354,12857+53])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[355,12911+8]..[355,12911+48])
                                    Pexp_apply
                                    expression (typing/includecore.ml[355,12911+9]..[355,12911+44])
                                      Pexp_ident "Printtyp.extension_only_constructor" (typing/includecore.ml[355,12911+9]..[355,12911+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[355,12911+45]..[355,12911+47])
                                          Pexp_ident "id" (typing/includecore.ml[355,12911+45]..[355,12911+47])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[355,12911+49]..[355,12911+53])
                                    Pexp_ident "ext2" (typing/includecore.ml[355,12911+49]..[355,12911+53])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[356,12965+8]..[356,12965+59])
                                    Pexp_apply
                                    expression (typing/includecore.ml[356,12965+9]..[356,12965+36])
                                      Pexp_ident "report_constructor_mismatch" (typing/includecore.ml[356,12965+9]..[356,12965+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[356,12965+37]..[356,12965+42])
                                          Pexp_ident "first" (typing/includecore.ml[356,12965+37]..[356,12965+42])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[356,12965+43]..[356,12965+49])
                                          Pexp_ident "second" (typing/includecore.ml[356,12965+43]..[356,12965+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[356,12965+50]..[356,12965+54])
                                          Pexp_ident "decl" (typing/includecore.ml[356,12965+50]..[356,12965+54])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[356,12965+55]..[356,12965+58])
                                          Pexp_ident "env" (typing/includecore.ml[356,12965+55]..[356,12965+58])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[356,12965+60]..[356,12965+63])
                                    Pexp_ident "err" (typing/includecore.ml[356,12965+60]..[356,12965+63])
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[358,13030+0]..[373,13733+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[358,13030+4]..[358,13030+35])
          Ppat_var "report_private_variant_mismatch" (typing/includecore.ml[358,13030+4]..[358,13030+35])
        expression (typing/includecore.ml[358,13030+36]..[373,13733+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[358,13030+36]..[358,13030+41])
            Ppat_var "first" (typing/includecore.ml[358,13030+36]..[358,13030+41])
          expression (typing/includecore.ml[358,13030+42]..[373,13733+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[358,13030+42]..[358,13030+48])
              Ppat_var "second" (typing/includecore.ml[358,13030+42]..[358,13030+48])
            expression (typing/includecore.ml[358,13030+49]..[373,13733+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[358,13030+49]..[358,13030+53])
                Ppat_var "decl" (typing/includecore.ml[358,13030+49]..[358,13030+53])
              expression (typing/includecore.ml[358,13030+54]..[373,13733+40]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[358,13030+54]..[358,13030+57])
                  Ppat_var "env" (typing/includecore.ml[358,13030+54]..[358,13030+57])
                expression (typing/includecore.ml[358,13030+58]..[373,13733+40]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[358,13030+58]..[358,13030+61])
                    Ppat_var "ppf" (typing/includecore.ml[358,13030+58]..[358,13030+61])
                  expression (typing/includecore.ml[358,13030+62]..[373,13733+40]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[358,13030+62]..[358,13030+65])
                      Ppat_var "err" (typing/includecore.ml[358,13030+62]..[358,13030+65])
                    expression (typing/includecore.ml[359,13098+2]..[373,13733+40])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[359,13098+6]..[359,13098+8])
                            Ppat_var "pr" (typing/includecore.ml[359,13098+6]..[359,13098+8])
                          expression (typing/includecore.ml[359,13098+9]..[359,13098+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[359,13098+9]..[359,13098+12])
                              Ppat_var "fmt" (typing/includecore.ml[359,13098+9]..[359,13098+12])
                            expression (typing/includecore.ml[359,13098+15]..[359,13098+37])
                              Pexp_apply
                              expression (typing/includecore.ml[359,13098+15]..[359,13098+29])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[359,13098+15]..[359,13098+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[359,13098+30]..[359,13098+33])
                                    Pexp_ident "ppf" (typing/includecore.ml[359,13098+30]..[359,13098+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[359,13098+34]..[359,13098+37])
                                    Pexp_ident "fmt" (typing/includecore.ml[359,13098+34]..[359,13098+37])
                              ]
                      ]
                      expression (typing/includecore.ml[360,13139+2]..[373,13733+40])
                        Pexp_match
                        expression (typing/includecore.ml[360,13139+8]..[360,13139+40])
                          Pexp_constraint
                          expression (typing/includecore.ml[360,13139+9]..[360,13139+12])
                            Pexp_ident "err" (typing/includecore.ml[360,13139+9]..[360,13139+12])
                          core_type (typing/includecore.ml[360,13139+15]..[360,13139+39])
                            Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[360,13139+15]..[360,13139+39])
                            []
                        [
                          <case>
                            pattern (typing/includecore.ml[361,13185+4]..[361,13185+21])
                              Ppat_construct "Only_outer_closed" (typing/includecore.ml[361,13185+4]..[361,13185+21])
                              None
                            expression (typing/includecore.ml[363,13288+6]..[364,13346+46])
                              Pexp_apply
                              expression (typing/includecore.ml[363,13288+6]..[363,13288+8])
                                Pexp_ident "pr" (typing/includecore.ml[363,13288+6]..[363,13288+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[363,13288+9]..[363,13288+57])
                                    Pexp_constant PConst_string("%s is private and closed, but %s is not closed",(typing/includecore.ml[363,13288+10]..[363,13288+56]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[364,13346+8]..[364,13346+40])
                                    Pexp_apply
                                    expression (typing/includecore.ml[364,13346+9]..[364,13346+32])
                                      Pexp_ident "String.capitalize_ascii" (typing/includecore.ml[364,13346+9]..[364,13346+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[364,13346+33]..[364,13346+39])
                                          Pexp_ident "second" (typing/includecore.ml[364,13346+33]..[364,13346+39])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[364,13346+41]..[364,13346+46])
                                    Pexp_ident "first" (typing/includecore.ml[364,13346+41]..[364,13346+46])
                              ]
                          <case>
                            pattern (typing/includecore.ml[365,13393+4]..[365,13393+23])
                              Ppat_construct "Missing" (typing/includecore.ml[365,13393+4]..[365,13393+11])
                              Some
                                []
                                pattern (typing/includecore.ml[365,13393+12]..[365,13393+23])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[365,13393+13]..[365,13393+16])
                                      Ppat_var "ord" (typing/includecore.ml[365,13393+13]..[365,13393+16])
                                    pattern (typing/includecore.ml[365,13393+18]..[365,13393+22])
                                      Ppat_var "name" (typing/includecore.ml[365,13393+18]..[365,13393+22])
                                  ]
                            expression (typing/includecore.ml[366,13420+6]..[367,13476+43])
                              Pexp_apply
                              expression (typing/includecore.ml[366,13420+6]..[366,13420+8])
                                Pexp_ident "pr" (typing/includecore.ml[366,13420+6]..[366,13420+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[366,13420+9]..[366,13420+55])
                                    Pexp_constant PConst_string("The constructor %s is only present in %s %s.",(typing/includecore.ml[366,13420+10]..[366,13420+54]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[367,13476+8]..[367,13476+12])
                                    Pexp_ident "name" (typing/includecore.ml[367,13476+8]..[367,13476+12])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[367,13476+13]..[367,13476+38])
                                    Pexp_apply
                                    expression (typing/includecore.ml[367,13476+14]..[367,13476+20])
                                      Pexp_ident "choose" (typing/includecore.ml[367,13476+14]..[367,13476+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[367,13476+21]..[367,13476+24])
                                          Pexp_ident "ord" (typing/includecore.ml[367,13476+21]..[367,13476+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[367,13476+25]..[367,13476+30])
                                          Pexp_ident "first" (typing/includecore.ml[367,13476+25]..[367,13476+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[367,13476+31]..[367,13476+37])
                                          Pexp_ident "second" (typing/includecore.ml[367,13476+31]..[367,13476+37])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[367,13476+39]..[367,13476+43])
                                    Pexp_ident "decl" (typing/includecore.ml[367,13476+39]..[367,13476+43])
                              ]
                          <case>
                            pattern (typing/includecore.ml[368,13520+4]..[368,13520+14])
                              Ppat_construct "Presence" (typing/includecore.ml[368,13520+4]..[368,13520+12])
                              Some
                                []
                                pattern (typing/includecore.ml[368,13520+13]..[368,13520+14])
                                  Ppat_var "s" (typing/includecore.ml[368,13520+13]..[368,13520+14])
                            expression (typing/includecore.ml[369,13538+6]..[370,13614+27])
                              Pexp_apply
                              expression (typing/includecore.ml[369,13538+6]..[369,13538+8])
                                Pexp_ident "pr" (typing/includecore.ml[369,13538+6]..[369,13538+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[369,13538+9]..[369,13538+75])
                                    Pexp_constant PConst_string("The tag `%s is present in the %s %s,@ but might not be in the %s",(typing/includecore.ml[369,13538+10]..[369,13538+74]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[370,13614+8]..[370,13614+9])
                                    Pexp_ident "s" (typing/includecore.ml[370,13614+8]..[370,13614+9])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[370,13614+10]..[370,13614+16])
                                    Pexp_ident "second" (typing/includecore.ml[370,13614+10]..[370,13614+16])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[370,13614+17]..[370,13614+21])
                                    Pexp_ident "decl" (typing/includecore.ml[370,13614+17]..[370,13614+21])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[370,13614+22]..[370,13614+27])
                                    Pexp_ident "first" (typing/includecore.ml[370,13614+22]..[370,13614+27])
                              ]
                          <case>
                            pattern (typing/includecore.ml[371,13642+4]..[371,13642+28])
                              Ppat_construct "Incompatible_types_for" (typing/includecore.ml[371,13642+4]..[371,13642+26])
                              Some
                                []
                                pattern (typing/includecore.ml[371,13642+27]..[371,13642+28])
                                  Ppat_var "s" (typing/includecore.ml[371,13642+27]..[371,13642+28])
                            expression (typing/includecore.ml[371,13642+32]..[371,13642+73])
                              Pexp_apply
                              expression (typing/includecore.ml[371,13642+32]..[371,13642+34])
                                Pexp_ident "pr" (typing/includecore.ml[371,13642+32]..[371,13642+34])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[371,13642+35]..[371,13642+71])
                                    Pexp_constant PConst_string("Types for tag `%s are incompatible",(typing/includecore.ml[371,13642+36]..[371,13642+70]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[371,13642+72]..[371,13642+73])
                                    Pexp_ident "s" (typing/includecore.ml[371,13642+72]..[371,13642+73])
                              ]
                          <case>
                            pattern (typing/includecore.ml[372,13716+4]..[372,13716+13])
                              Ppat_construct "Types" (typing/includecore.ml[372,13716+4]..[372,13716+9])
                              Some
                                []
                                pattern (typing/includecore.ml[372,13716+10]..[372,13716+13])
                                  Ppat_var "err" (typing/includecore.ml[372,13716+10]..[372,13716+13])
                            expression (typing/includecore.ml[373,13733+6]..[373,13733+40])
                              Pexp_apply
                              expression (typing/includecore.ml[373,13733+6]..[373,13733+28])
                                Pexp_ident "report_type_inequality" (typing/includecore.ml[373,13733+6]..[373,13733+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[373,13733+29]..[373,13733+32])
                                    Pexp_ident "env" (typing/includecore.ml[373,13733+29]..[373,13733+32])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[373,13733+33]..[373,13733+36])
                                    Pexp_ident "ppf" (typing/includecore.ml[373,13733+33]..[373,13733+36])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[373,13733+37]..[373,13733+40])
                                    Pexp_ident "err" (typing/includecore.ml[373,13733+37]..[373,13733+40])
                              ]
                        ]
    ]
  structure_item (typing/includecore.ml[375,13775+0]..[379,13978+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[375,13775+4]..[375,13775+34])
          Ppat_var "report_private_object_mismatch" (typing/includecore.ml[375,13775+4]..[375,13775+34])
        expression (typing/includecore.ml[375,13775+35]..[379,13978+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[375,13775+35]..[375,13775+38])
            Ppat_var "env" (typing/includecore.ml[375,13775+35]..[375,13775+38])
          expression (typing/includecore.ml[375,13775+39]..[379,13978+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[375,13775+39]..[375,13775+42])
              Ppat_var "ppf" (typing/includecore.ml[375,13775+39]..[375,13775+42])
            expression (typing/includecore.ml[375,13775+43]..[379,13978+51]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[375,13775+43]..[375,13775+46])
                Ppat_var "err" (typing/includecore.ml[375,13775+43]..[375,13775+46])
              expression (typing/includecore.ml[376,13824+2]..[379,13978+51])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/includecore.ml[376,13824+6]..[376,13824+8])
                      Ppat_var "pr" (typing/includecore.ml[376,13824+6]..[376,13824+8])
                    expression (typing/includecore.ml[376,13824+9]..[376,13824+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[376,13824+9]..[376,13824+12])
                        Ppat_var "fmt" (typing/includecore.ml[376,13824+9]..[376,13824+12])
                      expression (typing/includecore.ml[376,13824+15]..[376,13824+37])
                        Pexp_apply
                        expression (typing/includecore.ml[376,13824+15]..[376,13824+29])
                          Pexp_ident "Format.fprintf" (typing/includecore.ml[376,13824+15]..[376,13824+29])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[376,13824+30]..[376,13824+33])
                              Pexp_ident "ppf" (typing/includecore.ml[376,13824+30]..[376,13824+33])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[376,13824+34]..[376,13824+37])
                              Pexp_ident "fmt" (typing/includecore.ml[376,13824+34]..[376,13824+37])
                        ]
                ]
                expression (typing/includecore.ml[377,13865+2]..[379,13978+51])
                  Pexp_match
                  expression (typing/includecore.ml[377,13865+8]..[377,13865+39])
                    Pexp_constraint
                    expression (typing/includecore.ml[377,13865+9]..[377,13865+12])
                      Pexp_ident "err" (typing/includecore.ml[377,13865+9]..[377,13865+12])
                    core_type (typing/includecore.ml[377,13865+15]..[377,13865+38])
                      Ptyp_constr "private_object_mismatch" (typing/includecore.ml[377,13865+15]..[377,13865+38])
                      []
                  [
                    <case>
                      pattern (typing/includecore.ml[378,13910+4]..[378,13910+13])
                        Ppat_construct "Missing" (typing/includecore.ml[378,13910+4]..[378,13910+11])
                        Some
                          []
                          pattern (typing/includecore.ml[378,13910+12]..[378,13910+13])
                            Ppat_var "s" (typing/includecore.ml[378,13910+12]..[378,13910+13])
                      expression (typing/includecore.ml[378,13910+17]..[378,13910+67])
                        Pexp_apply
                        expression (typing/includecore.ml[378,13910+17]..[378,13910+19])
                          Pexp_ident "pr" (typing/includecore.ml[378,13910+17]..[378,13910+19])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[378,13910+20]..[378,13910+65])
                              Pexp_constant PConst_string("The implementation is missing the method %s",(typing/includecore.ml[378,13910+21]..[378,13910+64]),None)
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[378,13910+66]..[378,13910+67])
                              Pexp_ident "s" (typing/includecore.ml[378,13910+66]..[378,13910+67])
                        ]
                    <case>
                      pattern (typing/includecore.ml[379,13978+4]..[379,13978+13])
                        Ppat_construct "Types" (typing/includecore.ml[379,13978+4]..[379,13978+9])
                        Some
                          []
                          pattern (typing/includecore.ml[379,13978+10]..[379,13978+13])
                            Ppat_var "err" (typing/includecore.ml[379,13978+10]..[379,13978+13])
                      expression (typing/includecore.ml[379,13978+17]..[379,13978+51])
                        Pexp_apply
                        expression (typing/includecore.ml[379,13978+17]..[379,13978+39])
                          Pexp_ident "report_type_inequality" (typing/includecore.ml[379,13978+17]..[379,13978+39])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[379,13978+40]..[379,13978+43])
                              Pexp_ident "env" (typing/includecore.ml[379,13978+40]..[379,13978+43])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[379,13978+44]..[379,13978+47])
                              Pexp_ident "ppf" (typing/includecore.ml[379,13978+44]..[379,13978+47])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[379,13978+48]..[379,13978+51])
                              Pexp_ident "err" (typing/includecore.ml[379,13978+48]..[379,13978+51])
                        ]
                  ]
    ]
  structure_item (typing/includecore.ml[381,14031+0]..[420,15649+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[381,14031+4]..[381,14031+24])
          Ppat_var "report_type_mismatch" (typing/includecore.ml[381,14031+4]..[381,14031+24])
        expression (typing/includecore.ml[381,14031+25]..[420,15649+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[381,14031+25]..[381,14031+30])
            Ppat_var "first" (typing/includecore.ml[381,14031+25]..[381,14031+30])
          expression (typing/includecore.ml[381,14031+31]..[420,15649+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[381,14031+31]..[381,14031+37])
              Ppat_var "second" (typing/includecore.ml[381,14031+31]..[381,14031+37])
            expression (typing/includecore.ml[381,14031+38]..[420,15649+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[381,14031+38]..[381,14031+42])
                Ppat_var "decl" (typing/includecore.ml[381,14031+38]..[381,14031+42])
              expression (typing/includecore.ml[381,14031+43]..[420,15649+17]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[381,14031+43]..[381,14031+46])
                  Ppat_var "env" (typing/includecore.ml[381,14031+43]..[381,14031+46])
                expression (typing/includecore.ml[381,14031+47]..[420,15649+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[381,14031+47]..[381,14031+50])
                    Ppat_var "ppf" (typing/includecore.ml[381,14031+47]..[381,14031+50])
                  expression (typing/includecore.ml[381,14031+51]..[420,15649+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[381,14031+51]..[381,14031+54])
                      Ppat_var "err" (typing/includecore.ml[381,14031+51]..[381,14031+54])
                    expression (typing/includecore.ml[382,14088+2]..[420,15649+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[382,14088+6]..[382,14088+8])
                            Ppat_var "pr" (typing/includecore.ml[382,14088+6]..[382,14088+8])
                          expression (typing/includecore.ml[382,14088+9]..[382,14088+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[382,14088+9]..[382,14088+12])
                              Ppat_var "fmt" (typing/includecore.ml[382,14088+9]..[382,14088+12])
                            expression (typing/includecore.ml[382,14088+15]..[382,14088+37])
                              Pexp_apply
                              expression (typing/includecore.ml[382,14088+15]..[382,14088+29])
                                Pexp_ident "Format.fprintf" (typing/includecore.ml[382,14088+15]..[382,14088+29])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[382,14088+30]..[382,14088+33])
                                    Pexp_ident "ppf" (typing/includecore.ml[382,14088+30]..[382,14088+33])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[382,14088+34]..[382,14088+37])
                                    Pexp_ident "fmt" (typing/includecore.ml[382,14088+34]..[382,14088+37])
                              ]
                      ]
                      expression (typing/includecore.ml[383,14129+2]..[420,15649+17])
                        Pexp_sequence
                        expression (typing/includecore.ml[383,14129+2]..[383,14129+9])
                          Pexp_apply
                          expression (typing/includecore.ml[383,14129+2]..[383,14129+4])
                            Pexp_ident "pr" (typing/includecore.ml[383,14129+2]..[383,14129+4])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[383,14129+5]..[383,14129+9])
                                Pexp_constant PConst_string("@ ",(typing/includecore.ml[383,14129+6]..[383,14129+8]),None)
                          ]
                        expression (typing/includecore.ml[384,14140+2]..[420,15649+17])
                          Pexp_match
                          expression (typing/includecore.ml[384,14140+8]..[384,14140+11])
                            Pexp_ident "err" (typing/includecore.ml[384,14140+8]..[384,14140+11])
                          [
                            <case>
                              pattern (typing/includecore.ml[385,14157+4]..[385,14157+9])
                                Ppat_construct "Arity" (typing/includecore.ml[385,14157+4]..[385,14157+9])
                                None
                              expression (typing/includecore.ml[386,14170+6]..[386,14170+39])
                                Pexp_apply
                                expression (typing/includecore.ml[386,14170+6]..[386,14170+8])
                                  Pexp_ident "pr" (typing/includecore.ml[386,14170+6]..[386,14170+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[386,14170+9]..[386,14170+39])
                                      Pexp_constant PConst_string("They have different arities.",(typing/includecore.ml[386,14170+10]..[386,14170+38]),None)
                                ]
                            <case>
                              pattern (typing/includecore.ml[387,14210+4]..[387,14210+15])
                                Ppat_construct "Privacy" (typing/includecore.ml[387,14210+4]..[387,14210+11])
                                Some
                                  []
                                  pattern (typing/includecore.ml[387,14210+12]..[387,14210+15])
                                    Ppat_var "err" (typing/includecore.ml[387,14210+12]..[387,14210+15])
                              expression (typing/includecore.ml[388,14229+6]..[388,14229+37])
                                Pexp_apply
                                expression (typing/includecore.ml[388,14229+6]..[388,14229+29])
                                  Pexp_ident "report_privacy_mismatch" (typing/includecore.ml[388,14229+6]..[388,14229+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[388,14229+30]..[388,14229+33])
                                      Pexp_ident "ppf" (typing/includecore.ml[388,14229+30]..[388,14229+33])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[388,14229+34]..[388,14229+37])
                                      Pexp_ident "err" (typing/includecore.ml[388,14229+34]..[388,14229+37])
                                ]
                            <case>
                              pattern (typing/includecore.ml[389,14267+4]..[389,14267+8])
                                Ppat_construct "Kind" (typing/includecore.ml[389,14267+4]..[389,14267+8])
                                None
                              expression (typing/includecore.ml[390,14279+6]..[390,14279+30])
                                Pexp_apply
                                expression (typing/includecore.ml[390,14279+6]..[390,14279+8])
                                  Pexp_ident "pr" (typing/includecore.ml[390,14279+6]..[390,14279+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[390,14279+9]..[390,14279+30])
                                      Pexp_constant PConst_string("Their kinds differ.",(typing/includecore.ml[390,14279+10]..[390,14279+29]),None)
                                ]
                            <case>
                              pattern (typing/includecore.ml[391,14310+4]..[391,14310+18])
                                Ppat_construct "Constraint" (typing/includecore.ml[391,14310+4]..[391,14310+14])
                                Some
                                  []
                                  pattern (typing/includecore.ml[391,14310+15]..[391,14310+18])
                                    Ppat_var "err" (typing/includecore.ml[391,14310+15]..[391,14310+18])
                              expression (typing/includecore.ml[395,14518+6]..[396,14556+40])
                                Pexp_sequence
                                expression (typing/includecore.ml[395,14518+6]..[395,14518+36])
                                  Pexp_apply
                                  expression (typing/includecore.ml[395,14518+6]..[395,14518+8])
                                    Pexp_ident "pr" (typing/includecore.ml[395,14518+6]..[395,14518+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[395,14518+9]..[395,14518+36])
                                        Pexp_constant PConst_string("Their parameters differ@,",(typing/includecore.ml[395,14518+10]..[395,14518+35]),None)
                                  ]
                                expression (typing/includecore.ml[396,14556+6]..[396,14556+40])
                                  Pexp_apply
                                  expression (typing/includecore.ml[396,14556+6]..[396,14556+28])
                                    Pexp_ident "report_type_inequality" (typing/includecore.ml[396,14556+6]..[396,14556+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[396,14556+29]..[396,14556+32])
                                        Pexp_ident "env" (typing/includecore.ml[396,14556+29]..[396,14556+32])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[396,14556+33]..[396,14556+36])
                                        Pexp_ident "ppf" (typing/includecore.ml[396,14556+33]..[396,14556+36])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[396,14556+37]..[396,14556+40])
                                        Pexp_ident "err" (typing/includecore.ml[396,14556+37]..[396,14556+40])
                                  ]
                            <case>
                              pattern (typing/includecore.ml[397,14597+4]..[397,14597+16])
                                Ppat_construct "Manifest" (typing/includecore.ml[397,14597+4]..[397,14597+12])
                                Some
                                  []
                                  pattern (typing/includecore.ml[397,14597+13]..[397,14597+16])
                                    Ppat_var "err" (typing/includecore.ml[397,14597+13]..[397,14597+16])
                              expression (typing/includecore.ml[398,14617+6]..[398,14617+40])
                                Pexp_apply
                                expression (typing/includecore.ml[398,14617+6]..[398,14617+28])
                                  Pexp_ident "report_type_inequality" (typing/includecore.ml[398,14617+6]..[398,14617+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[398,14617+29]..[398,14617+32])
                                      Pexp_ident "env" (typing/includecore.ml[398,14617+29]..[398,14617+32])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[398,14617+33]..[398,14617+36])
                                      Pexp_ident "ppf" (typing/includecore.ml[398,14617+33]..[398,14617+36])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[398,14617+37]..[398,14617+40])
                                      Pexp_ident "err" (typing/includecore.ml[398,14617+37]..[398,14617+40])
                                ]
                            <case>
                              pattern (typing/includecore.ml[399,14658+4]..[399,14658+42])
                                Ppat_construct "Private_variant" (typing/includecore.ml[399,14658+4]..[399,14658+19])
                                Some
                                  []
                                  pattern (typing/includecore.ml[399,14658+20]..[399,14658+42])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[399,14658+21]..[399,14658+25])
                                        Ppat_var "_ty1" (typing/includecore.ml[399,14658+21]..[399,14658+25])
                                      pattern (typing/includecore.ml[399,14658+27]..[399,14658+31])
                                        Ppat_var "_ty2" (typing/includecore.ml[399,14658+27]..[399,14658+31])
                                      pattern (typing/includecore.ml[399,14658+33]..[399,14658+41])
                                        Ppat_var "mismatch" (typing/includecore.ml[399,14658+33]..[399,14658+41])
                                    ]
                              expression (typing/includecore.ml[400,14704+6]..[400,14704+72])
                                Pexp_apply
                                expression (typing/includecore.ml[400,14704+6]..[400,14704+37])
                                  Pexp_ident "report_private_variant_mismatch" (typing/includecore.ml[400,14704+6]..[400,14704+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+38]..[400,14704+43])
                                      Pexp_ident "first" (typing/includecore.ml[400,14704+38]..[400,14704+43])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+44]..[400,14704+50])
                                      Pexp_ident "second" (typing/includecore.ml[400,14704+44]..[400,14704+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+51]..[400,14704+55])
                                      Pexp_ident "decl" (typing/includecore.ml[400,14704+51]..[400,14704+55])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+56]..[400,14704+59])
                                      Pexp_ident "env" (typing/includecore.ml[400,14704+56]..[400,14704+59])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+60]..[400,14704+63])
                                      Pexp_ident "ppf" (typing/includecore.ml[400,14704+60]..[400,14704+63])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[400,14704+64]..[400,14704+72])
                                      Pexp_ident "mismatch" (typing/includecore.ml[400,14704+64]..[400,14704+72])
                                ]
                            <case>
                              pattern (typing/includecore.ml[401,14777+4]..[401,14777+41])
                                Ppat_construct "Private_object" (typing/includecore.ml[401,14777+4]..[401,14777+18])
                                Some
                                  []
                                  pattern (typing/includecore.ml[401,14777+19]..[401,14777+41])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[401,14777+20]..[401,14777+24])
                                        Ppat_var "_ty1" (typing/includecore.ml[401,14777+20]..[401,14777+24])
                                      pattern (typing/includecore.ml[401,14777+26]..[401,14777+30])
                                        Ppat_var "_ty2" (typing/includecore.ml[401,14777+26]..[401,14777+30])
                                      pattern (typing/includecore.ml[401,14777+32]..[401,14777+40])
                                        Ppat_var "mismatch" (typing/includecore.ml[401,14777+32]..[401,14777+40])
                                    ]
                              expression (typing/includecore.ml[402,14822+6]..[402,14822+53])
                                Pexp_apply
                                expression (typing/includecore.ml[402,14822+6]..[402,14822+36])
                                  Pexp_ident "report_private_object_mismatch" (typing/includecore.ml[402,14822+6]..[402,14822+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[402,14822+37]..[402,14822+40])
                                      Pexp_ident "env" (typing/includecore.ml[402,14822+37]..[402,14822+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[402,14822+41]..[402,14822+44])
                                      Pexp_ident "ppf" (typing/includecore.ml[402,14822+41]..[402,14822+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[402,14822+45]..[402,14822+53])
                                      Pexp_ident "mismatch" (typing/includecore.ml[402,14822+45]..[402,14822+53])
                                ]
                            <case>
                              pattern (typing/includecore.ml[403,14876+4]..[403,14876+12])
                                Ppat_construct "Variance" (typing/includecore.ml[403,14876+4]..[403,14876+12])
                                None
                              expression (typing/includecore.ml[404,14892+6]..[404,14892+40])
                                Pexp_apply
                                expression (typing/includecore.ml[404,14892+6]..[404,14892+8])
                                  Pexp_ident "pr" (typing/includecore.ml[404,14892+6]..[404,14892+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[404,14892+9]..[404,14892+40])
                                      Pexp_constant PConst_string("Their variances do not agree.",(typing/includecore.ml[404,14892+10]..[404,14892+39]),None)
                                ]
                            <case>
                              pattern (typing/includecore.ml[405,14933+4]..[405,14933+23])
                                Ppat_construct "Record_mismatch" (typing/includecore.ml[405,14933+4]..[405,14933+19])
                                Some
                                  []
                                  pattern (typing/includecore.ml[405,14933+20]..[405,14933+23])
                                    Ppat_var "err" (typing/includecore.ml[405,14933+20]..[405,14933+23])
                              expression (typing/includecore.ml[406,14960+6]..[406,14960+58])
                                Pexp_apply
                                expression (typing/includecore.ml[406,14960+6]..[406,14960+28])
                                  Pexp_ident "report_record_mismatch" (typing/includecore.ml[406,14960+6]..[406,14960+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+29]..[406,14960+34])
                                      Pexp_ident "first" (typing/includecore.ml[406,14960+29]..[406,14960+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+35]..[406,14960+41])
                                      Pexp_ident "second" (typing/includecore.ml[406,14960+35]..[406,14960+41])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+42]..[406,14960+46])
                                      Pexp_ident "decl" (typing/includecore.ml[406,14960+42]..[406,14960+46])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+47]..[406,14960+50])
                                      Pexp_ident "env" (typing/includecore.ml[406,14960+47]..[406,14960+50])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+51]..[406,14960+54])
                                      Pexp_ident "ppf" (typing/includecore.ml[406,14960+51]..[406,14960+54])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[406,14960+55]..[406,14960+58])
                                      Pexp_ident "err" (typing/includecore.ml[406,14960+55]..[406,14960+58])
                                ]
                            <case>
                              pattern (typing/includecore.ml[407,15019+4]..[407,15019+24])
                                Ppat_construct "Variant_mismatch" (typing/includecore.ml[407,15019+4]..[407,15019+20])
                                Some
                                  []
                                  pattern (typing/includecore.ml[407,15019+21]..[407,15019+24])
                                    Ppat_var "err" (typing/includecore.ml[407,15019+21]..[407,15019+24])
                              expression (typing/includecore.ml[408,15047+6]..[408,15047+64])
                                Pexp_apply
                                expression (typing/includecore.ml[408,15047+6]..[408,15047+18])
                                  Pexp_ident "report_patch" (typing/includecore.ml[408,15047+6]..[408,15047+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+19]..[408,15047+34])
                                      Pexp_ident "pp_variant_diff" (typing/includecore.ml[408,15047+19]..[408,15047+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+35]..[408,15047+40])
                                      Pexp_ident "first" (typing/includecore.ml[408,15047+35]..[408,15047+40])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+41]..[408,15047+47])
                                      Pexp_ident "second" (typing/includecore.ml[408,15047+41]..[408,15047+47])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+48]..[408,15047+52])
                                      Pexp_ident "decl" (typing/includecore.ml[408,15047+48]..[408,15047+52])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+53]..[408,15047+56])
                                      Pexp_ident "env" (typing/includecore.ml[408,15047+53]..[408,15047+56])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+57]..[408,15047+60])
                                      Pexp_ident "ppf" (typing/includecore.ml[408,15047+57]..[408,15047+60])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[408,15047+61]..[408,15047+64])
                                      Pexp_ident "err" (typing/includecore.ml[408,15047+61]..[408,15047+64])
                                ]
                            <case>
                              pattern (typing/includecore.ml[409,15112+4]..[409,15112+30])
                                Ppat_construct "Unboxed_representation" (typing/includecore.ml[409,15112+4]..[409,15112+26])
                                Some
                                  []
                                  pattern (typing/includecore.ml[409,15112+27]..[409,15112+30])
                                    Ppat_var "ord" (typing/includecore.ml[409,15112+27]..[409,15112+30])
                              expression (typing/includecore.ml[410,15146+6]..[412,15247+38])
                                Pexp_apply
                                expression (typing/includecore.ml[410,15146+6]..[410,15146+8])
                                  Pexp_ident "pr" (typing/includecore.ml[410,15146+6]..[410,15146+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[410,15146+9]..[410,15146+60])
                                      Pexp_constant PConst_string("Their internal representations differ:@ %s %s %s.",(typing/includecore.ml[410,15146+10]..[410,15146+59]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[411,15207+9]..[411,15207+34])
                                      Pexp_apply
                                      expression (typing/includecore.ml[411,15207+10]..[411,15207+16])
                                        Pexp_ident "choose" (typing/includecore.ml[411,15207+10]..[411,15207+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[411,15207+17]..[411,15207+20])
                                            Pexp_ident "ord" (typing/includecore.ml[411,15207+17]..[411,15207+20])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[411,15207+21]..[411,15207+26])
                                            Pexp_ident "first" (typing/includecore.ml[411,15207+21]..[411,15207+26])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[411,15207+27]..[411,15207+33])
                                            Pexp_ident "second" (typing/includecore.ml[411,15207+27]..[411,15207+33])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[411,15207+35]..[411,15207+39])
                                      Pexp_ident "decl" (typing/includecore.ml[411,15207+35]..[411,15207+39])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[412,15247+9]..[412,15247+38])
                                      Pexp_constant PConst_string("uses unboxed representation",(typing/includecore.ml[412,15247+10]..[412,15247+37]),None)
                                ]
                            <case>
                              pattern (typing/includecore.ml[413,15286+4]..[413,15286+23])
                                Ppat_construct "Immediate" (typing/includecore.ml[413,15286+4]..[413,15286+13])
                                Some
                                  []
                                  pattern (typing/includecore.ml[413,15286+14]..[413,15286+23])
                                    Ppat_var "violation" (typing/includecore.ml[413,15286+14]..[413,15286+23])
                              expression (typing/includecore.ml[414,15313+6]..[420,15649+17])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[414,15313+10]..[414,15313+15])
                                      Ppat_var "first" (typing/includecore.ml[414,15313+10]..[414,15313+15])
                                    expression (typing/includecore.ml[414,15313+18]..[414,15313+53])
                                      Pexp_apply
                                      expression (typing/includecore.ml[414,15313+18]..[414,15313+47])
                                        Pexp_ident "StringLabels.capitalize_ascii" (typing/includecore.ml[414,15313+18]..[414,15313+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[414,15313+48]..[414,15313+53])
                                            Pexp_ident "first" (typing/includecore.ml[414,15313+48]..[414,15313+53])
                                      ]
                                ]
                                expression (typing/includecore.ml[415,15370+6]..[420,15649+17])
                                  Pexp_match
                                  expression (typing/includecore.ml[415,15370+12]..[415,15370+21])
                                    Pexp_ident "violation" (typing/includecore.ml[415,15370+12]..[415,15370+21])
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[416,15397+8]..[416,15397+53])
                                        Ppat_construct "Type_immediacy.Violation.Not_always_immediate" (typing/includecore.ml[416,15397+8]..[416,15397+53])
                                        None
                                      expression (typing/includecore.ml[417,15454+10]..[417,15454+49])
                                        Pexp_apply
                                        expression (typing/includecore.ml[417,15454+10]..[417,15454+12])
                                          Pexp_ident "pr" (typing/includecore.ml[417,15454+10]..[417,15454+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[417,15454+13]..[417,15454+43])
                                              Pexp_constant PConst_string("%s is not an immediate type.",(typing/includecore.ml[417,15454+14]..[417,15454+42]),None)
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[417,15454+44]..[417,15454+49])
                                              Pexp_ident "first" (typing/includecore.ml[417,15454+44]..[417,15454+49])
                                        ]
                                    <case>
                                      pattern (typing/includecore.ml[418,15504+8]..[418,15504+63])
                                        Ppat_construct "Type_immediacy.Violation.Not_always_immediate_on_64bits" (typing/includecore.ml[418,15504+8]..[418,15504+63])
                                        None
                                      expression (typing/includecore.ml[419,15571+10]..[420,15649+17])
                                        Pexp_apply
                                        expression (typing/includecore.ml[419,15571+10]..[419,15571+12])
                                          Pexp_ident "pr" (typing/includecore.ml[419,15571+10]..[419,15571+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[419,15571+13]..[419,15571+77])
                                              Pexp_constant PConst_string("%s is not a type that is always immediate on 64 bit platforms.",(typing/includecore.ml[419,15571+14]..[419,15571+76]),None)
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[420,15649+12]..[420,15649+17])
                                              Pexp_ident "first" (typing/includecore.ml[420,15649+12]..[420,15649+17])
                                        ]
                                  ]
                          ]
    ]
  structure_item (typing/includecore.ml[422,15668+0]..[553,19987+3])
    Pstr_module
    "Record_diffing" (typing/includecore.ml[422,15668+7]..[422,15668+21])
      module_expr (typing/includecore.ml[422,15668+24]..[553,19987+3])
        Pmod_structure
        [
          structure_item (typing/includecore.ml[424,15700+2]..[437,16190+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[424,15700+6]..[424,15700+20])
                  Ppat_var "compare_labels" (typing/includecore.ml[424,15700+6]..[424,15700+20])
                expression (typing/includecore.ml[424,15700+21]..[437,16190+16]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[424,15700+21]..[424,15700+24])
                    Ppat_var "env" (typing/includecore.ml[424,15700+21]..[424,15700+24])
                  expression (typing/includecore.ml[424,15700+25]..[437,16190+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[424,15700+25]..[424,15700+32])
                      Ppat_var "params1" (typing/includecore.ml[424,15700+25]..[424,15700+32])
                    expression (typing/includecore.ml[424,15700+33]..[437,16190+16]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[424,15700+33]..[424,15700+40])
                        Ppat_var "params2" (typing/includecore.ml[424,15700+33]..[424,15700+40])
                      expression (typing/includecore.ml[425,15741+6]..[437,16190+16]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[425,15741+6]..[425,15741+37])
                          Ppat_constraint
                          pattern (typing/includecore.ml[425,15741+7]..[425,15741+10])
                            Ppat_var "ld1" (typing/includecore.ml[425,15741+7]..[425,15741+10])
                          core_type (typing/includecore.ml[425,15741+13]..[425,15741+36])
                            Ptyp_constr "Types.label_declaration" (typing/includecore.ml[425,15741+13]..[425,15741+36])
                            []
                        expression (typing/includecore.ml[426,15779+6]..[437,16190+16]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[426,15779+6]..[426,15779+37])
                            Ppat_constraint
                            pattern (typing/includecore.ml[426,15779+7]..[426,15779+10])
                              Ppat_var "ld2" (typing/includecore.ml[426,15779+7]..[426,15779+10])
                            core_type (typing/includecore.ml[426,15779+13]..[426,15779+36])
                              Ptyp_constr "Types.label_declaration" (typing/includecore.ml[426,15779+13]..[426,15779+36])
                              []
                          expression (typing/includecore.ml[427,15819+4]..[437,16190+16])
                            Pexp_ifthenelse
                            expression (typing/includecore.ml[427,15819+7]..[427,15819+39])
                              Pexp_apply
                              expression (typing/includecore.ml[427,15819+22]..[427,15819+24])
                                Pexp_ident "<>" (typing/includecore.ml[427,15819+22]..[427,15819+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[427,15819+7]..[427,15819+21])
                                    Pexp_field
                                    expression (typing/includecore.ml[427,15819+7]..[427,15819+10])
                                      Pexp_ident "ld1" (typing/includecore.ml[427,15819+7]..[427,15819+10])
                                    "ld_mutable" (typing/includecore.ml[427,15819+11]..[427,15819+21])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[427,15819+25]..[427,15819+39])
                                    Pexp_field
                                    expression (typing/includecore.ml[427,15819+25]..[427,15819+28])
                                      Pexp_ident "ld2" (typing/includecore.ml[427,15819+25]..[427,15819+28])
                                    "ld_mutable" (typing/includecore.ml[427,15819+29]..[427,15819+39])
                              ]
                            expression (typing/includecore.ml[429,15868+6]..[430,15947+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includecore.ml[429,15868+10]..[429,15868+13])
                                    Ppat_var "ord" (typing/includecore.ml[429,15868+10]..[429,15868+13])
                                  expression (typing/includecore.ml[429,15868+16]..[429,15868+75])
                                    Pexp_ifthenelse
                                    expression (typing/includecore.ml[429,15868+19]..[429,15868+52])
                                      Pexp_apply
                                      expression (typing/includecore.ml[429,15868+34]..[429,15868+35])
                                        Pexp_ident "=" (typing/includecore.ml[429,15868+34]..[429,15868+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[429,15868+19]..[429,15868+33])
                                            Pexp_field
                                            expression (typing/includecore.ml[429,15868+19]..[429,15868+22])
                                              Pexp_ident "ld1" (typing/includecore.ml[429,15868+19]..[429,15868+22])
                                            "ld_mutable" (typing/includecore.ml[429,15868+23]..[429,15868+33])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[429,15868+36]..[429,15868+52])
                                            Pexp_construct "Asttypes.Mutable" (typing/includecore.ml[429,15868+36]..[429,15868+52])
                                            None
                                      ]
                                    expression (typing/includecore.ml[429,15868+58]..[429,15868+63])
                                      Pexp_construct "First" (typing/includecore.ml[429,15868+58]..[429,15868+63])
                                      None
                                    Some
                                      expression (typing/includecore.ml[429,15868+69]..[429,15868+75])
                                        Pexp_construct "Second" (typing/includecore.ml[429,15868+69]..[429,15868+75])
                                        None
                              ]
                              expression (typing/includecore.ml[430,15947+6]..[430,15947+28])
                                Pexp_construct "Some" (typing/includecore.ml[430,15947+6]..[430,15947+10])
                                Some
                                  expression (typing/includecore.ml[430,15947+11]..[430,15947+28])
                                    Pexp_construct "Mutability" (typing/includecore.ml[430,15947+12]..[430,15947+22])
                                    Some
                                      expression (typing/includecore.ml[430,15947+24]..[430,15947+27])
                                        Pexp_ident "ord" (typing/includecore.ml[430,15947+24]..[430,15947+27])
                            Some
                              expression (typing/includecore.ml[432,15985+4]..[437,16190+16])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[432,15985+8]..[432,15985+11])
                                      Ppat_var "tl1" (typing/includecore.ml[432,15985+8]..[432,15985+11])
                                    expression (typing/includecore.ml[432,15985+14]..[432,15985+37])
                                      Pexp_apply
                                      expression (typing/includecore.ml[432,15985+22]..[432,15985+23])
                                        Pexp_ident "@" (typing/includecore.ml[432,15985+22]..[432,15985+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[432,15985+14]..[432,15985+21])
                                            Pexp_ident "params1" (typing/includecore.ml[432,15985+14]..[432,15985+21])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[432,15985+24]..[432,15985+37])
                                            Pexp_construct "::" (typing/includecore.ml[432,15985+25]..[432,15985+37]) ghost
                                            Some
                                              expression (typing/includecore.ml[432,15985+25]..[432,15985+37]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[432,15985+25]..[432,15985+36])
                                                    Pexp_field
                                                    expression (typing/includecore.ml[432,15985+25]..[432,15985+28])
                                                      Pexp_ident "ld1" (typing/includecore.ml[432,15985+25]..[432,15985+28])
                                                    "ld_type" (typing/includecore.ml[432,15985+29]..[432,15985+36])
                                                  expression (typing/includecore.ml[432,15985+36]..[432,15985+37]) ghost
                                                    Pexp_construct "[]" (typing/includecore.ml[432,15985+36]..[432,15985+37]) ghost
                                                    None
                                                ]
                                      ]
                                ]
                                expression (typing/includecore.ml[433,16026+4]..[437,16190+16])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[433,16026+8]..[433,16026+11])
                                        Ppat_var "tl2" (typing/includecore.ml[433,16026+8]..[433,16026+11])
                                      expression (typing/includecore.ml[433,16026+14]..[433,16026+37])
                                        Pexp_apply
                                        expression (typing/includecore.ml[433,16026+22]..[433,16026+23])
                                          Pexp_ident "@" (typing/includecore.ml[433,16026+22]..[433,16026+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[433,16026+14]..[433,16026+21])
                                              Pexp_ident "params2" (typing/includecore.ml[433,16026+14]..[433,16026+21])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[433,16026+24]..[433,16026+37])
                                              Pexp_construct "::" (typing/includecore.ml[433,16026+25]..[433,16026+37]) ghost
                                              Some
                                                expression (typing/includecore.ml[433,16026+25]..[433,16026+37]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includecore.ml[433,16026+25]..[433,16026+36])
                                                      Pexp_field
                                                      expression (typing/includecore.ml[433,16026+25]..[433,16026+28])
                                                        Pexp_ident "ld2" (typing/includecore.ml[433,16026+25]..[433,16026+28])
                                                      "ld_type" (typing/includecore.ml[433,16026+29]..[433,16026+36])
                                                    expression (typing/includecore.ml[433,16026+36]..[433,16026+37]) ghost
                                                      Pexp_construct "[]" (typing/includecore.ml[433,16026+36]..[433,16026+37]) ghost
                                                      None
                                                  ]
                                        ]
                                  ]
                                  expression (typing/includecore.ml[434,16067+4]..[437,16190+16])
                                    Pexp_match
                                    expression (typing/includecore.ml[434,16067+10]..[434,16067+38])
                                      Pexp_apply
                                      expression (typing/includecore.ml[434,16067+10]..[434,16067+21])
                                        Pexp_ident "Ctype.equal" (typing/includecore.ml[434,16067+10]..[434,16067+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[434,16067+22]..[434,16067+25])
                                            Pexp_ident "env" (typing/includecore.ml[434,16067+22]..[434,16067+25])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[434,16067+26]..[434,16067+30])
                                            Pexp_construct "true" (typing/includecore.ml[434,16067+26]..[434,16067+30])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[434,16067+31]..[434,16067+34])
                                            Pexp_ident "tl1" (typing/includecore.ml[434,16067+31]..[434,16067+34])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[434,16067+35]..[434,16067+38])
                                            Pexp_ident "tl2" (typing/includecore.ml[434,16067+35]..[434,16067+38])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/includecore.ml[435,16111+6]..[435,16111+34])
                                          Ppat_exception
                                          pattern (typing/includecore.ml[435,16111+16]..[435,16111+34])
                                            Ppat_construct "Ctype.Equality" (typing/includecore.ml[435,16111+16]..[435,16111+30])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[435,16111+31]..[435,16111+34])
                                                Ppat_var "err" (typing/includecore.ml[435,16111+31]..[435,16111+34])
                                        expression (typing/includecore.ml[436,16149+8]..[436,16149+40])
                                          Pexp_construct "Some" (typing/includecore.ml[436,16149+8]..[436,16149+12])
                                          Some
                                            expression (typing/includecore.ml[436,16149+13]..[436,16149+40])
                                              Pexp_constraint
                                              expression (typing/includecore.ml[436,16149+14]..[436,16149+22])
                                                Pexp_construct "Type" (typing/includecore.ml[436,16149+14]..[436,16149+18])
                                                Some
                                                  expression (typing/includecore.ml[436,16149+19]..[436,16149+22])
                                                    Pexp_ident "err" (typing/includecore.ml[436,16149+19]..[436,16149+22])
                                              core_type (typing/includecore.ml[436,16149+25]..[436,16149+39])
                                                Ptyp_constr "label_mismatch" (typing/includecore.ml[436,16149+25]..[436,16149+39])
                                                []
                                      <case>
                                        pattern (typing/includecore.ml[437,16190+6]..[437,16190+8])
                                          Ppat_construct "()" (typing/includecore.ml[437,16190+6]..[437,16190+8])
                                          None
                                        expression (typing/includecore.ml[437,16190+12]..[437,16190+16])
                                          Pexp_construct "None" (typing/includecore.ml[437,16190+12]..[437,16190+16])
                                          None
                                    ]
            ]
          structure_item (typing/includecore.ml[439,16208+2]..[462,17076+11])
            Pstr_value Rec
            [
              <def>
                pattern (typing/includecore.ml[439,16208+10]..[439,16208+15])
                  Ppat_var "equal" (typing/includecore.ml[439,16208+10]..[439,16208+15])
                expression (typing/includecore.ml[439,16208+16]..[462,17076+11]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[439,16208+17]..[439,16208+20])
                    Ppat_var "loc" (typing/includecore.ml[439,16208+17]..[439,16208+20])
                  expression (typing/includecore.ml[439,16208+21]..[462,17076+11]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[439,16208+21]..[439,16208+24])
                      Ppat_var "env" (typing/includecore.ml[439,16208+21]..[439,16208+24])
                    expression (typing/includecore.ml[439,16208+25]..[462,17076+11]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[439,16208+25]..[439,16208+32])
                        Ppat_var "params1" (typing/includecore.ml[439,16208+25]..[439,16208+32])
                      expression (typing/includecore.ml[439,16208+33]..[462,17076+11]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[439,16208+33]..[439,16208+40])
                          Ppat_var "params2" (typing/includecore.ml[439,16208+33]..[439,16208+40])
                        expression (typing/includecore.ml[440,16249+6]..[462,17076+11]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[440,16249+6]..[440,16249+46])
                            Ppat_constraint
                            pattern (typing/includecore.ml[440,16249+7]..[440,16249+14])
                              Ppat_var "labels1" (typing/includecore.ml[440,16249+7]..[440,16249+14])
                            core_type (typing/includecore.ml[440,16249+17]..[440,16249+45])
                              Ptyp_constr "list" (typing/includecore.ml[440,16249+41]..[440,16249+45])
                              [
                                core_type (typing/includecore.ml[440,16249+17]..[440,16249+40])
                                  Ptyp_constr "Types.label_declaration" (typing/includecore.ml[440,16249+17]..[440,16249+40])
                                  []
                              ]
                          expression (typing/includecore.ml[441,16296+6]..[462,17076+11]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[441,16296+6]..[441,16296+46])
                              Ppat_constraint
                              pattern (typing/includecore.ml[441,16296+7]..[441,16296+14])
                                Ppat_var "labels2" (typing/includecore.ml[441,16296+7]..[441,16296+14])
                              core_type (typing/includecore.ml[441,16296+17]..[441,16296+45])
                                Ptyp_constr "list" (typing/includecore.ml[441,16296+41]..[441,16296+45])
                                [
                                  core_type (typing/includecore.ml[441,16296+17]..[441,16296+40])
                                    Ptyp_constr "Types.label_declaration" (typing/includecore.ml[441,16296+17]..[441,16296+40])
                                    []
                                ]
                            expression (typing/includecore.ml[442,16345+4]..[462,17076+11])
                              Pexp_match
                              expression (typing/includecore.ml[442,16345+10]..[442,16345+26])
                                Pexp_tuple
                                [
                                  expression (typing/includecore.ml[442,16345+10]..[442,16345+17])
                                    Pexp_ident "labels1" (typing/includecore.ml[442,16345+10]..[442,16345+17])
                                  expression (typing/includecore.ml[442,16345+19]..[442,16345+26])
                                    Pexp_ident "labels2" (typing/includecore.ml[442,16345+19]..[442,16345+26])
                                ]
                              [
                                <case>
                                  pattern (typing/includecore.ml[443,16377+6]..[443,16377+12])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[443,16377+6]..[443,16377+8])
                                        Ppat_construct "[]" (typing/includecore.ml[443,16377+6]..[443,16377+8])
                                        None
                                      pattern (typing/includecore.ml[443,16377+10]..[443,16377+12])
                                        Ppat_construct "[]" (typing/includecore.ml[443,16377+10]..[443,16377+12])
                                        None
                                    ]
                                  expression (typing/includecore.ml[443,16377+16]..[443,16377+20])
                                    Pexp_construct "true" (typing/includecore.ml[443,16377+16]..[443,16377+20])
                                    None
                                <case>
                                  pattern (typing/includecore.ml[444,16398+6]..[444,16398+30])
                                    Ppat_or
                                    pattern (typing/includecore.ml[444,16398+6]..[444,16398+17])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[444,16398+6]..[444,16398+12])
                                          Ppat_construct "::" (typing/includecore.ml[444,16398+8]..[444,16398+10])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[444,16398+6]..[444,16398+12]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[444,16398+6]..[444,16398+7])
                                                  Ppat_any
                                                pattern (typing/includecore.ml[444,16398+11]..[444,16398+12])
                                                  Ppat_any
                                              ]
                                        pattern (typing/includecore.ml[444,16398+15]..[444,16398+17])
                                          Ppat_construct "[]" (typing/includecore.ml[444,16398+15]..[444,16398+17])
                                          None
                                      ]
                                    pattern (typing/includecore.ml[444,16398+20]..[444,16398+30])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[444,16398+20]..[444,16398+22])
                                          Ppat_construct "[]" (typing/includecore.ml[444,16398+20]..[444,16398+22])
                                          None
                                        pattern (typing/includecore.ml[444,16398+24]..[444,16398+30])
                                          Ppat_construct "::" (typing/includecore.ml[444,16398+26]..[444,16398+28])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[444,16398+24]..[444,16398+30]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[444,16398+24]..[444,16398+25])
                                                  Ppat_any
                                                pattern (typing/includecore.ml[444,16398+29]..[444,16398+30])
                                                  Ppat_any
                                              ]
                                      ]
                                  expression (typing/includecore.ml[444,16398+34]..[444,16398+39])
                                    Pexp_construct "false" (typing/includecore.ml[444,16398+34]..[444,16398+39])
                                    None
                                <case>
                                  pattern (typing/includecore.ml[445,16438+6]..[445,16438+30])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[445,16438+6]..[445,16438+17])
                                        Ppat_construct "::" (typing/includecore.ml[445,16438+10]..[445,16438+12])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[445,16438+6]..[445,16438+17]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[445,16438+6]..[445,16438+9])
                                                Ppat_var "ld1" (typing/includecore.ml[445,16438+6]..[445,16438+9])
                                              pattern (typing/includecore.ml[445,16438+13]..[445,16438+17])
                                                Ppat_var "rem1" (typing/includecore.ml[445,16438+13]..[445,16438+17])
                                            ]
                                      pattern (typing/includecore.ml[445,16438+19]..[445,16438+30])
                                        Ppat_construct "::" (typing/includecore.ml[445,16438+23]..[445,16438+25])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[445,16438+19]..[445,16438+30]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[445,16438+19]..[445,16438+22])
                                                Ppat_var "ld2" (typing/includecore.ml[445,16438+19]..[445,16438+22])
                                              pattern (typing/includecore.ml[445,16438+26]..[445,16438+30])
                                                Ppat_var "rem2" (typing/includecore.ml[445,16438+26]..[445,16438+30])
                                            ]
                                    ]
                                  expression (typing/includecore.ml[446,16472+8]..[462,17076+11])
                                    Pexp_ifthenelse
                                    expression (typing/includecore.ml[446,16472+11]..[446,16472+55])
                                      Pexp_apply
                                      expression (typing/includecore.ml[446,16472+32]..[446,16472+34])
                                        Pexp_ident "<>" (typing/includecore.ml[446,16472+32]..[446,16472+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[446,16472+11]..[446,16472+31])
                                            Pexp_apply
                                            expression (typing/includecore.ml[446,16472+11]..[446,16472+21])
                                              Pexp_ident "Ident.name" (typing/includecore.ml[446,16472+11]..[446,16472+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[446,16472+22]..[446,16472+31])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[446,16472+22]..[446,16472+25])
                                                    Pexp_ident "ld1" (typing/includecore.ml[446,16472+22]..[446,16472+25])
                                                  "ld_id" (typing/includecore.ml[446,16472+26]..[446,16472+31])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[446,16472+35]..[446,16472+55])
                                            Pexp_apply
                                            expression (typing/includecore.ml[446,16472+35]..[446,16472+45])
                                              Pexp_ident "Ident.name" (typing/includecore.ml[446,16472+35]..[446,16472+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[446,16472+46]..[446,16472+55])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[446,16472+46]..[446,16472+49])
                                                    Pexp_ident "ld2" (typing/includecore.ml[446,16472+46]..[446,16472+49])
                                                  "ld_id" (typing/includecore.ml[446,16472+50]..[446,16472+55])
                                            ]
                                      ]
                                    expression (typing/includecore.ml[447,16528+13]..[447,16528+18])
                                      Pexp_construct "false" (typing/includecore.ml[447,16528+13]..[447,16528+18])
                                      None
                                    Some
                                      expression (typing/includecore.ml[448,16547+13]..[462,17076+11])
                                        Pexp_sequence
                                        expression (typing/includecore.ml[449,16566+10]..[454,16750+34])
                                          Pexp_apply
                                          expression (typing/includecore.ml[449,16566+10]..[449,16566+63])
                                            Pexp_ident "Builtin_attributes.check_deprecated_mutable_inclusion" (typing/includecore.ml[449,16566+10]..[449,16566+63])
                                          [
                                            <arg>
                                            Labelled "def"
                                              expression (typing/includecore.ml[450,16630+17]..[450,16630+27])
                                                Pexp_field
                                                expression (typing/includecore.ml[450,16630+17]..[450,16630+20])
                                                  Pexp_ident "ld1" (typing/includecore.ml[450,16630+17]..[450,16630+20])
                                                "ld_loc" (typing/includecore.ml[450,16630+21]..[450,16630+27])
                                            <arg>
                                            Labelled "use"
                                              expression (typing/includecore.ml[451,16658+17]..[451,16658+27])
                                                Pexp_field
                                                expression (typing/includecore.ml[451,16658+17]..[451,16658+20])
                                                  Pexp_ident "ld2" (typing/includecore.ml[451,16658+17]..[451,16658+20])
                                                "ld_loc" (typing/includecore.ml[451,16658+21]..[451,16658+27])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[452,16686+12]..[452,16686+15])
                                                Pexp_ident "loc" (typing/includecore.ml[452,16686+12]..[452,16686+15])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[453,16702+12]..[453,16702+29])
                                                Pexp_field
                                                expression (typing/includecore.ml[453,16702+12]..[453,16702+15])
                                                  Pexp_ident "ld1" (typing/includecore.ml[453,16702+12]..[453,16702+15])
                                                "ld_attributes" (typing/includecore.ml[453,16702+16]..[453,16702+29])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[453,16702+30]..[453,16702+47])
                                                Pexp_field
                                                expression (typing/includecore.ml[453,16702+30]..[453,16702+33])
                                                  Pexp_ident "ld2" (typing/includecore.ml[453,16702+30]..[453,16702+33])
                                                "ld_attributes" (typing/includecore.ml[453,16702+34]..[453,16702+47])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[454,16750+12]..[454,16750+34])
                                                Pexp_apply
                                                expression (typing/includecore.ml[454,16750+13]..[454,16750+23])
                                                  Pexp_ident "Ident.name" (typing/includecore.ml[454,16750+13]..[454,16750+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[454,16750+24]..[454,16750+33])
                                                      Pexp_field
                                                      expression (typing/includecore.ml[454,16750+24]..[454,16750+27])
                                                        Pexp_ident "ld1" (typing/includecore.ml[454,16750+24]..[454,16750+27])
                                                      "ld_id" (typing/includecore.ml[454,16750+28]..[454,16750+33])
                                                ]
                                          ]
                                        expression (typing/includecore.ml[455,16786+10]..[461,17050+25])
                                          Pexp_match
                                          expression (typing/includecore.ml[455,16786+16]..[455,16786+58])
                                            Pexp_apply
                                            expression (typing/includecore.ml[455,16786+16]..[455,16786+30])
                                              Pexp_ident "compare_labels" (typing/includecore.ml[455,16786+16]..[455,16786+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[455,16786+31]..[455,16786+34])
                                                  Pexp_ident "env" (typing/includecore.ml[455,16786+31]..[455,16786+34])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[455,16786+35]..[455,16786+42])
                                                  Pexp_ident "params1" (typing/includecore.ml[455,16786+35]..[455,16786+42])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[455,16786+43]..[455,16786+50])
                                                  Pexp_ident "params2" (typing/includecore.ml[455,16786+43]..[455,16786+50])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[455,16786+51]..[455,16786+54])
                                                  Pexp_ident "ld1" (typing/includecore.ml[455,16786+51]..[455,16786+54])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[455,16786+55]..[455,16786+58])
                                                  Pexp_ident "ld2" (typing/includecore.ml[455,16786+55]..[455,16786+58])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/includecore.ml[456,16850+12]..[456,16850+18])
                                                Ppat_construct "Some" (typing/includecore.ml[456,16850+12]..[456,16850+16])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[456,16850+17]..[456,16850+18])
                                                    Ppat_any
                                              expression (typing/includecore.ml[456,16850+22]..[456,16850+27])
                                                Pexp_construct "false" (typing/includecore.ml[456,16850+22]..[456,16850+27])
                                                None
                                            <case>
                                              pattern (typing/includecore.ml[458,16939+12]..[458,16939+16])
                                                Ppat_construct "None" (typing/includecore.ml[458,16939+12]..[458,16939+16])
                                                None
                                              expression (typing/includecore.ml[459,16959+14]..[461,17050+25])
                                                Pexp_apply
                                                expression (typing/includecore.ml[459,16959+14]..[459,16959+19])
                                                  Pexp_ident "equal" (typing/includecore.ml[459,16959+14]..[459,16959+19])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (typing/includecore.ml[459,16959+21]..[459,16959+24])
                                                      Pexp_ident "loc" (typing/includecore.ml[459,16959+21]..[459,16959+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[459,16959+25]..[459,16959+28])
                                                      Pexp_ident "env" (typing/includecore.ml[459,16959+25]..[459,16959+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[460,16988+16]..[460,16988+38])
                                                      Pexp_construct "::" (typing/includecore.ml[460,16988+28]..[460,16988+30])
                                                      Some
                                                        expression (typing/includecore.ml[460,16988+17]..[460,16988+37]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/includecore.ml[460,16988+17]..[460,16988+28])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[460,16988+17]..[460,16988+20])
                                                                Pexp_ident "ld1" (typing/includecore.ml[460,16988+17]..[460,16988+20])
                                                              "ld_type" (typing/includecore.ml[460,16988+21]..[460,16988+28])
                                                            expression (typing/includecore.ml[460,16988+30]..[460,16988+37])
                                                              Pexp_ident "params1" (typing/includecore.ml[460,16988+30]..[460,16988+37])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[460,16988+39]..[460,16988+61])
                                                      Pexp_construct "::" (typing/includecore.ml[460,16988+51]..[460,16988+53])
                                                      Some
                                                        expression (typing/includecore.ml[460,16988+40]..[460,16988+60]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/includecore.ml[460,16988+40]..[460,16988+51])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[460,16988+40]..[460,16988+43])
                                                                Pexp_ident "ld2" (typing/includecore.ml[460,16988+40]..[460,16988+43])
                                                              "ld_type" (typing/includecore.ml[460,16988+44]..[460,16988+51])
                                                            expression (typing/includecore.ml[460,16988+53]..[460,16988+60])
                                                              Pexp_ident "params2" (typing/includecore.ml[460,16988+53]..[460,16988+60])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[461,17050+16]..[461,17050+20])
                                                      Pexp_ident "rem1" (typing/includecore.ml[461,17050+16]..[461,17050+20])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[461,17050+21]..[461,17050+25])
                                                      Pexp_ident "rem2" (typing/includecore.ml[461,17050+21]..[461,17050+25])
                                                ]
                                          ]
                              ]
            ]
          structure_item (typing/includecore.ml[464,17089+2]..[469,17254+5])
            Pstr_module
            "Defs" (typing/includecore.ml[464,17089+9]..[464,17089+13])
              module_expr (typing/includecore.ml[464,17089+16]..[469,17254+5])
                Pmod_structure
                [
                  structure_item (typing/includecore.ml[465,17112+4]..[465,17112+39])
                    Pstr_type Rec
                    [
                      type_declaration "left" (typing/includecore.ml[465,17112+9]..[465,17112+13]) (typing/includecore.ml[465,17112+4]..[465,17112+39])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[465,17112+16]..[465,17112+39])
                              Ptyp_constr "Types.label_declaration" (typing/includecore.ml[465,17112+16]..[465,17112+39])
                              []
                    ]
                  structure_item (typing/includecore.ml[466,17152+4]..[466,17152+21])
                    Pstr_type Rec
                    [
                      type_declaration "right" (typing/includecore.ml[466,17152+9]..[466,17152+14]) (typing/includecore.ml[466,17152+4]..[466,17152+21])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[466,17152+17]..[466,17152+21])
                              Ptyp_constr "left" (typing/includecore.ml[466,17152+17]..[466,17152+21])
                              []
                    ]
                  structure_item (typing/includecore.ml[467,17174+4]..[467,17174+30])
                    Pstr_type Rec
                    [
                      type_declaration "diff" (typing/includecore.ml[467,17174+9]..[467,17174+13]) (typing/includecore.ml[467,17174+4]..[467,17174+30])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[467,17174+16]..[467,17174+30])
                              Ptyp_constr "label_mismatch" (typing/includecore.ml[467,17174+16]..[467,17174+30])
                              []
                    ]
                  structure_item (typing/includecore.ml[468,17205+4]..[468,17205+48])
                    Pstr_type Rec
                    [
                      type_declaration "state" (typing/includecore.ml[468,17205+9]..[468,17205+14]) (typing/includecore.ml[468,17205+4]..[468,17205+48])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[468,17205+17]..[468,17205+48])
                              Ptyp_tuple
                              [
                                core_type (typing/includecore.ml[468,17205+17]..[468,17205+31])
                                  Ptyp_constr "list" (typing/includecore.ml[468,17205+27]..[468,17205+31])
                                  [
                                    core_type (typing/includecore.ml[468,17205+17]..[468,17205+26])
                                      Ptyp_constr "type_expr" (typing/includecore.ml[468,17205+17]..[468,17205+26])
                                      []
                                  ]
                                core_type (typing/includecore.ml[468,17205+34]..[468,17205+48])
                                  Ptyp_constr "list" (typing/includecore.ml[468,17205+44]..[468,17205+48])
                                  [
                                    core_type (typing/includecore.ml[468,17205+34]..[468,17205+43])
                                      Ptyp_constr "type_expr" (typing/includecore.ml[468,17205+34]..[468,17205+43])
                                      []
                                  ]
                              ]
                    ]
                ]
          structure_item (typing/includecore.ml[470,17260+2]..[470,17260+46])
            Pstr_module
            "Diff" (typing/includecore.ml[470,17260+9]..[470,17260+13])
              module_expr (typing/includecore.ml[470,17260+16]..[470,17260+46])
                Pmod_apply
                module_expr (typing/includecore.ml[470,17260+16]..[470,17260+40])
                  Pmod_ident "Diffing_with_keys.Define" (typing/includecore.ml[470,17260+16]..[470,17260+40])
                module_expr (typing/includecore.ml[470,17260+41]..[470,17260+45])
                  Pmod_ident "Defs" (typing/includecore.ml[470,17260+41]..[470,17260+45])
          structure_item (typing/includecore.ml[472,17308+2]..[478,17550+56])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[472,17308+6]..[472,17308+12])
                  Ppat_var "update" (typing/includecore.ml[472,17308+6]..[472,17308+12])
                expression (typing/includecore.ml[472,17308+13]..[478,17550+56]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[472,17308+13]..[472,17308+28])
                    Ppat_constraint
                    pattern (typing/includecore.ml[472,17308+14]..[472,17308+15])
                      Ppat_var "d" (typing/includecore.ml[472,17308+14]..[472,17308+15])
                    core_type (typing/includecore.ml[472,17308+16]..[472,17308+27])
                      Ptyp_constr "Diff.change" (typing/includecore.ml[472,17308+16]..[472,17308+27])
                      []
                  expression (typing/includecore.ml[472,17308+29]..[478,17550+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[472,17308+29]..[472,17308+52])
                      Ppat_alias "st" (typing/includecore.ml[472,17308+49]..[472,17308+51])
                      pattern (typing/includecore.ml[472,17308+30]..[472,17308+45])
                        Ppat_tuple
                        [
                          pattern (typing/includecore.ml[472,17308+30]..[472,17308+37])
                            Ppat_var "params1" (typing/includecore.ml[472,17308+30]..[472,17308+37])
                          pattern (typing/includecore.ml[472,17308+38]..[472,17308+45])
                            Ppat_var "params2" (typing/includecore.ml[472,17308+38]..[472,17308+45])
                        ]
                    expression (typing/includecore.ml[473,17363+4]..[478,17550+56])
                      Pexp_match
                      expression (typing/includecore.ml[473,17363+10]..[473,17363+11])
                        Pexp_ident "d" (typing/includecore.ml[473,17363+10]..[473,17363+11])
                      [
                        <case>
                          pattern (typing/includecore.ml[474,17380+6]..[474,17380+36])
                            Ppat_or
                            pattern (typing/includecore.ml[474,17380+6]..[474,17380+25])
                              Ppat_or
                              pattern (typing/includecore.ml[474,17380+6]..[474,17380+14])
                                Ppat_construct "Insert" (typing/includecore.ml[474,17380+6]..[474,17380+12])
                                Some
                                  []
                                  pattern (typing/includecore.ml[474,17380+13]..[474,17380+14])
                                    Ppat_any
                              pattern (typing/includecore.ml[474,17380+17]..[474,17380+25])
                                Ppat_construct "Change" (typing/includecore.ml[474,17380+17]..[474,17380+23])
                                Some
                                  []
                                  pattern (typing/includecore.ml[474,17380+24]..[474,17380+25])
                                    Ppat_any
                            pattern (typing/includecore.ml[474,17380+28]..[474,17380+36])
                              Ppat_construct "Delete" (typing/includecore.ml[474,17380+28]..[474,17380+34])
                              Some
                                []
                                pattern (typing/includecore.ml[474,17380+35]..[474,17380+36])
                                  Ppat_any
                          expression (typing/includecore.ml[474,17380+40]..[474,17380+42])
                            Pexp_ident "st" (typing/includecore.ml[474,17380+40]..[474,17380+42])
                        <case>
                          pattern (typing/includecore.ml[475,17423+6]..[475,17423+18])
                            Ppat_construct "Keep" (typing/includecore.ml[475,17423+6]..[475,17423+10])
                            Some
                              []
                              pattern (typing/includecore.ml[475,17423+11]..[475,17423+18])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[475,17423+12]..[475,17423+13])
                                    Ppat_var "x" (typing/includecore.ml[475,17423+12]..[475,17423+13])
                                  pattern (typing/includecore.ml[475,17423+14]..[475,17423+15])
                                    Ppat_var "y" (typing/includecore.ml[475,17423+14]..[475,17423+15])
                                  pattern (typing/includecore.ml[475,17423+16]..[475,17423+17])
                                    Ppat_any
                                ]
                          expression (typing/includecore.ml[478,17550+8]..[478,17550+56])
                            Pexp_tuple
                            [
                              expression (typing/includecore.ml[478,17550+8]..[478,17550+31])
                                Pexp_construct "::" (typing/includecore.ml[478,17550+22]..[478,17550+24])
                                Some
                                  expression (typing/includecore.ml[478,17550+8]..[478,17550+31]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/includecore.ml[478,17550+8]..[478,17550+22])
                                        Pexp_field
                                        expression (typing/includecore.ml[478,17550+8]..[478,17550+14])
                                          Pexp_field
                                          expression (typing/includecore.ml[478,17550+8]..[478,17550+9])
                                            Pexp_ident "x" (typing/includecore.ml[478,17550+8]..[478,17550+9])
                                          "data" (typing/includecore.ml[478,17550+10]..[478,17550+14])
                                        "ld_type" (typing/includecore.ml[478,17550+15]..[478,17550+22])
                                      expression (typing/includecore.ml[478,17550+24]..[478,17550+31])
                                        Pexp_ident "params1" (typing/includecore.ml[478,17550+24]..[478,17550+31])
                                    ]
                              expression (typing/includecore.ml[478,17550+33]..[478,17550+56])
                                Pexp_construct "::" (typing/includecore.ml[478,17550+47]..[478,17550+49])
                                Some
                                  expression (typing/includecore.ml[478,17550+33]..[478,17550+56]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/includecore.ml[478,17550+33]..[478,17550+47])
                                        Pexp_field
                                        expression (typing/includecore.ml[478,17550+33]..[478,17550+39])
                                          Pexp_field
                                          expression (typing/includecore.ml[478,17550+33]..[478,17550+34])
                                            Pexp_ident "y" (typing/includecore.ml[478,17550+33]..[478,17550+34])
                                          "data" (typing/includecore.ml[478,17550+35]..[478,17550+39])
                                        "ld_type" (typing/includecore.ml[478,17550+40]..[478,17550+47])
                                      expression (typing/includecore.ml[478,17550+49]..[478,17550+56])
                                        Pexp_ident "params2" (typing/includecore.ml[478,17550+49]..[478,17550+56])
                                    ]
                            ]
                      ]
            ]
          structure_item (typing/includecore.ml[480,17608+2]..[499,18258+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[480,17608+6]..[480,17608+10])
                  Ppat_var "test" (typing/includecore.ml[480,17608+6]..[480,17608+10])
                expression (typing/includecore.ml[480,17608+11]..[499,18258+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[480,17608+11]..[480,17608+15])
                    Ppat_var "_loc" (typing/includecore.ml[480,17608+11]..[480,17608+15])
                  expression (typing/includecore.ml[480,17608+16]..[499,18258+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[480,17608+16]..[480,17608+19])
                      Ppat_var "env" (typing/includecore.ml[480,17608+16]..[480,17608+19])
                    expression (typing/includecore.ml[480,17608+20]..[499,18258+21]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[480,17608+20]..[480,17608+37])
                        Ppat_tuple
                        [
                          pattern (typing/includecore.ml[480,17608+21]..[480,17608+28])
                            Ppat_var "params1" (typing/includecore.ml[480,17608+21]..[480,17608+28])
                          pattern (typing/includecore.ml[480,17608+29]..[480,17608+36])
                            Ppat_var "params2" (typing/includecore.ml[480,17608+29]..[480,17608+36])
                        ]
                      expression (typing/includecore.ml[481,17646+6]..[499,18258+21]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[481,17646+6]..[481,17646+35])
                          Ppat_constraint
                          pattern (typing/includecore.ml[481,17646+7]..[481,17646+23])
                            Ppat_record Closed
                            [
                              "pos" (typing/includecore.ml[481,17646+8]..[481,17646+11]) ghost
                                pattern (typing/includecore.ml[481,17646+8]..[481,17646+11])
                                  Ppat_var "pos" (typing/includecore.ml[481,17646+8]..[481,17646+11])
                              "data" (typing/includecore.ml[481,17646+13]..[481,17646+17])
                                pattern (typing/includecore.ml[481,17646+18]..[481,17646+22])
                                  Ppat_var "lbl1" (typing/includecore.ml[481,17646+18]..[481,17646+22])
                            ]
                          core_type (typing/includecore.ml[481,17646+25]..[481,17646+34])
                            Ptyp_constr "Diff.left" (typing/includecore.ml[481,17646+25]..[481,17646+34])
                            []
                        expression (typing/includecore.ml[482,17682+6]..[499,18258+21]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[482,17682+6]..[482,17682+35])
                            Ppat_constraint
                            pattern (typing/includecore.ml[482,17682+7]..[482,17682+22])
                              Ppat_record Open
                              [
                                "data" (typing/includecore.ml[482,17682+8]..[482,17682+12])
                                  pattern (typing/includecore.ml[482,17682+13]..[482,17682+17])
                                    Ppat_var "lbl2" (typing/includecore.ml[482,17682+13]..[482,17682+17])
                              ]
                            core_type (typing/includecore.ml[482,17682+24]..[482,17682+34])
                              Ptyp_constr "Diff.right" (typing/includecore.ml[482,17682+24]..[482,17682+34])
                              []
                          expression (typing/includecore.ml[484,17724+4]..[499,18258+21])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includecore.ml[484,17724+8]..[484,17724+20])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[484,17724+8]..[484,17724+13])
                                      Ppat_var "name1" (typing/includecore.ml[484,17724+8]..[484,17724+13])
                                    pattern (typing/includecore.ml[484,17724+15]..[484,17724+20])
                                      Ppat_var "name2" (typing/includecore.ml[484,17724+15]..[484,17724+20])
                                  ]
                                expression (typing/includecore.ml[484,17724+23]..[484,17724+67])
                                  Pexp_tuple
                                  [
                                    expression (typing/includecore.ml[484,17724+23]..[484,17724+44])
                                      Pexp_apply
                                      expression (typing/includecore.ml[484,17724+23]..[484,17724+33])
                                        Pexp_ident "Ident.name" (typing/includecore.ml[484,17724+23]..[484,17724+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[484,17724+34]..[484,17724+44])
                                            Pexp_field
                                            expression (typing/includecore.ml[484,17724+34]..[484,17724+38])
                                              Pexp_ident "lbl1" (typing/includecore.ml[484,17724+34]..[484,17724+38])
                                            "ld_id" (typing/includecore.ml[484,17724+39]..[484,17724+44])
                                      ]
                                    expression (typing/includecore.ml[484,17724+46]..[484,17724+67])
                                      Pexp_apply
                                      expression (typing/includecore.ml[484,17724+46]..[484,17724+56])
                                        Pexp_ident "Ident.name" (typing/includecore.ml[484,17724+46]..[484,17724+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[484,17724+57]..[484,17724+67])
                                            Pexp_field
                                            expression (typing/includecore.ml[484,17724+57]..[484,17724+61])
                                              Pexp_ident "lbl2" (typing/includecore.ml[484,17724+57]..[484,17724+61])
                                            "ld_id" (typing/includecore.ml[484,17724+62]..[484,17724+67])
                                      ]
                                  ]
                            ]
                            expression (typing/includecore.ml[485,17795+4]..[499,18258+21])
                              Pexp_ifthenelse
                              expression (typing/includecore.ml[485,17795+8]..[485,17795+22])
                                Pexp_apply
                                expression (typing/includecore.ml[485,17795+14]..[485,17795+16])
                                  Pexp_ident "<>" (typing/includecore.ml[485,17795+14]..[485,17795+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[485,17795+8]..[485,17795+13])
                                      Pexp_ident "name1" (typing/includecore.ml[485,17795+8]..[485,17795+13])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[485,17795+17]..[485,17795+22])
                                      Pexp_ident "name2" (typing/includecore.ml[485,17795+17]..[485,17795+22])
                                ]
                              expression (typing/includecore.ml[486,17823+6]..[492,17981+78])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[486,17823+10]..[486,17823+21])
                                      Ppat_var "types_match" (typing/includecore.ml[486,17823+10]..[486,17823+21])
                                    expression (typing/includecore.ml[487,17847+8]..[489,17937+22])
                                      Pexp_match
                                      expression (typing/includecore.ml[487,17847+14]..[487,17847+58])
                                        Pexp_apply
                                        expression (typing/includecore.ml[487,17847+14]..[487,17847+28])
                                          Pexp_ident "compare_labels" (typing/includecore.ml[487,17847+14]..[487,17847+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[487,17847+29]..[487,17847+32])
                                              Pexp_ident "env" (typing/includecore.ml[487,17847+29]..[487,17847+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[487,17847+33]..[487,17847+40])
                                              Pexp_ident "params1" (typing/includecore.ml[487,17847+33]..[487,17847+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[487,17847+41]..[487,17847+48])
                                              Pexp_ident "params2" (typing/includecore.ml[487,17847+41]..[487,17847+48])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[487,17847+49]..[487,17847+53])
                                              Pexp_ident "lbl1" (typing/includecore.ml[487,17847+49]..[487,17847+53])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[487,17847+54]..[487,17847+58])
                                              Pexp_ident "lbl2" (typing/includecore.ml[487,17847+54]..[487,17847+58])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[488,17911+10]..[488,17911+16])
                                            Ppat_construct "Some" (typing/includecore.ml[488,17911+10]..[488,17911+14])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[488,17911+15]..[488,17911+16])
                                                Ppat_any
                                          expression (typing/includecore.ml[488,17911+20]..[488,17911+25])
                                            Pexp_construct "false" (typing/includecore.ml[488,17911+20]..[488,17911+25])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[489,17937+10]..[489,17937+14])
                                            Ppat_construct "None" (typing/includecore.ml[489,17937+10]..[489,17937+14])
                                            None
                                          expression (typing/includecore.ml[489,17937+18]..[489,17937+22])
                                            Pexp_construct "true" (typing/includecore.ml[489,17937+18]..[489,17937+22])
                                            None
                                      ]
                                ]
                                expression (typing/includecore.ml[491,17969+6]..[492,17981+78])
                                  Pexp_construct "Error" (typing/includecore.ml[491,17969+6]..[491,17969+11])
                                  Some
                                    expression (typing/includecore.ml[492,17981+8]..[492,17981+78])
                                      Pexp_construct "Diffing_with_keys.Name" (typing/includecore.ml[492,17981+9]..[492,17981+31])
                                      Some
                                        expression (typing/includecore.ml[492,17981+32]..[492,17981+77])
                                          Pexp_record
                                          [
                                            "types_match" (typing/includecore.ml[492,17981+33]..[492,17981+44]) ghost
                                              expression (typing/includecore.ml[492,17981+33]..[492,17981+44])
                                                Pexp_ident "types_match" (typing/includecore.ml[492,17981+33]..[492,17981+44])
                                            "pos" (typing/includecore.ml[492,17981+46]..[492,17981+49]) ghost
                                              expression (typing/includecore.ml[492,17981+46]..[492,17981+49])
                                                Pexp_ident "pos" (typing/includecore.ml[492,17981+46]..[492,17981+49])
                                            "got" (typing/includecore.ml[492,17981+51]..[492,17981+54])
                                              expression (typing/includecore.ml[492,17981+55]..[492,17981+60])
                                                Pexp_ident "name1" (typing/includecore.ml[492,17981+55]..[492,17981+60])
                                            "expected" (typing/includecore.ml[492,17981+62]..[492,17981+70])
                                              expression (typing/includecore.ml[492,17981+71]..[492,17981+76])
                                                Pexp_ident "name2" (typing/includecore.ml[492,17981+71]..[492,17981+76])
                                          ]
                                          None
                              Some
                                expression (typing/includecore.ml[494,18069+6]..[499,18258+21])
                                  Pexp_match
                                  expression (typing/includecore.ml[494,18069+12]..[494,18069+56])
                                    Pexp_apply
                                    expression (typing/includecore.ml[494,18069+12]..[494,18069+26])
                                      Pexp_ident "compare_labels" (typing/includecore.ml[494,18069+12]..[494,18069+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[494,18069+27]..[494,18069+30])
                                          Pexp_ident "env" (typing/includecore.ml[494,18069+27]..[494,18069+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[494,18069+31]..[494,18069+38])
                                          Pexp_ident "params1" (typing/includecore.ml[494,18069+31]..[494,18069+38])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[494,18069+39]..[494,18069+46])
                                          Pexp_ident "params2" (typing/includecore.ml[494,18069+39]..[494,18069+46])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[494,18069+47]..[494,18069+51])
                                          Pexp_ident "lbl1" (typing/includecore.ml[494,18069+47]..[494,18069+51])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[494,18069+52]..[494,18069+56])
                                          Pexp_ident "lbl2" (typing/includecore.ml[494,18069+52]..[494,18069+56])
                                    ]
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[495,18131+8]..[495,18131+19])
                                        Ppat_construct "Some" (typing/includecore.ml[495,18131+8]..[495,18131+12])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[495,18131+13]..[495,18131+19])
                                            Ppat_var "reason" (typing/includecore.ml[495,18131+13]..[495,18131+19])
                                      expression (typing/includecore.ml[496,18154+10]..[498,18246+11])
                                        Pexp_construct "Error" (typing/includecore.ml[496,18154+10]..[496,18154+15])
                                        Some
                                          expression (typing/includecore.ml[496,18154+16]..[498,18246+11])
                                            Pexp_construct "Diffing_with_keys.Type" (typing/includecore.ml[497,18172+12]..[497,18172+34])
                                            Some
                                              expression (typing/includecore.ml[497,18172+35]..[497,18172+73])
                                                Pexp_record
                                                [
                                                  "pos" (typing/includecore.ml[497,18172+36]..[497,18172+39]) ghost
                                                    expression (typing/includecore.ml[497,18172+36]..[497,18172+39])
                                                      Pexp_ident "pos" (typing/includecore.ml[497,18172+36]..[497,18172+39])
                                                  "got" (typing/includecore.ml[497,18172+41]..[497,18172+44])
                                                    expression (typing/includecore.ml[497,18172+45]..[497,18172+49])
                                                      Pexp_ident "lbl1" (typing/includecore.ml[497,18172+45]..[497,18172+49])
                                                  "expected" (typing/includecore.ml[497,18172+51]..[497,18172+59])
                                                    expression (typing/includecore.ml[497,18172+60]..[497,18172+64])
                                                      Pexp_ident "lbl2" (typing/includecore.ml[497,18172+60]..[497,18172+64])
                                                  "reason" (typing/includecore.ml[497,18172+66]..[497,18172+72]) ghost
                                                    expression (typing/includecore.ml[497,18172+66]..[497,18172+72])
                                                      Pexp_ident "reason" (typing/includecore.ml[497,18172+66]..[497,18172+72])
                                                ]
                                                None
                                    <case>
                                      pattern (typing/includecore.ml[499,18258+8]..[499,18258+12])
                                        Ppat_construct "None" (typing/includecore.ml[499,18258+8]..[499,18258+12])
                                        None
                                      expression (typing/includecore.ml[499,18258+16]..[499,18258+21])
                                        Pexp_construct "Ok" (typing/includecore.ml[499,18258+16]..[499,18258+18])
                                        Some
                                          expression (typing/includecore.ml[499,18258+19]..[499,18258+21])
                                            Pexp_construct "()" (typing/includecore.ml[499,18258+19]..[499,18258+21])
                                            None
                                  ]
            ]
          structure_item (typing/includecore.ml[501,18281+2]..[507,18472+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[501,18281+6]..[501,18281+30]) ghost
                  Ppat_constraint
                  pattern (typing/includecore.ml[501,18281+6]..[501,18281+12])
                    Ppat_var "weight" (typing/includecore.ml[501,18281+6]..[501,18281+12])
                  core_type (typing/includecore.ml[501,18281+14]..[501,18281+30]) ghost
                    Ptyp_poly
                    core_type (typing/includecore.ml[501,18281+14]..[501,18281+30])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/includecore.ml[501,18281+14]..[501,18281+25])
                        Ptyp_constr "Diff.change" (typing/includecore.ml[501,18281+14]..[501,18281+25])
                        []
                      core_type (typing/includecore.ml[501,18281+29]..[501,18281+30])
                        Ptyp_any
                expression (typing/includecore.ml[501,18281+6]..[507,18472+20])
                  Pexp_constraint
                  expression (typing/includecore.ml[501,18281+33]..[507,18472+20])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includecore.ml[502,18323+6]..[502,18323+14])
                          Ppat_construct "Insert" (typing/includecore.ml[502,18323+6]..[502,18323+12])
                          Some
                            []
                            pattern (typing/includecore.ml[502,18323+13]..[502,18323+14])
                              Ppat_any
                        expression (typing/includecore.ml[502,18323+18]..[502,18323+20])
                          Pexp_constant PConst_int (10,None)
                      <case>
                        pattern (typing/includecore.ml[503,18344+6]..[503,18344+14])
                          Ppat_construct "Delete" (typing/includecore.ml[503,18344+6]..[503,18344+12])
                          Some
                            []
                            pattern (typing/includecore.ml[503,18344+13]..[503,18344+14])
                              Ppat_any
                        expression (typing/includecore.ml[503,18344+18]..[503,18344+20])
                          Pexp_constant PConst_int (10,None)
                      <case>
                        pattern (typing/includecore.ml[504,18365+6]..[504,18365+12])
                          Ppat_construct "Keep" (typing/includecore.ml[504,18365+6]..[504,18365+10])
                          Some
                            []
                            pattern (typing/includecore.ml[504,18365+11]..[504,18365+12])
                              Ppat_any
                        expression (typing/includecore.ml[504,18365+16]..[504,18365+17])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (typing/includecore.ml[505,18383+6]..[505,18383+44])
                          Ppat_construct "Change" (typing/includecore.ml[505,18383+6]..[505,18383+12])
                          Some
                            []
                            pattern (typing/includecore.ml[505,18383+13]..[505,18383+44])
                              Ppat_tuple
                              [
                                pattern (typing/includecore.ml[505,18383+14]..[505,18383+15])
                                  Ppat_any
                                pattern (typing/includecore.ml[505,18383+16]..[505,18383+17])
                                  Ppat_any
                                pattern (typing/includecore.ml[505,18383+18]..[505,18383+42])
                                  Ppat_construct "Diffing_with_keys.Name" (typing/includecore.ml[505,18383+18]..[505,18383+40])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[505,18383+41]..[505,18383+42])
                                      Ppat_var "t" (typing/includecore.ml[505,18383+41]..[505,18383+42])
                              ]
                        expression (typing/includecore.ml[506,18431+8]..[506,18431+40])
                          Pexp_ifthenelse
                          expression (typing/includecore.ml[506,18431+11]..[506,18431+24])
                            Pexp_field
                            expression (typing/includecore.ml[506,18431+11]..[506,18431+12])
                              Pexp_ident "t" (typing/includecore.ml[506,18431+11]..[506,18431+12])
                            "types_match" (typing/includecore.ml[506,18431+13]..[506,18431+24])
                          expression (typing/includecore.ml[506,18431+30]..[506,18431+32])
                            Pexp_constant PConst_int (10,None)
                          Some
                            expression (typing/includecore.ml[506,18431+38]..[506,18431+40])
                              Pexp_constant PConst_int (15,None)
                      <case>
                        pattern (typing/includecore.ml[507,18472+6]..[507,18472+14])
                          Ppat_construct "Change" (typing/includecore.ml[507,18472+6]..[507,18472+12])
                          Some
                            []
                            pattern (typing/includecore.ml[507,18472+13]..[507,18472+14])
                              Ppat_any
                        expression (typing/includecore.ml[507,18472+18]..[507,18472+20])
                          Pexp_constant PConst_int (10,None)
                    ]
                  core_type (typing/includecore.ml[501,18281+14]..[501,18281+30])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/includecore.ml[501,18281+14]..[501,18281+25])
                      Ptyp_constr "Diff.change" (typing/includecore.ml[501,18281+14]..[501,18281+25])
                      []
                    core_type (typing/includecore.ml[501,18281+29]..[501,18281+30])
                      Ptyp_any
            ]
          structure_item (typing/includecore.ml[511,18496+2]..[511,18496+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[511,18496+6]..[511,18496+9])
                  Ppat_var "key" (typing/includecore.ml[511,18496+6]..[511,18496+9])
                expression (typing/includecore.ml[511,18496+10]..[511,18496+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[511,18496+10]..[511,18496+24])
                    Ppat_constraint
                    pattern (typing/includecore.ml[511,18496+11]..[511,18496+12])
                      Ppat_var "x" (typing/includecore.ml[511,18496+11]..[511,18496+12])
                    core_type (typing/includecore.ml[511,18496+14]..[511,18496+23])
                      Ptyp_constr "Defs.left" (typing/includecore.ml[511,18496+14]..[511,18496+23])
                      []
                  expression (typing/includecore.ml[511,18496+27]..[511,18496+45])
                    Pexp_apply
                    expression (typing/includecore.ml[511,18496+27]..[511,18496+37])
                      Pexp_ident "Ident.name" (typing/includecore.ml[511,18496+27]..[511,18496+37])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includecore.ml[511,18496+38]..[511,18496+45])
                          Pexp_field
                          expression (typing/includecore.ml[511,18496+38]..[511,18496+39])
                            Pexp_ident "x" (typing/includecore.ml[511,18496+38]..[511,18496+39])
                          "ld_id" (typing/includecore.ml[511,18496+40]..[511,18496+45])
                    ]
            ]
          structure_item (typing/includecore.ml[512,18542+2]..[521,18803+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[512,18542+6]..[512,18542+13])
                  Ppat_var "diffing" (typing/includecore.ml[512,18542+6]..[512,18542+13])
                expression (typing/includecore.ml[512,18542+14]..[521,18803+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[512,18542+14]..[512,18542+17])
                    Ppat_var "loc" (typing/includecore.ml[512,18542+14]..[512,18542+17])
                  expression (typing/includecore.ml[512,18542+18]..[521,18803+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[512,18542+18]..[512,18542+21])
                      Ppat_var "env" (typing/includecore.ml[512,18542+18]..[512,18542+21])
                    expression (typing/includecore.ml[512,18542+22]..[521,18803+50]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[512,18542+22]..[512,18542+29])
                        Ppat_var "params1" (typing/includecore.ml[512,18542+22]..[512,18542+29])
                      expression (typing/includecore.ml[512,18542+30]..[521,18803+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[512,18542+30]..[512,18542+37])
                          Ppat_var "params2" (typing/includecore.ml[512,18542+30]..[512,18542+37])
                        expression (typing/includecore.ml[512,18542+38]..[521,18803+50]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[512,18542+38]..[512,18542+45])
                            Ppat_var "cstrs_1" (typing/includecore.ml[512,18542+38]..[512,18542+45])
                          expression (typing/includecore.ml[512,18542+46]..[521,18803+50]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[512,18542+46]..[512,18542+53])
                              Ppat_var "cstrs_2" (typing/includecore.ml[512,18542+46]..[512,18542+53])
                            expression (typing/includecore.ml[513,18598+4]..[521,18803+50])
                              Pexp_letmodule "Compute" (typing/includecore.ml[513,18598+15]..[513,18598+22])
                              module_expr (typing/includecore.ml[513,18598+25]..[519,18785+10])
                                Pmod_apply
                                module_expr (typing/includecore.ml[513,18598+25]..[513,18598+36])
                                  Pmod_ident "Diff.Simple" (typing/includecore.ml[513,18598+25]..[513,18598+36])
                                module_expr (typing/includecore.ml[513,18598+37]..[519,18785+9])
                                  Pmod_structure
                                  [
                                    structure_item (typing/includecore.ml[514,18642+8]..[514,18642+26])
                                      Pstr_value Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[514,18642+12]..[514,18642+20])
                                            Ppat_var "key_left" (typing/includecore.ml[514,18642+12]..[514,18642+20])
                                          expression (typing/includecore.ml[514,18642+23]..[514,18642+26])
                                            Pexp_ident "key" (typing/includecore.ml[514,18642+23]..[514,18642+26])
                                      ]
                                    structure_item (typing/includecore.ml[515,18669+8]..[515,18669+27])
                                      Pstr_value Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[515,18669+12]..[515,18669+21])
                                            Ppat_var "key_right" (typing/includecore.ml[515,18669+12]..[515,18669+21])
                                          expression (typing/includecore.ml[515,18669+24]..[515,18669+27])
                                            Pexp_ident "key" (typing/includecore.ml[515,18669+24]..[515,18669+27])
                                      ]
                                    structure_item (typing/includecore.ml[516,18697+8]..[516,18697+27])
                                      Pstr_value Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[516,18697+12]..[516,18697+18])
                                            Ppat_var "update" (typing/includecore.ml[516,18697+12]..[516,18697+18])
                                          expression (typing/includecore.ml[516,18697+21]..[516,18697+27])
                                            Pexp_ident "update" (typing/includecore.ml[516,18697+21]..[516,18697+27])
                                      ]
                                    structure_item (typing/includecore.ml[517,18725+8]..[517,18725+31])
                                      Pstr_value Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[517,18725+12]..[517,18725+16])
                                            Ppat_var "test" (typing/includecore.ml[517,18725+12]..[517,18725+16])
                                          expression (typing/includecore.ml[517,18725+19]..[517,18725+31])
                                            Pexp_apply
                                            expression (typing/includecore.ml[517,18725+19]..[517,18725+23])
                                              Pexp_ident "test" (typing/includecore.ml[517,18725+19]..[517,18725+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[517,18725+24]..[517,18725+27])
                                                  Pexp_ident "loc" (typing/includecore.ml[517,18725+24]..[517,18725+27])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[517,18725+28]..[517,18725+31])
                                                  Pexp_ident "env" (typing/includecore.ml[517,18725+28]..[517,18725+31])
                                            ]
                                      ]
                                    structure_item (typing/includecore.ml[518,18757+8]..[518,18757+27])
                                      Pstr_value Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[518,18757+12]..[518,18757+18])
                                            Ppat_var "weight" (typing/includecore.ml[518,18757+12]..[518,18757+18])
                                          expression (typing/includecore.ml[518,18757+21]..[518,18757+27])
                                            Pexp_ident "weight" (typing/includecore.ml[518,18757+21]..[518,18757+27])
                                      ]
                                  ]
                              expression (typing/includecore.ml[521,18803+4]..[521,18803+50])
                                Pexp_apply
                                expression (typing/includecore.ml[521,18803+4]..[521,18803+16])
                                  Pexp_ident "Compute.diff" (typing/includecore.ml[521,18803+4]..[521,18803+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[521,18803+17]..[521,18803+34])
                                      Pexp_tuple
                                      [
                                        expression (typing/includecore.ml[521,18803+18]..[521,18803+25])
                                          Pexp_ident "params1" (typing/includecore.ml[521,18803+18]..[521,18803+25])
                                        expression (typing/includecore.ml[521,18803+26]..[521,18803+33])
                                          Pexp_ident "params2" (typing/includecore.ml[521,18803+26]..[521,18803+33])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[521,18803+35]..[521,18803+42])
                                      Pexp_ident "cstrs_1" (typing/includecore.ml[521,18803+35]..[521,18803+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[521,18803+43]..[521,18803+50])
                                      Pexp_ident "cstrs_2" (typing/includecore.ml[521,18803+43]..[521,18803+50])
                                ]
            ]
          structure_item (typing/includecore.ml[523,18855+2]..[527,18967+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[523,18855+6]..[523,18855+13])
                  Ppat_var "compare" (typing/includecore.ml[523,18855+6]..[523,18855+13])
                expression (typing/includecore.ml[523,18855+14]..[527,18967+48]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[523,18855+15]..[523,18855+18])
                    Ppat_var "loc" (typing/includecore.ml[523,18855+15]..[523,18855+18])
                  expression (typing/includecore.ml[523,18855+19]..[527,18967+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[523,18855+19]..[523,18855+22])
                      Ppat_var "env" (typing/includecore.ml[523,18855+19]..[523,18855+22])
                    expression (typing/includecore.ml[523,18855+23]..[527,18967+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[523,18855+23]..[523,18855+30])
                        Ppat_var "params1" (typing/includecore.ml[523,18855+23]..[523,18855+30])
                      expression (typing/includecore.ml[523,18855+31]..[527,18967+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[523,18855+31]..[523,18855+38])
                          Ppat_var "params2" (typing/includecore.ml[523,18855+31]..[523,18855+38])
                        expression (typing/includecore.ml[523,18855+39]..[527,18967+48]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[523,18855+39]..[523,18855+40])
                            Ppat_var "l" (typing/includecore.ml[523,18855+39]..[523,18855+40])
                          expression (typing/includecore.ml[523,18855+41]..[527,18967+48]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[523,18855+41]..[523,18855+42])
                              Ppat_var "r" (typing/includecore.ml[523,18855+41]..[523,18855+42])
                            expression (typing/includecore.ml[524,18900+4]..[527,18967+48])
                              Pexp_ifthenelse
                              expression (typing/includecore.ml[524,18900+7]..[524,18900+41])
                                Pexp_apply
                                expression (typing/includecore.ml[524,18900+7]..[524,18900+12])
                                  Pexp_ident "equal" (typing/includecore.ml[524,18900+7]..[524,18900+12])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/includecore.ml[524,18900+14]..[524,18900+17])
                                      Pexp_ident "loc" (typing/includecore.ml[524,18900+14]..[524,18900+17])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[524,18900+18]..[524,18900+21])
                                      Pexp_ident "env" (typing/includecore.ml[524,18900+18]..[524,18900+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[524,18900+22]..[524,18900+29])
                                      Pexp_ident "params1" (typing/includecore.ml[524,18900+22]..[524,18900+29])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[524,18900+30]..[524,18900+37])
                                      Pexp_ident "params2" (typing/includecore.ml[524,18900+30]..[524,18900+37])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[524,18900+38]..[524,18900+39])
                                      Pexp_ident "l" (typing/includecore.ml[524,18900+38]..[524,18900+39])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[524,18900+40]..[524,18900+41])
                                      Pexp_ident "r" (typing/includecore.ml[524,18900+40]..[524,18900+41])
                                ]
                              expression (typing/includecore.ml[525,18947+6]..[525,18947+10])
                                Pexp_construct "None" (typing/includecore.ml[525,18947+6]..[525,18947+10])
                                None
                              Some
                                expression (typing/includecore.ml[527,18967+6]..[527,18967+48])
                                  Pexp_construct "Some" (typing/includecore.ml[527,18967+6]..[527,18967+10])
                                  Some
                                    expression (typing/includecore.ml[527,18967+11]..[527,18967+48])
                                      Pexp_apply
                                      expression (typing/includecore.ml[527,18967+12]..[527,18967+19])
                                        Pexp_ident "diffing" (typing/includecore.ml[527,18967+12]..[527,18967+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+20]..[527,18967+23])
                                            Pexp_ident "loc" (typing/includecore.ml[527,18967+20]..[527,18967+23])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+24]..[527,18967+27])
                                            Pexp_ident "env" (typing/includecore.ml[527,18967+24]..[527,18967+27])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+28]..[527,18967+35])
                                            Pexp_ident "params1" (typing/includecore.ml[527,18967+28]..[527,18967+35])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+36]..[527,18967+43])
                                            Pexp_ident "params2" (typing/includecore.ml[527,18967+36]..[527,18967+43])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+44]..[527,18967+45])
                                            Pexp_ident "l" (typing/includecore.ml[527,18967+44]..[527,18967+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[527,18967+46]..[527,18967+47])
                                            Pexp_ident "r" (typing/includecore.ml[527,18967+46]..[527,18967+47])
                                      ]
            ]
          structure_item (typing/includecore.ml[530,19018+2]..[551,19965+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[530,19018+6]..[530,19018+33])
                  Ppat_var "compare_with_representation" (typing/includecore.ml[530,19018+6]..[530,19018+33])
                expression (typing/includecore.ml[530,19018+34]..[551,19965+20]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[530,19018+35]..[530,19018+38])
                    Ppat_var "loc" (typing/includecore.ml[530,19018+35]..[530,19018+38])
                  expression (typing/includecore.ml[530,19018+39]..[551,19965+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[530,19018+39]..[530,19018+42])
                      Ppat_var "env" (typing/includecore.ml[530,19018+39]..[530,19018+42])
                    expression (typing/includecore.ml[530,19018+43]..[551,19965+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[530,19018+43]..[530,19018+50])
                        Ppat_var "params1" (typing/includecore.ml[530,19018+43]..[530,19018+50])
                      expression (typing/includecore.ml[530,19018+51]..[551,19965+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[530,19018+51]..[530,19018+58])
                          Ppat_var "params2" (typing/includecore.ml[530,19018+51]..[530,19018+58])
                        expression (typing/includecore.ml[530,19018+59]..[551,19965+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[530,19018+59]..[530,19018+60])
                            Ppat_var "l" (typing/includecore.ml[530,19018+59]..[530,19018+60])
                          expression (typing/includecore.ml[530,19018+61]..[551,19965+20]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[530,19018+61]..[530,19018+62])
                              Ppat_var "r" (typing/includecore.ml[530,19018+61]..[530,19018+62])
                            expression (typing/includecore.ml[530,19018+63]..[551,19965+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includecore.ml[530,19018+63]..[530,19018+67])
                                Ppat_var "rep1" (typing/includecore.ml[530,19018+63]..[530,19018+67])
                              expression (typing/includecore.ml[530,19018+68]..[551,19965+20]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includecore.ml[530,19018+68]..[530,19018+72])
                                  Ppat_var "rep2" (typing/includecore.ml[530,19018+68]..[530,19018+72])
                                expression (typing/includecore.ml[531,19093+4]..[551,19965+20])
                                  Pexp_ifthenelse
                                  expression (typing/includecore.ml[531,19093+7]..[531,19093+47])
                                    Pexp_apply
                                    expression (typing/includecore.ml[531,19093+7]..[531,19093+10])
                                      Pexp_ident "not" (typing/includecore.ml[531,19093+7]..[531,19093+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[531,19093+11]..[531,19093+47])
                                          Pexp_apply
                                          expression (typing/includecore.ml[531,19093+12]..[531,19093+17])
                                            Pexp_ident "equal" (typing/includecore.ml[531,19093+12]..[531,19093+17])
                                          [
                                            <arg>
                                            Labelled "loc"
                                              expression (typing/includecore.ml[531,19093+19]..[531,19093+22])
                                                Pexp_ident "loc" (typing/includecore.ml[531,19093+19]..[531,19093+22])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[531,19093+23]..[531,19093+26])
                                                Pexp_ident "env" (typing/includecore.ml[531,19093+23]..[531,19093+26])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[531,19093+27]..[531,19093+34])
                                                Pexp_ident "params1" (typing/includecore.ml[531,19093+27]..[531,19093+34])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[531,19093+35]..[531,19093+42])
                                                Pexp_ident "params2" (typing/includecore.ml[531,19093+35]..[531,19093+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[531,19093+43]..[531,19093+44])
                                                Pexp_ident "l" (typing/includecore.ml[531,19093+43]..[531,19093+44])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[531,19093+45]..[531,19093+46])
                                                Pexp_ident "r" (typing/includecore.ml[531,19093+45]..[531,19093+46])
                                          ]
                                    ]
                                  expression (typing/includecore.ml[532,19146+6]..[533,19203+51])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/includecore.ml[532,19146+10]..[532,19146+15])
                                          Ppat_var "patch" (typing/includecore.ml[532,19146+10]..[532,19146+15])
                                        expression (typing/includecore.ml[532,19146+18]..[532,19146+53])
                                          Pexp_apply
                                          expression (typing/includecore.ml[532,19146+18]..[532,19146+25])
                                            Pexp_ident "diffing" (typing/includecore.ml[532,19146+18]..[532,19146+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+26]..[532,19146+29])
                                                Pexp_ident "loc" (typing/includecore.ml[532,19146+26]..[532,19146+29])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+30]..[532,19146+33])
                                                Pexp_ident "env" (typing/includecore.ml[532,19146+30]..[532,19146+33])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+34]..[532,19146+41])
                                                Pexp_ident "params1" (typing/includecore.ml[532,19146+34]..[532,19146+41])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+42]..[532,19146+49])
                                                Pexp_ident "params2" (typing/includecore.ml[532,19146+42]..[532,19146+49])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+50]..[532,19146+51])
                                                Pexp_ident "l" (typing/includecore.ml[532,19146+50]..[532,19146+51])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[532,19146+52]..[532,19146+53])
                                                Pexp_ident "r" (typing/includecore.ml[532,19146+52]..[532,19146+53])
                                          ]
                                    ]
                                    expression (typing/includecore.ml[533,19203+6]..[533,19203+51])
                                      Pexp_construct "Some" (typing/includecore.ml[533,19203+6]..[533,19203+10])
                                      Some
                                        expression (typing/includecore.ml[533,19203+11]..[533,19203+51])
                                          Pexp_construct "Record_mismatch" (typing/includecore.ml[533,19203+12]..[533,19203+27])
                                          Some
                                            expression (typing/includecore.ml[533,19203+28]..[533,19203+50])
                                              Pexp_construct "Label_mismatch" (typing/includecore.ml[533,19203+29]..[533,19203+43])
                                              Some
                                                expression (typing/includecore.ml[533,19203+44]..[533,19203+49])
                                                  Pexp_ident "patch" (typing/includecore.ml[533,19203+44]..[533,19203+49])
                                  Some
                                    expression (typing/includecore.ml[535,19264+5]..[551,19965+20])
                                      Pexp_match
                                      expression (typing/includecore.ml[535,19264+11]..[535,19264+21])
                                        Pexp_tuple
                                        [
                                          expression (typing/includecore.ml[535,19264+11]..[535,19264+15])
                                            Pexp_ident "rep1" (typing/includecore.ml[535,19264+11]..[535,19264+15])
                                          expression (typing/includecore.ml[535,19264+17]..[535,19264+21])
                                            Pexp_ident "rep2" (typing/includecore.ml[535,19264+17]..[535,19264+21])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[536,19291+7]..[536,19291+41])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[536,19291+7]..[536,19291+23])
                                                Ppat_construct "Record_unboxed" (typing/includecore.ml[536,19291+7]..[536,19291+21])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[536,19291+22]..[536,19291+23])
                                                    Ppat_any
                                              pattern (typing/includecore.ml[536,19291+25]..[536,19291+41])
                                                Ppat_construct "Record_unboxed" (typing/includecore.ml[536,19291+25]..[536,19291+39])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[536,19291+40]..[536,19291+41])
                                                    Ppat_any
                                            ]
                                          expression (typing/includecore.ml[536,19291+45]..[536,19291+49])
                                            Pexp_construct "None" (typing/includecore.ml[536,19291+45]..[536,19291+49])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[537,19341+7]..[537,19341+26])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[537,19341+7]..[537,19341+23])
                                                Ppat_construct "Record_unboxed" (typing/includecore.ml[537,19341+7]..[537,19341+21])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[537,19341+22]..[537,19341+23])
                                                    Ppat_any
                                              pattern (typing/includecore.ml[537,19341+25]..[537,19341+26])
                                                Ppat_any
                                            ]
                                          expression (typing/includecore.ml[537,19341+30]..[537,19341+65])
                                            Pexp_construct "Some" (typing/includecore.ml[537,19341+30]..[537,19341+34])
                                            Some
                                              expression (typing/includecore.ml[537,19341+35]..[537,19341+65])
                                                Pexp_construct "Unboxed_representation" (typing/includecore.ml[537,19341+36]..[537,19341+58])
                                                Some
                                                  expression (typing/includecore.ml[537,19341+59]..[537,19341+64])
                                                    Pexp_construct "First" (typing/includecore.ml[537,19341+59]..[537,19341+64])
                                                    None
                                        <case>
                                          pattern (typing/includecore.ml[538,19407+7]..[538,19407+26])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[538,19407+7]..[538,19407+8])
                                                Ppat_any
                                              pattern (typing/includecore.ml[538,19407+10]..[538,19407+26])
                                                Ppat_construct "Record_unboxed" (typing/includecore.ml[538,19407+10]..[538,19407+24])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[538,19407+25]..[538,19407+26])
                                                    Ppat_any
                                            ]
                                          expression (typing/includecore.ml[538,19407+30]..[538,19407+66])
                                            Pexp_construct "Some" (typing/includecore.ml[538,19407+30]..[538,19407+34])
                                            Some
                                              expression (typing/includecore.ml[538,19407+35]..[538,19407+66])
                                                Pexp_construct "Unboxed_representation" (typing/includecore.ml[538,19407+36]..[538,19407+58])
                                                Some
                                                  expression (typing/includecore.ml[538,19407+59]..[538,19407+65])
                                                    Pexp_construct "Second" (typing/includecore.ml[538,19407+59]..[538,19407+65])
                                                    None
                                        <case>
                                          pattern (typing/includecore.ml[540,19475+7]..[540,19475+33])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[540,19475+7]..[540,19475+19])
                                                Ppat_construct "Record_float" (typing/includecore.ml[540,19475+7]..[540,19475+19])
                                                None
                                              pattern (typing/includecore.ml[540,19475+21]..[540,19475+33])
                                                Ppat_construct "Record_float" (typing/includecore.ml[540,19475+21]..[540,19475+33])
                                                None
                                            ]
                                          expression (typing/includecore.ml[540,19475+37]..[540,19475+41])
                                            Pexp_construct "None" (typing/includecore.ml[540,19475+37]..[540,19475+41])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[541,19517+7]..[541,19517+22])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[541,19517+7]..[541,19517+19])
                                                Ppat_construct "Record_float" (typing/includecore.ml[541,19517+7]..[541,19517+19])
                                                None
                                              pattern (typing/includecore.ml[541,19517+21]..[541,19517+22])
                                                Ppat_any
                                            ]
                                          expression (typing/includecore.ml[542,19543+8]..[542,19543+67])
                                            Pexp_construct "Some" (typing/includecore.ml[542,19543+8]..[542,19543+12])
                                            Some
                                              expression (typing/includecore.ml[542,19543+13]..[542,19543+67])
                                                Pexp_construct "Record_mismatch" (typing/includecore.ml[542,19543+14]..[542,19543+29])
                                                Some
                                                  expression (typing/includecore.ml[542,19543+30]..[542,19543+66])
                                                    Pexp_construct "Unboxed_float_representation" (typing/includecore.ml[542,19543+31]..[542,19543+59])
                                                    Some
                                                      expression (typing/includecore.ml[542,19543+60]..[542,19543+65])
                                                        Pexp_construct "First" (typing/includecore.ml[542,19543+60]..[542,19543+65])
                                                        None
                                        <case>
                                          pattern (typing/includecore.ml[543,19611+7]..[543,19611+22])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[543,19611+7]..[543,19611+8])
                                                Ppat_any
                                              pattern (typing/includecore.ml[543,19611+10]..[543,19611+22])
                                                Ppat_construct "Record_float" (typing/includecore.ml[543,19611+10]..[543,19611+22])
                                                None
                                            ]
                                          expression (typing/includecore.ml[544,19637+8]..[544,19637+68])
                                            Pexp_construct "Some" (typing/includecore.ml[544,19637+8]..[544,19637+12])
                                            Some
                                              expression (typing/includecore.ml[544,19637+13]..[544,19637+68])
                                                Pexp_construct "Record_mismatch" (typing/includecore.ml[544,19637+14]..[544,19637+29])
                                                Some
                                                  expression (typing/includecore.ml[544,19637+30]..[544,19637+67])
                                                    Pexp_construct "Unboxed_float_representation" (typing/includecore.ml[544,19637+31]..[544,19637+59])
                                                    Some
                                                      expression (typing/includecore.ml[544,19637+60]..[544,19637+66])
                                                        Pexp_construct "Second" (typing/includecore.ml[544,19637+60]..[544,19637+66])
                                                        None
                                        <case>
                                          pattern (typing/includecore.ml[546,19707+7]..[548,19787+45])
                                            Ppat_or
                                            pattern (typing/includecore.ml[546,19707+7]..[547,19745+41])
                                              Ppat_or
                                              pattern (typing/includecore.ml[546,19707+7]..[546,19707+37])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/includecore.ml[546,19707+7]..[546,19707+21])
                                                    Ppat_construct "Record_regular" (typing/includecore.ml[546,19707+7]..[546,19707+21])
                                                    None
                                                  pattern (typing/includecore.ml[546,19707+23]..[546,19707+37])
                                                    Ppat_construct "Record_regular" (typing/includecore.ml[546,19707+23]..[546,19707+37])
                                                    None
                                                ]
                                              pattern (typing/includecore.ml[547,19745+7]..[547,19745+41])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/includecore.ml[547,19745+7]..[547,19745+23])
                                                    Ppat_construct "Record_inlined" (typing/includecore.ml[547,19745+7]..[547,19745+21])
                                                    Some
                                                      []
                                                      pattern (typing/includecore.ml[547,19745+22]..[547,19745+23])
                                                        Ppat_any
                                                  pattern (typing/includecore.ml[547,19745+25]..[547,19745+41])
                                                    Ppat_construct "Record_inlined" (typing/includecore.ml[547,19745+25]..[547,19745+39])
                                                    Some
                                                      []
                                                      pattern (typing/includecore.ml[547,19745+40]..[547,19745+41])
                                                        Ppat_any
                                                ]
                                            pattern (typing/includecore.ml[548,19787+7]..[548,19787+45])
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[548,19787+7]..[548,19787+25])
                                                  Ppat_construct "Record_extension" (typing/includecore.ml[548,19787+7]..[548,19787+23])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[548,19787+24]..[548,19787+25])
                                                      Ppat_any
                                                pattern (typing/includecore.ml[548,19787+27]..[548,19787+45])
                                                  Ppat_construct "Record_extension" (typing/includecore.ml[548,19787+27]..[548,19787+43])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[548,19787+44]..[548,19787+45])
                                                      Ppat_any
                                              ]
                                          expression (typing/includecore.ml[548,19787+49]..[548,19787+53])
                                            Pexp_construct "None" (typing/includecore.ml[548,19787+49]..[548,19787+53])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[549,19841+7]..[550,19902+59])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[549,19841+7]..[549,19841+59])
                                                Ppat_or
                                                pattern (typing/includecore.ml[549,19841+8]..[549,19841+39])
                                                  Ppat_or
                                                  pattern (typing/includecore.ml[549,19841+8]..[549,19841+22])
                                                    Ppat_construct "Record_regular" (typing/includecore.ml[549,19841+8]..[549,19841+22])
                                                    None
                                                  pattern (typing/includecore.ml[549,19841+23]..[549,19841+39])
                                                    Ppat_construct "Record_inlined" (typing/includecore.ml[549,19841+23]..[549,19841+37])
                                                    Some
                                                      []
                                                      pattern (typing/includecore.ml[549,19841+38]..[549,19841+39])
                                                        Ppat_any
                                                pattern (typing/includecore.ml[549,19841+40]..[549,19841+58])
                                                  Ppat_construct "Record_extension" (typing/includecore.ml[549,19841+40]..[549,19841+56])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[549,19841+57]..[549,19841+58])
                                                      Ppat_any
                                              pattern (typing/includecore.ml[550,19902+7]..[550,19902+59])
                                                Ppat_or
                                                pattern (typing/includecore.ml[550,19902+8]..[550,19902+39])
                                                  Ppat_or
                                                  pattern (typing/includecore.ml[550,19902+8]..[550,19902+22])
                                                    Ppat_construct "Record_regular" (typing/includecore.ml[550,19902+8]..[550,19902+22])
                                                    None
                                                  pattern (typing/includecore.ml[550,19902+23]..[550,19902+39])
                                                    Ppat_construct "Record_inlined" (typing/includecore.ml[550,19902+23]..[550,19902+37])
                                                    Some
                                                      []
                                                      pattern (typing/includecore.ml[550,19902+38]..[550,19902+39])
                                                        Ppat_any
                                                pattern (typing/includecore.ml[550,19902+40]..[550,19902+58])
                                                  Ppat_construct "Record_extension" (typing/includecore.ml[550,19902+40]..[550,19902+56])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[550,19902+57]..[550,19902+58])
                                                      Ppat_any
                                            ]
                                          expression (typing/includecore.ml[551,19965+8]..[551,19965+20])
                                            Pexp_assert
                                            expression (typing/includecore.ml[551,19965+15]..[551,19965+20])
                                              Pexp_construct "false" (typing/includecore.ml[551,19965+15]..[551,19965+20])
                                              None
                                      ]
            ]
        ]
  structure_item (typing/includecore.ml[556,19993+0]..[681,24499+3])
    Pstr_module
    "Variant_diffing" (typing/includecore.ml[556,19993+7]..[556,19993+22])
      module_expr (typing/includecore.ml[556,19993+25]..[681,24499+3])
        Pmod_structure
        [
          structure_item (typing/includecore.ml[558,20026+2]..[574,20798+73])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[558,20026+6]..[558,20026+35])
                  Ppat_var "compare_constructor_arguments" (typing/includecore.ml[558,20026+6]..[558,20026+35])
                expression (typing/includecore.ml[558,20026+36]..[574,20798+73]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[558,20026+37]..[558,20026+40])
                    Ppat_var "loc" (typing/includecore.ml[558,20026+37]..[558,20026+40])
                  expression (typing/includecore.ml[558,20026+41]..[574,20798+73]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[558,20026+41]..[558,20026+44])
                      Ppat_var "env" (typing/includecore.ml[558,20026+41]..[558,20026+44])
                    expression (typing/includecore.ml[558,20026+45]..[574,20798+73]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[558,20026+45]..[558,20026+52])
                        Ppat_var "params1" (typing/includecore.ml[558,20026+45]..[558,20026+52])
                      expression (typing/includecore.ml[558,20026+53]..[574,20798+73]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[558,20026+53]..[558,20026+60])
                          Ppat_var "params2" (typing/includecore.ml[558,20026+53]..[558,20026+60])
                        expression (typing/includecore.ml[558,20026+61]..[574,20798+73]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[558,20026+61]..[558,20026+65])
                            Ppat_var "arg1" (typing/includecore.ml[558,20026+61]..[558,20026+65])
                          expression (typing/includecore.ml[558,20026+66]..[574,20798+73]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[558,20026+66]..[558,20026+70])
                              Ppat_var "arg2" (typing/includecore.ml[558,20026+66]..[558,20026+70])
                            expression (typing/includecore.ml[559,20099+4]..[574,20798+73])
                              Pexp_match
                              expression (typing/includecore.ml[559,20099+10]..[559,20099+20])
                                Pexp_tuple
                                [
                                  expression (typing/includecore.ml[559,20099+10]..[559,20099+14])
                                    Pexp_ident "arg1" (typing/includecore.ml[559,20099+10]..[559,20099+14])
                                  expression (typing/includecore.ml[559,20099+16]..[559,20099+20])
                                    Pexp_ident "arg2" (typing/includecore.ml[559,20099+16]..[559,20099+20])
                                ]
                              [
                                <case>
                                  pattern (typing/includecore.ml[560,20125+6]..[560,20125+50])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[560,20125+6]..[560,20125+27])
                                        Ppat_construct "Types.Cstr_tuple" (typing/includecore.ml[560,20125+6]..[560,20125+22])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[560,20125+23]..[560,20125+27])
                                            Ppat_var "arg1" (typing/includecore.ml[560,20125+23]..[560,20125+27])
                                      pattern (typing/includecore.ml[560,20125+29]..[560,20125+50])
                                        Ppat_construct "Types.Cstr_tuple" (typing/includecore.ml[560,20125+29]..[560,20125+45])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[560,20125+46]..[560,20125+50])
                                            Ppat_var "arg2" (typing/includecore.ml[560,20125+46]..[560,20125+50])
                                    ]
                                  expression (typing/includecore.ml[561,20179+8]..[568,20529+9])
                                    Pexp_ifthenelse
                                    expression (typing/includecore.ml[561,20179+11]..[561,20179+47])
                                      Pexp_apply
                                      expression (typing/includecore.ml[561,20179+28]..[561,20179+30])
                                        Pexp_ident "<>" (typing/includecore.ml[561,20179+28]..[561,20179+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[561,20179+11]..[561,20179+27])
                                            Pexp_apply
                                            expression (typing/includecore.ml[561,20179+11]..[561,20179+22])
                                              Pexp_ident "List.length" (typing/includecore.ml[561,20179+11]..[561,20179+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[561,20179+23]..[561,20179+27])
                                                  Pexp_ident "arg1" (typing/includecore.ml[561,20179+23]..[561,20179+27])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[561,20179+31]..[561,20179+47])
                                            Pexp_apply
                                            expression (typing/includecore.ml[561,20179+31]..[561,20179+42])
                                              Pexp_ident "List.length" (typing/includecore.ml[561,20179+31]..[561,20179+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[561,20179+43]..[561,20179+47])
                                                  Pexp_ident "arg2" (typing/includecore.ml[561,20179+43]..[561,20179+47])
                                            ]
                                      ]
                                    expression (typing/includecore.ml[562,20232+10]..[562,20232+45])
                                      Pexp_construct "Some" (typing/includecore.ml[562,20232+10]..[562,20232+14])
                                      Some
                                        expression (typing/includecore.ml[562,20232+15]..[562,20232+45])
                                          Pexp_constraint
                                          expression (typing/includecore.ml[562,20232+16]..[562,20232+21])
                                            Pexp_construct "Arity" (typing/includecore.ml[562,20232+16]..[562,20232+21])
                                            None
                                          core_type (typing/includecore.ml[562,20232+24]..[562,20232+44])
                                            Ptyp_constr "constructor_mismatch" (typing/includecore.ml[562,20232+24]..[562,20232+44])
                                            []
                                    Some
                                      expression (typing/includecore.ml[563,20278+13]..[568,20529+9])
                                        Pexp_match
                                        expression (typing/includecore.ml[565,20376+14]..[565,20376+68])
                                          Pexp_apply
                                          expression (typing/includecore.ml[565,20376+14]..[565,20376+25])
                                            Pexp_ident "Ctype.equal" (typing/includecore.ml[565,20376+14]..[565,20376+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[565,20376+26]..[565,20376+29])
                                                Pexp_ident "env" (typing/includecore.ml[565,20376+26]..[565,20376+29])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[565,20376+30]..[565,20376+34])
                                                Pexp_construct "true" (typing/includecore.ml[565,20376+30]..[565,20376+34])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[565,20376+35]..[565,20376+51])
                                                Pexp_apply
                                                expression (typing/includecore.ml[565,20376+44]..[565,20376+45])
                                                  Pexp_ident "@" (typing/includecore.ml[565,20376+44]..[565,20376+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[565,20376+36]..[565,20376+43])
                                                      Pexp_ident "params1" (typing/includecore.ml[565,20376+36]..[565,20376+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[565,20376+46]..[565,20376+50])
                                                      Pexp_ident "arg1" (typing/includecore.ml[565,20376+46]..[565,20376+50])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[565,20376+52]..[565,20376+68])
                                                Pexp_apply
                                                expression (typing/includecore.ml[565,20376+61]..[565,20376+62])
                                                  Pexp_ident "@" (typing/includecore.ml[565,20376+61]..[565,20376+62])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[565,20376+53]..[565,20376+60])
                                                      Pexp_ident "params2" (typing/includecore.ml[565,20376+53]..[565,20376+60])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[565,20376+63]..[565,20376+67])
                                                      Pexp_ident "arg2" (typing/includecore.ml[565,20376+63]..[565,20376+67])
                                                ]
                                          ]
                                        [
                                          <case>
                                            pattern (typing/includecore.ml[566,20450+10]..[566,20450+38])
                                              Ppat_exception
                                              pattern (typing/includecore.ml[566,20450+20]..[566,20450+38])
                                                Ppat_construct "Ctype.Equality" (typing/includecore.ml[566,20450+20]..[566,20450+34])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[566,20450+35]..[566,20450+38])
                                                    Ppat_var "err" (typing/includecore.ml[566,20450+35]..[566,20450+38])
                                            expression (typing/includecore.ml[566,20450+42]..[566,20450+57])
                                              Pexp_construct "Some" (typing/includecore.ml[566,20450+42]..[566,20450+46])
                                              Some
                                                expression (typing/includecore.ml[566,20450+47]..[566,20450+57])
                                                  Pexp_construct "Type" (typing/includecore.ml[566,20450+48]..[566,20450+52])
                                                  Some
                                                    expression (typing/includecore.ml[566,20450+53]..[566,20450+56])
                                                      Pexp_ident "err" (typing/includecore.ml[566,20450+53]..[566,20450+56])
                                          <case>
                                            pattern (typing/includecore.ml[567,20508+10]..[567,20508+12])
                                              Ppat_construct "()" (typing/includecore.ml[567,20508+10]..[567,20508+12])
                                              None
                                            expression (typing/includecore.ml[567,20508+16]..[567,20508+20])
                                              Pexp_construct "None" (typing/includecore.ml[567,20508+16]..[567,20508+20])
                                              None
                                        ]
                                <case>
                                  pattern (typing/includecore.ml[569,20539+6]..[569,20539+48])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[569,20539+6]..[569,20539+26])
                                        Ppat_construct "Types.Cstr_record" (typing/includecore.ml[569,20539+6]..[569,20539+23])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[569,20539+24]..[569,20539+26])
                                            Ppat_var "l1" (typing/includecore.ml[569,20539+24]..[569,20539+26])
                                      pattern (typing/includecore.ml[569,20539+28]..[569,20539+48])
                                        Ppat_construct "Types.Cstr_record" (typing/includecore.ml[569,20539+28]..[569,20539+45])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[569,20539+46]..[569,20539+48])
                                            Ppat_var "l2" (typing/includecore.ml[569,20539+46]..[569,20539+48])
                                    ]
                                  expression (typing/includecore.ml[570,20591+8]..[572,20659+65])
                                    Pexp_apply
                                    expression (typing/includecore.ml[570,20591+8]..[570,20591+18])
                                      Pexp_ident "Option.map" (typing/includecore.ml[570,20591+8]..[570,20591+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[571,20610+10]..[571,20610+48])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/includecore.ml[571,20610+15]..[571,20610+22])
                                            Ppat_var "rec_err" (typing/includecore.ml[571,20610+15]..[571,20610+22])
                                          expression (typing/includecore.ml[571,20610+26]..[571,20610+47])
                                            Pexp_construct "Inline_record" (typing/includecore.ml[571,20610+26]..[571,20610+39])
                                            Some
                                              expression (typing/includecore.ml[571,20610+40]..[571,20610+47])
                                                Pexp_ident "rec_err" (typing/includecore.ml[571,20610+40]..[571,20610+47])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[572,20659+10]..[572,20659+65])
                                          Pexp_apply
                                          expression (typing/includecore.ml[572,20659+11]..[572,20659+33])
                                            Pexp_ident "Record_diffing.compare" (typing/includecore.ml[572,20659+11]..[572,20659+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[572,20659+34]..[572,20659+37])
                                                Pexp_ident "env" (typing/includecore.ml[572,20659+34]..[572,20659+37])
                                            <arg>
                                            Labelled "loc"
                                              expression (typing/includecore.ml[572,20659+39]..[572,20659+42])
                                                Pexp_ident "loc" (typing/includecore.ml[572,20659+39]..[572,20659+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[572,20659+43]..[572,20659+50])
                                                Pexp_ident "params1" (typing/includecore.ml[572,20659+43]..[572,20659+50])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[572,20659+51]..[572,20659+58])
                                                Pexp_ident "params2" (typing/includecore.ml[572,20659+51]..[572,20659+58])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[572,20659+59]..[572,20659+61])
                                                Pexp_ident "l1" (typing/includecore.ml[572,20659+59]..[572,20659+61])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[572,20659+62]..[572,20659+64])
                                                Pexp_ident "l2" (typing/includecore.ml[572,20659+62]..[572,20659+64])
                                          ]
                                    ]
                                <case>
                                  pattern (typing/includecore.ml[573,20725+6]..[573,20725+28])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[573,20725+6]..[573,20725+25])
                                        Ppat_construct "Types.Cstr_record" (typing/includecore.ml[573,20725+6]..[573,20725+23])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[573,20725+24]..[573,20725+25])
                                            Ppat_any
                                      pattern (typing/includecore.ml[573,20725+27]..[573,20725+28])
                                        Ppat_any
                                    ]
                                  expression (typing/includecore.ml[573,20725+32]..[573,20725+72])
                                    Pexp_construct "Some" (typing/includecore.ml[573,20725+32]..[573,20725+36])
                                    Some
                                      expression (typing/includecore.ml[573,20725+37]..[573,20725+72])
                                        Pexp_constraint
                                        expression (typing/includecore.ml[573,20725+38]..[573,20725+48])
                                          Pexp_construct "Kind" (typing/includecore.ml[573,20725+38]..[573,20725+42])
                                          Some
                                            expression (typing/includecore.ml[573,20725+43]..[573,20725+48])
                                              Pexp_construct "First" (typing/includecore.ml[573,20725+43]..[573,20725+48])
                                              None
                                        core_type (typing/includecore.ml[573,20725+51]..[573,20725+71])
                                          Ptyp_constr "constructor_mismatch" (typing/includecore.ml[573,20725+51]..[573,20725+71])
                                          []
                                <case>
                                  pattern (typing/includecore.ml[574,20798+6]..[574,20798+28])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includecore.ml[574,20798+6]..[574,20798+7])
                                        Ppat_any
                                      pattern (typing/includecore.ml[574,20798+9]..[574,20798+28])
                                        Ppat_construct "Types.Cstr_record" (typing/includecore.ml[574,20798+9]..[574,20798+26])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[574,20798+27]..[574,20798+28])
                                            Ppat_any
                                    ]
                                  expression (typing/includecore.ml[574,20798+32]..[574,20798+73])
                                    Pexp_construct "Some" (typing/includecore.ml[574,20798+32]..[574,20798+36])
                                    Some
                                      expression (typing/includecore.ml[574,20798+37]..[574,20798+73])
                                        Pexp_constraint
                                        expression (typing/includecore.ml[574,20798+38]..[574,20798+49])
                                          Pexp_construct "Kind" (typing/includecore.ml[574,20798+38]..[574,20798+42])
                                          Some
                                            expression (typing/includecore.ml[574,20798+43]..[574,20798+49])
                                              Pexp_construct "Second" (typing/includecore.ml[574,20798+43]..[574,20798+49])
                                              None
                                        core_type (typing/includecore.ml[574,20798+52]..[574,20798+72])
                                          Ptyp_constr "constructor_mismatch" (typing/includecore.ml[574,20798+52]..[574,20798+72])
                                          []
                              ]
            ]
          structure_item (typing/includecore.ml[576,20873+2]..[586,21337+74])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[576,20873+6]..[576,20873+26])
                  Ppat_var "compare_constructors" (typing/includecore.ml[576,20873+6]..[576,20873+26])
                expression (typing/includecore.ml[576,20873+27]..[586,21337+74]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[576,20873+28]..[576,20873+31])
                    Ppat_var "loc" (typing/includecore.ml[576,20873+28]..[576,20873+31])
                  expression (typing/includecore.ml[576,20873+32]..[586,21337+74]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[576,20873+32]..[576,20873+35])
                      Ppat_var "env" (typing/includecore.ml[576,20873+32]..[576,20873+35])
                    expression (typing/includecore.ml[576,20873+36]..[586,21337+74]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[576,20873+36]..[576,20873+43])
                        Ppat_var "params1" (typing/includecore.ml[576,20873+36]..[576,20873+43])
                      expression (typing/includecore.ml[576,20873+44]..[586,21337+74]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[576,20873+44]..[576,20873+51])
                          Ppat_var "params2" (typing/includecore.ml[576,20873+44]..[576,20873+51])
                        expression (typing/includecore.ml[576,20873+52]..[586,21337+74]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[576,20873+52]..[576,20873+56])
                            Ppat_var "res1" (typing/includecore.ml[576,20873+52]..[576,20873+56])
                          expression (typing/includecore.ml[576,20873+57]..[586,21337+74]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[576,20873+57]..[576,20873+61])
                              Ppat_var "res2" (typing/includecore.ml[576,20873+57]..[576,20873+61])
                            expression (typing/includecore.ml[576,20873+62]..[586,21337+74]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includecore.ml[576,20873+62]..[576,20873+67])
                                Ppat_var "args1" (typing/includecore.ml[576,20873+62]..[576,20873+67])
                              expression (typing/includecore.ml[576,20873+68]..[586,21337+74]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includecore.ml[576,20873+68]..[576,20873+73])
                                  Ppat_var "args2" (typing/includecore.ml[576,20873+68]..[576,20873+73])
                                expression (typing/includecore.ml[577,20949+4]..[586,21337+74])
                                  Pexp_match
                                  expression (typing/includecore.ml[577,20949+10]..[577,20949+20])
                                    Pexp_tuple
                                    [
                                      expression (typing/includecore.ml[577,20949+10]..[577,20949+14])
                                        Pexp_ident "res1" (typing/includecore.ml[577,20949+10]..[577,20949+14])
                                      expression (typing/includecore.ml[577,20949+16]..[577,20949+20])
                                        Pexp_ident "res2" (typing/includecore.ml[577,20949+16]..[577,20949+20])
                                    ]
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[578,20975+6]..[578,20975+22])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[578,20975+6]..[578,20975+13])
                                            Ppat_construct "Some" (typing/includecore.ml[578,20975+6]..[578,20975+10])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[578,20975+11]..[578,20975+13])
                                                Ppat_var "r1" (typing/includecore.ml[578,20975+11]..[578,20975+13])
                                          pattern (typing/includecore.ml[578,20975+15]..[578,20975+22])
                                            Ppat_construct "Some" (typing/includecore.ml[578,20975+15]..[578,20975+19])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[578,20975+20]..[578,20975+22])
                                                Ppat_var "r2" (typing/includecore.ml[578,20975+20]..[578,20975+22])
                                        ]
                                      expression (typing/includecore.ml[579,21001+8]..[582,21192+11])
                                        Pexp_match
                                        expression (typing/includecore.ml[579,21001+20]..[579,21001+50])
                                          Pexp_apply
                                          expression (typing/includecore.ml[579,21001+20]..[579,21001+31])
                                            Pexp_ident "Ctype.equal" (typing/includecore.ml[579,21001+20]..[579,21001+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[579,21001+32]..[579,21001+35])
                                                Pexp_ident "env" (typing/includecore.ml[579,21001+32]..[579,21001+35])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[579,21001+36]..[579,21001+40])
                                                Pexp_construct "true" (typing/includecore.ml[579,21001+36]..[579,21001+40])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[579,21001+41]..[579,21001+45])
                                                Pexp_construct "::" (typing/includecore.ml[579,21001+42]..[579,21001+45]) ghost
                                                Some
                                                  expression (typing/includecore.ml[579,21001+42]..[579,21001+45]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includecore.ml[579,21001+42]..[579,21001+44])
                                                        Pexp_ident "r1" (typing/includecore.ml[579,21001+42]..[579,21001+44])
                                                      expression (typing/includecore.ml[579,21001+44]..[579,21001+45]) ghost
                                                        Pexp_construct "[]" (typing/includecore.ml[579,21001+44]..[579,21001+45]) ghost
                                                        None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[579,21001+46]..[579,21001+50])
                                                Pexp_construct "::" (typing/includecore.ml[579,21001+47]..[579,21001+50]) ghost
                                                Some
                                                  expression (typing/includecore.ml[579,21001+47]..[579,21001+50]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includecore.ml[579,21001+47]..[579,21001+49])
                                                        Pexp_ident "r2" (typing/includecore.ml[579,21001+47]..[579,21001+49])
                                                      expression (typing/includecore.ml[579,21001+49]..[579,21001+50]) ghost
                                                        Pexp_construct "[]" (typing/includecore.ml[579,21001+49]..[579,21001+50]) ghost
                                                        None
                                                    ]
                                          ]
                                        [
                                          <case>
                                            pattern (typing/includecore.ml[580,21057+10]..[580,21057+38])
                                              Ppat_exception
                                              pattern (typing/includecore.ml[580,21057+20]..[580,21057+38])
                                                Ppat_construct "Ctype.Equality" (typing/includecore.ml[580,21057+20]..[580,21057+34])
                                                Some
                                                  []
                                                  pattern (typing/includecore.ml[580,21057+35]..[580,21057+38])
                                                    Ppat_var "err" (typing/includecore.ml[580,21057+35]..[580,21057+38])
                                            expression (typing/includecore.ml[580,21057+42]..[580,21057+57])
                                              Pexp_construct "Some" (typing/includecore.ml[580,21057+42]..[580,21057+46])
                                              Some
                                                expression (typing/includecore.ml[580,21057+47]..[580,21057+57])
                                                  Pexp_construct "Type" (typing/includecore.ml[580,21057+48]..[580,21057+52])
                                                  Some
                                                    expression (typing/includecore.ml[580,21057+53]..[580,21057+56])
                                                      Pexp_ident "err" (typing/includecore.ml[580,21057+53]..[580,21057+56])
                                          <case>
                                            pattern (typing/includecore.ml[581,21115+10]..[581,21115+12])
                                              Ppat_construct "()" (typing/includecore.ml[581,21115+10]..[581,21115+12])
                                              None
                                            expression (typing/includecore.ml[581,21115+16]..[581,21115+76])
                                              Pexp_apply
                                              expression (typing/includecore.ml[581,21115+16]..[581,21115+45])
                                                Pexp_ident "compare_constructor_arguments" (typing/includecore.ml[581,21115+16]..[581,21115+45])
                                              [
                                                <arg>
                                                Labelled "loc"
                                                  expression (typing/includecore.ml[581,21115+47]..[581,21115+50])
                                                    Pexp_ident "loc" (typing/includecore.ml[581,21115+47]..[581,21115+50])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[581,21115+51]..[581,21115+54])
                                                    Pexp_ident "env" (typing/includecore.ml[581,21115+51]..[581,21115+54])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[581,21115+55]..[581,21115+59])
                                                    Pexp_construct "::" (typing/includecore.ml[581,21115+56]..[581,21115+59]) ghost
                                                    Some
                                                      expression (typing/includecore.ml[581,21115+56]..[581,21115+59]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/includecore.ml[581,21115+56]..[581,21115+58])
                                                            Pexp_ident "r1" (typing/includecore.ml[581,21115+56]..[581,21115+58])
                                                          expression (typing/includecore.ml[581,21115+58]..[581,21115+59]) ghost
                                                            Pexp_construct "[]" (typing/includecore.ml[581,21115+58]..[581,21115+59]) ghost
                                                            None
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[581,21115+60]..[581,21115+64])
                                                    Pexp_construct "::" (typing/includecore.ml[581,21115+61]..[581,21115+64]) ghost
                                                    Some
                                                      expression (typing/includecore.ml[581,21115+61]..[581,21115+64]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/includecore.ml[581,21115+61]..[581,21115+63])
                                                            Pexp_ident "r2" (typing/includecore.ml[581,21115+61]..[581,21115+63])
                                                          expression (typing/includecore.ml[581,21115+63]..[581,21115+64]) ghost
                                                            Pexp_construct "[]" (typing/includecore.ml[581,21115+63]..[581,21115+64]) ghost
                                                            None
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[581,21115+65]..[581,21115+70])
                                                    Pexp_ident "args1" (typing/includecore.ml[581,21115+65]..[581,21115+70])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[581,21115+71]..[581,21115+76])
                                                    Pexp_ident "args2" (typing/includecore.ml[581,21115+71]..[581,21115+76])
                                              ]
                                        ]
                                    <case>
                                      pattern (typing/includecore.ml[583,21204+6]..[583,21204+18])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[583,21204+6]..[583,21204+12])
                                            Ppat_construct "Some" (typing/includecore.ml[583,21204+6]..[583,21204+10])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[583,21204+11]..[583,21204+12])
                                                Ppat_any
                                          pattern (typing/includecore.ml[583,21204+14]..[583,21204+18])
                                            Ppat_construct "None" (typing/includecore.ml[583,21204+14]..[583,21204+18])
                                            None
                                        ]
                                      expression (typing/includecore.ml[583,21204+22]..[583,21204+55])
                                        Pexp_construct "Some" (typing/includecore.ml[583,21204+22]..[583,21204+26])
                                        Some
                                          expression (typing/includecore.ml[583,21204+27]..[583,21204+55])
                                            Pexp_construct "Explicit_return_type" (typing/includecore.ml[583,21204+28]..[583,21204+48])
                                            Some
                                              expression (typing/includecore.ml[583,21204+49]..[583,21204+54])
                                                Pexp_construct "First" (typing/includecore.ml[583,21204+49]..[583,21204+54])
                                                None
                                    <case>
                                      pattern (typing/includecore.ml[584,21260+6]..[584,21260+18])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[584,21260+6]..[584,21260+10])
                                            Ppat_construct "None" (typing/includecore.ml[584,21260+6]..[584,21260+10])
                                            None
                                          pattern (typing/includecore.ml[584,21260+12]..[584,21260+18])
                                            Ppat_construct "Some" (typing/includecore.ml[584,21260+12]..[584,21260+16])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[584,21260+17]..[584,21260+18])
                                                Ppat_any
                                        ]
                                      expression (typing/includecore.ml[584,21260+22]..[584,21260+56])
                                        Pexp_construct "Some" (typing/includecore.ml[584,21260+22]..[584,21260+26])
                                        Some
                                          expression (typing/includecore.ml[584,21260+27]..[584,21260+56])
                                            Pexp_construct "Explicit_return_type" (typing/includecore.ml[584,21260+28]..[584,21260+48])
                                            Some
                                              expression (typing/includecore.ml[584,21260+49]..[584,21260+55])
                                                Pexp_construct "Second" (typing/includecore.ml[584,21260+49]..[584,21260+55])
                                                None
                                    <case>
                                      pattern (typing/includecore.ml[585,21317+6]..[585,21317+16])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[585,21317+6]..[585,21317+10])
                                            Ppat_construct "None" (typing/includecore.ml[585,21317+6]..[585,21317+10])
                                            None
                                          pattern (typing/includecore.ml[585,21317+12]..[585,21317+16])
                                            Ppat_construct "None" (typing/includecore.ml[585,21317+12]..[585,21317+16])
                                            None
                                        ]
                                      expression (typing/includecore.ml[586,21337+8]..[586,21337+74])
                                        Pexp_apply
                                        expression (typing/includecore.ml[586,21337+8]..[586,21337+37])
                                          Pexp_ident "compare_constructor_arguments" (typing/includecore.ml[586,21337+8]..[586,21337+37])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/includecore.ml[586,21337+39]..[586,21337+42])
                                              Pexp_ident "loc" (typing/includecore.ml[586,21337+39]..[586,21337+42])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[586,21337+43]..[586,21337+46])
                                              Pexp_ident "env" (typing/includecore.ml[586,21337+43]..[586,21337+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[586,21337+47]..[586,21337+54])
                                              Pexp_ident "params1" (typing/includecore.ml[586,21337+47]..[586,21337+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[586,21337+55]..[586,21337+62])
                                              Pexp_ident "params2" (typing/includecore.ml[586,21337+55]..[586,21337+62])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[586,21337+63]..[586,21337+68])
                                              Pexp_ident "args1" (typing/includecore.ml[586,21337+63]..[586,21337+68])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[586,21337+69]..[586,21337+74])
                                              Pexp_ident "args2" (typing/includecore.ml[586,21337+69]..[586,21337+74])
                                        ]
                                  ]
            ]
          structure_item (typing/includecore.ml[588,21413+2]..[608,22193+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[588,21413+6]..[588,21413+11])
                  Ppat_var "equal" (typing/includecore.ml[588,21413+6]..[588,21413+11])
                expression (typing/includecore.ml[588,21413+12]..[608,22193+24]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[588,21413+13]..[588,21413+16])
                    Ppat_var "loc" (typing/includecore.ml[588,21413+13]..[588,21413+16])
                  expression (typing/includecore.ml[588,21413+17]..[608,22193+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[588,21413+17]..[588,21413+20])
                      Ppat_var "env" (typing/includecore.ml[588,21413+17]..[588,21413+20])
                    expression (typing/includecore.ml[588,21413+21]..[608,22193+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[588,21413+21]..[588,21413+28])
                        Ppat_var "params1" (typing/includecore.ml[588,21413+21]..[588,21413+28])
                      expression (typing/includecore.ml[588,21413+29]..[608,22193+24]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[588,21413+29]..[588,21413+36])
                          Ppat_var "params2" (typing/includecore.ml[588,21413+29]..[588,21413+36])
                        expression (typing/includecore.ml[589,21450+6]..[608,22193+24]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[589,21450+6]..[589,21450+51])
                            Ppat_constraint
                            pattern (typing/includecore.ml[589,21450+7]..[589,21450+13])
                              Ppat_var "cstrs1" (typing/includecore.ml[589,21450+7]..[589,21450+13])
                            core_type (typing/includecore.ml[589,21450+16]..[589,21450+50])
                              Ptyp_constr "list" (typing/includecore.ml[589,21450+46]..[589,21450+50])
                              [
                                core_type (typing/includecore.ml[589,21450+16]..[589,21450+45])
                                  Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[589,21450+16]..[589,21450+45])
                                  []
                              ]
                          expression (typing/includecore.ml[590,21502+6]..[608,22193+24]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[590,21502+6]..[590,21502+51])
                              Ppat_constraint
                              pattern (typing/includecore.ml[590,21502+7]..[590,21502+13])
                                Ppat_var "cstrs2" (typing/includecore.ml[590,21502+7]..[590,21502+13])
                              core_type (typing/includecore.ml[590,21502+16]..[590,21502+50])
                                Ptyp_constr "list" (typing/includecore.ml[590,21502+46]..[590,21502+50])
                                [
                                  core_type (typing/includecore.ml[590,21502+16]..[590,21502+45])
                                    Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[590,21502+16]..[590,21502+45])
                                    []
                                ]
                            expression (typing/includecore.ml[591,21556+4]..[608,22193+24])
                              Pexp_apply
                              expression (typing/includecore.ml[591,21556+44]..[591,21556+46])
                                Pexp_ident "&&" (typing/includecore.ml[591,21556+44]..[591,21556+46])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[591,21556+4]..[591,21556+43])
                                    Pexp_apply
                                    expression (typing/includecore.ml[591,21556+23]..[591,21556+24])
                                      Pexp_ident "=" (typing/includecore.ml[591,21556+23]..[591,21556+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[591,21556+4]..[591,21556+22])
                                          Pexp_apply
                                          expression (typing/includecore.ml[591,21556+4]..[591,21556+15])
                                            Pexp_ident "List.length" (typing/includecore.ml[591,21556+4]..[591,21556+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[591,21556+16]..[591,21556+22])
                                                Pexp_ident "cstrs1" (typing/includecore.ml[591,21556+16]..[591,21556+22])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[591,21556+25]..[591,21556+43])
                                          Pexp_apply
                                          expression (typing/includecore.ml[591,21556+25]..[591,21556+36])
                                            Pexp_ident "List.length" (typing/includecore.ml[591,21556+25]..[591,21556+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[591,21556+37]..[591,21556+43])
                                                Pexp_ident "cstrs2" (typing/includecore.ml[591,21556+37]..[591,21556+43])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[592,21603+4]..[608,22193+24])
                                    Pexp_apply
                                    expression (typing/includecore.ml[592,21603+4]..[592,21603+17])
                                      Pexp_ident "List.for_all2" (typing/includecore.ml[592,21603+4]..[592,21603+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[592,21603+18]..[608,22193+10])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/includecore.ml[592,21603+23]..[592,21603+58])
                                            Ppat_constraint
                                            pattern (typing/includecore.ml[592,21603+24]..[592,21603+27])
                                              Ppat_var "cd1" (typing/includecore.ml[592,21603+24]..[592,21603+27])
                                            core_type (typing/includecore.ml[592,21603+28]..[592,21603+57])
                                              Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[592,21603+28]..[592,21603+57])
                                              []
                                          expression (typing/includecore.ml[593,21662+20]..[608,22193+9]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/includecore.ml[593,21662+20]..[593,21662+55])
                                              Ppat_constraint
                                              pattern (typing/includecore.ml[593,21662+21]..[593,21662+24])
                                                Ppat_var "cd2" (typing/includecore.ml[593,21662+21]..[593,21662+24])
                                              core_type (typing/includecore.ml[593,21662+25]..[593,21662+54])
                                                Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[593,21662+25]..[593,21662+54])
                                                []
                                            expression (typing/includecore.ml[594,21721+8]..[608,22193+9])
                                              Pexp_apply
                                              expression (typing/includecore.ml[595,21773+8]..[595,21773+10])
                                                Pexp_ident "&&" (typing/includecore.ml[595,21773+8]..[595,21773+10])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[594,21721+8]..[594,21721+51])
                                                    Pexp_apply
                                                    expression (typing/includecore.ml[594,21721+29]..[594,21721+30])
                                                      Pexp_ident "=" (typing/includecore.ml[594,21721+29]..[594,21721+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[594,21721+8]..[594,21721+28])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[594,21721+8]..[594,21721+18])
                                                            Pexp_ident "Ident.name" (typing/includecore.ml[594,21721+8]..[594,21721+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[594,21721+19]..[594,21721+28])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[594,21721+19]..[594,21721+22])
                                                                  Pexp_ident "cd1" (typing/includecore.ml[594,21721+19]..[594,21721+22])
                                                                "cd_id" (typing/includecore.ml[594,21721+23]..[594,21721+28])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[594,21721+31]..[594,21721+51])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[594,21721+31]..[594,21721+41])
                                                            Pexp_ident "Ident.name" (typing/includecore.ml[594,21721+31]..[594,21721+41])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[594,21721+42]..[594,21721+51])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[594,21721+42]..[594,21721+45])
                                                                  Pexp_ident "cd2" (typing/includecore.ml[594,21721+42]..[594,21721+45])
                                                                "cd_id" (typing/includecore.ml[594,21721+46]..[594,21721+51])
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[596,21784+8]..[608,22193+9])
                                                    Pexp_sequence
                                                    expression (typing/includecore.ml[597,21798+10]..[602,21970+34])
                                                      Pexp_apply
                                                      expression (typing/includecore.ml[597,21798+10]..[597,21798+51])
                                                        Pexp_ident "Builtin_attributes.check_alerts_inclusion" (typing/includecore.ml[597,21798+10]..[597,21798+51])
                                                      [
                                                        <arg>
                                                        Labelled "def"
                                                          expression (typing/includecore.ml[598,21850+17]..[598,21850+27])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[598,21850+17]..[598,21850+20])
                                                              Pexp_ident "cd1" (typing/includecore.ml[598,21850+17]..[598,21850+20])
                                                            "cd_loc" (typing/includecore.ml[598,21850+21]..[598,21850+27])
                                                        <arg>
                                                        Labelled "use"
                                                          expression (typing/includecore.ml[599,21878+17]..[599,21878+27])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[599,21878+17]..[599,21878+20])
                                                              Pexp_ident "cd2" (typing/includecore.ml[599,21878+17]..[599,21878+20])
                                                            "cd_loc" (typing/includecore.ml[599,21878+21]..[599,21878+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[600,21906+12]..[600,21906+15])
                                                            Pexp_ident "loc" (typing/includecore.ml[600,21906+12]..[600,21906+15])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[601,21922+12]..[601,21922+29])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[601,21922+12]..[601,21922+15])
                                                              Pexp_ident "cd1" (typing/includecore.ml[601,21922+12]..[601,21922+15])
                                                            "cd_attributes" (typing/includecore.ml[601,21922+16]..[601,21922+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[601,21922+30]..[601,21922+47])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[601,21922+30]..[601,21922+33])
                                                              Pexp_ident "cd2" (typing/includecore.ml[601,21922+30]..[601,21922+33])
                                                            "cd_attributes" (typing/includecore.ml[601,21922+34]..[601,21922+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[602,21970+12]..[602,21970+34])
                                                            Pexp_apply
                                                            expression (typing/includecore.ml[602,21970+13]..[602,21970+23])
                                                              Pexp_ident "Ident.name" (typing/includecore.ml[602,21970+13]..[602,21970+23])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[602,21970+24]..[602,21970+33])
                                                                  Pexp_field
                                                                  expression (typing/includecore.ml[602,21970+24]..[602,21970+27])
                                                                    Pexp_ident "cd1" (typing/includecore.ml[602,21970+24]..[602,21970+27])
                                                                  "cd_id" (typing/includecore.ml[602,21970+28]..[602,21970+33])
                                                            ]
                                                      ]
                                                    expression (typing/includecore.ml[604,22017+8]..[607,22170+22])
                                                      Pexp_match
                                                      expression (typing/includecore.ml[604,22017+14]..[605,22077+61])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[604,22017+14]..[604,22017+34])
                                                          Pexp_ident "compare_constructors" (typing/includecore.ml[604,22017+14]..[604,22017+34])
                                                        [
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (typing/includecore.ml[604,22017+36]..[604,22017+39])
                                                              Pexp_ident "loc" (typing/includecore.ml[604,22017+36]..[604,22017+39])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[604,22017+40]..[604,22017+43])
                                                              Pexp_ident "env" (typing/includecore.ml[604,22017+40]..[604,22017+43])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[604,22017+44]..[604,22017+51])
                                                              Pexp_ident "params1" (typing/includecore.ml[604,22017+44]..[604,22017+51])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[604,22017+52]..[604,22017+59])
                                                              Pexp_ident "params2" (typing/includecore.ml[604,22017+52]..[604,22017+59])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[605,22077+16]..[605,22077+26])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[605,22077+16]..[605,22077+19])
                                                                Pexp_ident "cd1" (typing/includecore.ml[605,22077+16]..[605,22077+19])
                                                              "cd_res" (typing/includecore.ml[605,22077+20]..[605,22077+26])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[605,22077+27]..[605,22077+37])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[605,22077+27]..[605,22077+30])
                                                                Pexp_ident "cd2" (typing/includecore.ml[605,22077+27]..[605,22077+30])
                                                              "cd_res" (typing/includecore.ml[605,22077+31]..[605,22077+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[605,22077+38]..[605,22077+49])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[605,22077+38]..[605,22077+41])
                                                                Pexp_ident "cd1" (typing/includecore.ml[605,22077+38]..[605,22077+41])
                                                              "cd_args" (typing/includecore.ml[605,22077+42]..[605,22077+49])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[605,22077+50]..[605,22077+61])
                                                              Pexp_field
                                                              expression (typing/includecore.ml[605,22077+50]..[605,22077+53])
                                                                Pexp_ident "cd2" (typing/includecore.ml[605,22077+50]..[605,22077+53])
                                                              "cd_args" (typing/includecore.ml[605,22077+54]..[605,22077+61])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (typing/includecore.ml[606,22144+10]..[606,22144+16])
                                                            Ppat_construct "Some" (typing/includecore.ml[606,22144+10]..[606,22144+14])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[606,22144+15]..[606,22144+16])
                                                                Ppat_any
                                                          expression (typing/includecore.ml[606,22144+20]..[606,22144+25])
                                                            Pexp_construct "false" (typing/includecore.ml[606,22144+20]..[606,22144+25])
                                                            None
                                                        <case>
                                                          pattern (typing/includecore.ml[607,22170+10]..[607,22170+14])
                                                            Ppat_construct "None" (typing/includecore.ml[607,22170+10]..[607,22170+14])
                                                            None
                                                          expression (typing/includecore.ml[607,22170+18]..[607,22170+22])
                                                            Pexp_construct "true" (typing/includecore.ml[607,22170+18]..[607,22170+22])
                                                            None
                                                      ]
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[608,22193+11]..[608,22193+17])
                                          Pexp_ident "cstrs1" (typing/includecore.ml[608,22193+11]..[608,22193+17])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[608,22193+18]..[608,22193+24])
                                          Pexp_ident "cstrs2" (typing/includecore.ml[608,22193+18]..[608,22193+24])
                                    ]
                              ]
            ]
          structure_item (typing/includecore.ml[610,22219+2]..[615,22396+5])
            Pstr_module
            "Defs" (typing/includecore.ml[610,22219+9]..[610,22219+13])
              module_expr (typing/includecore.ml[610,22219+16]..[615,22396+5])
                Pmod_structure
                [
                  structure_item (typing/includecore.ml[611,22242+4]..[611,22242+45])
                    Pstr_type Rec
                    [
                      type_declaration "left" (typing/includecore.ml[611,22242+9]..[611,22242+13]) (typing/includecore.ml[611,22242+4]..[611,22242+45])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[611,22242+16]..[611,22242+45])
                              Ptyp_constr "Types.constructor_declaration" (typing/includecore.ml[611,22242+16]..[611,22242+45])
                              []
                    ]
                  structure_item (typing/includecore.ml[612,22288+4]..[612,22288+21])
                    Pstr_type Rec
                    [
                      type_declaration "right" (typing/includecore.ml[612,22288+9]..[612,22288+14]) (typing/includecore.ml[612,22288+4]..[612,22288+21])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[612,22288+17]..[612,22288+21])
                              Ptyp_constr "left" (typing/includecore.ml[612,22288+17]..[612,22288+21])
                              []
                    ]
                  structure_item (typing/includecore.ml[613,22310+4]..[613,22310+36])
                    Pstr_type Rec
                    [
                      type_declaration "diff" (typing/includecore.ml[613,22310+9]..[613,22310+13]) (typing/includecore.ml[613,22310+4]..[613,22310+36])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[613,22310+16]..[613,22310+36])
                              Ptyp_constr "constructor_mismatch" (typing/includecore.ml[613,22310+16]..[613,22310+36])
                              []
                    ]
                  structure_item (typing/includecore.ml[614,22347+4]..[614,22347+48])
                    Pstr_type Rec
                    [
                      type_declaration "state" (typing/includecore.ml[614,22347+9]..[614,22347+14]) (typing/includecore.ml[614,22347+4]..[614,22347+48])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (typing/includecore.ml[614,22347+17]..[614,22347+48])
                              Ptyp_tuple
                              [
                                core_type (typing/includecore.ml[614,22347+17]..[614,22347+31])
                                  Ptyp_constr "list" (typing/includecore.ml[614,22347+27]..[614,22347+31])
                                  [
                                    core_type (typing/includecore.ml[614,22347+17]..[614,22347+26])
                                      Ptyp_constr "type_expr" (typing/includecore.ml[614,22347+17]..[614,22347+26])
                                      []
                                  ]
                                core_type (typing/includecore.ml[614,22347+34]..[614,22347+48])
                                  Ptyp_constr "list" (typing/includecore.ml[614,22347+44]..[614,22347+48])
                                  [
                                    core_type (typing/includecore.ml[614,22347+34]..[614,22347+43])
                                      Ptyp_constr "type_expr" (typing/includecore.ml[614,22347+34]..[614,22347+43])
                                      []
                                  ]
                              ]
                    ]
                ]
          structure_item (typing/includecore.ml[616,22402+2]..[616,22402+43])
            Pstr_module
            "D" (typing/includecore.ml[616,22402+9]..[616,22402+10])
              module_expr (typing/includecore.ml[616,22402+13]..[616,22402+43])
                Pmod_apply
                module_expr (typing/includecore.ml[616,22402+13]..[616,22402+37])
                  Pmod_ident "Diffing_with_keys.Define" (typing/includecore.ml[616,22402+13]..[616,22402+37])
                module_expr (typing/includecore.ml[616,22402+38]..[616,22402+42])
                  Pmod_ident "Defs" (typing/includecore.ml[616,22402+38]..[616,22402+42])
          structure_item (typing/includecore.ml[618,22447+2]..[618,22447+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[618,22447+6]..[618,22447+12])
                  Ppat_var "update" (typing/includecore.ml[618,22447+6]..[618,22447+12])
                expression (typing/includecore.ml[618,22447+13]..[618,22447+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[618,22447+13]..[618,22447+14])
                    Ppat_any
                  expression (typing/includecore.ml[618,22447+15]..[618,22447+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[618,22447+15]..[618,22447+17])
                      Ppat_var "st" (typing/includecore.ml[618,22447+15]..[618,22447+17])
                    expression (typing/includecore.ml[618,22447+20]..[618,22447+22])
                      Pexp_ident "st" (typing/includecore.ml[618,22447+20]..[618,22447+22])
            ]
          structure_item (typing/includecore.ml[620,22471+2]..[626,22658+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[620,22471+6]..[620,22471+27]) ghost
                  Ppat_constraint
                  pattern (typing/includecore.ml[620,22471+6]..[620,22471+12])
                    Ppat_var "weight" (typing/includecore.ml[620,22471+6]..[620,22471+12])
                  core_type (typing/includecore.ml[620,22471+14]..[620,22471+27]) ghost
                    Ptyp_poly
                    core_type (typing/includecore.ml[620,22471+14]..[620,22471+27])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/includecore.ml[620,22471+14]..[620,22471+22])
                        Ptyp_constr "D.change" (typing/includecore.ml[620,22471+14]..[620,22471+22])
                        []
                      core_type (typing/includecore.ml[620,22471+26]..[620,22471+27])
                        Ptyp_any
                expression (typing/includecore.ml[620,22471+6]..[626,22658+20])
                  Pexp_constraint
                  expression (typing/includecore.ml[620,22471+30]..[626,22658+20])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includecore.ml[621,22510+6]..[621,22510+14])
                          Ppat_construct "Insert" (typing/includecore.ml[621,22510+6]..[621,22510+12])
                          Some
                            []
                            pattern (typing/includecore.ml[621,22510+13]..[621,22510+14])
                              Ppat_any
                        expression (typing/includecore.ml[621,22510+18]..[621,22510+20])
                          Pexp_constant PConst_int (10,None)
                      <case>
                        pattern (typing/includecore.ml[622,22531+6]..[622,22531+14])
                          Ppat_construct "Delete" (typing/includecore.ml[622,22531+6]..[622,22531+12])
                          Some
                            []
                            pattern (typing/includecore.ml[622,22531+13]..[622,22531+14])
                              Ppat_any
                        expression (typing/includecore.ml[622,22531+18]..[622,22531+20])
                          Pexp_constant PConst_int (10,None)
                      <case>
                        pattern (typing/includecore.ml[623,22552+6]..[623,22552+12])
                          Ppat_construct "Keep" (typing/includecore.ml[623,22552+6]..[623,22552+10])
                          Some
                            []
                            pattern (typing/includecore.ml[623,22552+11]..[623,22552+12])
                              Ppat_any
                        expression (typing/includecore.ml[623,22552+16]..[623,22552+17])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (typing/includecore.ml[624,22570+6]..[624,22570+43])
                          Ppat_construct "Change" (typing/includecore.ml[624,22570+6]..[624,22570+12])
                          Some
                            []
                            pattern (typing/includecore.ml[624,22570+13]..[624,22570+43])
                              Ppat_tuple
                              [
                                pattern (typing/includecore.ml[624,22570+14]..[624,22570+15])
                                  Ppat_any
                                pattern (typing/includecore.ml[624,22570+16]..[624,22570+17])
                                  Ppat_any
                                pattern (typing/includecore.ml[624,22570+18]..[624,22570+42])
                                  Ppat_construct "Diffing_with_keys.Name" (typing/includecore.ml[624,22570+18]..[624,22570+40])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[624,22570+41]..[624,22570+42])
                                      Ppat_var "t" (typing/includecore.ml[624,22570+41]..[624,22570+42])
                              ]
                        expression (typing/includecore.ml[625,22617+8]..[625,22617+40])
                          Pexp_ifthenelse
                          expression (typing/includecore.ml[625,22617+11]..[625,22617+24])
                            Pexp_field
                            expression (typing/includecore.ml[625,22617+11]..[625,22617+12])
                              Pexp_ident "t" (typing/includecore.ml[625,22617+11]..[625,22617+12])
                            "types_match" (typing/includecore.ml[625,22617+13]..[625,22617+24])
                          expression (typing/includecore.ml[625,22617+30]..[625,22617+32])
                            Pexp_constant PConst_int (10,None)
                          Some
                            expression (typing/includecore.ml[625,22617+38]..[625,22617+40])
                              Pexp_constant PConst_int (15,None)
                      <case>
                        pattern (typing/includecore.ml[626,22658+6]..[626,22658+14])
                          Ppat_construct "Change" (typing/includecore.ml[626,22658+6]..[626,22658+12])
                          Some
                            []
                            pattern (typing/includecore.ml[626,22658+13]..[626,22658+14])
                              Ppat_any
                        expression (typing/includecore.ml[626,22658+18]..[626,22658+20])
                          Pexp_constant PConst_int (10,None)
                    ]
                  core_type (typing/includecore.ml[620,22471+14]..[620,22471+27])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/includecore.ml[620,22471+14]..[620,22471+22])
                      Ptyp_constr "D.change" (typing/includecore.ml[620,22471+14]..[620,22471+22])
                      []
                    core_type (typing/includecore.ml[620,22471+26]..[620,22471+27])
                      Ptyp_any
            ]
          structure_item (typing/includecore.ml[629,22681+2]..[647,23413+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[629,22681+6]..[629,22681+10])
                  Ppat_var "test" (typing/includecore.ml[629,22681+6]..[629,22681+10])
                expression (typing/includecore.ml[629,22681+11]..[647,23413+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[629,22681+11]..[629,22681+14])
                    Ppat_var "loc" (typing/includecore.ml[629,22681+11]..[629,22681+14])
                  expression (typing/includecore.ml[629,22681+15]..[647,23413+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[629,22681+15]..[629,22681+18])
                      Ppat_var "env" (typing/includecore.ml[629,22681+15]..[629,22681+18])
                    expression (typing/includecore.ml[629,22681+19]..[647,23413+21]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[629,22681+19]..[629,22681+36])
                        Ppat_tuple
                        [
                          pattern (typing/includecore.ml[629,22681+20]..[629,22681+27])
                            Ppat_var "params1" (typing/includecore.ml[629,22681+20]..[629,22681+27])
                          pattern (typing/includecore.ml[629,22681+28]..[629,22681+35])
                            Ppat_var "params2" (typing/includecore.ml[629,22681+28]..[629,22681+35])
                        ]
                      expression (typing/includecore.ml[630,22718+6]..[647,23413+21]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[630,22718+6]..[630,22718+31])
                          Ppat_constraint
                          pattern (typing/includecore.ml[630,22718+7]..[630,22718+22])
                            Ppat_record Closed
                            [
                              "pos" (typing/includecore.ml[630,22718+8]..[630,22718+11]) ghost
                                pattern (typing/includecore.ml[630,22718+8]..[630,22718+11])
                                  Ppat_var "pos" (typing/includecore.ml[630,22718+8]..[630,22718+11])
                              "data" (typing/includecore.ml[630,22718+13]..[630,22718+17])
                                pattern (typing/includecore.ml[630,22718+18]..[630,22718+21])
                                  Ppat_var "cd1" (typing/includecore.ml[630,22718+18]..[630,22718+21])
                            ]
                          core_type (typing/includecore.ml[630,22718+24]..[630,22718+30])
                            Ptyp_constr "D.left" (typing/includecore.ml[630,22718+24]..[630,22718+30])
                            []
                        expression (typing/includecore.ml[631,22750+6]..[647,23413+21]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[631,22750+6]..[631,22750+30])
                            Ppat_constraint
                            pattern (typing/includecore.ml[631,22750+7]..[631,22750+20])
                              Ppat_record Open
                              [
                                "data" (typing/includecore.ml[631,22750+8]..[631,22750+12])
                                  pattern (typing/includecore.ml[631,22750+13]..[631,22750+16])
                                    Ppat_var "cd2" (typing/includecore.ml[631,22750+13]..[631,22750+16])
                              ]
                            core_type (typing/includecore.ml[631,22750+22]..[631,22750+29])
                              Ptyp_constr "D.right" (typing/includecore.ml[631,22750+22]..[631,22750+29])
                              []
                          expression (typing/includecore.ml[632,22783+4]..[647,23413+21])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includecore.ml[632,22783+8]..[632,22783+20])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[632,22783+8]..[632,22783+13])
                                      Ppat_var "name1" (typing/includecore.ml[632,22783+8]..[632,22783+13])
                                    pattern (typing/includecore.ml[632,22783+15]..[632,22783+20])
                                      Ppat_var "name2" (typing/includecore.ml[632,22783+15]..[632,22783+20])
                                  ]
                                expression (typing/includecore.ml[632,22783+23]..[632,22783+65])
                                  Pexp_tuple
                                  [
                                    expression (typing/includecore.ml[632,22783+23]..[632,22783+43])
                                      Pexp_apply
                                      expression (typing/includecore.ml[632,22783+23]..[632,22783+33])
                                        Pexp_ident "Ident.name" (typing/includecore.ml[632,22783+23]..[632,22783+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[632,22783+34]..[632,22783+43])
                                            Pexp_field
                                            expression (typing/includecore.ml[632,22783+34]..[632,22783+37])
                                              Pexp_ident "cd1" (typing/includecore.ml[632,22783+34]..[632,22783+37])
                                            "cd_id" (typing/includecore.ml[632,22783+38]..[632,22783+43])
                                      ]
                                    expression (typing/includecore.ml[632,22783+45]..[632,22783+65])
                                      Pexp_apply
                                      expression (typing/includecore.ml[632,22783+45]..[632,22783+55])
                                        Pexp_ident "Ident.name" (typing/includecore.ml[632,22783+45]..[632,22783+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[632,22783+56]..[632,22783+65])
                                            Pexp_field
                                            expression (typing/includecore.ml[632,22783+56]..[632,22783+59])
                                              Pexp_ident "cd2" (typing/includecore.ml[632,22783+56]..[632,22783+59])
                                            "cd_id" (typing/includecore.ml[632,22783+60]..[632,22783+65])
                                      ]
                                  ]
                            ]
                            expression (typing/includecore.ml[633,22852+4]..[647,23413+21])
                              Pexp_ifthenelse
                              expression (typing/includecore.ml[633,22852+8]..[633,22852+22])
                                Pexp_apply
                                expression (typing/includecore.ml[633,22852+14]..[633,22852+16])
                                  Pexp_ident "<>" (typing/includecore.ml[633,22852+14]..[633,22852+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[633,22852+8]..[633,22852+13])
                                      Pexp_ident "name1" (typing/includecore.ml[633,22852+8]..[633,22852+13])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[633,22852+17]..[633,22852+22])
                                      Pexp_ident "name2" (typing/includecore.ml[633,22852+17]..[633,22852+22])
                                ]
                              expression (typing/includecore.ml[634,22880+6]..[641,23101+78])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[634,22880+10]..[634,22880+21])
                                      Ppat_var "types_match" (typing/includecore.ml[634,22880+10]..[634,22880+21])
                                    expression (typing/includecore.ml[635,22904+8]..[638,23057+22])
                                      Pexp_match
                                      expression (typing/includecore.ml[635,22904+14]..[636,22964+61])
                                        Pexp_apply
                                        expression (typing/includecore.ml[635,22904+14]..[635,22904+34])
                                          Pexp_ident "compare_constructors" (typing/includecore.ml[635,22904+14]..[635,22904+34])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/includecore.ml[635,22904+36]..[635,22904+39])
                                              Pexp_ident "loc" (typing/includecore.ml[635,22904+36]..[635,22904+39])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[635,22904+40]..[635,22904+43])
                                              Pexp_ident "env" (typing/includecore.ml[635,22904+40]..[635,22904+43])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[635,22904+44]..[635,22904+51])
                                              Pexp_ident "params1" (typing/includecore.ml[635,22904+44]..[635,22904+51])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[635,22904+52]..[635,22904+59])
                                              Pexp_ident "params2" (typing/includecore.ml[635,22904+52]..[635,22904+59])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[636,22964+16]..[636,22964+26])
                                              Pexp_field
                                              expression (typing/includecore.ml[636,22964+16]..[636,22964+19])
                                                Pexp_ident "cd1" (typing/includecore.ml[636,22964+16]..[636,22964+19])
                                              "cd_res" (typing/includecore.ml[636,22964+20]..[636,22964+26])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[636,22964+27]..[636,22964+37])
                                              Pexp_field
                                              expression (typing/includecore.ml[636,22964+27]..[636,22964+30])
                                                Pexp_ident "cd2" (typing/includecore.ml[636,22964+27]..[636,22964+30])
                                              "cd_res" (typing/includecore.ml[636,22964+31]..[636,22964+37])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[636,22964+38]..[636,22964+49])
                                              Pexp_field
                                              expression (typing/includecore.ml[636,22964+38]..[636,22964+41])
                                                Pexp_ident "cd1" (typing/includecore.ml[636,22964+38]..[636,22964+41])
                                              "cd_args" (typing/includecore.ml[636,22964+42]..[636,22964+49])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[636,22964+50]..[636,22964+61])
                                              Pexp_field
                                              expression (typing/includecore.ml[636,22964+50]..[636,22964+53])
                                                Pexp_ident "cd2" (typing/includecore.ml[636,22964+50]..[636,22964+53])
                                              "cd_args" (typing/includecore.ml[636,22964+54]..[636,22964+61])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[637,23031+10]..[637,23031+16])
                                            Ppat_construct "Some" (typing/includecore.ml[637,23031+10]..[637,23031+14])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[637,23031+15]..[637,23031+16])
                                                Ppat_any
                                          expression (typing/includecore.ml[637,23031+20]..[637,23031+25])
                                            Pexp_construct "false" (typing/includecore.ml[637,23031+20]..[637,23031+25])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[638,23057+10]..[638,23057+14])
                                            Ppat_construct "None" (typing/includecore.ml[638,23057+10]..[638,23057+14])
                                            None
                                          expression (typing/includecore.ml[638,23057+18]..[638,23057+22])
                                            Pexp_construct "true" (typing/includecore.ml[638,23057+18]..[638,23057+22])
                                            None
                                      ]
                                ]
                                expression (typing/includecore.ml[640,23089+6]..[641,23101+78])
                                  Pexp_construct "Error" (typing/includecore.ml[640,23089+6]..[640,23089+11])
                                  Some
                                    expression (typing/includecore.ml[641,23101+8]..[641,23101+78])
                                      Pexp_construct "Diffing_with_keys.Name" (typing/includecore.ml[641,23101+9]..[641,23101+31])
                                      Some
                                        expression (typing/includecore.ml[641,23101+32]..[641,23101+77])
                                          Pexp_record
                                          [
                                            "types_match" (typing/includecore.ml[641,23101+33]..[641,23101+44]) ghost
                                              expression (typing/includecore.ml[641,23101+33]..[641,23101+44])
                                                Pexp_ident "types_match" (typing/includecore.ml[641,23101+33]..[641,23101+44])
                                            "pos" (typing/includecore.ml[641,23101+46]..[641,23101+49]) ghost
                                              expression (typing/includecore.ml[641,23101+46]..[641,23101+49])
                                                Pexp_ident "pos" (typing/includecore.ml[641,23101+46]..[641,23101+49])
                                            "got" (typing/includecore.ml[641,23101+51]..[641,23101+54])
                                              expression (typing/includecore.ml[641,23101+55]..[641,23101+60])
                                                Pexp_ident "name1" (typing/includecore.ml[641,23101+55]..[641,23101+60])
                                            "expected" (typing/includecore.ml[641,23101+62]..[641,23101+70])
                                              expression (typing/includecore.ml[641,23101+71]..[641,23101+76])
                                                Pexp_ident "name2" (typing/includecore.ml[641,23101+71]..[641,23101+76])
                                          ]
                                          None
                              Some
                                expression (typing/includecore.ml[643,23189+6]..[647,23413+21])
                                  Pexp_match
                                  expression (typing/includecore.ml[643,23189+12]..[644,23247+59])
                                    Pexp_apply
                                    expression (typing/includecore.ml[643,23189+12]..[643,23189+32])
                                      Pexp_ident "compare_constructors" (typing/includecore.ml[643,23189+12]..[643,23189+32])
                                    [
                                      <arg>
                                      Labelled "loc"
                                        expression (typing/includecore.ml[643,23189+34]..[643,23189+37])
                                          Pexp_ident "loc" (typing/includecore.ml[643,23189+34]..[643,23189+37])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[643,23189+38]..[643,23189+41])
                                          Pexp_ident "env" (typing/includecore.ml[643,23189+38]..[643,23189+41])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[643,23189+42]..[643,23189+49])
                                          Pexp_ident "params1" (typing/includecore.ml[643,23189+42]..[643,23189+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[643,23189+50]..[643,23189+57])
                                          Pexp_ident "params2" (typing/includecore.ml[643,23189+50]..[643,23189+57])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[644,23247+14]..[644,23247+24])
                                          Pexp_field
                                          expression (typing/includecore.ml[644,23247+14]..[644,23247+17])
                                            Pexp_ident "cd1" (typing/includecore.ml[644,23247+14]..[644,23247+17])
                                          "cd_res" (typing/includecore.ml[644,23247+18]..[644,23247+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[644,23247+25]..[644,23247+35])
                                          Pexp_field
                                          expression (typing/includecore.ml[644,23247+25]..[644,23247+28])
                                            Pexp_ident "cd2" (typing/includecore.ml[644,23247+25]..[644,23247+28])
                                          "cd_res" (typing/includecore.ml[644,23247+29]..[644,23247+35])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[644,23247+36]..[644,23247+47])
                                          Pexp_field
                                          expression (typing/includecore.ml[644,23247+36]..[644,23247+39])
                                            Pexp_ident "cd1" (typing/includecore.ml[644,23247+36]..[644,23247+39])
                                          "cd_args" (typing/includecore.ml[644,23247+40]..[644,23247+47])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[644,23247+48]..[644,23247+59])
                                          Pexp_field
                                          expression (typing/includecore.ml[644,23247+48]..[644,23247+51])
                                            Pexp_ident "cd2" (typing/includecore.ml[644,23247+48]..[644,23247+51])
                                          "cd_args" (typing/includecore.ml[644,23247+52]..[644,23247+59])
                                    ]
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[645,23312+8]..[645,23312+19])
                                        Ppat_construct "Some" (typing/includecore.ml[645,23312+8]..[645,23312+12])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[645,23312+13]..[645,23312+19])
                                            Ppat_var "reason" (typing/includecore.ml[645,23312+13]..[645,23312+19])
                                      expression (typing/includecore.ml[646,23335+10]..[646,23335+77])
                                        Pexp_construct "Error" (typing/includecore.ml[646,23335+10]..[646,23335+15])
                                        Some
                                          expression (typing/includecore.ml[646,23335+16]..[646,23335+77])
                                            Pexp_construct "Diffing_with_keys.Type" (typing/includecore.ml[646,23335+17]..[646,23335+39])
                                            Some
                                              expression (typing/includecore.ml[646,23335+40]..[646,23335+76])
                                                Pexp_record
                                                [
                                                  "pos" (typing/includecore.ml[646,23335+41]..[646,23335+44]) ghost
                                                    expression (typing/includecore.ml[646,23335+41]..[646,23335+44])
                                                      Pexp_ident "pos" (typing/includecore.ml[646,23335+41]..[646,23335+44])
                                                  "got" (typing/includecore.ml[646,23335+46]..[646,23335+49])
                                                    expression (typing/includecore.ml[646,23335+50]..[646,23335+53])
                                                      Pexp_ident "cd1" (typing/includecore.ml[646,23335+50]..[646,23335+53])
                                                  "expected" (typing/includecore.ml[646,23335+55]..[646,23335+63])
                                                    expression (typing/includecore.ml[646,23335+64]..[646,23335+67])
                                                      Pexp_ident "cd2" (typing/includecore.ml[646,23335+64]..[646,23335+67])
                                                  "reason" (typing/includecore.ml[646,23335+69]..[646,23335+75]) ghost
                                                    expression (typing/includecore.ml[646,23335+69]..[646,23335+75])
                                                      Pexp_ident "reason" (typing/includecore.ml[646,23335+69]..[646,23335+75])
                                                ]
                                                None
                                    <case>
                                      pattern (typing/includecore.ml[647,23413+8]..[647,23413+12])
                                        Ppat_construct "None" (typing/includecore.ml[647,23413+8]..[647,23413+12])
                                        None
                                      expression (typing/includecore.ml[647,23413+16]..[647,23413+21])
                                        Pexp_construct "Ok" (typing/includecore.ml[647,23413+16]..[647,23413+18])
                                        Some
                                          expression (typing/includecore.ml[647,23413+19]..[647,23413+21])
                                            Pexp_construct "()" (typing/includecore.ml[647,23413+19]..[647,23413+21])
                                            None
                                  ]
            ]
          structure_item (typing/includecore.ml[649,23436+2]..[659,23744+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[649,23436+6]..[649,23436+13])
                  Ppat_var "diffing" (typing/includecore.ml[649,23436+6]..[649,23436+13])
                expression (typing/includecore.ml[649,23436+14]..[659,23744+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[649,23436+14]..[649,23436+17])
                    Ppat_var "loc" (typing/includecore.ml[649,23436+14]..[649,23436+17])
                  expression (typing/includecore.ml[649,23436+18]..[659,23744+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[649,23436+18]..[649,23436+21])
                      Ppat_var "env" (typing/includecore.ml[649,23436+18]..[649,23436+21])
                    expression (typing/includecore.ml[649,23436+22]..[659,23744+50]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[649,23436+22]..[649,23436+29])
                        Ppat_var "params1" (typing/includecore.ml[649,23436+22]..[649,23436+29])
                      expression (typing/includecore.ml[649,23436+30]..[659,23744+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[649,23436+30]..[649,23436+37])
                          Ppat_var "params2" (typing/includecore.ml[649,23436+30]..[649,23436+37])
                        expression (typing/includecore.ml[649,23436+38]..[659,23744+50]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[649,23436+38]..[649,23436+45])
                            Ppat_var "cstrs_1" (typing/includecore.ml[649,23436+38]..[649,23436+45])
                          expression (typing/includecore.ml[649,23436+46]..[659,23744+50]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[649,23436+46]..[649,23436+53])
                              Ppat_var "cstrs_2" (typing/includecore.ml[649,23436+46]..[649,23436+53])
                            expression (typing/includecore.ml[650,23492+4]..[659,23744+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includecore.ml[650,23492+8]..[650,23492+11])
                                    Ppat_var "key" (typing/includecore.ml[650,23492+8]..[650,23492+11])
                                  expression (typing/includecore.ml[650,23492+12]..[650,23492+46]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/includecore.ml[650,23492+12]..[650,23492+25])
                                      Ppat_constraint
                                      pattern (typing/includecore.ml[650,23492+13]..[650,23492+14])
                                        Ppat_var "x" (typing/includecore.ml[650,23492+13]..[650,23492+14])
                                      core_type (typing/includecore.ml[650,23492+15]..[650,23492+24])
                                        Ptyp_constr "Defs.left" (typing/includecore.ml[650,23492+15]..[650,23492+24])
                                        []
                                    expression (typing/includecore.ml[650,23492+28]..[650,23492+46])
                                      Pexp_apply
                                      expression (typing/includecore.ml[650,23492+28]..[650,23492+38])
                                        Pexp_ident "Ident.name" (typing/includecore.ml[650,23492+28]..[650,23492+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[650,23492+39]..[650,23492+46])
                                            Pexp_field
                                            expression (typing/includecore.ml[650,23492+39]..[650,23492+40])
                                              Pexp_ident "x" (typing/includecore.ml[650,23492+39]..[650,23492+40])
                                            "cd_id" (typing/includecore.ml[650,23492+41]..[650,23492+46])
                                      ]
                              ]
                              expression (typing/includecore.ml[651,23542+4]..[659,23744+50])
                                Pexp_letmodule "Compute" (typing/includecore.ml[651,23542+15]..[651,23542+22])
                                module_expr (typing/includecore.ml[651,23542+25]..[657,23726+10])
                                  Pmod_apply
                                  module_expr (typing/includecore.ml[651,23542+25]..[651,23542+33])
                                    Pmod_ident "D.Simple" (typing/includecore.ml[651,23542+25]..[651,23542+33])
                                  module_expr (typing/includecore.ml[651,23542+34]..[657,23726+9])
                                    Pmod_structure
                                    [
                                      structure_item (typing/includecore.ml[652,23583+8]..[652,23583+26])
                                        Pstr_value Nonrec
                                        [
                                          <def>
                                            pattern (typing/includecore.ml[652,23583+12]..[652,23583+20])
                                              Ppat_var "key_left" (typing/includecore.ml[652,23583+12]..[652,23583+20])
                                            expression (typing/includecore.ml[652,23583+23]..[652,23583+26])
                                              Pexp_ident "key" (typing/includecore.ml[652,23583+23]..[652,23583+26])
                                        ]
                                      structure_item (typing/includecore.ml[653,23610+8]..[653,23610+27])
                                        Pstr_value Nonrec
                                        [
                                          <def>
                                            pattern (typing/includecore.ml[653,23610+12]..[653,23610+21])
                                              Ppat_var "key_right" (typing/includecore.ml[653,23610+12]..[653,23610+21])
                                            expression (typing/includecore.ml[653,23610+24]..[653,23610+27])
                                              Pexp_ident "key" (typing/includecore.ml[653,23610+24]..[653,23610+27])
                                        ]
                                      structure_item (typing/includecore.ml[654,23638+8]..[654,23638+31])
                                        Pstr_value Nonrec
                                        [
                                          <def>
                                            pattern (typing/includecore.ml[654,23638+12]..[654,23638+16])
                                              Ppat_var "test" (typing/includecore.ml[654,23638+12]..[654,23638+16])
                                            expression (typing/includecore.ml[654,23638+19]..[654,23638+31])
                                              Pexp_apply
                                              expression (typing/includecore.ml[654,23638+19]..[654,23638+23])
                                                Pexp_ident "test" (typing/includecore.ml[654,23638+19]..[654,23638+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[654,23638+24]..[654,23638+27])
                                                    Pexp_ident "loc" (typing/includecore.ml[654,23638+24]..[654,23638+27])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[654,23638+28]..[654,23638+31])
                                                    Pexp_ident "env" (typing/includecore.ml[654,23638+28]..[654,23638+31])
                                              ]
                                        ]
                                      structure_item (typing/includecore.ml[655,23670+8]..[655,23670+27])
                                        Pstr_value Nonrec
                                        [
                                          <def>
                                            pattern (typing/includecore.ml[655,23670+12]..[655,23670+18])
                                              Ppat_var "update" (typing/includecore.ml[655,23670+12]..[655,23670+18])
                                            expression (typing/includecore.ml[655,23670+21]..[655,23670+27])
                                              Pexp_ident "update" (typing/includecore.ml[655,23670+21]..[655,23670+27])
                                        ]
                                      structure_item (typing/includecore.ml[656,23698+8]..[656,23698+27])
                                        Pstr_value Nonrec
                                        [
                                          <def>
                                            pattern (typing/includecore.ml[656,23698+12]..[656,23698+18])
                                              Ppat_var "weight" (typing/includecore.ml[656,23698+12]..[656,23698+18])
                                            expression (typing/includecore.ml[656,23698+21]..[656,23698+27])
                                              Pexp_ident "weight" (typing/includecore.ml[656,23698+21]..[656,23698+27])
                                        ]
                                    ]
                                expression (typing/includecore.ml[659,23744+4]..[659,23744+50])
                                  Pexp_apply
                                  expression (typing/includecore.ml[659,23744+4]..[659,23744+16])
                                    Pexp_ident "Compute.diff" (typing/includecore.ml[659,23744+4]..[659,23744+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[659,23744+17]..[659,23744+34])
                                        Pexp_tuple
                                        [
                                          expression (typing/includecore.ml[659,23744+18]..[659,23744+25])
                                            Pexp_ident "params1" (typing/includecore.ml[659,23744+18]..[659,23744+25])
                                          expression (typing/includecore.ml[659,23744+26]..[659,23744+33])
                                            Pexp_ident "params2" (typing/includecore.ml[659,23744+26]..[659,23744+33])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[659,23744+35]..[659,23744+42])
                                        Pexp_ident "cstrs_1" (typing/includecore.ml[659,23744+35]..[659,23744+42])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[659,23744+43]..[659,23744+50])
                                        Pexp_ident "cstrs_2" (typing/includecore.ml[659,23744+43]..[659,23744+50])
                                  ]
            ]
          structure_item (typing/includecore.ml[661,23796+2]..[665,23908+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[661,23796+6]..[661,23796+13])
                  Ppat_var "compare" (typing/includecore.ml[661,23796+6]..[661,23796+13])
                expression (typing/includecore.ml[661,23796+14]..[665,23908+48]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[661,23796+15]..[661,23796+18])
                    Ppat_var "loc" (typing/includecore.ml[661,23796+15]..[661,23796+18])
                  expression (typing/includecore.ml[661,23796+19]..[665,23908+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[661,23796+19]..[661,23796+22])
                      Ppat_var "env" (typing/includecore.ml[661,23796+19]..[661,23796+22])
                    expression (typing/includecore.ml[661,23796+23]..[665,23908+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[661,23796+23]..[661,23796+30])
                        Ppat_var "params1" (typing/includecore.ml[661,23796+23]..[661,23796+30])
                      expression (typing/includecore.ml[661,23796+31]..[665,23908+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[661,23796+31]..[661,23796+38])
                          Ppat_var "params2" (typing/includecore.ml[661,23796+31]..[661,23796+38])
                        expression (typing/includecore.ml[661,23796+39]..[665,23908+48]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[661,23796+39]..[661,23796+40])
                            Ppat_var "l" (typing/includecore.ml[661,23796+39]..[661,23796+40])
                          expression (typing/includecore.ml[661,23796+41]..[665,23908+48]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[661,23796+41]..[661,23796+42])
                              Ppat_var "r" (typing/includecore.ml[661,23796+41]..[661,23796+42])
                            expression (typing/includecore.ml[662,23841+4]..[665,23908+48])
                              Pexp_ifthenelse
                              expression (typing/includecore.ml[662,23841+7]..[662,23841+41])
                                Pexp_apply
                                expression (typing/includecore.ml[662,23841+7]..[662,23841+12])
                                  Pexp_ident "equal" (typing/includecore.ml[662,23841+7]..[662,23841+12])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/includecore.ml[662,23841+14]..[662,23841+17])
                                      Pexp_ident "loc" (typing/includecore.ml[662,23841+14]..[662,23841+17])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[662,23841+18]..[662,23841+21])
                                      Pexp_ident "env" (typing/includecore.ml[662,23841+18]..[662,23841+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[662,23841+22]..[662,23841+29])
                                      Pexp_ident "params1" (typing/includecore.ml[662,23841+22]..[662,23841+29])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[662,23841+30]..[662,23841+37])
                                      Pexp_ident "params2" (typing/includecore.ml[662,23841+30]..[662,23841+37])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[662,23841+38]..[662,23841+39])
                                      Pexp_ident "l" (typing/includecore.ml[662,23841+38]..[662,23841+39])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[662,23841+40]..[662,23841+41])
                                      Pexp_ident "r" (typing/includecore.ml[662,23841+40]..[662,23841+41])
                                ]
                              expression (typing/includecore.ml[663,23888+6]..[663,23888+10])
                                Pexp_construct "None" (typing/includecore.ml[663,23888+6]..[663,23888+10])
                                None
                              Some
                                expression (typing/includecore.ml[665,23908+6]..[665,23908+48])
                                  Pexp_construct "Some" (typing/includecore.ml[665,23908+6]..[665,23908+10])
                                  Some
                                    expression (typing/includecore.ml[665,23908+11]..[665,23908+48])
                                      Pexp_apply
                                      expression (typing/includecore.ml[665,23908+12]..[665,23908+19])
                                        Pexp_ident "diffing" (typing/includecore.ml[665,23908+12]..[665,23908+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+20]..[665,23908+23])
                                            Pexp_ident "loc" (typing/includecore.ml[665,23908+20]..[665,23908+23])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+24]..[665,23908+27])
                                            Pexp_ident "env" (typing/includecore.ml[665,23908+24]..[665,23908+27])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+28]..[665,23908+35])
                                            Pexp_ident "params1" (typing/includecore.ml[665,23908+28]..[665,23908+35])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+36]..[665,23908+43])
                                            Pexp_ident "params2" (typing/includecore.ml[665,23908+36]..[665,23908+43])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+44]..[665,23908+45])
                                            Pexp_ident "l" (typing/includecore.ml[665,23908+44]..[665,23908+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[665,23908+46]..[665,23908+47])
                                            Pexp_ident "r" (typing/includecore.ml[665,23908+46]..[665,23908+47])
                                      ]
            ]
          structure_item (typing/includecore.ml[667,23958+2]..[680,24454+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includecore.ml[667,23958+6]..[667,23958+33])
                  Ppat_var "compare_with_representation" (typing/includecore.ml[667,23958+6]..[667,23958+33])
                expression (typing/includecore.ml[667,23958+34]..[680,24454+44]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (typing/includecore.ml[667,23958+35]..[667,23958+38])
                    Ppat_var "loc" (typing/includecore.ml[667,23958+35]..[667,23958+38])
                  expression (typing/includecore.ml[667,23958+39]..[680,24454+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[667,23958+39]..[667,23958+42])
                      Ppat_var "env" (typing/includecore.ml[667,23958+39]..[667,23958+42])
                    expression (typing/includecore.ml[667,23958+43]..[680,24454+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[667,23958+43]..[667,23958+50])
                        Ppat_var "params1" (typing/includecore.ml[667,23958+43]..[667,23958+50])
                      expression (typing/includecore.ml[667,23958+51]..[680,24454+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[667,23958+51]..[667,23958+58])
                          Ppat_var "params2" (typing/includecore.ml[667,23958+51]..[667,23958+58])
                        expression (typing/includecore.ml[668,24017+6]..[680,24454+44]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includecore.ml[668,24017+6]..[668,24017+12])
                            Ppat_var "cstrs1" (typing/includecore.ml[668,24017+6]..[668,24017+12])
                          expression (typing/includecore.ml[668,24017+13]..[680,24454+44]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includecore.ml[668,24017+13]..[668,24017+19])
                              Ppat_var "cstrs2" (typing/includecore.ml[668,24017+13]..[668,24017+19])
                            expression (typing/includecore.ml[668,24017+20]..[680,24454+44]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includecore.ml[668,24017+20]..[668,24017+24])
                                Ppat_var "rep1" (typing/includecore.ml[668,24017+20]..[668,24017+24])
                              expression (typing/includecore.ml[668,24017+25]..[680,24454+44]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includecore.ml[668,24017+25]..[668,24017+29])
                                  Ppat_var "rep2" (typing/includecore.ml[668,24017+25]..[668,24017+29])
                                expression (typing/includecore.ml[670,24053+4]..[680,24454+44])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[670,24053+8]..[670,24053+11])
                                        Ppat_var "err" (typing/includecore.ml[670,24053+8]..[670,24053+11])
                                      expression (typing/includecore.ml[670,24053+14]..[670,24053+60])
                                        Pexp_apply
                                        expression (typing/includecore.ml[670,24053+14]..[670,24053+21])
                                          Pexp_ident "compare" (typing/includecore.ml[670,24053+14]..[670,24053+21])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (typing/includecore.ml[670,24053+23]..[670,24053+26])
                                              Pexp_ident "loc" (typing/includecore.ml[670,24053+23]..[670,24053+26])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[670,24053+27]..[670,24053+30])
                                              Pexp_ident "env" (typing/includecore.ml[670,24053+27]..[670,24053+30])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[670,24053+31]..[670,24053+38])
                                              Pexp_ident "params1" (typing/includecore.ml[670,24053+31]..[670,24053+38])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[670,24053+39]..[670,24053+46])
                                              Pexp_ident "params2" (typing/includecore.ml[670,24053+39]..[670,24053+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[670,24053+47]..[670,24053+53])
                                              Pexp_ident "cstrs1" (typing/includecore.ml[670,24053+47]..[670,24053+53])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[670,24053+54]..[670,24053+60])
                                              Pexp_ident "cstrs2" (typing/includecore.ml[670,24053+54]..[670,24053+60])
                                        ]
                                  ]
                                  expression (typing/includecore.ml[671,24117+4]..[680,24454+44])
                                    Pexp_match
                                    expression (typing/includecore.ml[671,24117+10]..[671,24117+25])
                                      Pexp_tuple
                                      [
                                        expression (typing/includecore.ml[671,24117+10]..[671,24117+13])
                                          Pexp_ident "err" (typing/includecore.ml[671,24117+10]..[671,24117+13])
                                        expression (typing/includecore.ml[671,24117+15]..[671,24117+19])
                                          Pexp_ident "rep1" (typing/includecore.ml[671,24117+15]..[671,24117+19])
                                        expression (typing/includecore.ml[671,24117+21]..[671,24117+25])
                                          Pexp_ident "rep2" (typing/includecore.ml[671,24117+21]..[671,24117+25])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/includecore.ml[672,24148+6]..[673,24193+44])
                                          Ppat_or
                                          pattern (typing/includecore.ml[672,24148+6]..[672,24148+44])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[672,24148+6]..[672,24148+10])
                                                Ppat_construct "None" (typing/includecore.ml[672,24148+6]..[672,24148+10])
                                                None
                                              pattern (typing/includecore.ml[672,24148+12]..[672,24148+27])
                                                Ppat_construct "Variant_regular" (typing/includecore.ml[672,24148+12]..[672,24148+27])
                                                None
                                              pattern (typing/includecore.ml[672,24148+29]..[672,24148+44])
                                                Ppat_construct "Variant_regular" (typing/includecore.ml[672,24148+29]..[672,24148+44])
                                                None
                                            ]
                                          pattern (typing/includecore.ml[673,24193+6]..[673,24193+44])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[673,24193+6]..[673,24193+10])
                                                Ppat_construct "None" (typing/includecore.ml[673,24193+6]..[673,24193+10])
                                                None
                                              pattern (typing/includecore.ml[673,24193+12]..[673,24193+27])
                                                Ppat_construct "Variant_unboxed" (typing/includecore.ml[673,24193+12]..[673,24193+27])
                                                None
                                              pattern (typing/includecore.ml[673,24193+29]..[673,24193+44])
                                                Ppat_construct "Variant_unboxed" (typing/includecore.ml[673,24193+29]..[673,24193+44])
                                                None
                                            ]
                                        expression (typing/includecore.ml[674,24241+8]..[674,24241+12])
                                          Pexp_construct "None" (typing/includecore.ml[674,24241+8]..[674,24241+12])
                                          None
                                      <case>
                                        pattern (typing/includecore.ml[675,24254+6]..[675,24254+20])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includecore.ml[675,24254+6]..[675,24254+14])
                                              Ppat_construct "Some" (typing/includecore.ml[675,24254+6]..[675,24254+10])
                                              Some
                                                []
                                                pattern (typing/includecore.ml[675,24254+11]..[675,24254+14])
                                                  Ppat_var "err" (typing/includecore.ml[675,24254+11]..[675,24254+14])
                                            pattern (typing/includecore.ml[675,24254+16]..[675,24254+17])
                                              Ppat_any
                                            pattern (typing/includecore.ml[675,24254+19]..[675,24254+20])
                                              Ppat_any
                                          ]
                                        expression (typing/includecore.ml[676,24278+8]..[676,24278+35])
                                          Pexp_construct "Some" (typing/includecore.ml[676,24278+8]..[676,24278+12])
                                          Some
                                            expression (typing/includecore.ml[676,24278+13]..[676,24278+35])
                                              Pexp_construct "Variant_mismatch" (typing/includecore.ml[676,24278+14]..[676,24278+30])
                                              Some
                                                expression (typing/includecore.ml[676,24278+31]..[676,24278+34])
                                                  Pexp_ident "err" (typing/includecore.ml[676,24278+31]..[676,24278+34])
                                      <case>
                                        pattern (typing/includecore.ml[677,24314+6]..[677,24314+44])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includecore.ml[677,24314+6]..[677,24314+10])
                                              Ppat_construct "None" (typing/includecore.ml[677,24314+6]..[677,24314+10])
                                              None
                                            pattern (typing/includecore.ml[677,24314+12]..[677,24314+27])
                                              Ppat_construct "Variant_unboxed" (typing/includecore.ml[677,24314+12]..[677,24314+27])
                                              None
                                            pattern (typing/includecore.ml[677,24314+29]..[677,24314+44])
                                              Ppat_construct "Variant_regular" (typing/includecore.ml[677,24314+29]..[677,24314+44])
                                              None
                                          ]
                                        expression (typing/includecore.ml[678,24362+8]..[678,24362+43])
                                          Pexp_construct "Some" (typing/includecore.ml[678,24362+8]..[678,24362+12])
                                          Some
                                            expression (typing/includecore.ml[678,24362+13]..[678,24362+43])
                                              Pexp_construct "Unboxed_representation" (typing/includecore.ml[678,24362+14]..[678,24362+36])
                                              Some
                                                expression (typing/includecore.ml[678,24362+37]..[678,24362+42])
                                                  Pexp_construct "First" (typing/includecore.ml[678,24362+37]..[678,24362+42])
                                                  None
                                      <case>
                                        pattern (typing/includecore.ml[679,24406+6]..[679,24406+44])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includecore.ml[679,24406+6]..[679,24406+10])
                                              Ppat_construct "None" (typing/includecore.ml[679,24406+6]..[679,24406+10])
                                              None
                                            pattern (typing/includecore.ml[679,24406+12]..[679,24406+27])
                                              Ppat_construct "Variant_regular" (typing/includecore.ml[679,24406+12]..[679,24406+27])
                                              None
                                            pattern (typing/includecore.ml[679,24406+29]..[679,24406+44])
                                              Ppat_construct "Variant_unboxed" (typing/includecore.ml[679,24406+29]..[679,24406+44])
                                              None
                                          ]
                                        expression (typing/includecore.ml[680,24454+8]..[680,24454+44])
                                          Pexp_construct "Some" (typing/includecore.ml[680,24454+8]..[680,24454+12])
                                          Some
                                            expression (typing/includecore.ml[680,24454+13]..[680,24454+44])
                                              Pexp_construct "Unboxed_representation" (typing/includecore.ml[680,24454+14]..[680,24454+36])
                                              Some
                                                expression (typing/includecore.ml[680,24454+37]..[680,24454+43])
                                                  Pexp_construct "Second" (typing/includecore.ml[680,24454+37]..[680,24454+43])
                                                  None
                                    ]
            ]
        ]
  structure_item (typing/includecore.ml[684,24550+0]..[713,25714+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[684,24550+4]..[684,24550+20])
          Ppat_var "privacy_mismatch" (typing/includecore.ml[684,24550+4]..[684,24550+20])
        expression (typing/includecore.ml[684,24550+21]..[713,25714+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[684,24550+21]..[684,24550+24])
            Ppat_var "env" (typing/includecore.ml[684,24550+21]..[684,24550+24])
          expression (typing/includecore.ml[684,24550+25]..[713,25714+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[684,24550+25]..[684,24550+30])
              Ppat_var "decl1" (typing/includecore.ml[684,24550+25]..[684,24550+30])
            expression (typing/includecore.ml[684,24550+31]..[713,25714+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[684,24550+31]..[684,24550+36])
                Ppat_var "decl2" (typing/includecore.ml[684,24550+31]..[684,24550+36])
              expression (typing/includecore.ml[685,24589+2]..[713,25714+10])
                Pexp_match
                expression (typing/includecore.ml[685,24589+8]..[685,24589+46])
                  Pexp_tuple
                  [
                    expression (typing/includecore.ml[685,24589+8]..[685,24589+26])
                      Pexp_field
                      expression (typing/includecore.ml[685,24589+8]..[685,24589+13])
                        Pexp_ident "decl1" (typing/includecore.ml[685,24589+8]..[685,24589+13])
                      "type_private" (typing/includecore.ml[685,24589+14]..[685,24589+26])
                    expression (typing/includecore.ml[685,24589+28]..[685,24589+46])
                      Pexp_field
                      expression (typing/includecore.ml[685,24589+28]..[685,24589+33])
                        Pexp_ident "decl2" (typing/includecore.ml[685,24589+28]..[685,24589+33])
                      "type_private" (typing/includecore.ml[685,24589+34]..[685,24589+46])
                  ]
                [
                  <case>
                    pattern (typing/includecore.ml[686,24641+4]..[686,24641+19])
                      Ppat_tuple
                      [
                        pattern (typing/includecore.ml[686,24641+4]..[686,24641+11])
                          Ppat_construct "Private" (typing/includecore.ml[686,24641+4]..[686,24641+11])
                          None
                        pattern (typing/includecore.ml[686,24641+13]..[686,24641+19])
                          Ppat_construct "Public" (typing/includecore.ml[686,24641+13]..[686,24641+19])
                          None
                      ]
                    expression (typing/includecore.ml[686,24641+23]..[711,25694+7])
                      Pexp_match
                      expression (typing/includecore.ml[687,24670+12]..[687,24670+44])
                        Pexp_tuple
                        [
                          expression (typing/includecore.ml[687,24670+12]..[687,24670+27])
                            Pexp_field
                            expression (typing/includecore.ml[687,24670+12]..[687,24670+17])
                              Pexp_ident "decl1" (typing/includecore.ml[687,24670+12]..[687,24670+17])
                            "type_kind" (typing/includecore.ml[687,24670+18]..[687,24670+27])
                          expression (typing/includecore.ml[687,24670+29]..[687,24670+44])
                            Pexp_field
                            expression (typing/includecore.ml[687,24670+29]..[687,24670+34])
                              Pexp_ident "decl2" (typing/includecore.ml[687,24670+29]..[687,24670+34])
                            "type_kind" (typing/includecore.ml[687,24670+35]..[687,24670+44])
                        ]
                      [
                        <case>
                          pattern (typing/includecore.ml[688,24720+8]..[688,24720+38])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[688,24720+8]..[688,24720+22])
                                Ppat_construct "Type_record" (typing/includecore.ml[688,24720+8]..[688,24720+19])
                                Some
                                  []
                                  pattern (typing/includecore.ml[688,24720+21]..[688,24720+22])
                                    Ppat_any
                              pattern (typing/includecore.ml[688,24720+24]..[688,24720+38])
                                Ppat_construct "Type_record" (typing/includecore.ml[688,24720+24]..[688,24720+35])
                                Some
                                  []
                                  pattern (typing/includecore.ml[688,24720+37]..[688,24720+38])
                                    Ppat_any
                            ]
                          expression (typing/includecore.ml[688,24720+42]..[688,24720+66])
                            Pexp_construct "Some" (typing/includecore.ml[688,24720+42]..[688,24720+46])
                            Some
                              expression (typing/includecore.ml[688,24720+47]..[688,24720+66])
                                Pexp_construct "Private_record_type" (typing/includecore.ml[688,24720+47]..[688,24720+66])
                                None
                        <case>
                          pattern (typing/includecore.ml[689,24787+8]..[689,24787+38])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[689,24787+8]..[689,24787+22])
                                Ppat_construct "Type_variant" (typing/includecore.ml[689,24787+8]..[689,24787+20])
                                Some
                                  []
                                  pattern (typing/includecore.ml[689,24787+21]..[689,24787+22])
                                    Ppat_any
                              pattern (typing/includecore.ml[689,24787+24]..[689,24787+38])
                                Ppat_construct "Type_variant" (typing/includecore.ml[689,24787+24]..[689,24787+36])
                                Some
                                  []
                                  pattern (typing/includecore.ml[689,24787+37]..[689,24787+38])
                                    Ppat_any
                            ]
                          expression (typing/includecore.ml[689,24787+42]..[689,24787+67])
                            Pexp_construct "Some" (typing/includecore.ml[689,24787+42]..[689,24787+46])
                            Some
                              expression (typing/includecore.ml[689,24787+47]..[689,24787+67])
                                Pexp_construct "Private_variant_type" (typing/includecore.ml[689,24787+47]..[689,24787+67])
                                None
                        <case>
                          pattern (typing/includecore.ml[690,24855+8]..[690,24855+33])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[690,24855+8]..[690,24855+17])
                                Ppat_construct "Type_open" (typing/includecore.ml[690,24855+8]..[690,24855+17])
                                None
                              pattern (typing/includecore.ml[690,24855+24]..[690,24855+33])
                                Ppat_construct "Type_open" (typing/includecore.ml[690,24855+24]..[690,24855+33])
                                None
                            ]
                          expression (typing/includecore.ml[690,24855+42]..[690,24855+73])
                            Pexp_construct "Some" (typing/includecore.ml[690,24855+42]..[690,24855+46])
                            Some
                              expression (typing/includecore.ml[690,24855+47]..[690,24855+73])
                                Pexp_construct "Private_extensible_variant" (typing/includecore.ml[690,24855+47]..[690,24855+73])
                                None
                        <case>
                          pattern (typing/includecore.ml[691,24929+8]..[691,24929+36])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[691,24929+8]..[691,24929+21])
                                Ppat_construct "Type_abstract" (typing/includecore.ml[691,24929+8]..[691,24929+21])
                                None
                              pattern (typing/includecore.ml[691,24929+23]..[691,24929+36])
                                Ppat_construct "Type_abstract" (typing/includecore.ml[691,24929+23]..[691,24929+36])
                                None
                            ]
                          <when>
                            expression (typing/includecore.ml[692,24966+13]..[692,24966+47])
                              Pexp_apply
                              expression (typing/includecore.ml[692,24966+13]..[692,24966+27])
                                Pexp_ident "Option.is_some" (typing/includecore.ml[692,24966+13]..[692,24966+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[692,24966+28]..[692,24966+47])
                                    Pexp_field
                                    expression (typing/includecore.ml[692,24966+28]..[692,24966+33])
                                      Pexp_ident "decl2" (typing/includecore.ml[692,24966+28]..[692,24966+33])
                                    "type_manifest" (typing/includecore.ml[692,24966+34]..[692,24966+47])
                              ]
                          expression (typing/includecore.ml[692,24966+51]..[708,25651+11])
                            Pexp_match
                            expression (typing/includecore.ml[693,25023+16]..[693,25023+35])
                              Pexp_field
                              expression (typing/includecore.ml[693,25023+16]..[693,25023+21])
                                Pexp_ident "decl1" (typing/includecore.ml[693,25023+16]..[693,25023+21])
                              "type_manifest" (typing/includecore.ml[693,25023+22]..[693,25023+35])
                            [
                              <case>
                                pattern (typing/includecore.ml[694,25064+12]..[694,25064+20])
                                  Ppat_construct "Some" (typing/includecore.ml[694,25064+12]..[694,25064+16])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[694,25064+17]..[694,25064+20])
                                      Ppat_var "ty1" (typing/includecore.ml[694,25064+17]..[694,25064+20])
                                expression (typing/includecore.ml[694,25064+24]..[705,25596+15])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[695,25094+16]..[695,25094+19])
                                        Ppat_var "ty1" (typing/includecore.ml[695,25094+16]..[695,25094+19])
                                      expression (typing/includecore.ml[695,25094+22]..[695,25094+47])
                                        Pexp_apply
                                        expression (typing/includecore.ml[695,25094+22]..[695,25094+39])
                                          Pexp_ident "Ctype.expand_head" (typing/includecore.ml[695,25094+22]..[695,25094+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[695,25094+40]..[695,25094+43])
                                              Pexp_ident "env" (typing/includecore.ml[695,25094+40]..[695,25094+43])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[695,25094+44]..[695,25094+47])
                                              Pexp_ident "ty1" (typing/includecore.ml[695,25094+44]..[695,25094+47])
                                        ]
                                  ]
                                  expression (typing/includecore.ml[696,25145+12]..[704,25549+46])
                                    Pexp_match
                                    expression (typing/includecore.ml[696,25145+18]..[696,25145+30])
                                      Pexp_apply
                                      expression (typing/includecore.ml[696,25145+18]..[696,25145+26])
                                        Pexp_ident "get_desc" (typing/includecore.ml[696,25145+18]..[696,25145+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[696,25145+27]..[696,25145+30])
                                            Pexp_ident "ty1" (typing/includecore.ml[696,25145+27]..[696,25145+30])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/includecore.ml[697,25181+14]..[697,25181+26])
                                          Ppat_construct "Tvariant" (typing/includecore.ml[697,25181+14]..[697,25181+22])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[697,25181+23]..[697,25181+26])
                                              Ppat_var "row" (typing/includecore.ml[697,25181+23]..[697,25181+26])
                                        <when>
                                          expression (typing/includecore.ml[697,25181+32]..[698,25251+54])
                                            Pexp_apply
                                            expression (typing/includecore.ml[697,25181+32]..[697,25181+51])
                                              Pexp_ident "Btype.is_constr_row" (typing/includecore.ml[697,25181+32]..[697,25181+51])
                                            [
                                              <arg>
                                              Labelled "allow_ident"
                                                expression (typing/includecore.ml[697,25181+65]..[697,25181+69])
                                                  Pexp_construct "true" (typing/includecore.ml[697,25181+65]..[697,25181+69])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[698,25251+34]..[698,25251+54])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[698,25251+35]..[698,25251+49])
                                                    Pexp_ident "Btype.row_more" (typing/includecore.ml[698,25251+35]..[698,25251+49])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[698,25251+50]..[698,25251+53])
                                                        Pexp_ident "row" (typing/includecore.ml[698,25251+50]..[698,25251+53])
                                                  ]
                                            ]
                                        expression (typing/includecore.ml[699,25309+16]..[699,25309+37])
                                          Pexp_construct "Some" (typing/includecore.ml[699,25309+16]..[699,25309+20])
                                          Some
                                            expression (typing/includecore.ml[699,25309+21]..[699,25309+37])
                                              Pexp_construct "Private_row_type" (typing/includecore.ml[699,25309+21]..[699,25309+37])
                                              None
                                      <case>
                                        pattern (typing/includecore.ml[700,25347+14]..[700,25347+29])
                                          Ppat_construct "Tobject" (typing/includecore.ml[700,25347+14]..[700,25347+21])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[700,25347+22]..[700,25347+29])
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[700,25347+23]..[700,25347+25])
                                                  Ppat_var "fi" (typing/includecore.ml[700,25347+23]..[700,25347+25])
                                                pattern (typing/includecore.ml[700,25347+27]..[700,25347+28])
                                                  Ppat_any
                                              ]
                                        <when>
                                          expression (typing/includecore.ml[700,25347+35]..[701,25420+68])
                                            Pexp_apply
                                            expression (typing/includecore.ml[700,25347+35]..[700,25347+54])
                                              Pexp_ident "Btype.is_constr_row" (typing/includecore.ml[700,25347+35]..[700,25347+54])
                                            [
                                              <arg>
                                              Labelled "allow_ident"
                                                expression (typing/includecore.ml[700,25347+68]..[700,25347+72])
                                                  Pexp_construct "true" (typing/includecore.ml[700,25347+68]..[700,25347+72])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[701,25420+37]..[701,25420+68])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[701,25420+38]..[701,25420+41])
                                                    Pexp_ident "snd" (typing/includecore.ml[701,25420+38]..[701,25420+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[701,25420+42]..[701,25420+67])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[701,25420+43]..[701,25420+63])
                                                          Pexp_ident "Ctype.flatten_fields" (typing/includecore.ml[701,25420+43]..[701,25420+63])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[701,25420+64]..[701,25420+66])
                                                              Pexp_ident "fi" (typing/includecore.ml[701,25420+64]..[701,25420+66])
                                                        ]
                                                  ]
                                            ]
                                        expression (typing/includecore.ml[702,25492+16]..[702,25492+37])
                                          Pexp_construct "Some" (typing/includecore.ml[702,25492+16]..[702,25492+20])
                                          Some
                                            expression (typing/includecore.ml[702,25492+21]..[702,25492+37])
                                              Pexp_construct "Private_row_type" (typing/includecore.ml[702,25492+21]..[702,25492+37])
                                              None
                                      <case>
                                        pattern (typing/includecore.ml[703,25530+14]..[703,25530+15])
                                          Ppat_any
                                        expression (typing/includecore.ml[704,25549+16]..[704,25549+46])
                                          Pexp_construct "Some" (typing/includecore.ml[704,25549+16]..[704,25549+20])
                                          Some
                                            expression (typing/includecore.ml[704,25549+21]..[704,25549+46])
                                              Pexp_construct "Private_type_abbreviation" (typing/includecore.ml[704,25549+21]..[704,25549+46])
                                              None
                                    ]
                              <case>
                                pattern (typing/includecore.ml[706,25612+12]..[706,25612+16])
                                  Ppat_construct "None" (typing/includecore.ml[706,25612+12]..[706,25612+16])
                                  None
                                expression (typing/includecore.ml[707,25632+14]..[707,25632+18])
                                  Pexp_construct "None" (typing/includecore.ml[707,25632+14]..[707,25632+18])
                                  None
                            ]
                        <case>
                          pattern (typing/includecore.ml[709,25663+8]..[709,25663+12])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[709,25663+8]..[709,25663+9])
                                Ppat_any
                              pattern (typing/includecore.ml[709,25663+11]..[709,25663+12])
                                Ppat_any
                            ]
                          expression (typing/includecore.ml[710,25679+10]..[710,25679+14])
                            Pexp_construct "None" (typing/includecore.ml[710,25679+10]..[710,25679+14])
                            None
                      ]
                  <case>
                    pattern (typing/includecore.ml[712,25702+4]..[712,25702+8])
                      Ppat_tuple
                      [
                        pattern (typing/includecore.ml[712,25702+4]..[712,25702+5])
                          Ppat_any
                        pattern (typing/includecore.ml[712,25702+7]..[712,25702+8])
                          Ppat_any
                      ]
                    expression (typing/includecore.ml[713,25714+6]..[713,25714+10])
                      Pexp_construct "None" (typing/includecore.ml[713,25714+6]..[713,25714+10])
                      None
                ]
    ]
  structure_item (typing/includecore.ml[715,25726+0]..[785,28372+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[715,25726+4]..[715,25726+19])
          Ppat_var "private_variant" (typing/includecore.ml[715,25726+4]..[715,25726+19])
        expression (typing/includecore.ml[715,25726+20]..[785,28372+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[715,25726+20]..[715,25726+23])
            Ppat_var "env" (typing/includecore.ml[715,25726+20]..[715,25726+23])
          expression (typing/includecore.ml[715,25726+24]..[785,28372+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[715,25726+24]..[715,25726+28])
              Ppat_var "row1" (typing/includecore.ml[715,25726+24]..[715,25726+28])
            expression (typing/includecore.ml[715,25726+29]..[785,28372+30]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[715,25726+29]..[715,25726+36])
                Ppat_var "params1" (typing/includecore.ml[715,25726+29]..[715,25726+36])
              expression (typing/includecore.ml[715,25726+37]..[785,28372+30]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[715,25726+37]..[715,25726+41])
                  Ppat_var "row2" (typing/includecore.ml[715,25726+37]..[715,25726+41])
                expression (typing/includecore.ml[715,25726+42]..[785,28372+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[715,25726+42]..[715,25726+49])
                    Ppat_var "params2" (typing/includecore.ml[715,25726+42]..[715,25726+49])
                  expression (typing/includecore.ml[716,25778+4]..[785,28372+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includecore.ml[716,25778+8]..[716,25778+21])
                          Ppat_tuple
                          [
                            pattern (typing/includecore.ml[716,25778+8]..[716,25778+10])
                              Ppat_var "r1" (typing/includecore.ml[716,25778+8]..[716,25778+10])
                            pattern (typing/includecore.ml[716,25778+12]..[716,25778+14])
                              Ppat_var "r2" (typing/includecore.ml[716,25778+12]..[716,25778+14])
                            pattern (typing/includecore.ml[716,25778+16]..[716,25778+21])
                              Ppat_var "pairs" (typing/includecore.ml[716,25778+16]..[716,25778+21])
                          ]
                        expression (typing/includecore.ml[717,25802+6]..[717,25802+60])
                          Pexp_apply
                          expression (typing/includecore.ml[717,25802+6]..[717,25802+28])
                            Pexp_ident "Ctype.merge_row_fields" (typing/includecore.ml[717,25802+6]..[717,25802+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[717,25802+29]..[717,25802+44])
                                Pexp_field
                                expression (typing/includecore.ml[717,25802+29]..[717,25802+33])
                                  Pexp_ident "row1" (typing/includecore.ml[717,25802+29]..[717,25802+33])
                                "row_fields" (typing/includecore.ml[717,25802+34]..[717,25802+44])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[717,25802+45]..[717,25802+60])
                                Pexp_field
                                expression (typing/includecore.ml[717,25802+45]..[717,25802+49])
                                  Pexp_ident "row2" (typing/includecore.ml[717,25802+45]..[717,25802+49])
                                "row_fields" (typing/includecore.ml[717,25802+50]..[717,25802+60])
                          ]
                    ]
                    expression (typing/includecore.ml[719,25870+4]..[785,28372+30])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[719,25870+8]..[719,25870+11])
                            Ppat_var "err" (typing/includecore.ml[719,25870+8]..[719,25870+11])
                          expression (typing/includecore.ml[720,25884+6]..[726,26166+9])
                            Pexp_ifthenelse
                            expression (typing/includecore.ml[720,25884+9]..[720,25884+47])
                              Pexp_apply
                              expression (typing/includecore.ml[720,25884+25]..[720,25884+27])
                                Pexp_ident "&&" (typing/includecore.ml[720,25884+25]..[720,25884+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[720,25884+9]..[720,25884+24])
                                    Pexp_field
                                    expression (typing/includecore.ml[720,25884+9]..[720,25884+13])
                                      Pexp_ident "row2" (typing/includecore.ml[720,25884+9]..[720,25884+13])
                                    "row_closed" (typing/includecore.ml[720,25884+14]..[720,25884+24])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[720,25884+28]..[720,25884+47])
                                    Pexp_apply
                                    expression (typing/includecore.ml[720,25884+28]..[720,25884+31])
                                      Pexp_ident "not" (typing/includecore.ml[720,25884+28]..[720,25884+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[720,25884+32]..[720,25884+47])
                                          Pexp_field
                                          expression (typing/includecore.ml[720,25884+32]..[720,25884+36])
                                            Pexp_ident "row1" (typing/includecore.ml[720,25884+32]..[720,25884+36])
                                          "row_closed" (typing/includecore.ml[720,25884+37]..[720,25884+47])
                                    ]
                              ]
                            expression (typing/includecore.ml[720,25884+53]..[720,25884+75])
                              Pexp_construct "Some" (typing/includecore.ml[720,25884+53]..[720,25884+57])
                              Some
                                expression (typing/includecore.ml[720,25884+58]..[720,25884+75])
                                  Pexp_construct "Only_outer_closed" (typing/includecore.ml[720,25884+58]..[720,25884+75])
                                  None
                            Some
                              expression (typing/includecore.ml[721,25960+11]..[726,26166+9])
                                Pexp_match
                                expression (typing/includecore.ml[722,25977+14]..[722,25977+63])
                                  Pexp_tuple
                                  [
                                    expression (typing/includecore.ml[722,25977+14]..[722,25977+29])
                                      Pexp_field
                                      expression (typing/includecore.ml[722,25977+14]..[722,25977+18])
                                        Pexp_ident "row2" (typing/includecore.ml[722,25977+14]..[722,25977+18])
                                      "row_closed" (typing/includecore.ml[722,25977+19]..[722,25977+29])
                                    expression (typing/includecore.ml[722,25977+31]..[722,25977+63])
                                      Pexp_apply
                                      expression (typing/includecore.ml[722,25977+31]..[722,25977+54])
                                        Pexp_ident "Ctype.filter_row_fields" (typing/includecore.ml[722,25977+31]..[722,25977+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[722,25977+55]..[722,25977+60])
                                            Pexp_construct "false" (typing/includecore.ml[722,25977+55]..[722,25977+60])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[722,25977+61]..[722,25977+63])
                                            Pexp_ident "r1" (typing/includecore.ml[722,25977+61]..[722,25977+63])
                                      ]
                                  ]
                                [
                                  <case>
                                    pattern (typing/includecore.ml[723,26046+10]..[723,26046+27])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[723,26046+10]..[723,26046+14])
                                          Ppat_construct "true" (typing/includecore.ml[723,26046+10]..[723,26046+14])
                                          None
                                        pattern (typing/includecore.ml[723,26046+16]..[723,26046+27])
                                          Ppat_construct "::" (typing/includecore.ml[723,26046+23]..[723,26046+25])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[723,26046+16]..[723,26046+27]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[723,26046+16]..[723,26046+22])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includecore.ml[723,26046+17]..[723,26046+18])
                                                      Ppat_var "s" (typing/includecore.ml[723,26046+17]..[723,26046+18])
                                                    pattern (typing/includecore.ml[723,26046+20]..[723,26046+21])
                                                      Ppat_any
                                                  ]
                                                pattern (typing/includecore.ml[723,26046+26]..[723,26046+27])
                                                  Ppat_any
                                              ]
                                      ]
                                    expression (typing/includecore.ml[724,26077+12]..[724,26077+65])
                                      Pexp_construct "Some" (typing/includecore.ml[724,26077+12]..[724,26077+16])
                                      Some
                                        expression (typing/includecore.ml[724,26077+17]..[724,26077+65])
                                          Pexp_constraint
                                          expression (typing/includecore.ml[724,26077+18]..[724,26077+37])
                                            Pexp_construct "Missing" (typing/includecore.ml[724,26077+18]..[724,26077+25])
                                            Some
                                              expression (typing/includecore.ml[724,26077+26]..[724,26077+37])
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[724,26077+27]..[724,26077+33])
                                                    Pexp_construct "Second" (typing/includecore.ml[724,26077+27]..[724,26077+33])
                                                    None
                                                  expression (typing/includecore.ml[724,26077+35]..[724,26077+36])
                                                    Pexp_ident "s" (typing/includecore.ml[724,26077+35]..[724,26077+36])
                                                ]
                                          core_type (typing/includecore.ml[724,26077+40]..[724,26077+64])
                                            Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[724,26077+40]..[724,26077+64])
                                            []
                                  <case>
                                    pattern (typing/includecore.ml[725,26143+10]..[725,26143+14])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[725,26143+10]..[725,26143+11])
                                          Ppat_any
                                        pattern (typing/includecore.ml[725,26143+13]..[725,26143+14])
                                          Ppat_any
                                      ]
                                    expression (typing/includecore.ml[725,26143+18]..[725,26143+22])
                                      Pexp_construct "None" (typing/includecore.ml[725,26143+18]..[725,26143+22])
                                      None
                                ]
                      ]
                      expression (typing/includecore.ml[728,26183+4]..[785,28372+30])
                        Pexp_ifthenelse
                        expression (typing/includecore.ml[728,26183+7]..[728,26183+18])
                          Pexp_apply
                          expression (typing/includecore.ml[728,26183+11]..[728,26183+13])
                            Pexp_ident "<>" (typing/includecore.ml[728,26183+11]..[728,26183+13])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[728,26183+7]..[728,26183+10])
                                Pexp_ident "err" (typing/includecore.ml[728,26183+7]..[728,26183+10])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[728,26183+14]..[728,26183+18])
                                Pexp_construct "None" (typing/includecore.ml[728,26183+14]..[728,26183+18])
                                None
                          ]
                        expression (typing/includecore.ml[728,26183+24]..[728,26183+27])
                          Pexp_ident "err" (typing/includecore.ml[728,26183+24]..[728,26183+27])
                        Some
                          expression (typing/includecore.ml[729,26216+4]..[785,28372+30])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includecore.ml[729,26216+8]..[729,26216+11])
                                  Ppat_var "err" (typing/includecore.ml[729,26216+8]..[729,26216+11])
                                expression (typing/includecore.ml[730,26230+6]..[740,26490+75])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[730,26230+10]..[730,26230+17])
                                        Ppat_var "missing" (typing/includecore.ml[730,26230+10]..[730,26230+17])
                                      expression (typing/includecore.ml[731,26250+8]..[736,26422+12])
                                        Pexp_apply
                                        expression (typing/includecore.ml[731,26250+8]..[731,26250+21])
                                          Pexp_ident "List.find_opt" (typing/includecore.ml[731,26250+8]..[731,26250+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[732,26272+10]..[735,26387+34])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/includecore.ml[732,26272+15]..[732,26272+20])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/includecore.ml[732,26272+16]..[732,26272+17])
                                                    Ppat_any
                                                  pattern (typing/includecore.ml[732,26272+18]..[732,26272+19])
                                                    Ppat_var "f" (typing/includecore.ml[732,26272+18]..[732,26272+19])
                                                ]
                                              expression (typing/includecore.ml[733,26296+13]..[735,26387+33])
                                                Pexp_match
                                                expression (typing/includecore.ml[733,26296+19]..[733,26296+41])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[733,26296+19]..[733,26296+39])
                                                    Pexp_ident "Btype.row_field_repr" (typing/includecore.ml[733,26296+19]..[733,26296+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[733,26296+40]..[733,26296+41])
                                                        Pexp_ident "f" (typing/includecore.ml[733,26296+40]..[733,26296+41])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/includecore.ml[734,26343+15]..[734,26343+34])
                                                      Ppat_or
                                                      pattern (typing/includecore.ml[734,26343+15]..[734,26343+22])
                                                        Ppat_construct "Rabsent" (typing/includecore.ml[734,26343+15]..[734,26343+22])
                                                        None
                                                      pattern (typing/includecore.ml[734,26343+25]..[734,26343+34])
                                                        Ppat_construct "Reither" (typing/includecore.ml[734,26343+25]..[734,26343+32])
                                                        Some
                                                          []
                                                          pattern (typing/includecore.ml[734,26343+33]..[734,26343+34])
                                                            Ppat_any
                                                    expression (typing/includecore.ml[734,26343+38]..[734,26343+43])
                                                      Pexp_construct "false" (typing/includecore.ml[734,26343+38]..[734,26343+43])
                                                      None
                                                  <case>
                                                    pattern (typing/includecore.ml[735,26387+15]..[735,26387+25])
                                                      Ppat_construct "Rpresent" (typing/includecore.ml[735,26387+15]..[735,26387+23])
                                                      Some
                                                        []
                                                        pattern (typing/includecore.ml[735,26387+24]..[735,26387+25])
                                                          Ppat_any
                                                    expression (typing/includecore.ml[735,26387+29]..[735,26387+33])
                                                      Pexp_construct "true" (typing/includecore.ml[735,26387+29]..[735,26387+33])
                                                      None
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[736,26422+10]..[736,26422+12])
                                              Pexp_ident "r2" (typing/includecore.ml[736,26422+10]..[736,26422+12])
                                        ]
                                  ]
                                  expression (typing/includecore.ml[738,26444+6]..[740,26490+75])
                                    Pexp_match
                                    expression (typing/includecore.ml[738,26444+12]..[738,26444+19])
                                      Pexp_ident "missing" (typing/includecore.ml[738,26444+12]..[738,26444+19])
                                    [
                                      <case>
                                        pattern (typing/includecore.ml[739,26469+8]..[739,26469+12])
                                          Ppat_construct "None" (typing/includecore.ml[739,26469+8]..[739,26469+12])
                                          None
                                        expression (typing/includecore.ml[739,26469+16]..[739,26469+20])
                                          Pexp_construct "None" (typing/includecore.ml[739,26469+16]..[739,26469+20])
                                          None
                                      <case>
                                        pattern (typing/includecore.ml[740,26490+8]..[740,26490+19])
                                          Ppat_construct "Some" (typing/includecore.ml[740,26490+8]..[740,26490+12])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[740,26490+13]..[740,26490+19])
                                              Ppat_tuple
                                              [
                                                pattern (typing/includecore.ml[740,26490+14]..[740,26490+15])
                                                  Ppat_var "s" (typing/includecore.ml[740,26490+14]..[740,26490+15])
                                                pattern (typing/includecore.ml[740,26490+17]..[740,26490+18])
                                                  Ppat_any
                                              ]
                                        expression (typing/includecore.ml[740,26490+23]..[740,26490+75])
                                          Pexp_construct "Some" (typing/includecore.ml[740,26490+23]..[740,26490+27])
                                          Some
                                            expression (typing/includecore.ml[740,26490+28]..[740,26490+75])
                                              Pexp_constraint
                                              expression (typing/includecore.ml[740,26490+29]..[740,26490+47])
                                                Pexp_construct "Missing" (typing/includecore.ml[740,26490+29]..[740,26490+36])
                                                Some
                                                  expression (typing/includecore.ml[740,26490+37]..[740,26490+47])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includecore.ml[740,26490+38]..[740,26490+43])
                                                        Pexp_construct "First" (typing/includecore.ml[740,26490+38]..[740,26490+43])
                                                        None
                                                      expression (typing/includecore.ml[740,26490+45]..[740,26490+46])
                                                        Pexp_ident "s" (typing/includecore.ml[740,26490+45]..[740,26490+46])
                                                    ]
                                              core_type (typing/includecore.ml[740,26490+50]..[740,26490+74])
                                                Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[740,26490+50]..[740,26490+74])
                                                []
                                    ]
                            ]
                            expression (typing/includecore.ml[742,26573+4]..[785,28372+30])
                              Pexp_ifthenelse
                              expression (typing/includecore.ml[742,26573+7]..[742,26573+18])
                                Pexp_apply
                                expression (typing/includecore.ml[742,26573+11]..[742,26573+13])
                                  Pexp_ident "<>" (typing/includecore.ml[742,26573+11]..[742,26573+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[742,26573+7]..[742,26573+10])
                                      Pexp_ident "err" (typing/includecore.ml[742,26573+7]..[742,26573+10])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[742,26573+14]..[742,26573+18])
                                      Pexp_construct "None" (typing/includecore.ml[742,26573+14]..[742,26573+18])
                                      None
                                ]
                              expression (typing/includecore.ml[742,26573+24]..[742,26573+27])
                                Pexp_ident "err" (typing/includecore.ml[742,26573+24]..[742,26573+27])
                              Some
                                expression (typing/includecore.ml[743,26606+4]..[785,28372+30])
                                  Pexp_let Rec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[743,26606+12]..[743,26606+16])
                                        Ppat_var "loop" (typing/includecore.ml[743,26606+12]..[743,26606+16])
                                      expression (typing/includecore.ml[743,26606+17]..[783,28353+11]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/includecore.ml[743,26606+17]..[743,26606+20])
                                          Ppat_var "tl1" (typing/includecore.ml[743,26606+17]..[743,26606+20])
                                        expression (typing/includecore.ml[743,26606+21]..[783,28353+11]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/includecore.ml[743,26606+21]..[743,26606+24])
                                            Ppat_var "tl2" (typing/includecore.ml[743,26606+21]..[743,26606+24])
                                          expression (typing/includecore.ml[743,26606+25]..[783,28353+11]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/includecore.ml[743,26606+25]..[743,26606+30])
                                              Ppat_var "pairs" (typing/includecore.ml[743,26606+25]..[743,26606+30])
                                            expression (typing/includecore.ml[744,26639+6]..[783,28353+11])
                                              Pexp_match
                                              expression (typing/includecore.ml[744,26639+12]..[744,26639+17])
                                                Pexp_ident "pairs" (typing/includecore.ml[744,26639+12]..[744,26639+17])
                                              [
                                                <case>
                                                  pattern (typing/includecore.ml[745,26662+8]..[745,26662+10])
                                                    Ppat_construct "[]" (typing/includecore.ml[745,26662+8]..[745,26662+10])
                                                    None
                                                  expression (typing/includecore.ml[745,26662+14]..[750,26857+11])
                                                    Pexp_match
                                                    expression (typing/includecore.ml[746,26682+16]..[746,26682+44])
                                                      Pexp_apply
                                                      expression (typing/includecore.ml[746,26682+16]..[746,26682+27])
                                                        Pexp_ident "Ctype.equal" (typing/includecore.ml[746,26682+16]..[746,26682+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[746,26682+28]..[746,26682+31])
                                                            Pexp_ident "env" (typing/includecore.ml[746,26682+28]..[746,26682+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[746,26682+32]..[746,26682+36])
                                                            Pexp_construct "true" (typing/includecore.ml[746,26682+32]..[746,26682+36])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[746,26682+37]..[746,26682+40])
                                                            Pexp_ident "tl1" (typing/includecore.ml[746,26682+37]..[746,26682+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[746,26682+41]..[746,26682+44])
                                                            Pexp_ident "tl2" (typing/includecore.ml[746,26682+41]..[746,26682+44])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (typing/includecore.ml[747,26732+12]..[747,26732+40])
                                                          Ppat_exception
                                                          pattern (typing/includecore.ml[747,26732+22]..[747,26732+40])
                                                            Ppat_construct "Ctype.Equality" (typing/includecore.ml[747,26732+22]..[747,26732+36])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[747,26732+37]..[747,26732+40])
                                                                Ppat_var "err" (typing/includecore.ml[747,26732+37]..[747,26732+40])
                                                        expression (typing/includecore.ml[748,26776+14]..[748,26776+57])
                                                          Pexp_construct "Some" (typing/includecore.ml[748,26776+14]..[748,26776+18])
                                                          Some
                                                            expression (typing/includecore.ml[748,26776+19]..[748,26776+57])
                                                              Pexp_constraint
                                                              expression (typing/includecore.ml[748,26776+20]..[748,26776+29])
                                                                Pexp_construct "Types" (typing/includecore.ml[748,26776+20]..[748,26776+25])
                                                                Some
                                                                  expression (typing/includecore.ml[748,26776+26]..[748,26776+29])
                                                                    Pexp_ident "err" (typing/includecore.ml[748,26776+26]..[748,26776+29])
                                                              core_type (typing/includecore.ml[748,26776+32]..[748,26776+56])
                                                                Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[748,26776+32]..[748,26776+56])
                                                                []
                                                      <case>
                                                        pattern (typing/includecore.ml[749,26834+12]..[749,26834+14])
                                                          Ppat_construct "()" (typing/includecore.ml[749,26834+12]..[749,26834+14])
                                                          None
                                                        expression (typing/includecore.ml[749,26834+18]..[749,26834+22])
                                                          Pexp_construct "None" (typing/includecore.ml[749,26834+18]..[749,26834+22])
                                                          None
                                                    ]
                                                <case>
                                                  pattern (typing/includecore.ml[751,26869+8]..[751,26869+28])
                                                    Ppat_construct "::" (typing/includecore.ml[751,26869+20]..[751,26869+22])
                                                    Some
                                                      []
                                                      pattern (typing/includecore.ml[751,26869+8]..[751,26869+28]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[751,26869+8]..[751,26869+19])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/includecore.ml[751,26869+9]..[751,26869+10])
                                                                Ppat_var "s" (typing/includecore.ml[751,26869+9]..[751,26869+10])
                                                              pattern (typing/includecore.ml[751,26869+12]..[751,26869+14])
                                                                Ppat_var "f1" (typing/includecore.ml[751,26869+12]..[751,26869+14])
                                                              pattern (typing/includecore.ml[751,26869+16]..[751,26869+18])
                                                                Ppat_var "f2" (typing/includecore.ml[751,26869+16]..[751,26869+18])
                                                            ]
                                                          pattern (typing/includecore.ml[751,26869+23]..[751,26869+28])
                                                            Ppat_var "pairs" (typing/includecore.ml[751,26869+23]..[751,26869+28])
                                                        ]
                                                  expression (typing/includecore.ml[751,26869+32]..[783,28353+11])
                                                    Pexp_match
                                                    expression (typing/includecore.ml[752,26907+16]..[752,26907+64])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/includecore.ml[752,26907+16]..[752,26907+39])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[752,26907+16]..[752,26907+36])
                                                            Pexp_ident "Btype.row_field_repr" (typing/includecore.ml[752,26907+16]..[752,26907+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[752,26907+37]..[752,26907+39])
                                                                Pexp_ident "f1" (typing/includecore.ml[752,26907+37]..[752,26907+39])
                                                          ]
                                                        expression (typing/includecore.ml[752,26907+41]..[752,26907+64])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[752,26907+41]..[752,26907+61])
                                                            Pexp_ident "Btype.row_field_repr" (typing/includecore.ml[752,26907+41]..[752,26907+61])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[752,26907+62]..[752,26907+64])
                                                                Pexp_ident "f2" (typing/includecore.ml[752,26907+62]..[752,26907+64])
                                                          ]
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (typing/includecore.ml[753,26977+12]..[753,26977+38])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[753,26977+12]..[753,26977+24])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[753,26977+12]..[753,26977+20])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[753,26977+21]..[753,26977+24])
                                                                  Ppat_var "to1" (typing/includecore.ml[753,26977+21]..[753,26977+24])
                                                            pattern (typing/includecore.ml[753,26977+26]..[753,26977+38])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[753,26977+26]..[753,26977+34])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[753,26977+35]..[753,26977+38])
                                                                  Ppat_var "to2" (typing/includecore.ml[753,26977+35]..[753,26977+38])
                                                          ]
                                                        expression (typing/includecore.ml[753,26977+42]..[761,27312+15])
                                                          Pexp_match
                                                          expression (typing/includecore.ml[754,27025+20]..[754,27025+28])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/includecore.ml[754,27025+20]..[754,27025+23])
                                                                Pexp_ident "to1" (typing/includecore.ml[754,27025+20]..[754,27025+23])
                                                              expression (typing/includecore.ml[754,27025+25]..[754,27025+28])
                                                                Pexp_ident "to2" (typing/includecore.ml[754,27025+25]..[754,27025+28])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/includecore.ml[755,27059+16]..[755,27059+32])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[755,27059+16]..[755,27059+23])
                                                                    Ppat_construct "Some" (typing/includecore.ml[755,27059+16]..[755,27059+20])
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[755,27059+21]..[755,27059+23])
Ppat_var "t1" (typing/includecore.ml[755,27059+21]..[755,27059+23])
                                                                  pattern (typing/includecore.ml[755,27059+25]..[755,27059+32])
                                                                    Ppat_construct "Some" (typing/includecore.ml[755,27059+25]..[755,27059+29])
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[755,27059+30]..[755,27059+32])
Ppat_var "t2" (typing/includecore.ml[755,27059+30]..[755,27059+32])
                                                                ]
                                                              expression (typing/includecore.ml[756,27095+18]..[756,27095+52])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[756,27095+18]..[756,27095+22])
                                                                  Pexp_ident "loop" (typing/includecore.ml[756,27095+18]..[756,27095+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[756,27095+23]..[756,27095+34])
                                                                      Pexp_construct "::" (typing/includecore.ml[756,27095+27]..[756,27095+29])
                                                                      Some
expression (typing/includecore.ml[756,27095+24]..[756,27095+33]) ghost
  Pexp_tuple
  [
    expression (typing/includecore.ml[756,27095+24]..[756,27095+26])
      Pexp_ident "t1" (typing/includecore.ml[756,27095+24]..[756,27095+26])
    expression (typing/includecore.ml[756,27095+30]..[756,27095+33])
      Pexp_ident "tl1" (typing/includecore.ml[756,27095+30]..[756,27095+33])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[756,27095+35]..[756,27095+46])
                                                                      Pexp_construct "::" (typing/includecore.ml[756,27095+39]..[756,27095+41])
                                                                      Some
expression (typing/includecore.ml[756,27095+36]..[756,27095+45]) ghost
  Pexp_tuple
  [
    expression (typing/includecore.ml[756,27095+36]..[756,27095+38])
      Pexp_ident "t2" (typing/includecore.ml[756,27095+36]..[756,27095+38])
    expression (typing/includecore.ml[756,27095+42]..[756,27095+45])
      Pexp_ident "tl2" (typing/includecore.ml[756,27095+42]..[756,27095+45])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[756,27095+47]..[756,27095+52])
                                                                      Pexp_ident "pairs" (typing/includecore.ml[756,27095+47]..[756,27095+52])
                                                                ]
                                                            <case>
                                                              pattern (typing/includecore.ml[757,27148+16]..[757,27148+26])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[757,27148+16]..[757,27148+20])
                                                                    Ppat_construct "None" (typing/includecore.ml[757,27148+16]..[757,27148+20])
                                                                    None
                                                                  pattern (typing/includecore.ml[757,27148+22]..[757,27148+26])
                                                                    Ppat_construct "None" (typing/includecore.ml[757,27148+22]..[757,27148+26])
                                                                    None
                                                                ]
                                                              expression (typing/includecore.ml[758,27178+18]..[758,27178+36])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[758,27178+18]..[758,27178+22])
                                                                  Pexp_ident "loop" (typing/includecore.ml[758,27178+18]..[758,27178+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[758,27178+23]..[758,27178+26])
                                                                      Pexp_ident "tl1" (typing/includecore.ml[758,27178+23]..[758,27178+26])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[758,27178+27]..[758,27178+30])
                                                                      Pexp_ident "tl2" (typing/includecore.ml[758,27178+27]..[758,27178+30])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[758,27178+31]..[758,27178+36])
                                                                      Pexp_ident "pairs" (typing/includecore.ml[758,27178+31]..[758,27178+36])
                                                                ]
                                                            <case>
                                                              pattern (typing/includecore.ml[759,27215+16]..[759,27215+43])
                                                                Ppat_or
                                                                pattern (typing/includecore.ml[759,27215+16]..[759,27215+28])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/includecore.ml[759,27215+16]..[759,27215+22])
                                                                      Ppat_construct "Some" (typing/includecore.ml[759,27215+16]..[759,27215+20])
                                                                      Some
[]
pattern (typing/includecore.ml[759,27215+21]..[759,27215+22])
  Ppat_any
                                                                    pattern (typing/includecore.ml[759,27215+24]..[759,27215+28])
                                                                      Ppat_construct "None" (typing/includecore.ml[759,27215+24]..[759,27215+28])
                                                                      None
                                                                  ]
                                                                pattern (typing/includecore.ml[759,27215+31]..[759,27215+43])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/includecore.ml[759,27215+31]..[759,27215+35])
                                                                      Ppat_construct "None" (typing/includecore.ml[759,27215+31]..[759,27215+35])
                                                                      None
                                                                    pattern (typing/includecore.ml[759,27215+37]..[759,27215+43])
                                                                      Ppat_construct "Some" (typing/includecore.ml[759,27215+37]..[759,27215+41])
                                                                      Some
[]
pattern (typing/includecore.ml[759,27215+42]..[759,27215+43])
  Ppat_any
                                                                  ]
                                                              expression (typing/includecore.ml[760,27262+18]..[760,27262+49])
                                                                Pexp_construct "Some" (typing/includecore.ml[760,27262+18]..[760,27262+22])
                                                                Some
                                                                  expression (typing/includecore.ml[760,27262+23]..[760,27262+49])
                                                                    Pexp_construct "Incompatible_types_for" (typing/includecore.ml[760,27262+24]..[760,27262+46])
                                                                    Some
                                                                      expression (typing/includecore.ml[760,27262+47]..[760,27262+48])
Pexp_ident "s" (typing/includecore.ml[760,27262+47]..[760,27262+48])
                                                          ]
                                                      <case>
                                                        pattern (typing/includecore.ml[762,27328+12]..[762,27328+52])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[762,27328+12]..[762,27328+24])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[762,27328+12]..[762,27328+20])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[762,27328+21]..[762,27328+24])
                                                                  Ppat_var "to1" (typing/includecore.ml[762,27328+21]..[762,27328+24])
                                                            pattern (typing/includecore.ml[762,27328+26]..[762,27328+52])
                                                              Ppat_construct "Reither" (typing/includecore.ml[762,27328+26]..[762,27328+33])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[762,27328+33]..[762,27328+52])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/includecore.ml[762,27328+34]..[762,27328+40])
                                                                      Ppat_var "const2" (typing/includecore.ml[762,27328+34]..[762,27328+40])
                                                                    pattern (typing/includecore.ml[762,27328+42]..[762,27328+45])
                                                                      Ppat_var "ts2" (typing/includecore.ml[762,27328+42]..[762,27328+45])
                                                                    pattern (typing/includecore.ml[762,27328+47]..[762,27328+48])
                                                                      Ppat_any
                                                                    pattern (typing/includecore.ml[762,27328+50]..[762,27328+51])
                                                                      Ppat_any
                                                                  ]
                                                          ]
                                                        expression (typing/includecore.ml[762,27328+56]..[767,27619+15])
                                                          Pexp_match
                                                          expression (typing/includecore.ml[763,27390+20]..[763,27390+36])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/includecore.ml[763,27390+20]..[763,27390+23])
                                                                Pexp_ident "to1" (typing/includecore.ml[763,27390+20]..[763,27390+23])
                                                              expression (typing/includecore.ml[763,27390+25]..[763,27390+31])
                                                                Pexp_ident "const2" (typing/includecore.ml[763,27390+25]..[763,27390+31])
                                                              expression (typing/includecore.ml[763,27390+33]..[763,27390+36])
                                                                Pexp_ident "ts2" (typing/includecore.ml[763,27390+33]..[763,27390+36])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/includecore.ml[764,27432+16]..[764,27432+36])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[764,27432+16]..[764,27432+23])
                                                                    Ppat_construct "Some" (typing/includecore.ml[764,27432+16]..[764,27432+20])
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[764,27432+21]..[764,27432+23])
Ppat_var "t1" (typing/includecore.ml[764,27432+21]..[764,27432+23])
                                                                  pattern (typing/includecore.ml[764,27432+25]..[764,27432+30])
                                                                    Ppat_construct "false" (typing/includecore.ml[764,27432+25]..[764,27432+30])
                                                                    None
                                                                  pattern (typing/includecore.ml[764,27432+32]..[764,27432+36])
                                                                    Ppat_construct "::" (typing/includecore.ml[764,27432+33]..[764,27432+36]) ghost
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[764,27432+33]..[764,27432+36]) ghost
Ppat_tuple
[
  pattern (typing/includecore.ml[764,27432+33]..[764,27432+35])
    Ppat_var "t2" (typing/includecore.ml[764,27432+33]..[764,27432+35])
  pattern (typing/includecore.ml[764,27432+35]..[764,27432+36]) ghost
    Ppat_construct "[]" (typing/includecore.ml[764,27432+35]..[764,27432+36]) ghost
    None
]
                                                                ]
                                                              expression (typing/includecore.ml[764,27432+40]..[764,27432+74])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[764,27432+40]..[764,27432+44])
                                                                  Pexp_ident "loop" (typing/includecore.ml[764,27432+40]..[764,27432+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[764,27432+45]..[764,27432+56])
                                                                      Pexp_construct "::" (typing/includecore.ml[764,27432+49]..[764,27432+51])
                                                                      Some
expression (typing/includecore.ml[764,27432+46]..[764,27432+55]) ghost
  Pexp_tuple
  [
    expression (typing/includecore.ml[764,27432+46]..[764,27432+48])
      Pexp_ident "t1" (typing/includecore.ml[764,27432+46]..[764,27432+48])
    expression (typing/includecore.ml[764,27432+52]..[764,27432+55])
      Pexp_ident "tl1" (typing/includecore.ml[764,27432+52]..[764,27432+55])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[764,27432+57]..[764,27432+68])
                                                                      Pexp_construct "::" (typing/includecore.ml[764,27432+61]..[764,27432+63])
                                                                      Some
expression (typing/includecore.ml[764,27432+58]..[764,27432+67]) ghost
  Pexp_tuple
  [
    expression (typing/includecore.ml[764,27432+58]..[764,27432+60])
      Pexp_ident "t2" (typing/includecore.ml[764,27432+58]..[764,27432+60])
    expression (typing/includecore.ml[764,27432+64]..[764,27432+67])
      Pexp_ident "tl2" (typing/includecore.ml[764,27432+64]..[764,27432+67])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[764,27432+69]..[764,27432+74])
                                                                      Pexp_ident "pairs" (typing/includecore.ml[764,27432+69]..[764,27432+74])
                                                                ]
                                                            <case>
                                                              pattern (typing/includecore.ml[765,27507+16]..[765,27507+30])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[765,27507+16]..[765,27507+20])
                                                                    Ppat_construct "None" (typing/includecore.ml[765,27507+16]..[765,27507+20])
                                                                    None
                                                                  pattern (typing/includecore.ml[765,27507+22]..[765,27507+26])
                                                                    Ppat_construct "true" (typing/includecore.ml[765,27507+22]..[765,27507+26])
                                                                    None
                                                                  pattern (typing/includecore.ml[765,27507+28]..[765,27507+30])
                                                                    Ppat_construct "[]" (typing/includecore.ml[765,27507+28]..[765,27507+30])
                                                                    None
                                                                ]
                                                              expression (typing/includecore.ml[765,27507+34]..[765,27507+52])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[765,27507+34]..[765,27507+38])
                                                                  Pexp_ident "loop" (typing/includecore.ml[765,27507+34]..[765,27507+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[765,27507+39]..[765,27507+42])
                                                                      Pexp_ident "tl1" (typing/includecore.ml[765,27507+39]..[765,27507+42])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[765,27507+43]..[765,27507+46])
                                                                      Pexp_ident "tl2" (typing/includecore.ml[765,27507+43]..[765,27507+46])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[765,27507+47]..[765,27507+52])
                                                                      Pexp_ident "pairs" (typing/includecore.ml[765,27507+47]..[765,27507+52])
                                                                ]
                                                            <case>
                                                              pattern (typing/includecore.ml[766,27560+16]..[766,27560+23])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[766,27560+16]..[766,27560+17])
                                                                    Ppat_any
                                                                  pattern (typing/includecore.ml[766,27560+19]..[766,27560+20])
                                                                    Ppat_any
                                                                  pattern (typing/includecore.ml[766,27560+22]..[766,27560+23])
                                                                    Ppat_any
                                                                ]
                                                              expression (typing/includecore.ml[766,27560+27]..[766,27560+58])
                                                                Pexp_construct "Some" (typing/includecore.ml[766,27560+27]..[766,27560+31])
                                                                Some
                                                                  expression (typing/includecore.ml[766,27560+32]..[766,27560+58])
                                                                    Pexp_construct "Incompatible_types_for" (typing/includecore.ml[766,27560+33]..[766,27560+55])
                                                                    Some
                                                                      expression (typing/includecore.ml[766,27560+56]..[766,27560+57])
Pexp_ident "s" (typing/includecore.ml[766,27560+56]..[766,27560+57])
                                                          ]
                                                      <case>
                                                        pattern (typing/includecore.ml[768,27635+12]..[768,27635+31])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[768,27635+12]..[768,27635+22])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[768,27635+12]..[768,27635+20])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[768,27635+21]..[768,27635+22])
                                                                  Ppat_any
                                                            pattern (typing/includecore.ml[768,27635+24]..[768,27635+31])
                                                              Ppat_construct "Rabsent" (typing/includecore.ml[768,27635+24]..[768,27635+31])
                                                              None
                                                          ]
                                                        expression (typing/includecore.ml[769,27670+14]..[769,27670+67])
                                                          Pexp_construct "Some" (typing/includecore.ml[769,27670+14]..[769,27670+18])
                                                          Some
                                                            expression (typing/includecore.ml[769,27670+19]..[769,27670+67])
                                                              Pexp_constraint
                                                              expression (typing/includecore.ml[769,27670+20]..[769,27670+39])
                                                                Pexp_construct "Missing" (typing/includecore.ml[769,27670+20]..[769,27670+27])
                                                                Some
                                                                  expression (typing/includecore.ml[769,27670+28]..[769,27670+39])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/includecore.ml[769,27670+29]..[769,27670+35])
Pexp_construct "Second" (typing/includecore.ml[769,27670+29]..[769,27670+35])
None
                                                                      expression (typing/includecore.ml[769,27670+37]..[769,27670+38])
Pexp_ident "s" (typing/includecore.ml[769,27670+37]..[769,27670+38])
                                                                    ]
                                                              core_type (typing/includecore.ml[769,27670+42]..[769,27670+66])
                                                                Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[769,27670+42]..[769,27670+66])
                                                                []
                                                      <case>
                                                        pattern (typing/includecore.ml[770,27738+12]..[770,27738+66])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[770,27738+12]..[770,27738+38])
                                                              Ppat_construct "Reither" (typing/includecore.ml[770,27738+12]..[770,27738+19])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[770,27738+19]..[770,27738+38])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/includecore.ml[770,27738+20]..[770,27738+26])
                                                                      Ppat_var "const1" (typing/includecore.ml[770,27738+20]..[770,27738+26])
                                                                    pattern (typing/includecore.ml[770,27738+28]..[770,27738+31])
                                                                      Ppat_var "ts1" (typing/includecore.ml[770,27738+28]..[770,27738+31])
                                                                    pattern (typing/includecore.ml[770,27738+33]..[770,27738+34])
                                                                      Ppat_any
                                                                    pattern (typing/includecore.ml[770,27738+36]..[770,27738+37])
                                                                      Ppat_any
                                                                  ]
                                                            pattern (typing/includecore.ml[770,27738+40]..[770,27738+66])
                                                              Ppat_construct "Reither" (typing/includecore.ml[770,27738+40]..[770,27738+47])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[770,27738+47]..[770,27738+66])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/includecore.ml[770,27738+48]..[770,27738+54])
                                                                      Ppat_var "const2" (typing/includecore.ml[770,27738+48]..[770,27738+54])
                                                                    pattern (typing/includecore.ml[770,27738+56]..[770,27738+59])
                                                                      Ppat_var "ts2" (typing/includecore.ml[770,27738+56]..[770,27738+59])
                                                                    pattern (typing/includecore.ml[770,27738+61]..[770,27738+62])
                                                                      Ppat_any
                                                                    pattern (typing/includecore.ml[770,27738+64]..[770,27738+65])
                                                                      Ppat_any
                                                                  ]
                                                          ]
                                                        expression (typing/includecore.ml[771,27808+14]..[774,27953+47])
                                                          Pexp_ifthenelse
                                                          expression (typing/includecore.ml[771,27808+17]..[771,27808+69])
                                                            Pexp_apply
                                                            expression (typing/includecore.ml[771,27808+33]..[771,27808+35])
                                                              Pexp_ident "&&" (typing/includecore.ml[771,27808+33]..[771,27808+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[771,27808+17]..[771,27808+32])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[771,27808+24]..[771,27808+25])
                                                                    Pexp_ident "=" (typing/includecore.ml[771,27808+24]..[771,27808+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[771,27808+17]..[771,27808+23])
Pexp_ident "const1" (typing/includecore.ml[771,27808+17]..[771,27808+23])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[771,27808+26]..[771,27808+32])
Pexp_ident "const2" (typing/includecore.ml[771,27808+26]..[771,27808+32])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[771,27808+36]..[771,27808+69])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[771,27808+52]..[771,27808+53])
                                                                    Pexp_ident "=" (typing/includecore.ml[771,27808+52]..[771,27808+53])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[771,27808+36]..[771,27808+51])
Pexp_apply
expression (typing/includecore.ml[771,27808+36]..[771,27808+47])
  Pexp_ident "List.length" (typing/includecore.ml[771,27808+36]..[771,27808+47])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[771,27808+48]..[771,27808+51])
      Pexp_ident "ts1" (typing/includecore.ml[771,27808+48]..[771,27808+51])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[771,27808+54]..[771,27808+69])
Pexp_apply
expression (typing/includecore.ml[771,27808+54]..[771,27808+65])
  Pexp_ident "List.length" (typing/includecore.ml[771,27808+54]..[771,27808+65])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[771,27808+66]..[771,27808+69])
      Pexp_ident "ts2" (typing/includecore.ml[771,27808+66]..[771,27808+69])
]
                                                                  ]
                                                            ]
                                                          expression (typing/includecore.ml[772,27883+16]..[772,27883+50])
                                                            Pexp_apply
                                                            expression (typing/includecore.ml[772,27883+16]..[772,27883+20])
                                                              Pexp_ident "loop" (typing/includecore.ml[772,27883+16]..[772,27883+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[772,27883+21]..[772,27883+32])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[772,27883+26]..[772,27883+27])
                                                                    Pexp_ident "@" (typing/includecore.ml[772,27883+26]..[772,27883+27])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[772,27883+22]..[772,27883+25])
Pexp_ident "ts1" (typing/includecore.ml[772,27883+22]..[772,27883+25])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[772,27883+28]..[772,27883+31])
Pexp_ident "tl1" (typing/includecore.ml[772,27883+28]..[772,27883+31])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[772,27883+33]..[772,27883+44])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[772,27883+38]..[772,27883+39])
                                                                    Pexp_ident "@" (typing/includecore.ml[772,27883+38]..[772,27883+39])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[772,27883+34]..[772,27883+37])
Pexp_ident "ts2" (typing/includecore.ml[772,27883+34]..[772,27883+37])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[772,27883+40]..[772,27883+43])
Pexp_ident "tl2" (typing/includecore.ml[772,27883+40]..[772,27883+43])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[772,27883+45]..[772,27883+50])
                                                                  Pexp_ident "pairs" (typing/includecore.ml[772,27883+45]..[772,27883+50])
                                                            ]
                                                          Some
                                                            expression (typing/includecore.ml[774,27953+16]..[774,27953+47])
                                                              Pexp_construct "Some" (typing/includecore.ml[774,27953+16]..[774,27953+20])
                                                              Some
                                                                expression (typing/includecore.ml[774,27953+21]..[774,27953+47])
                                                                  Pexp_construct "Incompatible_types_for" (typing/includecore.ml[774,27953+22]..[774,27953+44])
                                                                  Some
                                                                    expression (typing/includecore.ml[774,27953+45]..[774,27953+46])
                                                                      Pexp_ident "s" (typing/includecore.ml[774,27953+45]..[774,27953+46])
                                                      <case>
                                                        pattern (typing/includecore.ml[775,28001+12]..[775,28001+33])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[775,28001+12]..[775,28001+21])
                                                              Ppat_construct "Reither" (typing/includecore.ml[775,28001+12]..[775,28001+19])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[775,28001+20]..[775,28001+21])
                                                                  Ppat_any
                                                            pattern (typing/includecore.ml[775,28001+23]..[775,28001+33])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[775,28001+23]..[775,28001+31])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[775,28001+32]..[775,28001+33])
                                                                  Ppat_any
                                                          ]
                                                        expression (typing/includecore.ml[776,28038+14]..[776,28038+31])
                                                          Pexp_construct "Some" (typing/includecore.ml[776,28038+14]..[776,28038+18])
                                                          Some
                                                            expression (typing/includecore.ml[776,28038+19]..[776,28038+31])
                                                              Pexp_construct "Presence" (typing/includecore.ml[776,28038+20]..[776,28038+28])
                                                              Some
                                                                expression (typing/includecore.ml[776,28038+29]..[776,28038+30])
                                                                  Pexp_ident "s" (typing/includecore.ml[776,28038+29]..[776,28038+30])
                                                      <case>
                                                        pattern (typing/includecore.ml[777,28070+12]..[777,28070+30])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[777,28070+12]..[777,28070+21])
                                                              Ppat_construct "Reither" (typing/includecore.ml[777,28070+12]..[777,28070+19])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[777,28070+20]..[777,28070+21])
                                                                  Ppat_any
                                                            pattern (typing/includecore.ml[777,28070+23]..[777,28070+30])
                                                              Ppat_construct "Rabsent" (typing/includecore.ml[777,28070+23]..[777,28070+30])
                                                              None
                                                          ]
                                                        expression (typing/includecore.ml[778,28104+14]..[778,28104+67])
                                                          Pexp_construct "Some" (typing/includecore.ml[778,28104+14]..[778,28104+18])
                                                          Some
                                                            expression (typing/includecore.ml[778,28104+19]..[778,28104+67])
                                                              Pexp_constraint
                                                              expression (typing/includecore.ml[778,28104+20]..[778,28104+39])
                                                                Pexp_construct "Missing" (typing/includecore.ml[778,28104+20]..[778,28104+27])
                                                                Some
                                                                  expression (typing/includecore.ml[778,28104+28]..[778,28104+39])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/includecore.ml[778,28104+29]..[778,28104+35])
Pexp_construct "Second" (typing/includecore.ml[778,28104+29]..[778,28104+35])
None
                                                                      expression (typing/includecore.ml[778,28104+37]..[778,28104+38])
Pexp_ident "s" (typing/includecore.ml[778,28104+37]..[778,28104+38])
                                                                    ]
                                                              core_type (typing/includecore.ml[778,28104+42]..[778,28104+66])
                                                                Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[778,28104+42]..[778,28104+66])
                                                                []
                                                      <case>
                                                        pattern (typing/includecore.ml[779,28172+12]..[779,28172+42])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[779,28172+12]..[779,28172+19])
                                                              Ppat_construct "Rabsent" (typing/includecore.ml[779,28172+12]..[779,28172+19])
                                                              None
                                                            pattern (typing/includecore.ml[779,28172+21]..[779,28172+42])
                                                              Ppat_or
                                                              pattern (typing/includecore.ml[779,28172+22]..[779,28172+31])
                                                                Ppat_construct "Reither" (typing/includecore.ml[779,28172+22]..[779,28172+29])
                                                                Some
                                                                  []
                                                                  pattern (typing/includecore.ml[779,28172+30]..[779,28172+31])
                                                                    Ppat_any
                                                              pattern (typing/includecore.ml[779,28172+34]..[779,28172+41])
                                                                Ppat_construct "Rabsent" (typing/includecore.ml[779,28172+34]..[779,28172+41])
                                                                None
                                                          ]
                                                        expression (typing/includecore.ml[780,28218+14]..[780,28218+32])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[780,28218+14]..[780,28218+18])
                                                            Pexp_ident "loop" (typing/includecore.ml[780,28218+14]..[780,28218+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[780,28218+19]..[780,28218+22])
                                                                Pexp_ident "tl1" (typing/includecore.ml[780,28218+19]..[780,28218+22])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[780,28218+23]..[780,28218+26])
                                                                Pexp_ident "tl2" (typing/includecore.ml[780,28218+23]..[780,28218+26])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[780,28218+27]..[780,28218+32])
                                                                Pexp_ident "pairs" (typing/includecore.ml[780,28218+27]..[780,28218+32])
                                                          ]
                                                      <case>
                                                        pattern (typing/includecore.ml[781,28251+12]..[781,28251+31])
                                                          Ppat_tuple
                                                          [
                                                            pattern (typing/includecore.ml[781,28251+12]..[781,28251+19])
                                                              Ppat_construct "Rabsent" (typing/includecore.ml[781,28251+12]..[781,28251+19])
                                                              None
                                                            pattern (typing/includecore.ml[781,28251+21]..[781,28251+31])
                                                              Ppat_construct "Rpresent" (typing/includecore.ml[781,28251+21]..[781,28251+29])
                                                              Some
                                                                []
                                                                pattern (typing/includecore.ml[781,28251+30]..[781,28251+31])
                                                                  Ppat_any
                                                          ]
                                                        expression (typing/includecore.ml[782,28286+14]..[782,28286+66])
                                                          Pexp_construct "Some" (typing/includecore.ml[782,28286+14]..[782,28286+18])
                                                          Some
                                                            expression (typing/includecore.ml[782,28286+19]..[782,28286+66])
                                                              Pexp_constraint
                                                              expression (typing/includecore.ml[782,28286+20]..[782,28286+38])
                                                                Pexp_construct "Missing" (typing/includecore.ml[782,28286+20]..[782,28286+27])
                                                                Some
                                                                  expression (typing/includecore.ml[782,28286+28]..[782,28286+38])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/includecore.ml[782,28286+29]..[782,28286+34])
Pexp_construct "First" (typing/includecore.ml[782,28286+29]..[782,28286+34])
None
                                                                      expression (typing/includecore.ml[782,28286+36]..[782,28286+37])
Pexp_ident "s" (typing/includecore.ml[782,28286+36]..[782,28286+37])
                                                                    ]
                                                              core_type (typing/includecore.ml[782,28286+41]..[782,28286+65])
                                                                Ptyp_constr "private_variant_mismatch" (typing/includecore.ml[782,28286+41]..[782,28286+65])
                                                                []
                                                    ]
                                              ]
                                  ]
                                  expression (typing/includecore.ml[785,28372+4]..[785,28372+30])
                                    Pexp_apply
                                    expression (typing/includecore.ml[785,28372+4]..[785,28372+8])
                                      Pexp_ident "loop" (typing/includecore.ml[785,28372+4]..[785,28372+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[785,28372+9]..[785,28372+16])
                                          Pexp_ident "params1" (typing/includecore.ml[785,28372+9]..[785,28372+16])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[785,28372+17]..[785,28372+24])
                                          Pexp_ident "params2" (typing/includecore.ml[785,28372+17]..[785,28372+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[785,28372+25]..[785,28372+30])
                                          Pexp_ident "pairs" (typing/includecore.ml[785,28372+25]..[785,28372+30])
                                    ]
    ]
  structure_item (typing/includecore.ml[787,28404+0]..[802,28891+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[787,28404+4]..[787,28404+18])
          Ppat_var "private_object" (typing/includecore.ml[787,28404+4]..[787,28404+18])
        expression (typing/includecore.ml[787,28404+19]..[802,28891+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[787,28404+19]..[787,28404+22])
            Ppat_var "env" (typing/includecore.ml[787,28404+19]..[787,28404+22])
          expression (typing/includecore.ml[787,28404+23]..[802,28891+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[787,28404+23]..[787,28404+30])
              Ppat_var "fields1" (typing/includecore.ml[787,28404+23]..[787,28404+30])
            expression (typing/includecore.ml[787,28404+31]..[802,28891+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[787,28404+31]..[787,28404+38])
                Ppat_var "params1" (typing/includecore.ml[787,28404+31]..[787,28404+38])
              expression (typing/includecore.ml[787,28404+39]..[802,28891+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[787,28404+39]..[787,28404+46])
                  Ppat_var "fields2" (typing/includecore.ml[787,28404+39]..[787,28404+46])
                expression (typing/includecore.ml[787,28404+47]..[802,28891+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[787,28404+47]..[787,28404+54])
                    Ppat_var "params2" (typing/includecore.ml[787,28404+47]..[787,28404+54])
                  expression (typing/includecore.ml[788,28461+2]..[802,28891+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includecore.ml[788,28461+6]..[788,28461+26])
                          Ppat_tuple
                          [
                            pattern (typing/includecore.ml[788,28461+6]..[788,28461+11])
                              Ppat_var "pairs" (typing/includecore.ml[788,28461+6]..[788,28461+11])
                            pattern (typing/includecore.ml[788,28461+13]..[788,28461+19])
                              Ppat_var "_miss1" (typing/includecore.ml[788,28461+13]..[788,28461+19])
                            pattern (typing/includecore.ml[788,28461+21]..[788,28461+26])
                              Ppat_var "miss2" (typing/includecore.ml[788,28461+21]..[788,28461+26])
                          ]
                        expression (typing/includecore.ml[788,28461+29]..[788,28461+67])
                          Pexp_apply
                          expression (typing/includecore.ml[788,28461+29]..[788,28461+51])
                            Pexp_ident "Ctype.associate_fields" (typing/includecore.ml[788,28461+29]..[788,28461+51])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[788,28461+52]..[788,28461+59])
                                Pexp_ident "fields1" (typing/includecore.ml[788,28461+52]..[788,28461+59])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[788,28461+60]..[788,28461+67])
                                Pexp_ident "fields2" (typing/includecore.ml[788,28461+60]..[788,28461+67])
                          ]
                    ]
                    expression (typing/includecore.ml[789,28532+2]..[802,28891+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[789,28532+6]..[789,28532+9])
                            Ppat_var "err" (typing/includecore.ml[789,28532+6]..[789,28532+9])
                          expression (typing/includecore.ml[790,28544+4]..[792,28582+40])
                            Pexp_match
                            expression (typing/includecore.ml[790,28544+10]..[790,28544+15])
                              Pexp_ident "miss2" (typing/includecore.ml[790,28544+10]..[790,28544+15])
                            [
                              <case>
                                pattern (typing/includecore.ml[791,28565+6]..[791,28565+8])
                                  Ppat_construct "[]" (typing/includecore.ml[791,28565+6]..[791,28565+8])
                                  None
                                expression (typing/includecore.ml[791,28565+12]..[791,28565+16])
                                  Pexp_construct "None" (typing/includecore.ml[791,28565+12]..[791,28565+16])
                                  None
                              <case>
                                pattern (typing/includecore.ml[792,28582+6]..[792,28582+20])
                                  Ppat_construct "::" (typing/includecore.ml[792,28582+16]..[792,28582+18])
                                  Some
                                    []
                                    pattern (typing/includecore.ml[792,28582+6]..[792,28582+20]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[792,28582+6]..[792,28582+15])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includecore.ml[792,28582+7]..[792,28582+8])
                                              Ppat_var "f" (typing/includecore.ml[792,28582+7]..[792,28582+8])
                                            pattern (typing/includecore.ml[792,28582+10]..[792,28582+11])
                                              Ppat_any
                                            pattern (typing/includecore.ml[792,28582+13]..[792,28582+14])
                                              Ppat_any
                                          ]
                                        pattern (typing/includecore.ml[792,28582+19]..[792,28582+20])
                                          Ppat_any
                                      ]
                                expression (typing/includecore.ml[792,28582+24]..[792,28582+40])
                                  Pexp_construct "Some" (typing/includecore.ml[792,28582+24]..[792,28582+28])
                                  Some
                                    expression (typing/includecore.ml[792,28582+29]..[792,28582+40])
                                      Pexp_construct "Missing" (typing/includecore.ml[792,28582+30]..[792,28582+37])
                                      Some
                                        expression (typing/includecore.ml[792,28582+38]..[792,28582+39])
                                          Pexp_ident "f" (typing/includecore.ml[792,28582+38]..[792,28582+39])
                            ]
                      ]
                      expression (typing/includecore.ml[794,28628+2]..[802,28891+5])
                        Pexp_ifthenelse
                        expression (typing/includecore.ml[794,28628+5]..[794,28628+16])
                          Pexp_apply
                          expression (typing/includecore.ml[794,28628+9]..[794,28628+11])
                            Pexp_ident "<>" (typing/includecore.ml[794,28628+9]..[794,28628+11])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[794,28628+5]..[794,28628+8])
                                Pexp_ident "err" (typing/includecore.ml[794,28628+5]..[794,28628+8])
                            <arg>
                            Nolabel
                              expression (typing/includecore.ml[794,28628+12]..[794,28628+16])
                                Pexp_construct "None" (typing/includecore.ml[794,28628+12]..[794,28628+16])
                                None
                          ]
                        expression (typing/includecore.ml[794,28628+22]..[794,28628+25])
                          Pexp_ident "err" (typing/includecore.ml[794,28628+22]..[794,28628+25])
                        Some
                          expression (typing/includecore.ml[795,28659+2]..[802,28891+5])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includecore.ml[795,28659+6]..[795,28659+14])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includecore.ml[795,28659+6]..[795,28659+9])
                                      Ppat_var "tl1" (typing/includecore.ml[795,28659+6]..[795,28659+9])
                                    pattern (typing/includecore.ml[795,28659+11]..[795,28659+14])
                                      Ppat_var "tl2" (typing/includecore.ml[795,28659+11]..[795,28659+14])
                                  ]
                                expression (typing/includecore.ml[796,28676+4]..[796,28676+61])
                                  Pexp_apply
                                  expression (typing/includecore.ml[796,28676+4]..[796,28676+14])
                                    Pexp_ident "List.split" (typing/includecore.ml[796,28676+4]..[796,28676+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[796,28676+15]..[796,28676+61])
                                        Pexp_apply
                                        expression (typing/includecore.ml[796,28676+16]..[796,28676+24])
                                          Pexp_ident "List.map" (typing/includecore.ml[796,28676+16]..[796,28676+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[796,28676+25]..[796,28676+54])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/includecore.ml[796,28676+30]..[796,28676+43])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/includecore.ml[796,28676+31]..[796,28676+32])
                                                    Ppat_any
                                                  pattern (typing/includecore.ml[796,28676+33]..[796,28676+34])
                                                    Ppat_any
                                                  pattern (typing/includecore.ml[796,28676+35]..[796,28676+37])
                                                    Ppat_var "t1" (typing/includecore.ml[796,28676+35]..[796,28676+37])
                                                  pattern (typing/includecore.ml[796,28676+38]..[796,28676+39])
                                                    Ppat_any
                                                  pattern (typing/includecore.ml[796,28676+40]..[796,28676+42])
                                                    Ppat_var "t2" (typing/includecore.ml[796,28676+40]..[796,28676+42])
                                                ]
                                              expression (typing/includecore.ml[796,28676+47]..[796,28676+53])
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[796,28676+47]..[796,28676+49])
                                                    Pexp_ident "t1" (typing/includecore.ml[796,28676+47]..[796,28676+49])
                                                  expression (typing/includecore.ml[796,28676+51]..[796,28676+53])
                                                    Pexp_ident "t2" (typing/includecore.ml[796,28676+51]..[796,28676+53])
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[796,28676+55]..[796,28676+60])
                                              Pexp_ident "pairs" (typing/includecore.ml[796,28676+55]..[796,28676+60])
                                        ]
                                  ]
                            ]
                            expression (typing/includecore.ml[798,28743+2]..[802,28891+5])
                              Pexp_match
                              expression (typing/includecore.ml[799,28751+10]..[799,28751+62])
                                Pexp_apply
                                expression (typing/includecore.ml[799,28751+10]..[799,28751+21])
                                  Pexp_ident "Ctype.equal" (typing/includecore.ml[799,28751+10]..[799,28751+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[799,28751+22]..[799,28751+25])
                                      Pexp_ident "env" (typing/includecore.ml[799,28751+22]..[799,28751+25])
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[799,28751+26]..[799,28751+30])
                                      Pexp_construct "true" (typing/includecore.ml[799,28751+26]..[799,28751+30])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[799,28751+31]..[799,28751+46])
                                      Pexp_apply
                                      expression (typing/includecore.ml[799,28751+40]..[799,28751+41])
                                        Pexp_ident "@" (typing/includecore.ml[799,28751+40]..[799,28751+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[799,28751+32]..[799,28751+39])
                                            Pexp_ident "params1" (typing/includecore.ml[799,28751+32]..[799,28751+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[799,28751+42]..[799,28751+45])
                                            Pexp_ident "tl1" (typing/includecore.ml[799,28751+42]..[799,28751+45])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[799,28751+47]..[799,28751+62])
                                      Pexp_apply
                                      expression (typing/includecore.ml[799,28751+56]..[799,28751+57])
                                        Pexp_ident "@" (typing/includecore.ml[799,28751+56]..[799,28751+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[799,28751+48]..[799,28751+55])
                                            Pexp_ident "params2" (typing/includecore.ml[799,28751+48]..[799,28751+55])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[799,28751+58]..[799,28751+61])
                                            Pexp_ident "tl2" (typing/includecore.ml[799,28751+58]..[799,28751+61])
                                      ]
                                ]
                              [
                                <case>
                                  pattern (typing/includecore.ml[800,28819+6]..[800,28819+34])
                                    Ppat_exception
                                    pattern (typing/includecore.ml[800,28819+16]..[800,28819+34])
                                      Ppat_construct "Ctype.Equality" (typing/includecore.ml[800,28819+16]..[800,28819+30])
                                      Some
                                        []
                                        pattern (typing/includecore.ml[800,28819+31]..[800,28819+34])
                                          Ppat_var "err" (typing/includecore.ml[800,28819+31]..[800,28819+34])
                                  expression (typing/includecore.ml[800,28819+38]..[800,28819+54])
                                    Pexp_construct "Some" (typing/includecore.ml[800,28819+38]..[800,28819+42])
                                    Some
                                      expression (typing/includecore.ml[800,28819+43]..[800,28819+54])
                                        Pexp_construct "Types" (typing/includecore.ml[800,28819+44]..[800,28819+49])
                                        Some
                                          expression (typing/includecore.ml[800,28819+50]..[800,28819+53])
                                            Pexp_ident "err" (typing/includecore.ml[800,28819+50]..[800,28819+53])
                                <case>
                                  pattern (typing/includecore.ml[801,28874+6]..[801,28874+8])
                                    Ppat_construct "()" (typing/includecore.ml[801,28874+6]..[801,28874+8])
                                    None
                                  expression (typing/includecore.ml[801,28874+12]..[801,28874+16])
                                    Pexp_construct "None" (typing/includecore.ml[801,28874+12]..[801,28874+16])
                                    None
                              ]
    ]
  structure_item (typing/includecore.ml[804,28898+0]..[846,30670+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[804,28898+4]..[804,28898+17])
          Ppat_var "type_manifest" (typing/includecore.ml[804,28898+4]..[804,28898+17])
        expression (typing/includecore.ml[804,28898+18]..[846,30670+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includecore.ml[804,28898+18]..[804,28898+21])
            Ppat_var "env" (typing/includecore.ml[804,28898+18]..[804,28898+21])
          expression (typing/includecore.ml[804,28898+22]..[846,30670+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[804,28898+22]..[804,28898+25])
              Ppat_var "ty1" (typing/includecore.ml[804,28898+22]..[804,28898+25])
            expression (typing/includecore.ml[804,28898+26]..[846,30670+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[804,28898+26]..[804,28898+33])
                Ppat_var "params1" (typing/includecore.ml[804,28898+26]..[804,28898+33])
              expression (typing/includecore.ml[804,28898+34]..[846,30670+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[804,28898+34]..[804,28898+37])
                  Ppat_var "ty2" (typing/includecore.ml[804,28898+34]..[804,28898+37])
                expression (typing/includecore.ml[804,28898+38]..[846,30670+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[804,28898+38]..[804,28898+45])
                    Ppat_var "params2" (typing/includecore.ml[804,28898+38]..[804,28898+45])
                  expression (typing/includecore.ml[804,28898+46]..[846,30670+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[804,28898+46]..[804,28898+51])
                      Ppat_var "priv2" (typing/includecore.ml[804,28898+46]..[804,28898+51])
                    expression (typing/includecore.ml[804,28898+52]..[846,30670+7]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[804,28898+52]..[804,28898+57])
                        Ppat_var "kind2" (typing/includecore.ml[804,28898+52]..[804,28898+57])
                      expression (typing/includecore.ml[805,28958+2]..[846,30670+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includecore.ml[805,28958+6]..[805,28958+10])
                              Ppat_var "ty1'" (typing/includecore.ml[805,28958+6]..[805,28958+10])
                            expression (typing/includecore.ml[805,28958+13]..[805,28958+38])
                              Pexp_apply
                              expression (typing/includecore.ml[805,28958+13]..[805,28958+30])
                                Pexp_ident "Ctype.expand_head" (typing/includecore.ml[805,28958+13]..[805,28958+30])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[805,28958+31]..[805,28958+34])
                                    Pexp_ident "env" (typing/includecore.ml[805,28958+31]..[805,28958+34])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[805,28958+35]..[805,28958+38])
                                    Pexp_ident "ty1" (typing/includecore.ml[805,28958+35]..[805,28958+38])
                              ]
                          <def>
                            pattern (typing/includecore.ml[805,28958+43]..[805,28958+47])
                              Ppat_var "ty2'" (typing/includecore.ml[805,28958+43]..[805,28958+47])
                            expression (typing/includecore.ml[805,28958+50]..[805,28958+75])
                              Pexp_apply
                              expression (typing/includecore.ml[805,28958+50]..[805,28958+67])
                                Pexp_ident "Ctype.expand_head" (typing/includecore.ml[805,28958+50]..[805,28958+67])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[805,28958+68]..[805,28958+71])
                                    Pexp_ident "env" (typing/includecore.ml[805,28958+68]..[805,28958+71])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[805,28958+72]..[805,28958+75])
                                    Pexp_ident "ty2" (typing/includecore.ml[805,28958+72]..[805,28958+75])
                              ]
                        ]
                        expression (typing/includecore.ml[806,29037+2]..[846,30670+7])
                          Pexp_match
                          expression (typing/includecore.ml[806,29037+8]..[806,29037+36])
                            Pexp_tuple
                            [
                              expression (typing/includecore.ml[806,29037+8]..[806,29037+21])
                                Pexp_apply
                                expression (typing/includecore.ml[806,29037+8]..[806,29037+16])
                                  Pexp_ident "get_desc" (typing/includecore.ml[806,29037+8]..[806,29037+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[806,29037+17]..[806,29037+21])
                                      Pexp_ident "ty1'" (typing/includecore.ml[806,29037+17]..[806,29037+21])
                                ]
                              expression (typing/includecore.ml[806,29037+23]..[806,29037+36])
                                Pexp_apply
                                expression (typing/includecore.ml[806,29037+23]..[806,29037+31])
                                  Pexp_ident "get_desc" (typing/includecore.ml[806,29037+23]..[806,29037+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[806,29037+32]..[806,29037+36])
                                      Pexp_ident "ty2'" (typing/includecore.ml[806,29037+32]..[806,29037+36])
                                ]
                            ]
                          [
                            <case>
                              pattern (typing/includecore.ml[807,29079+4]..[807,29079+32])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[807,29079+4]..[807,29079+17])
                                    Ppat_construct "Tvariant" (typing/includecore.ml[807,29079+4]..[807,29079+12])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[807,29079+13]..[807,29079+17])
                                        Ppat_var "row1" (typing/includecore.ml[807,29079+13]..[807,29079+17])
                                  pattern (typing/includecore.ml[807,29079+19]..[807,29079+32])
                                    Ppat_construct "Tvariant" (typing/includecore.ml[807,29079+19]..[807,29079+27])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[807,29079+28]..[807,29079+32])
                                        Ppat_var "row2" (typing/includecore.ml[807,29079+28]..[807,29079+32])
                                ]
                              <when>
                                expression (typing/includecore.ml[808,29112+9]..[808,29112+44])
                                  Pexp_apply
                                  expression (typing/includecore.ml[808,29112+9]..[808,29112+18])
                                    Pexp_ident "is_absrow" (typing/includecore.ml[808,29112+9]..[808,29112+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[808,29112+19]..[808,29112+22])
                                        Pexp_ident "env" (typing/includecore.ml[808,29112+19]..[808,29112+22])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[808,29112+23]..[808,29112+44])
                                        Pexp_apply
                                        expression (typing/includecore.ml[808,29112+24]..[808,29112+38])
                                          Pexp_ident "Btype.row_more" (typing/includecore.ml[808,29112+24]..[808,29112+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[808,29112+39]..[808,29112+43])
                                              Pexp_ident "row2" (typing/includecore.ml[808,29112+39]..[808,29112+43])
                                        ]
                                  ]
                              expression (typing/includecore.ml[808,29112+48]..[814,29459+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[809,29166+10]..[809,29166+14])
                                      Ppat_var "row1" (typing/includecore.ml[809,29166+10]..[809,29166+14])
                                    expression (typing/includecore.ml[809,29166+17]..[809,29166+36])
                                      Pexp_apply
                                      expression (typing/includecore.ml[809,29166+17]..[809,29166+31])
                                        Pexp_ident "Btype.row_repr" (typing/includecore.ml[809,29166+17]..[809,29166+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[809,29166+32]..[809,29166+36])
                                            Pexp_ident "row1" (typing/includecore.ml[809,29166+32]..[809,29166+36])
                                      ]
                                  <def>
                                    pattern (typing/includecore.ml[809,29166+41]..[809,29166+45])
                                      Ppat_var "row2" (typing/includecore.ml[809,29166+41]..[809,29166+45])
                                    expression (typing/includecore.ml[809,29166+48]..[809,29166+67])
                                      Pexp_apply
                                      expression (typing/includecore.ml[809,29166+48]..[809,29166+62])
                                        Pexp_ident "Btype.row_repr" (typing/includecore.ml[809,29166+48]..[809,29166+62])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[809,29166+63]..[809,29166+67])
                                            Pexp_ident "row2" (typing/includecore.ml[809,29166+63]..[809,29166+67])
                                      ]
                                ]
                                expression (typing/includecore.ml[810,29237+6]..[813,29401+57])
                                  Pexp_sequence
                                  expression (typing/includecore.ml[810,29237+6]..[810,29237+78])
                                    Pexp_assert
                                    expression (typing/includecore.ml[810,29237+13]..[810,29237+78])
                                      Pexp_apply
                                      expression (typing/includecore.ml[810,29237+14]..[810,29237+28])
                                        Pexp_ident "Ctype.is_equal" (typing/includecore.ml[810,29237+14]..[810,29237+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[810,29237+29]..[810,29237+32])
                                            Pexp_ident "env" (typing/includecore.ml[810,29237+29]..[810,29237+32])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[810,29237+33]..[810,29237+37])
                                            Pexp_construct "true" (typing/includecore.ml[810,29237+33]..[810,29237+37])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[810,29237+38]..[810,29237+52])
                                            Pexp_construct "::" (typing/includecore.ml[810,29237+42]..[810,29237+44])
                                            Some
                                              expression (typing/includecore.ml[810,29237+39]..[810,29237+51]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[810,29237+39]..[810,29237+42])
                                                    Pexp_ident "ty1" (typing/includecore.ml[810,29237+39]..[810,29237+42])
                                                  expression (typing/includecore.ml[810,29237+44]..[810,29237+51])
                                                    Pexp_ident "params1" (typing/includecore.ml[810,29237+44]..[810,29237+51])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[810,29237+53]..[810,29237+77])
                                            Pexp_construct "::" (typing/includecore.ml[810,29237+67]..[810,29237+69])
                                            Some
                                              expression (typing/includecore.ml[810,29237+54]..[810,29237+76]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[810,29237+54]..[810,29237+67])
                                                    Pexp_field
                                                    expression (typing/includecore.ml[810,29237+54]..[810,29237+58])
                                                      Pexp_ident "row2" (typing/includecore.ml[810,29237+54]..[810,29237+58])
                                                    "row_more" (typing/includecore.ml[810,29237+59]..[810,29237+67])
                                                  expression (typing/includecore.ml[810,29237+69]..[810,29237+76])
                                                    Pexp_ident "params2" (typing/includecore.ml[810,29237+69]..[810,29237+76])
                                                ]
                                      ]
                                  expression (typing/includecore.ml[811,29317+6]..[813,29401+57])
                                    Pexp_match
                                    expression (typing/includecore.ml[811,29317+12]..[811,29317+57])
                                      Pexp_apply
                                      expression (typing/includecore.ml[811,29317+12]..[811,29317+27])
                                        Pexp_ident "private_variant" (typing/includecore.ml[811,29317+12]..[811,29317+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[811,29317+28]..[811,29317+31])
                                            Pexp_ident "env" (typing/includecore.ml[811,29317+28]..[811,29317+31])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[811,29317+32]..[811,29317+36])
                                            Pexp_ident "row1" (typing/includecore.ml[811,29317+32]..[811,29317+36])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[811,29317+37]..[811,29317+44])
                                            Pexp_ident "params1" (typing/includecore.ml[811,29317+37]..[811,29317+44])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[811,29317+45]..[811,29317+49])
                                            Pexp_ident "row2" (typing/includecore.ml[811,29317+45]..[811,29317+49])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[811,29317+50]..[811,29317+57])
                                            Pexp_ident "params2" (typing/includecore.ml[811,29317+50]..[811,29317+57])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/includecore.ml[812,29380+8]..[812,29380+12])
                                          Ppat_construct "None" (typing/includecore.ml[812,29380+8]..[812,29380+12])
                                          None
                                        expression (typing/includecore.ml[812,29380+16]..[812,29380+20])
                                          Pexp_construct "None" (typing/includecore.ml[812,29380+16]..[812,29380+20])
                                          None
                                      <case>
                                        pattern (typing/includecore.ml[813,29401+8]..[813,29401+16])
                                          Ppat_construct "Some" (typing/includecore.ml[813,29401+8]..[813,29401+12])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[813,29401+13]..[813,29401+16])
                                              Ppat_var "err" (typing/includecore.ml[813,29401+13]..[813,29401+16])
                                        expression (typing/includecore.ml[813,29401+20]..[813,29401+57])
                                          Pexp_construct "Some" (typing/includecore.ml[813,29401+20]..[813,29401+24])
                                          Some
                                            expression (typing/includecore.ml[813,29401+25]..[813,29401+57])
                                              Pexp_construct "Private_variant" (typing/includecore.ml[813,29401+26]..[813,29401+41])
                                              Some
                                                expression (typing/includecore.ml[813,29401+41]..[813,29401+56])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includecore.ml[813,29401+42]..[813,29401+45])
                                                      Pexp_ident "ty1" (typing/includecore.ml[813,29401+42]..[813,29401+45])
                                                    expression (typing/includecore.ml[813,29401+47]..[813,29401+50])
                                                      Pexp_ident "ty2" (typing/includecore.ml[813,29401+47]..[813,29401+50])
                                                    expression (typing/includecore.ml[813,29401+52]..[813,29401+55])
                                                      Pexp_ident "err" (typing/includecore.ml[813,29401+52]..[813,29401+55])
                                                  ]
                                    ]
                            <case>
                              pattern (typing/includecore.ml[815,29467+4]..[815,29467+38])
                                Ppat_tuple
                                [
                                  pattern (typing/includecore.ml[815,29467+4]..[815,29467+20])
                                    Ppat_construct "Tobject" (typing/includecore.ml[815,29467+4]..[815,29467+11])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[815,29467+12]..[815,29467+20])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[815,29467+13]..[815,29467+16])
                                            Ppat_var "fi1" (typing/includecore.ml[815,29467+13]..[815,29467+16])
                                          pattern (typing/includecore.ml[815,29467+18]..[815,29467+19])
                                            Ppat_any
                                        ]
                                  pattern (typing/includecore.ml[815,29467+22]..[815,29467+38])
                                    Ppat_construct "Tobject" (typing/includecore.ml[815,29467+22]..[815,29467+29])
                                    Some
                                      []
                                      pattern (typing/includecore.ml[815,29467+30]..[815,29467+38])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[815,29467+31]..[815,29467+34])
                                            Ppat_var "fi2" (typing/includecore.ml[815,29467+31]..[815,29467+34])
                                          pattern (typing/includecore.ml[815,29467+36]..[815,29467+37])
                                            Ppat_any
                                        ]
                                ]
                              <when>
                                expression (typing/includecore.ml[816,29506+9]..[816,29506+55])
                                  Pexp_apply
                                  expression (typing/includecore.ml[816,29506+9]..[816,29506+18])
                                    Pexp_ident "is_absrow" (typing/includecore.ml[816,29506+9]..[816,29506+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[816,29506+19]..[816,29506+22])
                                        Pexp_ident "env" (typing/includecore.ml[816,29506+19]..[816,29506+22])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[816,29506+23]..[816,29506+55])
                                        Pexp_apply
                                        expression (typing/includecore.ml[816,29506+24]..[816,29506+27])
                                          Pexp_ident "snd" (typing/includecore.ml[816,29506+24]..[816,29506+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[816,29506+28]..[816,29506+54])
                                              Pexp_apply
                                              expression (typing/includecore.ml[816,29506+29]..[816,29506+49])
                                                Pexp_ident "Ctype.flatten_fields" (typing/includecore.ml[816,29506+29]..[816,29506+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[816,29506+50]..[816,29506+53])
                                                    Pexp_ident "fi2" (typing/includecore.ml[816,29506+50]..[816,29506+53])
                                              ]
                                        ]
                                  ]
                              expression (typing/includecore.ml[816,29506+59]..[823,29897+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[817,29571+10]..[817,29571+25])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includecore.ml[817,29571+11]..[817,29571+18])
                                          Ppat_var "fields2" (typing/includecore.ml[817,29571+11]..[817,29571+18])
                                        pattern (typing/includecore.ml[817,29571+19]..[817,29571+24])
                                          Ppat_var "rest2" (typing/includecore.ml[817,29571+19]..[817,29571+24])
                                      ]
                                    expression (typing/includecore.ml[817,29571+28]..[817,29571+52])
                                      Pexp_apply
                                      expression (typing/includecore.ml[817,29571+28]..[817,29571+48])
                                        Pexp_ident "Ctype.flatten_fields" (typing/includecore.ml[817,29571+28]..[817,29571+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[817,29571+49]..[817,29571+52])
                                            Pexp_ident "fi2" (typing/includecore.ml[817,29571+49]..[817,29571+52])
                                      ]
                                ]
                                expression (typing/includecore.ml[818,29627+6]..[822,29840+56])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includecore.ml[818,29627+10]..[818,29627+21])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includecore.ml[818,29627+11]..[818,29627+18])
                                            Ppat_var "fields1" (typing/includecore.ml[818,29627+11]..[818,29627+18])
                                          pattern (typing/includecore.ml[818,29627+19]..[818,29627+20])
                                            Ppat_any
                                        ]
                                      expression (typing/includecore.ml[818,29627+24]..[818,29627+48])
                                        Pexp_apply
                                        expression (typing/includecore.ml[818,29627+24]..[818,29627+44])
                                          Pexp_ident "Ctype.flatten_fields" (typing/includecore.ml[818,29627+24]..[818,29627+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[818,29627+45]..[818,29627+48])
                                              Pexp_ident "fi1" (typing/includecore.ml[818,29627+45]..[818,29627+48])
                                        ]
                                  ]
                                  expression (typing/includecore.ml[819,29679+6]..[822,29840+56])
                                    Pexp_sequence
                                    expression (typing/includecore.ml[819,29679+6]..[819,29679+70])
                                      Pexp_assert
                                      expression (typing/includecore.ml[819,29679+13]..[819,29679+70])
                                        Pexp_apply
                                        expression (typing/includecore.ml[819,29679+14]..[819,29679+28])
                                          Pexp_ident "Ctype.is_equal" (typing/includecore.ml[819,29679+14]..[819,29679+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[819,29679+29]..[819,29679+32])
                                              Pexp_ident "env" (typing/includecore.ml[819,29679+29]..[819,29679+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[819,29679+33]..[819,29679+37])
                                              Pexp_construct "true" (typing/includecore.ml[819,29679+33]..[819,29679+37])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[819,29679+38]..[819,29679+52])
                                              Pexp_construct "::" (typing/includecore.ml[819,29679+42]..[819,29679+44])
                                              Some
                                                expression (typing/includecore.ml[819,29679+39]..[819,29679+51]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includecore.ml[819,29679+39]..[819,29679+42])
                                                      Pexp_ident "ty1" (typing/includecore.ml[819,29679+39]..[819,29679+42])
                                                    expression (typing/includecore.ml[819,29679+44]..[819,29679+51])
                                                      Pexp_ident "params1" (typing/includecore.ml[819,29679+44]..[819,29679+51])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[819,29679+53]..[819,29679+69])
                                              Pexp_construct "::" (typing/includecore.ml[819,29679+59]..[819,29679+61])
                                              Some
                                                expression (typing/includecore.ml[819,29679+54]..[819,29679+68]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includecore.ml[819,29679+54]..[819,29679+59])
                                                      Pexp_ident "rest2" (typing/includecore.ml[819,29679+54]..[819,29679+59])
                                                    expression (typing/includecore.ml[819,29679+61]..[819,29679+68])
                                                      Pexp_ident "params2" (typing/includecore.ml[819,29679+61]..[819,29679+68])
                                                  ]
                                        ]
                                    expression (typing/includecore.ml[820,29751+6]..[822,29840+56])
                                      Pexp_match
                                      expression (typing/includecore.ml[820,29751+12]..[820,29751+62])
                                        Pexp_apply
                                        expression (typing/includecore.ml[820,29751+12]..[820,29751+26])
                                          Pexp_ident "private_object" (typing/includecore.ml[820,29751+12]..[820,29751+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[820,29751+27]..[820,29751+30])
                                              Pexp_ident "env" (typing/includecore.ml[820,29751+27]..[820,29751+30])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[820,29751+31]..[820,29751+38])
                                              Pexp_ident "fields1" (typing/includecore.ml[820,29751+31]..[820,29751+38])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[820,29751+39]..[820,29751+46])
                                              Pexp_ident "params1" (typing/includecore.ml[820,29751+39]..[820,29751+46])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[820,29751+47]..[820,29751+54])
                                              Pexp_ident "fields2" (typing/includecore.ml[820,29751+47]..[820,29751+54])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[820,29751+55]..[820,29751+62])
                                              Pexp_ident "params2" (typing/includecore.ml[820,29751+55]..[820,29751+62])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[821,29819+8]..[821,29819+12])
                                            Ppat_construct "None" (typing/includecore.ml[821,29819+8]..[821,29819+12])
                                            None
                                          expression (typing/includecore.ml[821,29819+16]..[821,29819+20])
                                            Pexp_construct "None" (typing/includecore.ml[821,29819+16]..[821,29819+20])
                                            None
                                        <case>
                                          pattern (typing/includecore.ml[822,29840+8]..[822,29840+16])
                                            Ppat_construct "Some" (typing/includecore.ml[822,29840+8]..[822,29840+12])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[822,29840+13]..[822,29840+16])
                                                Ppat_var "err" (typing/includecore.ml[822,29840+13]..[822,29840+16])
                                          expression (typing/includecore.ml[822,29840+20]..[822,29840+56])
                                            Pexp_construct "Some" (typing/includecore.ml[822,29840+20]..[822,29840+24])
                                            Some
                                              expression (typing/includecore.ml[822,29840+25]..[822,29840+56])
                                                Pexp_construct "Private_object" (typing/includecore.ml[822,29840+26]..[822,29840+40])
                                                Some
                                                  expression (typing/includecore.ml[822,29840+40]..[822,29840+55])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includecore.ml[822,29840+41]..[822,29840+44])
                                                        Pexp_ident "ty1" (typing/includecore.ml[822,29840+41]..[822,29840+44])
                                                      expression (typing/includecore.ml[822,29840+46]..[822,29840+49])
                                                        Pexp_ident "ty2" (typing/includecore.ml[822,29840+46]..[822,29840+49])
                                                      expression (typing/includecore.ml[822,29840+51]..[822,29840+54])
                                                        Pexp_ident "err" (typing/includecore.ml[822,29840+51]..[822,29840+54])
                                                    ]
                                      ]
                            <case>
                              pattern (typing/includecore.ml[824,29905+4]..[824,29905+5])
                                Ppat_any
                              expression (typing/includecore.ml[824,29905+9]..[846,30670+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[825,29920+10]..[825,29920+29])
                                      Ppat_var "is_private_abbrev_2" (typing/includecore.ml[825,29920+10]..[825,29920+29])
                                    expression (typing/includecore.ml[826,29952+8]..[836,30361+23])
                                      Pexp_match
                                      expression (typing/includecore.ml[826,29952+14]..[826,29952+26])
                                        Pexp_tuple
                                        [
                                          expression (typing/includecore.ml[826,29952+14]..[826,29952+19])
                                            Pexp_ident "priv2" (typing/includecore.ml[826,29952+14]..[826,29952+19])
                                          expression (typing/includecore.ml[826,29952+21]..[826,29952+26])
                                            Pexp_ident "kind2" (typing/includecore.ml[826,29952+21]..[826,29952+26])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[827,29984+10]..[827,29984+32])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[827,29984+10]..[827,29984+17])
                                                Ppat_construct "Private" (typing/includecore.ml[827,29984+10]..[827,29984+17])
                                                None
                                              pattern (typing/includecore.ml[827,29984+19]..[827,29984+32])
                                                Ppat_construct "Type_abstract" (typing/includecore.ml[827,29984+19]..[827,29984+32])
                                                None
                                            ]
                                          expression (typing/includecore.ml[827,29984+36]..[835,30347+13])
                                            Pexp_match
                                            expression (typing/includecore.ml[829,30098+18]..[829,30098+31])
                                              Pexp_apply
                                              expression (typing/includecore.ml[829,30098+18]..[829,30098+26])
                                                Pexp_ident "get_desc" (typing/includecore.ml[829,30098+18]..[829,30098+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[829,30098+27]..[829,30098+31])
                                                    Pexp_ident "ty2'" (typing/includecore.ml[829,30098+27]..[829,30098+31])
                                              ]
                                            [
                                              <case>
                                                pattern (typing/includecore.ml[830,30135+14]..[830,30135+26])
                                                  Ppat_construct "Tvariant" (typing/includecore.ml[830,30135+14]..[830,30135+22])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[830,30135+23]..[830,30135+26])
                                                      Ppat_var "row" (typing/includecore.ml[830,30135+23]..[830,30135+26])
                                                expression (typing/includecore.ml[831,30165+16]..[831,30165+56])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[831,30165+16]..[831,30165+19])
                                                    Pexp_ident "not" (typing/includecore.ml[831,30165+16]..[831,30165+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[831,30165+20]..[831,30165+56])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[831,30165+21]..[831,30165+30])
                                                          Pexp_ident "is_absrow" (typing/includecore.ml[831,30165+21]..[831,30165+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[831,30165+31]..[831,30165+34])
                                                              Pexp_ident "env" (typing/includecore.ml[831,30165+31]..[831,30165+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[831,30165+35]..[831,30165+55])
                                                              Pexp_apply
                                                              expression (typing/includecore.ml[831,30165+36]..[831,30165+50])
                                                                Pexp_ident "Btype.row_more" (typing/includecore.ml[831,30165+36]..[831,30165+50])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[831,30165+51]..[831,30165+54])
                                                                    Pexp_ident "row" (typing/includecore.ml[831,30165+51]..[831,30165+54])
                                                              ]
                                                        ]
                                                  ]
                                              <case>
                                                pattern (typing/includecore.ml[832,30222+14]..[832,30222+29])
                                                  Ppat_construct "Tobject" (typing/includecore.ml[832,30222+14]..[832,30222+21])
                                                  Some
                                                    []
                                                    pattern (typing/includecore.ml[832,30222+22]..[832,30222+29])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/includecore.ml[832,30222+23]..[832,30222+25])
                                                          Ppat_var "fi" (typing/includecore.ml[832,30222+23]..[832,30222+25])
                                                        pattern (typing/includecore.ml[832,30222+27]..[832,30222+28])
                                                          Ppat_any
                                                      ]
                                                expression (typing/includecore.ml[833,30255+16]..[833,30255+67])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[833,30255+16]..[833,30255+19])
                                                    Pexp_ident "not" (typing/includecore.ml[833,30255+16]..[833,30255+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[833,30255+20]..[833,30255+67])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[833,30255+21]..[833,30255+30])
                                                          Pexp_ident "is_absrow" (typing/includecore.ml[833,30255+21]..[833,30255+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[833,30255+31]..[833,30255+34])
                                                              Pexp_ident "env" (typing/includecore.ml[833,30255+31]..[833,30255+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[833,30255+35]..[833,30255+66])
                                                              Pexp_apply
                                                              expression (typing/includecore.ml[833,30255+36]..[833,30255+39])
                                                                Pexp_ident "snd" (typing/includecore.ml[833,30255+36]..[833,30255+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[833,30255+40]..[833,30255+65])
                                                                    Pexp_apply
                                                                    expression (typing/includecore.ml[833,30255+41]..[833,30255+61])
                                                                      Pexp_ident "Ctype.flatten_fields" (typing/includecore.ml[833,30255+41]..[833,30255+61])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/includecore.ml[833,30255+62]..[833,30255+64])
  Pexp_ident "fi" (typing/includecore.ml[833,30255+62]..[833,30255+64])
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                              <case>
                                                pattern (typing/includecore.ml[834,30323+14]..[834,30323+15])
                                                  Ppat_any
                                                expression (typing/includecore.ml[834,30323+19]..[834,30323+23])
                                                  Pexp_construct "true" (typing/includecore.ml[834,30323+19]..[834,30323+23])
                                                  None
                                            ]
                                        <case>
                                          pattern (typing/includecore.ml[836,30361+10]..[836,30361+14])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includecore.ml[836,30361+10]..[836,30361+11])
                                                Ppat_any
                                              pattern (typing/includecore.ml[836,30361+13]..[836,30361+14])
                                                Ppat_any
                                            ]
                                          expression (typing/includecore.ml[836,30361+18]..[836,30361+23])
                                            Pexp_construct "false" (typing/includecore.ml[836,30361+18]..[836,30361+23])
                                            None
                                      ]
                                ]
                                expression (typing/includecore.ml[838,30394+6]..[845,30651+18])
                                  Pexp_match
                                  expression (typing/includecore.ml[839,30406+8]..[842,30513+66])
                                    Pexp_ifthenelse
                                    expression (typing/includecore.ml[839,30406+11]..[839,30406+30])
                                      Pexp_ident "is_private_abbrev_2" (typing/includecore.ml[839,30406+11]..[839,30406+30])
                                    expression (typing/includecore.ml[840,30442+10]..[840,30442+57])
                                      Pexp_apply
                                      expression (typing/includecore.ml[840,30442+10]..[840,30442+29])
                                        Pexp_ident "Ctype.equal_private" (typing/includecore.ml[840,30442+10]..[840,30442+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[840,30442+30]..[840,30442+33])
                                            Pexp_ident "env" (typing/includecore.ml[840,30442+30]..[840,30442+33])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[840,30442+34]..[840,30442+41])
                                            Pexp_ident "params1" (typing/includecore.ml[840,30442+34]..[840,30442+41])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[840,30442+42]..[840,30442+45])
                                            Pexp_ident "ty1" (typing/includecore.ml[840,30442+42]..[840,30442+45])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[840,30442+46]..[840,30442+53])
                                            Pexp_ident "params2" (typing/includecore.ml[840,30442+46]..[840,30442+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/includecore.ml[840,30442+54]..[840,30442+57])
                                            Pexp_ident "ty2" (typing/includecore.ml[840,30442+54]..[840,30442+57])
                                      ]
                                    Some
                                      expression (typing/includecore.ml[842,30513+10]..[842,30513+66])
                                        Pexp_apply
                                        expression (typing/includecore.ml[842,30513+10]..[842,30513+21])
                                          Pexp_ident "Ctype.equal" (typing/includecore.ml[842,30513+10]..[842,30513+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[842,30513+22]..[842,30513+25])
                                              Pexp_ident "env" (typing/includecore.ml[842,30513+22]..[842,30513+25])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[842,30513+26]..[842,30513+30])
                                              Pexp_construct "true" (typing/includecore.ml[842,30513+26]..[842,30513+30])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[842,30513+31]..[842,30513+48])
                                              Pexp_apply
                                              expression (typing/includecore.ml[842,30513+40]..[842,30513+41])
                                                Pexp_ident "@" (typing/includecore.ml[842,30513+40]..[842,30513+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[842,30513+32]..[842,30513+39])
                                                    Pexp_ident "params1" (typing/includecore.ml[842,30513+32]..[842,30513+39])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[842,30513+42]..[842,30513+47])
                                                    Pexp_construct "::" (typing/includecore.ml[842,30513+43]..[842,30513+47]) ghost
                                                    Some
                                                      expression (typing/includecore.ml[842,30513+43]..[842,30513+47]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/includecore.ml[842,30513+43]..[842,30513+46])
                                                            Pexp_ident "ty1" (typing/includecore.ml[842,30513+43]..[842,30513+46])
                                                          expression (typing/includecore.ml[842,30513+46]..[842,30513+47]) ghost
                                                            Pexp_construct "[]" (typing/includecore.ml[842,30513+46]..[842,30513+47]) ghost
                                                            None
                                                        ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[842,30513+49]..[842,30513+66])
                                              Pexp_apply
                                              expression (typing/includecore.ml[842,30513+58]..[842,30513+59])
                                                Pexp_ident "@" (typing/includecore.ml[842,30513+58]..[842,30513+59])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[842,30513+50]..[842,30513+57])
                                                    Pexp_ident "params2" (typing/includecore.ml[842,30513+50]..[842,30513+57])
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[842,30513+60]..[842,30513+65])
                                                    Pexp_construct "::" (typing/includecore.ml[842,30513+61]..[842,30513+65]) ghost
                                                    Some
                                                      expression (typing/includecore.ml[842,30513+61]..[842,30513+65]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/includecore.ml[842,30513+61]..[842,30513+64])
                                                            Pexp_ident "ty2" (typing/includecore.ml[842,30513+61]..[842,30513+64])
                                                          expression (typing/includecore.ml[842,30513+64]..[842,30513+65]) ghost
                                                            Pexp_construct "[]" (typing/includecore.ml[842,30513+64]..[842,30513+65]) ghost
                                                            None
                                                        ]
                                              ]
                                        ]
                                  [
                                    <case>
                                      pattern (typing/includecore.ml[844,30591+8]..[844,30591+36])
                                        Ppat_exception
                                        pattern (typing/includecore.ml[844,30591+18]..[844,30591+36])
                                          Ppat_construct "Ctype.Equality" (typing/includecore.ml[844,30591+18]..[844,30591+32])
                                          Some
                                            []
                                            pattern (typing/includecore.ml[844,30591+33]..[844,30591+36])
                                              Ppat_var "err" (typing/includecore.ml[844,30591+33]..[844,30591+36])
                                      expression (typing/includecore.ml[844,30591+40]..[844,30591+59])
                                        Pexp_construct "Some" (typing/includecore.ml[844,30591+40]..[844,30591+44])
                                        Some
                                          expression (typing/includecore.ml[844,30591+45]..[844,30591+59])
                                            Pexp_construct "Manifest" (typing/includecore.ml[844,30591+46]..[844,30591+54])
                                            Some
                                              expression (typing/includecore.ml[844,30591+55]..[844,30591+58])
                                                Pexp_ident "err" (typing/includecore.ml[844,30591+55]..[844,30591+58])
                                    <case>
                                      pattern (typing/includecore.ml[845,30651+8]..[845,30651+10])
                                        Ppat_construct "()" (typing/includecore.ml[845,30651+8]..[845,30651+10])
                                        None
                                      expression (typing/includecore.ml[845,30651+14]..[845,30651+18])
                                        Pexp_construct "None" (typing/includecore.ml[845,30651+14]..[845,30651+18])
                                        None
                                  ]
                          ]
    ]
  structure_item (typing/includecore.ml[848,30679+0]..[957,34763+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[848,30679+4]..[848,30679+21])
          Ppat_var "type_declarations" (typing/includecore.ml[848,30679+4]..[848,30679+21])
        expression (typing/includecore.ml[848,30679+22]..[957,34763+30]) ghost
          Pexp_fun
          Optional "equality"
          Some
            expression (typing/includecore.ml[848,30679+35]..[848,30679+40])
              Pexp_construct "false" (typing/includecore.ml[848,30679+35]..[848,30679+40])
              None
          pattern (typing/includecore.ml[848,30679+24]..[848,30679+32])
            Ppat_var "equality" (typing/includecore.ml[848,30679+24]..[848,30679+32])
          expression (typing/includecore.ml[848,30679+42]..[957,34763+30]) ghost
            Pexp_fun
            Labelled "loc"
            None
            pattern (typing/includecore.ml[848,30679+43]..[848,30679+46])
              Ppat_var "loc" (typing/includecore.ml[848,30679+43]..[848,30679+46])
            expression (typing/includecore.ml[848,30679+47]..[957,34763+30]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includecore.ml[848,30679+47]..[848,30679+50])
                Ppat_var "env" (typing/includecore.ml[848,30679+47]..[848,30679+50])
              expression (typing/includecore.ml[848,30679+51]..[957,34763+30]) ghost
                Pexp_fun
                Labelled "mark"
                None
                pattern (typing/includecore.ml[848,30679+52]..[848,30679+56])
                  Ppat_var "mark" (typing/includecore.ml[848,30679+52]..[848,30679+56])
                expression (typing/includecore.ml[848,30679+57]..[957,34763+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[848,30679+57]..[848,30679+61])
                    Ppat_var "name" (typing/includecore.ml[848,30679+57]..[848,30679+61])
                  expression (typing/includecore.ml[849,30741+6]..[957,34763+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[849,30741+6]..[849,30741+11])
                      Ppat_var "decl1" (typing/includecore.ml[849,30741+6]..[849,30741+11])
                    expression (typing/includecore.ml[849,30741+12]..[957,34763+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includecore.ml[849,30741+12]..[849,30741+16])
                        Ppat_var "path" (typing/includecore.ml[849,30741+12]..[849,30741+16])
                      expression (typing/includecore.ml[849,30741+17]..[957,34763+30]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includecore.ml[849,30741+17]..[849,30741+22])
                          Ppat_var "decl2" (typing/includecore.ml[849,30741+17]..[849,30741+22])
                        expression (typing/includecore.ml[850,30766+2]..[957,34763+30])
                          Pexp_sequence
                          expression (typing/includecore.ml[850,30766+2]..[855,30914+8])
                            Pexp_apply
                            expression (typing/includecore.ml[850,30766+2]..[850,30766+43])
                              Pexp_ident "Builtin_attributes.check_alerts_inclusion" (typing/includecore.ml[850,30766+2]..[850,30766+43])
                            [
                              <arg>
                              Labelled "def"
                                expression (typing/includecore.ml[851,30810+9]..[851,30810+23])
                                  Pexp_field
                                  expression (typing/includecore.ml[851,30810+9]..[851,30810+14])
                                    Pexp_ident "decl1" (typing/includecore.ml[851,30810+9]..[851,30810+14])
                                  "type_loc" (typing/includecore.ml[851,30810+15]..[851,30810+23])
                              <arg>
                              Labelled "use"
                                expression (typing/includecore.ml[852,30834+9]..[852,30834+23])
                                  Pexp_field
                                  expression (typing/includecore.ml[852,30834+9]..[852,30834+14])
                                    Pexp_ident "decl2" (typing/includecore.ml[852,30834+9]..[852,30834+14])
                                  "type_loc" (typing/includecore.ml[852,30834+15]..[852,30834+23])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[853,30858+4]..[853,30858+7])
                                  Pexp_ident "loc" (typing/includecore.ml[853,30858+4]..[853,30858+7])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[854,30866+4]..[854,30866+25])
                                  Pexp_field
                                  expression (typing/includecore.ml[854,30866+4]..[854,30866+9])
                                    Pexp_ident "decl1" (typing/includecore.ml[854,30866+4]..[854,30866+9])
                                  "type_attributes" (typing/includecore.ml[854,30866+10]..[854,30866+25])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[854,30866+26]..[854,30866+47])
                                  Pexp_field
                                  expression (typing/includecore.ml[854,30866+26]..[854,30866+31])
                                    Pexp_ident "decl2" (typing/includecore.ml[854,30866+26]..[854,30866+31])
                                  "type_attributes" (typing/includecore.ml[854,30866+32]..[854,30866+47])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[855,30914+4]..[855,30914+8])
                                  Pexp_ident "name" (typing/includecore.ml[855,30914+4]..[855,30914+8])
                            ]
                          expression (typing/includecore.ml[856,30924+2]..[957,34763+30])
                            Pexp_ifthenelse
                            expression (typing/includecore.ml[856,30924+5]..[856,30924+41])
                              Pexp_apply
                              expression (typing/includecore.ml[856,30924+22]..[856,30924+24])
                                Pexp_ident "<>" (typing/includecore.ml[856,30924+22]..[856,30924+24])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[856,30924+5]..[856,30924+21])
                                    Pexp_field
                                    expression (typing/includecore.ml[856,30924+5]..[856,30924+10])
                                      Pexp_ident "decl1" (typing/includecore.ml[856,30924+5]..[856,30924+10])
                                    "type_arity" (typing/includecore.ml[856,30924+11]..[856,30924+21])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[856,30924+25]..[856,30924+41])
                                    Pexp_field
                                    expression (typing/includecore.ml[856,30924+25]..[856,30924+30])
                                      Pexp_ident "decl2" (typing/includecore.ml[856,30924+25]..[856,30924+30])
                                    "type_arity" (typing/includecore.ml[856,30924+31]..[856,30924+41])
                              ]
                            expression (typing/includecore.ml[856,30924+47]..[856,30924+57])
                              Pexp_construct "Some" (typing/includecore.ml[856,30924+47]..[856,30924+51])
                              Some
                                expression (typing/includecore.ml[856,30924+52]..[856,30924+57])
                                  Pexp_construct "Arity" (typing/includecore.ml[856,30924+52]..[856,30924+57])
                                  None
                            Some
                              expression (typing/includecore.ml[857,30987+2]..[957,34763+30])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includecore.ml[857,30987+6]..[857,30987+9])
                                      Ppat_var "err" (typing/includecore.ml[857,30987+6]..[857,30987+9])
                                    expression (typing/includecore.ml[858,30999+4]..[860,31084+18])
                                      Pexp_match
                                      expression (typing/includecore.ml[858,30999+10]..[858,30999+42])
                                        Pexp_apply
                                        expression (typing/includecore.ml[858,30999+10]..[858,30999+26])
                                          Pexp_ident "privacy_mismatch" (typing/includecore.ml[858,30999+10]..[858,30999+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[858,30999+27]..[858,30999+30])
                                              Pexp_ident "env" (typing/includecore.ml[858,30999+27]..[858,30999+30])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[858,30999+31]..[858,30999+36])
                                              Pexp_ident "decl1" (typing/includecore.ml[858,30999+31]..[858,30999+36])
                                          <arg>
                                          Nolabel
                                            expression (typing/includecore.ml[858,30999+37]..[858,30999+42])
                                              Pexp_ident "decl2" (typing/includecore.ml[858,30999+37]..[858,30999+42])
                                        ]
                                      [
                                        <case>
                                          pattern (typing/includecore.ml[859,31047+6]..[859,31047+14])
                                            Ppat_construct "Some" (typing/includecore.ml[859,31047+6]..[859,31047+10])
                                            Some
                                              []
                                              pattern (typing/includecore.ml[859,31047+11]..[859,31047+14])
                                                Ppat_var "err" (typing/includecore.ml[859,31047+11]..[859,31047+14])
                                          expression (typing/includecore.ml[859,31047+18]..[859,31047+36])
                                            Pexp_construct "Some" (typing/includecore.ml[859,31047+18]..[859,31047+22])
                                            Some
                                              expression (typing/includecore.ml[859,31047+23]..[859,31047+36])
                                                Pexp_construct "Privacy" (typing/includecore.ml[859,31047+24]..[859,31047+31])
                                                Some
                                                  expression (typing/includecore.ml[859,31047+32]..[859,31047+35])
                                                    Pexp_ident "err" (typing/includecore.ml[859,31047+32]..[859,31047+35])
                                        <case>
                                          pattern (typing/includecore.ml[860,31084+6]..[860,31084+10])
                                            Ppat_construct "None" (typing/includecore.ml[860,31084+6]..[860,31084+10])
                                            None
                                          expression (typing/includecore.ml[860,31084+14]..[860,31084+18])
                                            Pexp_construct "None" (typing/includecore.ml[860,31084+14]..[860,31084+18])
                                            None
                                      ]
                                ]
                                expression (typing/includecore.ml[862,31108+2]..[957,34763+30])
                                  Pexp_ifthenelse
                                  expression (typing/includecore.ml[862,31108+5]..[862,31108+16])
                                    Pexp_apply
                                    expression (typing/includecore.ml[862,31108+9]..[862,31108+11])
                                      Pexp_ident "<>" (typing/includecore.ml[862,31108+9]..[862,31108+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[862,31108+5]..[862,31108+8])
                                          Pexp_ident "err" (typing/includecore.ml[862,31108+5]..[862,31108+8])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[862,31108+12]..[862,31108+16])
                                          Pexp_construct "None" (typing/includecore.ml[862,31108+12]..[862,31108+16])
                                          None
                                    ]
                                  expression (typing/includecore.ml[862,31108+22]..[862,31108+25])
                                    Pexp_ident "err" (typing/includecore.ml[862,31108+22]..[862,31108+25])
                                  Some
                                    expression (typing/includecore.ml[863,31139+2]..[957,34763+30])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[863,31139+6]..[863,31139+9])
                                            Ppat_var "err" (typing/includecore.ml[863,31139+6]..[863,31139+9])
                                          expression (typing/includecore.ml[863,31139+12]..[882,31964+22])
                                            Pexp_match
                                            expression (typing/includecore.ml[863,31139+18]..[863,31139+60])
                                              Pexp_tuple
                                              [
                                                expression (typing/includecore.ml[863,31139+19]..[863,31139+38])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[863,31139+19]..[863,31139+24])
                                                    Pexp_ident "decl1" (typing/includecore.ml[863,31139+19]..[863,31139+24])
                                                  "type_manifest" (typing/includecore.ml[863,31139+25]..[863,31139+38])
                                                expression (typing/includecore.ml[863,31139+40]..[863,31139+59])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[863,31139+40]..[863,31139+45])
                                                    Pexp_ident "decl2" (typing/includecore.ml[863,31139+40]..[863,31139+45])
                                                  "type_manifest" (typing/includecore.ml[863,31139+46]..[863,31139+59])
                                              ]
                                            [
                                              <case>
                                                pattern (typing/includecore.ml[864,31205+6]..[864,31205+15])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includecore.ml[864,31205+7]..[864,31205+8])
                                                      Ppat_any
                                                    pattern (typing/includecore.ml[864,31205+10]..[864,31205+14])
                                                      Ppat_construct "None" (typing/includecore.ml[864,31205+10]..[864,31205+14])
                                                      None
                                                  ]
                                                expression (typing/includecore.ml[865,31224+8]..[869,31405+11])
                                                  Pexp_match
                                                  expression (typing/includecore.ml[866,31238+16]..[866,31238+72])
                                                    Pexp_apply
                                                    expression (typing/includecore.ml[866,31238+16]..[866,31238+27])
                                                      Pexp_ident "Ctype.equal" (typing/includecore.ml[866,31238+16]..[866,31238+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[866,31238+28]..[866,31238+31])
                                                          Pexp_ident "env" (typing/includecore.ml[866,31238+28]..[866,31238+31])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[866,31238+32]..[866,31238+36])
                                                          Pexp_construct "true" (typing/includecore.ml[866,31238+32]..[866,31238+36])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[866,31238+37]..[866,31238+54])
                                                          Pexp_field
                                                          expression (typing/includecore.ml[866,31238+37]..[866,31238+42])
                                                            Pexp_ident "decl1" (typing/includecore.ml[866,31238+37]..[866,31238+42])
                                                          "type_params" (typing/includecore.ml[866,31238+43]..[866,31238+54])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includecore.ml[866,31238+55]..[866,31238+72])
                                                          Pexp_field
                                                          expression (typing/includecore.ml[866,31238+55]..[866,31238+60])
                                                            Pexp_ident "decl2" (typing/includecore.ml[866,31238+55]..[866,31238+60])
                                                          "type_params" (typing/includecore.ml[866,31238+61]..[866,31238+72])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (typing/includecore.ml[867,31316+12]..[867,31316+40])
                                                        Ppat_exception
                                                        pattern (typing/includecore.ml[867,31316+22]..[867,31316+40])
                                                          Ppat_construct "Ctype.Equality" (typing/includecore.ml[867,31316+22]..[867,31316+36])
                                                          Some
                                                            []
                                                            pattern (typing/includecore.ml[867,31316+37]..[867,31316+40])
                                                              Ppat_var "err" (typing/includecore.ml[867,31316+37]..[867,31316+40])
                                                      expression (typing/includecore.ml[867,31316+44]..[867,31316+65])
                                                        Pexp_construct "Some" (typing/includecore.ml[867,31316+44]..[867,31316+48])
                                                        Some
                                                          expression (typing/includecore.ml[867,31316+49]..[867,31316+65])
                                                            Pexp_construct "Constraint" (typing/includecore.ml[867,31316+50]..[867,31316+60])
                                                            Some
                                                              expression (typing/includecore.ml[867,31316+61]..[867,31316+64])
                                                                Pexp_ident "err" (typing/includecore.ml[867,31316+61]..[867,31316+64])
                                                    <case>
                                                      pattern (typing/includecore.ml[868,31382+12]..[868,31382+14])
                                                        Ppat_construct "()" (typing/includecore.ml[868,31382+12]..[868,31382+14])
                                                        None
                                                      expression (typing/includecore.ml[868,31382+18]..[868,31382+22])
                                                        Pexp_construct "None" (typing/includecore.ml[868,31382+18]..[868,31382+22])
                                                        None
                                                  ]
                                              <case>
                                                pattern (typing/includecore.ml[870,31417+6]..[870,31417+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includecore.ml[870,31417+7]..[870,31417+15])
                                                      Ppat_construct "Some" (typing/includecore.ml[870,31417+7]..[870,31417+11])
                                                      Some
                                                        []
                                                        pattern (typing/includecore.ml[870,31417+12]..[870,31417+15])
                                                          Ppat_var "ty1" (typing/includecore.ml[870,31417+12]..[870,31417+15])
                                                    pattern (typing/includecore.ml[870,31417+17]..[870,31417+25])
                                                      Ppat_construct "Some" (typing/includecore.ml[870,31417+17]..[870,31417+21])
                                                      Some
                                                        []
                                                        pattern (typing/includecore.ml[870,31417+22]..[870,31417+25])
                                                          Ppat_var "ty2" (typing/includecore.ml[870,31417+22]..[870,31417+25])
                                                  ]
                                                expression (typing/includecore.ml[871,31447+9]..[872,31518+45])
                                                  Pexp_apply
                                                  expression (typing/includecore.ml[871,31447+9]..[871,31447+22])
                                                    Pexp_ident "type_manifest" (typing/includecore.ml[871,31447+9]..[871,31447+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[871,31447+23]..[871,31447+26])
                                                        Pexp_ident "env" (typing/includecore.ml[871,31447+23]..[871,31447+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[871,31447+27]..[871,31447+30])
                                                        Pexp_ident "ty1" (typing/includecore.ml[871,31447+27]..[871,31447+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[871,31447+31]..[871,31447+48])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[871,31447+31]..[871,31447+36])
                                                          Pexp_ident "decl1" (typing/includecore.ml[871,31447+31]..[871,31447+36])
                                                        "type_params" (typing/includecore.ml[871,31447+37]..[871,31447+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[871,31447+49]..[871,31447+52])
                                                        Pexp_ident "ty2" (typing/includecore.ml[871,31447+49]..[871,31447+52])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[871,31447+53]..[871,31447+70])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[871,31447+53]..[871,31447+58])
                                                          Pexp_ident "decl2" (typing/includecore.ml[871,31447+53]..[871,31447+58])
                                                        "type_params" (typing/includecore.ml[871,31447+59]..[871,31447+70])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[872,31518+11]..[872,31518+29])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[872,31518+11]..[872,31518+16])
                                                          Pexp_ident "decl2" (typing/includecore.ml[872,31518+11]..[872,31518+16])
                                                        "type_private" (typing/includecore.ml[872,31518+17]..[872,31518+29])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includecore.ml[872,31518+30]..[872,31518+45])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[872,31518+30]..[872,31518+35])
                                                          Pexp_ident "decl2" (typing/includecore.ml[872,31518+30]..[872,31518+35])
                                                        "type_kind" (typing/includecore.ml[872,31518+36]..[872,31518+45])
                                                  ]
                                              <case>
                                                pattern (typing/includecore.ml[873,31564+6]..[873,31564+22])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includecore.ml[873,31564+7]..[873,31564+11])
                                                      Ppat_construct "None" (typing/includecore.ml[873,31564+7]..[873,31564+11])
                                                      None
                                                    pattern (typing/includecore.ml[873,31564+13]..[873,31564+21])
                                                      Ppat_construct "Some" (typing/includecore.ml[873,31564+13]..[873,31564+17])
                                                      Some
                                                        []
                                                        pattern (typing/includecore.ml[873,31564+18]..[873,31564+21])
                                                          Ppat_var "ty2" (typing/includecore.ml[873,31564+18]..[873,31564+21])
                                                  ]
                                                expression (typing/includecore.ml[874,31590+8]..[882,31964+22])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/includecore.ml[874,31590+12]..[874,31590+15])
                                                        Ppat_var "ty1" (typing/includecore.ml[874,31590+12]..[874,31590+15])
                                                      expression (typing/includecore.ml[875,31608+10]..[875,31608+69])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[875,31608+10]..[875,31608+24])
                                                          Pexp_ident "Btype.newgenty" (typing/includecore.ml[875,31608+10]..[875,31608+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[875,31608+25]..[875,31608+69])
                                                              Pexp_construct "Tconstr" (typing/includecore.ml[875,31608+26]..[875,31608+33])
                                                              Some
                                                                expression (typing/includecore.ml[875,31608+33]..[875,31608+68])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (typing/includecore.ml[875,31608+34]..[875,31608+38])
                                                                      Pexp_ident "path" (typing/includecore.ml[875,31608+34]..[875,31608+38])
                                                                    expression (typing/includecore.ml[875,31608+40]..[875,31608+57])
                                                                      Pexp_field
                                                                      expression (typing/includecore.ml[875,31608+40]..[875,31608+45])
Pexp_ident "decl2" (typing/includecore.ml[875,31608+40]..[875,31608+45])
                                                                      "type_params" (typing/includecore.ml[875,31608+46]..[875,31608+57])
                                                                    expression (typing/includecore.ml[875,31608+59]..[875,31608+67])
                                                                      Pexp_apply
                                                                      expression (typing/includecore.ml[875,31608+59]..[875,31608+62])
Pexp_ident "ref" (typing/includecore.ml[875,31608+59]..[875,31608+62])
                                                                      [
<arg>
Nolabel
  expression (typing/includecore.ml[875,31608+63]..[875,31608+67])
    Pexp_construct "Mnil" (typing/includecore.ml[875,31608+63]..[875,31608+67])
    None
                                                                      ]
                                                                  ]
                                                        ]
                                                  ]
                                                  expression (typing/includecore.ml[877,31689+8]..[882,31964+22])
                                                    Pexp_match
                                                    expression (typing/includecore.ml[877,31689+14]..[877,31689+70])
                                                      Pexp_apply
                                                      expression (typing/includecore.ml[877,31689+14]..[877,31689+25])
                                                        Pexp_ident "Ctype.equal" (typing/includecore.ml[877,31689+14]..[877,31689+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[877,31689+26]..[877,31689+29])
                                                            Pexp_ident "env" (typing/includecore.ml[877,31689+26]..[877,31689+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[877,31689+30]..[877,31689+34])
                                                            Pexp_construct "true" (typing/includecore.ml[877,31689+30]..[877,31689+34])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[877,31689+35]..[877,31689+52])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[877,31689+35]..[877,31689+40])
                                                              Pexp_ident "decl1" (typing/includecore.ml[877,31689+35]..[877,31689+40])
                                                            "type_params" (typing/includecore.ml[877,31689+41]..[877,31689+52])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includecore.ml[877,31689+53]..[877,31689+70])
                                                            Pexp_field
                                                            expression (typing/includecore.ml[877,31689+53]..[877,31689+58])
                                                              Pexp_ident "decl2" (typing/includecore.ml[877,31689+53]..[877,31689+58])
                                                            "type_params" (typing/includecore.ml[877,31689+59]..[877,31689+70])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (typing/includecore.ml[878,31765+10]..[878,31765+38])
                                                          Ppat_exception
                                                          pattern (typing/includecore.ml[878,31765+20]..[878,31765+38])
                                                            Ppat_construct "Ctype.Equality" (typing/includecore.ml[878,31765+20]..[878,31765+34])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[878,31765+35]..[878,31765+38])
                                                                Ppat_var "err" (typing/includecore.ml[878,31765+35]..[878,31765+38])
                                                        expression (typing/includecore.ml[878,31765+42]..[878,31765+63])
                                                          Pexp_construct "Some" (typing/includecore.ml[878,31765+42]..[878,31765+46])
                                                          Some
                                                            expression (typing/includecore.ml[878,31765+47]..[878,31765+63])
                                                              Pexp_construct "Constraint" (typing/includecore.ml[878,31765+48]..[878,31765+58])
                                                              Some
                                                                expression (typing/includecore.ml[878,31765+59]..[878,31765+62])
                                                                  Pexp_ident "err" (typing/includecore.ml[878,31765+59]..[878,31765+62])
                                                      <case>
                                                        pattern (typing/includecore.ml[879,31829+10]..[879,31829+12])
                                                          Ppat_construct "()" (typing/includecore.ml[879,31829+10]..[879,31829+12])
                                                          None
                                                        expression (typing/includecore.ml[880,31845+10]..[882,31964+22])
                                                          Pexp_match
                                                          expression (typing/includecore.ml[880,31845+16]..[880,31845+49])
                                                            Pexp_apply
                                                            expression (typing/includecore.ml[880,31845+16]..[880,31845+27])
                                                              Pexp_ident "Ctype.equal" (typing/includecore.ml[880,31845+16]..[880,31845+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[880,31845+28]..[880,31845+31])
                                                                  Pexp_ident "env" (typing/includecore.ml[880,31845+28]..[880,31845+31])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[880,31845+32]..[880,31845+37])
                                                                  Pexp_construct "false" (typing/includecore.ml[880,31845+32]..[880,31845+37])
                                                                  None
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[880,31845+38]..[880,31845+43])
                                                                  Pexp_construct "::" (typing/includecore.ml[880,31845+39]..[880,31845+43]) ghost
                                                                  Some
                                                                    expression (typing/includecore.ml[880,31845+39]..[880,31845+43]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (typing/includecore.ml[880,31845+39]..[880,31845+42])
  Pexp_ident "ty1" (typing/includecore.ml[880,31845+39]..[880,31845+42])
expression (typing/includecore.ml[880,31845+42]..[880,31845+43]) ghost
  Pexp_construct "[]" (typing/includecore.ml[880,31845+42]..[880,31845+43]) ghost
  None
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[880,31845+44]..[880,31845+49])
                                                                  Pexp_construct "::" (typing/includecore.ml[880,31845+45]..[880,31845+49]) ghost
                                                                  Some
                                                                    expression (typing/includecore.ml[880,31845+45]..[880,31845+49]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (typing/includecore.ml[880,31845+45]..[880,31845+48])
  Pexp_ident "ty2" (typing/includecore.ml[880,31845+45]..[880,31845+48])
expression (typing/includecore.ml[880,31845+48]..[880,31845+49]) ghost
  Pexp_construct "[]" (typing/includecore.ml[880,31845+48]..[880,31845+49]) ghost
  None
                                                                      ]
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (typing/includecore.ml[881,31900+12]..[881,31900+40])
                                                                Ppat_exception
                                                                pattern (typing/includecore.ml[881,31900+22]..[881,31900+40])
                                                                  Ppat_construct "Ctype.Equality" (typing/includecore.ml[881,31900+22]..[881,31900+36])
                                                                  Some
                                                                    []
                                                                    pattern (typing/includecore.ml[881,31900+37]..[881,31900+40])
                                                                      Ppat_var "err" (typing/includecore.ml[881,31900+37]..[881,31900+40])
                                                              expression (typing/includecore.ml[881,31900+44]..[881,31900+63])
                                                                Pexp_construct "Some" (typing/includecore.ml[881,31900+44]..[881,31900+48])
                                                                Some
                                                                  expression (typing/includecore.ml[881,31900+49]..[881,31900+63])
                                                                    Pexp_construct "Manifest" (typing/includecore.ml[881,31900+50]..[881,31900+58])
                                                                    Some
                                                                      expression (typing/includecore.ml[881,31900+59]..[881,31900+62])
Pexp_ident "err" (typing/includecore.ml[881,31900+59]..[881,31900+62])
                                                            <case>
                                                              pattern (typing/includecore.ml[882,31964+12]..[882,31964+14])
                                                                Ppat_construct "()" (typing/includecore.ml[882,31964+12]..[882,31964+14])
                                                                None
                                                              expression (typing/includecore.ml[882,31964+18]..[882,31964+22])
                                                                Pexp_construct "None" (typing/includecore.ml[882,31964+18]..[882,31964+22])
                                                                None
                                                          ]
                                                    ]
                                            ]
                                      ]
                                      expression (typing/includecore.ml[884,31992+2]..[957,34763+30])
                                        Pexp_ifthenelse
                                        expression (typing/includecore.ml[884,31992+5]..[884,31992+16])
                                          Pexp_apply
                                          expression (typing/includecore.ml[884,31992+9]..[884,31992+11])
                                            Pexp_ident "<>" (typing/includecore.ml[884,31992+9]..[884,31992+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[884,31992+5]..[884,31992+8])
                                                Pexp_ident "err" (typing/includecore.ml[884,31992+5]..[884,31992+8])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[884,31992+12]..[884,31992+16])
                                                Pexp_construct "None" (typing/includecore.ml[884,31992+12]..[884,31992+16])
                                                None
                                          ]
                                        expression (typing/includecore.ml[884,31992+22]..[884,31992+25])
                                          Pexp_ident "err" (typing/includecore.ml[884,31992+22]..[884,31992+25])
                                        Some
                                          expression (typing/includecore.ml[885,32023+2]..[957,34763+30])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/includecore.ml[885,32023+6]..[885,32023+9])
                                                  Ppat_var "err" (typing/includecore.ml[885,32023+6]..[885,32023+9])
                                                expression (typing/includecore.ml[885,32023+12]..[923,33378+25])
                                                  Pexp_match
                                                  expression (typing/includecore.ml[885,32023+18]..[885,32023+52])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includecore.ml[885,32023+19]..[885,32023+34])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[885,32023+19]..[885,32023+24])
                                                          Pexp_ident "decl1" (typing/includecore.ml[885,32023+19]..[885,32023+24])
                                                        "type_kind" (typing/includecore.ml[885,32023+25]..[885,32023+34])
                                                      expression (typing/includecore.ml[885,32023+36]..[885,32023+51])
                                                        Pexp_field
                                                        expression (typing/includecore.ml[885,32023+36]..[885,32023+41])
                                                          Pexp_ident "decl2" (typing/includecore.ml[885,32023+36]..[885,32023+41])
                                                        "type_kind" (typing/includecore.ml[885,32023+42]..[885,32023+51])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (typing/includecore.ml[886,32081+6]..[886,32081+24])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[886,32081+7]..[886,32081+8])
                                                            Ppat_any
                                                          pattern (typing/includecore.ml[886,32081+10]..[886,32081+23])
                                                            Ppat_construct "Type_abstract" (typing/includecore.ml[886,32081+10]..[886,32081+23])
                                                            None
                                                        ]
                                                      expression (typing/includecore.ml[886,32081+28]..[886,32081+32])
                                                        Pexp_construct "None" (typing/includecore.ml[886,32081+28]..[886,32081+32])
                                                        None
                                                    <case>
                                                      pattern (typing/includecore.ml[887,32114+6]..[887,32114+64])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[887,32114+7]..[887,32114+34])
                                                            Ppat_construct "Type_variant" (typing/includecore.ml[887,32114+7]..[887,32114+19])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[887,32114+20]..[887,32114+34])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[887,32114+21]..[887,32114+27])
                                                                    Ppat_var "cstrs1" (typing/includecore.ml[887,32114+21]..[887,32114+27])
                                                                  pattern (typing/includecore.ml[887,32114+29]..[887,32114+33])
                                                                    Ppat_var "rep1" (typing/includecore.ml[887,32114+29]..[887,32114+33])
                                                                ]
                                                          pattern (typing/includecore.ml[887,32114+36]..[887,32114+63])
                                                            Ppat_construct "Type_variant" (typing/includecore.ml[887,32114+36]..[887,32114+48])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[887,32114+49]..[887,32114+63])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[887,32114+50]..[887,32114+56])
                                                                    Ppat_var "cstrs2" (typing/includecore.ml[887,32114+50]..[887,32114+56])
                                                                  pattern (typing/includecore.ml[887,32114+58]..[887,32114+62])
                                                                    Ppat_var "rep2" (typing/includecore.ml[887,32114+58]..[887,32114+62])
                                                                ]
                                                        ]
                                                      expression (typing/includecore.ml[888,32182+8]..[905,32735+14])
                                                        Pexp_sequence
                                                        expression (typing/includecore.ml[888,32182+8]..[898,32556+11])
                                                          Pexp_ifthenelse
                                                          expression (typing/includecore.ml[888,32182+11]..[888,32182+15])
                                                            Pexp_ident "mark" (typing/includecore.ml[888,32182+11]..[888,32182+15])
                                                          expression (typing/includecore.ml[888,32182+21]..[898,32556+11])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/includecore.ml[889,32209+14]..[889,32209+18])
                                                                  Ppat_var "mark" (typing/includecore.ml[889,32209+14]..[889,32209+18])
                                                                expression (typing/includecore.ml[889,32209+19]..[890,32242+61]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/includecore.ml[889,32209+19]..[889,32209+24])
                                                                    Ppat_var "usage" (typing/includecore.ml[889,32209+19]..[889,32209+24])
                                                                  expression (typing/includecore.ml[889,32209+25]..[890,32242+61]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/includecore.ml[889,32209+25]..[889,32209+30])
                                                                      Ppat_var "cstrs" (typing/includecore.ml[889,32209+25]..[889,32209+30])
                                                                    expression (typing/includecore.ml[890,32242+12]..[890,32242+61])
                                                                      Pexp_apply
                                                                      expression (typing/includecore.ml[890,32242+12]..[890,32242+21])
Pexp_ident "List.iter" (typing/includecore.ml[890,32242+12]..[890,32242+21])
                                                                      [
<arg>
Nolabel
  expression (typing/includecore.ml[890,32242+22]..[890,32242+55])
    Pexp_apply
    expression (typing/includecore.ml[890,32242+23]..[890,32242+48])
      Pexp_ident "Env.mark_constructor_used" (typing/includecore.ml[890,32242+23]..[890,32242+48])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[890,32242+49]..[890,32242+54])
          Pexp_ident "usage" (typing/includecore.ml[890,32242+49]..[890,32242+54])
    ]
<arg>
Nolabel
  expression (typing/includecore.ml[890,32242+56]..[890,32242+61])
    Pexp_ident "cstrs" (typing/includecore.ml[890,32242+56]..[890,32242+61])
                                                                      ]
                                                            ]
                                                            expression (typing/includecore.ml[892,32317+10]..[897,32504+51])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/includecore.ml[892,32317+14]..[892,32317+43]) ghost
                                                                    Ppat_constraint
                                                                    pattern (typing/includecore.ml[892,32317+14]..[892,32317+19])
                                                                      Ppat_var "usage" (typing/includecore.ml[892,32317+14]..[892,32317+19])
                                                                    core_type (typing/includecore.ml[892,32317+22]..[892,32317+43]) ghost
                                                                      Ptyp_poly
                                                                      core_type (typing/includecore.ml[892,32317+22]..[892,32317+43])
Ptyp_constr "Env.constructor_usage" (typing/includecore.ml[892,32317+22]..[892,32317+43])
[]
                                                                  expression (typing/includecore.ml[892,32317+14]..[894,32424+37])
                                                                    Pexp_constraint
                                                                    expression (typing/includecore.ml[893,32363+12]..[894,32424+37])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/includecore.ml[893,32363+15]..[893,32363+42])
Pexp_apply
expression (typing/includecore.ml[893,32363+34]..[893,32363+35])
  Pexp_ident "=" (typing/includecore.ml[893,32363+34]..[893,32363+35])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[893,32363+15]..[893,32363+33])
      Pexp_field
      expression (typing/includecore.ml[893,32363+15]..[893,32363+20])
        Pexp_ident "decl2" (typing/includecore.ml[893,32363+15]..[893,32363+20])
      "type_private" (typing/includecore.ml[893,32363+21]..[893,32363+33])
  <arg>
  Nolabel
    expression (typing/includecore.ml[893,32363+36]..[893,32363+42])
      Pexp_construct "Public" (typing/includecore.ml[893,32363+36]..[893,32363+42])
      None
]
                                                                      expression (typing/includecore.ml[893,32363+48]..[893,32363+60])
Pexp_construct "Env.Exported" (typing/includecore.ml[893,32363+48]..[893,32363+60])
None
                                                                      Some
expression (typing/includecore.ml[894,32424+17]..[894,32424+37])
  Pexp_construct "Env.Exported_private" (typing/includecore.ml[894,32424+17]..[894,32424+37])
  None
                                                                    core_type (typing/includecore.ml[892,32317+22]..[892,32317+43])
                                                                      Ptyp_constr "Env.constructor_usage" (typing/includecore.ml[892,32317+22]..[892,32317+43])
                                                                      []
                                                              ]
                                                              expression (typing/includecore.ml[896,32475+10]..[897,32504+51])
                                                                Pexp_sequence
                                                                expression (typing/includecore.ml[896,32475+10]..[896,32475+27])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[896,32475+10]..[896,32475+14])
                                                                    Pexp_ident "mark" (typing/includecore.ml[896,32475+10]..[896,32475+14])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[896,32475+15]..[896,32475+20])
Pexp_ident "usage" (typing/includecore.ml[896,32475+15]..[896,32475+20])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[896,32475+21]..[896,32475+27])
Pexp_ident "cstrs1" (typing/includecore.ml[896,32475+21]..[896,32475+27])
                                                                  ]
                                                                expression (typing/includecore.ml[897,32504+10]..[897,32504+51])
                                                                  Pexp_ifthenelse
                                                                  expression (typing/includecore.ml[897,32504+13]..[897,32504+21])
                                                                    Pexp_ident "equality" (typing/includecore.ml[897,32504+13]..[897,32504+21])
                                                                  expression (typing/includecore.ml[897,32504+27]..[897,32504+51])
                                                                    Pexp_apply
                                                                    expression (typing/includecore.ml[897,32504+27]..[897,32504+31])
                                                                      Pexp_ident "mark" (typing/includecore.ml[897,32504+27]..[897,32504+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/includecore.ml[897,32504+32]..[897,32504+44])
  Pexp_construct "Env.Exported" (typing/includecore.ml[897,32504+32]..[897,32504+44])
  None
                                                                      <arg>
                                                                      Nolabel
expression (typing/includecore.ml[897,32504+45]..[897,32504+51])
  Pexp_ident "cstrs2" (typing/includecore.ml[897,32504+45]..[897,32504+51])
                                                                    ]
                                                                  None
                                                          None
                                                        expression (typing/includecore.ml[899,32569+8]..[905,32735+14])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[899,32569+8]..[899,32569+51])
                                                            Pexp_ident "Variant_diffing.compare_with_representation" (typing/includecore.ml[899,32569+8]..[899,32569+51])
                                                          [
                                                            <arg>
                                                            Labelled "loc"
                                                              expression (typing/includecore.ml[899,32569+53]..[899,32569+56])
                                                                Pexp_ident "loc" (typing/includecore.ml[899,32569+53]..[899,32569+56])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[899,32569+57]..[899,32569+60])
                                                                Pexp_ident "env" (typing/includecore.ml[899,32569+57]..[899,32569+60])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[900,32630+10]..[900,32630+27])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[900,32630+10]..[900,32630+15])
                                                                  Pexp_ident "decl1" (typing/includecore.ml[900,32630+10]..[900,32630+15])
                                                                "type_params" (typing/includecore.ml[900,32630+16]..[900,32630+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[901,32658+10]..[901,32658+27])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[901,32658+10]..[901,32658+15])
                                                                  Pexp_ident "decl2" (typing/includecore.ml[901,32658+10]..[901,32658+15])
                                                                "type_params" (typing/includecore.ml[901,32658+16]..[901,32658+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[902,32686+10]..[902,32686+16])
                                                                Pexp_ident "cstrs1" (typing/includecore.ml[902,32686+10]..[902,32686+16])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[903,32703+10]..[903,32703+16])
                                                                Pexp_ident "cstrs2" (typing/includecore.ml[903,32703+10]..[903,32703+16])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[904,32720+10]..[904,32720+14])
                                                                Pexp_ident "rep1" (typing/includecore.ml[904,32720+10]..[904,32720+14])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[905,32735+10]..[905,32735+14])
                                                                Pexp_ident "rep2" (typing/includecore.ml[905,32735+10]..[905,32735+14])
                                                          ]
                                                    <case>
                                                      pattern (typing/includecore.ml[906,32750+6]..[906,32750+60])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[906,32750+7]..[906,32750+32])
                                                            Ppat_construct "Type_record" (typing/includecore.ml[906,32750+7]..[906,32750+18])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[906,32750+18]..[906,32750+32])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[906,32750+19]..[906,32750+26])
                                                                    Ppat_var "labels1" (typing/includecore.ml[906,32750+19]..[906,32750+26])
                                                                  pattern (typing/includecore.ml[906,32750+27]..[906,32750+31])
                                                                    Ppat_var "rep1" (typing/includecore.ml[906,32750+27]..[906,32750+31])
                                                                ]
                                                          pattern (typing/includecore.ml[906,32750+34]..[906,32750+59])
                                                            Ppat_construct "Type_record" (typing/includecore.ml[906,32750+34]..[906,32750+45])
                                                            Some
                                                              []
                                                              pattern (typing/includecore.ml[906,32750+45]..[906,32750+59])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/includecore.ml[906,32750+46]..[906,32750+53])
                                                                    Ppat_var "labels2" (typing/includecore.ml[906,32750+46]..[906,32750+53])
                                                                  pattern (typing/includecore.ml[906,32750+54]..[906,32750+58])
                                                                    Ppat_var "rep2" (typing/includecore.ml[906,32750+54]..[906,32750+58])
                                                                ]
                                                        ]
                                                      expression (typing/includecore.ml[907,32814+8]..[921,33321+19])
                                                        Pexp_sequence
                                                        expression (typing/includecore.ml[907,32814+8]..[917,33176+11])
                                                          Pexp_ifthenelse
                                                          expression (typing/includecore.ml[907,32814+11]..[907,32814+15])
                                                            Pexp_ident "mark" (typing/includecore.ml[907,32814+11]..[907,32814+15])
                                                          expression (typing/includecore.ml[907,32814+21]..[917,33176+11])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/includecore.ml[908,32841+14]..[908,32841+18])
                                                                  Ppat_var "mark" (typing/includecore.ml[908,32841+14]..[908,32841+18])
                                                                expression (typing/includecore.ml[908,32841+19]..[909,32873+54]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (typing/includecore.ml[908,32841+19]..[908,32841+24])
                                                                    Ppat_var "usage" (typing/includecore.ml[908,32841+19]..[908,32841+24])
                                                                  expression (typing/includecore.ml[908,32841+25]..[909,32873+54]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/includecore.ml[908,32841+25]..[908,32841+29])
                                                                      Ppat_var "lbls" (typing/includecore.ml[908,32841+25]..[908,32841+29])
                                                                    expression (typing/includecore.ml[909,32873+12]..[909,32873+54])
                                                                      Pexp_apply
                                                                      expression (typing/includecore.ml[909,32873+12]..[909,32873+21])
Pexp_ident "List.iter" (typing/includecore.ml[909,32873+12]..[909,32873+21])
                                                                      [
<arg>
Nolabel
  expression (typing/includecore.ml[909,32873+22]..[909,32873+49])
    Pexp_apply
    expression (typing/includecore.ml[909,32873+23]..[909,32873+42])
      Pexp_ident "Env.mark_label_used" (typing/includecore.ml[909,32873+23]..[909,32873+42])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[909,32873+43]..[909,32873+48])
          Pexp_ident "usage" (typing/includecore.ml[909,32873+43]..[909,32873+48])
    ]
<arg>
Nolabel
  expression (typing/includecore.ml[909,32873+50]..[909,32873+54])
    Pexp_ident "lbls" (typing/includecore.ml[909,32873+50]..[909,32873+54])
                                                                      ]
                                                            ]
                                                            expression (typing/includecore.ml[911,32941+10]..[916,33123+52])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (typing/includecore.ml[911,32941+14]..[911,32941+37]) ghost
                                                                    Ppat_constraint
                                                                    pattern (typing/includecore.ml[911,32941+14]..[911,32941+19])
                                                                      Ppat_var "usage" (typing/includecore.ml[911,32941+14]..[911,32941+19])
                                                                    core_type (typing/includecore.ml[911,32941+22]..[911,32941+37]) ghost
                                                                      Ptyp_poly
                                                                      core_type (typing/includecore.ml[911,32941+22]..[911,32941+37])
Ptyp_constr "Env.label_usage" (typing/includecore.ml[911,32941+22]..[911,32941+37])
[]
                                                                  expression (typing/includecore.ml[911,32941+14]..[913,33042+37])
                                                                    Pexp_constraint
                                                                    expression (typing/includecore.ml[912,32981+12]..[913,33042+37])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/includecore.ml[912,32981+15]..[912,32981+42])
Pexp_apply
expression (typing/includecore.ml[912,32981+34]..[912,32981+35])
  Pexp_ident "=" (typing/includecore.ml[912,32981+34]..[912,32981+35])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[912,32981+15]..[912,32981+33])
      Pexp_field
      expression (typing/includecore.ml[912,32981+15]..[912,32981+20])
        Pexp_ident "decl2" (typing/includecore.ml[912,32981+15]..[912,32981+20])
      "type_private" (typing/includecore.ml[912,32981+21]..[912,32981+33])
  <arg>
  Nolabel
    expression (typing/includecore.ml[912,32981+36]..[912,32981+42])
      Pexp_construct "Public" (typing/includecore.ml[912,32981+36]..[912,32981+42])
      None
]
                                                                      expression (typing/includecore.ml[912,32981+48]..[912,32981+60])
Pexp_construct "Env.Exported" (typing/includecore.ml[912,32981+48]..[912,32981+60])
None
                                                                      Some
expression (typing/includecore.ml[913,33042+17]..[913,33042+37])
  Pexp_construct "Env.Exported_private" (typing/includecore.ml[913,33042+17]..[913,33042+37])
  None
                                                                    core_type (typing/includecore.ml[911,32941+22]..[911,32941+37])
                                                                      Ptyp_constr "Env.label_usage" (typing/includecore.ml[911,32941+22]..[911,32941+37])
                                                                      []
                                                              ]
                                                              expression (typing/includecore.ml[915,33093+10]..[916,33123+52])
                                                                Pexp_sequence
                                                                expression (typing/includecore.ml[915,33093+10]..[915,33093+28])
                                                                  Pexp_apply
                                                                  expression (typing/includecore.ml[915,33093+10]..[915,33093+14])
                                                                    Pexp_ident "mark" (typing/includecore.ml[915,33093+10]..[915,33093+14])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[915,33093+15]..[915,33093+20])
Pexp_ident "usage" (typing/includecore.ml[915,33093+15]..[915,33093+20])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/includecore.ml[915,33093+21]..[915,33093+28])
Pexp_ident "labels1" (typing/includecore.ml[915,33093+21]..[915,33093+28])
                                                                  ]
                                                                expression (typing/includecore.ml[916,33123+10]..[916,33123+52])
                                                                  Pexp_ifthenelse
                                                                  expression (typing/includecore.ml[916,33123+13]..[916,33123+21])
                                                                    Pexp_ident "equality" (typing/includecore.ml[916,33123+13]..[916,33123+21])
                                                                  expression (typing/includecore.ml[916,33123+27]..[916,33123+52])
                                                                    Pexp_apply
                                                                    expression (typing/includecore.ml[916,33123+27]..[916,33123+31])
                                                                      Pexp_ident "mark" (typing/includecore.ml[916,33123+27]..[916,33123+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (typing/includecore.ml[916,33123+32]..[916,33123+44])
  Pexp_construct "Env.Exported" (typing/includecore.ml[916,33123+32]..[916,33123+44])
  None
                                                                      <arg>
                                                                      Nolabel
expression (typing/includecore.ml[916,33123+45]..[916,33123+52])
  Pexp_ident "labels2" (typing/includecore.ml[916,33123+45]..[916,33123+52])
                                                                    ]
                                                                  None
                                                          None
                                                        expression (typing/includecore.ml[918,33189+8]..[921,33321+19])
                                                          Pexp_apply
                                                          expression (typing/includecore.ml[918,33189+8]..[918,33189+50])
                                                            Pexp_ident "Record_diffing.compare_with_representation" (typing/includecore.ml[918,33189+8]..[918,33189+50])
                                                          [
                                                            <arg>
                                                            Labelled "loc"
                                                              expression (typing/includecore.ml[918,33189+52]..[918,33189+55])
                                                                Pexp_ident "loc" (typing/includecore.ml[918,33189+52]..[918,33189+55])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[918,33189+56]..[918,33189+59])
                                                                Pexp_ident "env" (typing/includecore.ml[918,33189+56]..[918,33189+59])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[919,33249+10]..[919,33249+27])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[919,33249+10]..[919,33249+15])
                                                                  Pexp_ident "decl1" (typing/includecore.ml[919,33249+10]..[919,33249+15])
                                                                "type_params" (typing/includecore.ml[919,33249+16]..[919,33249+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[919,33249+28]..[919,33249+45])
                                                                Pexp_field
                                                                expression (typing/includecore.ml[919,33249+28]..[919,33249+33])
                                                                  Pexp_ident "decl2" (typing/includecore.ml[919,33249+28]..[919,33249+33])
                                                                "type_params" (typing/includecore.ml[919,33249+34]..[919,33249+45])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[920,33295+10]..[920,33295+17])
                                                                Pexp_ident "labels1" (typing/includecore.ml[920,33295+10]..[920,33295+17])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[920,33295+18]..[920,33295+25])
                                                                Pexp_ident "labels2" (typing/includecore.ml[920,33295+18]..[920,33295+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[921,33321+10]..[921,33321+14])
                                                                Pexp_ident "rep1" (typing/includecore.ml[921,33321+10]..[921,33321+14])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includecore.ml[921,33321+15]..[921,33321+19])
                                                                Pexp_ident "rep2" (typing/includecore.ml[921,33321+15]..[921,33321+19])
                                                          ]
                                                    <case>
                                                      pattern (typing/includecore.ml[922,33341+6]..[922,33341+28])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[922,33341+7]..[922,33341+16])
                                                            Ppat_construct "Type_open" (typing/includecore.ml[922,33341+7]..[922,33341+16])
                                                            None
                                                          pattern (typing/includecore.ml[922,33341+18]..[922,33341+27])
                                                            Ppat_construct "Type_open" (typing/includecore.ml[922,33341+18]..[922,33341+27])
                                                            None
                                                        ]
                                                      expression (typing/includecore.ml[922,33341+32]..[922,33341+36])
                                                        Pexp_construct "None" (typing/includecore.ml[922,33341+32]..[922,33341+36])
                                                        None
                                                    <case>
                                                      pattern (typing/includecore.ml[923,33378+6]..[923,33378+12])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/includecore.ml[923,33378+7]..[923,33378+8])
                                                            Ppat_any
                                                          pattern (typing/includecore.ml[923,33378+10]..[923,33378+11])
                                                            Ppat_any
                                                        ]
                                                      expression (typing/includecore.ml[923,33378+16]..[923,33378+25])
                                                        Pexp_construct "Some" (typing/includecore.ml[923,33378+16]..[923,33378+20])
                                                        Some
                                                          expression (typing/includecore.ml[923,33378+21]..[923,33378+25])
                                                            Pexp_construct "Kind" (typing/includecore.ml[923,33378+21]..[923,33378+25])
                                                            None
                                                  ]
                                            ]
                                            expression (typing/includecore.ml[925,33409+2]..[957,34763+30])
                                              Pexp_ifthenelse
                                              expression (typing/includecore.ml[925,33409+5]..[925,33409+16])
                                                Pexp_apply
                                                expression (typing/includecore.ml[925,33409+9]..[925,33409+11])
                                                  Pexp_ident "<>" (typing/includecore.ml[925,33409+9]..[925,33409+11])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[925,33409+5]..[925,33409+8])
                                                      Pexp_ident "err" (typing/includecore.ml[925,33409+5]..[925,33409+8])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[925,33409+12]..[925,33409+16])
                                                      Pexp_construct "None" (typing/includecore.ml[925,33409+12]..[925,33409+16])
                                                      None
                                                ]
                                              expression (typing/includecore.ml[925,33409+22]..[925,33409+25])
                                                Pexp_ident "err" (typing/includecore.ml[925,33409+22]..[925,33409+25])
                                              Some
                                                expression (typing/includecore.ml[926,33440+2]..[957,34763+30])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/includecore.ml[926,33440+6]..[926,33440+11])
                                                        Ppat_var "abstr" (typing/includecore.ml[926,33440+6]..[926,33440+11])
                                                      expression (typing/includecore.ml[926,33440+14]..[926,33440+75])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[926,33440+46]..[926,33440+48])
                                                          Pexp_ident "&&" (typing/includecore.ml[926,33440+46]..[926,33440+48])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[926,33440+14]..[926,33440+45])
                                                              Pexp_apply
                                                              expression (typing/includecore.ml[926,33440+30]..[926,33440+31])
                                                                Pexp_ident "=" (typing/includecore.ml[926,33440+30]..[926,33440+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[926,33440+14]..[926,33440+29])
                                                                    Pexp_field
                                                                    expression (typing/includecore.ml[926,33440+14]..[926,33440+19])
                                                                      Pexp_ident "decl2" (typing/includecore.ml[926,33440+14]..[926,33440+19])
                                                                    "type_kind" (typing/includecore.ml[926,33440+20]..[926,33440+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[926,33440+32]..[926,33440+45])
                                                                    Pexp_construct "Type_abstract" (typing/includecore.ml[926,33440+32]..[926,33440+45])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[926,33440+49]..[926,33440+75])
                                                              Pexp_apply
                                                              expression (typing/includecore.ml[926,33440+69]..[926,33440+70])
                                                                Pexp_ident "=" (typing/includecore.ml[926,33440+69]..[926,33440+70])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[926,33440+49]..[926,33440+68])
                                                                    Pexp_field
                                                                    expression (typing/includecore.ml[926,33440+49]..[926,33440+54])
                                                                      Pexp_ident "decl2" (typing/includecore.ml[926,33440+49]..[926,33440+54])
                                                                    "type_manifest" (typing/includecore.ml[926,33440+55]..[926,33440+68])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[926,33440+71]..[926,33440+75])
                                                                    Pexp_construct "None" (typing/includecore.ml[926,33440+71]..[926,33440+75])
                                                                    None
                                                              ]
                                                        ]
                                                  ]
                                                  expression (typing/includecore.ml[929,33636+2]..[957,34763+30])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/includecore.ml[929,33636+6]..[929,33636+9])
                                                          Ppat_var "err" (typing/includecore.ml[929,33636+6]..[929,33636+9])
                                                        expression (typing/includecore.ml[930,33648+4]..[937,33812+53])
                                                          Pexp_ifthenelse
                                                          expression (typing/includecore.ml[930,33648+7]..[930,33648+16])
                                                            Pexp_apply
                                                            expression (typing/includecore.ml[930,33648+7]..[930,33648+10])
                                                              Pexp_ident "not" (typing/includecore.ml[930,33648+7]..[930,33648+10])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/includecore.ml[930,33648+11]..[930,33648+16])
                                                                  Pexp_ident "abstr" (typing/includecore.ml[930,33648+11]..[930,33648+16])
                                                            ]
                                                          expression (typing/includecore.ml[931,33670+6]..[931,33670+10])
                                                            Pexp_construct "None" (typing/includecore.ml[931,33670+6]..[931,33670+10])
                                                            None
                                                          Some
                                                            expression (typing/includecore.ml[933,33690+6]..[937,33812+53])
                                                              Pexp_match
                                                              expression (typing/includecore.ml[934,33702+8]..[934,33702+76])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[934,33702+8]..[934,33702+29])
                                                                  Pexp_ident "Type_immediacy.coerce" (typing/includecore.ml[934,33702+8]..[934,33702+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[934,33702+30]..[934,33702+50])
                                                                      Pexp_field
                                                                      expression (typing/includecore.ml[934,33702+30]..[934,33702+35])
Pexp_ident "decl1" (typing/includecore.ml[934,33702+30]..[934,33702+35])
                                                                      "type_immediate" (typing/includecore.ml[934,33702+36]..[934,33702+50])
                                                                  <arg>
                                                                  Labelled "as_"
                                                                    expression (typing/includecore.ml[934,33702+56]..[934,33702+76])
                                                                      Pexp_field
                                                                      expression (typing/includecore.ml[934,33702+56]..[934,33702+61])
Pexp_ident "decl2" (typing/includecore.ml[934,33702+56]..[934,33702+61])
                                                                      "type_immediate" (typing/includecore.ml[934,33702+62]..[934,33702+76])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (typing/includecore.ml[936,33790+8]..[936,33790+13])
                                                                    Ppat_construct "Ok" (typing/includecore.ml[936,33790+8]..[936,33790+10])
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[936,33790+11]..[936,33790+13])
Ppat_construct "()" (typing/includecore.ml[936,33790+11]..[936,33790+13])
None
                                                                  expression (typing/includecore.ml[936,33790+17]..[936,33790+21])
                                                                    Pexp_construct "None" (typing/includecore.ml[936,33790+17]..[936,33790+21])
                                                                    None
                                                                <case>
                                                                  pattern (typing/includecore.ml[937,33812+8]..[937,33812+23])
                                                                    Ppat_construct "Error" (typing/includecore.ml[937,33812+8]..[937,33812+13])
                                                                    Some
                                                                      []
                                                                      pattern (typing/includecore.ml[937,33812+14]..[937,33812+23])
Ppat_var "violation" (typing/includecore.ml[937,33812+14]..[937,33812+23])
                                                                  expression (typing/includecore.ml[937,33812+27]..[937,33812+53])
                                                                    Pexp_construct "Some" (typing/includecore.ml[937,33812+27]..[937,33812+31])
                                                                    Some
                                                                      expression (typing/includecore.ml[937,33812+32]..[937,33812+53])
Pexp_construct "Immediate" (typing/includecore.ml[937,33812+33]..[937,33812+42])
Some
  expression (typing/includecore.ml[937,33812+43]..[937,33812+52])
    Pexp_ident "violation" (typing/includecore.ml[937,33812+43]..[937,33812+52])
                                                              ]
                                                    ]
                                                    expression (typing/includecore.ml[939,33871+2]..[957,34763+30])
                                                      Pexp_ifthenelse
                                                      expression (typing/includecore.ml[939,33871+5]..[939,33871+16])
                                                        Pexp_apply
                                                        expression (typing/includecore.ml[939,33871+9]..[939,33871+11])
                                                          Pexp_ident "<>" (typing/includecore.ml[939,33871+9]..[939,33871+11])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[939,33871+5]..[939,33871+8])
                                                              Pexp_ident "err" (typing/includecore.ml[939,33871+5]..[939,33871+8])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includecore.ml[939,33871+12]..[939,33871+16])
                                                              Pexp_construct "None" (typing/includecore.ml[939,33871+12]..[939,33871+16])
                                                              None
                                                        ]
                                                      expression (typing/includecore.ml[939,33871+22]..[939,33871+25])
                                                        Pexp_ident "err" (typing/includecore.ml[939,33871+22]..[939,33871+25])
                                                      Some
                                                        expression (typing/includecore.ml[940,33902+2]..[957,34763+30])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/includecore.ml[940,33902+6]..[940,33902+19])
                                                                Ppat_var "need_variance" (typing/includecore.ml[940,33902+6]..[940,33902+19])
                                                              expression (typing/includecore.ml[941,33924+4]..[941,33924+72])
                                                                Pexp_apply
                                                                expression (typing/includecore.ml[941,33924+10]..[941,33924+12])
                                                                  Pexp_ident "||" (typing/includecore.ml[941,33924+10]..[941,33924+12])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[941,33924+4]..[941,33924+9])
                                                                      Pexp_ident "abstr" (typing/includecore.ml[941,33924+4]..[941,33924+9])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/includecore.ml[941,33924+13]..[941,33924+72])
                                                                      Pexp_apply
                                                                      expression (typing/includecore.ml[941,33924+42]..[941,33924+44])
Pexp_ident "||" (typing/includecore.ml[941,33924+42]..[941,33924+44])
                                                                      [
<arg>
Nolabel
  expression (typing/includecore.ml[941,33924+13]..[941,33924+41])
    Pexp_apply
    expression (typing/includecore.ml[941,33924+32]..[941,33924+33])
      Pexp_ident "=" (typing/includecore.ml[941,33924+32]..[941,33924+33])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[941,33924+13]..[941,33924+31])
          Pexp_field
          expression (typing/includecore.ml[941,33924+13]..[941,33924+18])
            Pexp_ident "decl1" (typing/includecore.ml[941,33924+13]..[941,33924+18])
          "type_private" (typing/includecore.ml[941,33924+19]..[941,33924+31])
      <arg>
      Nolabel
        expression (typing/includecore.ml[941,33924+34]..[941,33924+41])
          Pexp_construct "Private" (typing/includecore.ml[941,33924+34]..[941,33924+41])
          None
    ]
<arg>
Nolabel
  expression (typing/includecore.ml[941,33924+45]..[941,33924+72])
    Pexp_apply
    expression (typing/includecore.ml[941,33924+61]..[941,33924+62])
      Pexp_ident "=" (typing/includecore.ml[941,33924+61]..[941,33924+62])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[941,33924+45]..[941,33924+60])
          Pexp_field
          expression (typing/includecore.ml[941,33924+45]..[941,33924+50])
            Pexp_ident "decl1" (typing/includecore.ml[941,33924+45]..[941,33924+50])
          "type_kind" (typing/includecore.ml[941,33924+51]..[941,33924+60])
      <arg>
      Nolabel
        expression (typing/includecore.ml[941,33924+63]..[941,33924+72])
          Pexp_construct "Type_open" (typing/includecore.ml[941,33924+63]..[941,33924+72])
          None
    ]
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (typing/includecore.ml[942,34000+2]..[957,34763+30])
                                                            Pexp_ifthenelse
                                                            expression (typing/includecore.ml[942,34000+5]..[942,34000+22])
                                                              Pexp_apply
                                                              expression (typing/includecore.ml[942,34000+5]..[942,34000+8])
                                                                Pexp_ident "not" (typing/includecore.ml[942,34000+5]..[942,34000+8])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includecore.ml[942,34000+9]..[942,34000+22])
                                                                    Pexp_ident "need_variance" (typing/includecore.ml[942,34000+9]..[942,34000+22])
                                                              ]
                                                            expression (typing/includecore.ml[942,34000+28]..[942,34000+32])
                                                              Pexp_construct "None" (typing/includecore.ml[942,34000+28]..[942,34000+32])
                                                              None
                                                            Some
                                                              expression (typing/includecore.ml[943,34038+2]..[957,34763+30])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/includecore.ml[943,34038+6]..[943,34038+11])
                                                                      Ppat_var "abstr" (typing/includecore.ml[943,34038+6]..[943,34038+11])
                                                                    expression (typing/includecore.ml[943,34038+14]..[943,34038+51])
                                                                      Pexp_apply
                                                                      expression (typing/includecore.ml[943,34038+20]..[943,34038+22])
Pexp_ident "||" (typing/includecore.ml[943,34038+20]..[943,34038+22])
                                                                      [
<arg>
Nolabel
  expression (typing/includecore.ml[943,34038+14]..[943,34038+19])
    Pexp_ident "abstr" (typing/includecore.ml[943,34038+14]..[943,34038+19])
<arg>
Nolabel
  expression (typing/includecore.ml[943,34038+23]..[943,34038+51])
    Pexp_apply
    expression (typing/includecore.ml[943,34038+42]..[943,34038+43])
      Pexp_ident "=" (typing/includecore.ml[943,34038+42]..[943,34038+43])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[943,34038+23]..[943,34038+41])
          Pexp_field
          expression (typing/includecore.ml[943,34038+23]..[943,34038+28])
            Pexp_ident "decl2" (typing/includecore.ml[943,34038+23]..[943,34038+28])
          "type_private" (typing/includecore.ml[943,34038+29]..[943,34038+41])
      <arg>
      Nolabel
        expression (typing/includecore.ml[943,34038+44]..[943,34038+51])
          Pexp_construct "Private" (typing/includecore.ml[943,34038+44]..[943,34038+51])
          None
    ]
                                                                      ]
                                                                ]
                                                                expression (typing/includecore.ml[944,34093+2]..[957,34763+30])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/includecore.ml[944,34093+6]..[944,34093+9])
Ppat_var "opn" (typing/includecore.ml[944,34093+6]..[944,34093+9])
                                                                      expression (typing/includecore.ml[944,34093+12]..[944,34093+69])
Pexp_apply
expression (typing/includecore.ml[944,34093+40]..[944,34093+42])
  Pexp_ident "&&" (typing/includecore.ml[944,34093+40]..[944,34093+42])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[944,34093+12]..[944,34093+39])
      Pexp_apply
      expression (typing/includecore.ml[944,34093+28]..[944,34093+29])
        Pexp_ident "=" (typing/includecore.ml[944,34093+28]..[944,34093+29])
      [
        <arg>
        Nolabel
          expression (typing/includecore.ml[944,34093+12]..[944,34093+27])
            Pexp_field
            expression (typing/includecore.ml[944,34093+12]..[944,34093+17])
              Pexp_ident "decl2" (typing/includecore.ml[944,34093+12]..[944,34093+17])
            "type_kind" (typing/includecore.ml[944,34093+18]..[944,34093+27])
        <arg>
        Nolabel
          expression (typing/includecore.ml[944,34093+30]..[944,34093+39])
            Pexp_construct "Type_open" (typing/includecore.ml[944,34093+30]..[944,34093+39])
            None
      ]
  <arg>
  Nolabel
    expression (typing/includecore.ml[944,34093+43]..[944,34093+69])
      Pexp_apply
      expression (typing/includecore.ml[944,34093+63]..[944,34093+64])
        Pexp_ident "=" (typing/includecore.ml[944,34093+63]..[944,34093+64])
      [
        <arg>
        Nolabel
          expression (typing/includecore.ml[944,34093+43]..[944,34093+62])
            Pexp_field
            expression (typing/includecore.ml[944,34093+43]..[944,34093+48])
              Pexp_ident "decl2" (typing/includecore.ml[944,34093+43]..[944,34093+48])
            "type_manifest" (typing/includecore.ml[944,34093+49]..[944,34093+62])
        <arg>
        Nolabel
          expression (typing/includecore.ml[944,34093+65]..[944,34093+69])
            Pexp_construct "None" (typing/includecore.ml[944,34093+65]..[944,34093+69])
            None
      ]
]
                                                                  ]
                                                                  expression (typing/includecore.ml[945,34166+2]..[957,34763+30])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/includecore.ml[945,34166+6]..[945,34166+17])
  Ppat_var "constrained" (typing/includecore.ml[945,34166+6]..[945,34166+17])
expression (typing/includecore.ml[945,34166+18]..[945,34166+45]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (typing/includecore.ml[945,34166+18]..[945,34166+20])
    Ppat_var "ty" (typing/includecore.ml[945,34166+18]..[945,34166+20])
  expression (typing/includecore.ml[945,34166+23]..[945,34166+45])
    Pexp_apply
    expression (typing/includecore.ml[945,34166+23]..[945,34166+26])
      Pexp_ident "not" (typing/includecore.ml[945,34166+23]..[945,34166+26])
    [
      <arg>
      Nolabel
        expression (typing/includecore.ml[945,34166+27]..[945,34166+45])
          Pexp_apply
          expression (typing/includecore.ml[945,34166+28]..[945,34166+41])
            Pexp_ident "Btype.is_Tvar" (typing/includecore.ml[945,34166+28]..[945,34166+41])
          [
            <arg>
            Nolabel
              expression (typing/includecore.ml[945,34166+42]..[945,34166+44])
                Pexp_ident "ty" (typing/includecore.ml[945,34166+42]..[945,34166+44])
          ]
    ]
                                                                    ]
                                                                    expression (typing/includecore.ml[946,34215+2]..[957,34763+30])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/includecore.ml[946,34215+5]..[956,34684+78])
Pexp_apply
expression (typing/includecore.ml[946,34215+5]..[946,34215+18])
  Pexp_ident "List.for_all2" (typing/includecore.ml[946,34215+5]..[946,34215+18])
[
  <arg>
  Nolabel
    expression (typing/includecore.ml[947,34234+6]..[955,34614+69])
      Pexp_fun
      Nolabel
      None
      pattern (typing/includecore.ml[947,34234+11]..[947,34234+13])
        Ppat_var "ty" (typing/includecore.ml[947,34234+11]..[947,34234+13])
      expression (typing/includecore.ml[947,34234+14]..[955,34614+68]) ghost
        Pexp_fun
        Nolabel
        None
        pattern (typing/includecore.ml[947,34234+14]..[947,34234+21])
          Ppat_tuple
          [
            pattern (typing/includecore.ml[947,34234+15]..[947,34234+17])
              Ppat_var "v1" (typing/includecore.ml[947,34234+15]..[947,34234+17])
            pattern (typing/includecore.ml[947,34234+18]..[947,34234+20])
              Ppat_var "v2" (typing/includecore.ml[947,34234+18]..[947,34234+20])
          ]
        expression (typing/includecore.ml[948,34259+8]..[955,34614+68])
          Pexp_open Fresh
          module_expr (typing/includecore.ml[948,34259+17]..[948,34259+25])
            Pmod_ident "Variance" (typing/includecore.ml[948,34259+17]..[948,34259+25])
          expression (typing/includecore.ml[949,34288+8]..[955,34614+68])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/includecore.ml[949,34288+12]..[949,34288+15])
                  Ppat_var "imp" (typing/includecore.ml[949,34288+12]..[949,34288+15])
                expression (typing/includecore.ml[949,34288+16]..[949,34288+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[949,34288+16]..[949,34288+17])
                    Ppat_var "a" (typing/includecore.ml[949,34288+16]..[949,34288+17])
                  expression (typing/includecore.ml[949,34288+18]..[949,34288+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[949,34288+18]..[949,34288+19])
                      Ppat_var "b" (typing/includecore.ml[949,34288+18]..[949,34288+19])
                    expression (typing/includecore.ml[949,34288+22]..[949,34288+32])
                      Pexp_apply
                      expression (typing/includecore.ml[949,34288+28]..[949,34288+30])
                        Pexp_ident "||" (typing/includecore.ml[949,34288+28]..[949,34288+30])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[949,34288+22]..[949,34288+27])
                            Pexp_apply
                            expression (typing/includecore.ml[949,34288+22]..[949,34288+25])
                              Pexp_ident "not" (typing/includecore.ml[949,34288+22]..[949,34288+25])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[949,34288+26]..[949,34288+27])
                                  Pexp_ident "a" (typing/includecore.ml[949,34288+26]..[949,34288+27])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includecore.ml[949,34288+31]..[949,34288+32])
                            Pexp_ident "b" (typing/includecore.ml[949,34288+31]..[949,34288+32])
                      ]
            ]
            expression (typing/includecore.ml[950,34324+8]..[955,34614+68])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/includecore.ml[950,34324+12]..[950,34324+21])
                    Ppat_tuple
                    [
                      pattern (typing/includecore.ml[950,34324+13]..[950,34324+16])
                        Ppat_var "co1" (typing/includecore.ml[950,34324+13]..[950,34324+16])
                      pattern (typing/includecore.ml[950,34324+17]..[950,34324+20])
                        Ppat_var "cn1" (typing/includecore.ml[950,34324+17]..[950,34324+20])
                    ]
                  expression (typing/includecore.ml[950,34324+24]..[950,34324+36])
                    Pexp_apply
                    expression (typing/includecore.ml[950,34324+24]..[950,34324+33])
                      Pexp_ident "get_upper" (typing/includecore.ml[950,34324+24]..[950,34324+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includecore.ml[950,34324+34]..[950,34324+36])
                          Pexp_ident "v1" (typing/includecore.ml[950,34324+34]..[950,34324+36])
                    ]
                <def>
                  pattern (typing/includecore.ml[950,34324+41]..[950,34324+50])
                    Ppat_tuple
                    [
                      pattern (typing/includecore.ml[950,34324+42]..[950,34324+45])
                        Ppat_var "co2" (typing/includecore.ml[950,34324+42]..[950,34324+45])
                      pattern (typing/includecore.ml[950,34324+46]..[950,34324+49])
                        Ppat_var "cn2" (typing/includecore.ml[950,34324+46]..[950,34324+49])
                    ]
                  expression (typing/includecore.ml[950,34324+53]..[950,34324+65])
                    Pexp_apply
                    expression (typing/includecore.ml[950,34324+53]..[950,34324+62])
                      Pexp_ident "get_upper" (typing/includecore.ml[950,34324+53]..[950,34324+62])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includecore.ml[950,34324+63]..[950,34324+65])
                          Pexp_ident "v2" (typing/includecore.ml[950,34324+63]..[950,34324+65])
                    ]
              ]
              expression (typing/includecore.ml[951,34393+8]..[955,34614+68])
                Pexp_apply
                expression (typing/includecore.ml[953,34514+20]..[953,34514+22])
                  Pexp_ident "&&" (typing/includecore.ml[953,34514+20]..[953,34514+22])
                [
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[951,34393+8]..[953,34514+19])
                      Pexp_ifthenelse
                      expression (typing/includecore.ml[951,34393+12]..[951,34393+17])
                        Pexp_ident "abstr" (typing/includecore.ml[951,34393+12]..[951,34393+17])
                      expression (typing/includecore.ml[951,34393+23]..[951,34393+51])
                        Pexp_apply
                        expression (typing/includecore.ml[951,34393+36]..[951,34393+38])
                          Pexp_ident "&&" (typing/includecore.ml[951,34393+36]..[951,34393+38])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[951,34393+24]..[951,34393+35])
                              Pexp_apply
                              expression (typing/includecore.ml[951,34393+24]..[951,34393+27])
                                Pexp_ident "imp" (typing/includecore.ml[951,34393+24]..[951,34393+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[951,34393+28]..[951,34393+31])
                                    Pexp_ident "co1" (typing/includecore.ml[951,34393+28]..[951,34393+31])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[951,34393+32]..[951,34393+35])
                                    Pexp_ident "co2" (typing/includecore.ml[951,34393+32]..[951,34393+35])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[951,34393+39]..[951,34393+50])
                              Pexp_apply
                              expression (typing/includecore.ml[951,34393+39]..[951,34393+42])
                                Pexp_ident "imp" (typing/includecore.ml[951,34393+39]..[951,34393+42])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[951,34393+43]..[951,34393+46])
                                    Pexp_ident "cn1" (typing/includecore.ml[951,34393+43]..[951,34393+46])
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[951,34393+47]..[951,34393+50])
                                    Pexp_ident "cn2" (typing/includecore.ml[951,34393+47]..[951,34393+50])
                              ]
                        ]
                      Some
                        expression (typing/includecore.ml[952,34445+14]..[953,34514+18])
                          Pexp_ifthenelse
                          expression (typing/includecore.ml[952,34445+17]..[952,34445+38])
                            Pexp_apply
                            expression (typing/includecore.ml[952,34445+21]..[952,34445+23])
                              Pexp_ident "||" (typing/includecore.ml[952,34445+21]..[952,34445+23])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[952,34445+17]..[952,34445+20])
                                  Pexp_ident "opn" (typing/includecore.ml[952,34445+17]..[952,34445+20])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[952,34445+24]..[952,34445+38])
                                  Pexp_apply
                                  expression (typing/includecore.ml[952,34445+24]..[952,34445+35])
                                    Pexp_ident "constrained" (typing/includecore.ml[952,34445+24]..[952,34445+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[952,34445+36]..[952,34445+38])
                                        Pexp_ident "ty" (typing/includecore.ml[952,34445+36]..[952,34445+38])
                                  ]
                            ]
                          expression (typing/includecore.ml[952,34445+44]..[952,34445+68])
                            Pexp_apply
                            expression (typing/includecore.ml[952,34445+55]..[952,34445+57])
                              Pexp_ident "&&" (typing/includecore.ml[952,34445+55]..[952,34445+57])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[952,34445+45]..[952,34445+54])
                                  Pexp_apply
                                  expression (typing/includecore.ml[952,34445+49]..[952,34445+50])
                                    Pexp_ident "=" (typing/includecore.ml[952,34445+49]..[952,34445+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[952,34445+45]..[952,34445+48])
                                        Pexp_ident "co1" (typing/includecore.ml[952,34445+45]..[952,34445+48])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[952,34445+51]..[952,34445+54])
                                        Pexp_ident "co2" (typing/includecore.ml[952,34445+51]..[952,34445+54])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[952,34445+58]..[952,34445+67])
                                  Pexp_apply
                                  expression (typing/includecore.ml[952,34445+62]..[952,34445+63])
                                    Pexp_ident "=" (typing/includecore.ml[952,34445+62]..[952,34445+63])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[952,34445+58]..[952,34445+61])
                                        Pexp_ident "cn1" (typing/includecore.ml[952,34445+58]..[952,34445+61])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[952,34445+64]..[952,34445+67])
                                        Pexp_ident "cn2" (typing/includecore.ml[952,34445+64]..[952,34445+67])
                                  ]
                            ]
                          Some
                            expression (typing/includecore.ml[953,34514+14]..[953,34514+18])
                              Pexp_construct "true" (typing/includecore.ml[953,34514+14]..[953,34514+18])
                              None
                  <arg>
                  Nolabel
                    expression (typing/includecore.ml[954,34537+8]..[955,34614+68])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includecore.ml[954,34537+12]..[954,34537+25])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[954,34537+13]..[954,34537+15])
                                Ppat_var "p1" (typing/includecore.ml[954,34537+13]..[954,34537+15])
                              pattern (typing/includecore.ml[954,34537+16]..[954,34537+18])
                                Ppat_var "n1" (typing/includecore.ml[954,34537+16]..[954,34537+18])
                              pattern (typing/includecore.ml[954,34537+19]..[954,34537+21])
                                Ppat_var "i1" (typing/includecore.ml[954,34537+19]..[954,34537+21])
                              pattern (typing/includecore.ml[954,34537+22]..[954,34537+24])
                                Ppat_var "j1" (typing/includecore.ml[954,34537+22]..[954,34537+24])
                            ]
                          expression (typing/includecore.ml[954,34537+28]..[954,34537+40])
                            Pexp_apply
                            expression (typing/includecore.ml[954,34537+28]..[954,34537+37])
                              Pexp_ident "get_lower" (typing/includecore.ml[954,34537+28]..[954,34537+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[954,34537+38]..[954,34537+40])
                                  Pexp_ident "v1" (typing/includecore.ml[954,34537+38]..[954,34537+40])
                            ]
                        <def>
                          pattern (typing/includecore.ml[954,34537+45]..[954,34537+58])
                            Ppat_tuple
                            [
                              pattern (typing/includecore.ml[954,34537+46]..[954,34537+48])
                                Ppat_var "p2" (typing/includecore.ml[954,34537+46]..[954,34537+48])
                              pattern (typing/includecore.ml[954,34537+49]..[954,34537+51])
                                Ppat_var "n2" (typing/includecore.ml[954,34537+49]..[954,34537+51])
                              pattern (typing/includecore.ml[954,34537+52]..[954,34537+54])
                                Ppat_var "i2" (typing/includecore.ml[954,34537+52]..[954,34537+54])
                              pattern (typing/includecore.ml[954,34537+55]..[954,34537+57])
                                Ppat_var "j2" (typing/includecore.ml[954,34537+55]..[954,34537+57])
                            ]
                          expression (typing/includecore.ml[954,34537+61]..[954,34537+73])
                            Pexp_apply
                            expression (typing/includecore.ml[954,34537+61]..[954,34537+70])
                              Pexp_ident "get_lower" (typing/includecore.ml[954,34537+61]..[954,34537+70])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[954,34537+71]..[954,34537+73])
                                  Pexp_ident "v2" (typing/includecore.ml[954,34537+71]..[954,34537+73])
                            ]
                      ]
                      expression (typing/includecore.ml[955,34614+8]..[955,34614+68])
                        Pexp_apply
                        expression (typing/includecore.ml[955,34614+8]..[955,34614+11])
                          Pexp_ident "imp" (typing/includecore.ml[955,34614+8]..[955,34614+11])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[955,34614+12]..[955,34614+17])
                              Pexp_ident "abstr" (typing/includecore.ml[955,34614+12]..[955,34614+17])
                          <arg>
                          Nolabel
                            expression (typing/includecore.ml[955,34614+18]..[955,34614+68])
                              Pexp_apply
                              expression (typing/includecore.ml[955,34614+29]..[955,34614+31])
                                Pexp_ident "&&" (typing/includecore.ml[955,34614+29]..[955,34614+31])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[955,34614+19]..[955,34614+28])
                                    Pexp_apply
                                    expression (typing/includecore.ml[955,34614+19]..[955,34614+22])
                                      Pexp_ident "imp" (typing/includecore.ml[955,34614+19]..[955,34614+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[955,34614+23]..[955,34614+25])
                                          Pexp_ident "p2" (typing/includecore.ml[955,34614+23]..[955,34614+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[955,34614+26]..[955,34614+28])
                                          Pexp_ident "p1" (typing/includecore.ml[955,34614+26]..[955,34614+28])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[955,34614+32]..[955,34614+67])
                                    Pexp_apply
                                    expression (typing/includecore.ml[955,34614+42]..[955,34614+44])
                                      Pexp_ident "&&" (typing/includecore.ml[955,34614+42]..[955,34614+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[955,34614+32]..[955,34614+41])
                                          Pexp_apply
                                          expression (typing/includecore.ml[955,34614+32]..[955,34614+35])
                                            Pexp_ident "imp" (typing/includecore.ml[955,34614+32]..[955,34614+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[955,34614+36]..[955,34614+38])
                                                Pexp_ident "n2" (typing/includecore.ml[955,34614+36]..[955,34614+38])
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[955,34614+39]..[955,34614+41])
                                                Pexp_ident "n1" (typing/includecore.ml[955,34614+39]..[955,34614+41])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[955,34614+45]..[955,34614+67])
                                          Pexp_apply
                                          expression (typing/includecore.ml[955,34614+55]..[955,34614+57])
                                            Pexp_ident "&&" (typing/includecore.ml[955,34614+55]..[955,34614+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[955,34614+45]..[955,34614+54])
                                                Pexp_apply
                                                expression (typing/includecore.ml[955,34614+45]..[955,34614+48])
                                                  Pexp_ident "imp" (typing/includecore.ml[955,34614+45]..[955,34614+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[955,34614+49]..[955,34614+51])
                                                      Pexp_ident "i2" (typing/includecore.ml[955,34614+49]..[955,34614+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[955,34614+52]..[955,34614+54])
                                                      Pexp_ident "i1" (typing/includecore.ml[955,34614+52]..[955,34614+54])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/includecore.ml[955,34614+58]..[955,34614+67])
                                                Pexp_apply
                                                expression (typing/includecore.ml[955,34614+58]..[955,34614+61])
                                                  Pexp_ident "imp" (typing/includecore.ml[955,34614+58]..[955,34614+61])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[955,34614+62]..[955,34614+64])
                                                      Pexp_ident "j2" (typing/includecore.ml[955,34614+62]..[955,34614+64])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includecore.ml[955,34614+65]..[955,34614+67])
                                                      Pexp_ident "j1" (typing/includecore.ml[955,34614+65]..[955,34614+67])
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                ]
  <arg>
  Nolabel
    expression (typing/includecore.ml[956,34684+6]..[956,34684+23])
      Pexp_field
      expression (typing/includecore.ml[956,34684+6]..[956,34684+11])
        Pexp_ident "decl2" (typing/includecore.ml[956,34684+6]..[956,34684+11])
      "type_params" (typing/includecore.ml[956,34684+12]..[956,34684+23])
  <arg>
  Nolabel
    expression (typing/includecore.ml[956,34684+24]..[956,34684+78])
      Pexp_apply
      expression (typing/includecore.ml[956,34684+25]..[956,34684+37])
        Pexp_ident "List.combine" (typing/includecore.ml[956,34684+25]..[956,34684+37])
      [
        <arg>
        Nolabel
          expression (typing/includecore.ml[956,34684+38]..[956,34684+57])
            Pexp_field
            expression (typing/includecore.ml[956,34684+38]..[956,34684+43])
              Pexp_ident "decl1" (typing/includecore.ml[956,34684+38]..[956,34684+43])
            "type_variance" (typing/includecore.ml[956,34684+44]..[956,34684+57])
        <arg>
        Nolabel
          expression (typing/includecore.ml[956,34684+58]..[956,34684+77])
            Pexp_field
            expression (typing/includecore.ml[956,34684+58]..[956,34684+63])
              Pexp_ident "decl2" (typing/includecore.ml[956,34684+58]..[956,34684+63])
            "type_variance" (typing/includecore.ml[956,34684+64]..[956,34684+77])
      ]
]
                                                                      expression (typing/includecore.ml[957,34763+7]..[957,34763+11])
Pexp_construct "None" (typing/includecore.ml[957,34763+7]..[957,34763+11])
None
                                                                      Some
expression (typing/includecore.ml[957,34763+17]..[957,34763+30])
  Pexp_construct "Some" (typing/includecore.ml[957,34763+17]..[957,34763+21])
  Some
    expression (typing/includecore.ml[957,34763+22]..[957,34763+30])
      Pexp_construct "Variance" (typing/includecore.ml[957,34763+22]..[957,34763+30])
      None
    ]
  structure_item (typing/includecore.ml[961,34843+0]..[992,35930+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includecore.ml[961,34843+4]..[961,34843+26])
          Ppat_var "extension_constructors" (typing/includecore.ml[961,34843+4]..[961,34843+26])
        expression (typing/includecore.ml[961,34843+27]..[992,35930+20]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/includecore.ml[961,34843+28]..[961,34843+31])
            Ppat_var "loc" (typing/includecore.ml[961,34843+28]..[961,34843+31])
          expression (typing/includecore.ml[961,34843+32]..[992,35930+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includecore.ml[961,34843+32]..[961,34843+35])
              Ppat_var "env" (typing/includecore.ml[961,34843+32]..[961,34843+35])
            expression (typing/includecore.ml[961,34843+36]..[992,35930+20]) ghost
              Pexp_fun
              Labelled "mark"
              None
              pattern (typing/includecore.ml[961,34843+37]..[961,34843+41])
                Ppat_var "mark" (typing/includecore.ml[961,34843+37]..[961,34843+41])
              expression (typing/includecore.ml[961,34843+42]..[992,35930+20]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includecore.ml[961,34843+42]..[961,34843+44])
                  Ppat_var "id" (typing/includecore.ml[961,34843+42]..[961,34843+44])
                expression (typing/includecore.ml[961,34843+45]..[992,35930+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includecore.ml[961,34843+45]..[961,34843+49])
                    Ppat_var "ext1" (typing/includecore.ml[961,34843+45]..[961,34843+49])
                  expression (typing/includecore.ml[961,34843+50]..[992,35930+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includecore.ml[961,34843+50]..[961,34843+54])
                      Ppat_var "ext2" (typing/includecore.ml[961,34843+50]..[961,34843+54])
                    expression (typing/includecore.ml[962,34900+2]..[992,35930+20])
                      Pexp_sequence
                      expression (typing/includecore.ml[962,34900+2]..[968,35092+5])
                        Pexp_ifthenelse
                        expression (typing/includecore.ml[962,34900+5]..[962,34900+9])
                          Pexp_ident "mark" (typing/includecore.ml[962,34900+5]..[962,34900+9])
                        expression (typing/includecore.ml[962,34900+15]..[968,35092+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includecore.ml[963,34921+8]..[963,34921+37]) ghost
                                Ppat_constraint
                                pattern (typing/includecore.ml[963,34921+8]..[963,34921+13])
                                  Ppat_var "usage" (typing/includecore.ml[963,34921+8]..[963,34921+13])
                                core_type (typing/includecore.ml[963,34921+16]..[963,34921+37]) ghost
                                  Ptyp_poly
                                  core_type (typing/includecore.ml[963,34921+16]..[963,34921+37])
                                    Ptyp_constr "Env.constructor_usage" (typing/includecore.ml[963,34921+16]..[963,34921+37])
                                    []
                              expression (typing/includecore.ml[963,34921+8]..[965,35014+31])
                                Pexp_constraint
                                expression (typing/includecore.ml[964,34961+6]..[965,35014+31])
                                  Pexp_ifthenelse
                                  expression (typing/includecore.ml[964,34961+9]..[964,34961+34])
                                    Pexp_apply
                                    expression (typing/includecore.ml[964,34961+26]..[964,34961+27])
                                      Pexp_ident "=" (typing/includecore.ml[964,34961+26]..[964,34961+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[964,34961+9]..[964,34961+25])
                                          Pexp_field
                                          expression (typing/includecore.ml[964,34961+9]..[964,34961+13])
                                            Pexp_ident "ext2" (typing/includecore.ml[964,34961+9]..[964,34961+13])
                                          "ext_private" (typing/includecore.ml[964,34961+14]..[964,34961+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/includecore.ml[964,34961+28]..[964,34961+34])
                                          Pexp_construct "Public" (typing/includecore.ml[964,34961+28]..[964,34961+34])
                                          None
                                    ]
                                  expression (typing/includecore.ml[964,34961+40]..[964,34961+52])
                                    Pexp_construct "Env.Exported" (typing/includecore.ml[964,34961+40]..[964,34961+52])
                                    None
                                  Some
                                    expression (typing/includecore.ml[965,35014+11]..[965,35014+31])
                                      Pexp_construct "Env.Exported_private" (typing/includecore.ml[965,35014+11]..[965,35014+31])
                                      None
                                core_type (typing/includecore.ml[963,34921+16]..[963,34921+37])
                                  Ptyp_constr "Env.constructor_usage" (typing/includecore.ml[963,34921+16]..[963,34921+37])
                                  []
                          ]
                          expression (typing/includecore.ml[967,35053+4]..[967,35053+38])
                            Pexp_apply
                            expression (typing/includecore.ml[967,35053+4]..[967,35053+27])
                              Pexp_ident "Env.mark_extension_used" (typing/includecore.ml[967,35053+4]..[967,35053+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[967,35053+28]..[967,35053+33])
                                  Pexp_ident "usage" (typing/includecore.ml[967,35053+28]..[967,35053+33])
                              <arg>
                              Nolabel
                                expression (typing/includecore.ml[967,35053+34]..[967,35053+38])
                                  Pexp_ident "ext1" (typing/includecore.ml[967,35053+34]..[967,35053+38])
                            ]
                        None
                      expression (typing/includecore.ml[969,35099+2]..[992,35930+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includecore.ml[969,35099+6]..[969,35099+9])
                              Ppat_var "ty1" (typing/includecore.ml[969,35099+6]..[969,35099+9])
                            expression (typing/includecore.ml[970,35111+4]..[970,35111+80])
                              Pexp_apply
                              expression (typing/includecore.ml[970,35111+4]..[970,35111+18])
                                Pexp_ident "Btype.newgenty" (typing/includecore.ml[970,35111+4]..[970,35111+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includecore.ml[970,35111+19]..[970,35111+80])
                                    Pexp_construct "Tconstr" (typing/includecore.ml[970,35111+20]..[970,35111+27])
                                    Some
                                      expression (typing/includecore.ml[970,35111+27]..[970,35111+79])
                                        Pexp_tuple
                                        [
                                          expression (typing/includecore.ml[970,35111+28]..[970,35111+46])
                                            Pexp_field
                                            expression (typing/includecore.ml[970,35111+28]..[970,35111+32])
                                              Pexp_ident "ext1" (typing/includecore.ml[970,35111+28]..[970,35111+32])
                                            "ext_type_path" (typing/includecore.ml[970,35111+33]..[970,35111+46])
                                          expression (typing/includecore.ml[970,35111+48]..[970,35111+68])
                                            Pexp_field
                                            expression (typing/includecore.ml[970,35111+48]..[970,35111+52])
                                              Pexp_ident "ext1" (typing/includecore.ml[970,35111+48]..[970,35111+52])
                                            "ext_type_params" (typing/includecore.ml[970,35111+53]..[970,35111+68])
                                          expression (typing/includecore.ml[970,35111+70]..[970,35111+78])
                                            Pexp_apply
                                            expression (typing/includecore.ml[970,35111+70]..[970,35111+73])
                                              Pexp_ident "ref" (typing/includecore.ml[970,35111+70]..[970,35111+73])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[970,35111+74]..[970,35111+78])
                                                  Pexp_construct "Mnil" (typing/includecore.ml[970,35111+74]..[970,35111+78])
                                                  None
                                            ]
                                        ]
                              ]
                        ]
                        expression (typing/includecore.ml[972,35197+2]..[992,35930+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includecore.ml[972,35197+6]..[972,35197+9])
                                Ppat_var "ty2" (typing/includecore.ml[972,35197+6]..[972,35197+9])
                              expression (typing/includecore.ml[973,35209+4]..[973,35209+80])
                                Pexp_apply
                                expression (typing/includecore.ml[973,35209+4]..[973,35209+18])
                                  Pexp_ident "Btype.newgenty" (typing/includecore.ml[973,35209+4]..[973,35209+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includecore.ml[973,35209+19]..[973,35209+80])
                                      Pexp_construct "Tconstr" (typing/includecore.ml[973,35209+20]..[973,35209+27])
                                      Some
                                        expression (typing/includecore.ml[973,35209+27]..[973,35209+79])
                                          Pexp_tuple
                                          [
                                            expression (typing/includecore.ml[973,35209+28]..[973,35209+46])
                                              Pexp_field
                                              expression (typing/includecore.ml[973,35209+28]..[973,35209+32])
                                                Pexp_ident "ext2" (typing/includecore.ml[973,35209+28]..[973,35209+32])
                                              "ext_type_path" (typing/includecore.ml[973,35209+33]..[973,35209+46])
                                            expression (typing/includecore.ml[973,35209+48]..[973,35209+68])
                                              Pexp_field
                                              expression (typing/includecore.ml[973,35209+48]..[973,35209+52])
                                                Pexp_ident "ext2" (typing/includecore.ml[973,35209+48]..[973,35209+52])
                                              "ext_type_params" (typing/includecore.ml[973,35209+53]..[973,35209+68])
                                            expression (typing/includecore.ml[973,35209+70]..[973,35209+78])
                                              Pexp_apply
                                              expression (typing/includecore.ml[973,35209+70]..[973,35209+73])
                                                Pexp_ident "ref" (typing/includecore.ml[973,35209+70]..[973,35209+73])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includecore.ml[973,35209+74]..[973,35209+78])
                                                    Pexp_construct "Mnil" (typing/includecore.ml[973,35209+74]..[973,35209+78])
                                                    None
                                              ]
                                          ]
                                ]
                          ]
                          expression (typing/includecore.ml[975,35295+2]..[992,35930+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includecore.ml[975,35295+6]..[975,35295+9])
                                  Ppat_var "tl1" (typing/includecore.ml[975,35295+6]..[975,35295+9])
                                expression (typing/includecore.ml[975,35295+12]..[975,35295+39])
                                  Pexp_construct "::" (typing/includecore.ml[975,35295+16]..[975,35295+18])
                                  Some
                                    expression (typing/includecore.ml[975,35295+12]..[975,35295+39]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/includecore.ml[975,35295+12]..[975,35295+15])
                                          Pexp_ident "ty1" (typing/includecore.ml[975,35295+12]..[975,35295+15])
                                        expression (typing/includecore.ml[975,35295+19]..[975,35295+39])
                                          Pexp_field
                                          expression (typing/includecore.ml[975,35295+19]..[975,35295+23])
                                            Pexp_ident "ext1" (typing/includecore.ml[975,35295+19]..[975,35295+23])
                                          "ext_type_params" (typing/includecore.ml[975,35295+24]..[975,35295+39])
                                      ]
                            ]
                            expression (typing/includecore.ml[976,35338+2]..[992,35930+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includecore.ml[976,35338+6]..[976,35338+9])
                                    Ppat_var "tl2" (typing/includecore.ml[976,35338+6]..[976,35338+9])
                                  expression (typing/includecore.ml[976,35338+12]..[976,35338+39])
                                    Pexp_construct "::" (typing/includecore.ml[976,35338+16]..[976,35338+18])
                                    Some
                                      expression (typing/includecore.ml[976,35338+12]..[976,35338+39]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/includecore.ml[976,35338+12]..[976,35338+15])
                                            Pexp_ident "ty2" (typing/includecore.ml[976,35338+12]..[976,35338+15])
                                          expression (typing/includecore.ml[976,35338+19]..[976,35338+39])
                                            Pexp_field
                                            expression (typing/includecore.ml[976,35338+19]..[976,35338+23])
                                              Pexp_ident "ext2" (typing/includecore.ml[976,35338+19]..[976,35338+23])
                                            "ext_type_params" (typing/includecore.ml[976,35338+24]..[976,35338+39])
                                        ]
                              ]
                              expression (typing/includecore.ml[977,35381+2]..[992,35930+20])
                                Pexp_match
                                expression (typing/includecore.ml[977,35381+8]..[977,35381+36])
                                  Pexp_apply
                                  expression (typing/includecore.ml[977,35381+8]..[977,35381+19])
                                    Pexp_ident "Ctype.equal" (typing/includecore.ml[977,35381+8]..[977,35381+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[977,35381+20]..[977,35381+23])
                                        Pexp_ident "env" (typing/includecore.ml[977,35381+20]..[977,35381+23])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[977,35381+24]..[977,35381+28])
                                        Pexp_construct "true" (typing/includecore.ml[977,35381+24]..[977,35381+28])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[977,35381+29]..[977,35381+32])
                                        Pexp_ident "tl1" (typing/includecore.ml[977,35381+29]..[977,35381+32])
                                    <arg>
                                    Nolabel
                                      expression (typing/includecore.ml[977,35381+33]..[977,35381+36])
                                        Pexp_ident "tl2" (typing/includecore.ml[977,35381+33]..[977,35381+36])
                                  ]
                                [
                                  <case>
                                    pattern (typing/includecore.ml[978,35423+4]..[978,35423+32])
                                      Ppat_exception
                                      pattern (typing/includecore.ml[978,35423+14]..[978,35423+32])
                                        Ppat_construct "Ctype.Equality" (typing/includecore.ml[978,35423+14]..[978,35423+28])
                                        Some
                                          []
                                          pattern (typing/includecore.ml[978,35423+29]..[978,35423+32])
                                            Ppat_var "err" (typing/includecore.ml[978,35423+29]..[978,35423+32])
                                    expression (typing/includecore.ml[979,35459+6]..[979,35459+60])
                                      Pexp_construct "Some" (typing/includecore.ml[979,35459+6]..[979,35459+10])
                                      Some
                                        expression (typing/includecore.ml[979,35459+11]..[979,35459+60])
                                          Pexp_construct "Constructor_mismatch" (typing/includecore.ml[979,35459+12]..[979,35459+32])
                                          Some
                                            expression (typing/includecore.ml[979,35459+33]..[979,35459+59])
                                              Pexp_tuple
                                              [
                                                expression (typing/includecore.ml[979,35459+34]..[979,35459+36])
                                                  Pexp_ident "id" (typing/includecore.ml[979,35459+34]..[979,35459+36])
                                                expression (typing/includecore.ml[979,35459+38]..[979,35459+42])
                                                  Pexp_ident "ext1" (typing/includecore.ml[979,35459+38]..[979,35459+42])
                                                expression (typing/includecore.ml[979,35459+44]..[979,35459+48])
                                                  Pexp_ident "ext2" (typing/includecore.ml[979,35459+44]..[979,35459+48])
                                                expression (typing/includecore.ml[979,35459+50]..[979,35459+58])
                                                  Pexp_construct "Type" (typing/includecore.ml[979,35459+50]..[979,35459+54])
                                                  Some
                                                    expression (typing/includecore.ml[979,35459+55]..[979,35459+58])
                                                      Pexp_ident "err" (typing/includecore.ml[979,35459+55]..[979,35459+58])
                                              ]
                                  <case>
                                    pattern (typing/includecore.ml[980,35520+4]..[980,35520+6])
                                      Ppat_construct "()" (typing/includecore.ml[980,35520+4]..[980,35520+6])
                                      None
                                    expression (typing/includecore.ml[981,35530+4]..[992,35930+20])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/includecore.ml[981,35530+8]..[981,35530+9])
                                            Ppat_var "r" (typing/includecore.ml[981,35530+8]..[981,35530+9])
                                          expression (typing/includecore.ml[982,35542+6]..[985,35688+35])
                                            Pexp_apply
                                            expression (typing/includecore.ml[982,35542+6]..[982,35542+42])
                                              Pexp_ident "Variant_diffing.compare_constructors" (typing/includecore.ml[982,35542+6]..[982,35542+42])
                                            [
                                              <arg>
                                              Labelled "loc"
                                                expression (typing/includecore.ml[982,35542+44]..[982,35542+47])
                                                  Pexp_ident "loc" (typing/includecore.ml[982,35542+44]..[982,35542+47])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[982,35542+48]..[982,35542+51])
                                                  Pexp_ident "env" (typing/includecore.ml[982,35542+48]..[982,35542+51])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[983,35594+8]..[983,35594+28])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[983,35594+8]..[983,35594+12])
                                                    Pexp_ident "ext1" (typing/includecore.ml[983,35594+8]..[983,35594+12])
                                                  "ext_type_params" (typing/includecore.ml[983,35594+13]..[983,35594+28])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[983,35594+29]..[983,35594+49])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[983,35594+29]..[983,35594+33])
                                                    Pexp_ident "ext2" (typing/includecore.ml[983,35594+29]..[983,35594+33])
                                                  "ext_type_params" (typing/includecore.ml[983,35594+34]..[983,35594+49])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[984,35644+8]..[984,35644+25])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[984,35644+8]..[984,35644+12])
                                                    Pexp_ident "ext1" (typing/includecore.ml[984,35644+8]..[984,35644+12])
                                                  "ext_ret_type" (typing/includecore.ml[984,35644+13]..[984,35644+25])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[984,35644+26]..[984,35644+43])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[984,35644+26]..[984,35644+30])
                                                    Pexp_ident "ext2" (typing/includecore.ml[984,35644+26]..[984,35644+30])
                                                  "ext_ret_type" (typing/includecore.ml[984,35644+31]..[984,35644+43])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[985,35688+8]..[985,35688+21])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[985,35688+8]..[985,35688+12])
                                                    Pexp_ident "ext1" (typing/includecore.ml[985,35688+8]..[985,35688+12])
                                                  "ext_args" (typing/includecore.ml[985,35688+13]..[985,35688+21])
                                              <arg>
                                              Nolabel
                                                expression (typing/includecore.ml[985,35688+22]..[985,35688+35])
                                                  Pexp_field
                                                  expression (typing/includecore.ml[985,35688+22]..[985,35688+26])
                                                    Pexp_ident "ext2" (typing/includecore.ml[985,35688+22]..[985,35688+26])
                                                  "ext_args" (typing/includecore.ml[985,35688+27]..[985,35688+35])
                                            ]
                                      ]
                                      expression (typing/includecore.ml[987,35731+4]..[992,35930+20])
                                        Pexp_match
                                        expression (typing/includecore.ml[987,35731+10]..[987,35731+11])
                                          Pexp_ident "r" (typing/includecore.ml[987,35731+10]..[987,35731+11])
                                        [
                                          <case>
                                            pattern (typing/includecore.ml[988,35748+6]..[988,35748+12])
                                              Ppat_construct "Some" (typing/includecore.ml[988,35748+6]..[988,35748+10])
                                              Some
                                                []
                                                pattern (typing/includecore.ml[988,35748+11]..[988,35748+12])
                                                  Ppat_var "r" (typing/includecore.ml[988,35748+11]..[988,35748+12])
                                            expression (typing/includecore.ml[988,35748+16]..[988,35748+63])
                                              Pexp_construct "Some" (typing/includecore.ml[988,35748+16]..[988,35748+20])
                                              Some
                                                expression (typing/includecore.ml[988,35748+21]..[988,35748+63])
                                                  Pexp_construct "Constructor_mismatch" (typing/includecore.ml[988,35748+22]..[988,35748+42])
                                                  Some
                                                    expression (typing/includecore.ml[988,35748+43]..[988,35748+62])
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/includecore.ml[988,35748+44]..[988,35748+46])
                                                          Pexp_ident "id" (typing/includecore.ml[988,35748+44]..[988,35748+46])
                                                        expression (typing/includecore.ml[988,35748+48]..[988,35748+52])
                                                          Pexp_ident "ext1" (typing/includecore.ml[988,35748+48]..[988,35748+52])
                                                        expression (typing/includecore.ml[988,35748+54]..[988,35748+58])
                                                          Pexp_ident "ext2" (typing/includecore.ml[988,35748+54]..[988,35748+58])
                                                        expression (typing/includecore.ml[988,35748+60]..[988,35748+61])
                                                          Pexp_ident "r" (typing/includecore.ml[988,35748+60]..[988,35748+61])
                                                      ]
                                          <case>
                                            pattern (typing/includecore.ml[989,35812+6]..[989,35812+10])
                                              Ppat_construct "None" (typing/includecore.ml[989,35812+6]..[989,35812+10])
                                              None
                                            expression (typing/includecore.ml[990,35826+6]..[992,35930+20])
                                              Pexp_match
                                              expression (typing/includecore.ml[990,35826+12]..[990,35826+46])
                                                Pexp_tuple
                                                [
                                                  expression (typing/includecore.ml[990,35826+12]..[990,35826+28])
                                                    Pexp_field
                                                    expression (typing/includecore.ml[990,35826+12]..[990,35826+16])
                                                      Pexp_ident "ext1" (typing/includecore.ml[990,35826+12]..[990,35826+16])
                                                    "ext_private" (typing/includecore.ml[990,35826+17]..[990,35826+28])
                                                  expression (typing/includecore.ml[990,35826+30]..[990,35826+46])
                                                    Pexp_field
                                                    expression (typing/includecore.ml[990,35826+30]..[990,35826+34])
                                                      Pexp_ident "ext2" (typing/includecore.ml[990,35826+30]..[990,35826+34])
                                                    "ext_private" (typing/includecore.ml[990,35826+35]..[990,35826+46])
                                                ]
                                              [
                                                <case>
                                                  pattern (typing/includecore.ml[991,35878+8]..[991,35878+23])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includecore.ml[991,35878+8]..[991,35878+15])
                                                        Ppat_construct "Private" (typing/includecore.ml[991,35878+8]..[991,35878+15])
                                                        None
                                                      pattern (typing/includecore.ml[991,35878+17]..[991,35878+23])
                                                        Ppat_construct "Public" (typing/includecore.ml[991,35878+17]..[991,35878+23])
                                                        None
                                                    ]
                                                  expression (typing/includecore.ml[991,35878+27]..[991,35878+51])
                                                    Pexp_construct "Some" (typing/includecore.ml[991,35878+27]..[991,35878+31])
                                                    Some
                                                      expression (typing/includecore.ml[991,35878+32]..[991,35878+51])
                                                        Pexp_construct "Constructor_privacy" (typing/includecore.ml[991,35878+32]..[991,35878+51])
                                                        None
                                                <case>
                                                  pattern (typing/includecore.ml[992,35930+8]..[992,35930+12])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includecore.ml[992,35930+8]..[992,35930+9])
                                                        Ppat_any
                                                      pattern (typing/includecore.ml[992,35930+11]..[992,35930+12])
                                                        Ppat_any
                                                    ]
                                                  expression (typing/includecore.ml[992,35930+16]..[992,35930+20])
                                                    Pexp_construct "None" (typing/includecore.ml[992,35930+16]..[992,35930+20])
                                                    None
                                              ]
                                        ]
                                ]
    ]
]

