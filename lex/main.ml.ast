[
  structure_item (lex/main.ml[18,1129+0]..[18,1129+11])
    Pstr_open Fresh
    module_expr (lex/main.ml[18,1129+5]..[18,1129+11])
      Pmod_ident "Syntax" (lex/main.ml[18,1129+5]..[18,1129+11])
  structure_item (lex/main.ml[20,1142+0]..[20,1142+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[20,1142+4]..[20,1142+15])
          Ppat_var "ml_automata" (lex/main.ml[20,1142+4]..[20,1142+15])
        expression (lex/main.ml[20,1142+18]..[20,1142+27])
          Pexp_apply
          expression (lex/main.ml[20,1142+18]..[20,1142+21])
            Pexp_ident "ref" (lex/main.ml[20,1142+18]..[20,1142+21])
          [
            <arg>
            Nolabel
              expression (lex/main.ml[20,1142+22]..[20,1142+27])
                Pexp_construct "false" (lex/main.ml[20,1142+22]..[20,1142+27])
                None
          ]
    ]
  structure_item (lex/main.ml[21,1170+0]..[21,1170+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[21,1170+4]..[21,1170+15])
          Ppat_var "source_name" (lex/main.ml[21,1170+4]..[21,1170+15])
        expression (lex/main.ml[21,1170+18]..[21,1170+26])
          Pexp_apply
          expression (lex/main.ml[21,1170+18]..[21,1170+21])
            Pexp_ident "ref" (lex/main.ml[21,1170+18]..[21,1170+21])
          [
            <arg>
            Nolabel
              expression (lex/main.ml[21,1170+22]..[21,1170+26])
                Pexp_construct "None" (lex/main.ml[21,1170+22]..[21,1170+26])
                None
          ]
    ]
  structure_item (lex/main.ml[22,1197+0]..[22,1197+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[22,1197+4]..[22,1197+15])
          Ppat_var "output_name" (lex/main.ml[22,1197+4]..[22,1197+15])
        expression (lex/main.ml[22,1197+18]..[22,1197+26])
          Pexp_apply
          expression (lex/main.ml[22,1197+18]..[22,1197+21])
            Pexp_ident "ref" (lex/main.ml[22,1197+18]..[22,1197+21])
          [
            <arg>
            Nolabel
              expression (lex/main.ml[22,1197+22]..[22,1197+26])
                Pexp_construct "None" (lex/main.ml[22,1197+22]..[22,1197+26])
                None
          ]
    ]
  structure_item (lex/main.ml[24,1225+0]..[24,1225+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[24,1225+4]..[24,1225+9])
          Ppat_var "usage" (lex/main.ml[24,1225+4]..[24,1225+9])
        expression (lex/main.ml[24,1225+12]..[24,1225+50])
          Pexp_constant PConst_string("usage: ocamllex [options] sourcefile",(lex/main.ml[24,1225+13]..[24,1225+49]),None)
    ]
  structure_item (lex/main.ml[26,1277+0]..[29,1413+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[26,1277+4]..[26,1277+24])
          Ppat_var "print_version_string" (lex/main.ml[26,1277+4]..[26,1277+24])
        expression (lex/main.ml[26,1277+25]..[29,1413+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lex/main.ml[26,1277+25]..[26,1277+27])
            Ppat_construct "()" (lex/main.ml[26,1277+25]..[26,1277+27])
            None
          expression (lex/main.ml[27,1307+2]..[29,1413+8])
            Pexp_sequence
            expression (lex/main.ml[27,1307+2]..[27,1307+52])
              Pexp_apply
              expression (lex/main.ml[27,1307+2]..[27,1307+14])
                Pexp_ident "print_string" (lex/main.ml[27,1307+2]..[27,1307+14])
              [
                <arg>
                Nolabel
                  expression (lex/main.ml[27,1307+15]..[27,1307+52])
                    Pexp_constant PConst_string("The OCaml lexer generator, version ",(lex/main.ml[27,1307+16]..[27,1307+51]),None)
              ]
            expression (lex/main.ml[28,1361+2]..[29,1413+8])
              Pexp_sequence
              expression (lex/main.ml[28,1361+2]..[28,1361+32])
                Pexp_apply
                expression (lex/main.ml[28,1361+2]..[28,1361+14])
                  Pexp_ident "print_string" (lex/main.ml[28,1361+2]..[28,1361+14])
                [
                  <arg>
                  Nolabel
                    expression (lex/main.ml[28,1361+15]..[28,1361+32])
                      Pexp_ident "Sys.ocaml_version" (lex/main.ml[28,1361+15]..[28,1361+32])
                ]
              expression (lex/main.ml[28,1361+35]..[29,1413+8])
                Pexp_sequence
                expression (lex/main.ml[28,1361+35]..[28,1361+50])
                  Pexp_apply
                  expression (lex/main.ml[28,1361+35]..[28,1361+48])
                    Pexp_ident "print_newline" (lex/main.ml[28,1361+35]..[28,1361+48])
                  [
                    <arg>
                    Nolabel
                      expression (lex/main.ml[28,1361+48]..[28,1361+50])
                        Pexp_construct "()" (lex/main.ml[28,1361+48]..[28,1361+50])
                        None
                  ]
                expression (lex/main.ml[29,1413+2]..[29,1413+8])
                  Pexp_apply
                  expression (lex/main.ml[29,1413+2]..[29,1413+6])
                    Pexp_ident "exit" (lex/main.ml[29,1413+2]..[29,1413+6])
                  [
                    <arg>
                    Nolabel
                      expression (lex/main.ml[29,1413+7]..[29,1413+8])
                        Pexp_constant PConst_int (0,None)
                  ]
    ]
  structure_item (lex/main.ml[31,1423+0]..[33,1485+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[31,1423+4]..[31,1423+21])
          Ppat_var "print_version_num" (lex/main.ml[31,1423+4]..[31,1423+21])
        expression (lex/main.ml[31,1423+22]..[33,1485+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lex/main.ml[31,1423+22]..[31,1423+24])
            Ppat_construct "()" (lex/main.ml[31,1423+22]..[31,1423+24])
            None
          expression (lex/main.ml[32,1450+2]..[33,1485+9])
            Pexp_sequence
            expression (lex/main.ml[32,1450+2]..[32,1450+33])
              Pexp_apply
              expression (lex/main.ml[32,1450+2]..[32,1450+15])
                Pexp_ident "print_endline" (lex/main.ml[32,1450+2]..[32,1450+15])
              [
                <arg>
                Nolabel
                  expression (lex/main.ml[32,1450+16]..[32,1450+33])
                    Pexp_ident "Sys.ocaml_version" (lex/main.ml[32,1450+16]..[32,1450+33])
              ]
            expression (lex/main.ml[33,1485+2]..[33,1485+8])
              Pexp_apply
              expression (lex/main.ml[33,1485+2]..[33,1485+6])
                Pexp_ident "exit" (lex/main.ml[33,1485+2]..[33,1485+6])
              [
                <arg>
                Nolabel
                  expression (lex/main.ml[33,1485+7]..[33,1485+8])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (lex/main.ml[36,1499+0]..[46,2031+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[36,1499+4]..[36,1499+9])
          Ppat_var "specs" (lex/main.ml[36,1499+4]..[36,1499+9])
        expression (lex/main.ml[37,1511+2]..[46,2031+3])
          Pexp_construct "::" (lex/main.ml[37,1511+3]..[46,2031+3]) ghost
          Some
            expression (lex/main.ml[37,1511+3]..[46,2031+3]) ghost
              Pexp_tuple
              [
                expression (lex/main.ml[37,1511+3]..[39,1616+17])
                  Pexp_tuple
                  [
                    expression (lex/main.ml[37,1511+3]..[37,1511+8])
                      Pexp_constant PConst_string("-ml",(lex/main.ml[37,1511+4]..[37,1511+7]),None)
                    expression (lex/main.ml[37,1511+10]..[37,1511+29])
                      Pexp_construct "Arg.Set" (lex/main.ml[37,1511+10]..[37,1511+17])
                      Some
                        expression (lex/main.ml[37,1511+18]..[37,1511+29])
                          Pexp_ident "ml_automata" (lex/main.ml[37,1511+18]..[37,1511+29])
                    expression (lex/main.ml[38,1542+4]..[39,1616+17])
                      Pexp_constant PConst_string(" Output code that does not use the Lexing module built-in automata interpreter",(lex/main.ml[38,1542+5]..[39,1616+16]),None)
                  ]
                expression (lex/main.ml[40,1635+3]..[46,2031+3]) ghost
                  Pexp_construct "::" (lex/main.ml[40,1635+3]..[46,2031+3]) ghost
                  Some
                    expression (lex/main.ml[40,1635+3]..[46,2031+3]) ghost
                      Pexp_tuple
                      [
                        expression (lex/main.ml[40,1635+3]..[41,1689+45])
                          Pexp_tuple
                          [
                            expression (lex/main.ml[40,1635+3]..[40,1635+7])
                              Pexp_constant PConst_string("-o",(lex/main.ml[40,1635+4]..[40,1635+6]),None)
                            expression (lex/main.ml[40,1635+9]..[40,1635+52])
                              Pexp_construct "Arg.String" (lex/main.ml[40,1635+9]..[40,1635+19])
                              Some
                                expression (lex/main.ml[40,1635+20]..[40,1635+52])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lex/main.ml[40,1635+25]..[40,1635+26])
                                    Ppat_var "x" (lex/main.ml[40,1635+25]..[40,1635+26])
                                  expression (lex/main.ml[40,1635+30]..[40,1635+51])
                                    Pexp_apply
                                    expression (lex/main.ml[40,1635+42]..[40,1635+44])
                                      Pexp_ident ":=" (lex/main.ml[40,1635+42]..[40,1635+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[40,1635+30]..[40,1635+41])
                                          Pexp_ident "output_name" (lex/main.ml[40,1635+30]..[40,1635+41])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[40,1635+45]..[40,1635+51])
                                          Pexp_construct "Some" (lex/main.ml[40,1635+45]..[40,1635+49])
                                          Some
                                            expression (lex/main.ml[40,1635+50]..[40,1635+51])
                                              Pexp_ident "x" (lex/main.ml[40,1635+50]..[40,1635+51])
                                    ]
                            expression (lex/main.ml[41,1689+4]..[41,1689+45])
                              Pexp_constant PConst_string(" <file>  Set output file name to <file>",(lex/main.ml[41,1689+5]..[41,1689+44]),None)
                          ]
                        expression (lex/main.ml[42,1736+3]..[46,2031+3]) ghost
                          Pexp_construct "::" (lex/main.ml[42,1736+3]..[46,2031+3]) ghost
                          Some
                            expression (lex/main.ml[42,1736+3]..[46,2031+3]) ghost
                              Pexp_tuple
                              [
                                expression (lex/main.ml[42,1736+3]..[42,1736+76])
                                  Pexp_tuple
                                  [
                                    expression (lex/main.ml[42,1736+3]..[42,1736+7])
                                      Pexp_constant PConst_string("-q",(lex/main.ml[42,1736+4]..[42,1736+6]),None)
                                    expression (lex/main.ml[42,1736+9]..[42,1736+34])
                                      Pexp_construct "Arg.Set" (lex/main.ml[42,1736+9]..[42,1736+16])
                                      Some
                                        expression (lex/main.ml[42,1736+17]..[42,1736+34])
                                          Pexp_ident "Common.quiet_mode" (lex/main.ml[42,1736+17]..[42,1736+34])
                                    expression (lex/main.ml[42,1736+36]..[42,1736+76])
                                      Pexp_constant PConst_string(" Do not display informational messages",(lex/main.ml[42,1736+37]..[42,1736+75]),None)
                                  ]
                                expression (lex/main.ml[43,1814+3]..[46,2031+3]) ghost
                                  Pexp_construct "::" (lex/main.ml[43,1814+3]..[46,2031+3]) ghost
                                  Some
                                    expression (lex/main.ml[43,1814+3]..[46,2031+3]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lex/main.ml[43,1814+3]..[43,1814+66])
                                          Pexp_tuple
                                          [
                                            expression (lex/main.ml[43,1814+3]..[43,1814+7])
                                              Pexp_constant PConst_string("-v",(lex/main.ml[43,1814+4]..[43,1814+6]),None)
                                            expression (lex/main.ml[43,1814+10]..[43,1814+39])
                                              Pexp_construct "Arg.Unit" (lex/main.ml[43,1814+10]..[43,1814+18])
                                              Some
                                                expression (lex/main.ml[43,1814+19]..[43,1814+39])
                                                  Pexp_ident "print_version_string" (lex/main.ml[43,1814+19]..[43,1814+39])
                                            expression (lex/main.ml[43,1814+41]..[43,1814+66])
                                              Pexp_constant PConst_string(" Print version and exit",(lex/main.ml[43,1814+42]..[43,1814+65]),None)
                                          ]
                                        expression (lex/main.ml[44,1882+3]..[46,2031+3]) ghost
                                          Pexp_construct "::" (lex/main.ml[44,1882+3]..[46,2031+3]) ghost
                                          Some
                                            expression (lex/main.ml[44,1882+3]..[46,2031+3]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lex/main.ml[44,1882+3]..[44,1882+72])
                                                  Pexp_tuple
                                                  [
                                                    expression (lex/main.ml[44,1882+3]..[44,1882+13])
                                                      Pexp_constant PConst_string("-version",(lex/main.ml[44,1882+4]..[44,1882+12]),None)
                                                    expression (lex/main.ml[44,1882+16]..[44,1882+45])
                                                      Pexp_construct "Arg.Unit" (lex/main.ml[44,1882+16]..[44,1882+24])
                                                      Some
                                                        expression (lex/main.ml[44,1882+25]..[44,1882+45])
                                                          Pexp_ident "print_version_string" (lex/main.ml[44,1882+25]..[44,1882+45])
                                                    expression (lex/main.ml[44,1882+47]..[44,1882+72])
                                                      Pexp_constant PConst_string(" Print version and exit",(lex/main.ml[44,1882+48]..[44,1882+71]),None)
                                                  ]
                                                expression (lex/main.ml[45,1956+3]..[46,2031+3]) ghost
                                                  Pexp_construct "::" (lex/main.ml[45,1956+3]..[46,2031+3]) ghost
                                                  Some
                                                    expression (lex/main.ml[45,1956+3]..[46,2031+3]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lex/main.ml[45,1956+3]..[45,1956+73])
                                                          Pexp_tuple
                                                          [
                                                            expression (lex/main.ml[45,1956+3]..[45,1956+10])
                                                              Pexp_constant PConst_string("-vnum",(lex/main.ml[45,1956+4]..[45,1956+9]),None)
                                                            expression (lex/main.ml[45,1956+13]..[45,1956+39])
                                                              Pexp_construct "Arg.Unit" (lex/main.ml[45,1956+13]..[45,1956+21])
                                                              Some
                                                                expression (lex/main.ml[45,1956+22]..[45,1956+39])
                                                                  Pexp_ident "print_version_num" (lex/main.ml[45,1956+22]..[45,1956+39])
                                                            expression (lex/main.ml[45,1956+41]..[45,1956+73])
                                                              Pexp_constant PConst_string(" Print version number and exit",(lex/main.ml[45,1956+42]..[45,1956+72]),None)
                                                          ]
                                                        expression (lex/main.ml[46,2031+2]..[46,2031+3]) ghost
                                                          Pexp_construct "[]" (lex/main.ml[46,2031+2]..[46,2031+3]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              ]
    ]
  structure_item (lex/main.ml[48,2036+0]..[52,2109+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[48,2036+4]..[48,2036+5])
          Ppat_any
        expression (lex/main.ml[49,2044+2]..[52,2109+9])
          Pexp_apply
          expression (lex/main.ml[49,2044+2]..[49,2044+11])
            Pexp_ident "Arg.parse" (lex/main.ml[49,2044+2]..[49,2044+11])
          [
            <arg>
            Nolabel
              expression (lex/main.ml[50,2056+4]..[50,2056+9])
                Pexp_ident "specs" (lex/main.ml[50,2056+4]..[50,2056+9])
            <arg>
            Nolabel
              expression (lex/main.ml[51,2066+4]..[51,2066+42])
                Pexp_fun
                Nolabel
                None
                pattern (lex/main.ml[51,2066+9]..[51,2066+13])
                  Ppat_var "name" (lex/main.ml[51,2066+9]..[51,2066+13])
                expression (lex/main.ml[51,2066+17]..[51,2066+41])
                  Pexp_apply
                  expression (lex/main.ml[51,2066+29]..[51,2066+31])
                    Pexp_ident ":=" (lex/main.ml[51,2066+29]..[51,2066+31])
                  [
                    <arg>
                    Nolabel
                      expression (lex/main.ml[51,2066+17]..[51,2066+28])
                        Pexp_ident "source_name" (lex/main.ml[51,2066+17]..[51,2066+28])
                    <arg>
                    Nolabel
                      expression (lex/main.ml[51,2066+32]..[51,2066+41])
                        Pexp_construct "Some" (lex/main.ml[51,2066+32]..[51,2066+36])
                        Some
                          expression (lex/main.ml[51,2066+37]..[51,2066+41])
                            Pexp_ident "name" (lex/main.ml[51,2066+37]..[51,2066+41])
                  ]
            <arg>
            Nolabel
              expression (lex/main.ml[52,2109+4]..[52,2109+9])
                Pexp_ident "usage" (lex/main.ml[52,2109+4]..[52,2109+9])
          ]
    ]
  structure_item (lex/main.ml[55,2121+0]..[124,4558+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[55,2121+4]..[55,2121+8])
          Ppat_var "main" (lex/main.ml[55,2121+4]..[55,2121+8])
        expression (lex/main.ml[55,2121+9]..[124,4558+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lex/main.ml[55,2121+9]..[55,2121+11])
            Ppat_construct "()" (lex/main.ml[55,2121+9]..[55,2121+11])
            None
          expression (lex/main.ml[57,2136+2]..[124,4558+10])
            Pexp_let Nonrec
            [
              <def>
                pattern (lex/main.ml[57,2136+6]..[57,2136+17])
                  Ppat_var "source_name" (lex/main.ml[57,2136+6]..[57,2136+17])
                expression (lex/main.ml[57,2136+20]..[59,2223+21])
                  Pexp_match
                  expression (lex/main.ml[57,2136+26]..[57,2136+38])
                    Pexp_apply
                    expression (lex/main.ml[57,2136+26]..[57,2136+27])
                      Pexp_ident "!" (lex/main.ml[57,2136+26]..[57,2136+27])
                    [
                      <arg>
                      Nolabel
                        expression (lex/main.ml[57,2136+27]..[57,2136+38])
                          Pexp_ident "source_name" (lex/main.ml[57,2136+27]..[57,2136+38])
                    ]
                  [
                    <case>
                      pattern (lex/main.ml[58,2180+4]..[58,2180+8])
                        Ppat_construct "None" (lex/main.ml[58,2180+4]..[58,2180+8])
                        None
                      expression (lex/main.ml[58,2180+12]..[58,2180+42])
                        Pexp_sequence
                        expression (lex/main.ml[58,2180+12]..[58,2180+33])
                          Pexp_apply
                          expression (lex/main.ml[58,2180+12]..[58,2180+21])
                            Pexp_ident "Arg.usage" (lex/main.ml[58,2180+12]..[58,2180+21])
                          [
                            <arg>
                            Nolabel
                              expression (lex/main.ml[58,2180+22]..[58,2180+27])
                                Pexp_ident "specs" (lex/main.ml[58,2180+22]..[58,2180+27])
                            <arg>
                            Nolabel
                              expression (lex/main.ml[58,2180+28]..[58,2180+33])
                                Pexp_ident "usage" (lex/main.ml[58,2180+28]..[58,2180+33])
                          ]
                        expression (lex/main.ml[58,2180+36]..[58,2180+42])
                          Pexp_apply
                          expression (lex/main.ml[58,2180+36]..[58,2180+40])
                            Pexp_ident "exit" (lex/main.ml[58,2180+36]..[58,2180+40])
                          [
                            <arg>
                            Nolabel
                              expression (lex/main.ml[58,2180+41]..[58,2180+42])
                                Pexp_constant PConst_int (2,None)
                          ]
                    <case>
                      pattern (lex/main.ml[59,2223+4]..[59,2223+13])
                        Ppat_construct "Some" (lex/main.ml[59,2223+4]..[59,2223+8])
                        Some
                          []
                          pattern (lex/main.ml[59,2223+9]..[59,2223+13])
                            Ppat_var "name" (lex/main.ml[59,2223+9]..[59,2223+13])
                      expression (lex/main.ml[59,2223+17]..[59,2223+21])
                        Pexp_ident "name" (lex/main.ml[59,2223+17]..[59,2223+21])
                  ]
            ]
            expression (lex/main.ml[60,2248+2]..[124,4558+10])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lex/main.ml[60,2248+6]..[60,2248+15])
                    Ppat_var "dest_name" (lex/main.ml[60,2248+6]..[60,2248+15])
                  expression (lex/main.ml[60,2248+18]..[66,2446+27])
                    Pexp_match
                    expression (lex/main.ml[60,2248+24]..[60,2248+36])
                      Pexp_apply
                      expression (lex/main.ml[60,2248+24]..[60,2248+25])
                        Pexp_ident "!" (lex/main.ml[60,2248+24]..[60,2248+25])
                      [
                        <arg>
                        Nolabel
                          expression (lex/main.ml[60,2248+25]..[60,2248+36])
                            Pexp_ident "output_name" (lex/main.ml[60,2248+25]..[60,2248+36])
                      ]
                    [
                      <case>
                        pattern (lex/main.ml[61,2290+4]..[61,2290+13])
                          Ppat_construct "Some" (lex/main.ml[61,2290+4]..[61,2290+8])
                          Some
                            []
                            pattern (lex/main.ml[61,2290+9]..[61,2290+13])
                              Ppat_var "name" (lex/main.ml[61,2290+9]..[61,2290+13])
                        expression (lex/main.ml[61,2290+17]..[61,2290+21])
                          Pexp_ident "name" (lex/main.ml[61,2290+17]..[61,2290+21])
                      <case>
                        pattern (lex/main.ml[62,2312+4]..[62,2312+8])
                          Ppat_construct "None" (lex/main.ml[62,2312+4]..[62,2312+8])
                          None
                        expression (lex/main.ml[63,2324+6]..[66,2446+27])
                          Pexp_ifthenelse
                          expression (lex/main.ml[63,2324+9]..[63,2324+49])
                            Pexp_apply
                            expression (lex/main.ml[63,2324+9]..[63,2324+30])
                              Pexp_ident "Filename.check_suffix" (lex/main.ml[63,2324+9]..[63,2324+30])
                            [
                              <arg>
                              Nolabel
                                expression (lex/main.ml[63,2324+31]..[63,2324+42])
                                  Pexp_ident "source_name" (lex/main.ml[63,2324+31]..[63,2324+42])
                              <arg>
                              Nolabel
                                expression (lex/main.ml[63,2324+43]..[63,2324+49])
                                  Pexp_constant PConst_string(".mll",(lex/main.ml[63,2324+44]..[63,2324+48]),None)
                            ]
                          expression (lex/main.ml[64,2379+8]..[64,2379+55])
                            Pexp_apply
                            expression (lex/main.ml[64,2379+48]..[64,2379+49])
                              Pexp_ident "^" (lex/main.ml[64,2379+48]..[64,2379+49])
                            [
                              <arg>
                              Nolabel
                                expression (lex/main.ml[64,2379+8]..[64,2379+47])
                                  Pexp_apply
                                  expression (lex/main.ml[64,2379+8]..[64,2379+28])
                                    Pexp_ident "Filename.chop_suffix" (lex/main.ml[64,2379+8]..[64,2379+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lex/main.ml[64,2379+29]..[64,2379+40])
                                        Pexp_ident "source_name" (lex/main.ml[64,2379+29]..[64,2379+40])
                                    <arg>
                                    Nolabel
                                      expression (lex/main.ml[64,2379+41]..[64,2379+47])
                                        Pexp_constant PConst_string(".mll",(lex/main.ml[64,2379+42]..[64,2379+46]),None)
                                  ]
                              <arg>
                              Nolabel
                                expression (lex/main.ml[64,2379+50]..[64,2379+55])
                                  Pexp_constant PConst_string(".ml",(lex/main.ml[64,2379+51]..[64,2379+54]),None)
                            ]
                          Some
                            expression (lex/main.ml[66,2446+8]..[66,2446+27])
                              Pexp_apply
                              expression (lex/main.ml[66,2446+20]..[66,2446+21])
                                Pexp_ident "^" (lex/main.ml[66,2446+20]..[66,2446+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lex/main.ml[66,2446+8]..[66,2446+19])
                                    Pexp_ident "source_name" (lex/main.ml[66,2446+8]..[66,2446+19])
                                <arg>
                                Nolabel
                                  expression (lex/main.ml[66,2446+22]..[66,2446+27])
                                    Pexp_constant PConst_string(".ml",(lex/main.ml[66,2446+23]..[66,2446+26]),None)
                              ]
                    ]
              ]
              expression (lex/main.ml[68,2478+2]..[124,4558+10])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lex/main.ml[68,2478+6]..[68,2478+8])
                      Ppat_var "ic" (lex/main.ml[68,2478+6]..[68,2478+8])
                    expression (lex/main.ml[68,2478+11]..[68,2478+34])
                      Pexp_apply
                      expression (lex/main.ml[68,2478+11]..[68,2478+22])
                        Pexp_ident "open_in_bin" (lex/main.ml[68,2478+11]..[68,2478+22])
                      [
                        <arg>
                        Nolabel
                          expression (lex/main.ml[68,2478+23]..[68,2478+34])
                            Pexp_ident "source_name" (lex/main.ml[68,2478+23]..[68,2478+34])
                      ]
                ]
                expression (lex/main.ml[69,2516+2]..[124,4558+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lex/main.ml[69,2516+6]..[69,2516+8])
                        Ppat_var "oc" (lex/main.ml[69,2516+6]..[69,2516+8])
                      expression (lex/main.ml[69,2516+11]..[69,2516+29])
                        Pexp_apply
                        expression (lex/main.ml[69,2516+11]..[69,2516+19])
                          Pexp_ident "open_out" (lex/main.ml[69,2516+11]..[69,2516+19])
                        [
                          <arg>
                          Nolabel
                            expression (lex/main.ml[69,2516+20]..[69,2516+29])
                              Pexp_ident "dest_name" (lex/main.ml[69,2516+20]..[69,2516+29])
                        ]
                  ]
                  expression (lex/main.ml[70,2549+2]..[124,4558+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lex/main.ml[70,2549+6]..[70,2549+8])
                          Ppat_var "tr" (lex/main.ml[70,2549+6]..[70,2549+8])
                        expression (lex/main.ml[70,2549+11]..[70,2549+43])
                          Pexp_apply
                          expression (lex/main.ml[70,2549+11]..[70,2549+30])
                            Pexp_ident "Common.open_tracker" (lex/main.ml[70,2549+11]..[70,2549+30])
                          [
                            <arg>
                            Nolabel
                              expression (lex/main.ml[70,2549+31]..[70,2549+40])
                                Pexp_ident "dest_name" (lex/main.ml[70,2549+31]..[70,2549+40])
                            <arg>
                            Nolabel
                              expression (lex/main.ml[70,2549+41]..[70,2549+43])
                                Pexp_ident "oc" (lex/main.ml[70,2549+41]..[70,2549+43])
                          ]
                    ]
                    expression (lex/main.ml[71,2596+2]..[124,4558+10])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lex/main.ml[71,2596+6]..[71,2596+12])
                            Ppat_var "lexbuf" (lex/main.ml[71,2596+6]..[71,2596+12])
                          expression (lex/main.ml[71,2596+15]..[71,2596+37])
                            Pexp_apply
                            expression (lex/main.ml[71,2596+15]..[71,2596+34])
                              Pexp_ident "Lexing.from_channel" (lex/main.ml[71,2596+15]..[71,2596+34])
                            [
                              <arg>
                              Nolabel
                                expression (lex/main.ml[71,2596+35]..[71,2596+37])
                                  Pexp_ident "ic" (lex/main.ml[71,2596+35]..[71,2596+37])
                            ]
                      ]
                      expression (lex/main.ml[72,2637+2]..[124,4558+10])
                        Pexp_sequence
                        expression (lex/main.ml[72,2637+2]..[74,2725+45])
                          Pexp_setfield
                          expression (lex/main.ml[72,2637+2]..[72,2637+8])
                            Pexp_ident "lexbuf" (lex/main.ml[72,2637+2]..[72,2637+8])
                          "Lexing.lex_curr_p" (lex/main.ml[72,2637+9]..[72,2637+26])
                          expression (lex/main.ml[73,2667+4]..[74,2725+45])
                            Pexp_record
                            [
                              "Lexing.pos_fname" (lex/main.ml[73,2667+5]..[73,2667+21])
                                expression (lex/main.ml[73,2667+24]..[73,2667+35])
                                  Pexp_ident "source_name" (lex/main.ml[73,2667+24]..[73,2667+35])
                              "Lexing.pos_lnum" (lex/main.ml[73,2667+37]..[73,2667+52])
                                expression (lex/main.ml[73,2667+55]..[73,2667+56])
                                  Pexp_constant PConst_int (1,None)
                              "Lexing.pos_bol" (lex/main.ml[74,2725+5]..[74,2725+19])
                                expression (lex/main.ml[74,2725+22]..[74,2725+23])
                                  Pexp_constant PConst_int (0,None)
                              "Lexing.pos_cnum" (lex/main.ml[74,2725+25]..[74,2725+40])
                                expression (lex/main.ml[74,2725+43]..[74,2725+44])
                                  Pexp_constant PConst_int (0,None)
                            ]
                            None
                        expression (lex/main.ml[75,2772+2]..[124,4558+10])
                          Pexp_try
                          expression (lex/main.ml[76,2778+4]..[89,3277+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lex/main.ml[76,2778+8]..[76,2778+11])
                                  Ppat_var "def" (lex/main.ml[76,2778+8]..[76,2778+11])
                                expression (lex/main.ml[76,2778+14]..[76,2778+55])
                                  Pexp_apply
                                  expression (lex/main.ml[76,2778+14]..[76,2778+37])
                                    Pexp_ident "Parser.lexer_definition" (lex/main.ml[76,2778+14]..[76,2778+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lex/main.ml[76,2778+38]..[76,2778+48])
                                        Pexp_ident "Lexer.main" (lex/main.ml[76,2778+38]..[76,2778+48])
                                    <arg>
                                    Nolabel
                                      expression (lex/main.ml[76,2778+49]..[76,2778+55])
                                        Pexp_ident "lexbuf" (lex/main.ml[76,2778+49]..[76,2778+55])
                                  ]
                            ]
                            expression (lex/main.ml[77,2837+4]..[89,3277+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lex/main.ml[77,2837+8]..[77,2837+30])
                                    Ppat_tuple
                                    [
                                      pattern (lex/main.ml[77,2837+9]..[77,2837+16])
                                        Ppat_var "entries" (lex/main.ml[77,2837+9]..[77,2837+16])
                                      pattern (lex/main.ml[77,2837+18]..[77,2837+29])
                                        Ppat_var "transitions" (lex/main.ml[77,2837+18]..[77,2837+29])
                                    ]
                                  expression (lex/main.ml[77,2837+33]..[77,2837+64])
                                    Pexp_apply
                                    expression (lex/main.ml[77,2837+33]..[77,2837+48])
                                      Pexp_ident "Lexgen.make_dfa" (lex/main.ml[77,2837+33]..[77,2837+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[77,2837+49]..[77,2837+64])
                                          Pexp_field
                                          expression (lex/main.ml[77,2837+49]..[77,2837+52])
                                            Pexp_ident "def" (lex/main.ml[77,2837+49]..[77,2837+52])
                                          "entrypoints" (lex/main.ml[77,2837+53]..[77,2837+64])
                                    ]
                              ]
                              expression (lex/main.ml[78,2905+4]..[89,3277+28])
                                Pexp_sequence
                                expression (lex/main.ml[78,2905+4]..[86,3233+7])
                                  Pexp_ifthenelse
                                  expression (lex/main.ml[78,2905+7]..[78,2905+19])
                                    Pexp_apply
                                    expression (lex/main.ml[78,2905+7]..[78,2905+8])
                                      Pexp_ident "!" (lex/main.ml[78,2905+7]..[78,2905+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[78,2905+8]..[78,2905+19])
                                          Pexp_ident "ml_automata" (lex/main.ml[78,2905+8]..[78,2905+19])
                                    ]
                                  expression (lex/main.ml[78,2905+25]..[82,3053+7])
                                    Pexp_apply
                                    expression (lex/main.ml[79,2936+6]..[79,2936+29])
                                      Pexp_ident "Outputbis.output_lexdef" (lex/main.ml[79,2936+6]..[79,2936+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[80,2966+8]..[80,2966+10])
                                          Pexp_ident "ic" (lex/main.ml[80,2966+8]..[80,2966+10])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[80,2966+11]..[80,2966+13])
                                          Pexp_ident "oc" (lex/main.ml[80,2966+11]..[80,2966+13])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[80,2966+14]..[80,2966+16])
                                          Pexp_ident "tr" (lex/main.ml[80,2966+14]..[80,2966+16])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[81,2983+8]..[81,2983+18])
                                          Pexp_field
                                          expression (lex/main.ml[81,2983+8]..[81,2983+11])
                                            Pexp_ident "def" (lex/main.ml[81,2983+8]..[81,2983+11])
                                          "header" (lex/main.ml[81,2983+12]..[81,2983+18])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[81,2983+19]..[81,2983+37])
                                          Pexp_field
                                          expression (lex/main.ml[81,2983+19]..[81,2983+22])
                                            Pexp_ident "def" (lex/main.ml[81,2983+19]..[81,2983+22])
                                          "refill_handler" (lex/main.ml[81,2983+23]..[81,2983+37])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[81,2983+38]..[81,2983+45])
                                          Pexp_ident "entries" (lex/main.ml[81,2983+38]..[81,2983+45])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[81,2983+46]..[81,2983+57])
                                          Pexp_ident "transitions" (lex/main.ml[81,2983+46]..[81,2983+57])
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[81,2983+58]..[81,2983+69])
                                          Pexp_field
                                          expression (lex/main.ml[81,2983+58]..[81,2983+61])
                                            Pexp_ident "def" (lex/main.ml[81,2983+58]..[81,2983+61])
                                          "trailer" (lex/main.ml[81,2983+62]..[81,2983+69])
                                    ]
                                  Some
                                    expression (lex/main.ml[82,3053+13]..[86,3233+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lex/main.ml[83,3072+11]..[83,3072+17])
                                            Ppat_var "tables" (lex/main.ml[83,3072+11]..[83,3072+17])
                                          expression (lex/main.ml[83,3072+20]..[83,3072+54])
                                            Pexp_apply
                                            expression (lex/main.ml[83,3072+20]..[83,3072+42])
                                              Pexp_ident "Compact.compact_tables" (lex/main.ml[83,3072+20]..[83,3072+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lex/main.ml[83,3072+43]..[83,3072+54])
                                                  Pexp_ident "transitions" (lex/main.ml[83,3072+43]..[83,3072+54])
                                            ]
                                      ]
                                      expression (lex/main.ml[84,3130+7]..[85,3167+65])
                                        Pexp_apply
                                        expression (lex/main.ml[84,3130+7]..[84,3130+27])
                                          Pexp_ident "Output.output_lexdef" (lex/main.ml[84,3130+7]..[84,3130+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[84,3130+28]..[84,3130+30])
                                              Pexp_ident "ic" (lex/main.ml[84,3130+28]..[84,3130+30])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[84,3130+31]..[84,3130+33])
                                              Pexp_ident "oc" (lex/main.ml[84,3130+31]..[84,3130+33])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[84,3130+34]..[84,3130+36])
                                              Pexp_ident "tr" (lex/main.ml[84,3130+34]..[84,3130+36])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[85,3167+9]..[85,3167+19])
                                              Pexp_field
                                              expression (lex/main.ml[85,3167+9]..[85,3167+12])
                                                Pexp_ident "def" (lex/main.ml[85,3167+9]..[85,3167+12])
                                              "header" (lex/main.ml[85,3167+13]..[85,3167+19])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[85,3167+20]..[85,3167+38])
                                              Pexp_field
                                              expression (lex/main.ml[85,3167+20]..[85,3167+23])
                                                Pexp_ident "def" (lex/main.ml[85,3167+20]..[85,3167+23])
                                              "refill_handler" (lex/main.ml[85,3167+24]..[85,3167+38])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[85,3167+39]..[85,3167+45])
                                              Pexp_ident "tables" (lex/main.ml[85,3167+39]..[85,3167+45])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[85,3167+46]..[85,3167+53])
                                              Pexp_ident "entries" (lex/main.ml[85,3167+46]..[85,3167+53])
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[85,3167+54]..[85,3167+65])
                                              Pexp_field
                                              expression (lex/main.ml[85,3167+54]..[85,3167+57])
                                                Pexp_ident "def" (lex/main.ml[85,3167+54]..[85,3167+57])
                                              "trailer" (lex/main.ml[85,3167+58]..[85,3167+65])
                                        ]
                                expression (lex/main.ml[87,3242+4]..[89,3277+28])
                                  Pexp_sequence
                                  expression (lex/main.ml[87,3242+4]..[87,3242+15])
                                    Pexp_apply
                                    expression (lex/main.ml[87,3242+4]..[87,3242+12])
                                      Pexp_ident "close_in" (lex/main.ml[87,3242+4]..[87,3242+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[87,3242+13]..[87,3242+15])
                                          Pexp_ident "ic" (lex/main.ml[87,3242+13]..[87,3242+15])
                                    ]
                                  expression (lex/main.ml[88,3259+4]..[89,3277+28])
                                    Pexp_sequence
                                    expression (lex/main.ml[88,3259+4]..[88,3259+16])
                                      Pexp_apply
                                      expression (lex/main.ml[88,3259+4]..[88,3259+13])
                                        Pexp_ident "close_out" (lex/main.ml[88,3259+4]..[88,3259+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lex/main.ml[88,3259+14]..[88,3259+16])
                                            Pexp_ident "oc" (lex/main.ml[88,3259+14]..[88,3259+16])
                                      ]
                                    expression (lex/main.ml[89,3277+4]..[89,3277+27])
                                      Pexp_apply
                                      expression (lex/main.ml[89,3277+4]..[89,3277+24])
                                        Pexp_ident "Common.close_tracker" (lex/main.ml[89,3277+4]..[89,3277+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lex/main.ml[89,3277+25]..[89,3277+27])
                                            Pexp_ident "tr" (lex/main.ml[89,3277+25]..[89,3277+27])
                                      ]
                          [
                            <case>
                              pattern (lex/main.ml[90,3306+7]..[90,3306+10])
                                Ppat_var "exn" (lex/main.ml[90,3306+7]..[90,3306+10])
                              expression (lex/main.ml[91,3320+4]..[124,4558+10])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lex/main.ml[91,3320+8]..[91,3320+10])
                                      Ppat_var "bt" (lex/main.ml[91,3320+8]..[91,3320+10])
                                    expression (lex/main.ml[91,3320+13]..[91,3320+42])
                                      Pexp_apply
                                      expression (lex/main.ml[91,3320+13]..[91,3320+39])
                                        Pexp_ident "Printexc.get_raw_backtrace" (lex/main.ml[91,3320+13]..[91,3320+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lex/main.ml[91,3320+40]..[91,3320+42])
                                            Pexp_construct "()" (lex/main.ml[91,3320+40]..[91,3320+42])
                                            None
                                      ]
                                ]
                                expression (lex/main.ml[92,3366+4]..[124,4558+10])
                                  Pexp_sequence
                                  expression (lex/main.ml[92,3366+4]..[92,3366+15])
                                    Pexp_apply
                                    expression (lex/main.ml[92,3366+4]..[92,3366+12])
                                      Pexp_ident "close_in" (lex/main.ml[92,3366+4]..[92,3366+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lex/main.ml[92,3366+13]..[92,3366+15])
                                          Pexp_ident "ic" (lex/main.ml[92,3366+13]..[92,3366+15])
                                    ]
                                  expression (lex/main.ml[93,3383+4]..[124,4558+10])
                                    Pexp_sequence
                                    expression (lex/main.ml[93,3383+4]..[93,3383+16])
                                      Pexp_apply
                                      expression (lex/main.ml[93,3383+4]..[93,3383+13])
                                        Pexp_ident "close_out" (lex/main.ml[93,3383+4]..[93,3383+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lex/main.ml[93,3383+14]..[93,3383+16])
                                            Pexp_ident "oc" (lex/main.ml[93,3383+14]..[93,3383+16])
                                      ]
                                    expression (lex/main.ml[94,3401+4]..[124,4558+10])
                                      Pexp_sequence
                                      expression (lex/main.ml[94,3401+4]..[94,3401+27])
                                        Pexp_apply
                                        expression (lex/main.ml[94,3401+4]..[94,3401+24])
                                          Pexp_ident "Common.close_tracker" (lex/main.ml[94,3401+4]..[94,3401+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lex/main.ml[94,3401+25]..[94,3401+27])
                                              Pexp_ident "tr" (lex/main.ml[94,3401+25]..[94,3401+27])
                                        ]
                                      expression (lex/main.ml[95,3430+4]..[124,4558+10])
                                        Pexp_sequence
                                        expression (lex/main.ml[95,3430+4]..[95,3430+24])
                                          Pexp_apply
                                          expression (lex/main.ml[95,3430+4]..[95,3430+14])
                                            Pexp_ident "Sys.remove" (lex/main.ml[95,3430+4]..[95,3430+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lex/main.ml[95,3430+15]..[95,3430+24])
                                                Pexp_ident "dest_name" (lex/main.ml[95,3430+15]..[95,3430+24])
                                          ]
                                        expression (lex/main.ml[96,3456+4]..[124,4558+10])
                                          Pexp_sequence
                                          expression (lex/main.ml[96,3456+4]..[123,4549+7])
                                            Pexp_match
                                            expression (lex/main.ml[96,3456+16]..[96,3456+19])
                                              Pexp_ident "exn" (lex/main.ml[96,3456+16]..[96,3456+19])
                                            [
                                              <case>
                                                pattern (lex/main.ml[97,3481+6]..[97,3481+14])
                                                  Ppat_construct "Cset.Bad" (lex/main.ml[97,3481+6]..[97,3481+14])
                                                  None
                                                expression (lex/main.ml[98,3499+8]..[102,3698+48])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lex/main.ml[98,3499+12]..[98,3499+13])
                                                        Ppat_var "p" (lex/main.ml[98,3499+12]..[98,3499+13])
                                                      expression (lex/main.ml[98,3499+16]..[98,3499+44])
                                                        Pexp_apply
                                                        expression (lex/main.ml[98,3499+16]..[98,3499+37])
                                                          Pexp_ident "Lexing.lexeme_start_p" (lex/main.ml[98,3499+16]..[98,3499+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lex/main.ml[98,3499+38]..[98,3499+44])
                                                              Pexp_ident "lexbuf" (lex/main.ml[98,3499+38]..[98,3499+44])
                                                        ]
                                                  ]
                                                  expression (lex/main.ml[99,3547+8]..[102,3698+48])
                                                    Pexp_apply
                                                    expression (lex/main.ml[99,3547+8]..[99,3547+22])
                                                      Pexp_ident "Printf.fprintf" (lex/main.ml[99,3547+8]..[99,3547+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[99,3547+23]..[99,3547+29])
                                                          Pexp_ident "stderr" (lex/main.ml[99,3547+23]..[99,3547+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[100,3577+10]..[100,3577+73])
                                                          Pexp_constant PConst_string("File \"%s\", line %d, character %d: character set expected.\n",(lex/main.ml[100,3577+11]..[100,3577+72]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[101,3651+10]..[101,3651+28])
                                                          Pexp_field
                                                          expression (lex/main.ml[101,3651+10]..[101,3651+11])
                                                            Pexp_ident "p" (lex/main.ml[101,3651+10]..[101,3651+11])
                                                          "Lexing.pos_fname" (lex/main.ml[101,3651+12]..[101,3651+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[101,3651+29]..[101,3651+46])
                                                          Pexp_field
                                                          expression (lex/main.ml[101,3651+29]..[101,3651+30])
                                                            Pexp_ident "p" (lex/main.ml[101,3651+29]..[101,3651+30])
                                                          "Lexing.pos_lnum" (lex/main.ml[101,3651+31]..[101,3651+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[102,3698+10]..[102,3698+48])
                                                          Pexp_apply
                                                          expression (lex/main.ml[102,3698+29]..[102,3698+30])
                                                            Pexp_ident "-" (lex/main.ml[102,3698+29]..[102,3698+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lex/main.ml[102,3698+11]..[102,3698+28])
                                                                Pexp_field
                                                                expression (lex/main.ml[102,3698+11]..[102,3698+12])
                                                                  Pexp_ident "p" (lex/main.ml[102,3698+11]..[102,3698+12])
                                                                "Lexing.pos_cnum" (lex/main.ml[102,3698+13]..[102,3698+28])
                                                            <arg>
                                                            Nolabel
                                                              expression (lex/main.ml[102,3698+31]..[102,3698+47])
                                                                Pexp_field
                                                                expression (lex/main.ml[102,3698+31]..[102,3698+32])
                                                                  Pexp_ident "p" (lex/main.ml[102,3698+31]..[102,3698+32])
                                                                "Lexing.pos_bol" (lex/main.ml[102,3698+33]..[102,3698+47])
                                                          ]
                                                    ]
                                              <case>
                                                pattern (lex/main.ml[103,3747+6]..[103,3747+25])
                                                  Ppat_construct "Parsing.Parse_error" (lex/main.ml[103,3747+6]..[103,3747+25])
                                                  None
                                                expression (lex/main.ml[104,3776+8]..[108,3965+48])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lex/main.ml[104,3776+12]..[104,3776+13])
                                                        Ppat_var "p" (lex/main.ml[104,3776+12]..[104,3776+13])
                                                      expression (lex/main.ml[104,3776+16]..[104,3776+44])
                                                        Pexp_apply
                                                        expression (lex/main.ml[104,3776+16]..[104,3776+37])
                                                          Pexp_ident "Lexing.lexeme_start_p" (lex/main.ml[104,3776+16]..[104,3776+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lex/main.ml[104,3776+38]..[104,3776+44])
                                                              Pexp_ident "lexbuf" (lex/main.ml[104,3776+38]..[104,3776+44])
                                                        ]
                                                  ]
                                                  expression (lex/main.ml[105,3824+8]..[108,3965+48])
                                                    Pexp_apply
                                                    expression (lex/main.ml[105,3824+8]..[105,3824+22])
                                                      Pexp_ident "Printf.fprintf" (lex/main.ml[105,3824+8]..[105,3824+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[105,3824+23]..[105,3824+29])
                                                          Pexp_ident "stderr" (lex/main.ml[105,3824+23]..[105,3824+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[106,3854+10]..[106,3854+63])
                                                          Pexp_constant PConst_string("File \"%s\", line %d, character %d: syntax error.\n",(lex/main.ml[106,3854+11]..[106,3854+62]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[107,3918+10]..[107,3918+28])
                                                          Pexp_field
                                                          expression (lex/main.ml[107,3918+10]..[107,3918+11])
                                                            Pexp_ident "p" (lex/main.ml[107,3918+10]..[107,3918+11])
                                                          "Lexing.pos_fname" (lex/main.ml[107,3918+12]..[107,3918+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[107,3918+29]..[107,3918+46])
                                                          Pexp_field
                                                          expression (lex/main.ml[107,3918+29]..[107,3918+30])
                                                            Pexp_ident "p" (lex/main.ml[107,3918+29]..[107,3918+30])
                                                          "Lexing.pos_lnum" (lex/main.ml[107,3918+31]..[107,3918+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (lex/main.ml[108,3965+10]..[108,3965+48])
                                                          Pexp_apply
                                                          expression (lex/main.ml[108,3965+29]..[108,3965+30])
                                                            Pexp_ident "-" (lex/main.ml[108,3965+29]..[108,3965+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lex/main.ml[108,3965+11]..[108,3965+28])
                                                                Pexp_field
                                                                expression (lex/main.ml[108,3965+11]..[108,3965+12])
                                                                  Pexp_ident "p" (lex/main.ml[108,3965+11]..[108,3965+12])
                                                                "Lexing.pos_cnum" (lex/main.ml[108,3965+13]..[108,3965+28])
                                                            <arg>
                                                            Nolabel
                                                              expression (lex/main.ml[108,3965+31]..[108,3965+47])
                                                                Pexp_field
                                                                expression (lex/main.ml[108,3965+31]..[108,3965+32])
                                                                  Pexp_ident "p" (lex/main.ml[108,3965+31]..[108,3965+32])
                                                                "Lexing.pos_bol" (lex/main.ml[108,3965+33]..[108,3965+47])
                                                          ]
                                                    ]
                                              <case>
                                                pattern (lex/main.ml[109,4014+6]..[109,4014+47])
                                                  Ppat_construct "Lexer.Lexical_error" (lex/main.ml[109,4014+6]..[109,4014+25])
                                                  Some
                                                    []
                                                    pattern (lex/main.ml[109,4014+25]..[109,4014+47])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lex/main.ml[109,4014+26]..[109,4014+29])
                                                          Ppat_var "msg" (lex/main.ml[109,4014+26]..[109,4014+29])
                                                        pattern (lex/main.ml[109,4014+31]..[109,4014+35])
                                                          Ppat_var "file" (lex/main.ml[109,4014+31]..[109,4014+35])
                                                        pattern (lex/main.ml[109,4014+37]..[109,4014+41])
                                                          Ppat_var "line" (lex/main.ml[109,4014+37]..[109,4014+41])
                                                        pattern (lex/main.ml[109,4014+43]..[109,4014+46])
                                                          Ppat_var "col" (lex/main.ml[109,4014+43]..[109,4014+46])
                                                      ]
                                                expression (lex/main.ml[110,4065+8]..[112,4149+27])
                                                  Pexp_apply
                                                  expression (lex/main.ml[110,4065+8]..[110,4065+22])
                                                    Pexp_ident "Printf.fprintf" (lex/main.ml[110,4065+8]..[110,4065+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[110,4065+23]..[110,4065+29])
                                                        Pexp_ident "stderr" (lex/main.ml[110,4065+23]..[110,4065+29])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[111,4095+10]..[111,4095+53])
                                                        Pexp_constant PConst_string("File \"%s\", line %d, character %d: %s.\n",(lex/main.ml[111,4095+11]..[111,4095+52]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[112,4149+10]..[112,4149+14])
                                                        Pexp_ident "file" (lex/main.ml[112,4149+10]..[112,4149+14])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[112,4149+15]..[112,4149+19])
                                                        Pexp_ident "line" (lex/main.ml[112,4149+15]..[112,4149+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[112,4149+20]..[112,4149+23])
                                                        Pexp_ident "col" (lex/main.ml[112,4149+20]..[112,4149+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[112,4149+24]..[112,4149+27])
                                                        Pexp_ident "msg" (lex/main.ml[112,4149+24]..[112,4149+27])
                                                  ]
                                              <case>
                                                pattern (lex/main.ml[113,4177+6]..[113,4177+28])
                                                  Ppat_construct "Lexgen.Memory_overflow" (lex/main.ml[113,4177+6]..[113,4177+28])
                                                  None
                                                expression (lex/main.ml[114,4209+8]..[116,4312+21])
                                                  Pexp_apply
                                                  expression (lex/main.ml[114,4209+8]..[114,4209+22])
                                                    Pexp_ident "Printf.fprintf" (lex/main.ml[114,4209+8]..[114,4209+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[114,4209+23]..[114,4209+29])
                                                        Pexp_ident "stderr" (lex/main.ml[114,4209+23]..[114,4209+29])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[115,4239+10]..[115,4239+72])
                                                        Pexp_constant PConst_string("File \"%s\":\n Position memory overflow, too many bindings\n",(lex/main.ml[115,4239+11]..[115,4239+71]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[116,4312+10]..[116,4312+21])
                                                        Pexp_ident "source_name" (lex/main.ml[116,4312+10]..[116,4312+21])
                                                  ]
                                              <case>
                                                pattern (lex/main.ml[117,4334+6]..[117,4334+27])
                                                  Ppat_construct "Output.Table_overflow" (lex/main.ml[117,4334+6]..[117,4334+27])
                                                  None
                                                expression (lex/main.ml[118,4365+8]..[120,4471+21])
                                                  Pexp_apply
                                                  expression (lex/main.ml[118,4365+8]..[118,4365+22])
                                                    Pexp_ident "Printf.fprintf" (lex/main.ml[118,4365+8]..[118,4365+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[118,4365+23]..[118,4365+29])
                                                        Pexp_ident "stderr" (lex/main.ml[118,4365+23]..[118,4365+29])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[119,4395+10]..[119,4395+75])
                                                        Pexp_constant PConst_string("File \"%s\":\ntransition table overflow, automaton is too big\n",(lex/main.ml[119,4395+11]..[119,4395+74]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[120,4471+10]..[120,4471+21])
                                                        Pexp_ident "source_name" (lex/main.ml[120,4471+10]..[120,4471+21])
                                                  ]
                                              <case>
                                                pattern (lex/main.ml[121,4493+6]..[121,4493+7])
                                                  Ppat_any
                                                expression (lex/main.ml[122,4504+8]..[122,4504+44])
                                                  Pexp_apply
                                                  expression (lex/main.ml[122,4504+8]..[122,4504+37])
                                                    Pexp_ident "Printexc.raise_with_backtrace" (lex/main.ml[122,4504+8]..[122,4504+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[122,4504+38]..[122,4504+41])
                                                        Pexp_ident "exn" (lex/main.ml[122,4504+38]..[122,4504+41])
                                                    <arg>
                                                    Nolabel
                                                      expression (lex/main.ml[122,4504+42]..[122,4504+44])
                                                        Pexp_ident "bt" (lex/main.ml[122,4504+42]..[122,4504+44])
                                                  ]
                                            ]
                                          expression (lex/main.ml[124,4558+4]..[124,4558+10])
                                            Pexp_apply
                                            expression (lex/main.ml[124,4558+4]..[124,4558+8])
                                              Pexp_ident "exit" (lex/main.ml[124,4558+4]..[124,4558+8])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lex/main.ml[124,4558+9]..[124,4558+10])
                                                  Pexp_constant PConst_int (3,None)
                                            ]
                          ]
    ]
  structure_item (lex/main.ml[126,4570+0]..[126,4570+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lex/main.ml[126,4570+4]..[126,4570+5])
          Ppat_any
        expression (lex/main.ml[126,4570+29]..[126,4570+44])
          Pexp_sequence
          expression (lex/main.ml[126,4570+29]..[126,4570+36])
            Pexp_apply
            expression (lex/main.ml[126,4570+29]..[126,4570+33])
              Pexp_ident "main" (lex/main.ml[126,4570+29]..[126,4570+33])
            [
              <arg>
              Nolabel
                expression (lex/main.ml[126,4570+34]..[126,4570+36])
                  Pexp_construct "()" (lex/main.ml[126,4570+34]..[126,4570+36])
                  None
            ]
          expression (lex/main.ml[126,4570+38]..[126,4570+44])
            Pexp_apply
            expression (lex/main.ml[126,4570+38]..[126,4570+42])
              Pexp_ident "exit" (lex/main.ml[126,4570+38]..[126,4570+42])
            [
              <arg>
              Nolabel
                expression (lex/main.ml[126,4570+43]..[126,4570+44])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
]

