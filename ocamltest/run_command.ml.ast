[
  structure_item (ocamltest/run_command.ml[18,1144+0]..[18,1144+21])
    Pstr_open Fresh
    module_expr (ocamltest/run_command.ml[18,1144+5]..[18,1144+21])
      Pmod_ident "Ocamltest_stdlib" (ocamltest/run_command.ml[18,1144+5]..[18,1144+21])
  structure_item (ocamltest/run_command.ml[20,1167+0]..[30,1390+1])
    Pstr_type Rec
    [
      type_declaration "settings" (ocamltest/run_command.ml[20,1167+5]..[20,1167+13]) (ocamltest/run_command.ml[20,1167+0]..[30,1390+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ocamltest/run_command.ml[21,1185+2]..[21,1185+20])
                Immutable
                "progname" (ocamltest/run_command.ml[21,1185+2]..[21,1185+10])                core_type (ocamltest/run_command.ml[21,1185+13]..[21,1185+19])
                  Ptyp_constr "string" (ocamltest/run_command.ml[21,1185+13]..[21,1185+19])
                  []
              (ocamltest/run_command.ml[22,1206+2]..[22,1206+22])
                Immutable
                "argv" (ocamltest/run_command.ml[22,1206+2]..[22,1206+6])                core_type (ocamltest/run_command.ml[22,1206+9]..[22,1206+21])
                  Ptyp_constr "array" (ocamltest/run_command.ml[22,1206+16]..[22,1206+21])
                  [
                    core_type (ocamltest/run_command.ml[22,1206+9]..[22,1206+15])
                      Ptyp_constr "string" (ocamltest/run_command.ml[22,1206+9]..[22,1206+15])
                      []
                  ]
              (ocamltest/run_command.ml[23,1229+2]..[23,1229+22])
                Immutable
                "envp" (ocamltest/run_command.ml[23,1229+2]..[23,1229+6])                core_type (ocamltest/run_command.ml[23,1229+9]..[23,1229+21])
                  Ptyp_constr "array" (ocamltest/run_command.ml[23,1229+16]..[23,1229+21])
                  [
                    core_type (ocamltest/run_command.ml[23,1229+9]..[23,1229+15])
                      Ptyp_constr "string" (ocamltest/run_command.ml[23,1229+9]..[23,1229+15])
                      []
                  ]
              (ocamltest/run_command.ml[24,1252+2]..[24,1252+26])
                Immutable
                "stdin_filename" (ocamltest/run_command.ml[24,1252+2]..[24,1252+16])                core_type (ocamltest/run_command.ml[24,1252+19]..[24,1252+25])
                  Ptyp_constr "string" (ocamltest/run_command.ml[24,1252+19]..[24,1252+25])
                  []
              (ocamltest/run_command.ml[25,1279+2]..[25,1279+27])
                Immutable
                "stdout_filename" (ocamltest/run_command.ml[25,1279+2]..[25,1279+17])                core_type (ocamltest/run_command.ml[25,1279+20]..[25,1279+26])
                  Ptyp_constr "string" (ocamltest/run_command.ml[25,1279+20]..[25,1279+26])
                  []
              (ocamltest/run_command.ml[26,1307+2]..[26,1307+27])
                Immutable
                "stderr_filename" (ocamltest/run_command.ml[26,1307+2]..[26,1307+17])                core_type (ocamltest/run_command.ml[26,1307+20]..[26,1307+26])
                  Ptyp_constr "string" (ocamltest/run_command.ml[26,1307+20]..[26,1307+26])
                  []
              (ocamltest/run_command.ml[27,1335+2]..[27,1335+16])
                Immutable
                "append" (ocamltest/run_command.ml[27,1335+2]..[27,1335+8])                core_type (ocamltest/run_command.ml[27,1335+11]..[27,1335+15])
                  Ptyp_constr "bool" (ocamltest/run_command.ml[27,1335+11]..[27,1335+15])
                  []
              (ocamltest/run_command.ml[28,1352+2]..[28,1352+16])
                Immutable
                "timeout" (ocamltest/run_command.ml[28,1352+2]..[28,1352+9])                core_type (ocamltest/run_command.ml[28,1352+12]..[28,1352+15])
                  Ptyp_constr "int" (ocamltest/run_command.ml[28,1352+12]..[28,1352+15])
                  []
              (ocamltest/run_command.ml[29,1369+2]..[29,1369+20])
                Immutable
                "log" (ocamltest/run_command.ml[29,1369+2]..[29,1369+5])                core_type (ocamltest/run_command.ml[29,1369+8]..[29,1369+19])
                  Ptyp_constr "out_channel" (ocamltest/run_command.ml[29,1369+8]..[29,1369+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ocamltest/run_command.ml[32,1393+0]..[48,1864+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/run_command.ml[32,1393+4]..[32,1393+27])
          Ppat_var "settings_of_commandline" (ocamltest/run_command.ml[32,1393+4]..[32,1393+27])
        expression (ocamltest/run_command.ml[32,1393+28]..[48,1864+3]) ghost
          Pexp_fun
          Optional "stdout_fname"
          Some
            expression (ocamltest/run_command.ml[32,1393+43]..[32,1393+45])
              Pexp_constant PConst_string("",(ocamltest/run_command.ml[32,1393+44]..[32,1393+44]),None)
          pattern (ocamltest/run_command.ml[32,1393+30]..[32,1393+42])
            Ppat_var "stdout_fname" (ocamltest/run_command.ml[32,1393+30]..[32,1393+42])
          expression (ocamltest/run_command.ml[32,1393+47]..[48,1864+3]) ghost
            Pexp_fun
            Optional "stderr_fname"
            Some
              expression (ocamltest/run_command.ml[32,1393+62]..[32,1393+64])
                Pexp_constant PConst_string("",(ocamltest/run_command.ml[32,1393+63]..[32,1393+63]),None)
            pattern (ocamltest/run_command.ml[32,1393+49]..[32,1393+61])
              Ppat_var "stderr_fname" (ocamltest/run_command.ml[32,1393+49]..[32,1393+61])
            expression (ocamltest/run_command.ml[32,1393+66]..[48,1864+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (ocamltest/run_command.ml[32,1393+66]..[32,1393+77])
                Ppat_var "commandline" (ocamltest/run_command.ml[32,1393+66]..[32,1393+77])
              expression (ocamltest/run_command.ml[33,1473+2]..[48,1864+3])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (ocamltest/run_command.ml[33,1473+6]..[33,1473+11])
                      Ppat_var "words" (ocamltest/run_command.ml[33,1473+6]..[33,1473+11])
                    expression (ocamltest/run_command.ml[33,1473+14]..[33,1473+38])
                      Pexp_apply
                      expression (ocamltest/run_command.ml[33,1473+14]..[33,1473+26])
                        Pexp_ident "String.words" (ocamltest/run_command.ml[33,1473+14]..[33,1473+26])
                      [
                        <arg>
                        Nolabel
                          expression (ocamltest/run_command.ml[33,1473+27]..[33,1473+38])
                            Pexp_ident "commandline" (ocamltest/run_command.ml[33,1473+27]..[33,1473+38])
                      ]
                ]
                expression (ocamltest/run_command.ml[34,1515+2]..[48,1864+3])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ocamltest/run_command.ml[34,1515+6]..[34,1515+18])
                        Ppat_var "quoted_words" (ocamltest/run_command.ml[34,1515+6]..[34,1515+18])
                      expression (ocamltest/run_command.ml[35,1536+4]..[37,1598+14])
                        Pexp_ifthenelse
                        expression (ocamltest/run_command.ml[35,1536+7]..[35,1536+16])
                          Pexp_ident "Sys.win32" (ocamltest/run_command.ml[35,1536+7]..[35,1536+16])
                        expression (ocamltest/run_command.ml[36,1553+9]..[36,1553+44])
                          Pexp_apply
                          expression (ocamltest/run_command.ml[36,1553+9]..[36,1553+17])
                            Pexp_ident "List.map" (ocamltest/run_command.ml[36,1553+9]..[36,1553+17])
                          [
                            <arg>
                            Nolabel
                              expression (ocamltest/run_command.ml[36,1553+18]..[36,1553+38])
                                Pexp_ident "Filename.maybe_quote" (ocamltest/run_command.ml[36,1553+18]..[36,1553+38])
                            <arg>
                            Nolabel
                              expression (ocamltest/run_command.ml[36,1553+39]..[36,1553+44])
                                Pexp_ident "words" (ocamltest/run_command.ml[36,1553+39]..[36,1553+44])
                          ]
                        Some
                          expression (ocamltest/run_command.ml[37,1598+9]..[37,1598+14])
                            Pexp_ident "words" (ocamltest/run_command.ml[37,1598+9]..[37,1598+14])
                  ]
                  expression (ocamltest/run_command.ml[38,1616+2]..[48,1864+3])
                    Pexp_record
                    [
                      "progname" (ocamltest/run_command.ml[39,1620+4]..[39,1620+12])
                        expression (ocamltest/run_command.ml[39,1620+15]..[39,1620+35])
                          Pexp_apply
                          expression (ocamltest/run_command.ml[39,1620+15]..[39,1620+22])
                            Pexp_ident "List.hd" (ocamltest/run_command.ml[39,1620+15]..[39,1620+22])
                          [
                            <arg>
                            Nolabel
                              expression (ocamltest/run_command.ml[39,1620+23]..[39,1620+35])
                                Pexp_ident "quoted_words" (ocamltest/run_command.ml[39,1620+23]..[39,1620+35])
                          ]
                      "argv" (ocamltest/run_command.ml[40,1657+4]..[40,1657+8])
                        expression (ocamltest/run_command.ml[40,1657+11]..[40,1657+37])
                          Pexp_apply
                          expression (ocamltest/run_command.ml[40,1657+11]..[40,1657+24])
                            Pexp_ident "Array.of_list" (ocamltest/run_command.ml[40,1657+11]..[40,1657+24])
                          [
                            <arg>
                            Nolabel
                              expression (ocamltest/run_command.ml[40,1657+25]..[40,1657+37])
                                Pexp_ident "quoted_words" (ocamltest/run_command.ml[40,1657+25]..[40,1657+37])
                          ]
                      "envp" (ocamltest/run_command.ml[41,1696+4]..[41,1696+8])
                        expression (ocamltest/run_command.ml[41,1696+11]..[41,1696+15])
                          Pexp_array
                          []
                      "stdin_filename" (ocamltest/run_command.ml[42,1713+4]..[42,1713+18])
                        expression (ocamltest/run_command.ml[42,1713+21]..[42,1713+23])
                          Pexp_constant PConst_string("",(ocamltest/run_command.ml[42,1713+22]..[42,1713+22]),None)
                      "stdout_filename" (ocamltest/run_command.ml[43,1738+4]..[43,1738+19])
                        expression (ocamltest/run_command.ml[43,1738+22]..[43,1738+34])
                          Pexp_ident "stdout_fname" (ocamltest/run_command.ml[43,1738+22]..[43,1738+34])
                      "stderr_filename" (ocamltest/run_command.ml[44,1774+4]..[44,1774+19])
                        expression (ocamltest/run_command.ml[44,1774+22]..[44,1774+34])
                          Pexp_ident "stderr_fname" (ocamltest/run_command.ml[44,1774+22]..[44,1774+34])
                      "append" (ocamltest/run_command.ml[45,1810+4]..[45,1810+10])
                        expression (ocamltest/run_command.ml[45,1810+13]..[45,1810+18])
                          Pexp_construct "false" (ocamltest/run_command.ml[45,1810+13]..[45,1810+18])
                          None
                      "timeout" (ocamltest/run_command.ml[46,1830+4]..[46,1830+11])
                        expression (ocamltest/run_command.ml[46,1830+14]..[46,1830+15])
                          Pexp_constant PConst_int (0,None)
                      "log" (ocamltest/run_command.ml[47,1847+4]..[47,1847+7])
                        expression (ocamltest/run_command.ml[47,1847+10]..[47,1847+16])
                          Pexp_ident "stderr" (ocamltest/run_command.ml[47,1847+10]..[47,1847+16])
                    ]
                    None
    ]
  structure_item (ocamltest/run_command.ml[50,1869+0]..[50,1869+51])
    Pstr_primitive
    value_description "run" (ocamltest/run_command.ml[50,1869+9]..[50,1869+12]) (ocamltest/run_command.ml[50,1869+0]..[50,1869+51])
      core_type (ocamltest/run_command.ml[50,1869+15]..[50,1869+30])
        Ptyp_arrow
        Nolabel
        core_type (ocamltest/run_command.ml[50,1869+15]..[50,1869+23])
          Ptyp_constr "settings" (ocamltest/run_command.ml[50,1869+15]..[50,1869+23])
          []
        core_type (ocamltest/run_command.ml[50,1869+27]..[50,1869+30])
          Ptyp_constr "int" (ocamltest/run_command.ml[50,1869+27]..[50,1869+30])
          []
      [
        "caml_run_command"
      ]
  structure_item (ocamltest/run_command.ml[52,1922+0]..[52,1922+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/run_command.ml[52,1922+4]..[52,1922+19])
          Ppat_var "run_commandline" (ocamltest/run_command.ml[52,1922+4]..[52,1922+19])
        expression (ocamltest/run_command.ml[52,1922+20]..[52,1922+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/run_command.ml[52,1922+20]..[52,1922+31])
            Ppat_var "commandline" (ocamltest/run_command.ml[52,1922+20]..[52,1922+31])
          expression (ocamltest/run_command.ml[52,1922+34]..[52,1922+75])
            Pexp_apply
            expression (ocamltest/run_command.ml[52,1922+34]..[52,1922+37])
              Pexp_ident "run" (ocamltest/run_command.ml[52,1922+34]..[52,1922+37])
            [
              <arg>
              Nolabel
                expression (ocamltest/run_command.ml[52,1922+38]..[52,1922+75])
                  Pexp_apply
                  expression (ocamltest/run_command.ml[52,1922+39]..[52,1922+62])
                    Pexp_ident "settings_of_commandline" (ocamltest/run_command.ml[52,1922+39]..[52,1922+62])
                  [
                    <arg>
                    Nolabel
                      expression (ocamltest/run_command.ml[52,1922+63]..[52,1922+74])
                        Pexp_ident "commandline" (ocamltest/run_command.ml[52,1922+63]..[52,1922+74])
                  ]
            ]
    ]
]

