[
  signature_item (stdlib/digest.mli[16,1079+0]..[25,1450+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/digest.mli[16,1079+0]..[25,1450+2])
        Pstr_eval
        expression (stdlib/digest.mli[16,1079+0]..[25,1450+2])
          Pexp_constant PConst_string(" MD5 message digest.\n\n   This module provides functions to compute 128-bit 'digests' of\n   arbitrary-length strings or files. The algorithm used is MD5.\n\n   The MD5 hash function is not cryptographically secure.\n   Hence, this module should not be used for security-sensitive\n   applications.  More recent, stronger cryptographic primitives\n   should be used instead.\n",(stdlib/digest.mli[16,1079+0]..[25,1450+2]),None)
    ]
  signature_item (stdlib/digest.mli[27,1454+0]..[27,1454+15])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/digest.mli[27,1454+5]..[27,1454+6]) (stdlib/digest.mli[27,1454+0]..[27,1454+15])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/digest.mli[28,1470+0]..[28,1470+49])
              Pstr_eval
              expression (stdlib/digest.mli[28,1470+0]..[28,1470+49])
                Pexp_constant PConst_string(" The type of digests: 16-character strings. ",(stdlib/digest.mli[28,1470+0]..[28,1470+49]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/digest.mli[27,1454+9]..[27,1454+15])
              Ptyp_constr "string" (stdlib/digest.mli[27,1454+9]..[27,1454+15])
              []
    ]
  signature_item (stdlib/digest.mli[30,1521+0]..[30,1521+27])
    Psig_value
    value_description "compare" (stdlib/digest.mli[30,1521+4]..[30,1521+11]) (stdlib/digest.mli[30,1521+0]..[30,1521+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[31,1549+0]..[36,1867+20])
            Pstr_eval
            expression (stdlib/digest.mli[31,1549+0]..[36,1867+20])
              Pexp_constant PConst_string(" The comparison function for 16-character digest, with the same\n    specification as {!Stdlib.compare} and the implementation\n    shared with {!String.compare}. Along with the type [t], this\n    function [compare] allows the module [Digest] to be passed as\n    argument to the functors {!Set.Make} and {!Map.Make}.\n    @since 4.00.0 ",(stdlib/digest.mli[31,1549+0]..[36,1867+20]),None)
        ]
      core_type (stdlib/digest.mli[30,1521+14]..[30,1521+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[30,1521+14]..[30,1521+15])
          Ptyp_constr "t" (stdlib/digest.mli[30,1521+14]..[30,1521+15])
          []
        core_type (stdlib/digest.mli[30,1521+19]..[30,1521+27])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[30,1521+19]..[30,1521+20])
            Ptyp_constr "t" (stdlib/digest.mli[30,1521+19]..[30,1521+20])
            []
          core_type (stdlib/digest.mli[30,1521+24]..[30,1521+27])
            Ptyp_constr "int" (stdlib/digest.mli[30,1521+24]..[30,1521+27])
            []
      []
  signature_item (stdlib/digest.mli[38,1889+0]..[38,1889+26])
    Psig_value
    value_description "equal" (stdlib/digest.mli[38,1889+4]..[38,1889+9]) (stdlib/digest.mli[38,1889+0]..[38,1889+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[39,1916+0]..[40,1964+20])
            Pstr_eval
            expression (stdlib/digest.mli[39,1916+0]..[40,1964+20])
              Pexp_constant PConst_string(" The equal function for 16-character digest.\n    @since 4.03.0 ",(stdlib/digest.mli[39,1916+0]..[40,1964+20]),None)
        ]
      core_type (stdlib/digest.mli[38,1889+12]..[38,1889+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[38,1889+12]..[38,1889+13])
          Ptyp_constr "t" (stdlib/digest.mli[38,1889+12]..[38,1889+13])
          []
        core_type (stdlib/digest.mli[38,1889+17]..[38,1889+26])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[38,1889+17]..[38,1889+18])
            Ptyp_constr "t" (stdlib/digest.mli[38,1889+17]..[38,1889+18])
            []
          core_type (stdlib/digest.mli[38,1889+22]..[38,1889+26])
            Ptyp_constr "bool" (stdlib/digest.mli[38,1889+22]..[38,1889+26])
            []
      []
  signature_item (stdlib/digest.mli[42,1986+0]..[42,1986+24])
    Psig_value
    value_description "string" (stdlib/digest.mli[42,1986+4]..[42,1986+10]) (stdlib/digest.mli[42,1986+0]..[42,1986+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[43,2011+0]..[43,2011+45])
            Pstr_eval
            expression (stdlib/digest.mli[43,2011+0]..[43,2011+45])
              Pexp_constant PConst_string(" Return the digest of the given string. ",(stdlib/digest.mli[43,2011+0]..[43,2011+45]),None)
        ]
      core_type (stdlib/digest.mli[42,1986+13]..[42,1986+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[42,1986+13]..[42,1986+19])
          Ptyp_constr "string" (stdlib/digest.mli[42,1986+13]..[42,1986+19])
          []
        core_type (stdlib/digest.mli[42,1986+23]..[42,1986+24])
          Ptyp_constr "t" (stdlib/digest.mli[42,1986+23]..[42,1986+24])
          []
      []
  signature_item (stdlib/digest.mli[45,2058+0]..[45,2058+22])
    Psig_value
    value_description "bytes" (stdlib/digest.mli[45,2058+4]..[45,2058+9]) (stdlib/digest.mli[45,2058+0]..[45,2058+22])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[46,2081+0]..[47,2131+20])
            Pstr_eval
            expression (stdlib/digest.mli[46,2081+0]..[47,2131+20])
              Pexp_constant PConst_string(" Return the digest of the given byte sequence.\n    @since 4.02.0 ",(stdlib/digest.mli[46,2081+0]..[47,2131+20]),None)
        ]
      core_type (stdlib/digest.mli[45,2058+12]..[45,2058+22])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[45,2058+12]..[45,2058+17])
          Ptyp_constr "bytes" (stdlib/digest.mli[45,2058+12]..[45,2058+17])
          []
        core_type (stdlib/digest.mli[45,2058+21]..[45,2058+22])
          Ptyp_constr "t" (stdlib/digest.mli[45,2058+21]..[45,2058+22])
          []
      []
  signature_item (stdlib/digest.mli[49,2153+0]..[49,2153+41])
    Psig_value
    value_description "substring" (stdlib/digest.mli[49,2153+4]..[49,2153+13]) (stdlib/digest.mli[49,2153+0]..[49,2153+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[50,2195+0]..[51,2264+69])
            Pstr_eval
            expression (stdlib/digest.mli[50,2195+0]..[51,2264+69])
              Pexp_constant PConst_string(" [Digest.substring s ofs len] returns the digest of the substring\n   of [s] starting at index [ofs] and containing [len] characters. ",(stdlib/digest.mli[50,2195+0]..[51,2264+69]),None)
        ]
      core_type (stdlib/digest.mli[49,2153+16]..[49,2153+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[49,2153+16]..[49,2153+22])
          Ptyp_constr "string" (stdlib/digest.mli[49,2153+16]..[49,2153+22])
          []
        core_type (stdlib/digest.mli[49,2153+26]..[49,2153+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[49,2153+26]..[49,2153+29])
            Ptyp_constr "int" (stdlib/digest.mli[49,2153+26]..[49,2153+29])
            []
          core_type (stdlib/digest.mli[49,2153+33]..[49,2153+41])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/digest.mli[49,2153+33]..[49,2153+36])
              Ptyp_constr "int" (stdlib/digest.mli[49,2153+33]..[49,2153+36])
              []
            core_type (stdlib/digest.mli[49,2153+40]..[49,2153+41])
              Ptyp_constr "t" (stdlib/digest.mli[49,2153+40]..[49,2153+41])
              []
      []
  signature_item (stdlib/digest.mli[53,2335+0]..[53,2335+39])
    Psig_value
    value_description "subbytes" (stdlib/digest.mli[53,2335+4]..[53,2335+12]) (stdlib/digest.mli[53,2335+0]..[53,2335+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[54,2375+0]..[56,2508+20])
            Pstr_eval
            expression (stdlib/digest.mli[54,2375+0]..[56,2508+20])
              Pexp_constant PConst_string(" [Digest.subbytes s ofs len] returns the digest of the subsequence\n    of [s] starting at index [ofs] and containing [len] bytes.\n    @since 4.02.0 ",(stdlib/digest.mli[54,2375+0]..[56,2508+20]),None)
        ]
      core_type (stdlib/digest.mli[53,2335+15]..[53,2335+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[53,2335+15]..[53,2335+20])
          Ptyp_constr "bytes" (stdlib/digest.mli[53,2335+15]..[53,2335+20])
          []
        core_type (stdlib/digest.mli[53,2335+24]..[53,2335+39])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[53,2335+24]..[53,2335+27])
            Ptyp_constr "int" (stdlib/digest.mli[53,2335+24]..[53,2335+27])
            []
          core_type (stdlib/digest.mli[53,2335+31]..[53,2335+39])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/digest.mli[53,2335+31]..[53,2335+34])
              Ptyp_constr "int" (stdlib/digest.mli[53,2335+31]..[53,2335+34])
              []
            core_type (stdlib/digest.mli[53,2335+38]..[53,2335+39])
              Ptyp_constr "t" (stdlib/digest.mli[53,2335+38]..[53,2335+39])
              []
      []
  signature_item (stdlib/digest.mli[58,2530+0]..[58,2530+59])
    Psig_value
    value_description "channel" (stdlib/digest.mli[58,2530+9]..[58,2530+16]) (stdlib/digest.mli[58,2530+0]..[58,2530+59])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[59,2590+0]..[64,2924+19])
            Pstr_eval
            expression (stdlib/digest.mli[59,2590+0]..[64,2924+19])
              Pexp_constant PConst_string(" If [len] is nonnegative, [Digest.channel ic len] reads [len]\n   characters from channel [ic] and returns their digest, or raises\n   [End_of_file] if end-of-file is reached before [len] characters\n   are read.  If [len] is negative, [Digest.channel ic len] reads\n   all characters from [ic] until end-of-file is reached and return\n   their digest. ",(stdlib/digest.mli[59,2590+0]..[64,2924+19]),None)
        ]
      core_type (stdlib/digest.mli[58,2530+19]..[58,2530+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[58,2530+19]..[58,2530+29])
          Ptyp_constr "in_channel" (stdlib/digest.mli[58,2530+19]..[58,2530+29])
          []
        core_type (stdlib/digest.mli[58,2530+33]..[58,2530+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[58,2530+33]..[58,2530+36])
            Ptyp_constr "int" (stdlib/digest.mli[58,2530+33]..[58,2530+36])
            []
          core_type (stdlib/digest.mli[58,2530+40]..[58,2530+41])
            Ptyp_constr "t" (stdlib/digest.mli[58,2530+40]..[58,2530+41])
            []
      [
        "caml_md5_chan"
      ]
  signature_item (stdlib/digest.mli[66,2945+0]..[66,2945+22])
    Psig_value
    value_description "file" (stdlib/digest.mli[66,2945+4]..[66,2945+8]) (stdlib/digest.mli[66,2945+0]..[66,2945+22])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[67,2968+0]..[67,2968+57])
            Pstr_eval
            expression (stdlib/digest.mli[67,2968+0]..[67,2968+57])
              Pexp_constant PConst_string(" Return the digest of the file whose name is given. ",(stdlib/digest.mli[67,2968+0]..[67,2968+57]),None)
        ]
      core_type (stdlib/digest.mli[66,2945+11]..[66,2945+22])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[66,2945+11]..[66,2945+17])
          Ptyp_constr "string" (stdlib/digest.mli[66,2945+11]..[66,2945+17])
          []
        core_type (stdlib/digest.mli[66,2945+21]..[66,2945+22])
          Ptyp_constr "t" (stdlib/digest.mli[66,2945+21]..[66,2945+22])
          []
      []
  signature_item (stdlib/digest.mli[69,3027+0]..[69,3027+37])
    Psig_value
    value_description "output" (stdlib/digest.mli[69,3027+4]..[69,3027+10]) (stdlib/digest.mli[69,3027+0]..[69,3027+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[70,3065+0]..[70,3065+50])
            Pstr_eval
            expression (stdlib/digest.mli[70,3065+0]..[70,3065+50])
              Pexp_constant PConst_string(" Write a digest on the given output channel. ",(stdlib/digest.mli[70,3065+0]..[70,3065+50]),None)
        ]
      core_type (stdlib/digest.mli[69,3027+13]..[69,3027+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[69,3027+13]..[69,3027+24])
          Ptyp_constr "out_channel" (stdlib/digest.mli[69,3027+13]..[69,3027+24])
          []
        core_type (stdlib/digest.mli[69,3027+28]..[69,3027+37])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/digest.mli[69,3027+28]..[69,3027+29])
            Ptyp_constr "t" (stdlib/digest.mli[69,3027+28]..[69,3027+29])
            []
          core_type (stdlib/digest.mli[69,3027+33]..[69,3027+37])
            Ptyp_constr "unit" (stdlib/digest.mli[69,3027+33]..[69,3027+37])
            []
      []
  signature_item (stdlib/digest.mli[72,3117+0]..[72,3117+27])
    Psig_value
    value_description "input" (stdlib/digest.mli[72,3117+4]..[72,3117+9]) (stdlib/digest.mli[72,3117+0]..[72,3117+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[73,3145+0]..[73,3145+50])
            Pstr_eval
            expression (stdlib/digest.mli[73,3145+0]..[73,3145+50])
              Pexp_constant PConst_string(" Read a digest from the given input channel. ",(stdlib/digest.mli[73,3145+0]..[73,3145+50]),None)
        ]
      core_type (stdlib/digest.mli[72,3117+12]..[72,3117+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[72,3117+12]..[72,3117+22])
          Ptyp_constr "in_channel" (stdlib/digest.mli[72,3117+12]..[72,3117+22])
          []
        core_type (stdlib/digest.mli[72,3117+26]..[72,3117+27])
          Ptyp_constr "t" (stdlib/digest.mli[72,3117+26]..[72,3117+27])
          []
      []
  signature_item (stdlib/digest.mli[75,3197+0]..[75,3197+24])
    Psig_value
    value_description "to_hex" (stdlib/digest.mli[75,3197+4]..[75,3197+10]) (stdlib/digest.mli[75,3197+0]..[75,3197+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[76,3222+0]..[78,3364+3])
            Pstr_eval
            expression (stdlib/digest.mli[76,3222+0]..[78,3364+3])
              Pexp_constant PConst_string(" Return the printable hexadecimal representation of the given digest.\n    @raise Invalid_argument if the argument is not exactly 16 bytes.\n ",(stdlib/digest.mli[76,3222+0]..[78,3364+3]),None)
        ]
      core_type (stdlib/digest.mli[75,3197+13]..[75,3197+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[75,3197+13]..[75,3197+14])
          Ptyp_constr "t" (stdlib/digest.mli[75,3197+13]..[75,3197+14])
          []
        core_type (stdlib/digest.mli[75,3197+18]..[75,3197+24])
          Ptyp_constr "string" (stdlib/digest.mli[75,3197+18]..[75,3197+24])
          []
      []
  signature_item (stdlib/digest.mli[80,3369+0]..[80,3369+26])
    Psig_value
    value_description "from_hex" (stdlib/digest.mli[80,3369+4]..[80,3369+12]) (stdlib/digest.mli[80,3369+0]..[80,3369+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/digest.mli[81,3396+0]..[84,3562+19])
            Pstr_eval
            expression (stdlib/digest.mli[81,3396+0]..[84,3562+19])
              Pexp_constant PConst_string(" Convert a hexadecimal representation back into the corresponding digest.\n    @raise Invalid_argument if the argument is not exactly 32 hexadecimal\n   characters.\n   @since 4.00.0 ",(stdlib/digest.mli[81,3396+0]..[84,3562+19]),None)
        ]
      core_type (stdlib/digest.mli[80,3369+15]..[80,3369+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/digest.mli[80,3369+15]..[80,3369+21])
          Ptyp_constr "string" (stdlib/digest.mli[80,3369+15]..[80,3369+21])
          []
        core_type (stdlib/digest.mli[80,3369+25]..[80,3369+26])
          Ptyp_constr "t" (stdlib/digest.mli[80,3369+25]..[80,3369+26])
          []
      []
]

