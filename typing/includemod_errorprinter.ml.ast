[
  structure_item (typing/includemod_errorprinter.ml[17,1080+0]..[76,3174+3])
    Pstr_module
    "Context" (typing/includemod_errorprinter.ml[17,1080+7]..[17,1080+14])
      module_expr (typing/includemod_errorprinter.ml[17,1080+17]..[76,3174+3])
        Pmod_structure
        [
          structure_item (typing/includemod_errorprinter.ml[18,1104+2]..[22,1203+37])
            Pstr_type Rec
            [
              type_declaration "pos" (typing/includemod_errorprinter.ml[18,1104+7]..[18,1104+10]) (typing/includemod_errorprinter.ml[18,1104+2]..[22,1203+37])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[19,1117+4]..[19,1117+23])
                        "Module" (typing/includemod_errorprinter.ml[19,1117+6]..[19,1117+12])
                        [
                          core_type (typing/includemod_errorprinter.ml[19,1117+16]..[19,1117+23])
                            Ptyp_constr "Ident.t" (typing/includemod_errorprinter.ml[19,1117+16]..[19,1117+23])
                            []
                        ]
                        None
                      (typing/includemod_errorprinter.ml[20,1141+4]..[20,1141+24])
                        "Modtype" (typing/includemod_errorprinter.ml[20,1141+6]..[20,1141+13])
                        [
                          core_type (typing/includemod_errorprinter.ml[20,1141+17]..[20,1141+24])
                            Ptyp_constr "Ident.t" (typing/includemod_errorprinter.ml[20,1141+17]..[20,1141+24])
                            []
                        ]
                        None
                      (typing/includemod_errorprinter.ml[21,1166+4]..[21,1166+36])
                        "Arg" (typing/includemod_errorprinter.ml[21,1166+6]..[21,1166+9])
                        [
                          core_type (typing/includemod_errorprinter.ml[21,1166+13]..[21,1166+36])
                            Ptyp_constr "Types.functor_parameter" (typing/includemod_errorprinter.ml[21,1166+13]..[21,1166+36])
                            []
                        ]
                        None
                      (typing/includemod_errorprinter.ml[22,1203+4]..[22,1203+37])
                        "Body" (typing/includemod_errorprinter.ml[22,1203+6]..[22,1203+10])
                        [
                          core_type (typing/includemod_errorprinter.ml[22,1203+14]..[22,1203+37])
                            Ptyp_constr "Types.functor_parameter" (typing/includemod_errorprinter.ml[22,1203+14]..[22,1203+37])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[24,1242+2]..[31,1503+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[24,1242+6]..[24,1242+21])
                  Ppat_var "path_of_context" (typing/includemod_errorprinter.ml[24,1242+6]..[24,1242+21])
                expression (typing/includemod_errorprinter.ml[24,1242+24]..[31,1503+23])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/includemod_errorprinter.ml[25,1275+6]..[25,1275+22])
                        Ppat_construct "::" (typing/includemod_errorprinter.ml[25,1275+16]..[25,1275+18])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[25,1275+6]..[25,1275+22]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/includemod_errorprinter.ml[25,1275+6]..[25,1275+15])
                                Ppat_construct "Module" (typing/includemod_errorprinter.ml[25,1275+6]..[25,1275+12])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[25,1275+13]..[25,1275+15])
                                    Ppat_var "id" (typing/includemod_errorprinter.ml[25,1275+13]..[25,1275+15])
                              pattern (typing/includemod_errorprinter.ml[25,1275+19]..[25,1275+22])
                                Ppat_var "rem" (typing/includemod_errorprinter.ml[25,1275+19]..[25,1275+22])
                            ]
                      expression (typing/includemod_errorprinter.ml[26,1301+8]..[30,1466+36])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[26,1301+16]..[26,1301+20])
                              Ppat_var "subm" (typing/includemod_errorprinter.ml[26,1301+16]..[26,1301+20])
                            expression (typing/includemod_errorprinter.ml[26,1301+21]..[29,1436+29]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[26,1301+21]..[26,1301+25])
                                Ppat_var "path" (typing/includemod_errorprinter.ml[26,1301+21]..[26,1301+25])
                              expression (typing/includemod_errorprinter.ml[26,1301+28]..[29,1436+29])
                                Pexp_function
                                [
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[27,1338+12]..[27,1338+14])
                                      Ppat_construct "[]" (typing/includemod_errorprinter.ml[27,1338+12]..[27,1338+14])
                                      None
                                    expression (typing/includemod_errorprinter.ml[27,1338+18]..[27,1338+22])
                                      Pexp_ident "path" (typing/includemod_errorprinter.ml[27,1338+18]..[27,1338+22])
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[28,1361+12]..[28,1361+28])
                                      Ppat_construct "::" (typing/includemod_errorprinter.ml[28,1361+22]..[28,1361+24])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[28,1361+12]..[28,1361+28]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[28,1361+12]..[28,1361+21])
                                              Ppat_construct "Module" (typing/includemod_errorprinter.ml[28,1361+12]..[28,1361+18])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[28,1361+19]..[28,1361+21])
                                                  Ppat_var "id" (typing/includemod_errorprinter.ml[28,1361+19]..[28,1361+21])
                                            pattern (typing/includemod_errorprinter.ml[28,1361+25]..[28,1361+28])
                                              Ppat_var "rem" (typing/includemod_errorprinter.ml[28,1361+25]..[28,1361+28])
                                          ]
                                    expression (typing/includemod_errorprinter.ml[28,1361+32]..[28,1361+74])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[28,1361+32]..[28,1361+36])
                                        Pexp_ident "subm" (typing/includemod_errorprinter.ml[28,1361+32]..[28,1361+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[28,1361+37]..[28,1361+70])
                                            Pexp_construct "Path.Pdot" (typing/includemod_errorprinter.ml[28,1361+38]..[28,1361+47])
                                            Some
                                              expression (typing/includemod_errorprinter.ml[28,1361+48]..[28,1361+69])
                                                Pexp_tuple
                                                [
                                                  expression (typing/includemod_errorprinter.ml[28,1361+49]..[28,1361+53])
                                                    Pexp_ident "path" (typing/includemod_errorprinter.ml[28,1361+49]..[28,1361+53])
                                                  expression (typing/includemod_errorprinter.ml[28,1361+55]..[28,1361+68])
                                                    Pexp_apply
                                                    expression (typing/includemod_errorprinter.ml[28,1361+55]..[28,1361+65])
                                                      Pexp_ident "Ident.name" (typing/includemod_errorprinter.ml[28,1361+55]..[28,1361+65])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[28,1361+66]..[28,1361+68])
                                                          Pexp_ident "id" (typing/includemod_errorprinter.ml[28,1361+66]..[28,1361+68])
                                                    ]
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[28,1361+71]..[28,1361+74])
                                            Pexp_ident "rem" (typing/includemod_errorprinter.ml[28,1361+71]..[28,1361+74])
                                      ]
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[29,1436+12]..[29,1436+13])
                                      Ppat_any
                                    expression (typing/includemod_errorprinter.ml[29,1436+17]..[29,1436+29])
                                      Pexp_assert
                                      expression (typing/includemod_errorprinter.ml[29,1436+24]..[29,1436+29])
                                        Pexp_construct "false" (typing/includemod_errorprinter.ml[29,1436+24]..[29,1436+29])
                                        None
                                ]
                        ]
                        expression (typing/includemod_errorprinter.ml[30,1466+11]..[30,1466+36])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[30,1466+11]..[30,1466+15])
                            Pexp_ident "subm" (typing/includemod_errorprinter.ml[30,1466+11]..[30,1466+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[30,1466+16]..[30,1466+32])
                                Pexp_construct "Path.Pident" (typing/includemod_errorprinter.ml[30,1466+17]..[30,1466+28])
                                Some
                                  expression (typing/includemod_errorprinter.ml[30,1466+29]..[30,1466+31])
                                    Pexp_ident "id" (typing/includemod_errorprinter.ml[30,1466+29]..[30,1466+31])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[30,1466+33]..[30,1466+36])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[30,1466+33]..[30,1466+36])
                          ]
                    <case>
                      pattern (typing/includemod_errorprinter.ml[31,1503+6]..[31,1503+7])
                        Ppat_any
                      expression (typing/includemod_errorprinter.ml[31,1503+11]..[31,1503+23])
                        Pexp_assert
                        expression (typing/includemod_errorprinter.ml[31,1503+18]..[31,1503+23])
                          Pexp_construct "false" (typing/includemod_errorprinter.ml[31,1503+18]..[31,1503+23])
                          None
                  ]
            ]
          structure_item (typing/includemod_errorprinter.ml[34,1529+2]..[61,2577+47])
            Pstr_value Rec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[34,1529+10]..[34,1529+17])
                  Ppat_var "context" (typing/includemod_errorprinter.ml[34,1529+10]..[34,1529+17])
                expression (typing/includemod_errorprinter.ml[34,1529+18]..[46,2017+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[34,1529+18]..[34,1529+21])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[34,1529+18]..[34,1529+21])
                  expression (typing/includemod_errorprinter.ml[34,1529+24]..[46,2017+35])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[35,1562+6]..[35,1562+22])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[35,1562+16]..[35,1562+18])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[35,1562+6]..[35,1562+22]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[35,1562+6]..[35,1562+15])
                                  Ppat_construct "Module" (typing/includemod_errorprinter.ml[35,1562+6]..[35,1562+12])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[35,1562+13]..[35,1562+15])
                                      Ppat_var "id" (typing/includemod_errorprinter.ml[35,1562+13]..[35,1562+15])
                                pattern (typing/includemod_errorprinter.ml[35,1562+19]..[35,1562+22])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[35,1562+19]..[35,1562+22])
                              ]
                        expression (typing/includemod_errorprinter.ml[36,1588+8]..[36,1588+74])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[36,1588+8]..[36,1588+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[36,1588+8]..[36,1588+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+23]..[36,1588+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[36,1588+23]..[36,1588+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+27]..[36,1588+47])
                                Pexp_constant PConst_string("@[<2>module %a%a@]",(typing/includemod_errorprinter.ml[36,1588+28]..[36,1588+46]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+48]..[36,1588+62])
                                Pexp_ident "Printtyp.ident" (typing/includemod_errorprinter.ml[36,1588+48]..[36,1588+62])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+63]..[36,1588+65])
                                Pexp_ident "id" (typing/includemod_errorprinter.ml[36,1588+63]..[36,1588+65])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+66]..[36,1588+70])
                                Pexp_ident "args" (typing/includemod_errorprinter.ml[36,1588+66]..[36,1588+70])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[36,1588+71]..[36,1588+74])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[36,1588+71]..[36,1588+74])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[37,1663+6]..[37,1663+23])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[37,1663+17]..[37,1663+19])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[37,1663+6]..[37,1663+23]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[37,1663+6]..[37,1663+16])
                                  Ppat_construct "Modtype" (typing/includemod_errorprinter.ml[37,1663+6]..[37,1663+13])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[37,1663+14]..[37,1663+16])
                                      Ppat_var "id" (typing/includemod_errorprinter.ml[37,1663+14]..[37,1663+16])
                                pattern (typing/includemod_errorprinter.ml[37,1663+20]..[37,1663+23])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[37,1663+20]..[37,1663+23])
                              ]
                        expression (typing/includemod_errorprinter.ml[38,1690+8]..[39,1747+43])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[38,1690+8]..[38,1690+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[38,1690+8]..[38,1690+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[38,1690+23]..[38,1690+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[38,1690+23]..[38,1690+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[38,1690+27]..[38,1690+56])
                                Pexp_constant PConst_string("@[<2>module type %a =@ %a@]",(typing/includemod_errorprinter.ml[38,1690+28]..[38,1690+55]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[39,1747+10]..[39,1747+24])
                                Pexp_ident "Printtyp.ident" (typing/includemod_errorprinter.ml[39,1747+10]..[39,1747+24])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[39,1747+25]..[39,1747+27])
                                Pexp_ident "id" (typing/includemod_errorprinter.ml[39,1747+25]..[39,1747+27])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[39,1747+28]..[39,1747+39])
                                Pexp_ident "context_mty" (typing/includemod_errorprinter.ml[39,1747+28]..[39,1747+39])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[39,1747+40]..[39,1747+43])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[39,1747+40]..[39,1747+43])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[40,1791+6]..[40,1791+19])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[40,1791+13]..[40,1791+15])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[40,1791+6]..[40,1791+19]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[40,1791+6]..[40,1791+12])
                                  Ppat_construct "Body" (typing/includemod_errorprinter.ml[40,1791+6]..[40,1791+10])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[40,1791+11]..[40,1791+12])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[40,1791+11]..[40,1791+12])
                                pattern (typing/includemod_errorprinter.ml[40,1791+16]..[40,1791+19])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[40,1791+16]..[40,1791+19])
                              ]
                        expression (typing/includemod_errorprinter.ml[41,1814+8]..[41,1814+76])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[41,1814+8]..[41,1814+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[41,1814+8]..[41,1814+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[41,1814+23]..[41,1814+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[41,1814+23]..[41,1814+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[41,1814+27]..[41,1814+48])
                                Pexp_constant PConst_string("functor (%s) ->@ %a",(typing/includemod_errorprinter.ml[41,1814+28]..[41,1814+47]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[41,1814+49]..[41,1814+60])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[41,1814+50]..[41,1814+57])
                                  Pexp_ident "argname" (typing/includemod_errorprinter.ml[41,1814+50]..[41,1814+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[41,1814+58]..[41,1814+59])
                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[41,1814+58]..[41,1814+59])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[41,1814+61]..[41,1814+72])
                                Pexp_ident "context_mty" (typing/includemod_errorprinter.ml[41,1814+61]..[41,1814+72])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[41,1814+73]..[41,1814+76])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[41,1814+73]..[41,1814+76])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[42,1891+6]..[42,1891+18])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[42,1891+12]..[42,1891+14])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[42,1891+6]..[42,1891+18]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[42,1891+6]..[42,1891+11])
                                  Ppat_construct "Arg" (typing/includemod_errorprinter.ml[42,1891+6]..[42,1891+9])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[42,1891+10]..[42,1891+11])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[42,1891+10]..[42,1891+11])
                                pattern (typing/includemod_errorprinter.ml[42,1891+15]..[42,1891+18])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[42,1891+15]..[42,1891+18])
                              ]
                        expression (typing/includemod_errorprinter.ml[43,1913+8]..[44,1967+37])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[43,1913+8]..[43,1913+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[43,1913+8]..[43,1913+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[43,1913+23]..[43,1913+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[43,1913+23]..[43,1913+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[43,1913+27]..[43,1913+53])
                                Pexp_constant PConst_string("functor (%s : %a) -> ...",(typing/includemod_errorprinter.ml[43,1913+28]..[43,1913+52]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[44,1967+10]..[44,1967+21])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[44,1967+11]..[44,1967+18])
                                  Pexp_ident "argname" (typing/includemod_errorprinter.ml[44,1967+11]..[44,1967+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[44,1967+19]..[44,1967+20])
                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[44,1967+19]..[44,1967+20])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[44,1967+22]..[44,1967+33])
                                Pexp_ident "context_mty" (typing/includemod_errorprinter.ml[44,1967+22]..[44,1967+33])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[44,1967+34]..[44,1967+37])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[44,1967+34]..[44,1967+37])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[45,2005+6]..[45,2005+8])
                          Ppat_construct "[]" (typing/includemod_errorprinter.ml[45,2005+6]..[45,2005+8])
                          None
                        expression (typing/includemod_errorprinter.ml[46,2017+8]..[46,2017+35])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[46,2017+8]..[46,2017+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[46,2017+8]..[46,2017+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[46,2017+23]..[46,2017+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[46,2017+23]..[46,2017+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[46,2017+27]..[46,2017+35])
                                Pexp_constant PConst_string("<here>",(typing/includemod_errorprinter.ml[46,2017+28]..[46,2017+34]),None)
                          ]
                    ]
              <def>
                pattern (typing/includemod_errorprinter.ml[47,2053+6]..[47,2053+17])
                  Ppat_var "context_mty" (typing/includemod_errorprinter.ml[47,2053+6]..[47,2053+17])
                expression (typing/includemod_errorprinter.ml[47,2053+18]..[50,2197+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[47,2053+18]..[47,2053+21])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[47,2053+18]..[47,2053+21])
                  expression (typing/includemod_errorprinter.ml[47,2053+24]..[50,2197+28])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[48,2086+6]..[48,2086+40])
                          Ppat_alias "rem" (typing/includemod_errorprinter.ml[48,2086+37]..[48,2086+40])
                          pattern (typing/includemod_errorprinter.ml[48,2086+6]..[48,2086+33])
                            Ppat_construct "::" (typing/includemod_errorprinter.ml[48,2086+29]..[48,2086+31])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[48,2086+6]..[48,2086+33]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[48,2086+6]..[48,2086+28])
                                    Ppat_or
                                    pattern (typing/includemod_errorprinter.ml[48,2086+7]..[48,2086+15])
                                      Ppat_construct "Module" (typing/includemod_errorprinter.ml[48,2086+7]..[48,2086+13])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[48,2086+14]..[48,2086+15])
                                          Ppat_any
                                    pattern (typing/includemod_errorprinter.ml[48,2086+18]..[48,2086+27])
                                      Ppat_construct "Modtype" (typing/includemod_errorprinter.ml[48,2086+18]..[48,2086+25])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[48,2086+26]..[48,2086+27])
                                          Ppat_any
                                  pattern (typing/includemod_errorprinter.ml[48,2086+32]..[48,2086+33])
                                    Ppat_any
                                ]
                        expression (typing/includemod_errorprinter.ml[49,2130+8]..[49,2130+66])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[49,2130+8]..[49,2130+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[49,2130+8]..[49,2130+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[49,2130+23]..[49,2130+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[49,2130+23]..[49,2130+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[49,2130+27]..[49,2130+54])
                                Pexp_constant PConst_string("@[<2>sig@ %a@;<1 -2>end@]",(typing/includemod_errorprinter.ml[49,2130+28]..[49,2130+53]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[49,2130+55]..[49,2130+62])
                                Pexp_ident "context" (typing/includemod_errorprinter.ml[49,2130+55]..[49,2130+62])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[49,2130+63]..[49,2130+66])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[49,2130+63]..[49,2130+66])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[50,2197+6]..[50,2197+9])
                          Ppat_var "cxt" (typing/includemod_errorprinter.ml[50,2197+6]..[50,2197+9])
                        expression (typing/includemod_errorprinter.ml[50,2197+13]..[50,2197+28])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[50,2197+13]..[50,2197+20])
                            Pexp_ident "context" (typing/includemod_errorprinter.ml[50,2197+13]..[50,2197+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[50,2197+21]..[50,2197+24])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[50,2197+21]..[50,2197+24])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[50,2197+25]..[50,2197+28])
                                Pexp_ident "cxt" (typing/includemod_errorprinter.ml[50,2197+25]..[50,2197+28])
                          ]
                    ]
              <def>
                pattern (typing/includemod_errorprinter.ml[51,2226+6]..[51,2226+10])
                  Ppat_var "args" (typing/includemod_errorprinter.ml[51,2226+6]..[51,2226+10])
                expression (typing/includemod_errorprinter.ml[51,2226+11]..[57,2442+51]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[51,2226+11]..[51,2226+14])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[51,2226+11]..[51,2226+14])
                  expression (typing/includemod_errorprinter.ml[51,2226+17]..[57,2442+51])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[52,2252+6]..[52,2252+19])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[52,2252+13]..[52,2252+15])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[52,2252+6]..[52,2252+19]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[52,2252+6]..[52,2252+12])
                                  Ppat_construct "Body" (typing/includemod_errorprinter.ml[52,2252+6]..[52,2252+10])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[52,2252+11]..[52,2252+12])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[52,2252+11]..[52,2252+12])
                                pattern (typing/includemod_errorprinter.ml[52,2252+16]..[52,2252+19])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[52,2252+16]..[52,2252+19])
                              ]
                        expression (typing/includemod_errorprinter.ml[53,2275+8]..[53,2275+56])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[53,2275+8]..[53,2275+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[53,2275+8]..[53,2275+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[53,2275+23]..[53,2275+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[53,2275+23]..[53,2275+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[53,2275+27]..[53,2275+35])
                                Pexp_constant PConst_string("(%s)%a",(typing/includemod_errorprinter.ml[53,2275+28]..[53,2275+34]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[53,2275+36]..[53,2275+47])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[53,2275+37]..[53,2275+44])
                                  Pexp_ident "argname" (typing/includemod_errorprinter.ml[53,2275+37]..[53,2275+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[53,2275+45]..[53,2275+46])
                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[53,2275+45]..[53,2275+46])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[53,2275+48]..[53,2275+52])
                                Pexp_ident "args" (typing/includemod_errorprinter.ml[53,2275+48]..[53,2275+52])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[53,2275+53]..[53,2275+56])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[53,2275+53]..[53,2275+56])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[54,2332+6]..[54,2332+18])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[54,2332+12]..[54,2332+14])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[54,2332+6]..[54,2332+18]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[54,2332+6]..[54,2332+11])
                                  Ppat_construct "Arg" (typing/includemod_errorprinter.ml[54,2332+6]..[54,2332+9])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[54,2332+10]..[54,2332+11])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[54,2332+10]..[54,2332+11])
                                pattern (typing/includemod_errorprinter.ml[54,2332+15]..[54,2332+18])
                                  Ppat_var "rem" (typing/includemod_errorprinter.ml[54,2332+15]..[54,2332+18])
                              ]
                        expression (typing/includemod_errorprinter.ml[55,2354+8]..[55,2354+74])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[55,2354+8]..[55,2354+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[55,2354+8]..[55,2354+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[55,2354+23]..[55,2354+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[55,2354+23]..[55,2354+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[55,2354+27]..[55,2354+45])
                                Pexp_constant PConst_string("(%s :@ %a) : ...",(typing/includemod_errorprinter.ml[55,2354+28]..[55,2354+44]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[55,2354+46]..[55,2354+58])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[55,2354+47]..[55,2354+54])
                                  Pexp_ident "argname" (typing/includemod_errorprinter.ml[55,2354+47]..[55,2354+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[55,2354+56]..[55,2354+57])
                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[55,2354+56]..[55,2354+57])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[55,2354+59]..[55,2354+70])
                                Pexp_ident "context_mty" (typing/includemod_errorprinter.ml[55,2354+59]..[55,2354+70])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[55,2354+71]..[55,2354+74])
                                Pexp_ident "rem" (typing/includemod_errorprinter.ml[55,2354+71]..[55,2354+74])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[56,2429+6]..[56,2429+9])
                          Ppat_var "cxt" (typing/includemod_errorprinter.ml[56,2429+6]..[56,2429+9])
                        expression (typing/includemod_errorprinter.ml[57,2442+8]..[57,2442+51])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[57,2442+8]..[57,2442+22])
                            Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[57,2442+8]..[57,2442+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[57,2442+23]..[57,2442+26])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[57,2442+23]..[57,2442+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[57,2442+27]..[57,2442+35])
                                Pexp_constant PConst_string(" :@ %a",(typing/includemod_errorprinter.ml[57,2442+28]..[57,2442+34]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[57,2442+36]..[57,2442+47])
                                Pexp_ident "context_mty" (typing/includemod_errorprinter.ml[57,2442+36]..[57,2442+47])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[57,2442+48]..[57,2442+51])
                                Pexp_ident "cxt" (typing/includemod_errorprinter.ml[57,2442+48]..[57,2442+51])
                          ]
                    ]
              <def>
                pattern (typing/includemod_errorprinter.ml[58,2494+6]..[58,2494+13])
                  Ppat_var "argname" (typing/includemod_errorprinter.ml[58,2494+6]..[58,2494+13])
                expression (typing/includemod_errorprinter.ml[58,2494+16]..[61,2577+47])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/includemod_errorprinter.ml[59,2519+6]..[59,2519+16])
                        Ppat_construct "Types.Unit" (typing/includemod_errorprinter.ml[59,2519+6]..[59,2519+16])
                        None
                      expression (typing/includemod_errorprinter.ml[59,2519+20]..[59,2519+22])
                        Pexp_constant PConst_string("",(typing/includemod_errorprinter.ml[59,2519+21]..[59,2519+21]),None)
                    <case>
                      pattern (typing/includemod_errorprinter.ml[60,2542+6]..[60,2542+27])
                        Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[60,2542+6]..[60,2542+17])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[60,2542+18]..[60,2542+27])
                            Ppat_tuple
                            [
                              pattern (typing/includemod_errorprinter.ml[60,2542+19]..[60,2542+23])
                                Ppat_construct "None" (typing/includemod_errorprinter.ml[60,2542+19]..[60,2542+23])
                                None
                              pattern (typing/includemod_errorprinter.ml[60,2542+25]..[60,2542+26])
                                Ppat_any
                            ]
                      expression (typing/includemod_errorprinter.ml[60,2542+31]..[60,2542+34])
                        Pexp_constant PConst_string("_",(typing/includemod_errorprinter.ml[60,2542+32]..[60,2542+33]),None)
                    <case>
                      pattern (typing/includemod_errorprinter.ml[61,2577+6]..[61,2577+30])
                        Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[61,2577+6]..[61,2577+17])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[61,2577+18]..[61,2577+30])
                            Ppat_tuple
                            [
                              pattern (typing/includemod_errorprinter.ml[61,2577+19]..[61,2577+26])
                                Ppat_construct "Some" (typing/includemod_errorprinter.ml[61,2577+19]..[61,2577+23])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[61,2577+24]..[61,2577+26])
                                    Ppat_var "id" (typing/includemod_errorprinter.ml[61,2577+24]..[61,2577+26])
                              pattern (typing/includemod_errorprinter.ml[61,2577+28]..[61,2577+29])
                                Ppat_any
                            ]
                      expression (typing/includemod_errorprinter.ml[61,2577+34]..[61,2577+47])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[61,2577+34]..[61,2577+44])
                          Pexp_ident "Ident.name" (typing/includemod_errorprinter.ml[61,2577+34]..[61,2577+44])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[61,2577+45]..[61,2577+47])
                              Pexp_ident "id" (typing/includemod_errorprinter.ml[61,2577+45]..[61,2577+47])
                        ]
                  ]
            ]
          structure_item (typing/includemod_errorprinter.ml[63,2626+2]..[68,2834+65])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[63,2626+6]..[63,2626+12])
                  Ppat_var "alt_pp" (typing/includemod_errorprinter.ml[63,2626+6]..[63,2626+12])
                expression (typing/includemod_errorprinter.ml[63,2626+13]..[68,2834+65]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[63,2626+13]..[63,2626+16])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[63,2626+13]..[63,2626+16])
                  expression (typing/includemod_errorprinter.ml[63,2626+17]..[68,2834+65]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[63,2626+17]..[63,2626+20])
                      Ppat_var "cxt" (typing/includemod_errorprinter.ml[63,2626+17]..[63,2626+20])
                    expression (typing/includemod_errorprinter.ml[64,2649+4]..[68,2834+65])
                      Pexp_ifthenelse
                      expression (typing/includemod_errorprinter.ml[64,2649+7]..[64,2649+15])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[64,2649+11]..[64,2649+12])
                          Pexp_ident "=" (typing/includemod_errorprinter.ml[64,2649+11]..[64,2649+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[64,2649+7]..[64,2649+10])
                              Pexp_ident "cxt" (typing/includemod_errorprinter.ml[64,2649+7]..[64,2649+10])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[64,2649+13]..[64,2649+15])
                              Pexp_construct "[]" (typing/includemod_errorprinter.ml[64,2649+13]..[64,2649+15])
                              None
                        ]
                      expression (typing/includemod_errorprinter.ml[64,2649+21]..[64,2649+23])
                        Pexp_construct "()" (typing/includemod_errorprinter.ml[64,2649+21]..[64,2649+23])
                        None
                      Some
                        expression (typing/includemod_errorprinter.ml[65,2678+4]..[68,2834+65])
                          Pexp_ifthenelse
                          expression (typing/includemod_errorprinter.ml[65,2678+7]..[65,2678+64])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[65,2678+7]..[65,2678+19])
                              Pexp_ident "List.for_all" (typing/includemod_errorprinter.ml[65,2678+7]..[65,2678+19])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[65,2678+20]..[65,2678+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[65,2678+30]..[65,2678+38])
                                        Ppat_construct "Module" (typing/includemod_errorprinter.ml[65,2678+30]..[65,2678+36])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[65,2678+37]..[65,2678+38])
                                            Ppat_any
                                      expression (typing/includemod_errorprinter.ml[65,2678+42]..[65,2678+46])
                                        Pexp_construct "true" (typing/includemod_errorprinter.ml[65,2678+42]..[65,2678+46])
                                        None
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[65,2678+49]..[65,2678+50])
                                        Ppat_any
                                      expression (typing/includemod_errorprinter.ml[65,2678+54]..[65,2678+59])
                                        Pexp_construct "false" (typing/includemod_errorprinter.ml[65,2678+54]..[65,2678+59])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[65,2678+61]..[65,2678+64])
                                  Pexp_ident "cxt" (typing/includemod_errorprinter.ml[65,2678+61]..[65,2678+64])
                            ]
                          expression (typing/includemod_errorprinter.ml[66,2748+6]..[66,2748+76])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[66,2748+6]..[66,2748+20])
                              Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[66,2748+6]..[66,2748+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[66,2748+21]..[66,2748+24])
                                  Pexp_ident "ppf" (typing/includemod_errorprinter.ml[66,2748+21]..[66,2748+24])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[66,2748+25]..[66,2748+40])
                                  Pexp_constant PConst_string("in module %a,",(typing/includemod_errorprinter.ml[66,2748+26]..[66,2748+39]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[66,2748+41]..[66,2748+54])
                                  Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[66,2748+41]..[66,2748+54])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[66,2748+55]..[66,2748+76])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[66,2748+56]..[66,2748+71])
                                    Pexp_ident "path_of_context" (typing/includemod_errorprinter.ml[66,2748+56]..[66,2748+71])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[66,2748+72]..[66,2748+75])
                                        Pexp_ident "cxt" (typing/includemod_errorprinter.ml[66,2748+72]..[66,2748+75])
                                  ]
                            ]
                          Some
                            expression (typing/includemod_errorprinter.ml[68,2834+6]..[68,2834+65])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[68,2834+6]..[68,2834+20])
                                Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[68,2834+6]..[68,2834+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[68,2834+21]..[68,2834+24])
                                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[68,2834+21]..[68,2834+24])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[68,2834+25]..[68,2834+53])
                                    Pexp_constant PConst_string("@[<hv 2>at position@ %a,@]",(typing/includemod_errorprinter.ml[68,2834+26]..[68,2834+52]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[68,2834+54]..[68,2834+61])
                                    Pexp_ident "context" (typing/includemod_errorprinter.ml[68,2834+54]..[68,2834+61])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[68,2834+62]..[68,2834+65])
                                    Pexp_ident "cxt" (typing/includemod_errorprinter.ml[68,2834+62]..[68,2834+65])
                              ]
            ]
          structure_item (typing/includemod_errorprinter.ml[70,2901+2]..[75,3107+66])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[70,2901+6]..[70,2901+8])
                  Ppat_var "pp" (typing/includemod_errorprinter.ml[70,2901+6]..[70,2901+8])
                expression (typing/includemod_errorprinter.ml[70,2901+9]..[75,3107+66]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[70,2901+9]..[70,2901+12])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[70,2901+9]..[70,2901+12])
                  expression (typing/includemod_errorprinter.ml[70,2901+13]..[75,3107+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[70,2901+13]..[70,2901+16])
                      Ppat_var "cxt" (typing/includemod_errorprinter.ml[70,2901+13]..[70,2901+16])
                    expression (typing/includemod_errorprinter.ml[71,2920+4]..[75,3107+66])
                      Pexp_ifthenelse
                      expression (typing/includemod_errorprinter.ml[71,2920+7]..[71,2920+15])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[71,2920+11]..[71,2920+12])
                          Pexp_ident "=" (typing/includemod_errorprinter.ml[71,2920+11]..[71,2920+12])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[71,2920+7]..[71,2920+10])
                              Pexp_ident "cxt" (typing/includemod_errorprinter.ml[71,2920+7]..[71,2920+10])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[71,2920+13]..[71,2920+15])
                              Pexp_construct "[]" (typing/includemod_errorprinter.ml[71,2920+13]..[71,2920+15])
                              None
                        ]
                      expression (typing/includemod_errorprinter.ml[71,2920+21]..[71,2920+23])
                        Pexp_construct "()" (typing/includemod_errorprinter.ml[71,2920+21]..[71,2920+23])
                        None
                      Some
                        expression (typing/includemod_errorprinter.ml[72,2949+4]..[75,3107+66])
                          Pexp_ifthenelse
                          expression (typing/includemod_errorprinter.ml[72,2949+7]..[72,2949+64])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[72,2949+7]..[72,2949+19])
                              Pexp_ident "List.for_all" (typing/includemod_errorprinter.ml[72,2949+7]..[72,2949+19])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[72,2949+20]..[72,2949+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[72,2949+30]..[72,2949+38])
                                        Ppat_construct "Module" (typing/includemod_errorprinter.ml[72,2949+30]..[72,2949+36])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[72,2949+37]..[72,2949+38])
                                            Ppat_any
                                      expression (typing/includemod_errorprinter.ml[72,2949+42]..[72,2949+46])
                                        Pexp_construct "true" (typing/includemod_errorprinter.ml[72,2949+42]..[72,2949+46])
                                        None
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[72,2949+49]..[72,2949+50])
                                        Ppat_any
                                      expression (typing/includemod_errorprinter.ml[72,2949+54]..[72,2949+59])
                                        Pexp_construct "false" (typing/includemod_errorprinter.ml[72,2949+54]..[72,2949+59])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[72,2949+61]..[72,2949+64])
                                  Pexp_ident "cxt" (typing/includemod_errorprinter.ml[72,2949+61]..[72,2949+64])
                            ]
                          expression (typing/includemod_errorprinter.ml[73,3019+6]..[73,3019+78])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[73,3019+6]..[73,3019+20])
                              Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[73,3019+6]..[73,3019+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[73,3019+21]..[73,3019+24])
                                  Pexp_ident "ppf" (typing/includemod_errorprinter.ml[73,3019+21]..[73,3019+24])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[73,3019+25]..[73,3019+42])
                                  Pexp_constant PConst_string("In module %a:@ ",(typing/includemod_errorprinter.ml[73,3019+26]..[73,3019+41]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[73,3019+43]..[73,3019+56])
                                  Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[73,3019+43]..[73,3019+56])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[73,3019+57]..[73,3019+78])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[73,3019+58]..[73,3019+73])
                                    Pexp_ident "path_of_context" (typing/includemod_errorprinter.ml[73,3019+58]..[73,3019+73])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[73,3019+74]..[73,3019+77])
                                        Pexp_ident "cxt" (typing/includemod_errorprinter.ml[73,3019+74]..[73,3019+77])
                                  ]
                            ]
                          Some
                            expression (typing/includemod_errorprinter.ml[75,3107+6]..[75,3107+66])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[75,3107+6]..[75,3107+20])
                                Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[75,3107+6]..[75,3107+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[75,3107+21]..[75,3107+24])
                                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[75,3107+21]..[75,3107+24])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[75,3107+25]..[75,3107+54])
                                    Pexp_constant PConst_string("@[<hv 2>At position@ %a@]@ ",(typing/includemod_errorprinter.ml[75,3107+26]..[75,3107+53]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[75,3107+55]..[75,3107+62])
                                    Pexp_ident "context" (typing/includemod_errorprinter.ml[75,3107+55]..[75,3107+62])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[75,3107+63]..[75,3107+66])
                                    Pexp_ident "cxt" (typing/includemod_errorprinter.ml[75,3107+63]..[75,3107+66])
                              ]
            ]
        ]
  structure_item (typing/includemod_errorprinter.ml[78,3179+0]..[183,6858+3])
    Pstr_module
    "Illegal_permutation" (typing/includemod_errorprinter.ml[78,3179+7]..[78,3179+26])
      module_expr (typing/includemod_errorprinter.ml[78,3179+29]..[183,6858+3])
        Pmod_structure
        [
          structure_item (typing/includemod_errorprinter.ml[79,3215+2]..[80,3278+25])
            Pstr_attribute "ocaml.text"
            [
              structure_item (typing/includemod_errorprinter.ml[79,3215+2]..[80,3278+25])
                Pstr_eval
                expression (typing/includemod_errorprinter.ml[79,3215+2]..[80,3278+25])
                  Pexp_constant PConst_string(" Extraction of information in case of illegal permutation\n      in a module type ",(typing/includemod_errorprinter.ml[79,3215+2]..[80,3278+25]),None)
            ]
          structure_item (typing/includemod_errorprinter.ml[84,3427+2]..[87,3477+12])
            Pstr_type Rec
            [
              type_declaration "coerce_pos" (typing/includemod_errorprinter.ml[84,3427+7]..[84,3427+17]) (typing/includemod_errorprinter.ml[84,3427+2]..[87,3477+12])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/includemod_errorprinter.ml[82,3305+2]..[83,3377+49])
                      Pstr_eval
                      expression (typing/includemod_errorprinter.ml[82,3305+2]..[83,3377+49])
                        Pexp_constant PConst_string(" When examining coercions, we only have runtime component indices,\n      we use thus a limited version of {!pos}. ",(typing/includemod_errorprinter.ml[82,3305+2]..[83,3377+49]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[85,3447+4]..[85,3447+17])
                        "Item" (typing/includemod_errorprinter.ml[85,3447+6]..[85,3447+10])
                        [
                          core_type (typing/includemod_errorprinter.ml[85,3447+14]..[85,3447+17])
                            Ptyp_constr "int" (typing/includemod_errorprinter.ml[85,3447+14]..[85,3447+17])
                            []
                        ]
                        None
                      (typing/includemod_errorprinter.ml[86,3465+4]..[86,3465+11])
                        "InArg" (typing/includemod_errorprinter.ml[86,3465+6]..[86,3465+11])
                        []
                        None
                      (typing/includemod_errorprinter.ml[87,3477+4]..[87,3477+12])
                        "InBody" (typing/includemod_errorprinter.ml[87,3477+6]..[87,3477+12])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[89,3491+2]..[91,3547+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[89,3491+6]..[89,3491+12])
                  Ppat_var "either" (typing/includemod_errorprinter.ml[89,3491+6]..[89,3491+12])
                expression (typing/includemod_errorprinter.ml[89,3491+13]..[91,3547+22]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[89,3491+13]..[89,3491+14])
                    Ppat_var "f" (typing/includemod_errorprinter.ml[89,3491+13]..[89,3491+14])
                  expression (typing/includemod_errorprinter.ml[89,3491+15]..[91,3547+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[89,3491+15]..[89,3491+16])
                      Ppat_var "x" (typing/includemod_errorprinter.ml[89,3491+15]..[89,3491+16])
                    expression (typing/includemod_errorprinter.ml[89,3491+17]..[91,3547+22]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[89,3491+17]..[89,3491+18])
                        Ppat_var "g" (typing/includemod_errorprinter.ml[89,3491+17]..[89,3491+18])
                      expression (typing/includemod_errorprinter.ml[89,3491+19]..[91,3547+22]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[89,3491+19]..[89,3491+20])
                          Ppat_var "y" (typing/includemod_errorprinter.ml[89,3491+19]..[89,3491+20])
                        expression (typing/includemod_errorprinter.ml[89,3491+23]..[91,3547+22])
                          Pexp_match
                          expression (typing/includemod_errorprinter.ml[89,3491+29]..[89,3491+32])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[89,3491+29]..[89,3491+30])
                              Pexp_ident "f" (typing/includemod_errorprinter.ml[89,3491+29]..[89,3491+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[89,3491+31]..[89,3491+32])
                                  Pexp_ident "x" (typing/includemod_errorprinter.ml[89,3491+31]..[89,3491+32])
                            ]
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[90,3529+6]..[90,3529+10])
                                Ppat_construct "None" (typing/includemod_errorprinter.ml[90,3529+6]..[90,3529+10])
                                None
                              expression (typing/includemod_errorprinter.ml[90,3529+14]..[90,3529+17])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[90,3529+14]..[90,3529+15])
                                  Pexp_ident "g" (typing/includemod_errorprinter.ml[90,3529+14]..[90,3529+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[90,3529+16]..[90,3529+17])
                                      Pexp_ident "y" (typing/includemod_errorprinter.ml[90,3529+16]..[90,3529+17])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[91,3547+6]..[91,3547+17])
                                Ppat_alias "v" (typing/includemod_errorprinter.ml[91,3547+16]..[91,3547+17])
                                pattern (typing/includemod_errorprinter.ml[91,3547+6]..[91,3547+12])
                                  Ppat_construct "Some" (typing/includemod_errorprinter.ml[91,3547+6]..[91,3547+10])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[91,3547+11]..[91,3547+12])
                                      Ppat_any
                              expression (typing/includemod_errorprinter.ml[91,3547+21]..[91,3547+22])
                                Pexp_ident "v" (typing/includemod_errorprinter.ml[91,3547+21]..[91,3547+22])
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[94,3646+2]..[124,4780+41])
            Pstr_value Rec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/includemod_errorprinter.ml[93,3571+2]..[93,3571+74])
                        Pstr_eval
                        expression (typing/includemod_errorprinter.ml[93,3571+2]..[93,3571+74])
                          Pexp_constant PConst_string(" We extract a lone transposition from a full tree of permutations. ",(typing/includemod_errorprinter.ml[93,3571+2]..[93,3571+74]),None)
                    ]
                pattern (typing/includemod_errorprinter.ml[94,3646+10]..[94,3646+29])
                  Ppat_var "transposition_under" (typing/includemod_errorprinter.ml[94,3646+10]..[94,3646+29])
                expression (typing/includemod_errorprinter.ml[94,3646+30]..[108,4207+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[94,3646+30]..[94,3646+34])
                    Ppat_var "path" (typing/includemod_errorprinter.ml[94,3646+30]..[94,3646+34])
                  expression (typing/includemod_errorprinter.ml[94,3646+35]..[108,4207+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[94,3646+35]..[94,3646+68])
                      Ppat_constraint
                      pattern (typing/includemod_errorprinter.ml[94,3646+36]..[94,3646+41])
                        Ppat_var "coerc" (typing/includemod_errorprinter.ml[94,3646+36]..[94,3646+41])
                      core_type (typing/includemod_errorprinter.ml[94,3646+42]..[94,3646+67])
                        Ptyp_constr "Typedtree.module_coercion" (typing/includemod_errorprinter.ml[94,3646+42]..[94,3646+67])
                        []
                    expression (typing/includemod_errorprinter.ml[95,3717+4]..[108,4207+20])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[95,3717+10]..[95,3717+15])
                        Pexp_ident "coerc" (typing/includemod_errorprinter.ml[95,3717+10]..[95,3717+15])
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[96,3738+6]..[96,3738+28])
                            Ppat_construct "Tcoerce_structure" (typing/includemod_errorprinter.ml[96,3738+6]..[96,3738+23])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[96,3738+23]..[96,3738+28])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[96,3738+24]..[96,3738+25])
                                    Ppat_var "c" (typing/includemod_errorprinter.ml[96,3738+24]..[96,3738+25])
                                  pattern (typing/includemod_errorprinter.ml[96,3738+26]..[96,3738+27])
                                    Ppat_any
                                ]
                          expression (typing/includemod_errorprinter.ml[97,3770+8]..[99,3819+33])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[97,3770+8]..[97,3770+14])
                              Pexp_ident "either" (typing/includemod_errorprinter.ml[97,3770+8]..[97,3770+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[98,3785+10]..[98,3785+31])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[98,3785+11]..[98,3785+23])
                                    Pexp_ident "not_fixpoint" (typing/includemod_errorprinter.ml[98,3785+11]..[98,3785+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[98,3785+24]..[98,3785+28])
                                        Pexp_ident "path" (typing/includemod_errorprinter.ml[98,3785+24]..[98,3785+28])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[98,3785+29]..[98,3785+30])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[98,3785+32]..[98,3785+33])
                                  Pexp_ident "c" (typing/includemod_errorprinter.ml[98,3785+32]..[98,3785+33])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[99,3819+10]..[99,3819+31])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[99,3819+11]..[99,3819+23])
                                    Pexp_ident "first_non_id" (typing/includemod_errorprinter.ml[99,3819+11]..[99,3819+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[99,3819+24]..[99,3819+28])
                                        Pexp_ident "path" (typing/includemod_errorprinter.ml[99,3819+24]..[99,3819+28])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[99,3819+29]..[99,3819+30])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[99,3819+32]..[99,3819+33])
                                  Pexp_ident "c" (typing/includemod_errorprinter.ml[99,3819+32]..[99,3819+33])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[100,3853+6]..[100,3853+30])
                            Ppat_construct "Tcoerce_functor" (typing/includemod_errorprinter.ml[100,3853+6]..[100,3853+21])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[100,3853+21]..[100,3853+30])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[100,3853+22]..[100,3853+25])
                                    Ppat_var "arg" (typing/includemod_errorprinter.ml[100,3853+22]..[100,3853+25])
                                  pattern (typing/includemod_errorprinter.ml[100,3853+26]..[100,3853+29])
                                    Ppat_var "res" (typing/includemod_errorprinter.ml[100,3853+26]..[100,3853+29])
                                ]
                          expression (typing/includemod_errorprinter.ml[101,3887+8]..[103,3952+50])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[101,3887+8]..[101,3887+14])
                              Pexp_ident "either" (typing/includemod_errorprinter.ml[101,3887+8]..[101,3887+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[102,3902+10]..[102,3902+45])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[102,3902+11]..[102,3902+30])
                                    Pexp_ident "transposition_under" (typing/includemod_errorprinter.ml[102,3902+11]..[102,3902+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[102,3902+31]..[102,3902+44])
                                        Pexp_construct "::" (typing/includemod_errorprinter.ml[102,3902+37]..[102,3902+39])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[102,3902+32]..[102,3902+43]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/includemod_errorprinter.ml[102,3902+32]..[102,3902+37])
                                                Pexp_construct "InArg" (typing/includemod_errorprinter.ml[102,3902+32]..[102,3902+37])
                                                None
                                              expression (typing/includemod_errorprinter.ml[102,3902+39]..[102,3902+43])
                                                Pexp_ident "path" (typing/includemod_errorprinter.ml[102,3902+39]..[102,3902+43])
                                            ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[102,3902+46]..[102,3902+49])
                                  Pexp_ident "arg" (typing/includemod_errorprinter.ml[102,3902+46]..[102,3902+49])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[103,3952+10]..[103,3952+46])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[103,3952+11]..[103,3952+30])
                                    Pexp_ident "transposition_under" (typing/includemod_errorprinter.ml[103,3952+11]..[103,3952+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[103,3952+31]..[103,3952+45])
                                        Pexp_construct "::" (typing/includemod_errorprinter.ml[103,3952+38]..[103,3952+40])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[103,3952+32]..[103,3952+44]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/includemod_errorprinter.ml[103,3952+32]..[103,3952+38])
                                                Pexp_construct "InBody" (typing/includemod_errorprinter.ml[103,3952+32]..[103,3952+38])
                                                None
                                              expression (typing/includemod_errorprinter.ml[103,3952+40]..[103,3952+44])
                                                Pexp_ident "path" (typing/includemod_errorprinter.ml[103,3952+40]..[103,3952+44])
                                            ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[103,3952+47]..[103,3952+50])
                                  Pexp_ident "res" (typing/includemod_errorprinter.ml[103,3952+47]..[103,3952+50])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[104,4003+6]..[104,4003+18])
                            Ppat_construct "Tcoerce_none" (typing/includemod_errorprinter.ml[104,4003+6]..[104,4003+18])
                            None
                          expression (typing/includemod_errorprinter.ml[104,4003+22]..[104,4003+26])
                            Pexp_construct "None" (typing/includemod_errorprinter.ml[104,4003+22]..[104,4003+26])
                            None
                        <case>
                          pattern (typing/includemod_errorprinter.ml[105,4030+6]..[105,4030+43])
                            Ppat_or
                            pattern (typing/includemod_errorprinter.ml[105,4030+6]..[105,4030+21])
                              Ppat_construct "Tcoerce_alias" (typing/includemod_errorprinter.ml[105,4030+6]..[105,4030+19])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[105,4030+20]..[105,4030+21])
                                  Ppat_any
                            pattern (typing/includemod_errorprinter.ml[105,4030+24]..[105,4030+43])
                              Ppat_construct "Tcoerce_primitive" (typing/includemod_errorprinter.ml[105,4030+24]..[105,4030+41])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[105,4030+42]..[105,4030+43])
                                  Ppat_any
                          expression (typing/includemod_errorprinter.ml[108,4207+8]..[108,4207+20])
                            Pexp_assert
                            expression (typing/includemod_errorprinter.ml[108,4207+15]..[108,4207+20])
                              Pexp_construct "false" (typing/includemod_errorprinter.ml[108,4207+15]..[108,4207+20])
                              None
                      ]
              <def>
                pattern (typing/includemod_errorprinter.ml[110,4306+6]..[110,4306+18])
                  Ppat_var "not_fixpoint" (typing/includemod_errorprinter.ml[110,4306+6]..[110,4306+18])
                expression (typing/includemod_errorprinter.ml[110,4306+19]..[116,4458+37]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[110,4306+19]..[110,4306+23])
                    Ppat_var "path" (typing/includemod_errorprinter.ml[110,4306+19]..[110,4306+23])
                  expression (typing/includemod_errorprinter.ml[110,4306+24]..[116,4458+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[110,4306+24]..[110,4306+27])
                      Ppat_var "pos" (typing/includemod_errorprinter.ml[110,4306+24]..[110,4306+27])
                    expression (typing/includemod_errorprinter.ml[110,4306+30]..[116,4458+37])
                      Pexp_function
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[111,4345+6]..[111,4345+8])
                            Ppat_construct "[]" (typing/includemod_errorprinter.ml[111,4345+6]..[111,4345+8])
                            None
                          expression (typing/includemod_errorprinter.ml[111,4345+12]..[111,4345+16])
                            Pexp_construct "None" (typing/includemod_errorprinter.ml[111,4345+12]..[111,4345+16])
                            None
                        <case>
                          pattern (typing/includemod_errorprinter.ml[112,4362+6]..[112,4362+17])
                            Ppat_construct "::" (typing/includemod_errorprinter.ml[112,4362+13]..[112,4362+15])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[112,4362+6]..[112,4362+17]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[112,4362+6]..[112,4362+12])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includemod_errorprinter.ml[112,4362+7]..[112,4362+8])
                                        Ppat_var "n" (typing/includemod_errorprinter.ml[112,4362+7]..[112,4362+8])
                                      pattern (typing/includemod_errorprinter.ml[112,4362+10]..[112,4362+11])
                                        Ppat_any
                                    ]
                                  pattern (typing/includemod_errorprinter.ml[112,4362+16]..[112,4362+17])
                                    Ppat_var "q" (typing/includemod_errorprinter.ml[112,4362+16]..[112,4362+17])
                                ]
                          expression (typing/includemod_errorprinter.ml[113,4383+8]..[116,4458+37])
                            Pexp_ifthenelse
                            expression (typing/includemod_errorprinter.ml[113,4383+11]..[113,4383+18])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[113,4383+13]..[113,4383+14])
                                Pexp_ident "=" (typing/includemod_errorprinter.ml[113,4383+13]..[113,4383+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[113,4383+11]..[113,4383+12])
                                    Pexp_ident "n" (typing/includemod_errorprinter.ml[113,4383+11]..[113,4383+12])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[113,4383+15]..[113,4383+18])
                                    Pexp_ident "pos" (typing/includemod_errorprinter.ml[113,4383+15]..[113,4383+18])
                              ]
                            expression (typing/includemod_errorprinter.ml[114,4407+10]..[114,4407+37])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[114,4407+10]..[114,4407+22])
                                Pexp_ident "not_fixpoint" (typing/includemod_errorprinter.ml[114,4407+10]..[114,4407+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[114,4407+23]..[114,4407+27])
                                    Pexp_ident "path" (typing/includemod_errorprinter.ml[114,4407+23]..[114,4407+27])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[114,4407+28]..[114,4407+35])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[114,4407+32]..[114,4407+33])
                                      Pexp_ident "+" (typing/includemod_errorprinter.ml[114,4407+32]..[114,4407+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[114,4407+29]..[114,4407+32])
                                          Pexp_ident "pos" (typing/includemod_errorprinter.ml[114,4407+29]..[114,4407+32])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[114,4407+33]..[114,4407+34])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[114,4407+36]..[114,4407+37])
                                    Pexp_ident "q" (typing/includemod_errorprinter.ml[114,4407+36]..[114,4407+37])
                              ]
                            Some
                              expression (typing/includemod_errorprinter.ml[116,4458+10]..[116,4458+37])
                                Pexp_construct "Some" (typing/includemod_errorprinter.ml[116,4458+10]..[116,4458+14])
                                Some
                                  expression (typing/includemod_errorprinter.ml[116,4458+14]..[116,4458+37])
                                    Pexp_tuple
                                    [
                                      expression (typing/includemod_errorprinter.ml[116,4458+15]..[116,4458+28])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[116,4458+15]..[116,4458+23])
                                          Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[116,4458+15]..[116,4458+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[116,4458+24]..[116,4458+28])
                                              Pexp_ident "path" (typing/includemod_errorprinter.ml[116,4458+24]..[116,4458+28])
                                        ]
                                      expression (typing/includemod_errorprinter.ml[116,4458+30]..[116,4458+33])
                                        Pexp_ident "pos" (typing/includemod_errorprinter.ml[116,4458+30]..[116,4458+33])
                                      expression (typing/includemod_errorprinter.ml[116,4458+35]..[116,4458+36])
                                        Pexp_ident "n" (typing/includemod_errorprinter.ml[116,4458+35]..[116,4458+36])
                                    ]
                      ]
              <def>
                pattern (typing/includemod_errorprinter.ml[118,4564+6]..[118,4564+18])
                  Ppat_var "first_non_id" (typing/includemod_errorprinter.ml[118,4564+6]..[118,4564+18])
                expression (typing/includemod_errorprinter.ml[118,4564+19]..[124,4780+41]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[118,4564+19]..[118,4564+23])
                    Ppat_var "path" (typing/includemod_errorprinter.ml[118,4564+19]..[118,4564+23])
                  expression (typing/includemod_errorprinter.ml[118,4564+24]..[124,4780+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[118,4564+24]..[118,4564+27])
                      Ppat_var "pos" (typing/includemod_errorprinter.ml[118,4564+24]..[118,4564+27])
                    expression (typing/includemod_errorprinter.ml[118,4564+30]..[124,4780+41])
                      Pexp_function
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[119,4603+6]..[119,4603+8])
                            Ppat_construct "[]" (typing/includemod_errorprinter.ml[119,4603+6]..[119,4603+8])
                            None
                          expression (typing/includemod_errorprinter.ml[119,4603+12]..[119,4603+16])
                            Pexp_construct "None" (typing/includemod_errorprinter.ml[119,4603+12]..[119,4603+16])
                            None
                        <case>
                          pattern (typing/includemod_errorprinter.ml[120,4620+6]..[120,4620+38])
                            Ppat_construct "::" (typing/includemod_errorprinter.ml[120,4620+34]..[120,4620+36])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[120,4620+6]..[120,4620+38]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[120,4620+6]..[120,4620+33])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includemod_errorprinter.ml[120,4620+7]..[120,4620+8])
                                        Ppat_any
                                      pattern (typing/includemod_errorprinter.ml[120,4620+10]..[120,4620+32])
                                        Ppat_construct "Typedtree.Tcoerce_none" (typing/includemod_errorprinter.ml[120,4620+10]..[120,4620+32])
                                        None
                                    ]
                                  pattern (typing/includemod_errorprinter.ml[120,4620+37]..[120,4620+38])
                                    Ppat_var "q" (typing/includemod_errorprinter.ml[120,4620+37]..[120,4620+38])
                                ]
                          expression (typing/includemod_errorprinter.ml[120,4620+42]..[120,4620+71])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[120,4620+42]..[120,4620+54])
                              Pexp_ident "first_non_id" (typing/includemod_errorprinter.ml[120,4620+42]..[120,4620+54])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[120,4620+55]..[120,4620+59])
                                  Pexp_ident "path" (typing/includemod_errorprinter.ml[120,4620+55]..[120,4620+59])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[120,4620+60]..[120,4620+69])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[120,4620+65]..[120,4620+66])
                                    Pexp_ident "+" (typing/includemod_errorprinter.ml[120,4620+65]..[120,4620+66])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[120,4620+61]..[120,4620+64])
                                        Pexp_ident "pos" (typing/includemod_errorprinter.ml[120,4620+61]..[120,4620+64])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[120,4620+67]..[120,4620+68])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[120,4620+70]..[120,4620+71])
                                  Pexp_ident "q" (typing/includemod_errorprinter.ml[120,4620+70]..[120,4620+71])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[121,4692+6]..[121,4692+16])
                            Ppat_construct "::" (typing/includemod_errorprinter.ml[121,4692+12]..[121,4692+14])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[121,4692+6]..[121,4692+16]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[121,4692+6]..[121,4692+11])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includemod_errorprinter.ml[121,4692+7]..[121,4692+8])
                                        Ppat_any
                                      pattern (typing/includemod_errorprinter.ml[121,4692+9]..[121,4692+10])
                                        Ppat_var "c" (typing/includemod_errorprinter.ml[121,4692+9]..[121,4692+10])
                                    ]
                                  pattern (typing/includemod_errorprinter.ml[121,4692+15]..[121,4692+16])
                                    Ppat_var "q" (typing/includemod_errorprinter.ml[121,4692+15]..[121,4692+16])
                                ]
                          expression (typing/includemod_errorprinter.ml[122,4712+8]..[124,4780+41])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[122,4712+8]..[122,4712+14])
                              Pexp_ident "either" (typing/includemod_errorprinter.ml[122,4712+8]..[122,4712+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[123,4727+10]..[123,4727+50])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[123,4727+11]..[123,4727+30])
                                    Pexp_ident "transposition_under" (typing/includemod_errorprinter.ml[123,4727+11]..[123,4727+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[123,4727+31]..[123,4727+49])
                                        Pexp_construct "::" (typing/includemod_errorprinter.ml[123,4727+41]..[123,4727+43])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[123,4727+32]..[123,4727+48]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/includemod_errorprinter.ml[123,4727+32]..[123,4727+40])
                                                Pexp_construct "Item" (typing/includemod_errorprinter.ml[123,4727+32]..[123,4727+36])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[123,4727+37]..[123,4727+40])
                                                    Pexp_ident "pos" (typing/includemod_errorprinter.ml[123,4727+37]..[123,4727+40])
                                              expression (typing/includemod_errorprinter.ml[123,4727+44]..[123,4727+48])
                                                Pexp_ident "path" (typing/includemod_errorprinter.ml[123,4727+44]..[123,4727+48])
                                            ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[123,4727+51]..[123,4727+52])
                                  Pexp_ident "c" (typing/includemod_errorprinter.ml[123,4727+51]..[123,4727+52])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[124,4780+10]..[124,4780+39])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[124,4780+11]..[124,4780+23])
                                    Pexp_ident "first_non_id" (typing/includemod_errorprinter.ml[124,4780+11]..[124,4780+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[124,4780+24]..[124,4780+28])
                                        Pexp_ident "path" (typing/includemod_errorprinter.ml[124,4780+24]..[124,4780+28])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[124,4780+29]..[124,4780+38])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[124,4780+34]..[124,4780+35])
                                          Pexp_ident "+" (typing/includemod_errorprinter.ml[124,4780+34]..[124,4780+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[124,4780+30]..[124,4780+33])
                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[124,4780+30]..[124,4780+33])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[124,4780+36]..[124,4780+37])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[124,4780+40]..[124,4780+41])
                                  Pexp_ident "q" (typing/includemod_errorprinter.ml[124,4780+40]..[124,4780+41])
                            ]
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[126,4823+2]..[129,4917+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[126,4823+6]..[126,4823+19])
                  Ppat_var "transposition" (typing/includemod_errorprinter.ml[126,4823+6]..[126,4823+19])
                expression (typing/includemod_errorprinter.ml[126,4823+20]..[129,4917+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[126,4823+20]..[126,4823+21])
                    Ppat_var "c" (typing/includemod_errorprinter.ml[126,4823+20]..[126,4823+21])
                  expression (typing/includemod_errorprinter.ml[127,4847+4]..[129,4917+17])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[127,4847+10]..[127,4847+34])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[127,4847+10]..[127,4847+29])
                        Pexp_ident "transposition_under" (typing/includemod_errorprinter.ml[127,4847+10]..[127,4847+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[127,4847+30]..[127,4847+32])
                            Pexp_construct "[]" (typing/includemod_errorprinter.ml[127,4847+30]..[127,4847+32])
                            None
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[127,4847+33]..[127,4847+34])
                            Pexp_ident "c" (typing/includemod_errorprinter.ml[127,4847+33]..[127,4847+34])
                      ]
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[128,4887+6]..[128,4887+10])
                          Ppat_construct "None" (typing/includemod_errorprinter.ml[128,4887+6]..[128,4887+10])
                          None
                        expression (typing/includemod_errorprinter.ml[128,4887+14]..[128,4887+29])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[128,4887+14]..[128,4887+19])
                            Pexp_ident "raise" (typing/includemod_errorprinter.ml[128,4887+14]..[128,4887+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[128,4887+20]..[128,4887+29])
                                Pexp_construct "Not_found" (typing/includemod_errorprinter.ml[128,4887+20]..[128,4887+29])
                                None
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[129,4917+6]..[129,4917+12])
                          Ppat_construct "Some" (typing/includemod_errorprinter.ml[129,4917+6]..[129,4917+10])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[129,4917+11]..[129,4917+12])
                              Ppat_var "x" (typing/includemod_errorprinter.ml[129,4917+11]..[129,4917+12])
                        expression (typing/includemod_errorprinter.ml[129,4917+16]..[129,4917+17])
                          Pexp_ident "x" (typing/includemod_errorprinter.ml[129,4917+16]..[129,4917+17])
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[131,4936+2]..[139,5159+30])
            Pstr_value Rec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[131,4936+10]..[131,4936+22])
                  Ppat_var "runtime_item" (typing/includemod_errorprinter.ml[131,4936+10]..[131,4936+22])
                expression (typing/includemod_errorprinter.ml[131,4936+23]..[139,5159+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[131,4936+23]..[131,4936+24])
                    Ppat_var "k" (typing/includemod_errorprinter.ml[131,4936+23]..[131,4936+24])
                  expression (typing/includemod_errorprinter.ml[131,4936+27]..[139,5159+30])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[132,4972+6]..[132,4972+8])
                          Ppat_construct "[]" (typing/includemod_errorprinter.ml[132,4972+6]..[132,4972+8])
                          None
                        expression (typing/includemod_errorprinter.ml[132,4972+12]..[132,4972+27])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[132,4972+12]..[132,4972+17])
                            Pexp_ident "raise" (typing/includemod_errorprinter.ml[132,4972+12]..[132,4972+17])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[132,4972+18]..[132,4972+27])
                                Pexp_construct "Not_found" (typing/includemod_errorprinter.ml[132,4972+18]..[132,4972+27])
                                None
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[133,5000+6]..[133,5000+15])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[133,5000+11]..[133,5000+13])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[133,5000+6]..[133,5000+15]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[133,5000+6]..[133,5000+10])
                                  Ppat_var "item" (typing/includemod_errorprinter.ml[133,5000+6]..[133,5000+10])
                                pattern (typing/includemod_errorprinter.ml[133,5000+14]..[133,5000+15])
                                  Ppat_var "q" (typing/includemod_errorprinter.ml[133,5000+14]..[133,5000+15])
                              ]
                        expression (typing/includemod_errorprinter.ml[134,5019+8]..[139,5159+30])
                          Pexp_ifthenelse
                          expression (typing/includemod_errorprinter.ml[134,5019+11]..[134,5019+52])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[134,5019+11]..[134,5019+14])
                              Pexp_ident "not" (typing/includemod_errorprinter.ml[134,5019+11]..[134,5019+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[134,5019+14]..[134,5019+52])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[134,5019+15]..[134,5019+46])
                                    Pexp_ident "Includemod.is_runtime_component" (typing/includemod_errorprinter.ml[134,5019+15]..[134,5019+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[134,5019+47]..[134,5019+51])
                                        Pexp_ident "item" (typing/includemod_errorprinter.ml[134,5019+47]..[134,5019+51])
                                  ]
                            ]
                          expression (typing/includemod_errorprinter.ml[135,5077+10]..[135,5077+26])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[135,5077+10]..[135,5077+22])
                              Pexp_ident "runtime_item" (typing/includemod_errorprinter.ml[135,5077+10]..[135,5077+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[135,5077+23]..[135,5077+24])
                                  Pexp_ident "k" (typing/includemod_errorprinter.ml[135,5077+23]..[135,5077+24])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[135,5077+25]..[135,5077+26])
                                  Pexp_ident "q" (typing/includemod_errorprinter.ml[135,5077+25]..[135,5077+26])
                            ]
                          Some
                            expression (typing/includemod_errorprinter.ml[136,5104+13]..[139,5159+30])
                              Pexp_ifthenelse
                              expression (typing/includemod_errorprinter.ml[136,5104+16]..[136,5104+21])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[136,5104+18]..[136,5104+19])
                                  Pexp_ident "=" (typing/includemod_errorprinter.ml[136,5104+18]..[136,5104+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[136,5104+16]..[136,5104+17])
                                      Pexp_ident "k" (typing/includemod_errorprinter.ml[136,5104+16]..[136,5104+17])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[136,5104+20]..[136,5104+21])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (typing/includemod_errorprinter.ml[137,5131+10]..[137,5131+14])
                                Pexp_ident "item" (typing/includemod_errorprinter.ml[137,5131+10]..[137,5131+14])
                              Some
                                expression (typing/includemod_errorprinter.ml[139,5159+10]..[139,5159+30])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[139,5159+10]..[139,5159+22])
                                    Pexp_ident "runtime_item" (typing/includemod_errorprinter.ml[139,5159+10]..[139,5159+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[139,5159+23]..[139,5159+28])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[139,5159+25]..[139,5159+26])
                                          Pexp_ident "-" (typing/includemod_errorprinter.ml[139,5159+25]..[139,5159+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[139,5159+24]..[139,5159+25])
                                              Pexp_ident "k" (typing/includemod_errorprinter.ml[139,5159+24]..[139,5159+25])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[139,5159+26]..[139,5159+27])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[139,5159+29]..[139,5159+30])
                                        Pexp_ident "q" (typing/includemod_errorprinter.ml[139,5159+29]..[139,5159+30])
                                  ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[143,5290+2]..[160,6014+26])
            Pstr_value Rec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[143,5290+10]..[143,5290+14])
                  Ppat_var "find" (typing/includemod_errorprinter.ml[143,5290+10]..[143,5290+14])
                expression (typing/includemod_errorprinter.ml[143,5290+15]..[160,6014+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[143,5290+15]..[143,5290+18])
                    Ppat_var "env" (typing/includemod_errorprinter.ml[143,5290+15]..[143,5290+18])
                  expression (typing/includemod_errorprinter.ml[143,5290+19]..[160,6014+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[143,5290+19]..[143,5290+22])
                      Ppat_var "ctx" (typing/includemod_errorprinter.ml[143,5290+19]..[143,5290+22])
                    expression (typing/includemod_errorprinter.ml[143,5290+23]..[160,6014+26]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[143,5290+23]..[143,5290+27])
                        Ppat_var "path" (typing/includemod_errorprinter.ml[143,5290+23]..[143,5290+27])
                      expression (typing/includemod_errorprinter.ml[143,5290+28]..[160,6014+26]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[143,5290+28]..[143,5290+50])
                          Ppat_constraint
                          pattern (typing/includemod_errorprinter.ml[143,5290+29]..[143,5290+31])
                            Ppat_var "mt" (typing/includemod_errorprinter.ml[143,5290+29]..[143,5290+31])
                          core_type (typing/includemod_errorprinter.ml[143,5290+32]..[143,5290+49])
                            Ptyp_constr "Types.module_type" (typing/includemod_errorprinter.ml[143,5290+32]..[143,5290+49])
                            []
                        expression (typing/includemod_errorprinter.ml[143,5290+53]..[160,6014+26])
                          Pexp_match
                          expression (typing/includemod_errorprinter.ml[143,5290+59]..[143,5290+67])
                            Pexp_tuple
                            [
                              expression (typing/includemod_errorprinter.ml[143,5290+59]..[143,5290+61])
                                Pexp_ident "mt" (typing/includemod_errorprinter.ml[143,5290+59]..[143,5290+61])
                              expression (typing/includemod_errorprinter.ml[143,5290+63]..[143,5290+67])
                                Pexp_ident "path" (typing/includemod_errorprinter.ml[143,5290+63]..[143,5290+67])
                            ]
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[144,5363+6]..[144,5363+36])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[144,5363+6]..[144,5363+33])
                                    Ppat_or
                                    pattern (typing/includemod_errorprinter.ml[144,5363+7]..[144,5363+18])
                                      Ppat_construct "Mty_ident" (typing/includemod_errorprinter.ml[144,5363+7]..[144,5363+16])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[144,5363+17]..[144,5363+18])
                                          Ppat_var "p" (typing/includemod_errorprinter.ml[144,5363+17]..[144,5363+18])
                                    pattern (typing/includemod_errorprinter.ml[144,5363+21]..[144,5363+32])
                                      Ppat_construct "Mty_alias" (typing/includemod_errorprinter.ml[144,5363+21]..[144,5363+30])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[144,5363+31]..[144,5363+32])
                                          Ppat_var "p" (typing/includemod_errorprinter.ml[144,5363+31]..[144,5363+32])
                                  pattern (typing/includemod_errorprinter.ml[144,5363+35]..[144,5363+36])
                                    Ppat_any
                                ]
                              expression (typing/includemod_errorprinter.ml[145,5403+8]..[148,5538+11])
                                Pexp_match
                                expression (typing/includemod_errorprinter.ml[145,5403+20]..[145,5403+53])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[145,5403+20]..[145,5403+44])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[145,5403+21]..[145,5403+37])
                                      Pexp_ident "Env.find_modtype" (typing/includemod_errorprinter.ml[145,5403+21]..[145,5403+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[145,5403+38]..[145,5403+39])
                                          Pexp_ident "p" (typing/includemod_errorprinter.ml[145,5403+38]..[145,5403+39])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[145,5403+40]..[145,5403+43])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[145,5403+40]..[145,5403+43])
                                    ]
                                  "mtd_type" (typing/includemod_errorprinter.ml[145,5403+45]..[145,5403+53])
                                [
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[146,5462+10]..[146,5462+14])
                                      Ppat_construct "None" (typing/includemod_errorprinter.ml[146,5462+10]..[146,5462+14])
                                      None
                                    expression (typing/includemod_errorprinter.ml[146,5462+18]..[146,5462+33])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[146,5462+18]..[146,5462+23])
                                        Pexp_ident "raise" (typing/includemod_errorprinter.ml[146,5462+18]..[146,5462+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[146,5462+24]..[146,5462+33])
                                            Pexp_construct "Not_found" (typing/includemod_errorprinter.ml[146,5462+24]..[146,5462+33])
                                            None
                                      ]
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[147,5496+10]..[147,5496+17])
                                      Ppat_construct "Some" (typing/includemod_errorprinter.ml[147,5496+10]..[147,5496+14])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[147,5496+15]..[147,5496+17])
                                          Ppat_var "mt" (typing/includemod_errorprinter.ml[147,5496+15]..[147,5496+17])
                                    expression (typing/includemod_errorprinter.ml[147,5496+21]..[147,5496+41])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[147,5496+21]..[147,5496+25])
                                        Pexp_ident "find" (typing/includemod_errorprinter.ml[147,5496+21]..[147,5496+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[147,5496+26]..[147,5496+29])
                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[147,5496+26]..[147,5496+29])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[147,5496+30]..[147,5496+33])
                                            Pexp_ident "ctx" (typing/includemod_errorprinter.ml[147,5496+30]..[147,5496+33])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[147,5496+34]..[147,5496+38])
                                            Pexp_ident "path" (typing/includemod_errorprinter.ml[147,5496+34]..[147,5496+38])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[147,5496+39]..[147,5496+41])
                                            Pexp_ident "mt" (typing/includemod_errorprinter.ml[147,5496+39]..[147,5496+41])
                                      ]
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[149,5550+6]..[149,5550+26])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[149,5550+6]..[149,5550+21])
                                    Ppat_construct "Mty_signature" (typing/includemod_errorprinter.ml[149,5550+6]..[149,5550+19])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[149,5550+20]..[149,5550+21])
                                        Ppat_var "s" (typing/includemod_errorprinter.ml[149,5550+20]..[149,5550+21])
                                  pattern (typing/includemod_errorprinter.ml[149,5550+24]..[149,5550+26])
                                    Ppat_construct "[]" (typing/includemod_errorprinter.ml[149,5550+24]..[149,5550+26])
                                    None
                                ]
                              expression (typing/includemod_errorprinter.ml[149,5550+30]..[149,5550+45])
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[149,5550+30]..[149,5550+42])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[149,5550+30]..[149,5550+38])
                                      Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[149,5550+30]..[149,5550+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[149,5550+39]..[149,5550+42])
                                          Pexp_ident "ctx" (typing/includemod_errorprinter.ml[149,5550+39]..[149,5550+42])
                                    ]
                                  expression (typing/includemod_errorprinter.ml[149,5550+44]..[149,5550+45])
                                    Pexp_ident "s" (typing/includemod_errorprinter.ml[149,5550+44]..[149,5550+45])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[150,5596+6]..[150,5596+34])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[150,5596+6]..[150,5596+21])
                                    Ppat_construct "Mty_signature" (typing/includemod_errorprinter.ml[150,5596+6]..[150,5596+19])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[150,5596+20]..[150,5596+21])
                                        Ppat_var "s" (typing/includemod_errorprinter.ml[150,5596+20]..[150,5596+21])
                                  pattern (typing/includemod_errorprinter.ml[150,5596+23]..[150,5596+34])
                                    Ppat_construct "::" (typing/includemod_errorprinter.ml[150,5596+30]..[150,5596+32])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[150,5596+23]..[150,5596+34]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includemod_errorprinter.ml[150,5596+23]..[150,5596+29])
                                            Ppat_construct "Item" (typing/includemod_errorprinter.ml[150,5596+23]..[150,5596+27])
                                            Some
                                              []
                                              pattern (typing/includemod_errorprinter.ml[150,5596+28]..[150,5596+29])
                                                Ppat_var "k" (typing/includemod_errorprinter.ml[150,5596+28]..[150,5596+29])
                                          pattern (typing/includemod_errorprinter.ml[150,5596+33]..[150,5596+34])
                                            Ppat_var "q" (typing/includemod_errorprinter.ml[150,5596+33]..[150,5596+34])
                                        ]
                                ]
                              expression (typing/includemod_errorprinter.ml[151,5634+8]..[155,5808+11])
                                Pexp_match
                                expression (typing/includemod_errorprinter.ml[151,5634+20]..[151,5634+36])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[151,5634+20]..[151,5634+32])
                                    Pexp_ident "runtime_item" (typing/includemod_errorprinter.ml[151,5634+20]..[151,5634+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[151,5634+33]..[151,5634+34])
                                        Pexp_ident "k" (typing/includemod_errorprinter.ml[151,5634+33]..[151,5634+34])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[151,5634+35]..[151,5634+36])
                                        Pexp_ident "s" (typing/includemod_errorprinter.ml[151,5634+35]..[151,5634+36])
                                  ]
                                [
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[152,5676+10]..[152,5676+36])
                                      Ppat_construct "Sig_module" (typing/includemod_errorprinter.ml[152,5676+10]..[152,5676+20])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[152,5676+21]..[152,5676+36])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[152,5676+22]..[152,5676+24])
                                              Ppat_var "id" (typing/includemod_errorprinter.ml[152,5676+22]..[152,5676+24])
                                            pattern (typing/includemod_errorprinter.ml[152,5676+26]..[152,5676+27])
                                              Ppat_any
                                            pattern (typing/includemod_errorprinter.ml[152,5676+29]..[152,5676+31])
                                              Ppat_var "md" (typing/includemod_errorprinter.ml[152,5676+29]..[152,5676+31])
                                            pattern (typing/includemod_errorprinter.ml[152,5676+32]..[152,5676+33])
                                              Ppat_any
                                            pattern (typing/includemod_errorprinter.ml[152,5676+34]..[152,5676+35])
                                              Ppat_any
                                          ]
                                    expression (typing/includemod_errorprinter.ml[153,5716+12]..[153,5716+60])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[153,5716+12]..[153,5716+16])
                                        Pexp_ident "find" (typing/includemod_errorprinter.ml[153,5716+12]..[153,5716+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[153,5716+17]..[153,5716+20])
                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[153,5716+17]..[153,5716+20])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[153,5716+21]..[153,5716+47])
                                            Pexp_construct "::" (typing/includemod_errorprinter.ml[153,5716+40]..[153,5716+42])
                                            Some
                                              expression (typing/includemod_errorprinter.ml[153,5716+22]..[153,5716+46]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/includemod_errorprinter.ml[153,5716+22]..[153,5716+39])
                                                    Pexp_construct "Context.Module" (typing/includemod_errorprinter.ml[153,5716+22]..[153,5716+36])
                                                    Some
                                                      expression (typing/includemod_errorprinter.ml[153,5716+37]..[153,5716+39])
                                                        Pexp_ident "id" (typing/includemod_errorprinter.ml[153,5716+37]..[153,5716+39])
                                                  expression (typing/includemod_errorprinter.ml[153,5716+43]..[153,5716+46])
                                                    Pexp_ident "ctx" (typing/includemod_errorprinter.ml[153,5716+43]..[153,5716+46])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[153,5716+48]..[153,5716+49])
                                            Pexp_ident "q" (typing/includemod_errorprinter.ml[153,5716+48]..[153,5716+49])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[153,5716+50]..[153,5716+60])
                                            Pexp_field
                                            expression (typing/includemod_errorprinter.ml[153,5716+50]..[153,5716+52])
                                              Pexp_ident "md" (typing/includemod_errorprinter.ml[153,5716+50]..[153,5716+52])
                                            "md_type" (typing/includemod_errorprinter.ml[153,5716+53]..[153,5716+60])
                                      ]
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[154,5777+10]..[154,5777+11])
                                      Ppat_any
                                    expression (typing/includemod_errorprinter.ml[154,5777+15]..[154,5777+30])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[154,5777+15]..[154,5777+20])
                                        Pexp_ident "raise" (typing/includemod_errorprinter.ml[154,5777+15]..[154,5777+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[154,5777+21]..[154,5777+30])
                                            Pexp_construct "Not_found" (typing/includemod_errorprinter.ml[154,5777+21]..[154,5777+30])
                                            None
                                      ]
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[156,5820+6]..[156,5820+52])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[156,5820+6]..[156,5820+40])
                                    Ppat_construct "Mty_functor" (typing/includemod_errorprinter.ml[156,5820+6]..[156,5820+17])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[156,5820+17]..[156,5820+40])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includemod_errorprinter.ml[156,5820+18]..[156,5820+37])
                                            Ppat_alias "arg" (typing/includemod_errorprinter.ml[156,5820+34]..[156,5820+37])
                                            pattern (typing/includemod_errorprinter.ml[156,5820+18]..[156,5820+30])
                                              Ppat_construct "Named" (typing/includemod_errorprinter.ml[156,5820+18]..[156,5820+23])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[156,5820+24]..[156,5820+30])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[156,5820+25]..[156,5820+26])
                                                      Ppat_any
                                                    pattern (typing/includemod_errorprinter.ml[156,5820+27]..[156,5820+29])
                                                      Ppat_var "mt" (typing/includemod_errorprinter.ml[156,5820+27]..[156,5820+29])
                                                  ]
                                          pattern (typing/includemod_errorprinter.ml[156,5820+38]..[156,5820+39])
                                            Ppat_any
                                        ]
                                  pattern (typing/includemod_errorprinter.ml[156,5820+42]..[156,5820+52])
                                    Ppat_construct "::" (typing/includemod_errorprinter.ml[156,5820+48]..[156,5820+50])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[156,5820+42]..[156,5820+52]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includemod_errorprinter.ml[156,5820+42]..[156,5820+47])
                                            Ppat_construct "InArg" (typing/includemod_errorprinter.ml[156,5820+42]..[156,5820+47])
                                            None
                                          pattern (typing/includemod_errorprinter.ml[156,5820+51]..[156,5820+52])
                                            Ppat_var "q" (typing/includemod_errorprinter.ml[156,5820+51]..[156,5820+52])
                                        ]
                                ]
                              expression (typing/includemod_errorprinter.ml[157,5876+8]..[157,5876+46])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[157,5876+8]..[157,5876+12])
                                  Pexp_ident "find" (typing/includemod_errorprinter.ml[157,5876+8]..[157,5876+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[157,5876+13]..[157,5876+16])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[157,5876+13]..[157,5876+16])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[157,5876+17]..[157,5876+41])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[157,5876+34]..[157,5876+36])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[157,5876+18]..[157,5876+40]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[157,5876+18]..[157,5876+33])
                                              Pexp_construct "Context.Arg" (typing/includemod_errorprinter.ml[157,5876+18]..[157,5876+29])
                                              Some
                                                expression (typing/includemod_errorprinter.ml[157,5876+30]..[157,5876+33])
                                                  Pexp_ident "arg" (typing/includemod_errorprinter.ml[157,5876+30]..[157,5876+33])
                                            expression (typing/includemod_errorprinter.ml[157,5876+37]..[157,5876+40])
                                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[157,5876+37]..[157,5876+40])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[157,5876+42]..[157,5876+43])
                                      Pexp_ident "q" (typing/includemod_errorprinter.ml[157,5876+42]..[157,5876+43])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[157,5876+44]..[157,5876+46])
                                      Pexp_ident "mt" (typing/includemod_errorprinter.ml[157,5876+44]..[157,5876+46])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[158,5923+6]..[158,5923+39])
                                Ppat_tuple
                                [
                                  pattern (typing/includemod_errorprinter.ml[158,5923+6]..[158,5923+26])
                                    Ppat_construct "Mty_functor" (typing/includemod_errorprinter.ml[158,5923+6]..[158,5923+17])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[158,5923+17]..[158,5923+26])
                                        Ppat_tuple
                                        [
                                          pattern (typing/includemod_errorprinter.ml[158,5923+18]..[158,5923+21])
                                            Ppat_var "arg" (typing/includemod_errorprinter.ml[158,5923+18]..[158,5923+21])
                                          pattern (typing/includemod_errorprinter.ml[158,5923+23]..[158,5923+25])
                                            Ppat_var "mt" (typing/includemod_errorprinter.ml[158,5923+23]..[158,5923+25])
                                        ]
                                  pattern (typing/includemod_errorprinter.ml[158,5923+28]..[158,5923+39])
                                    Ppat_construct "::" (typing/includemod_errorprinter.ml[158,5923+35]..[158,5923+37])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[158,5923+28]..[158,5923+39]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/includemod_errorprinter.ml[158,5923+28]..[158,5923+34])
                                            Ppat_construct "InBody" (typing/includemod_errorprinter.ml[158,5923+28]..[158,5923+34])
                                            None
                                          pattern (typing/includemod_errorprinter.ml[158,5923+38]..[158,5923+39])
                                            Ppat_var "q" (typing/includemod_errorprinter.ml[158,5923+38]..[158,5923+39])
                                        ]
                                ]
                              expression (typing/includemod_errorprinter.ml[159,5966+8]..[159,5966+47])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[159,5966+8]..[159,5966+12])
                                  Pexp_ident "find" (typing/includemod_errorprinter.ml[159,5966+8]..[159,5966+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[159,5966+13]..[159,5966+16])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[159,5966+13]..[159,5966+16])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[159,5966+17]..[159,5966+42])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[159,5966+35]..[159,5966+37])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[159,5966+18]..[159,5966+41]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[159,5966+18]..[159,5966+34])
                                              Pexp_construct "Context.Body" (typing/includemod_errorprinter.ml[159,5966+18]..[159,5966+30])
                                              Some
                                                expression (typing/includemod_errorprinter.ml[159,5966+31]..[159,5966+34])
                                                  Pexp_ident "arg" (typing/includemod_errorprinter.ml[159,5966+31]..[159,5966+34])
                                            expression (typing/includemod_errorprinter.ml[159,5966+38]..[159,5966+41])
                                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[159,5966+38]..[159,5966+41])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[159,5966+43]..[159,5966+44])
                                      Pexp_ident "q" (typing/includemod_errorprinter.ml[159,5966+43]..[159,5966+44])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[159,5966+45]..[159,5966+47])
                                      Pexp_ident "mt" (typing/includemod_errorprinter.ml[159,5966+45]..[159,5966+47])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[160,6014+6]..[160,6014+7])
                                Ppat_any
                              expression (typing/includemod_errorprinter.ml[160,6014+11]..[160,6014+26])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[160,6014+11]..[160,6014+16])
                                  Pexp_ident "raise" (typing/includemod_errorprinter.ml[160,6014+11]..[160,6014+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[160,6014+17]..[160,6014+26])
                                      Pexp_construct "Not_found" (typing/includemod_errorprinter.ml[160,6014+17]..[160,6014+26])
                                      None
                                ]
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[162,6042+2]..[162,6042+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[162,6042+6]..[162,6042+10])
                  Ppat_var "find" (typing/includemod_errorprinter.ml[162,6042+6]..[162,6042+10])
                expression (typing/includemod_errorprinter.ml[162,6042+11]..[162,6042+44]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[162,6042+11]..[162,6042+14])
                    Ppat_var "env" (typing/includemod_errorprinter.ml[162,6042+11]..[162,6042+14])
                  expression (typing/includemod_errorprinter.ml[162,6042+15]..[162,6042+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[162,6042+15]..[162,6042+19])
                      Ppat_var "path" (typing/includemod_errorprinter.ml[162,6042+15]..[162,6042+19])
                    expression (typing/includemod_errorprinter.ml[162,6042+20]..[162,6042+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[162,6042+20]..[162,6042+22])
                        Ppat_var "mt" (typing/includemod_errorprinter.ml[162,6042+20]..[162,6042+22])
                      expression (typing/includemod_errorprinter.ml[162,6042+25]..[162,6042+44])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[162,6042+25]..[162,6042+29])
                          Pexp_ident "find" (typing/includemod_errorprinter.ml[162,6042+25]..[162,6042+29])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[162,6042+30]..[162,6042+33])
                              Pexp_ident "env" (typing/includemod_errorprinter.ml[162,6042+30]..[162,6042+33])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[162,6042+34]..[162,6042+36])
                              Pexp_construct "[]" (typing/includemod_errorprinter.ml[162,6042+34]..[162,6042+36])
                              None
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[162,6042+37]..[162,6042+41])
                              Pexp_ident "path" (typing/includemod_errorprinter.ml[162,6042+37]..[162,6042+41])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[162,6042+42]..[162,6042+44])
                              Pexp_ident "mt" (typing/includemod_errorprinter.ml[162,6042+42]..[162,6042+44])
                        ]
            ]
          structure_item (typing/includemod_errorprinter.ml[163,6087+2]..[163,6087+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[163,6087+6]..[163,6087+10])
                  Ppat_var "item" (typing/includemod_errorprinter.ml[163,6087+6]..[163,6087+10])
                expression (typing/includemod_errorprinter.ml[163,6087+11]..[163,6087+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[163,6087+11]..[163,6087+13])
                    Ppat_var "mt" (typing/includemod_errorprinter.ml[163,6087+11]..[163,6087+13])
                  expression (typing/includemod_errorprinter.ml[163,6087+14]..[163,6087+64]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[163,6087+14]..[163,6087+15])
                      Ppat_var "k" (typing/includemod_errorprinter.ml[163,6087+14]..[163,6087+15])
                    expression (typing/includemod_errorprinter.ml[163,6087+18]..[163,6087+64])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[163,6087+18]..[163,6087+44])
                        Pexp_ident "Includemod.item_ident_name" (typing/includemod_errorprinter.ml[163,6087+18]..[163,6087+44])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[163,6087+45]..[163,6087+64])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[163,6087+46]..[163,6087+58])
                              Pexp_ident "runtime_item" (typing/includemod_errorprinter.ml[163,6087+46]..[163,6087+58])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[163,6087+59]..[163,6087+60])
                                  Pexp_ident "k" (typing/includemod_errorprinter.ml[163,6087+59]..[163,6087+60])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[163,6087+61]..[163,6087+63])
                                  Pexp_ident "mt" (typing/includemod_errorprinter.ml[163,6087+61]..[163,6087+63])
                            ]
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[165,6153+2]..[168,6259+21])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[165,6153+6]..[165,6153+13])
                  Ppat_var "pp_item" (typing/includemod_errorprinter.ml[165,6153+6]..[165,6153+13])
                expression (typing/includemod_errorprinter.ml[165,6153+14]..[168,6259+21]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[165,6153+14]..[165,6153+17])
                    Ppat_var "ppf" (typing/includemod_errorprinter.ml[165,6153+14]..[165,6153+17])
                  expression (typing/includemod_errorprinter.ml[165,6153+18]..[168,6259+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[165,6153+18]..[165,6153+29])
                      Ppat_tuple
                      [
                        pattern (typing/includemod_errorprinter.ml[165,6153+19]..[165,6153+21])
                          Ppat_var "id" (typing/includemod_errorprinter.ml[165,6153+19]..[165,6153+21])
                        pattern (typing/includemod_errorprinter.ml[165,6153+22]..[165,6153+23])
                          Ppat_any
                        pattern (typing/includemod_errorprinter.ml[165,6153+24]..[165,6153+28])
                          Ppat_var "kind" (typing/includemod_errorprinter.ml[165,6153+24]..[165,6153+28])
                      ]
                    expression (typing/includemod_errorprinter.ml[166,6185+4]..[168,6259+21])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[166,6185+4]..[166,6185+18])
                        Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[166,6185+4]..[166,6185+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[166,6185+19]..[166,6185+22])
                            Pexp_ident "ppf" (typing/includemod_errorprinter.ml[166,6185+19]..[166,6185+22])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[166,6185+23]..[166,6185+30])
                            Pexp_constant PConst_string("%s %S",(typing/includemod_errorprinter.ml[166,6185+24]..[166,6185+29]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[167,6216+6]..[167,6216+42])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[167,6216+7]..[167,6216+36])
                              Pexp_ident "Includemod.kind_of_field_desc" (typing/includemod_errorprinter.ml[167,6216+7]..[167,6216+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[167,6216+37]..[167,6216+41])
                                  Pexp_ident "kind" (typing/includemod_errorprinter.ml[167,6216+37]..[167,6216+41])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[168,6259+6]..[168,6259+21])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[168,6259+7]..[168,6259+17])
                              Pexp_ident "Ident.name" (typing/includemod_errorprinter.ml[168,6259+7]..[168,6259+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[168,6259+18]..[168,6259+20])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[168,6259+18]..[168,6259+20])
                            ]
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[170,6282+2]..[181,6787+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[170,6282+6]..[170,6282+8])
                  Ppat_var "pp" (typing/includemod_errorprinter.ml[170,6282+6]..[170,6282+8])
                expression (typing/includemod_errorprinter.ml[170,6282+9]..[181,6787+69]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[170,6282+9]..[170,6282+20])
                    Ppat_var "ctx_printer" (typing/includemod_errorprinter.ml[170,6282+9]..[170,6282+20])
                  expression (typing/includemod_errorprinter.ml[170,6282+21]..[181,6787+69]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[170,6282+21]..[170,6282+24])
                      Ppat_var "env" (typing/includemod_errorprinter.ml[170,6282+21]..[170,6282+24])
                    expression (typing/includemod_errorprinter.ml[170,6282+25]..[181,6787+69]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[170,6282+25]..[170,6282+28])
                        Ppat_var "ppf" (typing/includemod_errorprinter.ml[170,6282+25]..[170,6282+28])
                      expression (typing/includemod_errorprinter.ml[170,6282+29]..[181,6787+69]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[170,6282+29]..[170,6282+36])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[170,6282+30]..[170,6282+33])
                              Ppat_var "mty" (typing/includemod_errorprinter.ml[170,6282+30]..[170,6282+33])
                            pattern (typing/includemod_errorprinter.ml[170,6282+34]..[170,6282+35])
                              Ppat_var "c" (typing/includemod_errorprinter.ml[170,6282+34]..[170,6282+35])
                          ]
                        expression (typing/includemod_errorprinter.ml[171,6321+4]..[181,6787+69])
                          Pexp_try
                          expression (typing/includemod_errorprinter.ml[172,6329+6]..[178,6647+63])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[172,6329+10]..[172,6329+17])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[172,6329+10]..[172,6329+11])
                                      Ppat_var "p" (typing/includemod_errorprinter.ml[172,6329+10]..[172,6329+11])
                                    pattern (typing/includemod_errorprinter.ml[172,6329+13]..[172,6329+14])
                                      Ppat_var "k" (typing/includemod_errorprinter.ml[172,6329+13]..[172,6329+14])
                                    pattern (typing/includemod_errorprinter.ml[172,6329+16]..[172,6329+17])
                                      Ppat_var "l" (typing/includemod_errorprinter.ml[172,6329+16]..[172,6329+17])
                                  ]
                                expression (typing/includemod_errorprinter.ml[172,6329+20]..[172,6329+35])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[172,6329+20]..[172,6329+33])
                                    Pexp_ident "transposition" (typing/includemod_errorprinter.ml[172,6329+20]..[172,6329+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[172,6329+34]..[172,6329+35])
                                        Pexp_ident "c" (typing/includemod_errorprinter.ml[172,6329+34]..[172,6329+35])
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[173,6368+6]..[178,6647+63])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includemod_errorprinter.ml[173,6368+10]..[173,6368+17])
                                    Ppat_tuple
                                    [
                                      pattern (typing/includemod_errorprinter.ml[173,6368+10]..[173,6368+13])
                                        Ppat_var "ctx" (typing/includemod_errorprinter.ml[173,6368+10]..[173,6368+13])
                                      pattern (typing/includemod_errorprinter.ml[173,6368+15]..[173,6368+17])
                                        Ppat_var "mt" (typing/includemod_errorprinter.ml[173,6368+15]..[173,6368+17])
                                    ]
                                  expression (typing/includemod_errorprinter.ml[173,6368+20]..[173,6368+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[173,6368+20]..[173,6368+24])
                                      Pexp_ident "find" (typing/includemod_errorprinter.ml[173,6368+20]..[173,6368+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[173,6368+25]..[173,6368+28])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[173,6368+25]..[173,6368+28])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[173,6368+29]..[173,6368+30])
                                          Pexp_ident "p" (typing/includemod_errorprinter.ml[173,6368+29]..[173,6368+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[173,6368+31]..[173,6368+34])
                                          Pexp_ident "mty" (typing/includemod_errorprinter.ml[173,6368+31]..[173,6368+34])
                                    ]
                              ]
                              expression (typing/includemod_errorprinter.ml[174,6406+6]..[178,6647+63])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[174,6406+6]..[174,6406+20])
                                  Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[174,6406+6]..[174,6406+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[174,6406+21]..[174,6406+24])
                                      Pexp_ident "ppf" (typing/includemod_errorprinter.ml[174,6406+21]..[174,6406+24])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[175,6431+8]..[177,6592+54])
                                      Pexp_constant PConst_string("@[<hv 2>Illegal permutation of runtime components in a module type.@ @[For example,@ %a@]@ @[the %a@ and the %a are not in the same order@ in the expected and actual module types.@]@]",(typing/includemod_errorprinter.ml[175,6431+9]..[177,6592+53]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+8]..[178,6647+19])
                                      Pexp_ident "ctx_printer" (typing/includemod_errorprinter.ml[178,6647+8]..[178,6647+19])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+20]..[178,6647+23])
                                      Pexp_ident "ctx" (typing/includemod_errorprinter.ml[178,6647+20]..[178,6647+23])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+24]..[178,6647+31])
                                      Pexp_ident "pp_item" (typing/includemod_errorprinter.ml[178,6647+24]..[178,6647+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+32]..[178,6647+43])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[178,6647+33]..[178,6647+37])
                                        Pexp_ident "item" (typing/includemod_errorprinter.ml[178,6647+33]..[178,6647+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[178,6647+38]..[178,6647+40])
                                            Pexp_ident "mt" (typing/includemod_errorprinter.ml[178,6647+38]..[178,6647+40])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[178,6647+41]..[178,6647+42])
                                            Pexp_ident "k" (typing/includemod_errorprinter.ml[178,6647+41]..[178,6647+42])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+44]..[178,6647+51])
                                      Pexp_ident "pp_item" (typing/includemod_errorprinter.ml[178,6647+44]..[178,6647+51])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[178,6647+52]..[178,6647+63])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[178,6647+53]..[178,6647+57])
                                        Pexp_ident "item" (typing/includemod_errorprinter.ml[178,6647+53]..[178,6647+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[178,6647+58]..[178,6647+60])
                                            Pexp_ident "mt" (typing/includemod_errorprinter.ml[178,6647+58]..[178,6647+60])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[178,6647+61]..[178,6647+62])
                                            Pexp_ident "l" (typing/includemod_errorprinter.ml[178,6647+61]..[178,6647+62])
                                      ]
                                ]
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[179,6711+9]..[179,6711+18])
                                Ppat_construct "Not_found" (typing/includemod_errorprinter.ml[179,6711+9]..[179,6711+18])
                                None
                              expression (typing/includemod_errorprinter.ml[180,6762+6]..[181,6787+69])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[180,6762+6]..[180,6762+20])
                                  Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[180,6762+6]..[180,6762+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[180,6762+21]..[180,6762+24])
                                      Pexp_ident "ppf" (typing/includemod_errorprinter.ml[180,6762+21]..[180,6762+24])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[181,6787+8]..[181,6787+69])
                                      Pexp_constant PConst_string("Illegal permutation of runtime components in a module type.",(typing/includemod_errorprinter.ml[181,6787+9]..[181,6787+68]),None)
                                ]
                          ]
            ]
        ]
  structure_item (typing/includemod_errorprinter.ml[187,6865+0]..[187,6865+29])
    Pstr_module
    "Err" (typing/includemod_errorprinter.ml[187,6865+7]..[187,6865+10])
      module_expr (typing/includemod_errorprinter.ml[187,6865+13]..[187,6865+29])
        Pmod_ident "Includemod.Error" (typing/includemod_errorprinter.ml[187,6865+13]..[187,6865+29])
  structure_item (typing/includemod_errorprinter.ml[189,6896+0]..[189,6896+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[189,6896+4]..[189,6896+10])
          Ppat_var "buffer" (typing/includemod_errorprinter.ml[189,6896+4]..[189,6896+10])
        expression (typing/includemod_errorprinter.ml[189,6896+13]..[189,6896+28])
          Pexp_apply
          expression (typing/includemod_errorprinter.ml[189,6896+13]..[189,6896+16])
            Pexp_ident "ref" (typing/includemod_errorprinter.ml[189,6896+13]..[189,6896+16])
          [
            <arg>
            Nolabel
              expression (typing/includemod_errorprinter.ml[189,6896+17]..[189,6896+28])
                Pexp_ident "Bytes.empty" (typing/includemod_errorprinter.ml[189,6896+17]..[189,6896+28])
          ]
    ]
  structure_item (typing/includemod_errorprinter.ml[190,6925+0]..[197,7152+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[190,6925+4]..[190,6925+10])
          Ppat_var "is_big" (typing/includemod_errorprinter.ml[190,6925+4]..[190,6925+10])
        expression (typing/includemod_errorprinter.ml[190,6925+11]..[197,7152+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[190,6925+11]..[190,6925+14])
            Ppat_var "obj" (typing/includemod_errorprinter.ml[190,6925+11]..[190,6925+14])
          expression (typing/includemod_errorprinter.ml[191,6942+2]..[197,7152+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[191,6942+6]..[191,6942+10])
                  Ppat_var "size" (typing/includemod_errorprinter.ml[191,6942+6]..[191,6942+10])
                expression (typing/includemod_errorprinter.ml[191,6942+13]..[191,6942+32])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[191,6942+13]..[191,6942+14])
                    Pexp_ident "!" (typing/includemod_errorprinter.ml[191,6942+13]..[191,6942+14])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[191,6942+14]..[191,6942+32])
                        Pexp_ident "Clflags.error_size" (typing/includemod_errorprinter.ml[191,6942+14]..[191,6942+32])
                  ]
            ]
            expression (typing/includemod_errorprinter.ml[192,6978+2]..[197,7152+5])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[192,6978+11]..[192,6978+13])
                Pexp_ident "&&" (typing/includemod_errorprinter.ml[192,6978+11]..[192,6978+13])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[192,6978+2]..[192,6978+10])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[192,6978+7]..[192,6978+8])
                      Pexp_ident ">" (typing/includemod_errorprinter.ml[192,6978+7]..[192,6978+8])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[192,6978+2]..[192,6978+6])
                          Pexp_ident "size" (typing/includemod_errorprinter.ml[192,6978+2]..[192,6978+6])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[192,6978+9]..[192,6978+10])
                          Pexp_constant PConst_int (0,None)
                    ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[193,6992+2]..[197,7152+5])
                    Pexp_sequence
                    expression (typing/includemod_errorprinter.ml[194,7000+4]..[194,7000+67])
                      Pexp_ifthenelse
                      expression (typing/includemod_errorprinter.ml[194,7000+7]..[194,7000+34])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[194,7000+28]..[194,7000+29])
                          Pexp_ident "<" (typing/includemod_errorprinter.ml[194,7000+28]..[194,7000+29])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[194,7000+7]..[194,7000+27])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[194,7000+7]..[194,7000+19])
                                Pexp_ident "Bytes.length" (typing/includemod_errorprinter.ml[194,7000+7]..[194,7000+19])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[194,7000+20]..[194,7000+27])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[194,7000+20]..[194,7000+21])
                                      Pexp_ident "!" (typing/includemod_errorprinter.ml[194,7000+20]..[194,7000+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[194,7000+21]..[194,7000+27])
                                          Pexp_ident "buffer" (typing/includemod_errorprinter.ml[194,7000+21]..[194,7000+27])
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[194,7000+30]..[194,7000+34])
                              Pexp_ident "size" (typing/includemod_errorprinter.ml[194,7000+30]..[194,7000+34])
                        ]
                      expression (typing/includemod_errorprinter.ml[194,7000+40]..[194,7000+67])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[194,7000+47]..[194,7000+49])
                          Pexp_ident ":=" (typing/includemod_errorprinter.ml[194,7000+47]..[194,7000+49])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[194,7000+40]..[194,7000+46])
                              Pexp_ident "buffer" (typing/includemod_errorprinter.ml[194,7000+40]..[194,7000+46])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[194,7000+50]..[194,7000+67])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[194,7000+50]..[194,7000+62])
                                Pexp_ident "Bytes.create" (typing/includemod_errorprinter.ml[194,7000+50]..[194,7000+62])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[194,7000+63]..[194,7000+67])
                                    Pexp_ident "size" (typing/includemod_errorprinter.ml[194,7000+63]..[194,7000+67])
                              ]
                        ]
                      None
                    expression (typing/includemod_errorprinter.ml[195,7069+4]..[196,7133+18])
                      Pexp_try
                      expression (typing/includemod_errorprinter.ml[195,7069+8]..[195,7069+63])
                        Pexp_sequence
                        expression (typing/includemod_errorprinter.ml[195,7069+8]..[195,7069+56])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[195,7069+8]..[195,7069+14])
                            Pexp_ident "ignore" (typing/includemod_errorprinter.ml[195,7069+8]..[195,7069+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[195,7069+15]..[195,7069+56])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[195,7069+16]..[195,7069+33])
                                  Pexp_ident "Marshal.to_buffer" (typing/includemod_errorprinter.ml[195,7069+16]..[195,7069+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[195,7069+34]..[195,7069+41])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[195,7069+34]..[195,7069+35])
                                        Pexp_ident "!" (typing/includemod_errorprinter.ml[195,7069+34]..[195,7069+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[195,7069+35]..[195,7069+41])
                                            Pexp_ident "buffer" (typing/includemod_errorprinter.ml[195,7069+35]..[195,7069+41])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[195,7069+42]..[195,7069+43])
                                      Pexp_constant PConst_int (0,None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[195,7069+44]..[195,7069+48])
                                      Pexp_ident "size" (typing/includemod_errorprinter.ml[195,7069+44]..[195,7069+48])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[195,7069+49]..[195,7069+52])
                                      Pexp_ident "obj" (typing/includemod_errorprinter.ml[195,7069+49]..[195,7069+52])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[195,7069+53]..[195,7069+55])
                                      Pexp_construct "[]" (typing/includemod_errorprinter.ml[195,7069+53]..[195,7069+55])
                                      None
                                ]
                          ]
                        expression (typing/includemod_errorprinter.ml[195,7069+58]..[195,7069+63])
                          Pexp_construct "false" (typing/includemod_errorprinter.ml[195,7069+58]..[195,7069+63])
                          None
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[196,7133+9]..[196,7133+10])
                            Ppat_any
                          expression (typing/includemod_errorprinter.ml[196,7133+14]..[196,7133+18])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[196,7133+14]..[196,7133+18])
                            None
                      ]
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[199,7159+0]..[202,7298+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[199,7159+4]..[199,7159+12])
          Ppat_var "show_loc" (typing/includemod_errorprinter.ml[199,7159+4]..[199,7159+12])
        expression (typing/includemod_errorprinter.ml[199,7159+13]..[202,7298+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[199,7159+13]..[199,7159+16])
            Ppat_var "msg" (typing/includemod_errorprinter.ml[199,7159+13]..[199,7159+16])
          expression (typing/includemod_errorprinter.ml[199,7159+17]..[202,7298+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[199,7159+17]..[199,7159+20])
              Ppat_var "ppf" (typing/includemod_errorprinter.ml[199,7159+17]..[199,7159+20])
            expression (typing/includemod_errorprinter.ml[199,7159+21]..[202,7298+72]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[199,7159+21]..[199,7159+24])
                Ppat_var "loc" (typing/includemod_errorprinter.ml[199,7159+21]..[199,7159+24])
              expression (typing/includemod_errorprinter.ml[200,7186+2]..[202,7298+72])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/includemod_errorprinter.ml[200,7186+6]..[200,7186+9])
                      Ppat_var "pos" (typing/includemod_errorprinter.ml[200,7186+6]..[200,7186+9])
                    expression (typing/includemod_errorprinter.ml[200,7186+12]..[200,7186+34])
                      Pexp_field
                      expression (typing/includemod_errorprinter.ml[200,7186+12]..[200,7186+15])
                        Pexp_ident "loc" (typing/includemod_errorprinter.ml[200,7186+12]..[200,7186+15])
                      "Location.loc_start" (typing/includemod_errorprinter.ml[200,7186+16]..[200,7186+34])
                ]
                expression (typing/includemod_errorprinter.ml[201,7224+2]..[202,7298+72])
                  Pexp_ifthenelse
                  expression (typing/includemod_errorprinter.ml[201,7224+5]..[201,7224+65])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[201,7224+5]..[201,7224+13])
                      Pexp_ident "List.mem" (typing/includemod_errorprinter.ml[201,7224+5]..[201,7224+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[201,7224+14]..[201,7224+34])
                          Pexp_field
                          expression (typing/includemod_errorprinter.ml[201,7224+14]..[201,7224+17])
                            Pexp_ident "pos" (typing/includemod_errorprinter.ml[201,7224+14]..[201,7224+17])
                          "Lexing.pos_fname" (typing/includemod_errorprinter.ml[201,7224+18]..[201,7224+34])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[201,7224+35]..[201,7224+65])
                          Pexp_construct "::" (typing/includemod_errorprinter.ml[201,7224+36]..[201,7224+65]) ghost
                          Some
                            expression (typing/includemod_errorprinter.ml[201,7224+36]..[201,7224+65]) ghost
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[201,7224+36]..[201,7224+38])
                                  Pexp_constant PConst_string("",(typing/includemod_errorprinter.ml[201,7224+37]..[201,7224+37]),None)
                                expression (typing/includemod_errorprinter.ml[201,7224+40]..[201,7224+65]) ghost
                                  Pexp_construct "::" (typing/includemod_errorprinter.ml[201,7224+40]..[201,7224+65]) ghost
                                  Some
                                    expression (typing/includemod_errorprinter.ml[201,7224+40]..[201,7224+65]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/includemod_errorprinter.ml[201,7224+40]..[201,7224+48])
                                          Pexp_constant PConst_string("_none_",(typing/includemod_errorprinter.ml[201,7224+41]..[201,7224+47]),None)
                                        expression (typing/includemod_errorprinter.ml[201,7224+50]..[201,7224+65]) ghost
                                          Pexp_construct "::" (typing/includemod_errorprinter.ml[201,7224+50]..[201,7224+65]) ghost
                                          Some
                                            expression (typing/includemod_errorprinter.ml[201,7224+50]..[201,7224+65]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/includemod_errorprinter.ml[201,7224+50]..[201,7224+64])
                                                  Pexp_constant PConst_string("//toplevel//",(typing/includemod_errorprinter.ml[201,7224+51]..[201,7224+63]),None)
                                                expression (typing/includemod_errorprinter.ml[201,7224+64]..[201,7224+65]) ghost
                                                  Pexp_construct "[]" (typing/includemod_errorprinter.ml[201,7224+64]..[201,7224+65]) ghost
                                                  None
                                              ]
                                      ]
                              ]
                    ]
                  expression (typing/includemod_errorprinter.ml[201,7224+71]..[201,7224+73])
                    Pexp_construct "()" (typing/includemod_errorprinter.ml[201,7224+71]..[201,7224+73])
                    None
                  Some
                    expression (typing/includemod_errorprinter.ml[202,7298+7]..[202,7298+72])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[202,7298+7]..[202,7298+21])
                        Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[202,7298+7]..[202,7298+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[202,7298+22]..[202,7298+25])
                            Pexp_ident "ppf" (typing/includemod_errorprinter.ml[202,7298+22]..[202,7298+25])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[202,7298+26]..[202,7298+45])
                            Pexp_constant PConst_string("@\n@[<2>%a:@ %s@]",(typing/includemod_errorprinter.ml[202,7298+27]..[202,7298+44]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[202,7298+46]..[202,7298+64])
                            Pexp_ident "Location.print_loc" (typing/includemod_errorprinter.ml[202,7298+46]..[202,7298+64])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[202,7298+65]..[202,7298+68])
                            Pexp_ident "loc" (typing/includemod_errorprinter.ml[202,7298+65]..[202,7298+68])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[202,7298+69]..[202,7298+72])
                            Pexp_ident "msg" (typing/includemod_errorprinter.ml[202,7298+69]..[202,7298+72])
                      ]
    ]
  structure_item (typing/includemod_errorprinter.ml[204,7372+0]..[206,7449+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[204,7372+4]..[204,7372+13])
          Ppat_var "show_locs" (typing/includemod_errorprinter.ml[204,7372+4]..[204,7372+13])
        expression (typing/includemod_errorprinter.ml[204,7372+14]..[206,7449+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[204,7372+14]..[204,7372+17])
            Ppat_var "ppf" (typing/includemod_errorprinter.ml[204,7372+14]..[204,7372+17])
          expression (typing/includemod_errorprinter.ml[204,7372+18]..[206,7449+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[204,7372+18]..[204,7372+30])
              Ppat_tuple
              [
                pattern (typing/includemod_errorprinter.ml[204,7372+19]..[204,7372+23])
                  Ppat_var "loc1" (typing/includemod_errorprinter.ml[204,7372+19]..[204,7372+23])
                pattern (typing/includemod_errorprinter.ml[204,7372+25]..[204,7372+29])
                  Ppat_var "loc2" (typing/includemod_errorprinter.ml[204,7372+25]..[204,7372+29])
              ]
            expression (typing/includemod_errorprinter.ml[205,7405+2]..[206,7449+40])
              Pexp_sequence
              expression (typing/includemod_errorprinter.ml[205,7405+2]..[205,7405+42])
                Pexp_apply
                expression (typing/includemod_errorprinter.ml[205,7405+2]..[205,7405+10])
                  Pexp_ident "show_loc" (typing/includemod_errorprinter.ml[205,7405+2]..[205,7405+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[205,7405+11]..[205,7405+33])
                      Pexp_constant PConst_string("Expected declaration",(typing/includemod_errorprinter.ml[205,7405+12]..[205,7405+32]),None)
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[205,7405+34]..[205,7405+37])
                      Pexp_ident "ppf" (typing/includemod_errorprinter.ml[205,7405+34]..[205,7405+37])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[205,7405+38]..[205,7405+42])
                      Pexp_ident "loc2" (typing/includemod_errorprinter.ml[205,7405+38]..[205,7405+42])
                ]
              expression (typing/includemod_errorprinter.ml[206,7449+2]..[206,7449+40])
                Pexp_apply
                expression (typing/includemod_errorprinter.ml[206,7449+2]..[206,7449+10])
                  Pexp_ident "show_loc" (typing/includemod_errorprinter.ml[206,7449+2]..[206,7449+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[206,7449+11]..[206,7449+31])
                      Pexp_constant PConst_string("Actual declaration",(typing/includemod_errorprinter.ml[206,7449+12]..[206,7449+30]),None)
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[206,7449+32]..[206,7449+35])
                      Pexp_ident "ppf" (typing/includemod_errorprinter.ml[206,7449+32]..[206,7449+35])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[206,7449+36]..[206,7449+40])
                      Pexp_ident "loc1" (typing/includemod_errorprinter.ml[206,7449+36]..[206,7449+40])
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[209,7492+0]..[211,7556+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[209,7492+4]..[209,7492+12])
          Ppat_var "dmodtype" (typing/includemod_errorprinter.ml[209,7492+4]..[209,7492+12])
        expression (typing/includemod_errorprinter.ml[209,7492+13]..[211,7556+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[209,7492+13]..[209,7492+16])
            Ppat_var "mty" (typing/includemod_errorprinter.ml[209,7492+13]..[209,7492+16])
          expression (typing/includemod_errorprinter.ml[210,7511+2]..[211,7556+50])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[210,7511+6]..[210,7511+10])
                  Ppat_var "tmty" (typing/includemod_errorprinter.ml[210,7511+6]..[210,7511+10])
                expression (typing/includemod_errorprinter.ml[210,7511+13]..[210,7511+41])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[210,7511+13]..[210,7511+37])
                    Pexp_ident "Printtyp.tree_of_modtype" (typing/includemod_errorprinter.ml[210,7511+13]..[210,7511+37])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[210,7511+38]..[210,7511+41])
                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[210,7511+38]..[210,7511+41])
                  ]
            ]
            expression (typing/includemod_errorprinter.ml[211,7556+2]..[211,7556+50])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[211,7556+2]..[211,7556+16])
                Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[211,7556+2]..[211,7556+16])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[211,7556+17]..[211,7556+21])
                    Pexp_constant PConst_string("%a",(typing/includemod_errorprinter.ml[211,7556+18]..[211,7556+20]),None)
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[211,7556+22]..[211,7556+45])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[211,7556+22]..[211,7556+23])
                      Pexp_ident "!" (typing/includemod_errorprinter.ml[211,7556+22]..[211,7556+23])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[211,7556+23]..[211,7556+45])
                          Pexp_ident "Oprint.out_module_type" (typing/includemod_errorprinter.ml[211,7556+23]..[211,7556+45])
                    ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[211,7556+46]..[211,7556+50])
                    Pexp_ident "tmty" (typing/includemod_errorprinter.ml[211,7556+46]..[211,7556+50])
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[213,7608+0]..[213,7608+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[213,7608+4]..[213,7608+9])
          Ppat_var "space" (typing/includemod_errorprinter.ml[213,7608+4]..[213,7608+9])
        expression (typing/includemod_errorprinter.ml[213,7608+10]..[213,7608+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[213,7608+10]..[213,7608+13])
            Ppat_var "ppf" (typing/includemod_errorprinter.ml[213,7608+10]..[213,7608+13])
          expression (typing/includemod_errorprinter.ml[213,7608+14]..[213,7608+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[213,7608+14]..[213,7608+16])
              Ppat_construct "()" (typing/includemod_errorprinter.ml[213,7608+14]..[213,7608+16])
              None
            expression (typing/includemod_errorprinter.ml[213,7608+19]..[213,7608+42])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[213,7608+19]..[213,7608+33])
                Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[213,7608+19]..[213,7608+33])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[213,7608+34]..[213,7608+37])
                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[213,7608+34]..[213,7608+37])
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[213,7608+38]..[213,7608+42])
                    Pexp_constant PConst_string("@ ",(typing/includemod_errorprinter.ml[213,7608+39]..[213,7608+41]),None)
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[229,8121+0]..[364,11903+3])
    Pstr_module
    "With_shorthand" (typing/includemod_errorprinter.ml[229,8121+7]..[229,8121+21])
      attribute "ocaml.doc"
        [
          structure_item (typing/includemod_errorprinter.ml[215,7652+0]..[228,8118+2])
            Pstr_eval
            expression (typing/includemod_errorprinter.ml[215,7652+0]..[228,8118+2])
              Pexp_constant PConst_string("\n   In order to display a list of functor arguments in a compact format,\n   we introduce a notion of shorthand for functor arguments.\n   The aim is to first present the lists of actual and expected types with\n   shorthands:\n\n     (X: $S1) (Y: $S2) (Z: An_existing_module_type) ...\n   does not match\n     (X: $T1) (Y: A_real_path) (Z: $T3) ...\n\n   and delay the full display of the module types corresponding to $S1, $S2,\n   $T1, and $T3 to the suberror message.\n\n",(typing/includemod_errorprinter.ml[215,7652+0]..[228,8118+2]),None)
        ]
      module_expr (typing/includemod_errorprinter.ml[229,8121+24]..[364,11903+3])
        Pmod_structure
        [
          structure_item (typing/includemod_errorprinter.ml[232,8201+2]..[235,8254+3])
            Pstr_type Rec
            [
              type_declaration "named" (typing/includemod_errorprinter.ml[232,8201+10]..[232,8201+15]) (typing/includemod_errorprinter.ml[232,8201+2]..[235,8254+3])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/includemod_errorprinter.ml[231,8153+2]..[231,8153+47])
                      Pstr_eval
                      expression (typing/includemod_errorprinter.ml[231,8153+2]..[231,8153+47])
                        Pexp_constant PConst_string(" A item with a potential shorthand name ",(typing/includemod_errorprinter.ml[231,8153+2]..[231,8153+47]),None)
                  ]
                ptype_params =
                  [
                    core_type (typing/includemod_errorprinter.ml[232,8201+7]..[232,8201+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (typing/includemod_errorprinter.ml[233,8221+4]..[233,8221+13])
                        Immutable
                        "item" (typing/includemod_errorprinter.ml[233,8221+4]..[233,8221+8])                        core_type (typing/includemod_errorprinter.ml[233,8221+10]..[233,8221+12])
                          Ptyp_var a
                      (typing/includemod_errorprinter.ml[234,8235+4]..[234,8235+18])
                        Immutable
                        "name" (typing/includemod_errorprinter.ml[234,8235+4]..[234,8235+8])                        core_type (typing/includemod_errorprinter.ml[234,8235+11]..[234,8235+17])
                          Ptyp_constr "string" (typing/includemod_errorprinter.ml[234,8235+11]..[234,8235+17])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[237,8259+2]..[239,8334+27])
            Pstr_type Rec
            [
              type_declaration "t" (typing/includemod_errorprinter.ml[237,8259+10]..[237,8259+11]) (typing/includemod_errorprinter.ml[237,8259+2]..[239,8334+27])
                ptype_params =
                  [
                    core_type (typing/includemod_errorprinter.ml[237,8259+7]..[237,8259+9])
                      Ptyp_var a
                  ]
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[238,8273+4]..[238,8273+20])
                        "Original" (typing/includemod_errorprinter.ml[238,8273+6]..[238,8273+14])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/includemod_errorprinter.ml[238,8273+21]..[238,8273+60])
                              Pstr_eval
                              expression (typing/includemod_errorprinter.ml[238,8273+21]..[238,8273+60])
                                Pexp_constant PConst_string(" The shorthand has been discarded ",(typing/includemod_errorprinter.ml[238,8273+21]..[238,8273+60]),None)
                          ]
                        [
                          core_type (typing/includemod_errorprinter.ml[238,8273+18]..[238,8273+20])
                            Ptyp_var a
                        ]
                        None
                      (typing/includemod_errorprinter.ml[239,8334+4]..[239,8334+27])
                        "Synthetic" (typing/includemod_errorprinter.ml[239,8334+6]..[239,8334+15])
                        attribute "ocaml.doc"
                          [
                            structure_item (typing/includemod_errorprinter.ml[240,8362+4]..[240,8362+46])
                              Pstr_eval
                              expression (typing/includemod_errorprinter.ml[240,8362+4]..[240,8362+46])
                                Pexp_constant PConst_string(" The shorthand is potentially useful ",(typing/includemod_errorprinter.ml[240,8362+4]..[240,8362+46]),None)
                          ]
                        [
                          core_type (typing/includemod_errorprinter.ml[239,8334+19]..[239,8334+27])
                            Ptyp_constr "named" (typing/includemod_errorprinter.ml[239,8334+22]..[239,8334+27])
                            [
                              core_type (typing/includemod_errorprinter.ml[239,8334+19]..[239,8334+21])
                                Ptyp_var a
                            ]
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[242,8410+2]..[244,8444+53])
            Pstr_type Rec
            [
              type_declaration "functor_param" (typing/includemod_errorprinter.ml[242,8410+7]..[242,8410+20]) (typing/includemod_errorprinter.ml[242,8410+2]..[244,8444+53])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[243,8433+4]..[243,8433+10])
                        "Unit" (typing/includemod_errorprinter.ml[243,8433+6]..[243,8433+10])
                        []
                        None
                      (typing/includemod_errorprinter.ml[244,8444+4]..[244,8444+53])
                        "Named" (typing/includemod_errorprinter.ml[244,8444+6]..[244,8444+11])
                        [
                          core_type (typing/includemod_errorprinter.ml[244,8444+16]..[244,8444+52])
                            Ptyp_tuple
                            [
                              core_type (typing/includemod_errorprinter.ml[244,8444+16]..[244,8444+30])
                                Ptyp_constr "option" (typing/includemod_errorprinter.ml[244,8444+24]..[244,8444+30])
                                [
                                  core_type (typing/includemod_errorprinter.ml[244,8444+16]..[244,8444+23])
                                    Ptyp_constr "Ident.t" (typing/includemod_errorprinter.ml[244,8444+16]..[244,8444+23])
                                    []
                                ]
                              core_type (typing/includemod_errorprinter.ml[244,8444+33]..[244,8444+52])
                                Ptyp_constr "t" (typing/includemod_errorprinter.ml[244,8444+51]..[244,8444+52])
                                [
                                  core_type (typing/includemod_errorprinter.ml[244,8444+33]..[244,8444+50])
                                    Ptyp_constr "Types.module_type" (typing/includemod_errorprinter.ml[244,8444+33]..[244,8444+50])
                                    []
                                ]
                            ]
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[247,8529+2]..[250,8568+14])
            Pstr_type Rec
            [
              type_declaration "kind" (typing/includemod_errorprinter.ml[247,8529+7]..[247,8529+11]) (typing/includemod_errorprinter.ml[247,8529+2]..[250,8568+14])
                attribute "ocaml.doc"
                  [
                    structure_item (typing/includemod_errorprinter.ml[246,8499+2]..[246,8499+29])
                      Pstr_eval
                      expression (typing/includemod_errorprinter.ml[246,8499+2]..[246,8499+29])
                        Pexp_constant PConst_string(" Shorthand generation ",(typing/includemod_errorprinter.ml[246,8499+2]..[246,8499+29]),None)
                  ]
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[248,8543+4]..[248,8543+9])
                        "Got" (typing/includemod_errorprinter.ml[248,8543+6]..[248,8543+9])
                        []
                        None
                      (typing/includemod_errorprinter.ml[249,8553+4]..[249,8553+14])
                        "Expected" (typing/includemod_errorprinter.ml[249,8553+6]..[249,8553+14])
                        []
                        None
                      (typing/includemod_errorprinter.ml[250,8568+4]..[250,8568+14])
                        "Unneeded" (typing/includemod_errorprinter.ml[250,8568+6]..[250,8568+14])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[252,8584+2]..[254,8611+15])
            Pstr_type Rec
            [
              type_declaration "variant" (typing/includemod_errorprinter.ml[252,8584+7]..[252,8584+14]) (typing/includemod_errorprinter.ml[252,8584+2]..[254,8611+15])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (typing/includemod_errorprinter.ml[253,8601+4]..[253,8601+9])
                        "App" (typing/includemod_errorprinter.ml[253,8601+6]..[253,8601+9])
                        []
                        None
                      (typing/includemod_errorprinter.ml[254,8611+4]..[254,8611+15])
                        "Inclusion" (typing/includemod_errorprinter.ml[254,8611+6]..[254,8611+15])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (typing/includemod_errorprinter.ml[256,8628+2]..[258,8692+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[256,8628+6]..[256,8628+18])
                  Ppat_var "elide_if_app" (typing/includemod_errorprinter.ml[256,8628+6]..[256,8628+18])
                expression (typing/includemod_errorprinter.ml[256,8628+19]..[258,8692+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[256,8628+19]..[256,8628+22])
                    Ppat_var "ctx" (typing/includemod_errorprinter.ml[256,8628+19]..[256,8628+22])
                  expression (typing/includemod_errorprinter.ml[256,8628+23]..[258,8692+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[256,8628+23]..[256,8628+24])
                      Ppat_var "s" (typing/includemod_errorprinter.ml[256,8628+23]..[256,8628+24])
                    expression (typing/includemod_errorprinter.ml[256,8628+27]..[258,8692+20])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[256,8628+33]..[256,8628+36])
                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[256,8628+33]..[256,8628+36])
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[257,8670+6]..[257,8670+9])
                            Ppat_construct "App" (typing/includemod_errorprinter.ml[257,8670+6]..[257,8670+9])
                            None
                          expression (typing/includemod_errorprinter.ml[257,8670+13]..[257,8670+21])
                            Pexp_construct "Unneeded" (typing/includemod_errorprinter.ml[257,8670+13]..[257,8670+21])
                            None
                        <case>
                          pattern (typing/includemod_errorprinter.ml[258,8692+6]..[258,8692+15])
                            Ppat_construct "Inclusion" (typing/includemod_errorprinter.ml[258,8692+6]..[258,8692+15])
                            None
                          expression (typing/includemod_errorprinter.ml[258,8692+19]..[258,8692+20])
                            Pexp_ident "s" (typing/includemod_errorprinter.ml[258,8692+19]..[258,8692+20])
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[260,8714+2]..[264,8839+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[260,8714+6]..[260,8714+10])
                  Ppat_var "make" (typing/includemod_errorprinter.ml[260,8714+6]..[260,8714+10])
                expression (typing/includemod_errorprinter.ml[260,8714+11]..[264,8839+23]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[260,8714+11]..[260,8714+15])
                    Ppat_var "side" (typing/includemod_errorprinter.ml[260,8714+11]..[260,8714+15])
                  expression (typing/includemod_errorprinter.ml[260,8714+16]..[264,8839+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[260,8714+16]..[260,8714+19])
                      Ppat_var "pos" (typing/includemod_errorprinter.ml[260,8714+16]..[260,8714+19])
                    expression (typing/includemod_errorprinter.ml[261,8736+4]..[264,8839+23])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[261,8736+10]..[261,8736+14])
                        Pexp_ident "side" (typing/includemod_errorprinter.ml[261,8736+10]..[261,8736+14])
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[262,8756+6]..[262,8756+9])
                            Ppat_construct "Got" (typing/includemod_errorprinter.ml[262,8756+6]..[262,8756+9])
                            None
                          expression (typing/includemod_errorprinter.ml[262,8756+13]..[262,8756+38])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[262,8756+13]..[262,8756+27])
                              Pexp_ident "Format.sprintf" (typing/includemod_errorprinter.ml[262,8756+13]..[262,8756+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[262,8756+28]..[262,8756+34])
                                  Pexp_constant PConst_string("$S%d",(typing/includemod_errorprinter.ml[262,8756+29]..[262,8756+33]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[262,8756+35]..[262,8756+38])
                                  Pexp_ident "pos" (typing/includemod_errorprinter.ml[262,8756+35]..[262,8756+38])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[263,8795+6]..[263,8795+14])
                            Ppat_construct "Expected" (typing/includemod_errorprinter.ml[263,8795+6]..[263,8795+14])
                            None
                          expression (typing/includemod_errorprinter.ml[263,8795+18]..[263,8795+43])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[263,8795+18]..[263,8795+32])
                              Pexp_ident "Format.sprintf" (typing/includemod_errorprinter.ml[263,8795+18]..[263,8795+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[263,8795+33]..[263,8795+39])
                                  Pexp_constant PConst_string("$T%d",(typing/includemod_errorprinter.ml[263,8795+34]..[263,8795+38]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[263,8795+40]..[263,8795+43])
                                  Pexp_ident "pos" (typing/includemod_errorprinter.ml[263,8795+40]..[263,8795+43])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[264,8839+6]..[264,8839+14])
                            Ppat_construct "Unneeded" (typing/includemod_errorprinter.ml[264,8839+6]..[264,8839+14])
                            None
                          expression (typing/includemod_errorprinter.ml[264,8839+18]..[264,8839+23])
                            Pexp_constant PConst_string("...",(typing/includemod_errorprinter.ml[264,8839+19]..[264,8839+22]),None)
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[267,8899+2]..[267,8899+14])
            Pstr_open Fresh
            module_expr (typing/includemod_errorprinter.ml[267,8899+7]..[267,8899+14])
              Pmod_ident "Diffing" (typing/includemod_errorprinter.ml[267,8899+7]..[267,8899+14])
              attribute "ocaml.doc"
                [
                  structure_item (typing/includemod_errorprinter.ml[266,8864+2]..[266,8864+34])
                    Pstr_eval
                    expression (typing/includemod_errorprinter.ml[266,8864+2]..[266,8864+34])
                      Pexp_constant PConst_string(" Add shorthands to a patch ",(typing/includemod_errorprinter.ml[266,8864+2]..[266,8864+34]),None)
                ]
          structure_item (typing/includemod_errorprinter.ml[268,8914+2]..[289,9573+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[268,8914+6]..[268,8914+11])
                  Ppat_var "patch" (typing/includemod_errorprinter.ml[268,8914+6]..[268,8914+11])
                expression (typing/includemod_errorprinter.ml[268,8914+12]..[289,9573+19]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[268,8914+12]..[268,8914+15])
                    Ppat_var "ctx" (typing/includemod_errorprinter.ml[268,8914+12]..[268,8914+15])
                  expression (typing/includemod_errorprinter.ml[268,8914+16]..[289,9573+19]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[268,8914+16]..[268,8914+17])
                      Ppat_var "p" (typing/includemod_errorprinter.ml[268,8914+16]..[268,8914+17])
                    expression (typing/includemod_errorprinter.ml[269,8934+4]..[289,9573+19])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[269,8934+8]..[269,8934+21])
                            Ppat_var "add_shorthand" (typing/includemod_errorprinter.ml[269,8934+8]..[269,8934+21])
                          expression (typing/includemod_errorprinter.ml[269,8934+22]..[270,8971+43]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[269,8934+22]..[269,8934+26])
                              Ppat_var "side" (typing/includemod_errorprinter.ml[269,8934+22]..[269,8934+26])
                            expression (typing/includemod_errorprinter.ml[269,8934+27]..[270,8971+43]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[269,8934+27]..[269,8934+30])
                                Ppat_var "pos" (typing/includemod_errorprinter.ml[269,8934+27]..[269,8934+30])
                              expression (typing/includemod_errorprinter.ml[269,8934+31]..[270,8971+43]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[269,8934+31]..[269,8934+34])
                                  Ppat_var "mty" (typing/includemod_errorprinter.ml[269,8934+31]..[269,8934+34])
                                expression (typing/includemod_errorprinter.ml[270,8971+6]..[270,8971+43])
                                  Pexp_record
                                  [
                                    "name" (typing/includemod_errorprinter.ml[270,8971+7]..[270,8971+11])
                                      expression (typing/includemod_errorprinter.ml[270,8971+14]..[270,8971+29])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[270,8971+15]..[270,8971+19])
                                          Pexp_ident "make" (typing/includemod_errorprinter.ml[270,8971+15]..[270,8971+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[270,8971+20]..[270,8971+24])
                                              Pexp_ident "side" (typing/includemod_errorprinter.ml[270,8971+20]..[270,8971+24])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[270,8971+25]..[270,8971+28])
                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[270,8971+25]..[270,8971+28])
                                        ]
                                    "item" (typing/includemod_errorprinter.ml[270,8971+31]..[270,8971+35])
                                      expression (typing/includemod_errorprinter.ml[270,8971+38]..[270,8971+41])
                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[270,8971+38]..[270,8971+41])
                                  ]
                                  None
                      ]
                      expression (typing/includemod_errorprinter.ml[272,9022+4]..[289,9573+19])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[272,9022+8]..[272,9022+11])
                              Ppat_var "aux" (typing/includemod_errorprinter.ml[272,9022+8]..[272,9022+11])
                            expression (typing/includemod_errorprinter.ml[272,9022+12]..[287,9553+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[272,9022+12]..[272,9022+13])
                                Ppat_var "i" (typing/includemod_errorprinter.ml[272,9022+12]..[272,9022+13])
                              expression (typing/includemod_errorprinter.ml[272,9022+14]..[287,9553+12]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[272,9022+14]..[272,9022+15])
                                  Ppat_var "d" (typing/includemod_errorprinter.ml[272,9022+14]..[272,9022+15])
                                expression (typing/includemod_errorprinter.ml[273,9040+6]..[287,9553+12])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includemod_errorprinter.ml[273,9040+10]..[273,9040+13])
                                        Ppat_var "pos" (typing/includemod_errorprinter.ml[273,9040+10]..[273,9040+13])
                                      expression (typing/includemod_errorprinter.ml[273,9040+16]..[273,9040+21])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[273,9040+18]..[273,9040+19])
                                          Pexp_ident "+" (typing/includemod_errorprinter.ml[273,9040+18]..[273,9040+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[273,9040+16]..[273,9040+17])
                                              Pexp_ident "i" (typing/includemod_errorprinter.ml[273,9040+16]..[273,9040+17])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[273,9040+20]..[273,9040+21])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                                  expression (typing/includemod_errorprinter.ml[274,9065+6]..[287,9553+12])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/includemod_errorprinter.ml[274,9065+10]..[274,9065+11])
                                          Ppat_var "d" (typing/includemod_errorprinter.ml[274,9065+10]..[274,9065+11])
                                        expression (typing/includemod_errorprinter.ml[274,9065+14]..[285,9466+77])
                                          Pexp_match
                                          expression (typing/includemod_errorprinter.ml[274,9065+20]..[274,9065+21])
                                            Pexp_ident "d" (typing/includemod_errorprinter.ml[274,9065+20]..[274,9065+21])
                                          [
                                            <case>
                                              pattern (typing/includemod_errorprinter.ml[275,9092+10]..[275,9092+20])
                                                Ppat_construct "Insert" (typing/includemod_errorprinter.ml[275,9092+10]..[275,9092+16])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[275,9092+17]..[275,9092+20])
                                                    Ppat_var "mty" (typing/includemod_errorprinter.ml[275,9092+17]..[275,9092+20])
                                              expression (typing/includemod_errorprinter.ml[276,9116+12]..[276,9116+51])
                                                Pexp_construct "Insert" (typing/includemod_errorprinter.ml[276,9116+12]..[276,9116+18])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[276,9116+19]..[276,9116+51])
                                                    Pexp_apply
                                                    expression (typing/includemod_errorprinter.ml[276,9116+20]..[276,9116+33])
                                                      Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[276,9116+20]..[276,9116+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[276,9116+34]..[276,9116+42])
                                                          Pexp_construct "Expected" (typing/includemod_errorprinter.ml[276,9116+34]..[276,9116+42])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[276,9116+43]..[276,9116+46])
                                                          Pexp_ident "pos" (typing/includemod_errorprinter.ml[276,9116+43]..[276,9116+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[276,9116+47]..[276,9116+50])
                                                          Pexp_ident "mty" (typing/includemod_errorprinter.ml[276,9116+47]..[276,9116+50])
                                                    ]
                                            <case>
                                              pattern (typing/includemod_errorprinter.ml[277,9168+10]..[277,9168+20])
                                                Ppat_construct "Delete" (typing/includemod_errorprinter.ml[277,9168+10]..[277,9168+16])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[277,9168+17]..[277,9168+20])
                                                    Ppat_var "mty" (typing/includemod_errorprinter.ml[277,9168+17]..[277,9168+20])
                                              expression (typing/includemod_errorprinter.ml[278,9192+12]..[278,9192+65])
                                                Pexp_construct "Delete" (typing/includemod_errorprinter.ml[278,9192+12]..[278,9192+18])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[278,9192+19]..[278,9192+65])
                                                    Pexp_apply
                                                    expression (typing/includemod_errorprinter.ml[278,9192+20]..[278,9192+33])
                                                      Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[278,9192+20]..[278,9192+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[278,9192+34]..[278,9192+56])
                                                          Pexp_apply
                                                          expression (typing/includemod_errorprinter.ml[278,9192+35]..[278,9192+47])
                                                            Pexp_ident "elide_if_app" (typing/includemod_errorprinter.ml[278,9192+35]..[278,9192+47])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includemod_errorprinter.ml[278,9192+48]..[278,9192+51])
                                                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[278,9192+48]..[278,9192+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includemod_errorprinter.ml[278,9192+52]..[278,9192+55])
                                                                Pexp_construct "Got" (typing/includemod_errorprinter.ml[278,9192+52]..[278,9192+55])
                                                                None
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[278,9192+57]..[278,9192+60])
                                                          Pexp_ident "pos" (typing/includemod_errorprinter.ml[278,9192+57]..[278,9192+60])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[278,9192+61]..[278,9192+64])
                                                          Pexp_ident "mty" (typing/includemod_errorprinter.ml[278,9192+61]..[278,9192+64])
                                                    ]
                                            <case>
                                              pattern (typing/includemod_errorprinter.ml[279,9258+10]..[279,9258+26])
                                                Ppat_construct "Change" (typing/includemod_errorprinter.ml[279,9258+10]..[279,9258+16])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[279,9258+17]..[279,9258+26])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includemod_errorprinter.ml[279,9258+18]..[279,9258+19])
                                                        Ppat_var "g" (typing/includemod_errorprinter.ml[279,9258+18]..[279,9258+19])
                                                      pattern (typing/includemod_errorprinter.ml[279,9258+21]..[279,9258+22])
                                                        Ppat_var "e" (typing/includemod_errorprinter.ml[279,9258+21]..[279,9258+22])
                                                      pattern (typing/includemod_errorprinter.ml[279,9258+24]..[279,9258+25])
                                                        Ppat_var "p" (typing/includemod_errorprinter.ml[279,9258+24]..[279,9258+25])
                                                    ]
                                              expression (typing/includemod_errorprinter.ml[280,9288+12]..[282,9347+47])
                                                Pexp_construct "Change" (typing/includemod_errorprinter.ml[280,9288+12]..[280,9288+18])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[281,9307+14]..[282,9347+47])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includemod_errorprinter.ml[281,9307+15]..[281,9307+38])
                                                        Pexp_apply
                                                        expression (typing/includemod_errorprinter.ml[281,9307+15]..[281,9307+28])
                                                          Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[281,9307+15]..[281,9307+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[281,9307+29]..[281,9307+32])
                                                              Pexp_construct "Got" (typing/includemod_errorprinter.ml[281,9307+29]..[281,9307+32])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[281,9307+33]..[281,9307+36])
                                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[281,9307+33]..[281,9307+36])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[281,9307+37]..[281,9307+38])
                                                              Pexp_ident "g" (typing/includemod_errorprinter.ml[281,9307+37]..[281,9307+38])
                                                        ]
                                                      expression (typing/includemod_errorprinter.ml[282,9347+15]..[282,9347+43])
                                                        Pexp_apply
                                                        expression (typing/includemod_errorprinter.ml[282,9347+15]..[282,9347+28])
                                                          Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[282,9347+15]..[282,9347+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[282,9347+29]..[282,9347+37])
                                                              Pexp_construct "Expected" (typing/includemod_errorprinter.ml[282,9347+29]..[282,9347+37])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[282,9347+38]..[282,9347+41])
                                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[282,9347+38]..[282,9347+41])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[282,9347+42]..[282,9347+43])
                                                              Pexp_ident "e" (typing/includemod_errorprinter.ml[282,9347+42]..[282,9347+43])
                                                        ]
                                                      expression (typing/includemod_errorprinter.ml[282,9347+45]..[282,9347+46])
                                                        Pexp_ident "p" (typing/includemod_errorprinter.ml[282,9347+45]..[282,9347+46])
                                                    ]
                                            <case>
                                              pattern (typing/includemod_errorprinter.ml[283,9395+10]..[283,9395+24])
                                                Ppat_construct "Keep" (typing/includemod_errorprinter.ml[283,9395+10]..[283,9395+14])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[283,9395+15]..[283,9395+24])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includemod_errorprinter.ml[283,9395+16]..[283,9395+17])
                                                        Ppat_var "g" (typing/includemod_errorprinter.ml[283,9395+16]..[283,9395+17])
                                                      pattern (typing/includemod_errorprinter.ml[283,9395+19]..[283,9395+20])
                                                        Ppat_var "e" (typing/includemod_errorprinter.ml[283,9395+19]..[283,9395+20])
                                                      pattern (typing/includemod_errorprinter.ml[283,9395+22]..[283,9395+23])
                                                        Ppat_var "p" (typing/includemod_errorprinter.ml[283,9395+22]..[283,9395+23])
                                                    ]
                                              expression (typing/includemod_errorprinter.ml[284,9423+12]..[285,9466+77])
                                                Pexp_construct "Keep" (typing/includemod_errorprinter.ml[284,9423+12]..[284,9423+16])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[284,9423+17]..[285,9466+77])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includemod_errorprinter.ml[284,9423+18]..[284,9423+41])
                                                        Pexp_apply
                                                        expression (typing/includemod_errorprinter.ml[284,9423+18]..[284,9423+31])
                                                          Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[284,9423+18]..[284,9423+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[284,9423+32]..[284,9423+35])
                                                              Pexp_construct "Got" (typing/includemod_errorprinter.ml[284,9423+32]..[284,9423+35])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[284,9423+36]..[284,9423+39])
                                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[284,9423+36]..[284,9423+39])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[284,9423+40]..[284,9423+41])
                                                              Pexp_ident "g" (typing/includemod_errorprinter.ml[284,9423+40]..[284,9423+41])
                                                        ]
                                                      expression (typing/includemod_errorprinter.ml[285,9466+26]..[285,9466+73])
                                                        Pexp_apply
                                                        expression (typing/includemod_errorprinter.ml[285,9466+26]..[285,9466+39])
                                                          Pexp_ident "add_shorthand" (typing/includemod_errorprinter.ml[285,9466+26]..[285,9466+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[285,9466+40]..[285,9466+67])
                                                              Pexp_apply
                                                              expression (typing/includemod_errorprinter.ml[285,9466+41]..[285,9466+53])
                                                                Pexp_ident "elide_if_app" (typing/includemod_errorprinter.ml[285,9466+41]..[285,9466+53])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includemod_errorprinter.ml[285,9466+54]..[285,9466+57])
                                                                    Pexp_ident "ctx" (typing/includemod_errorprinter.ml[285,9466+54]..[285,9466+57])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/includemod_errorprinter.ml[285,9466+58]..[285,9466+66])
                                                                    Pexp_construct "Expected" (typing/includemod_errorprinter.ml[285,9466+58]..[285,9466+66])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[285,9466+68]..[285,9466+71])
                                                              Pexp_ident "pos" (typing/includemod_errorprinter.ml[285,9466+68]..[285,9466+71])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[285,9466+72]..[285,9466+73])
                                                              Pexp_ident "e" (typing/includemod_errorprinter.ml[285,9466+72]..[285,9466+73])
                                                        ]
                                                      expression (typing/includemod_errorprinter.ml[285,9466+75]..[285,9466+76])
                                                        Pexp_ident "p" (typing/includemod_errorprinter.ml[285,9466+75]..[285,9466+76])
                                                    ]
                                          ]
                                    ]
                                    expression (typing/includemod_errorprinter.ml[287,9553+6]..[287,9553+12])
                                      Pexp_tuple
                                      [
                                        expression (typing/includemod_errorprinter.ml[287,9553+6]..[287,9553+9])
                                          Pexp_ident "pos" (typing/includemod_errorprinter.ml[287,9553+6]..[287,9553+9])
                                        expression (typing/includemod_errorprinter.ml[287,9553+11]..[287,9553+12])
                                          Pexp_ident "d" (typing/includemod_errorprinter.ml[287,9553+11]..[287,9553+12])
                                      ]
                        ]
                        expression (typing/includemod_errorprinter.ml[289,9573+4]..[289,9573+19])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[289,9573+4]..[289,9573+13])
                            Pexp_ident "List.mapi" (typing/includemod_errorprinter.ml[289,9573+4]..[289,9573+13])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[289,9573+14]..[289,9573+17])
                                Pexp_ident "aux" (typing/includemod_errorprinter.ml[289,9573+14]..[289,9573+17])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[289,9573+18]..[289,9573+19])
                                Pexp_ident "p" (typing/includemod_errorprinter.ml[289,9573+18]..[289,9573+19])
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[292,9641+2]..[298,9841+20])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/includemod_errorprinter.ml[291,9594+2]..[291,9594+46])
                        Pstr_eval
                        expression (typing/includemod_errorprinter.ml[291,9594+2]..[291,9594+46])
                          Pexp_constant PConst_string(" Shorthand computation from named item ",(typing/includemod_errorprinter.ml[291,9594+2]..[291,9594+46]),None)
                    ]
                pattern (typing/includemod_errorprinter.ml[292,9641+6]..[292,9641+13])
                  Ppat_var "modtype" (typing/includemod_errorprinter.ml[292,9641+6]..[292,9641+13])
                expression (typing/includemod_errorprinter.ml[292,9641+14]..[298,9841+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[292,9641+14]..[292,9641+27])
                    Ppat_constraint
                    pattern (typing/includemod_errorprinter.ml[292,9641+15]..[292,9641+16])
                      Ppat_var "r" (typing/includemod_errorprinter.ml[292,9641+15]..[292,9641+16])
                    core_type (typing/includemod_errorprinter.ml[292,9641+19]..[292,9641+26])
                      Ptyp_constr "named" (typing/includemod_errorprinter.ml[292,9641+21]..[292,9641+26])
                      [
                        core_type (typing/includemod_errorprinter.ml[292,9641+19]..[292,9641+20])
                          Ptyp_any
                      ]
                  expression (typing/includemod_errorprinter.ml[292,9641+30]..[298,9841+20])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[292,9641+36]..[292,9641+42])
                      Pexp_field
                      expression (typing/includemod_errorprinter.ml[292,9641+36]..[292,9641+37])
                        Pexp_ident "r" (typing/includemod_errorprinter.ml[292,9641+36]..[292,9641+37])
                      "item" (typing/includemod_errorprinter.ml[292,9641+38]..[292,9641+42])
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[293,9689+6]..[295,9737+28])
                          Ppat_or
                          pattern (typing/includemod_errorprinter.ml[293,9689+6]..[294,9713+23])
                            Ppat_or
                            pattern (typing/includemod_errorprinter.ml[293,9689+6]..[293,9689+23])
                              Ppat_construct "Types.Mty_ident" (typing/includemod_errorprinter.ml[293,9689+6]..[293,9689+21])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[293,9689+22]..[293,9689+23])
                                  Ppat_any
                            pattern (typing/includemod_errorprinter.ml[294,9713+6]..[294,9713+23])
                              Ppat_construct "Types.Mty_alias" (typing/includemod_errorprinter.ml[294,9713+6]..[294,9713+21])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[294,9713+22]..[294,9713+23])
                                  Ppat_any
                          pattern (typing/includemod_errorprinter.ml[295,9737+6]..[295,9737+28])
                            Ppat_construct "Types.Mty_signature" (typing/includemod_errorprinter.ml[295,9737+6]..[295,9737+25])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[295,9737+26]..[295,9737+28])
                                Ppat_construct "[]" (typing/includemod_errorprinter.ml[295,9737+26]..[295,9737+28])
                                None
                        expression (typing/includemod_errorprinter.ml[296,9766+9]..[296,9766+24])
                          Pexp_construct "Original" (typing/includemod_errorprinter.ml[296,9766+9]..[296,9766+17])
                          Some
                            expression (typing/includemod_errorprinter.ml[296,9766+18]..[296,9766+24])
                              Pexp_field
                              expression (typing/includemod_errorprinter.ml[296,9766+18]..[296,9766+19])
                                Pexp_ident "r" (typing/includemod_errorprinter.ml[296,9766+18]..[296,9766+19])
                              "item" (typing/includemod_errorprinter.ml[296,9766+20]..[296,9766+24])
                      <case>
                        pattern (typing/includemod_errorprinter.ml[297,9791+6]..[297,9791+49])
                          Ppat_or
                          pattern (typing/includemod_errorprinter.ml[297,9791+6]..[297,9791+27])
                            Ppat_construct "Types.Mty_signature" (typing/includemod_errorprinter.ml[297,9791+6]..[297,9791+25])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[297,9791+26]..[297,9791+27])
                                Ppat_any
                          pattern (typing/includemod_errorprinter.ml[297,9791+30]..[297,9791+49])
                            Ppat_construct "Types.Mty_functor" (typing/includemod_errorprinter.ml[297,9791+30]..[297,9791+47])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[297,9791+48]..[297,9791+49])
                                Ppat_any
                        expression (typing/includemod_errorprinter.ml[298,9841+9]..[298,9841+20])
                          Pexp_construct "Synthetic" (typing/includemod_errorprinter.ml[298,9841+9]..[298,9841+18])
                          Some
                            expression (typing/includemod_errorprinter.ml[298,9841+19]..[298,9841+20])
                              Pexp_ident "r" (typing/includemod_errorprinter.ml[298,9841+19]..[298,9841+20])
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[300,9863+2]..[303,9977+52])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[300,9863+6]..[300,9863+19])
                  Ppat_var "functor_param" (typing/includemod_errorprinter.ml[300,9863+6]..[300,9863+19])
                expression (typing/includemod_errorprinter.ml[300,9863+20]..[303,9977+52]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[300,9863+20]..[300,9863+34])
                    Ppat_constraint
                    pattern (typing/includemod_errorprinter.ml[300,9863+21]..[300,9863+23])
                      Ppat_var "ua" (typing/includemod_errorprinter.ml[300,9863+21]..[300,9863+23])
                    core_type (typing/includemod_errorprinter.ml[300,9863+26]..[300,9863+33])
                      Ptyp_constr "named" (typing/includemod_errorprinter.ml[300,9863+28]..[300,9863+33])
                      [
                        core_type (typing/includemod_errorprinter.ml[300,9863+26]..[300,9863+27])
                          Ptyp_any
                      ]
                  expression (typing/includemod_errorprinter.ml[300,9863+37]..[303,9977+52])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[300,9863+43]..[300,9863+50])
                      Pexp_field
                      expression (typing/includemod_errorprinter.ml[300,9863+43]..[300,9863+45])
                        Pexp_ident "ua" (typing/includemod_errorprinter.ml[300,9863+43]..[300,9863+45])
                      "item" (typing/includemod_errorprinter.ml[300,9863+46]..[300,9863+50])
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[301,9919+6]..[301,9919+16])
                          Ppat_construct "Types.Unit" (typing/includemod_errorprinter.ml[301,9919+6]..[301,9919+16])
                          None
                        expression (typing/includemod_errorprinter.ml[301,9919+20]..[301,9919+24])
                          Pexp_construct "Unit" (typing/includemod_errorprinter.ml[301,9919+20]..[301,9919+24])
                          None
                      <case>
                        pattern (typing/includemod_errorprinter.ml[302,9944+6]..[302,9944+29])
                          Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[302,9944+6]..[302,9944+17])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[302,9944+18]..[302,9944+29])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[302,9944+19]..[302,9944+23])
                                  Ppat_var "from" (typing/includemod_errorprinter.ml[302,9944+19]..[302,9944+23])
                                pattern (typing/includemod_errorprinter.ml[302,9944+25]..[302,9944+28])
                                  Ppat_var "mty" (typing/includemod_errorprinter.ml[302,9944+25]..[302,9944+28])
                              ]
                        expression (typing/includemod_errorprinter.ml[303,9977+8]..[303,9977+52])
                          Pexp_construct "Named" (typing/includemod_errorprinter.ml[303,9977+8]..[303,9977+13])
                          Some
                            expression (typing/includemod_errorprinter.ml[303,9977+14]..[303,9977+52])
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[303,9977+15]..[303,9977+19])
                                  Pexp_ident "from" (typing/includemod_errorprinter.ml[303,9977+15]..[303,9977+19])
                                expression (typing/includemod_errorprinter.ml[303,9977+21]..[303,9977+51])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[303,9977+21]..[303,9977+28])
                                    Pexp_ident "modtype" (typing/includemod_errorprinter.ml[303,9977+21]..[303,9977+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[303,9977+29]..[303,9977+51])
                                        Pexp_record
                                        [
                                          "item" (typing/includemod_errorprinter.ml[303,9977+39]..[303,9977+43])
                                            expression (typing/includemod_errorprinter.ml[303,9977+46]..[303,9977+49])
                                              Pexp_ident "mty" (typing/includemod_errorprinter.ml[303,9977+46]..[303,9977+49])
                                        ]
                                        Some
                                          expression (typing/includemod_errorprinter.ml[303,9977+31]..[303,9977+33])
                                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[303,9977+31]..[303,9977+33])
                                  ]
                              ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[306,10078+2]..[308,10128+47])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/includemod_errorprinter.ml[305,10031+2]..[305,10031+46])
                        Pstr_eval
                        expression (typing/includemod_errorprinter.ml[305,10031+2]..[305,10031+46])
                          Pexp_constant PConst_string(" Printing of arguments with shorthands ",(typing/includemod_errorprinter.ml[305,10031+2]..[305,10031+46]),None)
                    ]
                pattern (typing/includemod_errorprinter.ml[306,10078+6]..[306,10078+8])
                  Ppat_var "pp" (typing/includemod_errorprinter.ml[306,10078+6]..[306,10078+8])
                expression (typing/includemod_errorprinter.ml[306,10078+9]..[308,10128+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[306,10078+9]..[306,10078+12])
                    Ppat_var "ppx" (typing/includemod_errorprinter.ml[306,10078+9]..[306,10078+12])
                  expression (typing/includemod_errorprinter.ml[306,10078+15]..[308,10128+47])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[307,10102+6]..[307,10102+16])
                          Ppat_construct "Original" (typing/includemod_errorprinter.ml[307,10102+6]..[307,10102+14])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[307,10102+15]..[307,10102+16])
                              Ppat_var "x" (typing/includemod_errorprinter.ml[307,10102+15]..[307,10102+16])
                        expression (typing/includemod_errorprinter.ml[307,10102+20]..[307,10102+25])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[307,10102+20]..[307,10102+23])
                            Pexp_ident "ppx" (typing/includemod_errorprinter.ml[307,10102+20]..[307,10102+23])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[307,10102+24]..[307,10102+25])
                                Pexp_ident "x" (typing/includemod_errorprinter.ml[307,10102+24]..[307,10102+25])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[308,10128+6]..[308,10128+17])
                          Ppat_construct "Synthetic" (typing/includemod_errorprinter.ml[308,10128+6]..[308,10128+15])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[308,10128+16]..[308,10128+17])
                              Ppat_var "s" (typing/includemod_errorprinter.ml[308,10128+16]..[308,10128+17])
                        expression (typing/includemod_errorprinter.ml[308,10128+21]..[308,10128+47])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[308,10128+21]..[308,10128+35])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[308,10128+21]..[308,10128+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[308,10128+36]..[308,10128+40])
                                Pexp_constant PConst_string("%s",(typing/includemod_errorprinter.ml[308,10128+37]..[308,10128+39]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[308,10128+41]..[308,10128+47])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[308,10128+41]..[308,10128+42])
                                  Pexp_ident "s" (typing/includemod_errorprinter.ml[308,10128+41]..[308,10128+42])
                                "name" (typing/includemod_errorprinter.ml[308,10128+43]..[308,10128+47])
                          ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[310,10177+2]..[311,10206+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[310,10177+6]..[310,10177+13])
                  Ppat_var "pp_orig" (typing/includemod_errorprinter.ml[310,10177+6]..[310,10177+13])
                expression (typing/includemod_errorprinter.ml[310,10177+14]..[311,10206+51]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[310,10177+14]..[310,10177+17])
                    Ppat_var "ppx" (typing/includemod_errorprinter.ml[310,10177+14]..[310,10177+17])
                  expression (typing/includemod_errorprinter.ml[310,10177+20]..[311,10206+51])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[311,10206+6]..[311,10206+42])
                          Ppat_or
                          pattern (typing/includemod_errorprinter.ml[311,10206+6]..[311,10206+16])
                            Ppat_construct "Original" (typing/includemod_errorprinter.ml[311,10206+6]..[311,10206+14])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[311,10206+15]..[311,10206+16])
                                Ppat_var "x" (typing/includemod_errorprinter.ml[311,10206+15]..[311,10206+16])
                          pattern (typing/includemod_errorprinter.ml[311,10206+19]..[311,10206+42])
                            Ppat_construct "Synthetic" (typing/includemod_errorprinter.ml[311,10206+19]..[311,10206+28])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[311,10206+29]..[311,10206+42])
                                Ppat_record Open
                                [
                                  "item" (typing/includemod_errorprinter.ml[311,10206+31]..[311,10206+35])
                                    pattern (typing/includemod_errorprinter.ml[311,10206+36]..[311,10206+37])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[311,10206+36]..[311,10206+37])
                                ]
                        expression (typing/includemod_errorprinter.ml[311,10206+46]..[311,10206+51])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[311,10206+46]..[311,10206+49])
                            Pexp_ident "ppx" (typing/includemod_errorprinter.ml[311,10206+46]..[311,10206+49])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[311,10206+50]..[311,10206+51])
                                Pexp_ident "x" (typing/includemod_errorprinter.ml[311,10206+50]..[311,10206+51])
                          ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[313,10259+2]..[320,10506+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[313,10259+6]..[313,10259+16])
                  Ppat_var "definition" (typing/includemod_errorprinter.ml[313,10259+6]..[313,10259+16])
                expression (typing/includemod_errorprinter.ml[313,10259+17]..[320,10506+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[313,10259+17]..[313,10259+18])
                    Ppat_var "x" (typing/includemod_errorprinter.ml[313,10259+17]..[313,10259+18])
                  expression (typing/includemod_errorprinter.ml[313,10259+21]..[320,10506+45])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[313,10259+27]..[313,10259+42])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[313,10259+27]..[313,10259+40])
                        Pexp_ident "functor_param" (typing/includemod_errorprinter.ml[313,10259+27]..[313,10259+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[313,10259+41]..[313,10259+42])
                            Pexp_ident "x" (typing/includemod_errorprinter.ml[313,10259+41]..[313,10259+42])
                      ]
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[314,10307+6]..[314,10307+10])
                          Ppat_construct "Unit" (typing/includemod_errorprinter.ml[314,10307+6]..[314,10307+10])
                          None
                        expression (typing/includemod_errorprinter.ml[314,10307+14]..[314,10307+33])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[314,10307+14]..[314,10307+28])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[314,10307+14]..[314,10307+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[314,10307+29]..[314,10307+33])
                                Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[314,10307+30]..[314,10307+32]),None)
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[315,10341+6]..[315,10341+24])
                          Ppat_construct "Named" (typing/includemod_errorprinter.ml[315,10341+6]..[315,10341+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[315,10341+11]..[315,10341+24])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[315,10341+12]..[315,10341+13])
                                  Ppat_any
                                pattern (typing/includemod_errorprinter.ml[315,10341+14]..[315,10341+23])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[315,10341+14]..[315,10341+23])
                              ]
                        expression (typing/includemod_errorprinter.ml[316,10369+8]..[320,10506+45])
                          Pexp_match
                          expression (typing/includemod_errorprinter.ml[316,10369+14]..[316,10369+23])
                            Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[316,10369+14]..[316,10369+23])
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[317,10398+10]..[317,10398+22])
                                Ppat_construct "Original" (typing/includemod_errorprinter.ml[317,10398+10]..[317,10398+18])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[317,10398+19]..[317,10398+22])
                                    Ppat_var "mty" (typing/includemod_errorprinter.ml[317,10398+19]..[317,10398+22])
                              expression (typing/includemod_errorprinter.ml[317,10398+26]..[317,10398+38])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[317,10398+26]..[317,10398+34])
                                  Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[317,10398+26]..[317,10398+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[317,10398+35]..[317,10398+38])
                                      Pexp_ident "mty" (typing/includemod_errorprinter.ml[317,10398+35]..[317,10398+38])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[318,10437+10]..[318,10437+38])
                                Ppat_construct "Synthetic" (typing/includemod_errorprinter.ml[318,10437+10]..[318,10437+19])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[318,10437+20]..[318,10437+38])
                                    Ppat_record Closed
                                    [
                                      "name" (typing/includemod_errorprinter.ml[318,10437+21]..[318,10437+25]) ghost
                                        pattern (typing/includemod_errorprinter.ml[318,10437+21]..[318,10437+25])
                                          Ppat_var "name" (typing/includemod_errorprinter.ml[318,10437+21]..[318,10437+25])
                                      "item" (typing/includemod_errorprinter.ml[318,10437+27]..[318,10437+31])
                                        pattern (typing/includemod_errorprinter.ml[318,10437+34]..[318,10437+37])
                                          Ppat_var "mty" (typing/includemod_errorprinter.ml[318,10437+34]..[318,10437+37])
                                    ]
                              expression (typing/includemod_errorprinter.ml[319,10479+12]..[320,10506+45])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[319,10479+12]..[319,10479+26])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[319,10479+12]..[319,10479+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[320,10506+14]..[320,10506+25])
                                      Pexp_constant PConst_string("%s@ =@ %t",(typing/includemod_errorprinter.ml[320,10506+15]..[320,10506+24]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[320,10506+26]..[320,10506+30])
                                      Pexp_ident "name" (typing/includemod_errorprinter.ml[320,10506+26]..[320,10506+30])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[320,10506+31]..[320,10506+45])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[320,10506+32]..[320,10506+40])
                                        Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[320,10506+32]..[320,10506+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[320,10506+41]..[320,10506+44])
                                            Pexp_ident "mty" (typing/includemod_errorprinter.ml[320,10506+41]..[320,10506+44])
                                      ]
                                ]
                          ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[322,10553+2]..[325,10660+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[322,10553+6]..[322,10553+11])
                  Ppat_var "param" (typing/includemod_errorprinter.ml[322,10553+6]..[322,10553+11])
                expression (typing/includemod_errorprinter.ml[322,10553+12]..[325,10660+29]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[322,10553+12]..[322,10553+13])
                    Ppat_var "x" (typing/includemod_errorprinter.ml[322,10553+12]..[322,10553+13])
                  expression (typing/includemod_errorprinter.ml[322,10553+16]..[325,10660+29])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[322,10553+22]..[322,10553+37])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[322,10553+22]..[322,10553+35])
                        Pexp_ident "functor_param" (typing/includemod_errorprinter.ml[322,10553+22]..[322,10553+35])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[322,10553+36]..[322,10553+37])
                            Pexp_ident "x" (typing/includemod_errorprinter.ml[322,10553+36]..[322,10553+37])
                      ]
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[323,10596+6]..[323,10596+10])
                          Ppat_construct "Unit" (typing/includemod_errorprinter.ml[323,10596+6]..[323,10596+10])
                          None
                        expression (typing/includemod_errorprinter.ml[323,10596+14]..[323,10596+33])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[323,10596+14]..[323,10596+28])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[323,10596+14]..[323,10596+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[323,10596+29]..[323,10596+33])
                                Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[323,10596+30]..[323,10596+32]),None)
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[324,10630+6]..[324,10630+26])
                          Ppat_construct "Named" (typing/includemod_errorprinter.ml[324,10630+6]..[324,10630+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[324,10630+12]..[324,10630+26])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[324,10630+13]..[324,10630+14])
                                  Ppat_any
                                pattern (typing/includemod_errorprinter.ml[324,10630+16]..[324,10630+25])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[324,10630+16]..[324,10630+25])
                              ]
                        expression (typing/includemod_errorprinter.ml[325,10660+8]..[325,10660+29])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[325,10660+8]..[325,10660+10])
                            Pexp_ident "pp" (typing/includemod_errorprinter.ml[325,10660+8]..[325,10660+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[325,10660+11]..[325,10660+19])
                                Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[325,10660+11]..[325,10660+19])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[325,10660+20]..[325,10660+29])
                                Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[325,10660+20]..[325,10660+29])
                          ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[327,10691+2]..[335,10998+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[327,10691+6]..[327,10691+21])
                  Ppat_var "qualified_param" (typing/includemod_errorprinter.ml[327,10691+6]..[327,10691+21])
                expression (typing/includemod_errorprinter.ml[327,10691+22]..[335,10998+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[327,10691+22]..[327,10691+23])
                    Ppat_var "x" (typing/includemod_errorprinter.ml[327,10691+22]..[327,10691+23])
                  expression (typing/includemod_errorprinter.ml[327,10691+26]..[335,10998+48])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[327,10691+32]..[327,10691+47])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[327,10691+32]..[327,10691+45])
                        Pexp_ident "functor_param" (typing/includemod_errorprinter.ml[327,10691+32]..[327,10691+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[327,10691+46]..[327,10691+47])
                            Pexp_ident "x" (typing/includemod_errorprinter.ml[327,10691+46]..[327,10691+47])
                      ]
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[328,10744+6]..[328,10744+10])
                          Ppat_construct "Unit" (typing/includemod_errorprinter.ml[328,10744+6]..[328,10744+10])
                          None
                        expression (typing/includemod_errorprinter.ml[328,10744+14]..[328,10744+33])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[328,10744+14]..[328,10744+28])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[328,10744+14]..[328,10744+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[328,10744+29]..[328,10744+33])
                                Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[328,10744+30]..[328,10744+32]),None)
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[329,10778+6]..[329,10778+48])
                          Ppat_construct "Named" (typing/includemod_errorprinter.ml[329,10778+6]..[329,10778+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[329,10778+12]..[329,10778+48])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[329,10778+13]..[329,10778+17])
                                  Ppat_construct "None" (typing/includemod_errorprinter.ml[329,10778+13]..[329,10778+17])
                                  None
                                pattern (typing/includemod_errorprinter.ml[329,10778+19]..[329,10778+46])
                                  Ppat_construct "Original" (typing/includemod_errorprinter.ml[329,10778+19]..[329,10778+27])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[329,10778+28]..[329,10778+46])
                                      Ppat_construct "Mty_signature" (typing/includemod_errorprinter.ml[329,10778+29]..[329,10778+42])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[329,10778+43]..[329,10778+45])
                                          Ppat_construct "[]" (typing/includemod_errorprinter.ml[329,10778+43]..[329,10778+45])
                                          None
                              ]
                        expression (typing/includemod_errorprinter.ml[330,10830+8]..[330,10830+34])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[330,10830+8]..[330,10830+22])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[330,10830+8]..[330,10830+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[330,10830+23]..[330,10830+34])
                                Pexp_constant PConst_string("(sig end)",(typing/includemod_errorprinter.ml[330,10830+24]..[330,10830+33]),None)
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[331,10865+6]..[331,10865+29])
                          Ppat_construct "Named" (typing/includemod_errorprinter.ml[331,10865+6]..[331,10865+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[331,10865+12]..[331,10865+29])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[331,10865+13]..[331,10865+17])
                                  Ppat_construct "None" (typing/includemod_errorprinter.ml[331,10865+13]..[331,10865+17])
                                  None
                                pattern (typing/includemod_errorprinter.ml[331,10865+19]..[331,10865+28])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[331,10865+19]..[331,10865+28])
                              ]
                        expression (typing/includemod_errorprinter.ml[332,10898+8]..[332,10898+29])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[332,10898+8]..[332,10898+10])
                            Pexp_ident "pp" (typing/includemod_errorprinter.ml[332,10898+8]..[332,10898+10])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[332,10898+11]..[332,10898+19])
                                Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[332,10898+11]..[332,10898+19])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[332,10898+20]..[332,10898+29])
                                Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[332,10898+20]..[332,10898+29])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[333,10928+6]..[333,10928+31])
                          Ppat_construct "Named" (typing/includemod_errorprinter.ml[333,10928+6]..[333,10928+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[333,10928+12]..[333,10928+31])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[333,10928+13]..[333,10928+19])
                                  Ppat_construct "Some" (typing/includemod_errorprinter.ml[333,10928+13]..[333,10928+17])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[333,10928+18]..[333,10928+19])
                                      Ppat_var "p" (typing/includemod_errorprinter.ml[333,10928+18]..[333,10928+19])
                                pattern (typing/includemod_errorprinter.ml[333,10928+21]..[333,10928+30])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[333,10928+21]..[333,10928+30])
                              ]
                        expression (typing/includemod_errorprinter.ml[334,10963+8]..[335,10998+48])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[334,10963+8]..[334,10963+22])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[334,10963+8]..[334,10963+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[334,10963+23]..[334,10963+34])
                                Pexp_constant PConst_string("(%s : %t)",(typing/includemod_errorprinter.ml[334,10963+24]..[334,10963+33]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[335,10998+10]..[335,10998+24])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[335,10998+11]..[335,10998+21])
                                  Pexp_ident "Ident.name" (typing/includemod_errorprinter.ml[335,10998+11]..[335,10998+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[335,10998+22]..[335,10998+23])
                                      Pexp_ident "p" (typing/includemod_errorprinter.ml[335,10998+22]..[335,10998+23])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[335,10998+25]..[335,10998+48])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[335,10998+26]..[335,10998+28])
                                  Pexp_ident "pp" (typing/includemod_errorprinter.ml[335,10998+26]..[335,10998+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[335,10998+29]..[335,10998+37])
                                      Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[335,10998+29]..[335,10998+37])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[335,10998+38]..[335,10998+47])
                                      Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[335,10998+38]..[335,10998+47])
                                ]
                          ]
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[337,11048+2]..[353,11613+11])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[337,11048+6]..[337,11048+28])
                  Ppat_var "definition_of_argument" (typing/includemod_errorprinter.ml[337,11048+6]..[337,11048+28])
                expression (typing/includemod_errorprinter.ml[337,11048+29]..[353,11613+11]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[337,11048+29]..[337,11048+31])
                    Ppat_var "ua" (typing/includemod_errorprinter.ml[337,11048+29]..[337,11048+31])
                  expression (typing/includemod_errorprinter.ml[338,11082+4]..[353,11613+11])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[338,11082+8]..[338,11082+16])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[338,11082+8]..[338,11082+11])
                              Ppat_var "arg" (typing/includemod_errorprinter.ml[338,11082+8]..[338,11082+11])
                            pattern (typing/includemod_errorprinter.ml[338,11082+13]..[338,11082+16])
                              Ppat_var "mty" (typing/includemod_errorprinter.ml[338,11082+13]..[338,11082+16])
                          ]
                        expression (typing/includemod_errorprinter.ml[338,11082+19]..[338,11082+26])
                          Pexp_field
                          expression (typing/includemod_errorprinter.ml[338,11082+19]..[338,11082+21])
                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[338,11082+19]..[338,11082+21])
                          "item" (typing/includemod_errorprinter.ml[338,11082+22]..[338,11082+26])
                    ]
                    expression (typing/includemod_errorprinter.ml[339,11112+4]..[353,11613+11])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[339,11112+10]..[339,11112+38])
                        Pexp_constraint
                        expression (typing/includemod_errorprinter.ml[339,11112+11]..[339,11112+14])
                          Pexp_ident "arg" (typing/includemod_errorprinter.ml[339,11112+11]..[339,11112+14])
                        core_type (typing/includemod_errorprinter.ml[339,11112+16]..[339,11112+37])
                          Ptyp_constr "Err.functor_arg_descr" (typing/includemod_errorprinter.ml[339,11112+16]..[339,11112+37])
                          []
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[340,11156+6]..[340,11156+10])
                            Ppat_construct "Unit" (typing/includemod_errorprinter.ml[340,11156+6]..[340,11156+10])
                            None
                          expression (typing/includemod_errorprinter.ml[340,11156+14]..[340,11156+33])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[340,11156+14]..[340,11156+28])
                              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[340,11156+14]..[340,11156+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[340,11156+29]..[340,11156+33])
                                  Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[340,11156+30]..[340,11156+32]),None)
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[341,11190+6]..[341,11190+13])
                            Ppat_construct "Named" (typing/includemod_errorprinter.ml[341,11190+6]..[341,11190+11])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[341,11190+12]..[341,11190+13])
                                Ppat_var "p" (typing/includemod_errorprinter.ml[341,11190+12]..[341,11190+13])
                          expression (typing/includemod_errorprinter.ml[342,11207+8]..[346,11330+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[342,11207+12]..[342,11207+15])
                                  Ppat_var "mty" (typing/includemod_errorprinter.ml[342,11207+12]..[342,11207+15])
                                expression (typing/includemod_errorprinter.ml[342,11207+18]..[342,11207+48])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[342,11207+18]..[342,11207+25])
                                    Pexp_ident "modtype" (typing/includemod_errorprinter.ml[342,11207+18]..[342,11207+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[342,11207+26]..[342,11207+48])
                                        Pexp_record
                                        [
                                          "item" (typing/includemod_errorprinter.ml[342,11207+36]..[342,11207+40])
                                            expression (typing/includemod_errorprinter.ml[342,11207+43]..[342,11207+46])
                                              Pexp_ident "mty" (typing/includemod_errorprinter.ml[342,11207+43]..[342,11207+46])
                                        ]
                                        Some
                                          expression (typing/includemod_errorprinter.ml[342,11207+28]..[342,11207+30])
                                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[342,11207+28]..[342,11207+30])
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[343,11259+8]..[346,11330+32])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[343,11259+8]..[343,11259+22])
                                Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[343,11259+8]..[343,11259+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[344,11282+10]..[344,11282+21])
                                    Pexp_constant PConst_string("%a@ :@ %t",(typing/includemod_errorprinter.ml[344,11282+11]..[344,11282+20]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[345,11304+10]..[345,11304+23])
                                    Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[345,11304+10]..[345,11304+23])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[345,11304+24]..[345,11304+25])
                                    Pexp_ident "p" (typing/includemod_errorprinter.ml[345,11304+24]..[345,11304+25])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[346,11330+10]..[346,11330+32])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[346,11330+11]..[346,11330+18])
                                      Pexp_ident "pp_orig" (typing/includemod_errorprinter.ml[346,11330+11]..[346,11330+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[346,11330+19]..[346,11330+27])
                                          Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[346,11330+19]..[346,11330+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[346,11330+28]..[346,11330+31])
                                          Pexp_ident "mty" (typing/includemod_errorprinter.ml[346,11330+28]..[346,11330+31])
                                    ]
                              ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[347,11363+6]..[347,11363+15])
                            Ppat_construct "Anonymous" (typing/includemod_errorprinter.ml[347,11363+6]..[347,11363+15])
                            None
                          expression (typing/includemod_errorprinter.ml[348,11382+8]..[353,11613+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[348,11382+12]..[348,11382+21])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[348,11382+12]..[348,11382+21])
                                expression (typing/includemod_errorprinter.ml[348,11382+24]..[348,11382+54])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[348,11382+24]..[348,11382+31])
                                    Pexp_ident "modtype" (typing/includemod_errorprinter.ml[348,11382+24]..[348,11382+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[348,11382+32]..[348,11382+54])
                                        Pexp_record
                                        [
                                          "item" (typing/includemod_errorprinter.ml[348,11382+42]..[348,11382+46])
                                            expression (typing/includemod_errorprinter.ml[348,11382+49]..[348,11382+52])
                                              Pexp_ident "mty" (typing/includemod_errorprinter.ml[348,11382+49]..[348,11382+52])
                                        ]
                                        Some
                                          expression (typing/includemod_errorprinter.ml[348,11382+34]..[348,11382+36])
                                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[348,11382+34]..[348,11382+36])
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[349,11440+8]..[353,11613+11])
                              Pexp_match
                              expression (typing/includemod_errorprinter.ml[349,11440+20]..[349,11440+29])
                                Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[349,11440+20]..[349,11440+29])
                              [
                                <case>
                                  pattern (typing/includemod_errorprinter.ml[350,11475+10]..[350,11475+22])
                                    Ppat_construct "Original" (typing/includemod_errorprinter.ml[350,11475+10]..[350,11475+18])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[350,11475+19]..[350,11475+22])
                                        Ppat_var "mty" (typing/includemod_errorprinter.ml[350,11475+19]..[350,11475+22])
                                  expression (typing/includemod_errorprinter.ml[350,11475+26]..[350,11475+38])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[350,11475+26]..[350,11475+34])
                                      Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[350,11475+26]..[350,11475+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[350,11475+35]..[350,11475+38])
                                          Pexp_ident "mty" (typing/includemod_errorprinter.ml[350,11475+35]..[350,11475+38])
                                    ]
                                <case>
                                  pattern (typing/includemod_errorprinter.ml[351,11514+10]..[351,11514+36])
                                    Ppat_construct "Synthetic" (typing/includemod_errorprinter.ml[351,11514+10]..[351,11514+19])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[351,11514+20]..[351,11514+36])
                                        Ppat_record Closed
                                        [
                                          "name" (typing/includemod_errorprinter.ml[351,11514+21]..[351,11514+25]) ghost
                                            pattern (typing/includemod_errorprinter.ml[351,11514+21]..[351,11514+25])
                                              Ppat_var "name" (typing/includemod_errorprinter.ml[351,11514+21]..[351,11514+25])
                                          "item" (typing/includemod_errorprinter.ml[351,11514+27]..[351,11514+31])
                                            pattern (typing/includemod_errorprinter.ml[351,11514+32]..[351,11514+35])
                                              Ppat_var "mty" (typing/includemod_errorprinter.ml[351,11514+32]..[351,11514+35])
                                        ]
                                  expression (typing/includemod_errorprinter.ml[352,11554+12]..[352,11554+58])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[352,11554+12]..[352,11554+26])
                                      Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[352,11554+12]..[352,11554+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[352,11554+27]..[352,11554+38])
                                          Pexp_constant PConst_string("%s@ :@ %t",(typing/includemod_errorprinter.ml[352,11554+28]..[352,11554+37]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[352,11554+39]..[352,11554+43])
                                          Pexp_ident "name" (typing/includemod_errorprinter.ml[352,11554+39]..[352,11554+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[352,11554+44]..[352,11554+58])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[352,11554+45]..[352,11554+53])
                                            Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[352,11554+45]..[352,11554+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[352,11554+54]..[352,11554+57])
                                                Pexp_ident "mty" (typing/includemod_errorprinter.ml[352,11554+54]..[352,11554+57])
                                          ]
                                    ]
                              ]
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[355,11626+2]..[362,11872+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[355,11626+6]..[355,11626+9])
                  Ppat_var "arg" (typing/includemod_errorprinter.ml[355,11626+6]..[355,11626+9])
                expression (typing/includemod_errorprinter.ml[355,11626+10]..[362,11872+29]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[355,11626+10]..[355,11626+12])
                    Ppat_var "ua" (typing/includemod_errorprinter.ml[355,11626+10]..[355,11626+12])
                  expression (typing/includemod_errorprinter.ml[356,11641+4]..[362,11872+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[356,11641+8]..[356,11641+16])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[356,11641+8]..[356,11641+11])
                              Ppat_var "arg" (typing/includemod_errorprinter.ml[356,11641+8]..[356,11641+11])
                            pattern (typing/includemod_errorprinter.ml[356,11641+13]..[356,11641+16])
                              Ppat_var "mty" (typing/includemod_errorprinter.ml[356,11641+13]..[356,11641+16])
                          ]
                        expression (typing/includemod_errorprinter.ml[356,11641+19]..[356,11641+26])
                          Pexp_field
                          expression (typing/includemod_errorprinter.ml[356,11641+19]..[356,11641+21])
                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[356,11641+19]..[356,11641+21])
                          "item" (typing/includemod_errorprinter.ml[356,11641+22]..[356,11641+26])
                    ]
                    expression (typing/includemod_errorprinter.ml[357,11671+4]..[362,11872+29])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[357,11671+10]..[357,11671+38])
                        Pexp_constraint
                        expression (typing/includemod_errorprinter.ml[357,11671+11]..[357,11671+14])
                          Pexp_ident "arg" (typing/includemod_errorprinter.ml[357,11671+11]..[357,11671+14])
                        core_type (typing/includemod_errorprinter.ml[357,11671+16]..[357,11671+37])
                          Ptyp_constr "Err.functor_arg_descr" (typing/includemod_errorprinter.ml[357,11671+16]..[357,11671+37])
                          []
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[358,11715+6]..[358,11715+10])
                            Ppat_construct "Unit" (typing/includemod_errorprinter.ml[358,11715+6]..[358,11715+10])
                            None
                          expression (typing/includemod_errorprinter.ml[358,11715+14]..[358,11715+33])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[358,11715+14]..[358,11715+28])
                              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[358,11715+14]..[358,11715+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[358,11715+29]..[358,11715+33])
                                  Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[358,11715+30]..[358,11715+32]),None)
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[359,11749+6]..[359,11749+13])
                            Ppat_construct "Named" (typing/includemod_errorprinter.ml[359,11749+6]..[359,11749+11])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[359,11749+12]..[359,11749+13])
                                Ppat_var "p" (typing/includemod_errorprinter.ml[359,11749+12]..[359,11749+13])
                          expression (typing/includemod_errorprinter.ml[359,11749+17]..[359,11749+47])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[359,11749+21]..[359,11749+24])
                              Ppat_var "ppf" (typing/includemod_errorprinter.ml[359,11749+21]..[359,11749+24])
                            expression (typing/includemod_errorprinter.ml[359,11749+28]..[359,11749+47])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[359,11749+28]..[359,11749+41])
                                Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[359,11749+28]..[359,11749+41])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[359,11749+42]..[359,11749+45])
                                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[359,11749+42]..[359,11749+45])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[359,11749+46]..[359,11749+47])
                                    Pexp_ident "p" (typing/includemod_errorprinter.ml[359,11749+46]..[359,11749+47])
                              ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[360,11797+6]..[360,11797+15])
                            Ppat_construct "Anonymous" (typing/includemod_errorprinter.ml[360,11797+6]..[360,11797+15])
                            None
                          expression (typing/includemod_errorprinter.ml[361,11816+8]..[362,11872+29])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[361,11816+12]..[361,11816+21])
                                  Ppat_var "short_mty" (typing/includemod_errorprinter.ml[361,11816+12]..[361,11816+21])
                                expression (typing/includemod_errorprinter.ml[361,11816+24]..[361,11816+52])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[361,11816+24]..[361,11816+31])
                                    Pexp_ident "modtype" (typing/includemod_errorprinter.ml[361,11816+24]..[361,11816+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[361,11816+32]..[361,11816+52])
                                        Pexp_record
                                        [
                                          "item" (typing/includemod_errorprinter.ml[361,11816+42]..[361,11816+46])
                                            expression (typing/includemod_errorprinter.ml[361,11816+47]..[361,11816+50])
                                              Pexp_ident "mty" (typing/includemod_errorprinter.ml[361,11816+47]..[361,11816+50])
                                        ]
                                        Some
                                          expression (typing/includemod_errorprinter.ml[361,11816+34]..[361,11816+36])
                                            Pexp_ident "ua" (typing/includemod_errorprinter.ml[361,11816+34]..[361,11816+36])
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[362,11872+8]..[362,11872+29])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[362,11872+8]..[362,11872+10])
                                Pexp_ident "pp" (typing/includemod_errorprinter.ml[362,11872+8]..[362,11872+10])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[362,11872+11]..[362,11872+19])
                                    Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[362,11872+11]..[362,11872+19])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[362,11872+20]..[362,11872+29])
                                    Pexp_ident "short_mty" (typing/includemod_errorprinter.ml[362,11872+20]..[362,11872+29])
                              ]
                      ]
            ]
        ]
  structure_item (typing/includemod_errorprinter.ml[367,11909+0]..[557,17677+3])
    Pstr_module
    "Functor_suberror" (typing/includemod_errorprinter.ml[367,11909+7]..[367,11909+23])
      module_expr (typing/includemod_errorprinter.ml[367,11909+26]..[557,17677+3])
        Pmod_structure
        [
          structure_item (typing/includemod_errorprinter.ml[368,11942+2]..[368,11942+10])
            Pstr_open Fresh
            module_expr (typing/includemod_errorprinter.ml[368,11942+7]..[368,11942+10])
              Pmod_ident "Err" (typing/includemod_errorprinter.ml[368,11942+7]..[368,11942+10])
          structure_item (typing/includemod_errorprinter.ml[370,11954+2]..[372,12045+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[370,11954+6]..[370,11954+14])
                  Ppat_var "param_id" (typing/includemod_errorprinter.ml[370,11954+6]..[370,11954+14])
                expression (typing/includemod_errorprinter.ml[370,11954+15]..[372,12045+42]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[370,11954+15]..[370,11954+16])
                    Ppat_var "x" (typing/includemod_errorprinter.ml[370,11954+15]..[370,11954+16])
                  expression (typing/includemod_errorprinter.ml[370,11954+19]..[372,12045+42])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[370,11954+25]..[370,11954+46])
                      Pexp_field
                      expression (typing/includemod_errorprinter.ml[370,11954+25]..[370,11954+26])
                        Pexp_ident "x" (typing/includemod_errorprinter.ml[370,11954+25]..[370,11954+26])
                      "With_shorthand.item" (typing/includemod_errorprinter.ml[370,11954+27]..[370,11954+46])
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[371,12006+6]..[371,12006+33])
                          Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[371,12006+6]..[371,12006+17])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[371,12006+18]..[371,12006+33])
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[371,12006+19]..[371,12006+30])
                                  Ppat_alias "x" (typing/includemod_errorprinter.ml[371,12006+29]..[371,12006+30])
                                  pattern (typing/includemod_errorprinter.ml[371,12006+19]..[371,12006+25])
                                    Ppat_construct "Some" (typing/includemod_errorprinter.ml[371,12006+19]..[371,12006+23])
                                    Some
                                      []
                                      pattern (typing/includemod_errorprinter.ml[371,12006+24]..[371,12006+25])
                                        Ppat_any
                                pattern (typing/includemod_errorprinter.ml[371,12006+31]..[371,12006+32])
                                  Ppat_any
                              ]
                        expression (typing/includemod_errorprinter.ml[371,12006+37]..[371,12006+38])
                          Pexp_ident "x" (typing/includemod_errorprinter.ml[371,12006+37]..[371,12006+38])
                      <case>
                        pattern (typing/includemod_errorprinter.ml[372,12045+6]..[372,12045+34])
                          Ppat_open ""Types" (typing/includemod_errorprinter.ml[372,12045+6]..[372,12045+11])"
                          pattern (typing/includemod_errorprinter.ml[372,12045+13]..[372,12045+33])
                            Ppat_or
                            pattern (typing/includemod_errorprinter.ml[372,12045+13]..[372,12045+17])
                              Ppat_construct "Unit" (typing/includemod_errorprinter.ml[372,12045+13]..[372,12045+17])
                              None
                            pattern (typing/includemod_errorprinter.ml[372,12045+20]..[372,12045+33])
                              Ppat_construct "Named" (typing/includemod_errorprinter.ml[372,12045+20]..[372,12045+25])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[372,12045+25]..[372,12045+33])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[372,12045+26]..[372,12045+30])
                                      Ppat_construct "None" (typing/includemod_errorprinter.ml[372,12045+26]..[372,12045+30])
                                      None
                                    pattern (typing/includemod_errorprinter.ml[372,12045+31]..[372,12045+32])
                                      Ppat_any
                                  ]
                        expression (typing/includemod_errorprinter.ml[372,12045+38]..[372,12045+42])
                          Pexp_construct "None" (typing/includemod_errorprinter.ml[372,12045+38]..[372,12045+42])
                          None
                    ]
            ]
          structure_item (typing/includemod_errorprinter.ml[375,12134+2]..[384,12459+47])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (typing/includemod_errorprinter.ml[374,12089+2]..[374,12089+44])
                        Pstr_eval
                        expression (typing/includemod_errorprinter.ml[374,12089+2]..[374,12089+44])
                          Pexp_constant PConst_string(" Print the list of params with style ",(typing/includemod_errorprinter.ml[374,12089+2]..[374,12089+44]),None)
                    ]
                pattern (typing/includemod_errorprinter.ml[375,12134+6]..[375,12134+19])
                  Ppat_var "pretty_params" (typing/includemod_errorprinter.ml[375,12134+6]..[375,12134+19])
                expression (typing/includemod_errorprinter.ml[375,12134+20]..[384,12459+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[375,12134+20]..[375,12134+23])
                    Ppat_var "sep" (typing/includemod_errorprinter.ml[375,12134+20]..[375,12134+23])
                  expression (typing/includemod_errorprinter.ml[375,12134+24]..[384,12459+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[375,12134+24]..[375,12134+28])
                      Ppat_var "proj" (typing/includemod_errorprinter.ml[375,12134+24]..[375,12134+28])
                    expression (typing/includemod_errorprinter.ml[375,12134+29]..[384,12459+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[375,12134+29]..[375,12134+36])
                        Ppat_var "printer" (typing/includemod_errorprinter.ml[375,12134+29]..[375,12134+36])
                      expression (typing/includemod_errorprinter.ml[375,12134+37]..[384,12459+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[375,12134+37]..[375,12134+42])
                          Ppat_var "patch" (typing/includemod_errorprinter.ml[375,12134+37]..[375,12134+42])
                        expression (typing/includemod_errorprinter.ml[376,12179+4]..[384,12459+47])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[376,12179+8]..[376,12179+11])
                                Ppat_var "elt" (typing/includemod_errorprinter.ml[376,12179+8]..[376,12179+11])
                              expression (typing/includemod_errorprinter.ml[376,12179+12]..[381,12357+31]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[376,12179+12]..[376,12179+21])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[376,12179+13]..[376,12179+14])
                                      Ppat_var "x" (typing/includemod_errorprinter.ml[376,12179+13]..[376,12179+14])
                                    pattern (typing/includemod_errorprinter.ml[376,12179+15]..[376,12179+20])
                                      Ppat_var "param" (typing/includemod_errorprinter.ml[376,12179+15]..[376,12179+20])
                                  ]
                                expression (typing/includemod_errorprinter.ml[377,12203+6]..[381,12357+31])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includemod_errorprinter.ml[377,12203+10]..[377,12203+13])
                                        Ppat_var "sty" (typing/includemod_errorprinter.ml[377,12203+10]..[377,12203+13])
                                      expression (typing/includemod_errorprinter.ml[377,12203+16]..[377,12203+45])
                                        Pexp_open Fresh
                                        module_expr (typing/includemod_errorprinter.ml[377,12203+16]..[377,12203+23])
                                          Pmod_ident "Diffing" (typing/includemod_errorprinter.ml[377,12203+16]..[377,12203+23])
                                        expression (typing/includemod_errorprinter.ml[377,12203+25]..[377,12203+44])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[377,12203+31]..[377,12203+33])
                                            Pexp_ident "@@" (typing/includemod_errorprinter.ml[377,12203+31]..[377,12203+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[377,12203+25]..[377,12203+30])
                                                Pexp_ident "style" (typing/includemod_errorprinter.ml[377,12203+25]..[377,12203+30])
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[377,12203+34]..[377,12203+44])
                                                Pexp_apply
                                                expression (typing/includemod_errorprinter.ml[377,12203+34]..[377,12203+42])
                                                  Pexp_ident "classify" (typing/includemod_errorprinter.ml[377,12203+34]..[377,12203+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includemod_errorprinter.ml[377,12203+43]..[377,12203+44])
                                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[377,12203+43]..[377,12203+44])
                                                ]
                                          ]
                                  ]
                                  expression (typing/includemod_errorprinter.ml[378,12252+6]..[381,12357+31])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[378,12252+6]..[378,12252+20])
                                      Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[378,12252+6]..[378,12252+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[378,12252+21]..[378,12252+29])
                                          Pexp_constant PConst_string("%a%t%a",(typing/includemod_errorprinter.ml[378,12252+22]..[378,12252+28]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[379,12282+8]..[379,12282+27])
                                          Pexp_ident "Format.pp_open_stag" (typing/includemod_errorprinter.ml[379,12282+8]..[379,12282+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[379,12282+28]..[379,12282+50])
                                          Pexp_construct "Misc.Color.Style" (typing/includemod_errorprinter.ml[379,12282+29]..[379,12282+45])
                                          Some
                                            expression (typing/includemod_errorprinter.ml[379,12282+46]..[379,12282+49])
                                              Pexp_ident "sty" (typing/includemod_errorprinter.ml[379,12282+46]..[379,12282+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[380,12333+8]..[380,12333+23])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[380,12333+9]..[380,12333+16])
                                            Pexp_ident "printer" (typing/includemod_errorprinter.ml[380,12333+9]..[380,12333+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[380,12333+17]..[380,12333+22])
                                                Pexp_ident "param" (typing/includemod_errorprinter.ml[380,12333+17]..[380,12333+22])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[381,12357+8]..[381,12357+28])
                                          Pexp_ident "Format.pp_close_stag" (typing/includemod_errorprinter.ml[381,12357+8]..[381,12357+28])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[381,12357+29]..[381,12357+31])
                                          Pexp_construct "()" (typing/includemod_errorprinter.ml[381,12357+29]..[381,12357+31])
                                          None
                                    ]
                          ]
                          expression (typing/includemod_errorprinter.ml[383,12396+4]..[384,12459+47])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[383,12396+8]..[383,12396+14])
                                  Ppat_var "params" (typing/includemod_errorprinter.ml[383,12396+8]..[383,12396+14])
                                expression (typing/includemod_errorprinter.ml[383,12396+17]..[383,12396+59])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[383,12396+38]..[383,12396+40])
                                    Pexp_ident "@@" (typing/includemod_errorprinter.ml[383,12396+38]..[383,12396+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[383,12396+17]..[383,12396+37])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[383,12396+17]..[383,12396+32])
                                          Pexp_ident "List.filter_map" (typing/includemod_errorprinter.ml[383,12396+17]..[383,12396+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[383,12396+33]..[383,12396+37])
                                              Pexp_ident "proj" (typing/includemod_errorprinter.ml[383,12396+33]..[383,12396+37])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[383,12396+41]..[383,12396+59])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[383,12396+41]..[383,12396+49])
                                          Pexp_ident "List.map" (typing/includemod_errorprinter.ml[383,12396+41]..[383,12396+49])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[383,12396+50]..[383,12396+53])
                                              Pexp_ident "snd" (typing/includemod_errorprinter.ml[383,12396+50]..[383,12396+53])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[383,12396+54]..[383,12396+59])
                                              Pexp_ident "patch" (typing/includemod_errorprinter.ml[383,12396+54]..[383,12396+59])
                                        ]
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[384,12459+4]..[384,12459+47])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[384,12459+4]..[384,12459+31])
                                Pexp_ident "Printtyp.functor_parameters" (typing/includemod_errorprinter.ml[384,12459+4]..[384,12459+31])
                              [
                                <arg>
                                Labelled "sep"
                                  expression (typing/includemod_errorprinter.ml[384,12459+33]..[384,12459+36])
                                    Pexp_ident "sep" (typing/includemod_errorprinter.ml[384,12459+33]..[384,12459+36])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[384,12459+37]..[384,12459+40])
                                    Pexp_ident "elt" (typing/includemod_errorprinter.ml[384,12459+37]..[384,12459+40])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[384,12459+41]..[384,12459+47])
                                    Pexp_ident "params" (typing/includemod_errorprinter.ml[384,12459+41]..[384,12459+47])
                              ]
            ]
          structure_item (typing/includemod_errorprinter.ml[386,12508+2]..[394,12722+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[386,12508+6]..[386,12508+14])
                  Ppat_var "expected" (typing/includemod_errorprinter.ml[386,12508+6]..[386,12508+14])
                expression (typing/includemod_errorprinter.ml[386,12508+15]..[394,12722+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[386,12508+15]..[386,12508+16])
                    Ppat_var "d" (typing/includemod_errorprinter.ml[386,12508+15]..[386,12508+16])
                  expression (typing/includemod_errorprinter.ml[387,12527+4]..[394,12722+64])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[387,12527+8]..[387,12527+38]) ghost
                          Ppat_constraint
                          pattern (typing/includemod_errorprinter.ml[387,12527+8]..[387,12527+15])
                            Ppat_var "extract" (typing/includemod_errorprinter.ml[387,12527+8]..[387,12527+15])
                          core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+38]) ghost
                            Ptyp_poly
                            core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+38])
                              Ptyp_arrow
                              Nolabel
                              core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+33])
                                Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[387,12527+19]..[387,12527+33])
                                [
                                  core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+18])
                                    Ptyp_any
                                ]
                              core_type (typing/includemod_errorprinter.ml[387,12527+37]..[387,12527+38])
                                Ptyp_any
                        expression (typing/includemod_errorprinter.ml[387,12527+8]..[392,12690+24])
                          Pexp_constraint
                          expression (typing/includemod_errorprinter.ml[387,12527+41]..[392,12690+24])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/includemod_errorprinter.ml[388,12577+8]..[390,12618+29])
                                  Ppat_alias "x" (typing/includemod_errorprinter.ml[390,12618+28]..[390,12618+29])
                                  pattern (typing/includemod_errorprinter.ml[388,12577+8]..[390,12618+24])
                                    Ppat_or
                                    pattern (typing/includemod_errorprinter.ml[388,12577+8]..[389,12596+21])
                                      Ppat_or
                                      pattern (typing/includemod_errorprinter.ml[388,12577+8]..[388,12577+18])
                                        Ppat_construct "Insert" (typing/includemod_errorprinter.ml[388,12577+8]..[388,12577+14])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[388,12577+15]..[388,12577+18])
                                            Ppat_var "mty" (typing/includemod_errorprinter.ml[388,12577+15]..[388,12577+18])
                                      pattern (typing/includemod_errorprinter.ml[389,12596+8]..[389,12596+21])
                                        Ppat_construct "Keep" (typing/includemod_errorprinter.ml[389,12596+8]..[389,12596+12])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[389,12596+12]..[389,12596+21])
                                            Ppat_tuple
                                            [
                                              pattern (typing/includemod_errorprinter.ml[389,12596+13]..[389,12596+14])
                                                Ppat_any
                                              pattern (typing/includemod_errorprinter.ml[389,12596+15]..[389,12596+18])
                                                Ppat_var "mty" (typing/includemod_errorprinter.ml[389,12596+15]..[389,12596+18])
                                              pattern (typing/includemod_errorprinter.ml[389,12596+19]..[389,12596+20])
                                                Ppat_any
                                            ]
                                    pattern (typing/includemod_errorprinter.ml[390,12618+8]..[390,12618+24])
                                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[390,12618+8]..[390,12618+14])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[390,12618+15]..[390,12618+24])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[390,12618+16]..[390,12618+17])
                                              Ppat_any
                                            pattern (typing/includemod_errorprinter.ml[390,12618+18]..[390,12618+21])
                                              Ppat_var "mty" (typing/includemod_errorprinter.ml[390,12618+18]..[390,12618+21])
                                            pattern (typing/includemod_errorprinter.ml[390,12618+22]..[390,12618+23])
                                              Ppat_any
                                          ]
                                expression (typing/includemod_errorprinter.ml[391,12651+10]..[391,12651+38])
                                  Pexp_construct "Some" (typing/includemod_errorprinter.ml[391,12651+10]..[391,12651+14])
                                  Some
                                    expression (typing/includemod_errorprinter.ml[391,12651+15]..[391,12651+38])
                                      Pexp_tuple
                                      [
                                        expression (typing/includemod_errorprinter.ml[391,12651+16]..[391,12651+28])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[391,12651+16]..[391,12651+24])
                                            Pexp_ident "param_id" (typing/includemod_errorprinter.ml[391,12651+16]..[391,12651+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[391,12651+25]..[391,12651+28])
                                                Pexp_ident "mty" (typing/includemod_errorprinter.ml[391,12651+25]..[391,12651+28])
                                          ]
                                        expression (typing/includemod_errorprinter.ml[391,12651+29]..[391,12651+37])
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[391,12651+30]..[391,12651+31])
                                              Pexp_ident "x" (typing/includemod_errorprinter.ml[391,12651+30]..[391,12651+31])
                                            expression (typing/includemod_errorprinter.ml[391,12651+33]..[391,12651+36])
                                              Pexp_ident "mty" (typing/includemod_errorprinter.ml[391,12651+33]..[391,12651+36])
                                          ]
                                      ]
                              <case>
                                pattern (typing/includemod_errorprinter.ml[392,12690+8]..[392,12690+16])
                                  Ppat_construct "Delete" (typing/includemod_errorprinter.ml[392,12690+8]..[392,12690+14])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[392,12690+15]..[392,12690+16])
                                      Ppat_any
                                expression (typing/includemod_errorprinter.ml[392,12690+20]..[392,12690+24])
                                  Pexp_construct "None" (typing/includemod_errorprinter.ml[392,12690+20]..[392,12690+24])
                                  None
                            ]
                          core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+38])
                            Ptyp_arrow
                            Nolabel
                            core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+33])
                              Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[387,12527+19]..[387,12527+33])
                              [
                                core_type (typing/includemod_errorprinter.ml[387,12527+17]..[387,12527+18])
                                  Ptyp_any
                              ]
                            core_type (typing/includemod_errorprinter.ml[387,12527+37]..[387,12527+38])
                              Ptyp_any
                    ]
                    expression (typing/includemod_errorprinter.ml[394,12722+4]..[394,12722+64])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[394,12722+4]..[394,12722+17])
                        Pexp_ident "pretty_params" (typing/includemod_errorprinter.ml[394,12722+4]..[394,12722+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[394,12722+18]..[394,12722+23])
                            Pexp_ident "space" (typing/includemod_errorprinter.ml[394,12722+18]..[394,12722+23])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[394,12722+24]..[394,12722+31])
                            Pexp_ident "extract" (typing/includemod_errorprinter.ml[394,12722+24]..[394,12722+31])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[394,12722+32]..[394,12722+62])
                            Pexp_ident "With_shorthand.qualified_param" (typing/includemod_errorprinter.ml[394,12722+32]..[394,12722+62])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[394,12722+63]..[394,12722+64])
                            Pexp_ident "d" (typing/includemod_errorprinter.ml[394,12722+63]..[394,12722+64])
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[396,12788+2]..[400,12924+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[396,12788+6]..[396,12788+26])
                  Ppat_var "drop_inserted_suffix" (typing/includemod_errorprinter.ml[396,12788+6]..[396,12788+26])
                expression (typing/includemod_errorprinter.ml[396,12788+27]..[400,12924+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[396,12788+27]..[396,12788+32])
                    Ppat_var "patch" (typing/includemod_errorprinter.ml[396,12788+27]..[396,12788+32])
                  expression (typing/includemod_errorprinter.ml[397,12823+4]..[400,12924+25])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[397,12823+12]..[397,12823+16])
                          Ppat_var "drop" (typing/includemod_errorprinter.ml[397,12823+12]..[397,12823+16])
                        expression (typing/includemod_errorprinter.ml[397,12823+19]..[399,12891+29])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[398,12851+8]..[398,12851+29])
                                Ppat_construct "::" (typing/includemod_errorprinter.ml[398,12851+25]..[398,12851+27])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[398,12851+8]..[398,12851+29]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (typing/includemod_errorprinter.ml[398,12851+8]..[398,12851+24])
                                        Ppat_construct "Diffing.Insert" (typing/includemod_errorprinter.ml[398,12851+8]..[398,12851+22])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[398,12851+23]..[398,12851+24])
                                            Ppat_any
                                      pattern (typing/includemod_errorprinter.ml[398,12851+28]..[398,12851+29])
                                        Ppat_var "q" (typing/includemod_errorprinter.ml[398,12851+28]..[398,12851+29])
                                    ]
                              expression (typing/includemod_errorprinter.ml[398,12851+33]..[398,12851+39])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[398,12851+33]..[398,12851+37])
                                  Pexp_ident "drop" (typing/includemod_errorprinter.ml[398,12851+33]..[398,12851+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[398,12851+38]..[398,12851+39])
                                      Pexp_ident "q" (typing/includemod_errorprinter.ml[398,12851+38]..[398,12851+39])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[399,12891+8]..[399,12891+12])
                                Ppat_var "rest" (typing/includemod_errorprinter.ml[399,12891+8]..[399,12891+12])
                              expression (typing/includemod_errorprinter.ml[399,12891+16]..[399,12891+29])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[399,12891+16]..[399,12891+24])
                                  Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[399,12891+16]..[399,12891+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[399,12891+25]..[399,12891+29])
                                      Pexp_ident "rest" (typing/includemod_errorprinter.ml[399,12891+25]..[399,12891+29])
                                ]
                          ]
                    ]
                    expression (typing/includemod_errorprinter.ml[400,12924+4]..[400,12924+25])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[400,12924+4]..[400,12924+8])
                        Pexp_ident "drop" (typing/includemod_errorprinter.ml[400,12924+4]..[400,12924+8])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[400,12924+9]..[400,12924+25])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[400,12924+10]..[400,12924+18])
                              Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[400,12924+10]..[400,12924+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[400,12924+19]..[400,12924+24])
                                  Pexp_ident "patch" (typing/includemod_errorprinter.ml[400,12924+19]..[400,12924+24])
                            ]
                      ]
            ]
          structure_item (typing/includemod_errorprinter.ml[402,12951+2]..[404,13060+52])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[402,12951+6]..[402,12951+19])
                  Ppat_var "prepare_patch" (typing/includemod_errorprinter.ml[402,12951+6]..[402,12951+19])
                expression (typing/includemod_errorprinter.ml[402,12951+20]..[404,13060+52]) ghost
                  Pexp_fun
                  Labelled "drop"
                  None
                  pattern (typing/includemod_errorprinter.ml[402,12951+21]..[402,12951+25])
                    Ppat_var "drop" (typing/includemod_errorprinter.ml[402,12951+21]..[402,12951+25])
                  expression (typing/includemod_errorprinter.ml[402,12951+26]..[404,13060+52]) ghost
                    Pexp_fun
                    Labelled "ctx"
                    None
                    pattern (typing/includemod_errorprinter.ml[402,12951+27]..[402,12951+30])
                      Ppat_var "ctx" (typing/includemod_errorprinter.ml[402,12951+27]..[402,12951+30])
                    expression (typing/includemod_errorprinter.ml[402,12951+31]..[404,13060+52]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[402,12951+31]..[402,12951+36])
                        Ppat_var "patch" (typing/includemod_errorprinter.ml[402,12951+31]..[402,12951+36])
                      expression (typing/includemod_errorprinter.ml[403,12990+4]..[404,13060+52])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[403,12990+8]..[403,12990+19])
                              Ppat_var "drop_suffix" (typing/includemod_errorprinter.ml[403,12990+8]..[403,12990+19])
                            expression (typing/includemod_errorprinter.ml[403,12990+20]..[403,12990+66]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[403,12990+20]..[403,12990+21])
                                Ppat_var "x" (typing/includemod_errorprinter.ml[403,12990+20]..[403,12990+21])
                              expression (typing/includemod_errorprinter.ml[403,12990+24]..[403,12990+66])
                                Pexp_ifthenelse
                                expression (typing/includemod_errorprinter.ml[403,12990+27]..[403,12990+31])
                                  Pexp_ident "drop" (typing/includemod_errorprinter.ml[403,12990+27]..[403,12990+31])
                                expression (typing/includemod_errorprinter.ml[403,12990+37]..[403,12990+59])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[403,12990+37]..[403,12990+57])
                                    Pexp_ident "drop_inserted_suffix" (typing/includemod_errorprinter.ml[403,12990+37]..[403,12990+57])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[403,12990+58]..[403,12990+59])
                                        Pexp_ident "x" (typing/includemod_errorprinter.ml[403,12990+58]..[403,12990+59])
                                  ]
                                Some
                                  expression (typing/includemod_errorprinter.ml[403,12990+65]..[403,12990+66])
                                    Pexp_ident "x" (typing/includemod_errorprinter.ml[403,12990+65]..[403,12990+66])
                        ]
                        expression (typing/includemod_errorprinter.ml[404,13060+4]..[404,13060+52])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[404,13060+25]..[404,13060+27])
                            Pexp_ident "|>" (typing/includemod_errorprinter.ml[404,13060+25]..[404,13060+27])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[404,13060+4]..[404,13060+24])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[404,13060+10]..[404,13060+12])
                                  Pexp_ident "|>" (typing/includemod_errorprinter.ml[404,13060+10]..[404,13060+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[404,13060+4]..[404,13060+9])
                                      Pexp_ident "patch" (typing/includemod_errorprinter.ml[404,13060+4]..[404,13060+9])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[404,13060+13]..[404,13060+24])
                                      Pexp_ident "drop_suffix" (typing/includemod_errorprinter.ml[404,13060+13]..[404,13060+24])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[404,13060+28]..[404,13060+52])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[404,13060+28]..[404,13060+48])
                                  Pexp_ident "With_shorthand.patch" (typing/includemod_errorprinter.ml[404,13060+28]..[404,13060+48])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[404,13060+49]..[404,13060+52])
                                      Pexp_ident "ctx" (typing/includemod_errorprinter.ml[404,13060+49]..[404,13060+52])
                                ]
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[407,13115+2]..[455,14594+7])
            Pstr_module
            "Inclusion" (typing/includemod_errorprinter.ml[407,13115+9]..[407,13115+18])
              module_expr (typing/includemod_errorprinter.ml[407,13115+21]..[455,14594+7])
                Pmod_structure
                [
                  structure_item (typing/includemod_errorprinter.ml[409,13144+4]..[417,13359+66])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[409,13144+8]..[409,13144+11])
                          Ppat_var "got" (typing/includemod_errorprinter.ml[409,13144+8]..[409,13144+11])
                        expression (typing/includemod_errorprinter.ml[409,13144+12]..[417,13359+66]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[409,13144+12]..[409,13144+13])
                            Ppat_var "d" (typing/includemod_errorprinter.ml[409,13144+12]..[409,13144+13])
                          expression (typing/includemod_errorprinter.ml[410,13160+6]..[417,13359+66])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[410,13160+10]..[410,13160+40]) ghost
                                  Ppat_constraint
                                  pattern (typing/includemod_errorprinter.ml[410,13160+10]..[410,13160+17])
                                    Ppat_var "extract" (typing/includemod_errorprinter.ml[410,13160+10]..[410,13160+17])
                                  core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+40]) ghost
                                    Ptyp_poly
                                    core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+40])
                                      Ptyp_arrow
                                      Nolabel
                                      core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+35])
                                        Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[410,13160+21]..[410,13160+35])
                                        [
                                          core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+20])
                                            Ptyp_any
                                        ]
                                      core_type (typing/includemod_errorprinter.ml[410,13160+39]..[410,13160+40])
                                        Ptyp_any
                                expression (typing/includemod_errorprinter.ml[410,13160+10]..[415,13325+24])
                                  Pexp_constraint
                                  expression (typing/includemod_errorprinter.ml[410,13160+43]..[415,13325+24])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[411,13212+8]..[413,13254+29])
                                          Ppat_alias "x" (typing/includemod_errorprinter.ml[413,13254+28]..[413,13254+29])
                                          pattern (typing/includemod_errorprinter.ml[411,13212+8]..[413,13254+24])
                                            Ppat_or
                                            pattern (typing/includemod_errorprinter.ml[411,13212+8]..[412,13231+22])
                                              Ppat_or
                                              pattern (typing/includemod_errorprinter.ml[411,13212+8]..[411,13212+18])
                                                Ppat_construct "Delete" (typing/includemod_errorprinter.ml[411,13212+8]..[411,13212+14])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[411,13212+15]..[411,13212+18])
                                                    Ppat_var "mty" (typing/includemod_errorprinter.ml[411,13212+15]..[411,13212+18])
                                              pattern (typing/includemod_errorprinter.ml[412,13231+8]..[412,13231+22])
                                                Ppat_construct "Keep" (typing/includemod_errorprinter.ml[412,13231+8]..[412,13231+12])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[412,13231+13]..[412,13231+22])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includemod_errorprinter.ml[412,13231+14]..[412,13231+17])
                                                        Ppat_var "mty" (typing/includemod_errorprinter.ml[412,13231+14]..[412,13231+17])
                                                      pattern (typing/includemod_errorprinter.ml[412,13231+18]..[412,13231+19])
                                                        Ppat_any
                                                      pattern (typing/includemod_errorprinter.ml[412,13231+20]..[412,13231+21])
                                                        Ppat_any
                                                    ]
                                            pattern (typing/includemod_errorprinter.ml[413,13254+8]..[413,13254+24])
                                              Ppat_construct "Change" (typing/includemod_errorprinter.ml[413,13254+8]..[413,13254+14])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[413,13254+15]..[413,13254+24])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[413,13254+16]..[413,13254+19])
                                                      Ppat_var "mty" (typing/includemod_errorprinter.ml[413,13254+16]..[413,13254+19])
                                                    pattern (typing/includemod_errorprinter.ml[413,13254+20]..[413,13254+21])
                                                      Ppat_any
                                                    pattern (typing/includemod_errorprinter.ml[413,13254+22]..[413,13254+23])
                                                      Ppat_any
                                                  ]
                                        expression (typing/includemod_errorprinter.ml[414,13287+10]..[414,13287+37])
                                          Pexp_construct "Some" (typing/includemod_errorprinter.ml[414,13287+10]..[414,13287+14])
                                          Some
                                            expression (typing/includemod_errorprinter.ml[414,13287+15]..[414,13287+37])
                                              Pexp_tuple
                                              [
                                                expression (typing/includemod_errorprinter.ml[414,13287+16]..[414,13287+28])
                                                  Pexp_apply
                                                  expression (typing/includemod_errorprinter.ml[414,13287+16]..[414,13287+24])
                                                    Pexp_ident "param_id" (typing/includemod_errorprinter.ml[414,13287+16]..[414,13287+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[414,13287+25]..[414,13287+28])
                                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[414,13287+25]..[414,13287+28])
                                                  ]
                                                expression (typing/includemod_errorprinter.ml[414,13287+29]..[414,13287+36])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includemod_errorprinter.ml[414,13287+30]..[414,13287+31])
                                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[414,13287+30]..[414,13287+31])
                                                    expression (typing/includemod_errorprinter.ml[414,13287+32]..[414,13287+35])
                                                      Pexp_ident "mty" (typing/includemod_errorprinter.ml[414,13287+32]..[414,13287+35])
                                                  ]
                                              ]
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[415,13325+8]..[415,13325+16])
                                          Ppat_construct "Insert" (typing/includemod_errorprinter.ml[415,13325+8]..[415,13325+14])
                                          Some
                                            []
                                            pattern (typing/includemod_errorprinter.ml[415,13325+15]..[415,13325+16])
                                              Ppat_any
                                        expression (typing/includemod_errorprinter.ml[415,13325+20]..[415,13325+24])
                                          Pexp_construct "None" (typing/includemod_errorprinter.ml[415,13325+20]..[415,13325+24])
                                          None
                                    ]
                                  core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+40])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+35])
                                      Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[410,13160+21]..[410,13160+35])
                                      [
                                        core_type (typing/includemod_errorprinter.ml[410,13160+19]..[410,13160+20])
                                          Ptyp_any
                                      ]
                                    core_type (typing/includemod_errorprinter.ml[410,13160+39]..[410,13160+40])
                                      Ptyp_any
                            ]
                            expression (typing/includemod_errorprinter.ml[417,13359+6]..[417,13359+66])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[417,13359+6]..[417,13359+19])
                                Pexp_ident "pretty_params" (typing/includemod_errorprinter.ml[417,13359+6]..[417,13359+19])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[417,13359+20]..[417,13359+25])
                                    Pexp_ident "space" (typing/includemod_errorprinter.ml[417,13359+20]..[417,13359+25])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[417,13359+26]..[417,13359+33])
                                    Pexp_ident "extract" (typing/includemod_errorprinter.ml[417,13359+26]..[417,13359+33])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[417,13359+34]..[417,13359+64])
                                    Pexp_ident "With_shorthand.qualified_param" (typing/includemod_errorprinter.ml[417,13359+34]..[417,13359+64])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[417,13359+65]..[417,13359+66])
                                    Pexp_ident "d" (typing/includemod_errorprinter.ml[417,13359+65]..[417,13359+66])
                              ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[419,13427+4]..[422,13543+39])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[419,13427+8]..[419,13427+14])
                          Ppat_var "insert" (typing/includemod_errorprinter.ml[419,13427+8]..[419,13427+14])
                        expression (typing/includemod_errorprinter.ml[419,13427+15]..[422,13543+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[419,13427+15]..[419,13427+18])
                            Ppat_var "mty" (typing/includemod_errorprinter.ml[419,13427+15]..[419,13427+18])
                          expression (typing/includemod_errorprinter.ml[420,13448+6]..[422,13543+39])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[420,13448+6]..[420,13448+20])
                              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[420,13448+6]..[420,13448+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[421,13469+8]..[421,13469+73])
                                  Pexp_constant PConst_string("An argument appears to be missing with module type@;<1 2>@[%t@]",(typing/includemod_errorprinter.ml[421,13469+9]..[421,13469+72]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[422,13543+8]..[422,13543+39])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[422,13543+9]..[422,13543+34])
                                    Pexp_ident "With_shorthand.definition" (typing/includemod_errorprinter.ml[422,13543+9]..[422,13543+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[422,13543+35]..[422,13543+38])
                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[422,13543+35]..[422,13543+38])
                                  ]
                            ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[424,13584+4]..[427,13694+39])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[424,13584+8]..[424,13584+14])
                          Ppat_var "delete" (typing/includemod_errorprinter.ml[424,13584+8]..[424,13584+14])
                        expression (typing/includemod_errorprinter.ml[424,13584+15]..[427,13694+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[424,13584+15]..[424,13584+18])
                            Ppat_var "mty" (typing/includemod_errorprinter.ml[424,13584+15]..[424,13584+18])
                          expression (typing/includemod_errorprinter.ml[425,13605+6]..[427,13694+39])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[425,13605+6]..[425,13605+20])
                              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[425,13605+6]..[425,13605+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[426,13626+8]..[426,13626+67])
                                  Pexp_constant PConst_string("An extra argument is provided of module type@;<1 2>@[%t@]",(typing/includemod_errorprinter.ml[426,13626+9]..[426,13626+66]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[427,13694+8]..[427,13694+39])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[427,13694+9]..[427,13694+34])
                                    Pexp_ident "With_shorthand.definition" (typing/includemod_errorprinter.ml[427,13694+9]..[427,13694+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[427,13694+35]..[427,13694+38])
                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[427,13694+35]..[427,13694+38])
                                  ]
                            ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[429,13735+6]..[433,13853+34])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[429,13735+10]..[429,13735+12])
                          Ppat_var "ok" (typing/includemod_errorprinter.ml[429,13735+10]..[429,13735+12])
                        expression (typing/includemod_errorprinter.ml[429,13735+13]..[433,13853+34]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[429,13735+13]..[429,13735+14])
                            Ppat_var "x" (typing/includemod_errorprinter.ml[429,13735+13]..[429,13735+14])
                          expression (typing/includemod_errorprinter.ml[429,13735+15]..[433,13853+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[429,13735+15]..[429,13735+16])
                              Ppat_var "y" (typing/includemod_errorprinter.ml[429,13735+15]..[429,13735+16])
                            expression (typing/includemod_errorprinter.ml[430,13754+8]..[433,13853+34])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[430,13754+8]..[430,13754+22])
                                Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[430,13754+8]..[430,13754+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[431,13777+10]..[431,13777+40])
                                    Pexp_constant PConst_string("Module types %t and %t match",(typing/includemod_errorprinter.ml[431,13777+11]..[431,13777+39]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[432,13818+10]..[432,13818+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[432,13818+11]..[432,13818+31])
                                      Pexp_ident "With_shorthand.param" (typing/includemod_errorprinter.ml[432,13818+11]..[432,13818+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[432,13818+32]..[432,13818+33])
                                          Pexp_ident "x" (typing/includemod_errorprinter.ml[432,13818+32]..[432,13818+33])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[433,13853+10]..[433,13853+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[433,13853+11]..[433,13853+31])
                                      Pexp_ident "With_shorthand.param" (typing/includemod_errorprinter.ml[433,13853+11]..[433,13853+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[433,13853+32]..[433,13853+33])
                                          Pexp_ident "y" (typing/includemod_errorprinter.ml[433,13853+32]..[433,13853+33])
                                    ]
                              ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[435,13889+6]..[441,14126+23])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[435,13889+10]..[435,13889+14])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[435,13889+10]..[435,13889+14])
                        expression (typing/includemod_errorprinter.ml[435,13889+15]..[441,14126+23]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[435,13889+15]..[435,13889+16])
                            Ppat_var "g" (typing/includemod_errorprinter.ml[435,13889+15]..[435,13889+16])
                          expression (typing/includemod_errorprinter.ml[435,13889+17]..[441,14126+23]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[435,13889+17]..[435,13889+18])
                              Ppat_var "e" (typing/includemod_errorprinter.ml[435,13889+17]..[435,13889+18])
                            expression (typing/includemod_errorprinter.ml[435,13889+19]..[441,14126+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[435,13889+19]..[435,13889+23])
                                Ppat_var "more" (typing/includemod_errorprinter.ml[435,13889+19]..[435,13889+23])
                              expression (typing/includemod_errorprinter.ml[436,13915+8]..[441,14126+23])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[436,13915+12]..[436,13915+13])
                                      Ppat_var "g" (typing/includemod_errorprinter.ml[436,13915+12]..[436,13915+13])
                                    expression (typing/includemod_errorprinter.ml[436,13915+16]..[436,13915+43])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[436,13915+16]..[436,13915+41])
                                        Pexp_ident "With_shorthand.definition" (typing/includemod_errorprinter.ml[436,13915+16]..[436,13915+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[436,13915+42]..[436,13915+43])
                                            Pexp_ident "g" (typing/includemod_errorprinter.ml[436,13915+42]..[436,13915+43])
                                      ]
                                ]
                                expression (typing/includemod_errorprinter.ml[437,13962+8]..[441,14126+23])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includemod_errorprinter.ml[437,13962+12]..[437,13962+13])
                                        Ppat_var "e" (typing/includemod_errorprinter.ml[437,13962+12]..[437,13962+13])
                                      expression (typing/includemod_errorprinter.ml[437,13962+16]..[437,13962+43])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[437,13962+16]..[437,13962+41])
                                          Pexp_ident "With_shorthand.definition" (typing/includemod_errorprinter.ml[437,13962+16]..[437,13962+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[437,13962+42]..[437,13962+43])
                                              Pexp_ident "e" (typing/includemod_errorprinter.ml[437,13962+42]..[437,13962+43])
                                        ]
                                  ]
                                  expression (typing/includemod_errorprinter.ml[438,14009+8]..[441,14126+23])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[438,14009+8]..[438,14009+22])
                                      Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[438,14009+8]..[438,14009+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[439,14032+10]..[440,14105+20])
                                          Pexp_constant PConst_string("Module types do not match:@ @[%t@]@;<1 -2>does not include@ @[%t@]%t",(typing/includemod_errorprinter.ml[439,14032+11]..[440,14105+19]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[441,14126+10]..[441,14126+11])
                                          Pexp_ident "g" (typing/includemod_errorprinter.ml[441,14126+10]..[441,14126+11])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[441,14126+12]..[441,14126+13])
                                          Pexp_ident "e" (typing/includemod_errorprinter.ml[441,14126+12]..[441,14126+13])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[441,14126+14]..[441,14126+23])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[441,14126+15]..[441,14126+19])
                                            Pexp_ident "more" (typing/includemod_errorprinter.ml[441,14126+15]..[441,14126+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[441,14126+20]..[441,14126+22])
                                                Pexp_construct "()" (typing/includemod_errorprinter.ml[441,14126+20]..[441,14126+22])
                                                None
                                          ]
                                    ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[443,14151+6]..[449,14366+74])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[443,14151+10]..[443,14151+22])
                          Ppat_var "incompatible" (typing/includemod_errorprinter.ml[443,14151+10]..[443,14151+22])
                        expression (typing/includemod_errorprinter.ml[443,14151+25]..[449,14366+74])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[444,14185+10]..[444,14185+20])
                                Ppat_construct "Types.Unit" (typing/includemod_errorprinter.ml[444,14185+10]..[444,14185+20])
                                None
                              expression (typing/includemod_errorprinter.ml[445,14209+12]..[446,14236+75])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[445,14209+12]..[445,14209+26])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[445,14209+12]..[445,14209+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[446,14236+14]..[446,14236+75])
                                      Pexp_constant PConst_string("The functor was expected to be applicative at this position",(typing/includemod_errorprinter.ml[446,14236+15]..[446,14236+74]),None)
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[447,14312+10]..[447,14312+23])
                                Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[447,14312+10]..[447,14312+21])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[447,14312+22]..[447,14312+23])
                                    Ppat_any
                              expression (typing/includemod_errorprinter.ml[448,14339+12]..[449,14366+74])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[448,14339+12]..[448,14339+26])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[448,14339+12]..[448,14339+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[449,14366+14]..[449,14366+74])
                                      Pexp_constant PConst_string("The functor was expected to be generative at this position",(typing/includemod_errorprinter.ml[449,14366+15]..[449,14366+73]),None)
                                ]
                          ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[451,14442+6]..[453,14541+51])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[451,14442+10]..[451,14442+15])
                          Ppat_var "patch" (typing/includemod_errorprinter.ml[451,14442+10]..[451,14442+15])
                        expression (typing/includemod_errorprinter.ml[451,14442+16]..[453,14541+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[451,14442+16]..[451,14442+19])
                            Ppat_var "env" (typing/includemod_errorprinter.ml[451,14442+16]..[451,14442+19])
                          expression (typing/includemod_errorprinter.ml[451,14442+20]..[453,14541+51]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[451,14442+20]..[451,14442+23])
                              Ppat_var "got" (typing/includemod_errorprinter.ml[451,14442+20]..[451,14442+23])
                            expression (typing/includemod_errorprinter.ml[451,14442+24]..[453,14541+51]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[451,14442+24]..[451,14442+32])
                                Ppat_var "expected" (typing/includemod_errorprinter.ml[451,14442+24]..[451,14442+32])
                              expression (typing/includemod_errorprinter.ml[452,14477+8]..[453,14541+51])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[453,14541+8]..[453,14541+10])
                                  Pexp_ident "|>" (typing/includemod_errorprinter.ml[453,14541+8]..[453,14541+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[452,14477+8]..[452,14477+63])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[452,14477+8]..[452,14477+46])
                                        Pexp_ident "Includemod.Functor_inclusion_diff.diff" (typing/includemod_errorprinter.ml[452,14477+8]..[452,14477+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[452,14477+47]..[452,14477+50])
                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[452,14477+47]..[452,14477+50])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[452,14477+51]..[452,14477+54])
                                            Pexp_ident "got" (typing/includemod_errorprinter.ml[452,14477+51]..[452,14477+54])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[452,14477+55]..[452,14477+63])
                                            Pexp_ident "expected" (typing/includemod_errorprinter.ml[452,14477+55]..[452,14477+63])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[453,14541+11]..[453,14541+51])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[453,14541+11]..[453,14541+24])
                                        Pexp_ident "prepare_patch" (typing/includemod_errorprinter.ml[453,14541+11]..[453,14541+24])
                                      [
                                        <arg>
                                        Labelled "drop"
                                          expression (typing/includemod_errorprinter.ml[453,14541+31]..[453,14541+36])
                                            Pexp_construct "false" (typing/includemod_errorprinter.ml[453,14541+31]..[453,14541+36])
                                            None
                                        <arg>
                                        Labelled "ctx"
                                          expression (typing/includemod_errorprinter.ml[453,14541+42]..[453,14541+51])
                                            Pexp_construct "Inclusion" (typing/includemod_errorprinter.ml[453,14541+42]..[453,14541+51])
                                            None
                                      ]
                                ]
                    ]
                ]
          structure_item (typing/includemod_errorprinter.ml[457,14603+2]..[522,16566+5])
            Pstr_module
            "App" (typing/includemod_errorprinter.ml[457,14603+9]..[457,14603+12])
              module_expr (typing/includemod_errorprinter.ml[457,14603+15]..[522,16566+5])
                Pmod_structure
                [
                  structure_item (typing/includemod_errorprinter.ml[459,14626+4]..[461,14707+42])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[459,14626+8]..[459,14626+13])
                          Ppat_var "patch" (typing/includemod_errorprinter.ml[459,14626+8]..[459,14626+13])
                        expression (typing/includemod_errorprinter.ml[459,14626+14]..[461,14707+42]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[459,14626+14]..[459,14626+17])
                            Ppat_var "env" (typing/includemod_errorprinter.ml[459,14626+14]..[459,14626+17])
                          expression (typing/includemod_errorprinter.ml[459,14626+18]..[461,14707+42]) ghost
                            Pexp_fun
                            Labelled "f"
                            None
                            pattern (typing/includemod_errorprinter.ml[459,14626+19]..[459,14626+20])
                              Ppat_var "f" (typing/includemod_errorprinter.ml[459,14626+19]..[459,14626+20])
                            expression (typing/includemod_errorprinter.ml[459,14626+21]..[461,14707+42]) ghost
                              Pexp_fun
                              Labelled "args"
                              None
                              pattern (typing/includemod_errorprinter.ml[459,14626+22]..[459,14626+26])
                                Ppat_var "args" (typing/includemod_errorprinter.ml[459,14626+22]..[459,14626+26])
                              expression (typing/includemod_errorprinter.ml[460,14655+6]..[461,14707+42])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[461,14707+6]..[461,14707+8])
                                  Pexp_ident "|>" (typing/includemod_errorprinter.ml[461,14707+6]..[461,14707+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[460,14655+6]..[460,14655+51])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[460,14655+6]..[460,14655+38])
                                        Pexp_ident "Includemod.Functor_app_diff.diff" (typing/includemod_errorprinter.ml[460,14655+6]..[460,14655+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[460,14655+39]..[460,14655+42])
                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[460,14655+39]..[460,14655+42])
                                        <arg>
                                        Labelled "f"
                                          expression (typing/includemod_errorprinter.ml[460,14655+44]..[460,14655+45])
                                            Pexp_ident "f" (typing/includemod_errorprinter.ml[460,14655+44]..[460,14655+45])
                                        <arg>
                                        Labelled "args"
                                          expression (typing/includemod_errorprinter.ml[460,14655+47]..[460,14655+51])
                                            Pexp_ident "args" (typing/includemod_errorprinter.ml[460,14655+47]..[460,14655+51])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[461,14707+9]..[461,14707+42])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[461,14707+9]..[461,14707+22])
                                        Pexp_ident "prepare_patch" (typing/includemod_errorprinter.ml[461,14707+9]..[461,14707+22])
                                      [
                                        <arg>
                                        Labelled "drop"
                                          expression (typing/includemod_errorprinter.ml[461,14707+29]..[461,14707+33])
                                            Pexp_construct "true" (typing/includemod_errorprinter.ml[461,14707+29]..[461,14707+33])
                                            None
                                        <arg>
                                        Labelled "ctx"
                                          expression (typing/includemod_errorprinter.ml[461,14707+39]..[461,14707+42])
                                            Pexp_construct "App" (typing/includemod_errorprinter.ml[461,14707+39]..[461,14707+42])
                                            None
                                      ]
                                ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[463,14751+4]..[471,14968+54])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[463,14751+8]..[463,14751+11])
                          Ppat_var "got" (typing/includemod_errorprinter.ml[463,14751+8]..[463,14751+11])
                        expression (typing/includemod_errorprinter.ml[463,14751+12]..[471,14968+54]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[463,14751+12]..[463,14751+13])
                            Ppat_var "d" (typing/includemod_errorprinter.ml[463,14751+12]..[463,14751+13])
                          expression (typing/includemod_errorprinter.ml[464,14767+6]..[471,14968+54])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[464,14767+10]..[464,14767+40]) ghost
                                  Ppat_constraint
                                  pattern (typing/includemod_errorprinter.ml[464,14767+10]..[464,14767+17])
                                    Ppat_var "extract" (typing/includemod_errorprinter.ml[464,14767+10]..[464,14767+17])
                                  core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+40]) ghost
                                    Ptyp_poly
                                    core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+40])
                                      Ptyp_arrow
                                      Nolabel
                                      core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+35])
                                        Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[464,14767+21]..[464,14767+35])
                                        [
                                          core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+20])
                                            Ptyp_any
                                        ]
                                      core_type (typing/includemod_errorprinter.ml[464,14767+39]..[464,14767+40])
                                        Ptyp_any
                                expression (typing/includemod_errorprinter.ml[464,14767+10]..[469,14932+26])
                                  Pexp_constraint
                                  expression (typing/includemod_errorprinter.ml[464,14767+43]..[469,14932+26])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[465,14819+10]..[467,14865+31])
                                          Ppat_alias "x" (typing/includemod_errorprinter.ml[467,14865+30]..[467,14865+31])
                                          pattern (typing/includemod_errorprinter.ml[465,14819+10]..[467,14865+26])
                                            Ppat_or
                                            pattern (typing/includemod_errorprinter.ml[465,14819+10]..[466,14840+24])
                                              Ppat_or
                                              pattern (typing/includemod_errorprinter.ml[465,14819+10]..[465,14819+20])
                                                Ppat_construct "Delete" (typing/includemod_errorprinter.ml[465,14819+10]..[465,14819+16])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[465,14819+17]..[465,14819+20])
                                                    Ppat_var "mty" (typing/includemod_errorprinter.ml[465,14819+17]..[465,14819+20])
                                              pattern (typing/includemod_errorprinter.ml[466,14840+10]..[466,14840+24])
                                                Ppat_construct "Keep" (typing/includemod_errorprinter.ml[466,14840+10]..[466,14840+14])
                                                Some
                                                  []
                                                  pattern (typing/includemod_errorprinter.ml[466,14840+15]..[466,14840+24])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/includemod_errorprinter.ml[466,14840+16]..[466,14840+19])
                                                        Ppat_var "mty" (typing/includemod_errorprinter.ml[466,14840+16]..[466,14840+19])
                                                      pattern (typing/includemod_errorprinter.ml[466,14840+20]..[466,14840+21])
                                                        Ppat_any
                                                      pattern (typing/includemod_errorprinter.ml[466,14840+22]..[466,14840+23])
                                                        Ppat_any
                                                    ]
                                            pattern (typing/includemod_errorprinter.ml[467,14865+10]..[467,14865+26])
                                              Ppat_construct "Change" (typing/includemod_errorprinter.ml[467,14865+10]..[467,14865+16])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[467,14865+17]..[467,14865+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[467,14865+18]..[467,14865+21])
                                                      Ppat_var "mty" (typing/includemod_errorprinter.ml[467,14865+18]..[467,14865+21])
                                                    pattern (typing/includemod_errorprinter.ml[467,14865+22]..[467,14865+23])
                                                      Ppat_any
                                                    pattern (typing/includemod_errorprinter.ml[467,14865+24]..[467,14865+25])
                                                      Ppat_any
                                                  ]
                                        expression (typing/includemod_errorprinter.ml[468,14900+12]..[468,14900+31])
                                          Pexp_construct "Some" (typing/includemod_errorprinter.ml[468,14900+12]..[468,14900+16])
                                          Some
                                            expression (typing/includemod_errorprinter.ml[468,14900+17]..[468,14900+31])
                                              Pexp_tuple
                                              [
                                                expression (typing/includemod_errorprinter.ml[468,14900+18]..[468,14900+22])
                                                  Pexp_construct "None" (typing/includemod_errorprinter.ml[468,14900+18]..[468,14900+22])
                                                  None
                                                expression (typing/includemod_errorprinter.ml[468,14900+23]..[468,14900+30])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includemod_errorprinter.ml[468,14900+24]..[468,14900+25])
                                                      Pexp_ident "x" (typing/includemod_errorprinter.ml[468,14900+24]..[468,14900+25])
                                                    expression (typing/includemod_errorprinter.ml[468,14900+26]..[468,14900+29])
                                                      Pexp_ident "mty" (typing/includemod_errorprinter.ml[468,14900+26]..[468,14900+29])
                                                  ]
                                              ]
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[469,14932+10]..[469,14932+18])
                                          Ppat_construct "Insert" (typing/includemod_errorprinter.ml[469,14932+10]..[469,14932+16])
                                          Some
                                            []
                                            pattern (typing/includemod_errorprinter.ml[469,14932+17]..[469,14932+18])
                                              Ppat_any
                                        expression (typing/includemod_errorprinter.ml[469,14932+22]..[469,14932+26])
                                          Pexp_construct "None" (typing/includemod_errorprinter.ml[469,14932+22]..[469,14932+26])
                                          None
                                    ]
                                  core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+40])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+35])
                                      Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[464,14767+21]..[464,14767+35])
                                      [
                                        core_type (typing/includemod_errorprinter.ml[464,14767+19]..[464,14767+20])
                                          Ptyp_any
                                      ]
                                    core_type (typing/includemod_errorprinter.ml[464,14767+39]..[464,14767+40])
                                      Ptyp_any
                            ]
                            expression (typing/includemod_errorprinter.ml[471,14968+6]..[471,14968+54])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[471,14968+6]..[471,14968+19])
                                Pexp_ident "pretty_params" (typing/includemod_errorprinter.ml[471,14968+6]..[471,14968+19])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[471,14968+20]..[471,14968+25])
                                    Pexp_ident "space" (typing/includemod_errorprinter.ml[471,14968+20]..[471,14968+25])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[471,14968+26]..[471,14968+33])
                                    Pexp_ident "extract" (typing/includemod_errorprinter.ml[471,14968+26]..[471,14968+33])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[471,14968+34]..[471,14968+52])
                                    Pexp_ident "With_shorthand.arg" (typing/includemod_errorprinter.ml[471,14968+34]..[471,14968+52])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[471,14968+53]..[471,14968+54])
                                    Pexp_ident "d" (typing/includemod_errorprinter.ml[471,14968+53]..[471,14968+54])
                              ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[473,15024+4]..[476,15130+51])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[473,15024+8]..[473,15024+14])
                          Ppat_var "delete" (typing/includemod_errorprinter.ml[473,15024+8]..[473,15024+14])
                        expression (typing/includemod_errorprinter.ml[473,15024+15]..[476,15130+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[473,15024+15]..[473,15024+18])
                            Ppat_var "mty" (typing/includemod_errorprinter.ml[473,15024+15]..[473,15024+18])
                          expression (typing/includemod_errorprinter.ml[474,15045+6]..[476,15130+51])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[474,15045+6]..[474,15045+20])
                              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[474,15045+6]..[474,15045+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[475,15066+8]..[475,15066+63])
                                  Pexp_constant PConst_string("The following extra argument is provided@;<1 2>@[%t@]",(typing/includemod_errorprinter.ml[475,15066+9]..[475,15066+62]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[476,15130+8]..[476,15130+51])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[476,15130+9]..[476,15130+46])
                                    Pexp_ident "With_shorthand.definition_of_argument" (typing/includemod_errorprinter.ml[476,15130+9]..[476,15130+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[476,15130+47]..[476,15130+50])
                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[476,15130+47]..[476,15130+50])
                                  ]
                            ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[478,15183+4]..[478,15183+33])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[478,15183+8]..[478,15183+14])
                          Ppat_var "insert" (typing/includemod_errorprinter.ml[478,15183+8]..[478,15183+14])
                        expression (typing/includemod_errorprinter.ml[478,15183+17]..[478,15183+33])
                          Pexp_ident "Inclusion.insert" (typing/includemod_errorprinter.ml[478,15183+17]..[478,15183+33])
                    ]
                  structure_item (typing/includemod_errorprinter.ml[480,15218+4]..[489,15540+20])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[480,15218+8]..[480,15218+10])
                          Ppat_var "ok" (typing/includemod_errorprinter.ml[480,15218+8]..[480,15218+10])
                        expression (typing/includemod_errorprinter.ml[480,15218+11]..[489,15540+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[480,15218+11]..[480,15218+12])
                            Ppat_var "x" (typing/includemod_errorprinter.ml[480,15218+11]..[480,15218+12])
                          expression (typing/includemod_errorprinter.ml[480,15218+13]..[489,15540+20]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[480,15218+13]..[480,15218+14])
                              Ppat_var "y" (typing/includemod_errorprinter.ml[480,15218+13]..[480,15218+14])
                            expression (typing/includemod_errorprinter.ml[481,15235+6]..[489,15540+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includemod_errorprinter.ml[481,15235+10]..[481,15235+22])
                                    Ppat_var "pp_orig_name" (typing/includemod_errorprinter.ml[481,15235+10]..[481,15235+22])
                                  expression (typing/includemod_errorprinter.ml[481,15235+25]..[484,15402+21])
                                    Pexp_match
                                    expression (typing/includemod_errorprinter.ml[481,15235+31]..[481,15235+61])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[481,15235+31]..[481,15235+59])
                                        Pexp_ident "With_shorthand.functor_param" (typing/includemod_errorprinter.ml[481,15235+31]..[481,15235+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[481,15235+60]..[481,15235+61])
                                            Pexp_ident "y" (typing/includemod_errorprinter.ml[481,15235+60]..[481,15235+61])
                                      ]
                                    [
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[482,15302+10]..[482,15302+48])
                                          Ppat_construct "With_shorthand.Named" (typing/includemod_errorprinter.ml[482,15302+10]..[482,15302+30])
                                          Some
                                            []
                                            pattern (typing/includemod_errorprinter.ml[482,15302+31]..[482,15302+48])
                                              Ppat_tuple
                                              [
                                                pattern (typing/includemod_errorprinter.ml[482,15302+32]..[482,15302+33])
                                                  Ppat_any
                                                pattern (typing/includemod_errorprinter.ml[482,15302+35]..[482,15302+47])
                                                  Ppat_construct "Original" (typing/includemod_errorprinter.ml[482,15302+35]..[482,15302+43])
                                                  Some
                                                    []
                                                    pattern (typing/includemod_errorprinter.ml[482,15302+44]..[482,15302+47])
                                                      Ppat_var "mty" (typing/includemod_errorprinter.ml[482,15302+44]..[482,15302+47])
                                              ]
                                        expression (typing/includemod_errorprinter.ml[483,15354+12]..[483,15354+47])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[483,15354+12]..[483,15354+26])
                                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[483,15354+12]..[483,15354+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[483,15354+27]..[483,15354+32])
                                                Pexp_constant PConst_string(" %t",(typing/includemod_errorprinter.ml[483,15354+28]..[483,15354+31]),None)
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[483,15354+33]..[483,15354+47])
                                                Pexp_apply
                                                expression (typing/includemod_errorprinter.ml[483,15354+34]..[483,15354+42])
                                                  Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[483,15354+34]..[483,15354+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/includemod_errorprinter.ml[483,15354+43]..[483,15354+46])
                                                      Pexp_ident "mty" (typing/includemod_errorprinter.ml[483,15354+43]..[483,15354+46])
                                                ]
                                          ]
                                      <case>
                                        pattern (typing/includemod_errorprinter.ml[484,15402+10]..[484,15402+11])
                                          Ppat_any
                                        expression (typing/includemod_errorprinter.ml[484,15402+15]..[484,15402+21])
                                          Pexp_ident "ignore" (typing/includemod_errorprinter.ml[484,15402+15]..[484,15402+21])
                                    ]
                              ]
                              expression (typing/includemod_errorprinter.ml[486,15433+6]..[489,15540+20])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[486,15433+6]..[486,15433+20])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[486,15433+6]..[486,15433+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[487,15454+8]..[487,15454+54])
                                      Pexp_constant PConst_string("Module %t matches the expected module type%t",(typing/includemod_errorprinter.ml[487,15454+9]..[487,15454+53]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[488,15509+8]..[488,15509+30])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[488,15509+9]..[488,15509+27])
                                        Pexp_ident "With_shorthand.arg" (typing/includemod_errorprinter.ml[488,15509+9]..[488,15509+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[488,15509+28]..[488,15509+29])
                                            Pexp_ident "x" (typing/includemod_errorprinter.ml[488,15509+28]..[488,15509+29])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[489,15540+8]..[489,15540+20])
                                      Pexp_ident "pp_orig_name" (typing/includemod_errorprinter.ml[489,15540+8]..[489,15540+20])
                                ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[491,15562+4]..[497,15796+21])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[491,15562+8]..[491,15562+12])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[491,15562+8]..[491,15562+12])
                        expression (typing/includemod_errorprinter.ml[491,15562+13]..[497,15796+21]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[491,15562+13]..[491,15562+14])
                            Ppat_var "g" (typing/includemod_errorprinter.ml[491,15562+13]..[491,15562+14])
                          expression (typing/includemod_errorprinter.ml[491,15562+15]..[497,15796+21]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[491,15562+15]..[491,15562+16])
                              Ppat_var "e" (typing/includemod_errorprinter.ml[491,15562+15]..[491,15562+16])
                            expression (typing/includemod_errorprinter.ml[491,15562+17]..[497,15796+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[491,15562+17]..[491,15562+21])
                                Ppat_var "more" (typing/includemod_errorprinter.ml[491,15562+17]..[491,15562+21])
                              expression (typing/includemod_errorprinter.ml[492,15586+6]..[497,15796+21])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[492,15586+10]..[492,15586+11])
                                      Ppat_var "g" (typing/includemod_errorprinter.ml[492,15586+10]..[492,15586+11])
                                    expression (typing/includemod_errorprinter.ml[492,15586+14]..[492,15586+53])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[492,15586+14]..[492,15586+51])
                                        Pexp_ident "With_shorthand.definition_of_argument" (typing/includemod_errorprinter.ml[492,15586+14]..[492,15586+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[492,15586+52]..[492,15586+53])
                                            Pexp_ident "g" (typing/includemod_errorprinter.ml[492,15586+52]..[492,15586+53])
                                      ]
                                ]
                                expression (typing/includemod_errorprinter.ml[493,15643+6]..[497,15796+21])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includemod_errorprinter.ml[493,15643+10]..[493,15643+11])
                                        Ppat_var "e" (typing/includemod_errorprinter.ml[493,15643+10]..[493,15643+11])
                                      expression (typing/includemod_errorprinter.ml[493,15643+14]..[493,15643+41])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[493,15643+14]..[493,15643+39])
                                          Pexp_ident "With_shorthand.definition" (typing/includemod_errorprinter.ml[493,15643+14]..[493,15643+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[493,15643+40]..[493,15643+41])
                                              Pexp_ident "e" (typing/includemod_errorprinter.ml[493,15643+40]..[493,15643+41])
                                        ]
                                  ]
                                  expression (typing/includemod_errorprinter.ml[494,15688+6]..[497,15796+21])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[494,15688+6]..[494,15688+20])
                                      Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[494,15688+6]..[494,15688+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[495,15709+8]..[496,15757+38])
                                          Pexp_constant PConst_string("Modules do not match:@ @[%t@]@;<1 -2>is not included in@ @[%t@]%t",(typing/includemod_errorprinter.ml[495,15709+9]..[496,15757+37]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[497,15796+8]..[497,15796+9])
                                          Pexp_ident "g" (typing/includemod_errorprinter.ml[497,15796+8]..[497,15796+9])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[497,15796+10]..[497,15796+11])
                                          Pexp_ident "e" (typing/includemod_errorprinter.ml[497,15796+10]..[497,15796+11])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[497,15796+12]..[497,15796+21])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[497,15796+13]..[497,15796+17])
                                            Pexp_ident "more" (typing/includemod_errorprinter.ml[497,15796+13]..[497,15796+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[497,15796+18]..[497,15796+20])
                                                Pexp_construct "()" (typing/includemod_errorprinter.ml[497,15796+18]..[497,15796+20])
                                                None
                                          ]
                                    ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[502,15920+4]..[511,16252+34])
                    Pstr_value Nonrec
                    [
                      <def>
                          attribute "ocaml.doc"
                            [
                              structure_item (typing/includemod_errorprinter.ml[499,15819+4]..[501,15913+6])
                                Pstr_eval
                                expression (typing/includemod_errorprinter.ml[499,15819+4]..[501,15913+6])
                                  Pexp_constant PConst_string(" Specialized to avoid introducing shorthand names\n        for single change difference\n    ",(typing/includemod_errorprinter.ml[499,15819+4]..[501,15913+6]),None)
                            ]
                        pattern (typing/includemod_errorprinter.ml[502,15920+8]..[502,15920+19])
                          Ppat_var "single_diff" (typing/includemod_errorprinter.ml[502,15920+8]..[502,15920+19])
                        expression (typing/includemod_errorprinter.ml[502,15920+20]..[511,16252+34]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[502,15920+20]..[502,15920+21])
                            Ppat_var "g" (typing/includemod_errorprinter.ml[502,15920+20]..[502,15920+21])
                          expression (typing/includemod_errorprinter.ml[502,15920+22]..[511,16252+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[502,15920+22]..[502,15920+23])
                              Ppat_var "e" (typing/includemod_errorprinter.ml[502,15920+22]..[502,15920+23])
                            expression (typing/includemod_errorprinter.ml[502,15920+24]..[511,16252+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/includemod_errorprinter.ml[502,15920+24]..[502,15920+28])
                                Ppat_var "more" (typing/includemod_errorprinter.ml[502,15920+24]..[502,15920+28])
                              expression (typing/includemod_errorprinter.ml[503,15951+6]..[511,16252+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[503,15951+10]..[503,15951+19])
                                      Ppat_tuple
                                      [
                                        pattern (typing/includemod_errorprinter.ml[503,15951+10]..[503,15951+14])
                                          Ppat_var "_arg" (typing/includemod_errorprinter.ml[503,15951+10]..[503,15951+14])
                                        pattern (typing/includemod_errorprinter.ml[503,15951+16]..[503,15951+19])
                                          Ppat_var "mty" (typing/includemod_errorprinter.ml[503,15951+16]..[503,15951+19])
                                      ]
                                    expression (typing/includemod_errorprinter.ml[503,15951+22]..[503,15951+43])
                                      Pexp_field
                                      expression (typing/includemod_errorprinter.ml[503,15951+22]..[503,15951+23])
                                        Pexp_ident "g" (typing/includemod_errorprinter.ml[503,15951+22]..[503,15951+23])
                                      "With_shorthand.item" (typing/includemod_errorprinter.ml[503,15951+24]..[503,15951+43])
                                ]
                                expression (typing/includemod_errorprinter.ml[504,15998+6]..[511,16252+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/includemod_errorprinter.ml[504,15998+10]..[504,15998+11])
                                        Ppat_var "e" (typing/includemod_errorprinter.ml[504,15998+10]..[504,15998+11])
                                      expression (typing/includemod_errorprinter.ml[504,15998+14]..[506,16089+45])
                                        Pexp_match
                                        expression (typing/includemod_errorprinter.ml[504,15998+20]..[504,15998+41])
                                          Pexp_field
                                          expression (typing/includemod_errorprinter.ml[504,15998+20]..[504,15998+21])
                                            Pexp_ident "e" (typing/includemod_errorprinter.ml[504,15998+20]..[504,15998+21])
                                          "With_shorthand.item" (typing/includemod_errorprinter.ml[504,15998+22]..[504,15998+41])
                                        [
                                          <case>
                                            pattern (typing/includemod_errorprinter.ml[505,16045+10]..[505,16045+20])
                                              Ppat_construct "Types.Unit" (typing/includemod_errorprinter.ml[505,16045+10]..[505,16045+20])
                                              None
                                            expression (typing/includemod_errorprinter.ml[505,16045+24]..[505,16045+43])
                                              Pexp_apply
                                              expression (typing/includemod_errorprinter.ml[505,16045+24]..[505,16045+38])
                                                Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[505,16045+24]..[505,16045+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[505,16045+39]..[505,16045+43])
                                                    Pexp_constant PConst_string("()",(typing/includemod_errorprinter.ml[505,16045+40]..[505,16045+42]),None)
                                              ]
                                          <case>
                                            pattern (typing/includemod_errorprinter.ml[506,16089+10]..[506,16089+29])
                                              Ppat_construct "Types.Named" (typing/includemod_errorprinter.ml[506,16089+10]..[506,16089+21])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[506,16089+21]..[506,16089+29])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[506,16089+22]..[506,16089+23])
                                                      Ppat_any
                                                    pattern (typing/includemod_errorprinter.ml[506,16089+25]..[506,16089+28])
                                                      Ppat_var "mty" (typing/includemod_errorprinter.ml[506,16089+25]..[506,16089+28])
                                                  ]
                                            expression (typing/includemod_errorprinter.ml[506,16089+33]..[506,16089+45])
                                              Pexp_apply
                                              expression (typing/includemod_errorprinter.ml[506,16089+33]..[506,16089+41])
                                                Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[506,16089+33]..[506,16089+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[506,16089+42]..[506,16089+45])
                                                    Pexp_ident "mty" (typing/includemod_errorprinter.ml[506,16089+42]..[506,16089+45])
                                              ]
                                        ]
                                  ]
                                  expression (typing/includemod_errorprinter.ml[508,16144+6]..[511,16252+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[508,16144+6]..[508,16144+20])
                                      Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[508,16144+6]..[508,16144+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[509,16165+8]..[510,16213+38])
                                          Pexp_constant PConst_string("Modules do not match:@ @[%t@]@;<1 -2>is not included in@ @[%t@]%t",(typing/includemod_errorprinter.ml[509,16165+9]..[510,16213+37]),None)
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[511,16252+8]..[511,16252+22])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[511,16252+9]..[511,16252+17])
                                            Pexp_ident "dmodtype" (typing/includemod_errorprinter.ml[511,16252+9]..[511,16252+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[511,16252+18]..[511,16252+21])
                                                Pexp_ident "mty" (typing/includemod_errorprinter.ml[511,16252+18]..[511,16252+21])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[511,16252+23]..[511,16252+24])
                                          Pexp_ident "e" (typing/includemod_errorprinter.ml[511,16252+23]..[511,16252+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[511,16252+25]..[511,16252+34])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[511,16252+26]..[511,16252+30])
                                            Pexp_ident "more" (typing/includemod_errorprinter.ml[511,16252+26]..[511,16252+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[511,16252+31]..[511,16252+33])
                                                Pexp_construct "()" (typing/includemod_errorprinter.ml[511,16252+31]..[511,16252+33])
                                                None
                                          ]
                                    ]
                    ]
                  structure_item (typing/includemod_errorprinter.ml[514,16289+4]..[520,16492+72])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[514,16289+8]..[514,16289+20])
                          Ppat_var "incompatible" (typing/includemod_errorprinter.ml[514,16289+8]..[514,16289+20])
                        expression (typing/includemod_errorprinter.ml[514,16289+23]..[520,16492+72])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[515,16321+8]..[515,16321+12])
                                Ppat_construct "Unit" (typing/includemod_errorprinter.ml[515,16321+8]..[515,16321+12])
                                None
                              expression (typing/includemod_errorprinter.ml[516,16337+10]..[517,16362+73])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[516,16337+10]..[516,16337+24])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[516,16337+10]..[516,16337+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[517,16362+12]..[517,16362+73])
                                      Pexp_constant PConst_string("The functor was expected to be applicative at this position",(typing/includemod_errorprinter.ml[517,16362+13]..[517,16362+72]),None)
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[518,16436+8]..[518,16436+27])
                                Ppat_or
                                pattern (typing/includemod_errorprinter.ml[518,16436+8]..[518,16436+15])
                                  Ppat_construct "Named" (typing/includemod_errorprinter.ml[518,16436+8]..[518,16436+13])
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[518,16436+14]..[518,16436+15])
                                      Ppat_any
                                pattern (typing/includemod_errorprinter.ml[518,16436+18]..[518,16436+27])
                                  Ppat_construct "Anonymous" (typing/includemod_errorprinter.ml[518,16436+18]..[518,16436+27])
                                  None
                              expression (typing/includemod_errorprinter.ml[519,16467+10]..[520,16492+72])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[519,16467+10]..[519,16467+24])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[519,16467+10]..[519,16467+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[520,16492+12]..[520,16492+72])
                                      Pexp_constant PConst_string("The functor was expected to be generative at this position",(typing/includemod_errorprinter.ml[520,16492+13]..[520,16492+71]),None)
                                ]
                          ]
                    ]
                ]
          structure_item (typing/includemod_errorprinter.ml[524,16573+2]..[533,16912+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[524,16573+6]..[524,16573+13])
                  Ppat_var "subcase" (typing/includemod_errorprinter.ml[524,16573+6]..[524,16573+13])
                expression (typing/includemod_errorprinter.ml[524,16573+14]..[533,16912+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[524,16573+14]..[524,16573+17])
                    Ppat_var "sub" (typing/includemod_errorprinter.ml[524,16573+14]..[524,16573+17])
                  expression (typing/includemod_errorprinter.ml[524,16573+18]..[533,16912+28]) ghost
                    Pexp_fun
                    Labelled "expansion_token"
                    None
                    pattern (typing/includemod_errorprinter.ml[524,16573+19]..[524,16573+34])
                      Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[524,16573+19]..[524,16573+34])
                    expression (typing/includemod_errorprinter.ml[524,16573+35]..[533,16912+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[524,16573+35]..[524,16573+38])
                        Ppat_var "env" (typing/includemod_errorprinter.ml[524,16573+35]..[524,16573+38])
                      expression (typing/includemod_errorprinter.ml[524,16573+39]..[533,16912+28]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[524,16573+39]..[524,16573+50])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[524,16573+40]..[524,16573+43])
                              Ppat_var "pos" (typing/includemod_errorprinter.ml[524,16573+40]..[524,16573+43])
                            pattern (typing/includemod_errorprinter.ml[524,16573+45]..[524,16573+49])
                              Ppat_var "diff" (typing/includemod_errorprinter.ml[524,16573+45]..[524,16573+49])
                          ]
                        expression (typing/includemod_errorprinter.ml[525,16626+4]..[533,16912+28])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[525,16626+4]..[525,16626+16])
                            Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[525,16626+4]..[525,16626+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[525,16626+17]..[525,16626+41])
                                Pexp_constant PConst_string("%a%a%a%a@[<hv 2>%t@]%a",(typing/includemod_errorprinter.ml[525,16626+18]..[525,16626+40]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[526,16668+6]..[526,16668+25])
                                Pexp_ident "Format.pp_print_tab" (typing/includemod_errorprinter.ml[526,16668+6]..[526,16668+25])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[526,16668+26]..[526,16668+28])
                                Pexp_construct "()" (typing/includemod_errorprinter.ml[526,16668+26]..[526,16668+28])
                                None
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[527,16697+6]..[527,16697+25])
                                Pexp_ident "Format.pp_open_tbox" (typing/includemod_errorprinter.ml[527,16697+6]..[527,16697+25])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[527,16697+26]..[527,16697+28])
                                Pexp_construct "()" (typing/includemod_errorprinter.ml[527,16697+26]..[527,16697+28])
                                None
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[528,16726+6]..[528,16726+20])
                                Pexp_ident "Diffing.prefix" (typing/includemod_errorprinter.ml[528,16726+6]..[528,16726+20])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[528,16726+21]..[528,16726+49])
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[528,16726+22]..[528,16726+25])
                                    Pexp_ident "pos" (typing/includemod_errorprinter.ml[528,16726+22]..[528,16726+25])
                                  expression (typing/includemod_errorprinter.ml[528,16726+27]..[528,16726+48])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[528,16726+27]..[528,16726+43])
                                      Pexp_ident "Diffing.classify" (typing/includemod_errorprinter.ml[528,16726+27]..[528,16726+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[528,16726+44]..[528,16726+48])
                                          Pexp_ident "diff" (typing/includemod_errorprinter.ml[528,16726+44]..[528,16726+48])
                                    ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[529,16776+6]..[529,16776+23])
                                Pexp_ident "Format.pp_set_tab" (typing/includemod_errorprinter.ml[529,16776+6]..[529,16776+23])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[529,16776+24]..[529,16776+26])
                                Pexp_construct "()" (typing/includemod_errorprinter.ml[529,16776+24]..[529,16776+26])
                                None
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[530,16803+6]..[532,16904+7])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[530,16803+7]..[530,16803+33])
                                  Pexp_ident "Printtyp.wrap_printing_env" (typing/includemod_errorprinter.ml[530,16803+7]..[530,16803+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[530,16803+34]..[530,16803+37])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[530,16803+34]..[530,16803+37])
                                  <arg>
                                  Labelled "error"
                                    expression (typing/includemod_errorprinter.ml[530,16803+45]..[530,16803+49])
                                      Pexp_construct "true" (typing/includemod_errorprinter.ml[530,16803+45]..[530,16803+49])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[531,16853+9]..[531,16853+50])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/includemod_errorprinter.ml[531,16853+14]..[531,16853+16])
                                        Ppat_construct "()" (typing/includemod_errorprinter.ml[531,16853+14]..[531,16853+16])
                                        None
                                      expression (typing/includemod_errorprinter.ml[531,16853+20]..[531,16853+49])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[531,16853+20]..[531,16853+23])
                                          Pexp_ident "sub" (typing/includemod_errorprinter.ml[531,16853+20]..[531,16853+23])
                                        [
                                          <arg>
                                          Labelled "expansion_token"
                                            expression (typing/includemod_errorprinter.ml[531,16853+25]..[531,16853+40])
                                              Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[531,16853+25]..[531,16853+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[531,16853+41]..[531,16853+44])
                                              Pexp_ident "env" (typing/includemod_errorprinter.ml[531,16853+41]..[531,16853+44])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[531,16853+45]..[531,16853+49])
                                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[531,16853+45]..[531,16853+49])
                                        ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[533,16912+5]..[533,16912+25])
                                Pexp_ident "Format.pp_close_tbox" (typing/includemod_errorprinter.ml[533,16912+5]..[533,16912+25])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[533,16912+26]..[533,16912+28])
                                Pexp_construct "()" (typing/includemod_errorprinter.ml[533,16912+26]..[533,16912+28])
                                None
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[535,16942+2]..[540,17158+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[535,16942+6]..[535,16942+14])
                  Ppat_var "onlycase" (typing/includemod_errorprinter.ml[535,16942+6]..[535,16942+14])
                expression (typing/includemod_errorprinter.ml[535,16942+15]..[540,17158+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[535,16942+15]..[535,16942+18])
                    Ppat_var "sub" (typing/includemod_errorprinter.ml[535,16942+15]..[535,16942+18])
                  expression (typing/includemod_errorprinter.ml[535,16942+19]..[540,17158+7]) ghost
                    Pexp_fun
                    Labelled "expansion_token"
                    None
                    pattern (typing/includemod_errorprinter.ml[535,16942+20]..[535,16942+35])
                      Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[535,16942+20]..[535,16942+35])
                    expression (typing/includemod_errorprinter.ml[535,16942+36]..[540,17158+7]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[535,16942+36]..[535,16942+39])
                        Ppat_var "env" (typing/includemod_errorprinter.ml[535,16942+36]..[535,16942+39])
                      expression (typing/includemod_errorprinter.ml[535,16942+40]..[540,17158+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[535,16942+40]..[535,16942+49])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[535,16942+41]..[535,16942+42])
                              Ppat_any
                            pattern (typing/includemod_errorprinter.ml[535,16942+44]..[535,16942+48])
                              Ppat_var "diff" (typing/includemod_errorprinter.ml[535,16942+44]..[535,16942+48])
                          ]
                        expression (typing/includemod_errorprinter.ml[536,16994+4]..[540,17158+7])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[536,16994+4]..[536,16994+16])
                            Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[536,16994+4]..[536,16994+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[536,16994+17]..[536,16994+33])
                                Pexp_constant PConst_string("%a@[<hv 2>%t@]",(typing/includemod_errorprinter.ml[536,16994+18]..[536,16994+32]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[537,17028+6]..[537,17028+25])
                                Pexp_ident "Format.pp_print_tab" (typing/includemod_errorprinter.ml[537,17028+6]..[537,17028+25])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[537,17028+26]..[537,17028+28])
                                Pexp_construct "()" (typing/includemod_errorprinter.ml[537,17028+26]..[537,17028+28])
                                None
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[538,17057+6]..[540,17158+7])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[538,17057+7]..[538,17057+33])
                                  Pexp_ident "Printtyp.wrap_printing_env" (typing/includemod_errorprinter.ml[538,17057+7]..[538,17057+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[538,17057+34]..[538,17057+37])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[538,17057+34]..[538,17057+37])
                                  <arg>
                                  Labelled "error"
                                    expression (typing/includemod_errorprinter.ml[538,17057+45]..[538,17057+49])
                                      Pexp_construct "true" (typing/includemod_errorprinter.ml[538,17057+45]..[538,17057+49])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[539,17107+9]..[539,17107+50])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/includemod_errorprinter.ml[539,17107+14]..[539,17107+16])
                                        Ppat_construct "()" (typing/includemod_errorprinter.ml[539,17107+14]..[539,17107+16])
                                        None
                                      expression (typing/includemod_errorprinter.ml[539,17107+20]..[539,17107+49])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[539,17107+20]..[539,17107+23])
                                          Pexp_ident "sub" (typing/includemod_errorprinter.ml[539,17107+20]..[539,17107+23])
                                        [
                                          <arg>
                                          Labelled "expansion_token"
                                            expression (typing/includemod_errorprinter.ml[539,17107+25]..[539,17107+40])
                                              Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[539,17107+25]..[539,17107+40])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[539,17107+41]..[539,17107+44])
                                              Pexp_ident "env" (typing/includemod_errorprinter.ml[539,17107+41]..[539,17107+44])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[539,17107+45]..[539,17107+49])
                                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[539,17107+45]..[539,17107+49])
                                        ]
                                ]
                          ]
            ]
          structure_item (typing/includemod_errorprinter.ml[542,17167+2]..[556,17657+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[542,17167+6]..[542,17167+12])
                  Ppat_var "params" (typing/includemod_errorprinter.ml[542,17167+6]..[542,17167+12])
                expression (typing/includemod_errorprinter.ml[542,17167+13]..[556,17657+19]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[542,17167+13]..[542,17167+16])
                    Ppat_var "sub" (typing/includemod_errorprinter.ml[542,17167+13]..[542,17167+16])
                  expression (typing/includemod_errorprinter.ml[542,17167+17]..[556,17657+19]) ghost
                    Pexp_fun
                    Labelled "expansion_token"
                    None
                    pattern (typing/includemod_errorprinter.ml[542,17167+18]..[542,17167+33])
                      Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[542,17167+18]..[542,17167+33])
                    expression (typing/includemod_errorprinter.ml[542,17167+34]..[556,17657+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[542,17167+34]..[542,17167+37])
                        Ppat_var "env" (typing/includemod_errorprinter.ml[542,17167+34]..[542,17167+37])
                      expression (typing/includemod_errorprinter.ml[542,17167+38]..[556,17657+19]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[542,17167+38]..[542,17167+39])
                          Ppat_var "l" (typing/includemod_errorprinter.ml[542,17167+38]..[542,17167+39])
                        expression (typing/includemod_errorprinter.ml[543,17209+4]..[556,17657+19])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[543,17209+12]..[543,17209+15])
                                Ppat_var "aux" (typing/includemod_errorprinter.ml[543,17209+12]..[543,17209+15])
                              expression (typing/includemod_errorprinter.ml[543,17209+16]..[552,17568+13]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[543,17209+16]..[543,17209+24])
                                  Ppat_var "subcases" (typing/includemod_errorprinter.ml[543,17209+16]..[543,17209+24])
                                expression (typing/includemod_errorprinter.ml[543,17209+27]..[552,17568+13])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[544,17245+8]..[544,17245+10])
                                        Ppat_construct "[]" (typing/includemod_errorprinter.ml[544,17245+8]..[544,17245+10])
                                        None
                                      expression (typing/includemod_errorprinter.ml[544,17245+14]..[544,17245+22])
                                        Pexp_ident "subcases" (typing/includemod_errorprinter.ml[544,17245+14]..[544,17245+22])
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[545,17268+8]..[545,17268+37])
                                        Ppat_construct "::" (typing/includemod_errorprinter.ml[545,17268+33]..[545,17268+35])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[545,17268+8]..[545,17268+37]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/includemod_errorprinter.ml[545,17268+8]..[545,17268+32])
                                                Ppat_alias "a" (typing/includemod_errorprinter.ml[545,17268+31]..[545,17268+32])
                                                pattern (typing/includemod_errorprinter.ml[545,17268+8]..[545,17268+27])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[545,17268+9]..[545,17268+10])
                                                      Ppat_any
                                                    pattern (typing/includemod_errorprinter.ml[545,17268+12]..[545,17268+26])
                                                      Ppat_construct "Diffing.Keep" (typing/includemod_errorprinter.ml[545,17268+12]..[545,17268+24])
                                                      Some
                                                        []
                                                        pattern (typing/includemod_errorprinter.ml[545,17268+25]..[545,17268+26])
                                                          Ppat_any
                                                  ]
                                              pattern (typing/includemod_errorprinter.ml[545,17268+36]..[545,17268+37])
                                                Ppat_var "q" (typing/includemod_errorprinter.ml[545,17268+36]..[545,17268+37])
                                            ]
                                      expression (typing/includemod_errorprinter.ml[546,17309+10]..[546,17309+64])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[546,17309+10]..[546,17309+13])
                                          Pexp_ident "aux" (typing/includemod_errorprinter.ml[546,17309+10]..[546,17309+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[546,17309+14]..[546,17309+62])
                                              Pexp_construct "::" (typing/includemod_errorprinter.ml[546,17309+50]..[546,17309+52])
                                              Some
                                                expression (typing/includemod_errorprinter.ml[546,17309+15]..[546,17309+61]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includemod_errorprinter.ml[546,17309+15]..[546,17309+49])
                                                      Pexp_apply
                                                      expression (typing/includemod_errorprinter.ml[546,17309+15]..[546,17309+22])
                                                        Pexp_ident "subcase" (typing/includemod_errorprinter.ml[546,17309+15]..[546,17309+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[546,17309+23]..[546,17309+26])
                                                            Pexp_ident "sub" (typing/includemod_errorprinter.ml[546,17309+23]..[546,17309+26])
                                                        <arg>
                                                        Labelled "expansion_token"
                                                          expression (typing/includemod_errorprinter.ml[546,17309+28]..[546,17309+43])
                                                            Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[546,17309+28]..[546,17309+43])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[546,17309+44]..[546,17309+47])
                                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[546,17309+44]..[546,17309+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[546,17309+48]..[546,17309+49])
                                                            Pexp_ident "a" (typing/includemod_errorprinter.ml[546,17309+48]..[546,17309+49])
                                                      ]
                                                    expression (typing/includemod_errorprinter.ml[546,17309+53]..[546,17309+61])
                                                      Pexp_ident "subcases" (typing/includemod_errorprinter.ml[546,17309+53]..[546,17309+61])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[546,17309+63]..[546,17309+64])
                                              Pexp_ident "q" (typing/includemod_errorprinter.ml[546,17309+63]..[546,17309+64])
                                        ]
                                    <case>
                                      pattern (typing/includemod_errorprinter.ml[547,17374+8]..[547,17374+14])
                                        Ppat_construct "::" (typing/includemod_errorprinter.ml[547,17374+10]..[547,17374+12])
                                        Some
                                          []
                                          pattern (typing/includemod_errorprinter.ml[547,17374+8]..[547,17374+14]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/includemod_errorprinter.ml[547,17374+8]..[547,17374+9])
                                                Ppat_var "a" (typing/includemod_errorprinter.ml[547,17374+8]..[547,17374+9])
                                              pattern (typing/includemod_errorprinter.ml[547,17374+13]..[547,17374+14])
                                                Ppat_var "q" (typing/includemod_errorprinter.ml[547,17374+13]..[547,17374+14])
                                            ]
                                      expression (typing/includemod_errorprinter.ml[548,17392+10]..[552,17568+13])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[548,17392+10]..[548,17392+24])
                                          Pexp_ident "List.fold_left" (typing/includemod_errorprinter.ml[548,17392+10]..[548,17392+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[548,17392+25]..[550,17493+13])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/includemod_errorprinter.ml[548,17392+30]..[548,17392+33])
                                                Ppat_var "acc" (typing/includemod_errorprinter.ml[548,17392+30]..[548,17392+33])
                                              expression (typing/includemod_errorprinter.ml[548,17392+34]..[549,17431+61]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/includemod_errorprinter.ml[548,17392+34]..[548,17392+35])
                                                  Ppat_var "x" (typing/includemod_errorprinter.ml[548,17392+34]..[548,17392+35])
                                                expression (typing/includemod_errorprinter.ml[549,17431+12]..[549,17431+61])
                                                  Pexp_construct "::" (typing/includemod_errorprinter.ml[549,17431+55]..[549,17431+57])
                                                  Some
                                                    expression (typing/includemod_errorprinter.ml[549,17431+12]..[549,17431+61]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/includemod_errorprinter.ml[549,17431+12]..[549,17431+54])
                                                          Pexp_apply
                                                          expression (typing/includemod_errorprinter.ml[549,17431+13]..[549,17431+20])
                                                            Pexp_ident "subcase" (typing/includemod_errorprinter.ml[549,17431+13]..[549,17431+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includemod_errorprinter.ml[549,17431+21]..[549,17431+24])
                                                                Pexp_ident "sub" (typing/includemod_errorprinter.ml[549,17431+21]..[549,17431+24])
                                                            <arg>
                                                            Labelled "expansion_token"
                                                              expression (typing/includemod_errorprinter.ml[549,17431+42]..[549,17431+47])
                                                                Pexp_construct "false" (typing/includemod_errorprinter.ml[549,17431+42]..[549,17431+47])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includemod_errorprinter.ml[549,17431+48]..[549,17431+51])
                                                                Pexp_ident "env" (typing/includemod_errorprinter.ml[549,17431+48]..[549,17431+51])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/includemod_errorprinter.ml[549,17431+52]..[549,17431+53])
                                                                Pexp_ident "x" (typing/includemod_errorprinter.ml[549,17431+52]..[549,17431+53])
                                                          ]
                                                        expression (typing/includemod_errorprinter.ml[549,17431+58]..[549,17431+61])
                                                          Pexp_ident "acc" (typing/includemod_errorprinter.ml[549,17431+58]..[549,17431+61])
                                                      ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[551,17507+12]..[551,17507+60])
                                              Pexp_construct "::" (typing/includemod_errorprinter.ml[551,17507+48]..[551,17507+50])
                                              Some
                                                expression (typing/includemod_errorprinter.ml[551,17507+13]..[551,17507+59]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/includemod_errorprinter.ml[551,17507+13]..[551,17507+47])
                                                      Pexp_apply
                                                      expression (typing/includemod_errorprinter.ml[551,17507+13]..[551,17507+20])
                                                        Pexp_ident "subcase" (typing/includemod_errorprinter.ml[551,17507+13]..[551,17507+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[551,17507+21]..[551,17507+24])
                                                            Pexp_ident "sub" (typing/includemod_errorprinter.ml[551,17507+21]..[551,17507+24])
                                                        <arg>
                                                        Labelled "expansion_token"
                                                          expression (typing/includemod_errorprinter.ml[551,17507+26]..[551,17507+41])
                                                            Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[551,17507+26]..[551,17507+41])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[551,17507+42]..[551,17507+45])
                                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[551,17507+42]..[551,17507+45])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/includemod_errorprinter.ml[551,17507+46]..[551,17507+47])
                                                            Pexp_ident "a" (typing/includemod_errorprinter.ml[551,17507+46]..[551,17507+47])
                                                      ]
                                                    expression (typing/includemod_errorprinter.ml[551,17507+51]..[551,17507+59])
                                                      Pexp_ident "subcases" (typing/includemod_errorprinter.ml[551,17507+51]..[551,17507+59])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[552,17568+12]..[552,17568+13])
                                              Pexp_ident "q" (typing/includemod_errorprinter.ml[552,17568+12]..[552,17568+13])
                                        ]
                                  ]
                          ]
                          expression (typing/includemod_errorprinter.ml[554,17589+4]..[556,17657+19])
                            Pexp_match
                            expression (typing/includemod_errorprinter.ml[554,17589+10]..[554,17589+11])
                              Pexp_ident "l" (typing/includemod_errorprinter.ml[554,17589+10]..[554,17589+11])
                            [
                              <case>
                                pattern (typing/includemod_errorprinter.ml[555,17606+6]..[555,17606+9])
                                  Ppat_construct "::" (typing/includemod_errorprinter.ml[555,17606+7]..[555,17606+9]) ghost
                                  Some
                                    []
                                    pattern (typing/includemod_errorprinter.ml[555,17606+7]..[555,17606+9]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/includemod_errorprinter.ml[555,17606+7]..[555,17606+8])
                                          Ppat_var "a" (typing/includemod_errorprinter.ml[555,17606+7]..[555,17606+8])
                                        pattern (typing/includemod_errorprinter.ml[555,17606+8]..[555,17606+9]) ghost
                                          Ppat_construct "[]" (typing/includemod_errorprinter.ml[555,17606+8]..[555,17606+9]) ghost
                                          None
                                      ]
                                expression (typing/includemod_errorprinter.ml[555,17606+13]..[555,17606+50])
                                  Pexp_construct "::" (typing/includemod_errorprinter.ml[555,17606+14]..[555,17606+50]) ghost
                                  Some
                                    expression (typing/includemod_errorprinter.ml[555,17606+14]..[555,17606+50]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/includemod_errorprinter.ml[555,17606+14]..[555,17606+49])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[555,17606+14]..[555,17606+22])
                                            Pexp_ident "onlycase" (typing/includemod_errorprinter.ml[555,17606+14]..[555,17606+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[555,17606+23]..[555,17606+26])
                                                Pexp_ident "sub" (typing/includemod_errorprinter.ml[555,17606+23]..[555,17606+26])
                                            <arg>
                                            Labelled "expansion_token"
                                              expression (typing/includemod_errorprinter.ml[555,17606+28]..[555,17606+43])
                                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[555,17606+28]..[555,17606+43])
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[555,17606+44]..[555,17606+47])
                                                Pexp_ident "env" (typing/includemod_errorprinter.ml[555,17606+44]..[555,17606+47])
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[555,17606+48]..[555,17606+49])
                                                Pexp_ident "a" (typing/includemod_errorprinter.ml[555,17606+48]..[555,17606+49])
                                          ]
                                        expression (typing/includemod_errorprinter.ml[555,17606+49]..[555,17606+50]) ghost
                                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[555,17606+49]..[555,17606+50]) ghost
                                          None
                                      ]
                              <case>
                                pattern (typing/includemod_errorprinter.ml[556,17657+6]..[556,17657+7])
                                  Ppat_var "l" (typing/includemod_errorprinter.ml[556,17657+6]..[556,17657+7])
                                expression (typing/includemod_errorprinter.ml[556,17657+11]..[556,17657+19])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[556,17657+11]..[556,17657+14])
                                    Pexp_ident "aux" (typing/includemod_errorprinter.ml[556,17657+11]..[556,17657+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[556,17657+15]..[556,17657+17])
                                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[556,17657+15]..[556,17657+17])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[556,17657+18]..[556,17657+19])
                                        Pexp_ident "l" (typing/includemod_errorprinter.ml[556,17657+18]..[556,17657+19])
                                  ]
                            ]
            ]
        ]
  structure_item (typing/includemod_errorprinter.ml[560,17683+0]..[560,17683+56])
    Pstr_attribute "ocaml.text"
    [
      structure_item (typing/includemod_errorprinter.ml[560,17683+0]..[560,17683+56])
        Pstr_eval
        expression (typing/includemod_errorprinter.ml[560,17683+0]..[560,17683+56])
          Pexp_constant PConst_string(" Construct a linear presentation of the error tree ",(typing/includemod_errorprinter.ml[560,17683+0]..[560,17683+56]),None)
    ]
  structure_item (typing/includemod_errorprinter.ml[562,17741+0]..[562,17741+8])
    Pstr_open Fresh
    module_expr (typing/includemod_errorprinter.ml[562,17741+5]..[562,17741+8])
      Pmod_ident "Err" (typing/includemod_errorprinter.ml[562,17741+5]..[562,17741+8])
  structure_item (typing/includemod_errorprinter.ml[565,17782+0]..[567,17876+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[565,17782+4]..[565,17782+16])
          Ppat_var "with_context" (typing/includemod_errorprinter.ml[565,17782+4]..[565,17782+16])
        expression (typing/includemod_errorprinter.ml[565,17782+17]..[567,17876+16]) ghost
          Pexp_fun
          Optional "loc"
          None
          pattern (typing/includemod_errorprinter.ml[565,17782+18]..[565,17782+21])
            Ppat_var "loc" (typing/includemod_errorprinter.ml[565,17782+18]..[565,17782+21])
          expression (typing/includemod_errorprinter.ml[565,17782+22]..[567,17876+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[565,17782+22]..[565,17782+25])
              Ppat_var "ctx" (typing/includemod_errorprinter.ml[565,17782+22]..[565,17782+25])
            expression (typing/includemod_errorprinter.ml[565,17782+26]..[567,17876+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[565,17782+26]..[565,17782+33])
                Ppat_var "printer" (typing/includemod_errorprinter.ml[565,17782+26]..[565,17782+33])
              expression (typing/includemod_errorprinter.ml[565,17782+34]..[567,17876+16]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includemod_errorprinter.ml[565,17782+34]..[565,17782+38])
                  Ppat_var "diff" (typing/includemod_errorprinter.ml[565,17782+34]..[565,17782+38])
                expression (typing/includemod_errorprinter.ml[566,17823+2]..[567,17876+16])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[566,17823+2]..[566,17823+14])
                    Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[566,17823+2]..[566,17823+14])
                  [
                    <arg>
                    Optional "loc"
                      expression (typing/includemod_errorprinter.ml[566,17823+16]..[566,17823+19])
                        Pexp_ident "loc" (typing/includemod_errorprinter.ml[566,17823+16]..[566,17823+19])
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[566,17823+20]..[566,17823+26])
                        Pexp_constant PConst_string("%a%a",(typing/includemod_errorprinter.ml[566,17823+21]..[566,17823+25]),None)
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[566,17823+27]..[566,17823+37])
                        Pexp_ident "Context.pp" (typing/includemod_errorprinter.ml[566,17823+27]..[566,17823+37])
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[566,17823+38]..[566,17823+52])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[566,17823+39]..[566,17823+47])
                          Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[566,17823+39]..[566,17823+47])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[566,17823+48]..[566,17823+51])
                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[566,17823+48]..[566,17823+51])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[567,17876+4]..[567,17876+11])
                        Pexp_ident "printer" (typing/includemod_errorprinter.ml[567,17876+4]..[567,17876+11])
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[567,17876+12]..[567,17876+16])
                        Pexp_ident "diff" (typing/includemod_errorprinter.ml[567,17876+12]..[567,17876+16])
                  ]
    ]
  structure_item (typing/includemod_errorprinter.ml[569,17894+0]..[570,17931+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[569,17894+4]..[569,17894+17])
          Ppat_var "dwith_context" (typing/includemod_errorprinter.ml[569,17894+4]..[569,17894+17])
        expression (typing/includemod_errorprinter.ml[569,17894+18]..[570,17931+60]) ghost
          Pexp_fun
          Optional "loc"
          None
          pattern (typing/includemod_errorprinter.ml[569,17894+19]..[569,17894+22])
            Ppat_var "loc" (typing/includemod_errorprinter.ml[569,17894+19]..[569,17894+22])
          expression (typing/includemod_errorprinter.ml[569,17894+23]..[570,17931+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[569,17894+23]..[569,17894+26])
              Ppat_var "ctx" (typing/includemod_errorprinter.ml[569,17894+23]..[569,17894+26])
            expression (typing/includemod_errorprinter.ml[569,17894+27]..[570,17931+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[569,17894+27]..[569,17894+34])
                Ppat_var "printer" (typing/includemod_errorprinter.ml[569,17894+27]..[569,17894+34])
              expression (typing/includemod_errorprinter.ml[570,17931+2]..[570,17931+60])
                Pexp_apply
                expression (typing/includemod_errorprinter.ml[570,17931+2]..[570,17931+14])
                  Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[570,17931+2]..[570,17931+14])
                [
                  <arg>
                  Optional "loc"
                    expression (typing/includemod_errorprinter.ml[570,17931+16]..[570,17931+19])
                      Pexp_ident "loc" (typing/includemod_errorprinter.ml[570,17931+16]..[570,17931+19])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[570,17931+20]..[570,17931+26])
                      Pexp_constant PConst_string("%a%t",(typing/includemod_errorprinter.ml[570,17931+21]..[570,17931+25]),None)
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[570,17931+27]..[570,17931+37])
                      Pexp_ident "Context.pp" (typing/includemod_errorprinter.ml[570,17931+27]..[570,17931+37])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[570,17931+38]..[570,17931+52])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[570,17931+39]..[570,17931+47])
                        Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[570,17931+39]..[570,17931+47])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[570,17931+48]..[570,17931+51])
                            Pexp_ident "ctx" (typing/includemod_errorprinter.ml[570,17931+48]..[570,17931+51])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[570,17931+53]..[570,17931+60])
                      Pexp_ident "printer" (typing/includemod_errorprinter.ml[570,17931+53]..[570,17931+60])
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[572,17993+0]..[576,18124+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[572,17993+4]..[572,17993+29])
          Ppat_var "dwith_context_and_elision" (typing/includemod_errorprinter.ml[572,17993+4]..[572,17993+29])
        expression (typing/includemod_errorprinter.ml[572,17993+30]..[576,18124+41]) ghost
          Pexp_fun
          Optional "loc"
          None
          pattern (typing/includemod_errorprinter.ml[572,17993+31]..[572,17993+34])
            Ppat_var "loc" (typing/includemod_errorprinter.ml[572,17993+31]..[572,17993+34])
          expression (typing/includemod_errorprinter.ml[572,17993+35]..[576,18124+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[572,17993+35]..[572,17993+38])
              Ppat_var "ctx" (typing/includemod_errorprinter.ml[572,17993+35]..[572,17993+38])
            expression (typing/includemod_errorprinter.ml[572,17993+39]..[576,18124+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[572,17993+39]..[572,17993+46])
                Ppat_var "printer" (typing/includemod_errorprinter.ml[572,17993+39]..[572,17993+46])
              expression (typing/includemod_errorprinter.ml[572,17993+47]..[576,18124+41]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includemod_errorprinter.ml[572,17993+47]..[572,17993+51])
                  Ppat_var "diff" (typing/includemod_errorprinter.ml[572,17993+47]..[572,17993+51])
                expression (typing/includemod_errorprinter.ml[573,18047+2]..[576,18124+41])
                  Pexp_ifthenelse
                  expression (typing/includemod_errorprinter.ml[573,18047+5]..[573,18047+36])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[573,18047+5]..[573,18047+11])
                      Pexp_ident "is_big" (typing/includemod_errorprinter.ml[573,18047+5]..[573,18047+11])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[573,18047+12]..[573,18047+36])
                          Pexp_tuple
                          [
                            expression (typing/includemod_errorprinter.ml[573,18047+13]..[573,18047+21])
                              Pexp_field
                              expression (typing/includemod_errorprinter.ml[573,18047+13]..[573,18047+17])
                                Pexp_ident "diff" (typing/includemod_errorprinter.ml[573,18047+13]..[573,18047+17])
                              "got" (typing/includemod_errorprinter.ml[573,18047+18]..[573,18047+21])
                            expression (typing/includemod_errorprinter.ml[573,18047+22]..[573,18047+35])
                              Pexp_field
                              expression (typing/includemod_errorprinter.ml[573,18047+22]..[573,18047+26])
                                Pexp_ident "diff" (typing/includemod_errorprinter.ml[573,18047+22]..[573,18047+26])
                              "expected" (typing/includemod_errorprinter.ml[573,18047+27]..[573,18047+35])
                          ]
                    ]
                  expression (typing/includemod_errorprinter.ml[574,18089+4]..[574,18089+27])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[574,18089+4]..[574,18089+16])
                      Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[574,18089+4]..[574,18089+16])
                    [
                      <arg>
                      Optional "loc"
                        expression (typing/includemod_errorprinter.ml[574,18089+18]..[574,18089+21])
                          Pexp_ident "loc" (typing/includemod_errorprinter.ml[574,18089+18]..[574,18089+21])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[574,18089+22]..[574,18089+27])
                          Pexp_constant PConst_string("...",(typing/includemod_errorprinter.ml[574,18089+23]..[574,18089+26]),None)
                    ]
                  Some
                    expression (typing/includemod_errorprinter.ml[576,18124+4]..[576,18124+41])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[576,18124+4]..[576,18124+17])
                        Pexp_ident "dwith_context" (typing/includemod_errorprinter.ml[576,18124+4]..[576,18124+17])
                      [
                        <arg>
                        Optional "loc"
                          expression (typing/includemod_errorprinter.ml[576,18124+19]..[576,18124+22])
                            Pexp_ident "loc" (typing/includemod_errorprinter.ml[576,18124+19]..[576,18124+22])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[576,18124+23]..[576,18124+26])
                            Pexp_ident "ctx" (typing/includemod_errorprinter.ml[576,18124+23]..[576,18124+26])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[576,18124+27]..[576,18124+41])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[576,18124+28]..[576,18124+35])
                              Pexp_ident "printer" (typing/includemod_errorprinter.ml[576,18124+28]..[576,18124+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[576,18124+36]..[576,18124+40])
                                  Pexp_ident "diff" (typing/includemod_errorprinter.ml[576,18124+36]..[576,18124+40])
                            ]
                      ]
    ]
  structure_item (typing/includemod_errorprinter.ml[579,18205+0]..[587,18414+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[579,18205+4]..[579,18205+12])
          Ppat_var "coalesce" (typing/includemod_errorprinter.ml[579,18205+4]..[579,18205+12])
        expression (typing/includemod_errorprinter.ml[579,18205+13]..[587,18414+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[579,18205+13]..[579,18205+17])
            Ppat_var "msgs" (typing/includemod_errorprinter.ml[579,18205+13]..[579,18205+17])
          expression (typing/includemod_errorprinter.ml[580,18225+2]..[587,18414+9])
            Pexp_match
            expression (typing/includemod_errorprinter.ml[580,18225+8]..[580,18225+21])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[580,18225+8]..[580,18225+16])
                Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[580,18225+8]..[580,18225+16])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[580,18225+17]..[580,18225+21])
                    Pexp_ident "msgs" (typing/includemod_errorprinter.ml[580,18225+17]..[580,18225+21])
              ]
            [
              <case>
                pattern (typing/includemod_errorprinter.ml[581,18252+4]..[581,18252+6])
                  Ppat_construct "[]" (typing/includemod_errorprinter.ml[581,18252+4]..[581,18252+6])
                  None
                expression (typing/includemod_errorprinter.ml[581,18252+10]..[581,18252+16])
                  Pexp_ident "ignore" (typing/includemod_errorprinter.ml[581,18252+10]..[581,18252+16])
              <case>
                pattern (typing/includemod_errorprinter.ml[582,18269+4]..[582,18269+10])
                  Ppat_var "before" (typing/includemod_errorprinter.ml[582,18269+4]..[582,18269+10])
                expression (typing/includemod_errorprinter.ml[583,18283+6]..[587,18414+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/includemod_errorprinter.ml[583,18283+10]..[583,18283+13])
                        Ppat_var "ctx" (typing/includemod_errorprinter.ml[583,18283+10]..[583,18283+13])
                      expression (typing/includemod_errorprinter.ml[583,18283+14]..[586,18390+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/includemod_errorprinter.ml[583,18283+14]..[583,18283+17])
                          Ppat_var "ppf" (typing/includemod_errorprinter.ml[583,18283+14]..[583,18283+17])
                        expression (typing/includemod_errorprinter.ml[584,18303+8]..[586,18390+20])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[584,18303+8]..[584,18303+28])
                            Pexp_ident "Format.pp_print_list" (typing/includemod_errorprinter.ml[584,18303+8]..[584,18303+28])
                          [
                            <arg>
                            Labelled "pp_sep"
                              expression (typing/includemod_errorprinter.ml[584,18303+37]..[584,18303+42])
                                Pexp_ident "space" (typing/includemod_errorprinter.ml[584,18303+37]..[584,18303+42])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[585,18346+10]..[585,18346+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[585,18346+15]..[585,18346+18])
                                  Ppat_var "ppf" (typing/includemod_errorprinter.ml[585,18346+15]..[585,18346+18])
                                expression (typing/includemod_errorprinter.ml[585,18346+19]..[585,18346+42]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/includemod_errorprinter.ml[585,18346+19]..[585,18346+20])
                                    Ppat_var "x" (typing/includemod_errorprinter.ml[585,18346+19]..[585,18346+20])
                                  expression (typing/includemod_errorprinter.ml[585,18346+24]..[585,18346+42])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[585,18346+24]..[585,18346+38])
                                      Pexp_field
                                      expression (typing/includemod_errorprinter.ml[585,18346+24]..[585,18346+25])
                                        Pexp_ident "x" (typing/includemod_errorprinter.ml[585,18346+24]..[585,18346+25])
                                      "Location.txt" (typing/includemod_errorprinter.ml[585,18346+26]..[585,18346+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[585,18346+39]..[585,18346+42])
                                          Pexp_ident "ppf" (typing/includemod_errorprinter.ml[585,18346+39]..[585,18346+42])
                                    ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[586,18390+10]..[586,18390+13])
                                Pexp_ident "ppf" (typing/includemod_errorprinter.ml[586,18390+10]..[586,18390+13])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[586,18390+14]..[586,18390+20])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[586,18390+14]..[586,18390+20])
                          ]
                  ]
                  expression (typing/includemod_errorprinter.ml[587,18414+6]..[587,18414+9])
                    Pexp_ident "ctx" (typing/includemod_errorprinter.ml[587,18414+6]..[587,18414+9])
            ]
    ]
  structure_item (typing/includemod_errorprinter.ml[589,18425+0]..[596,18631+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[589,18425+4]..[589,18425+16])
          Ppat_var "subcase_list" (typing/includemod_errorprinter.ml[589,18425+4]..[589,18425+16])
        expression (typing/includemod_errorprinter.ml[589,18425+17]..[596,18631+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[589,18425+17]..[589,18425+18])
            Ppat_var "l" (typing/includemod_errorprinter.ml[589,18425+17]..[589,18425+18])
          expression (typing/includemod_errorprinter.ml[589,18425+19]..[596,18631+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[589,18425+19]..[589,18425+22])
              Ppat_var "ppf" (typing/includemod_errorprinter.ml[589,18425+19]..[589,18425+22])
            expression (typing/includemod_errorprinter.ml[589,18425+25]..[596,18631+20])
              Pexp_match
              expression (typing/includemod_errorprinter.ml[589,18425+31]..[589,18425+32])
                Pexp_ident "l" (typing/includemod_errorprinter.ml[589,18425+31]..[589,18425+32])
              [
                <case>
                  pattern (typing/includemod_errorprinter.ml[590,18463+4]..[590,18463+6])
                    Ppat_construct "[]" (typing/includemod_errorprinter.ml[590,18463+4]..[590,18463+6])
                    None
                  expression (typing/includemod_errorprinter.ml[590,18463+10]..[590,18463+12])
                    Pexp_construct "()" (typing/includemod_errorprinter.ml[590,18463+10]..[590,18463+12])
                    None
                <case>
                  pattern (typing/includemod_errorprinter.ml[591,18476+4]..[591,18476+10])
                    Ppat_construct "::" (typing/includemod_errorprinter.ml[591,18476+6]..[591,18476+8])
                    Some
                      []
                      pattern (typing/includemod_errorprinter.ml[591,18476+4]..[591,18476+10]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/includemod_errorprinter.ml[591,18476+4]..[591,18476+5])
                            Ppat_any
                          pattern (typing/includemod_errorprinter.ml[591,18476+9]..[591,18476+10])
                            Ppat_any
                        ]
                  expression (typing/includemod_errorprinter.ml[592,18490+6]..[596,18631+20])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[592,18490+6]..[592,18490+20])
                      Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[592,18490+6]..[592,18490+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[592,18490+21]..[592,18490+24])
                          Pexp_ident "ppf" (typing/includemod_errorprinter.ml[592,18490+21]..[592,18490+24])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[592,18490+25]..[592,18490+41])
                          Pexp_constant PConst_string("@;<1 -2>@[%a@]",(typing/includemod_errorprinter.ml[592,18490+26]..[592,18490+40]),None)
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[593,18532+8]..[595,18621+9])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[593,18532+9]..[593,18532+29])
                            Pexp_ident "Format.pp_print_list" (typing/includemod_errorprinter.ml[593,18532+9]..[593,18532+29])
                          [
                            <arg>
                            Labelled "pp_sep"
                              expression (typing/includemod_errorprinter.ml[593,18532+38]..[593,18532+43])
                                Pexp_ident "space" (typing/includemod_errorprinter.ml[593,18532+38]..[593,18532+43])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[594,18576+11]..[594,18576+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[594,18576+16]..[594,18576+19])
                                  Ppat_var "ppf" (typing/includemod_errorprinter.ml[594,18576+16]..[594,18576+19])
                                expression (typing/includemod_errorprinter.ml[594,18576+20]..[594,18576+43]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/includemod_errorprinter.ml[594,18576+20]..[594,18576+21])
                                    Ppat_var "f" (typing/includemod_errorprinter.ml[594,18576+20]..[594,18576+21])
                                  expression (typing/includemod_errorprinter.ml[594,18576+25]..[594,18576+43])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[594,18576+25]..[594,18576+39])
                                      Pexp_field
                                      expression (typing/includemod_errorprinter.ml[594,18576+25]..[594,18576+26])
                                        Pexp_ident "f" (typing/includemod_errorprinter.ml[594,18576+25]..[594,18576+26])
                                      "Location.txt" (typing/includemod_errorprinter.ml[594,18576+27]..[594,18576+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[594,18576+40]..[594,18576+43])
                                          Pexp_ident "ppf" (typing/includemod_errorprinter.ml[594,18576+40]..[594,18576+43])
                                    ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[596,18631+8]..[596,18631+20])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[596,18631+9]..[596,18631+17])
                            Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[596,18631+9]..[596,18631+17])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[596,18631+18]..[596,18631+19])
                                Pexp_ident "l" (typing/includemod_errorprinter.ml[596,18631+18]..[596,18631+19])
                          ]
                    ]
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[599,18679+0]..[656,21388+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[599,18679+4]..[599,18679+8])
          Ppat_var "core" (typing/includemod_errorprinter.ml[599,18679+4]..[599,18679+8])
        expression (typing/includemod_errorprinter.ml[599,18679+9]..[656,21388+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[599,18679+9]..[599,18679+12])
            Ppat_var "env" (typing/includemod_errorprinter.ml[599,18679+9]..[599,18679+12])
          expression (typing/includemod_errorprinter.ml[599,18679+13]..[656,21388+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[599,18679+13]..[599,18679+15])
              Ppat_var "id" (typing/includemod_errorprinter.ml[599,18679+13]..[599,18679+15])
            expression (typing/includemod_errorprinter.ml[599,18679+16]..[656,21388+45]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[599,18679+16]..[599,18679+17])
                Ppat_var "x" (typing/includemod_errorprinter.ml[599,18679+16]..[599,18679+17])
              expression (typing/includemod_errorprinter.ml[600,18699+2]..[656,21388+45])
                Pexp_match
                expression (typing/includemod_errorprinter.ml[600,18699+8]..[600,18699+9])
                  Pexp_ident "x" (typing/includemod_errorprinter.ml[600,18699+8]..[600,18699+9])
                [
                  <case>
                    pattern (typing/includemod_errorprinter.ml[601,18714+4]..[601,18714+31])
                      Ppat_construct "Err.Value_descriptions" (typing/includemod_errorprinter.ml[601,18714+4]..[601,18714+26])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[601,18714+27]..[601,18714+31])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[601,18714+27]..[601,18714+31])
                    expression (typing/includemod_errorprinter.ml[602,18749+6]..[612,19212+45])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[602,18749+6]..[602,18749+20])
                        Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[602,18749+6]..[602,18749+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[602,18749+21]..[602,18749+69])
                            Pexp_constant PConst_string("@[<v>@[<hv>%s:@;<1 2>%a@ %s@;<1 2>%a@]%a%a%t@]",(typing/includemod_errorprinter.ml[602,18749+22]..[602,18749+68]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[603,18819+8]..[603,18819+29])
                            Pexp_constant PConst_string("Values do not match",(typing/includemod_errorprinter.ml[603,18819+9]..[603,18819+28]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[604,18849+8]..[604,18849+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[604,18849+8]..[604,18849+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[604,18849+8]..[604,18849+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[604,18849+9]..[604,18849+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[604,18849+9]..[604,18849+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[605,18878+8]..[605,18878+56])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[605,18878+9]..[605,18878+43])
                              Pexp_ident "Printtyp.tree_of_value_description" (typing/includemod_errorprinter.ml[605,18878+9]..[605,18878+43])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[605,18878+44]..[605,18878+46])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[605,18878+44]..[605,18878+46])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[605,18878+47]..[605,18878+55])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[605,18878+47]..[605,18878+51])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[605,18878+47]..[605,18878+51])
                                  "got" (typing/includemod_errorprinter.ml[605,18878+52]..[605,18878+55])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[606,18935+8]..[606,18935+28])
                            Pexp_constant PConst_string("is not included in",(typing/includemod_errorprinter.ml[606,18935+9]..[606,18935+27]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[607,18964+8]..[607,18964+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[607,18964+8]..[607,18964+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[607,18964+8]..[607,18964+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[607,18964+9]..[607,18964+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[607,18964+9]..[607,18964+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[608,18993+8]..[608,18993+61])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[608,18993+9]..[608,18993+43])
                              Pexp_ident "Printtyp.tree_of_value_description" (typing/includemod_errorprinter.ml[608,18993+9]..[608,18993+43])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[608,18993+44]..[608,18993+46])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[608,18993+44]..[608,18993+46])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[608,18993+47]..[608,18993+60])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[608,18993+47]..[608,18993+51])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[608,18993+47]..[608,18993+51])
                                  "expected" (typing/includemod_errorprinter.ml[608,18993+52]..[608,18993+60])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[609,19055+8]..[610,19098+40])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[609,19055+9]..[609,19055+42])
                              Pexp_ident "Includecore.report_value_mismatch" (typing/includemod_errorprinter.ml[609,19055+9]..[609,19055+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[610,19098+11]..[610,19098+22])
                                  Pexp_constant PConst_string("the first",(typing/includemod_errorprinter.ml[610,19098+12]..[610,19098+21]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[610,19098+23]..[610,19098+35])
                                  Pexp_constant PConst_string("the second",(typing/includemod_errorprinter.ml[610,19098+24]..[610,19098+34]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[610,19098+36]..[610,19098+39])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[610,19098+36]..[610,19098+39])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[610,19098+41]..[610,19098+53])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[610,19098+41]..[610,19098+45])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[610,19098+41]..[610,19098+45])
                            "symptom" (typing/includemod_errorprinter.ml[610,19098+46]..[610,19098+53])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[611,19152+8]..[611,19152+17])
                            Pexp_ident "show_locs" (typing/includemod_errorprinter.ml[611,19152+8]..[611,19152+17])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[611,19152+18]..[611,19152+59])
                            Pexp_tuple
                            [
                              expression (typing/includemod_errorprinter.ml[611,19152+19]..[611,19152+35])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[611,19152+19]..[611,19152+27])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[611,19152+19]..[611,19152+23])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[611,19152+19]..[611,19152+23])
                                  "got" (typing/includemod_errorprinter.ml[611,19152+24]..[611,19152+27])
                                "val_loc" (typing/includemod_errorprinter.ml[611,19152+28]..[611,19152+35])
                              expression (typing/includemod_errorprinter.ml[611,19152+37]..[611,19152+58])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[611,19152+37]..[611,19152+50])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[611,19152+37]..[611,19152+41])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[611,19152+37]..[611,19152+41])
                                  "expected" (typing/includemod_errorprinter.ml[611,19152+42]..[611,19152+50])
                                "val_loc" (typing/includemod_errorprinter.ml[611,19152+51]..[611,19152+58])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[612,19212+8]..[612,19212+45])
                            Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[612,19212+8]..[612,19212+45])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[613,19258+4]..[613,19258+30])
                      Ppat_construct "Err.Type_declarations" (typing/includemod_errorprinter.ml[613,19258+4]..[613,19258+25])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[613,19258+26]..[613,19258+30])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[613,19258+26]..[613,19258+30])
                    expression (typing/includemod_errorprinter.ml[614,19292+6]..[624,19801+45])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[614,19292+6]..[614,19292+20])
                        Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[614,19292+6]..[614,19292+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[614,19292+21]..[614,19292+69])
                            Pexp_constant PConst_string("@[<v>@[<hv>%s:@;<1 2>%a@ %s@;<1 2>%a@]%a%a%t@]",(typing/includemod_errorprinter.ml[614,19292+22]..[614,19292+68]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[615,19362+8]..[615,19362+40])
                            Pexp_constant PConst_string("Type declarations do not match",(typing/includemod_errorprinter.ml[615,19362+9]..[615,19362+39]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[616,19403+8]..[616,19403+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[616,19403+8]..[616,19403+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[616,19403+8]..[616,19403+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[616,19403+9]..[616,19403+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[616,19403+9]..[616,19403+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[617,19432+8]..[617,19432+66])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[617,19432+9]..[617,19432+42])
                              Pexp_ident "Printtyp.tree_of_type_declaration" (typing/includemod_errorprinter.ml[617,19432+9]..[617,19432+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[617,19432+43]..[617,19432+45])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[617,19432+43]..[617,19432+45])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[617,19432+46]..[617,19432+54])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[617,19432+46]..[617,19432+50])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[617,19432+46]..[617,19432+50])
                                  "got" (typing/includemod_errorprinter.ml[617,19432+51]..[617,19432+54])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[617,19432+55]..[617,19432+65])
                                  Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[617,19432+55]..[617,19432+65])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[618,19499+8]..[618,19499+28])
                            Pexp_constant PConst_string("is not included in",(typing/includemod_errorprinter.ml[618,19499+9]..[618,19499+27]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[619,19528+8]..[619,19528+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[619,19528+8]..[619,19528+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[619,19528+8]..[619,19528+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[619,19528+9]..[619,19528+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[619,19528+9]..[619,19528+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[620,19557+8]..[620,19557+71])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[620,19557+9]..[620,19557+42])
                              Pexp_ident "Printtyp.tree_of_type_declaration" (typing/includemod_errorprinter.ml[620,19557+9]..[620,19557+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[620,19557+43]..[620,19557+45])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[620,19557+43]..[620,19557+45])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[620,19557+46]..[620,19557+59])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[620,19557+46]..[620,19557+50])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[620,19557+46]..[620,19557+50])
                                  "expected" (typing/includemod_errorprinter.ml[620,19557+51]..[620,19557+59])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[620,19557+60]..[620,19557+70])
                                  Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[620,19557+60]..[620,19557+70])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[621,19629+8]..[622,19671+54])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[621,19629+9]..[621,19629+41])
                              Pexp_ident "Includecore.report_type_mismatch" (typing/includemod_errorprinter.ml[621,19629+9]..[621,19629+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[622,19671+11]..[622,19671+22])
                                  Pexp_constant PConst_string("the first",(typing/includemod_errorprinter.ml[622,19671+12]..[622,19671+21]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[622,19671+23]..[622,19671+35])
                                  Pexp_constant PConst_string("the second",(typing/includemod_errorprinter.ml[622,19671+24]..[622,19671+34]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[622,19671+36]..[622,19671+49])
                                  Pexp_constant PConst_string("declaration",(typing/includemod_errorprinter.ml[622,19671+37]..[622,19671+48]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[622,19671+50]..[622,19671+53])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[622,19671+50]..[622,19671+53])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[622,19671+55]..[622,19671+67])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[622,19671+55]..[622,19671+59])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[622,19671+55]..[622,19671+59])
                            "symptom" (typing/includemod_errorprinter.ml[622,19671+60]..[622,19671+67])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[623,19739+8]..[623,19739+17])
                            Pexp_ident "show_locs" (typing/includemod_errorprinter.ml[623,19739+8]..[623,19739+17])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[623,19739+18]..[623,19739+61])
                            Pexp_tuple
                            [
                              expression (typing/includemod_errorprinter.ml[623,19739+19]..[623,19739+36])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[623,19739+19]..[623,19739+27])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[623,19739+19]..[623,19739+23])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[623,19739+19]..[623,19739+23])
                                  "got" (typing/includemod_errorprinter.ml[623,19739+24]..[623,19739+27])
                                "type_loc" (typing/includemod_errorprinter.ml[623,19739+28]..[623,19739+36])
                              expression (typing/includemod_errorprinter.ml[623,19739+38]..[623,19739+60])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[623,19739+38]..[623,19739+51])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[623,19739+38]..[623,19739+42])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[623,19739+38]..[623,19739+42])
                                  "expected" (typing/includemod_errorprinter.ml[623,19739+43]..[623,19739+51])
                                "type_loc" (typing/includemod_errorprinter.ml[623,19739+52]..[623,19739+60])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[624,19801+8]..[624,19801+45])
                            Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[624,19801+8]..[624,19801+45])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[625,19847+4]..[625,19847+35])
                      Ppat_construct "Err.Extension_constructors" (typing/includemod_errorprinter.ml[625,19847+4]..[625,19847+30])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[625,19847+31]..[625,19847+35])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[625,19847+31]..[625,19847+35])
                    expression (typing/includemod_errorprinter.ml[626,19886+6]..[636,20427+45])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[626,19886+6]..[626,19886+20])
                        Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[626,19886+6]..[626,19886+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[626,19886+21]..[626,19886+71])
                            Pexp_constant PConst_string("@[<v>@[<hv>%s:@;<1 2>%a@ %s@;<1 2>%a@]@ %a%a%t@]",(typing/includemod_errorprinter.ml[626,19886+22]..[626,19886+70]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[627,19958+8]..[627,19958+45])
                            Pexp_constant PConst_string("Extension declarations do not match",(typing/includemod_errorprinter.ml[627,19958+9]..[627,19958+44]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[628,20004+8]..[628,20004+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[628,20004+8]..[628,20004+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[628,20004+8]..[628,20004+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[628,20004+9]..[628,20004+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[628,20004+9]..[628,20004+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[629,20033+8]..[629,20033+71])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[629,20033+9]..[629,20033+47])
                              Pexp_ident "Printtyp.tree_of_extension_constructor" (typing/includemod_errorprinter.ml[629,20033+9]..[629,20033+47])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[629,20033+48]..[629,20033+50])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[629,20033+48]..[629,20033+50])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[629,20033+51]..[629,20033+59])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[629,20033+51]..[629,20033+55])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[629,20033+51]..[629,20033+55])
                                  "got" (typing/includemod_errorprinter.ml[629,20033+56]..[629,20033+59])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[629,20033+60]..[629,20033+70])
                                  Pexp_construct "Text_first" (typing/includemod_errorprinter.ml[629,20033+60]..[629,20033+70])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[630,20105+8]..[630,20105+28])
                            Pexp_constant PConst_string("is not included in",(typing/includemod_errorprinter.ml[630,20105+9]..[630,20105+27]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[631,20134+8]..[631,20134+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[631,20134+8]..[631,20134+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[631,20134+8]..[631,20134+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[631,20134+9]..[631,20134+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[631,20134+9]..[631,20134+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[632,20163+8]..[632,20163+76])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[632,20163+9]..[632,20163+47])
                              Pexp_ident "Printtyp.tree_of_extension_constructor" (typing/includemod_errorprinter.ml[632,20163+9]..[632,20163+47])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[632,20163+48]..[632,20163+50])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[632,20163+48]..[632,20163+50])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[632,20163+51]..[632,20163+64])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[632,20163+51]..[632,20163+55])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[632,20163+51]..[632,20163+55])
                                  "expected" (typing/includemod_errorprinter.ml[632,20163+56]..[632,20163+64])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[632,20163+65]..[632,20163+75])
                                  Pexp_construct "Text_first" (typing/includemod_errorprinter.ml[632,20163+65]..[632,20163+75])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[633,20240+8]..[634,20299+54])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[633,20240+9]..[633,20240+58])
                              Pexp_ident "Includecore.report_extension_constructor_mismatch" (typing/includemod_errorprinter.ml[633,20240+9]..[633,20240+58])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[634,20299+11]..[634,20299+22])
                                  Pexp_constant PConst_string("the first",(typing/includemod_errorprinter.ml[634,20299+12]..[634,20299+21]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[634,20299+23]..[634,20299+35])
                                  Pexp_constant PConst_string("the second",(typing/includemod_errorprinter.ml[634,20299+24]..[634,20299+34]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[634,20299+36]..[634,20299+49])
                                  Pexp_constant PConst_string("declaration",(typing/includemod_errorprinter.ml[634,20299+37]..[634,20299+48]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[634,20299+50]..[634,20299+53])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[634,20299+50]..[634,20299+53])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[634,20299+55]..[634,20299+67])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[634,20299+55]..[634,20299+59])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[634,20299+55]..[634,20299+59])
                            "symptom" (typing/includemod_errorprinter.ml[634,20299+60]..[634,20299+67])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[635,20367+8]..[635,20367+17])
                            Pexp_ident "show_locs" (typing/includemod_errorprinter.ml[635,20367+8]..[635,20367+17])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[635,20367+18]..[635,20367+59])
                            Pexp_tuple
                            [
                              expression (typing/includemod_errorprinter.ml[635,20367+19]..[635,20367+35])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[635,20367+19]..[635,20367+27])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[635,20367+19]..[635,20367+23])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[635,20367+19]..[635,20367+23])
                                  "got" (typing/includemod_errorprinter.ml[635,20367+24]..[635,20367+27])
                                "ext_loc" (typing/includemod_errorprinter.ml[635,20367+28]..[635,20367+35])
                              expression (typing/includemod_errorprinter.ml[635,20367+37]..[635,20367+58])
                                Pexp_field
                                expression (typing/includemod_errorprinter.ml[635,20367+37]..[635,20367+50])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[635,20367+37]..[635,20367+41])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[635,20367+37]..[635,20367+41])
                                  "expected" (typing/includemod_errorprinter.ml[635,20367+42]..[635,20367+50])
                                "ext_loc" (typing/includemod_errorprinter.ml[635,20367+51]..[635,20367+58])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[636,20427+8]..[636,20427+45])
                            Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[636,20427+8]..[636,20427+45])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[637,20473+4]..[637,20473+36])
                      Ppat_construct "Err.Class_type_declarations" (typing/includemod_errorprinter.ml[637,20473+4]..[637,20473+31])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[637,20473+32]..[637,20473+36])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[637,20473+32]..[637,20473+36])
                    expression (typing/includemod_errorprinter.ml[638,20513+6]..[646,20901+45])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[638,20513+6]..[638,20513+20])
                        Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[638,20513+6]..[638,20513+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[639,20534+8]..[640,20592+46])
                            Pexp_constant PConst_string("@[<hv 2>Class type declarations do not match:@ %a@;<1 -2>does not match@ %a@]@ %a%t",(typing/includemod_errorprinter.ml[639,20534+9]..[640,20592+45]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[641,20639+8]..[641,20639+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[641,20639+8]..[641,20639+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[641,20639+8]..[641,20639+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[641,20639+9]..[641,20639+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[641,20639+9]..[641,20639+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[642,20668+8]..[642,20668+68])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[642,20668+9]..[642,20668+44])
                              Pexp_ident "Printtyp.tree_of_cltype_declaration" (typing/includemod_errorprinter.ml[642,20668+9]..[642,20668+44])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[642,20668+45]..[642,20668+47])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[642,20668+45]..[642,20668+47])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[642,20668+48]..[642,20668+56])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[642,20668+48]..[642,20668+52])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[642,20668+48]..[642,20668+52])
                                  "got" (typing/includemod_errorprinter.ml[642,20668+53]..[642,20668+56])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[642,20668+57]..[642,20668+67])
                                  Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[642,20668+57]..[642,20668+67])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[643,20737+8]..[643,20737+28])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[643,20737+8]..[643,20737+9])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[643,20737+8]..[643,20737+9])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[643,20737+9]..[643,20737+28])
                                  Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[643,20737+9]..[643,20737+28])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[644,20766+8]..[644,20766+73])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[644,20766+9]..[644,20766+44])
                              Pexp_ident "Printtyp.tree_of_cltype_declaration" (typing/includemod_errorprinter.ml[644,20766+9]..[644,20766+44])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[644,20766+45]..[644,20766+47])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[644,20766+45]..[644,20766+47])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[644,20766+48]..[644,20766+61])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[644,20766+48]..[644,20766+52])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[644,20766+48]..[644,20766+52])
                                  "expected" (typing/includemod_errorprinter.ml[644,20766+53]..[644,20766+61])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[644,20766+62]..[644,20766+72])
                                  Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[644,20766+62]..[644,20766+72])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[645,20840+8]..[645,20840+47])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[645,20840+9]..[645,20840+34])
                              Pexp_ident "Includeclass.report_error" (typing/includemod_errorprinter.ml[645,20840+9]..[645,20840+34])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[645,20840+35]..[645,20840+46])
                                  Pexp_construct "Type_scheme" (typing/includemod_errorprinter.ml[645,20840+35]..[645,20840+46])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[645,20840+48]..[645,20840+60])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[645,20840+48]..[645,20840+52])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[645,20840+48]..[645,20840+52])
                            "symptom" (typing/includemod_errorprinter.ml[645,20840+53]..[645,20840+60])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[646,20901+8]..[646,20901+45])
                            Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[646,20901+8]..[646,20901+45])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[647,20947+4]..[647,20947+49])
                      Ppat_construct "Err.Class_declarations" (typing/includemod_errorprinter.ml[647,20947+4]..[647,20947+26])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[647,20947+27]..[647,20947+49])
                          Ppat_record Closed
                          [
                            "got" (typing/includemod_errorprinter.ml[647,20947+28]..[647,20947+31]) ghost
                              pattern (typing/includemod_errorprinter.ml[647,20947+28]..[647,20947+31])
                                Ppat_var "got" (typing/includemod_errorprinter.ml[647,20947+28]..[647,20947+31])
                            "expected" (typing/includemod_errorprinter.ml[647,20947+32]..[647,20947+40]) ghost
                              pattern (typing/includemod_errorprinter.ml[647,20947+32]..[647,20947+40])
                                Ppat_var "expected" (typing/includemod_errorprinter.ml[647,20947+32]..[647,20947+40])
                            "symptom" (typing/includemod_errorprinter.ml[647,20947+41]..[647,20947+48]) ghost
                              pattern (typing/includemod_errorprinter.ml[647,20947+41]..[647,20947+48])
                                Ppat_var "symptom" (typing/includemod_errorprinter.ml[647,20947+41]..[647,20947+48])
                          ]
                    expression (typing/includemod_errorprinter.ml[648,21000+6]..[656,21388+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[648,21000+10]..[648,21000+12])
                            Ppat_var "t1" (typing/includemod_errorprinter.ml[648,21000+10]..[648,21000+12])
                          expression (typing/includemod_errorprinter.ml[648,21000+15]..[648,21000+67])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[648,21000+15]..[648,21000+49])
                              Pexp_ident "Printtyp.tree_of_class_declaration" (typing/includemod_errorprinter.ml[648,21000+15]..[648,21000+49])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[648,21000+50]..[648,21000+52])
                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[648,21000+50]..[648,21000+52])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[648,21000+53]..[648,21000+56])
                                  Pexp_ident "got" (typing/includemod_errorprinter.ml[648,21000+53]..[648,21000+56])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[648,21000+57]..[648,21000+67])
                                  Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[648,21000+57]..[648,21000+67])
                                  None
                            ]
                      ]
                      expression (typing/includemod_errorprinter.ml[649,21071+6]..[656,21388+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[649,21071+10]..[649,21071+12])
                              Ppat_var "t2" (typing/includemod_errorprinter.ml[649,21071+10]..[649,21071+12])
                            expression (typing/includemod_errorprinter.ml[649,21071+15]..[649,21071+72])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[649,21071+15]..[649,21071+49])
                                Pexp_ident "Printtyp.tree_of_class_declaration" (typing/includemod_errorprinter.ml[649,21071+15]..[649,21071+49])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[649,21071+50]..[649,21071+52])
                                    Pexp_ident "id" (typing/includemod_errorprinter.ml[649,21071+50]..[649,21071+52])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[649,21071+53]..[649,21071+61])
                                    Pexp_ident "expected" (typing/includemod_errorprinter.ml[649,21071+53]..[649,21071+61])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[649,21071+62]..[649,21071+72])
                                    Pexp_construct "Trec_first" (typing/includemod_errorprinter.ml[649,21071+62]..[649,21071+72])
                                    None
                              ]
                        ]
                        expression (typing/includemod_errorprinter.ml[650,21147+6]..[656,21388+45])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[650,21147+6]..[650,21147+20])
                            Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[650,21147+6]..[650,21147+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[651,21168+8]..[652,21221+46])
                                Pexp_constant PConst_string("@[<hv 2>Class declarations do not match:@ %a@;<1 -2>does not match@ %a@]@ %a%t",(typing/includemod_errorprinter.ml[651,21168+9]..[652,21221+45]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[653,21268+8]..[653,21268+28])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[653,21268+8]..[653,21268+9])
                                  Pexp_ident "!" (typing/includemod_errorprinter.ml[653,21268+8]..[653,21268+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[653,21268+9]..[653,21268+28])
                                      Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[653,21268+9]..[653,21268+28])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[653,21268+29]..[653,21268+31])
                                Pexp_ident "t1" (typing/includemod_errorprinter.ml[653,21268+29]..[653,21268+31])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[654,21300+8]..[654,21300+28])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[654,21300+8]..[654,21300+9])
                                  Pexp_ident "!" (typing/includemod_errorprinter.ml[654,21300+8]..[654,21300+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[654,21300+9]..[654,21300+28])
                                      Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[654,21300+9]..[654,21300+28])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[654,21300+29]..[654,21300+31])
                                Pexp_ident "t2" (typing/includemod_errorprinter.ml[654,21300+29]..[654,21300+31])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[655,21332+8]..[655,21332+47])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[655,21332+9]..[655,21332+34])
                                  Pexp_ident "Includeclass.report_error" (typing/includemod_errorprinter.ml[655,21332+9]..[655,21332+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[655,21332+35]..[655,21332+46])
                                      Pexp_construct "Type_scheme" (typing/includemod_errorprinter.ml[655,21332+35]..[655,21332+46])
                                      None
                                ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[655,21332+48]..[655,21332+55])
                                Pexp_ident "symptom" (typing/includemod_errorprinter.ml[655,21332+48]..[655,21332+55])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[656,21388+8]..[656,21388+45])
                                Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[656,21388+8]..[656,21388+45])
                          ]
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[658,21435+0]..[662,21647+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[658,21435+4]..[658,21435+17])
          Ppat_var "missing_field" (typing/includemod_errorprinter.ml[658,21435+4]..[658,21435+17])
        expression (typing/includemod_errorprinter.ml[658,21435+18]..[662,21647+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[658,21435+18]..[658,21435+21])
            Ppat_var "ppf" (typing/includemod_errorprinter.ml[658,21435+18]..[658,21435+21])
          expression (typing/includemod_errorprinter.ml[658,21435+22]..[662,21647+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[658,21435+22]..[658,21435+26])
              Ppat_var "item" (typing/includemod_errorprinter.ml[658,21435+22]..[658,21435+26])
            expression (typing/includemod_errorprinter.ml[659,21464+2]..[662,21647+41])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/includemod_errorprinter.ml[659,21464+6]..[659,21464+19])
                    Ppat_tuple
                    [
                      pattern (typing/includemod_errorprinter.ml[659,21464+6]..[659,21464+8])
                        Ppat_var "id" (typing/includemod_errorprinter.ml[659,21464+6]..[659,21464+8])
                      pattern (typing/includemod_errorprinter.ml[659,21464+10]..[659,21464+13])
                        Ppat_var "loc" (typing/includemod_errorprinter.ml[659,21464+10]..[659,21464+13])
                      pattern (typing/includemod_errorprinter.ml[659,21464+15]..[659,21464+19])
                        Ppat_var "kind" (typing/includemod_errorprinter.ml[659,21464+15]..[659,21464+19])
                    ]
                  expression (typing/includemod_errorprinter.ml[659,21464+23]..[659,21464+54])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[659,21464+23]..[659,21464+49])
                      Pexp_ident "Includemod.item_ident_name" (typing/includemod_errorprinter.ml[659,21464+23]..[659,21464+49])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[659,21464+50]..[659,21464+54])
                          Pexp_ident "item" (typing/includemod_errorprinter.ml[659,21464+50]..[659,21464+54])
                    ]
              ]
              expression (typing/includemod_errorprinter.ml[660,21522+2]..[662,21647+41])
                Pexp_apply
                expression (typing/includemod_errorprinter.ml[660,21522+2]..[660,21522+16])
                  Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[660,21522+2]..[660,21522+16])
                [
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[660,21522+17]..[660,21522+20])
                      Pexp_ident "ppf" (typing/includemod_errorprinter.ml[660,21522+17]..[660,21522+20])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[660,21522+21]..[660,21522+65])
                      Pexp_constant PConst_string("The %s `%a' is required but not provided%a",(typing/includemod_errorprinter.ml[660,21522+22]..[660,21522+64]),None)
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[661,21588+4]..[661,21588+40])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[661,21588+5]..[661,21588+34])
                        Pexp_ident "Includemod.kind_of_field_desc" (typing/includemod_errorprinter.ml[661,21588+5]..[661,21588+34])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[661,21588+35]..[661,21588+39])
                            Pexp_ident "kind" (typing/includemod_errorprinter.ml[661,21588+35]..[661,21588+39])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[661,21588+41]..[661,21588+55])
                      Pexp_ident "Printtyp.ident" (typing/includemod_errorprinter.ml[661,21588+41]..[661,21588+55])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[661,21588+56]..[661,21588+58])
                      Pexp_ident "id" (typing/includemod_errorprinter.ml[661,21588+56]..[661,21588+58])
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[662,21647+4]..[662,21647+37])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[662,21647+5]..[662,21647+13])
                        Pexp_ident "show_loc" (typing/includemod_errorprinter.ml[662,21647+5]..[662,21647+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[662,21647+14]..[662,21647+36])
                            Pexp_constant PConst_string("Expected declaration",(typing/includemod_errorprinter.ml[662,21647+15]..[662,21647+35]),None)
                      ]
                  <arg>
                  Nolabel
                    expression (typing/includemod_errorprinter.ml[662,21647+38]..[662,21647+41])
                      Pexp_ident "loc" (typing/includemod_errorprinter.ml[662,21647+38]..[662,21647+41])
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[664,21690+0]..[669,21895+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[664,21690+4]..[664,21690+16])
          Ppat_var "module_types" (typing/includemod_errorprinter.ml[664,21690+4]..[664,21690+16])
        expression (typing/includemod_errorprinter.ml[664,21690+17]..[669,21895+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[664,21690+17]..[664,21690+46])
            Ppat_record Closed
            [
              "Err.got" (typing/includemod_errorprinter.ml[664,21690+18]..[664,21690+25])
                pattern (typing/includemod_errorprinter.ml[664,21690+26]..[664,21690+30])
                  Ppat_var "mty1" (typing/includemod_errorprinter.ml[664,21690+26]..[664,21690+30])
              "expected" (typing/includemod_errorprinter.ml[664,21690+32]..[664,21690+40])
                pattern (typing/includemod_errorprinter.ml[664,21690+41]..[664,21690+45])
                  Ppat_var "mty2" (typing/includemod_errorprinter.ml[664,21690+41]..[664,21690+45])
            ]
          expression (typing/includemod_errorprinter.ml[665,21739+2]..[669,21895+59])
            Pexp_apply
            expression (typing/includemod_errorprinter.ml[665,21739+2]..[665,21739+16])
              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[665,21739+2]..[665,21739+16])
            [
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[666,21756+4]..[667,21794+40])
                  Pexp_constant PConst_string("@[<hv 2>Modules do not match:@ %a@;<1 -2>is not included in@ %a@]",(typing/includemod_errorprinter.ml[666,21756+5]..[667,21794+39]),None)
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[668,21835+4]..[668,21835+27])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[668,21835+4]..[668,21835+5])
                    Pexp_ident "!" (typing/includemod_errorprinter.ml[668,21835+4]..[668,21835+5])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[668,21835+5]..[668,21835+27])
                        Pexp_ident "Oprint.out_module_type" (typing/includemod_errorprinter.ml[668,21835+5]..[668,21835+27])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[668,21835+28]..[668,21835+59])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[668,21835+29]..[668,21835+53])
                    Pexp_ident "Printtyp.tree_of_modtype" (typing/includemod_errorprinter.ml[668,21835+29]..[668,21835+53])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[668,21835+54]..[668,21835+58])
                        Pexp_ident "mty1" (typing/includemod_errorprinter.ml[668,21835+54]..[668,21835+58])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[669,21895+4]..[669,21895+27])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[669,21895+4]..[669,21895+5])
                    Pexp_ident "!" (typing/includemod_errorprinter.ml[669,21895+4]..[669,21895+5])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[669,21895+5]..[669,21895+27])
                        Pexp_ident "Oprint.out_module_type" (typing/includemod_errorprinter.ml[669,21895+5]..[669,21895+27])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[669,21895+28]..[669,21895+59])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[669,21895+29]..[669,21895+53])
                    Pexp_ident "Printtyp.tree_of_modtype" (typing/includemod_errorprinter.ml[669,21895+29]..[669,21895+53])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[669,21895+54]..[669,21895+58])
                        Pexp_ident "mty2" (typing/includemod_errorprinter.ml[669,21895+54]..[669,21895+58])
                  ]
            ]
    ]
  structure_item (typing/includemod_errorprinter.ml[671,21956+0]..[676,22166+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[671,21956+4]..[671,21956+19])
          Ppat_var "eq_module_types" (typing/includemod_errorprinter.ml[671,21956+4]..[671,21956+19])
        expression (typing/includemod_errorprinter.ml[671,21956+20]..[676,22166+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[671,21956+20]..[671,21956+49])
            Ppat_record Closed
            [
              "Err.got" (typing/includemod_errorprinter.ml[671,21956+21]..[671,21956+28])
                pattern (typing/includemod_errorprinter.ml[671,21956+29]..[671,21956+33])
                  Ppat_var "mty1" (typing/includemod_errorprinter.ml[671,21956+29]..[671,21956+33])
              "expected" (typing/includemod_errorprinter.ml[671,21956+35]..[671,21956+43])
                pattern (typing/includemod_errorprinter.ml[671,21956+44]..[671,21956+48])
                  Ppat_var "mty2" (typing/includemod_errorprinter.ml[671,21956+44]..[671,21956+48])
            ]
          expression (typing/includemod_errorprinter.ml[672,22008+2]..[676,22166+59])
            Pexp_apply
            expression (typing/includemod_errorprinter.ml[672,22008+2]..[672,22008+16])
              Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[672,22008+2]..[672,22008+16])
            [
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[673,22025+4]..[674,22068+37])
                  Pexp_constant PConst_string("@[<hv 2>Module types do not match:@ %a@;<1 -2>is not equal to@ %a@]",(typing/includemod_errorprinter.ml[673,22025+5]..[674,22068+36]),None)
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[675,22106+4]..[675,22106+27])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[675,22106+4]..[675,22106+5])
                    Pexp_ident "!" (typing/includemod_errorprinter.ml[675,22106+4]..[675,22106+5])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[675,22106+5]..[675,22106+27])
                        Pexp_ident "Oprint.out_module_type" (typing/includemod_errorprinter.ml[675,22106+5]..[675,22106+27])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[675,22106+28]..[675,22106+59])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[675,22106+29]..[675,22106+53])
                    Pexp_ident "Printtyp.tree_of_modtype" (typing/includemod_errorprinter.ml[675,22106+29]..[675,22106+53])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[675,22106+54]..[675,22106+58])
                        Pexp_ident "mty1" (typing/includemod_errorprinter.ml[675,22106+54]..[675,22106+58])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[676,22166+4]..[676,22166+27])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[676,22166+4]..[676,22166+5])
                    Pexp_ident "!" (typing/includemod_errorprinter.ml[676,22166+4]..[676,22166+5])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[676,22166+5]..[676,22166+27])
                        Pexp_ident "Oprint.out_module_type" (typing/includemod_errorprinter.ml[676,22166+5]..[676,22166+27])
                  ]
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[676,22166+28]..[676,22166+59])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[676,22166+29]..[676,22166+53])
                    Pexp_ident "Printtyp.tree_of_modtype" (typing/includemod_errorprinter.ml[676,22166+29]..[676,22166+53])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[676,22166+54]..[676,22166+58])
                        Pexp_ident "mty2" (typing/includemod_errorprinter.ml[676,22166+54]..[676,22166+58])
                  ]
            ]
    ]
  structure_item (typing/includemod_errorprinter.ml[678,22227+0]..[683,22467+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[678,22227+4]..[678,22227+28])
          Ppat_var "module_type_declarations" (typing/includemod_errorprinter.ml[678,22227+4]..[678,22227+28])
        expression (typing/includemod_errorprinter.ml[678,22227+29]..[683,22467+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[678,22227+29]..[678,22227+31])
            Ppat_var "id" (typing/includemod_errorprinter.ml[678,22227+29]..[678,22227+31])
          expression (typing/includemod_errorprinter.ml[678,22227+32]..[683,22467+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[678,22227+32]..[678,22227+58])
              Ppat_record Closed
              [
                "Err.got" (typing/includemod_errorprinter.ml[678,22227+33]..[678,22227+40])
                  pattern (typing/includemod_errorprinter.ml[678,22227+41]..[678,22227+43])
                    Ppat_var "d1" (typing/includemod_errorprinter.ml[678,22227+41]..[678,22227+43])
                "expected" (typing/includemod_errorprinter.ml[678,22227+46]..[678,22227+54])
                  pattern (typing/includemod_errorprinter.ml[678,22227+55]..[678,22227+57])
                    Ppat_var "d2" (typing/includemod_errorprinter.ml[678,22227+55]..[678,22227+57])
              ]
            expression (typing/includemod_errorprinter.ml[679,22288+2]..[683,22467+69])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[679,22288+2]..[679,22288+16])
                Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[679,22288+2]..[679,22288+16])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[680,22305+4]..[681,22360+36])
                    Pexp_constant PConst_string("@[<hv 2>Module type declarations do not match:@ %a@;<1 -2>does not match@ %a@]",(typing/includemod_errorprinter.ml[680,22305+5]..[681,22360+35]),None)
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[682,22397+4]..[682,22397+24])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[682,22397+4]..[682,22397+5])
                      Pexp_ident "!" (typing/includemod_errorprinter.ml[682,22397+4]..[682,22397+5])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[682,22397+5]..[682,22397+24])
                          Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[682,22397+5]..[682,22397+24])
                    ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[682,22397+25]..[682,22397+69])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[682,22397+26]..[682,22397+62])
                      Pexp_ident "Printtyp.tree_of_modtype_declaration" (typing/includemod_errorprinter.ml[682,22397+26]..[682,22397+62])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[682,22397+63]..[682,22397+65])
                          Pexp_ident "id" (typing/includemod_errorprinter.ml[682,22397+63]..[682,22397+65])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[682,22397+66]..[682,22397+68])
                          Pexp_ident "d1" (typing/includemod_errorprinter.ml[682,22397+66]..[682,22397+68])
                    ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[683,22467+4]..[683,22467+24])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[683,22467+4]..[683,22467+5])
                      Pexp_ident "!" (typing/includemod_errorprinter.ml[683,22467+4]..[683,22467+5])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[683,22467+5]..[683,22467+24])
                          Pexp_ident "Oprint.out_sig_item" (typing/includemod_errorprinter.ml[683,22467+5]..[683,22467+24])
                    ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[683,22467+25]..[683,22467+69])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[683,22467+26]..[683,22467+62])
                      Pexp_ident "Printtyp.tree_of_modtype_declaration" (typing/includemod_errorprinter.ml[683,22467+26]..[683,22467+62])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[683,22467+63]..[683,22467+65])
                          Pexp_ident "id" (typing/includemod_errorprinter.ml[683,22467+63]..[683,22467+65])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[683,22467+66]..[683,22467+68])
                          Pexp_ident "d2" (typing/includemod_errorprinter.ml[683,22467+66]..[683,22467+68])
                    ]
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[685,22538+0]..[688,22671+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[685,22538+4]..[685,22538+22])
          Ppat_var "interface_mismatch" (typing/includemod_errorprinter.ml[685,22538+4]..[685,22538+22])
        expression (typing/includemod_errorprinter.ml[685,22538+23]..[688,22671+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[685,22538+23]..[685,22538+26])
            Ppat_var "ppf" (typing/includemod_errorprinter.ml[685,22538+23]..[685,22538+26])
          expression (typing/includemod_errorprinter.ml[685,22538+27]..[688,22671+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[685,22538+27]..[685,22538+45])
              Ppat_constraint
              pattern (typing/includemod_errorprinter.ml[685,22538+28]..[685,22538+32])
                Ppat_var "diff" (typing/includemod_errorprinter.ml[685,22538+28]..[685,22538+32])
              core_type (typing/includemod_errorprinter.ml[685,22538+34]..[685,22538+44])
                Ptyp_constr "Err.diff" (typing/includemod_errorprinter.ml[685,22538+36]..[685,22538+44])
                [
                  core_type (typing/includemod_errorprinter.ml[685,22538+34]..[685,22538+35])
                    Ptyp_any
                ]
            expression (typing/includemod_errorprinter.ml[686,22586+2]..[688,22671+26])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[686,22586+2]..[686,22586+16])
                Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[686,22586+2]..[686,22586+16])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[686,22586+17]..[686,22586+20])
                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[686,22586+17]..[686,22586+20])
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[687,22607+4]..[687,22607+63])
                    Pexp_constant PConst_string("The implementation %s@ does not match the interface %s:@ ",(typing/includemod_errorprinter.ml[687,22607+5]..[687,22607+62]),None)
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[688,22671+4]..[688,22671+12])
                    Pexp_field
                    expression (typing/includemod_errorprinter.ml[688,22671+4]..[688,22671+8])
                      Pexp_ident "diff" (typing/includemod_errorprinter.ml[688,22671+4]..[688,22671+8])
                    "got" (typing/includemod_errorprinter.ml[688,22671+9]..[688,22671+12])
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[688,22671+13]..[688,22671+26])
                    Pexp_field
                    expression (typing/includemod_errorprinter.ml[688,22671+13]..[688,22671+17])
                      Pexp_ident "diff" (typing/includemod_errorprinter.ml[688,22671+13]..[688,22671+17])
                    "expected" (typing/includemod_errorprinter.ml[688,22671+18]..[688,22671+26])
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[690,22699+0]..[698,23009+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[690,22699+4]..[690,22699+28])
          Ppat_var "core_module_type_symptom" (typing/includemod_errorprinter.ml[690,22699+4]..[690,22699+28])
        expression (typing/includemod_errorprinter.ml[690,22699+29]..[698,23009+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[690,22699+29]..[690,22699+61])
            Ppat_constraint
            pattern (typing/includemod_errorprinter.ml[690,22699+30]..[690,22699+31])
              Ppat_var "x" (typing/includemod_errorprinter.ml[690,22699+30]..[690,22699+31])
            core_type (typing/includemod_errorprinter.ml[690,22699+32]..[690,22699+60])
              Ptyp_constr "Err.core_module_type_symptom" (typing/includemod_errorprinter.ml[690,22699+32]..[690,22699+60])
              []
          expression (typing/includemod_errorprinter.ml[691,22764+2]..[698,23009+65])
            Pexp_match
            expression (typing/includemod_errorprinter.ml[691,22764+8]..[691,22764+9])
              Pexp_ident "x" (typing/includemod_errorprinter.ml[691,22764+8]..[691,22764+9])
            [
              <case>
                pattern (typing/includemod_errorprinter.ml[692,22779+4]..[693,22839+24])
                  Ppat_or
                  pattern (typing/includemod_errorprinter.ml[692,22779+4]..[692,22779+59])
                    Ppat_or
                    pattern (typing/includemod_errorprinter.ml[692,22779+4]..[692,22779+36])
                      Ppat_or
                      pattern (typing/includemod_errorprinter.ml[692,22779+4]..[692,22779+16])
                        Ppat_construct "Not_an_alias" (typing/includemod_errorprinter.ml[692,22779+4]..[692,22779+16])
                        None
                      pattern (typing/includemod_errorprinter.ml[692,22779+19]..[692,22779+36])
                        Ppat_construct "Not_an_identifier" (typing/includemod_errorprinter.ml[692,22779+19]..[692,22779+36])
                        None
                    pattern (typing/includemod_errorprinter.ml[692,22779+39]..[692,22779+59])
                      Ppat_construct "Abstract_module_type" (typing/includemod_errorprinter.ml[692,22779+39]..[692,22779+59])
                      None
                  pattern (typing/includemod_errorprinter.ml[693,22839+4]..[693,22839+24])
                    Ppat_construct "Incompatible_aliases" (typing/includemod_errorprinter.ml[693,22839+4]..[693,22839+24])
                    None
                expression (typing/includemod_errorprinter.ml[694,22867+6]..[696,22961+15])
                  Pexp_ifthenelse
                  expression (typing/includemod_errorprinter.ml[694,22867+9]..[694,22867+37])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[694,22867+9]..[694,22867+34])
                      Pexp_ident "Printtyp.Conflicts.exists" (typing/includemod_errorprinter.ml[694,22867+9]..[694,22867+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[694,22867+35]..[694,22867+37])
                          Pexp_construct "()" (typing/includemod_errorprinter.ml[694,22867+35]..[694,22867+37])
                          None
                    ]
                  expression (typing/includemod_errorprinter.ml[695,22910+8]..[695,22910+50])
                    Pexp_construct "Some" (typing/includemod_errorprinter.ml[695,22910+8]..[695,22910+12])
                    Some
                      expression (typing/includemod_errorprinter.ml[695,22910+13]..[695,22910+50])
                        Pexp_ident "Printtyp.Conflicts.print_explanations" (typing/includemod_errorprinter.ml[695,22910+13]..[695,22910+50])
                  Some
                    expression (typing/includemod_errorprinter.ml[696,22961+11]..[696,22961+15])
                      Pexp_construct "None" (typing/includemod_errorprinter.ml[696,22961+11]..[696,22961+15])
                      None
              <case>
                pattern (typing/includemod_errorprinter.ml[697,22977+4]..[697,22977+28])
                  Ppat_construct "Unbound_module_path" (typing/includemod_errorprinter.ml[697,22977+4]..[697,22977+23])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[697,22977+24]..[697,22977+28])
                      Ppat_var "path" (typing/includemod_errorprinter.ml[697,22977+24]..[697,22977+28])
                expression (typing/includemod_errorprinter.ml[698,23009+6]..[698,23009+65])
                  Pexp_construct "Some" (typing/includemod_errorprinter.ml[698,23009+6]..[698,23009+10])
                  Some
                    expression (typing/includemod_errorprinter.ml[698,23009+10]..[698,23009+65])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[698,23009+11]..[698,23009+25])
                        Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[698,23009+11]..[698,23009+25])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[698,23009+26]..[698,23009+45])
                            Pexp_constant PConst_string("Unbound module %a",(typing/includemod_errorprinter.ml[698,23009+27]..[698,23009+44]),None)
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[698,23009+46]..[698,23009+59])
                            Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[698,23009+46]..[698,23009+59])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[698,23009+60]..[698,23009+64])
                            Pexp_ident "path" (typing/includemod_errorprinter.ml[698,23009+60]..[698,23009+64])
                      ]
            ]
    ]
  structure_item (typing/includemod_errorprinter.ml[702,23140+0]..[821,27940+46])
    Pstr_value Rec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[702,23140+8]..[702,23140+19])
          Ppat_var "module_type" (typing/includemod_errorprinter.ml[702,23140+8]..[702,23140+19])
        expression (typing/includemod_errorprinter.ml[702,23140+20]..[715,23853+20]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[702,23140+21]..[702,23140+36])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[702,23140+21]..[702,23140+36])
          expression (typing/includemod_errorprinter.ml[702,23140+37]..[715,23853+20]) ghost
            Pexp_fun
            Labelled "eqmode"
            None
            pattern (typing/includemod_errorprinter.ml[702,23140+38]..[702,23140+44])
              Ppat_var "eqmode" (typing/includemod_errorprinter.ml[702,23140+38]..[702,23140+44])
            expression (typing/includemod_errorprinter.ml[702,23140+45]..[715,23853+20]) ghost
              Pexp_fun
              Labelled "env"
              None
              pattern (typing/includemod_errorprinter.ml[702,23140+46]..[702,23140+49])
                Ppat_var "env" (typing/includemod_errorprinter.ml[702,23140+46]..[702,23140+49])
              expression (typing/includemod_errorprinter.ml[702,23140+50]..[715,23853+20]) ghost
                Pexp_fun
                Labelled "before"
                None
                pattern (typing/includemod_errorprinter.ml[702,23140+51]..[702,23140+57])
                  Ppat_var "before" (typing/includemod_errorprinter.ml[702,23140+51]..[702,23140+57])
                expression (typing/includemod_errorprinter.ml[702,23140+58]..[715,23853+20]) ghost
                  Pexp_fun
                  Labelled "ctx"
                  None
                  pattern (typing/includemod_errorprinter.ml[702,23140+59]..[702,23140+62])
                    Ppat_var "ctx" (typing/includemod_errorprinter.ml[702,23140+59]..[702,23140+62])
                  expression (typing/includemod_errorprinter.ml[702,23140+63]..[715,23853+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[702,23140+63]..[702,23140+67])
                      Ppat_var "diff" (typing/includemod_errorprinter.ml[702,23140+63]..[702,23140+67])
                    expression (typing/includemod_errorprinter.ml[703,23210+2]..[715,23853+20])
                      Pexp_match
                      expression (typing/includemod_errorprinter.ml[703,23210+8]..[703,23210+20])
                        Pexp_field
                        expression (typing/includemod_errorprinter.ml[703,23210+8]..[703,23210+12])
                          Pexp_ident "diff" (typing/includemod_errorprinter.ml[703,23210+8]..[703,23210+12])
                        "symptom" (typing/includemod_errorprinter.ml[703,23210+13]..[703,23210+20])
                      [
                        <case>
                          pattern (typing/includemod_errorprinter.ml[704,23236+4]..[705,23308+27])
                            Ppat_or
                            pattern (typing/includemod_errorprinter.ml[704,23236+4]..[704,23236+26])
                              Ppat_construct "Invalid_module_alias" (typing/includemod_errorprinter.ml[704,23236+4]..[704,23236+24])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[704,23236+25]..[704,23236+26])
                                  Ppat_any
                            pattern (typing/includemod_errorprinter.ml[705,23308+4]..[705,23308+27])
                              Ppat_construct "After_alias_expansion" (typing/includemod_errorprinter.ml[705,23308+4]..[705,23308+25])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[705,23308+26]..[705,23308+27])
                                  Ppat_any
                          expression (typing/includemod_errorprinter.ml[706,23385+6]..[707,23454+20])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[706,23385+6]..[706,23385+25])
                              Pexp_ident "module_type_symptom" (typing/includemod_errorprinter.ml[706,23385+6]..[706,23385+25])
                            [
                              <arg>
                              Labelled "eqmode"
                                expression (typing/includemod_errorprinter.ml[706,23385+27]..[706,23385+33])
                                  Pexp_ident "eqmode" (typing/includemod_errorprinter.ml[706,23385+27]..[706,23385+33])
                              <arg>
                              Labelled "expansion_token"
                                expression (typing/includemod_errorprinter.ml[706,23385+35]..[706,23385+50])
                                  Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[706,23385+35]..[706,23385+50])
                              <arg>
                              Labelled "env"
                                expression (typing/includemod_errorprinter.ml[706,23385+52]..[706,23385+55])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[706,23385+52]..[706,23385+55])
                              <arg>
                              Labelled "before"
                                expression (typing/includemod_errorprinter.ml[706,23385+57]..[706,23385+63])
                                  Pexp_ident "before" (typing/includemod_errorprinter.ml[706,23385+57]..[706,23385+63])
                              <arg>
                              Labelled "ctx"
                                expression (typing/includemod_errorprinter.ml[706,23385+65]..[706,23385+68])
                                  Pexp_ident "ctx" (typing/includemod_errorprinter.ml[706,23385+65]..[706,23385+68])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[707,23454+8]..[707,23454+20])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[707,23454+8]..[707,23454+12])
                                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[707,23454+8]..[707,23454+12])
                                  "symptom" (typing/includemod_errorprinter.ml[707,23454+13]..[707,23454+20])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[708,23475+4]..[708,23475+20])
                            Ppat_construct "Functor" (typing/includemod_errorprinter.ml[708,23475+4]..[708,23475+11])
                            Some
                              []
                              pattern (typing/includemod_errorprinter.ml[708,23475+12]..[708,23475+20])
                                Ppat_construct "Params" (typing/includemod_errorprinter.ml[708,23475+12]..[708,23475+18])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[708,23475+19]..[708,23475+20])
                                    Ppat_var "d" (typing/includemod_errorprinter.ml[708,23475+19]..[708,23475+20])
                          expression (typing/includemod_errorprinter.ml[709,23549+6]..[709,23549+57])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[709,23549+6]..[709,23549+20])
                              Pexp_ident "functor_params" (typing/includemod_errorprinter.ml[709,23549+6]..[709,23549+20])
                            [
                              <arg>
                              Labelled "expansion_token"
                                expression (typing/includemod_errorprinter.ml[709,23549+22]..[709,23549+37])
                                  Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[709,23549+22]..[709,23549+37])
                              <arg>
                              Labelled "env"
                                expression (typing/includemod_errorprinter.ml[709,23549+39]..[709,23549+42])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[709,23549+39]..[709,23549+42])
                              <arg>
                              Labelled "before"
                                expression (typing/includemod_errorprinter.ml[709,23549+44]..[709,23549+50])
                                  Pexp_ident "before" (typing/includemod_errorprinter.ml[709,23549+44]..[709,23549+50])
                              <arg>
                              Labelled "ctx"
                                expression (typing/includemod_errorprinter.ml[709,23549+52]..[709,23549+55])
                                  Pexp_ident "ctx" (typing/includemod_errorprinter.ml[709,23549+52]..[709,23549+55])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[709,23549+56]..[709,23549+57])
                                  Pexp_ident "d" (typing/includemod_errorprinter.ml[709,23549+56]..[709,23549+57])
                            ]
                        <case>
                          pattern (typing/includemod_errorprinter.ml[710,23607+4]..[710,23607+5])
                            Ppat_any
                          expression (typing/includemod_errorprinter.ml[711,23616+6]..[715,23853+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[711,23616+10]..[711,23616+15])
                                  Ppat_var "inner" (typing/includemod_errorprinter.ml[711,23616+10]..[711,23616+15])
                                expression (typing/includemod_errorprinter.ml[711,23616+18]..[711,23616+66])
                                  Pexp_ifthenelse
                                  expression (typing/includemod_errorprinter.ml[711,23616+21]..[711,23616+27])
                                    Pexp_ident "eqmode" (typing/includemod_errorprinter.ml[711,23616+21]..[711,23616+27])
                                  expression (typing/includemod_errorprinter.ml[711,23616+33]..[711,23616+48])
                                    Pexp_ident "eq_module_types" (typing/includemod_errorprinter.ml[711,23616+33]..[711,23616+48])
                                  Some
                                    expression (typing/includemod_errorprinter.ml[711,23616+54]..[711,23616+66])
                                      Pexp_ident "module_types" (typing/includemod_errorprinter.ml[711,23616+54]..[711,23616+66])
                            ]
                            expression (typing/includemod_errorprinter.ml[712,23686+6]..[715,23853+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includemod_errorprinter.ml[712,23686+10]..[712,23686+14])
                                    Ppat_var "next" (typing/includemod_errorprinter.ml[712,23686+10]..[712,23686+14])
                                  expression (typing/includemod_errorprinter.ml[712,23686+17]..[712,23686+57])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[712,23686+17]..[712,23686+42])
                                      Pexp_ident "dwith_context_and_elision" (typing/includemod_errorprinter.ml[712,23686+17]..[712,23686+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[712,23686+43]..[712,23686+46])
                                          Pexp_ident "ctx" (typing/includemod_errorprinter.ml[712,23686+43]..[712,23686+46])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[712,23686+47]..[712,23686+52])
                                          Pexp_ident "inner" (typing/includemod_errorprinter.ml[712,23686+47]..[712,23686+52])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[712,23686+53]..[712,23686+57])
                                          Pexp_ident "diff" (typing/includemod_errorprinter.ml[712,23686+53]..[712,23686+57])
                                    ]
                              ]
                              expression (typing/includemod_errorprinter.ml[713,23747+6]..[715,23853+20])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[713,23747+10]..[713,23747+16])
                                      Ppat_var "before" (typing/includemod_errorprinter.ml[713,23747+10]..[713,23747+16])
                                    expression (typing/includemod_errorprinter.ml[713,23747+19]..[713,23747+33])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[713,23747+24]..[713,23747+26])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[713,23747+19]..[713,23747+33]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[713,23747+19]..[713,23747+23])
                                              Pexp_ident "next" (typing/includemod_errorprinter.ml[713,23747+19]..[713,23747+23])
                                            expression (typing/includemod_errorprinter.ml[713,23747+27]..[713,23747+33])
                                              Pexp_ident "before" (typing/includemod_errorprinter.ml[713,23747+27]..[713,23747+33])
                                          ]
                                ]
                                expression (typing/includemod_errorprinter.ml[714,23784+6]..[715,23853+20])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[714,23784+6]..[714,23784+25])
                                    Pexp_ident "module_type_symptom" (typing/includemod_errorprinter.ml[714,23784+6]..[714,23784+25])
                                  [
                                    <arg>
                                    Labelled "eqmode"
                                      expression (typing/includemod_errorprinter.ml[714,23784+27]..[714,23784+33])
                                        Pexp_ident "eqmode" (typing/includemod_errorprinter.ml[714,23784+27]..[714,23784+33])
                                    <arg>
                                    Labelled "expansion_token"
                                      expression (typing/includemod_errorprinter.ml[714,23784+35]..[714,23784+50])
                                        Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[714,23784+35]..[714,23784+50])
                                    <arg>
                                    Labelled "env"
                                      expression (typing/includemod_errorprinter.ml[714,23784+52]..[714,23784+55])
                                        Pexp_ident "env" (typing/includemod_errorprinter.ml[714,23784+52]..[714,23784+55])
                                    <arg>
                                    Labelled "before"
                                      expression (typing/includemod_errorprinter.ml[714,23784+57]..[714,23784+63])
                                        Pexp_ident "before" (typing/includemod_errorprinter.ml[714,23784+57]..[714,23784+63])
                                    <arg>
                                    Labelled "ctx"
                                      expression (typing/includemod_errorprinter.ml[714,23784+65]..[714,23784+68])
                                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[714,23784+65]..[714,23784+68])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[715,23853+8]..[715,23853+20])
                                        Pexp_field
                                        expression (typing/includemod_errorprinter.ml[715,23853+8]..[715,23853+12])
                                          Pexp_ident "diff" (typing/includemod_errorprinter.ml[715,23853+8]..[715,23853+12])
                                        "symptom" (typing/includemod_errorprinter.ml[715,23853+13]..[715,23853+20])
                                  ]
                      ]
      <def>
        pattern (typing/includemod_errorprinter.ml[717,23875+4]..[717,23875+23])
          Ppat_var "module_type_symptom" (typing/includemod_errorprinter.ml[717,23875+4]..[717,23875+23])
        expression (typing/includemod_errorprinter.ml[717,23875+24]..[731,24481+41]) ghost
          Pexp_fun
          Labelled "eqmode"
          None
          pattern (typing/includemod_errorprinter.ml[717,23875+25]..[717,23875+31])
            Ppat_var "eqmode" (typing/includemod_errorprinter.ml[717,23875+25]..[717,23875+31])
          expression (typing/includemod_errorprinter.ml[717,23875+32]..[731,24481+41]) ghost
            Pexp_fun
            Labelled "expansion_token"
            None
            pattern (typing/includemod_errorprinter.ml[717,23875+33]..[717,23875+48])
              Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[717,23875+33]..[717,23875+48])
            expression (typing/includemod_errorprinter.ml[717,23875+49]..[731,24481+41]) ghost
              Pexp_fun
              Labelled "env"
              None
              pattern (typing/includemod_errorprinter.ml[717,23875+50]..[717,23875+53])
                Ppat_var "env" (typing/includemod_errorprinter.ml[717,23875+50]..[717,23875+53])
              expression (typing/includemod_errorprinter.ml[717,23875+54]..[731,24481+41]) ghost
                Pexp_fun
                Labelled "before"
                None
                pattern (typing/includemod_errorprinter.ml[717,23875+55]..[717,23875+61])
                  Ppat_var "before" (typing/includemod_errorprinter.ml[717,23875+55]..[717,23875+61])
                expression (typing/includemod_errorprinter.ml[717,23875+62]..[731,24481+41]) ghost
                  Pexp_fun
                  Labelled "ctx"
                  None
                  pattern (typing/includemod_errorprinter.ml[717,23875+63]..[717,23875+66])
                    Ppat_var "ctx" (typing/includemod_errorprinter.ml[717,23875+63]..[717,23875+66])
                  expression (typing/includemod_errorprinter.ml[717,23875+69]..[731,24481+41])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[718,23953+4]..[718,23953+16])
                          Ppat_construct "Mt_core" (typing/includemod_errorprinter.ml[718,23953+4]..[718,23953+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[718,23953+12]..[718,23953+16])
                              Ppat_var "core" (typing/includemod_errorprinter.ml[718,23953+12]..[718,23953+16])
                        expression (typing/includemod_errorprinter.ml[719,23973+6]..[722,24101+9])
                          Pexp_match
                          expression (typing/includemod_errorprinter.ml[719,23973+18]..[719,23973+47])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[719,23973+18]..[719,23973+42])
                              Pexp_ident "core_module_type_symptom" (typing/includemod_errorprinter.ml[719,23973+18]..[719,23973+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[719,23973+43]..[719,23973+47])
                                  Pexp_ident "core" (typing/includemod_errorprinter.ml[719,23973+43]..[719,23973+47])
                            ]
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[720,24026+8]..[720,24026+12])
                                Ppat_construct "None" (typing/includemod_errorprinter.ml[720,24026+8]..[720,24026+12])
                                None
                              expression (typing/includemod_errorprinter.ml[720,24026+16]..[720,24026+22])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[720,24026+16]..[720,24026+22])
                            <case>
                              pattern (typing/includemod_errorprinter.ml[721,24049+8]..[721,24049+16])
                                Ppat_construct "Some" (typing/includemod_errorprinter.ml[721,24049+8]..[721,24049+12])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[721,24049+13]..[721,24049+16])
                                    Ppat_var "msg" (typing/includemod_errorprinter.ml[721,24049+13]..[721,24049+16])
                              expression (typing/includemod_errorprinter.ml[721,24049+20]..[721,24049+51])
                                Pexp_construct "::" (typing/includemod_errorprinter.ml[721,24049+42]..[721,24049+44])
                                Some
                                  expression (typing/includemod_errorprinter.ml[721,24049+20]..[721,24049+51]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/includemod_errorprinter.ml[721,24049+20]..[721,24049+41])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[721,24049+20]..[721,24049+32])
                                          Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[721,24049+20]..[721,24049+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[721,24049+33]..[721,24049+37])
                                              Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[721,24049+34]..[721,24049+36]),None)
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[721,24049+38]..[721,24049+41])
                                              Pexp_ident "msg" (typing/includemod_errorprinter.ml[721,24049+38]..[721,24049+41])
                                        ]
                                      expression (typing/includemod_errorprinter.ml[721,24049+45]..[721,24049+51])
                                        Pexp_ident "before" (typing/includemod_errorprinter.ml[721,24049+45]..[721,24049+51])
                                    ]
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[723,24111+4]..[723,24111+15])
                          Ppat_construct "Signature" (typing/includemod_errorprinter.ml[723,24111+4]..[723,24111+13])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[723,24111+14]..[723,24111+15])
                              Ppat_var "s" (typing/includemod_errorprinter.ml[723,24111+14]..[723,24111+15])
                        expression (typing/includemod_errorprinter.ml[723,24111+19]..[723,24111+65])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[723,24111+19]..[723,24111+28])
                            Pexp_ident "signature" (typing/includemod_errorprinter.ml[723,24111+19]..[723,24111+28])
                          [
                            <arg>
                            Labelled "expansion_token"
                              expression (typing/includemod_errorprinter.ml[723,24111+30]..[723,24111+45])
                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[723,24111+30]..[723,24111+45])
                            <arg>
                            Labelled "env"
                              expression (typing/includemod_errorprinter.ml[723,24111+47]..[723,24111+50])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[723,24111+47]..[723,24111+50])
                            <arg>
                            Labelled "before"
                              expression (typing/includemod_errorprinter.ml[723,24111+52]..[723,24111+58])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[723,24111+52]..[723,24111+58])
                            <arg>
                            Labelled "ctx"
                              expression (typing/includemod_errorprinter.ml[723,24111+60]..[723,24111+63])
                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[723,24111+60]..[723,24111+63])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[723,24111+64]..[723,24111+65])
                                Pexp_ident "s" (typing/includemod_errorprinter.ml[723,24111+64]..[723,24111+65])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[724,24177+4]..[724,24177+13])
                          Ppat_construct "Functor" (typing/includemod_errorprinter.ml[724,24177+4]..[724,24177+11])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[724,24177+12]..[724,24177+13])
                              Ppat_var "f" (typing/includemod_errorprinter.ml[724,24177+12]..[724,24177+13])
                        expression (typing/includemod_errorprinter.ml[724,24177+17]..[724,24177+69])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[724,24177+17]..[724,24177+32])
                            Pexp_ident "functor_symptom" (typing/includemod_errorprinter.ml[724,24177+17]..[724,24177+32])
                          [
                            <arg>
                            Labelled "expansion_token"
                              expression (typing/includemod_errorprinter.ml[724,24177+34]..[724,24177+49])
                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[724,24177+34]..[724,24177+49])
                            <arg>
                            Labelled "env"
                              expression (typing/includemod_errorprinter.ml[724,24177+51]..[724,24177+54])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[724,24177+51]..[724,24177+54])
                            <arg>
                            Labelled "before"
                              expression (typing/includemod_errorprinter.ml[724,24177+56]..[724,24177+62])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[724,24177+56]..[724,24177+62])
                            <arg>
                            Labelled "ctx"
                              expression (typing/includemod_errorprinter.ml[724,24177+64]..[724,24177+67])
                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[724,24177+64]..[724,24177+67])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[724,24177+68]..[724,24177+69])
                                Pexp_ident "f" (typing/includemod_errorprinter.ml[724,24177+68]..[724,24177+69])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[725,24247+4]..[725,24247+30])
                          Ppat_construct "After_alias_expansion" (typing/includemod_errorprinter.ml[725,24247+4]..[725,24247+25])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[725,24247+26]..[725,24247+30])
                              Ppat_var "diff" (typing/includemod_errorprinter.ml[725,24247+26]..[725,24247+30])
                        expression (typing/includemod_errorprinter.ml[726,24281+6]..[726,24281+65])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[726,24281+6]..[726,24281+17])
                            Pexp_ident "module_type" (typing/includemod_errorprinter.ml[726,24281+6]..[726,24281+17])
                          [
                            <arg>
                            Labelled "eqmode"
                              expression (typing/includemod_errorprinter.ml[726,24281+19]..[726,24281+25])
                                Pexp_ident "eqmode" (typing/includemod_errorprinter.ml[726,24281+19]..[726,24281+25])
                            <arg>
                            Labelled "expansion_token"
                              expression (typing/includemod_errorprinter.ml[726,24281+27]..[726,24281+42])
                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[726,24281+27]..[726,24281+42])
                            <arg>
                            Labelled "env"
                              expression (typing/includemod_errorprinter.ml[726,24281+44]..[726,24281+47])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[726,24281+44]..[726,24281+47])
                            <arg>
                            Labelled "before"
                              expression (typing/includemod_errorprinter.ml[726,24281+49]..[726,24281+55])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[726,24281+49]..[726,24281+55])
                            <arg>
                            Labelled "ctx"
                              expression (typing/includemod_errorprinter.ml[726,24281+57]..[726,24281+60])
                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[726,24281+57]..[726,24281+60])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[726,24281+61]..[726,24281+65])
                                Pexp_ident "diff" (typing/includemod_errorprinter.ml[726,24281+61]..[726,24281+65])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[727,24347+4]..[727,24347+29])
                          Ppat_construct "Invalid_module_alias" (typing/includemod_errorprinter.ml[727,24347+4]..[727,24347+24])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[727,24347+25]..[727,24347+29])
                              Ppat_var "path" (typing/includemod_errorprinter.ml[727,24347+25]..[727,24347+29])
                        expression (typing/includemod_errorprinter.ml[728,24380+6]..[731,24481+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[728,24380+10]..[728,24380+17])
                                Ppat_var "printer" (typing/includemod_errorprinter.ml[728,24380+10]..[728,24380+17])
                              expression (typing/includemod_errorprinter.ml[729,24400+8]..[729,24400+71])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[729,24400+8]..[729,24400+22])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[729,24400+8]..[729,24400+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[729,24400+23]..[729,24400+52])
                                      Pexp_constant PConst_string("Module %a cannot be aliased",(typing/includemod_errorprinter.ml[729,24400+24]..[729,24400+51]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[729,24400+53]..[729,24400+66])
                                      Pexp_ident "Printtyp.path" (typing/includemod_errorprinter.ml[729,24400+53]..[729,24400+66])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[729,24400+67]..[729,24400+71])
                                      Pexp_ident "path" (typing/includemod_errorprinter.ml[729,24400+67]..[729,24400+71])
                                ]
                          ]
                          expression (typing/includemod_errorprinter.ml[731,24481+6]..[731,24481+41])
                            Pexp_construct "::" (typing/includemod_errorprinter.ml[731,24481+32]..[731,24481+34])
                            Some
                              expression (typing/includemod_errorprinter.ml[731,24481+6]..[731,24481+41]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[731,24481+6]..[731,24481+31])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[731,24481+6]..[731,24481+19])
                                      Pexp_ident "dwith_context" (typing/includemod_errorprinter.ml[731,24481+6]..[731,24481+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[731,24481+20]..[731,24481+23])
                                          Pexp_ident "ctx" (typing/includemod_errorprinter.ml[731,24481+20]..[731,24481+23])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[731,24481+24]..[731,24481+31])
                                          Pexp_ident "printer" (typing/includemod_errorprinter.ml[731,24481+24]..[731,24481+31])
                                    ]
                                  expression (typing/includemod_errorprinter.ml[731,24481+35]..[731,24481+41])
                                    Pexp_ident "before" (typing/includemod_errorprinter.ml[731,24481+35]..[731,24481+41])
                                ]
                    ]
      <def>
        pattern (typing/includemod_errorprinter.ml[733,24524+4]..[733,24524+18])
          Ppat_var "functor_params" (typing/includemod_errorprinter.ml[733,24524+4]..[733,24524+18])
        expression (typing/includemod_errorprinter.ml[733,24524+19]..[750,25142+26]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[733,24524+20]..[733,24524+35])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[733,24524+20]..[733,24524+35])
          expression (typing/includemod_errorprinter.ml[733,24524+36]..[750,25142+26]) ghost
            Pexp_fun
            Labelled "env"
            None
            pattern (typing/includemod_errorprinter.ml[733,24524+37]..[733,24524+40])
              Ppat_var "env" (typing/includemod_errorprinter.ml[733,24524+37]..[733,24524+40])
            expression (typing/includemod_errorprinter.ml[733,24524+41]..[750,25142+26]) ghost
              Pexp_fun
              Labelled "before"
              None
              pattern (typing/includemod_errorprinter.ml[733,24524+42]..[733,24524+48])
                Ppat_var "before" (typing/includemod_errorprinter.ml[733,24524+42]..[733,24524+48])
              expression (typing/includemod_errorprinter.ml[733,24524+49]..[750,25142+26]) ghost
                Pexp_fun
                Labelled "ctx"
                None
                pattern (typing/includemod_errorprinter.ml[733,24524+50]..[733,24524+53])
                  Ppat_var "ctx" (typing/includemod_errorprinter.ml[733,24524+50]..[733,24524+53])
                expression (typing/includemod_errorprinter.ml[733,24524+54]..[750,25142+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[733,24524+54]..[733,24524+70])
                    Ppat_record Open
                    [
                      "got" (typing/includemod_errorprinter.ml[733,24524+55]..[733,24524+58]) ghost
                        pattern (typing/includemod_errorprinter.ml[733,24524+55]..[733,24524+58])
                          Ppat_var "got" (typing/includemod_errorprinter.ml[733,24524+55]..[733,24524+58])
                      "expected" (typing/includemod_errorprinter.ml[733,24524+59]..[733,24524+67]) ghost
                        pattern (typing/includemod_errorprinter.ml[733,24524+59]..[733,24524+67])
                          Ppat_var "expected" (typing/includemod_errorprinter.ml[733,24524+59]..[733,24524+67])
                    ]
                  expression (typing/includemod_errorprinter.ml[734,24597+2]..[750,25142+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includemod_errorprinter.ml[734,24597+6]..[734,24597+7])
                          Ppat_var "d" (typing/includemod_errorprinter.ml[734,24597+6]..[734,24597+7])
                        expression (typing/includemod_errorprinter.ml[734,24597+10]..[734,24597+59])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[734,24597+10]..[734,24597+42])
                            Pexp_ident "Functor_suberror.Inclusion.patch" (typing/includemod_errorprinter.ml[734,24597+10]..[734,24597+42])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[734,24597+43]..[734,24597+46])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[734,24597+43]..[734,24597+46])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[734,24597+47]..[734,24597+50])
                                Pexp_ident "got" (typing/includemod_errorprinter.ml[734,24597+47]..[734,24597+50])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[734,24597+51]..[734,24597+59])
                                Pexp_ident "expected" (typing/includemod_errorprinter.ml[734,24597+51]..[734,24597+59])
                          ]
                    ]
                    expression (typing/includemod_errorprinter.ml[735,24660+2]..[750,25142+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[735,24660+6]..[735,24660+12])
                            Ppat_var "actual" (typing/includemod_errorprinter.ml[735,24660+6]..[735,24660+12])
                          expression (typing/includemod_errorprinter.ml[735,24660+15]..[735,24660+47])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[735,24660+15]..[735,24660+45])
                              Pexp_ident "Functor_suberror.Inclusion.got" (typing/includemod_errorprinter.ml[735,24660+15]..[735,24660+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[735,24660+46]..[735,24660+47])
                                  Pexp_ident "d" (typing/includemod_errorprinter.ml[735,24660+46]..[735,24660+47])
                            ]
                      ]
                      expression (typing/includemod_errorprinter.ml[736,24711+2]..[750,25142+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[736,24711+6]..[736,24711+14])
                              Ppat_var "expected" (typing/includemod_errorprinter.ml[736,24711+6]..[736,24711+14])
                            expression (typing/includemod_errorprinter.ml[736,24711+17]..[736,24711+44])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[736,24711+17]..[736,24711+42])
                                Pexp_ident "Functor_suberror.expected" (typing/includemod_errorprinter.ml[736,24711+17]..[736,24711+42])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[736,24711+43]..[736,24711+44])
                                    Pexp_ident "d" (typing/includemod_errorprinter.ml[736,24711+43]..[736,24711+44])
                              ]
                        ]
                        expression (typing/includemod_errorprinter.ml[737,24759+2]..[750,25142+26])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[737,24759+6]..[737,24759+10])
                                Ppat_var "main" (typing/includemod_errorprinter.ml[737,24759+6]..[737,24759+10])
                              expression (typing/includemod_errorprinter.ml[738,24772+4]..[742,24925+21])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[738,24772+4]..[738,24772+18])
                                  Pexp_ident "Format.dprintf" (typing/includemod_errorprinter.ml[738,24772+4]..[738,24772+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[739,24791+6]..[741,24891+33])
                                      Pexp_constant PConst_string("@[<hv 2>Modules do not match:@ @[functor@ %t@ -> ...@]@;<1 -2>is not included in@ @[functor@ %t@ -> ...@]@]",(typing/includemod_errorprinter.ml[739,24791+7]..[741,24891+32]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[742,24925+6]..[742,24925+12])
                                      Pexp_ident "actual" (typing/includemod_errorprinter.ml[742,24925+6]..[742,24925+12])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[742,24925+13]..[742,24925+21])
                                      Pexp_ident "expected" (typing/includemod_errorprinter.ml[742,24925+13]..[742,24925+21])
                                ]
                          ]
                          expression (typing/includemod_errorprinter.ml[744,24952+2]..[750,25142+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[744,24952+6]..[744,24952+10])
                                  Ppat_var "msgs" (typing/includemod_errorprinter.ml[744,24952+6]..[744,24952+10])
                                expression (typing/includemod_errorprinter.ml[744,24952+13]..[744,24952+45])
                                  Pexp_construct "::" (typing/includemod_errorprinter.ml[744,24952+36]..[744,24952+38])
                                  Some
                                    expression (typing/includemod_errorprinter.ml[744,24952+13]..[744,24952+45]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/includemod_errorprinter.ml[744,24952+13]..[744,24952+35])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[744,24952+13]..[744,24952+26])
                                            Pexp_ident "dwith_context" (typing/includemod_errorprinter.ml[744,24952+13]..[744,24952+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[744,24952+27]..[744,24952+30])
                                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[744,24952+27]..[744,24952+30])
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[744,24952+31]..[744,24952+35])
                                                Pexp_ident "main" (typing/includemod_errorprinter.ml[744,24952+31]..[744,24952+35])
                                          ]
                                        expression (typing/includemod_errorprinter.ml[744,24952+39]..[744,24952+45])
                                          Pexp_ident "before" (typing/includemod_errorprinter.ml[744,24952+39]..[744,24952+45])
                                      ]
                            ]
                            expression (typing/includemod_errorprinter.ml[745,25001+2]..[750,25142+26])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includemod_errorprinter.ml[745,25001+6]..[745,25001+23])
                                    Ppat_var "functor_suberrors" (typing/includemod_errorprinter.ml[745,25001+6]..[745,25001+23])
                                  expression (typing/includemod_errorprinter.ml[746,25027+4]..[748,25125+11])
                                    Pexp_ifthenelse
                                    expression (typing/includemod_errorprinter.ml[746,25027+7]..[746,25027+22])
                                      Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[746,25027+7]..[746,25027+22])
                                    expression (typing/includemod_errorprinter.ml[747,25055+6]..[747,25055+69])
                                      Pexp_apply
                                      expression (typing/includemod_errorprinter.ml[747,25055+6]..[747,25055+29])
                                        Pexp_ident "Functor_suberror.params" (typing/includemod_errorprinter.ml[747,25055+6]..[747,25055+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[747,25055+30]..[747,25055+46])
                                            Pexp_ident "functor_arg_diff" (typing/includemod_errorprinter.ml[747,25055+30]..[747,25055+46])
                                        <arg>
                                        Labelled "expansion_token"
                                          expression (typing/includemod_errorprinter.ml[747,25055+48]..[747,25055+63])
                                            Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[747,25055+48]..[747,25055+63])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[747,25055+64]..[747,25055+67])
                                            Pexp_ident "env" (typing/includemod_errorprinter.ml[747,25055+64]..[747,25055+67])
                                        <arg>
                                        Nolabel
                                          expression (typing/includemod_errorprinter.ml[747,25055+68]..[747,25055+69])
                                            Pexp_ident "d" (typing/includemod_errorprinter.ml[747,25055+68]..[747,25055+69])
                                      ]
                                    Some
                                      expression (typing/includemod_errorprinter.ml[748,25125+9]..[748,25125+11])
                                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[748,25125+9]..[748,25125+11])
                                        None
                              ]
                              expression (typing/includemod_errorprinter.ml[750,25142+2]..[750,25142+26])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[750,25142+20]..[750,25142+21])
                                  Pexp_ident "@" (typing/includemod_errorprinter.ml[750,25142+20]..[750,25142+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[750,25142+2]..[750,25142+19])
                                      Pexp_ident "functor_suberrors" (typing/includemod_errorprinter.ml[750,25142+2]..[750,25142+19])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[750,25142+22]..[750,25142+26])
                                      Pexp_ident "msgs" (typing/includemod_errorprinter.ml[750,25142+22]..[750,25142+26])
                                ]
      <def>
        pattern (typing/includemod_errorprinter.ml[752,25170+4]..[752,25170+19])
          Ppat_var "functor_symptom" (typing/includemod_errorprinter.ml[752,25170+4]..[752,25170+19])
        expression (typing/includemod_errorprinter.ml[752,25170+20]..[755,25325+67]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[752,25170+21]..[752,25170+36])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[752,25170+21]..[752,25170+36])
          expression (typing/includemod_errorprinter.ml[752,25170+37]..[755,25325+67]) ghost
            Pexp_fun
            Labelled "env"
            None
            pattern (typing/includemod_errorprinter.ml[752,25170+38]..[752,25170+41])
              Ppat_var "env" (typing/includemod_errorprinter.ml[752,25170+38]..[752,25170+41])
            expression (typing/includemod_errorprinter.ml[752,25170+42]..[755,25325+67]) ghost
              Pexp_fun
              Labelled "before"
              None
              pattern (typing/includemod_errorprinter.ml[752,25170+43]..[752,25170+49])
                Ppat_var "before" (typing/includemod_errorprinter.ml[752,25170+43]..[752,25170+49])
              expression (typing/includemod_errorprinter.ml[752,25170+50]..[755,25325+67]) ghost
                Pexp_fun
                Labelled "ctx"
                None
                pattern (typing/includemod_errorprinter.ml[752,25170+51]..[752,25170+54])
                  Ppat_var "ctx" (typing/includemod_errorprinter.ml[752,25170+51]..[752,25170+54])
                expression (typing/includemod_errorprinter.ml[752,25170+57]..[755,25325+67])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/includemod_errorprinter.ml[753,25236+4]..[753,25236+14])
                        Ppat_construct "Result" (typing/includemod_errorprinter.ml[753,25236+4]..[753,25236+10])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[753,25236+11]..[753,25236+14])
                            Ppat_var "res" (typing/includemod_errorprinter.ml[753,25236+11]..[753,25236+14])
                      expression (typing/includemod_errorprinter.ml[754,25254+6]..[754,25254+70])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[754,25254+6]..[754,25254+17])
                          Pexp_ident "module_type" (typing/includemod_errorprinter.ml[754,25254+6]..[754,25254+17])
                        [
                          <arg>
                          Labelled "expansion_token"
                            expression (typing/includemod_errorprinter.ml[754,25254+19]..[754,25254+34])
                              Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[754,25254+19]..[754,25254+34])
                          <arg>
                          Labelled "eqmode"
                            expression (typing/includemod_errorprinter.ml[754,25254+43]..[754,25254+48])
                              Pexp_construct "false" (typing/includemod_errorprinter.ml[754,25254+43]..[754,25254+48])
                              None
                          <arg>
                          Labelled "env"
                            expression (typing/includemod_errorprinter.ml[754,25254+50]..[754,25254+53])
                              Pexp_ident "env" (typing/includemod_errorprinter.ml[754,25254+50]..[754,25254+53])
                          <arg>
                          Labelled "before"
                            expression (typing/includemod_errorprinter.ml[754,25254+55]..[754,25254+61])
                              Pexp_ident "before" (typing/includemod_errorprinter.ml[754,25254+55]..[754,25254+61])
                          <arg>
                          Labelled "ctx"
                            expression (typing/includemod_errorprinter.ml[754,25254+63]..[754,25254+66])
                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[754,25254+63]..[754,25254+66])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[754,25254+67]..[754,25254+70])
                              Pexp_ident "res" (typing/includemod_errorprinter.ml[754,25254+67]..[754,25254+70])
                        ]
                    <case>
                      pattern (typing/includemod_errorprinter.ml[755,25325+4]..[755,25325+12])
                        Ppat_construct "Params" (typing/includemod_errorprinter.ml[755,25325+4]..[755,25325+10])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[755,25325+11]..[755,25325+12])
                            Ppat_var "d" (typing/includemod_errorprinter.ml[755,25325+11]..[755,25325+12])
                      expression (typing/includemod_errorprinter.ml[755,25325+16]..[755,25325+67])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[755,25325+16]..[755,25325+30])
                          Pexp_ident "functor_params" (typing/includemod_errorprinter.ml[755,25325+16]..[755,25325+30])
                        [
                          <arg>
                          Labelled "expansion_token"
                            expression (typing/includemod_errorprinter.ml[755,25325+32]..[755,25325+47])
                              Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[755,25325+32]..[755,25325+47])
                          <arg>
                          Labelled "env"
                            expression (typing/includemod_errorprinter.ml[755,25325+49]..[755,25325+52])
                              Pexp_ident "env" (typing/includemod_errorprinter.ml[755,25325+49]..[755,25325+52])
                          <arg>
                          Labelled "before"
                            expression (typing/includemod_errorprinter.ml[755,25325+54]..[755,25325+60])
                              Pexp_ident "before" (typing/includemod_errorprinter.ml[755,25325+54]..[755,25325+60])
                          <arg>
                          Labelled "ctx"
                            expression (typing/includemod_errorprinter.ml[755,25325+62]..[755,25325+65])
                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[755,25325+62]..[755,25325+65])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[755,25325+66]..[755,25325+67])
                              Pexp_ident "d" (typing/includemod_errorprinter.ml[755,25325+66]..[755,25325+67])
                        ]
                  ]
      <def>
        pattern (typing/includemod_errorprinter.ml[757,25394+4]..[757,25394+13])
          Ppat_var "signature" (typing/includemod_errorprinter.ml[757,25394+4]..[757,25394+13])
        expression (typing/includemod_errorprinter.ml[757,25394+14]..[769,25882+5]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[757,25394+15]..[757,25394+30])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[757,25394+15]..[757,25394+30])
          expression (typing/includemod_errorprinter.ml[757,25394+31]..[769,25882+5]) ghost
            Pexp_fun
            Labelled "env"
            None
            pattern (typing/includemod_errorprinter.ml[757,25394+36]..[757,25394+37])
              Ppat_any
            expression (typing/includemod_errorprinter.ml[757,25394+38]..[769,25882+5]) ghost
              Pexp_fun
              Labelled "before"
              None
              pattern (typing/includemod_errorprinter.ml[757,25394+39]..[757,25394+45])
                Ppat_var "before" (typing/includemod_errorprinter.ml[757,25394+39]..[757,25394+45])
              expression (typing/includemod_errorprinter.ml[757,25394+46]..[769,25882+5]) ghost
                Pexp_fun
                Labelled "ctx"
                None
                pattern (typing/includemod_errorprinter.ml[757,25394+47]..[757,25394+50])
                  Ppat_var "ctx" (typing/includemod_errorprinter.ml[757,25394+47]..[757,25394+50])
                expression (typing/includemod_errorprinter.ml[757,25394+51]..[769,25882+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[757,25394+51]..[757,25394+54])
                    Ppat_var "sgs" (typing/includemod_errorprinter.ml[757,25394+51]..[757,25394+54])
                  expression (typing/includemod_errorprinter.ml[758,25451+2]..[769,25882+5])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[758,25451+2]..[758,25451+28])
                      Pexp_ident "Printtyp.wrap_printing_env" (typing/includemod_errorprinter.ml[758,25451+2]..[758,25451+28])
                    [
                      <arg>
                      Labelled "error"
                        expression (typing/includemod_errorprinter.ml[758,25451+36]..[758,25451+40])
                          Pexp_construct "true" (typing/includemod_errorprinter.ml[758,25451+36]..[758,25451+40])
                          None
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[758,25451+41]..[758,25451+48])
                          Pexp_field
                          expression (typing/includemod_errorprinter.ml[758,25451+41]..[758,25451+44])
                            Pexp_ident "sgs" (typing/includemod_errorprinter.ml[758,25451+41]..[758,25451+44])
                          "env" (typing/includemod_errorprinter.ml[758,25451+45]..[758,25451+48])
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[758,25451+49]..[769,25882+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includemod_errorprinter.ml[758,25451+54]..[758,25451+56])
                            Ppat_construct "()" (typing/includemod_errorprinter.ml[758,25451+54]..[758,25451+56])
                            None
                          expression (typing/includemod_errorprinter.ml[759,25511+6]..[768,25851+30])
                            Pexp_match
                            expression (typing/includemod_errorprinter.ml[759,25511+12]..[759,25511+43])
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[759,25511+12]..[759,25511+24])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[759,25511+12]..[759,25511+15])
                                    Pexp_ident "sgs" (typing/includemod_errorprinter.ml[759,25511+12]..[759,25511+15])
                                  "missings" (typing/includemod_errorprinter.ml[759,25511+16]..[759,25511+24])
                                expression (typing/includemod_errorprinter.ml[759,25511+26]..[759,25511+43])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[759,25511+26]..[759,25511+29])
                                    Pexp_ident "sgs" (typing/includemod_errorprinter.ml[759,25511+26]..[759,25511+29])
                                  "incompatibles" (typing/includemod_errorprinter.ml[759,25511+30]..[759,25511+43])
                              ]
                            [
                              <case>
                                pattern (typing/includemod_errorprinter.ml[760,25560+8]..[760,25560+18])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[760,25560+8]..[760,25560+14])
                                      Ppat_construct "::" (typing/includemod_errorprinter.ml[760,25560+10]..[760,25560+12])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[760,25560+8]..[760,25560+14]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[760,25560+8]..[760,25560+9])
                                              Ppat_var "a" (typing/includemod_errorprinter.ml[760,25560+8]..[760,25560+9])
                                            pattern (typing/includemod_errorprinter.ml[760,25560+13]..[760,25560+14])
                                              Ppat_var "l" (typing/includemod_errorprinter.ml[760,25560+13]..[760,25560+14])
                                          ]
                                    pattern (typing/includemod_errorprinter.ml[760,25560+17]..[760,25560+18])
                                      Ppat_any
                                  ]
                                expression (typing/includemod_errorprinter.ml[761,25582+10]..[766,25757+18])
                                  Pexp_ifthenelse
                                  expression (typing/includemod_errorprinter.ml[761,25582+13]..[761,25582+28])
                                    Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[761,25582+13]..[761,25582+28])
                                  expression (typing/includemod_errorprinter.ml[762,25616+12]..[764,25721+20])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[764,25721+12]..[764,25721+13])
                                      Pexp_ident "@" (typing/includemod_errorprinter.ml[764,25721+12]..[764,25721+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[762,25616+12]..[763,25661+59])
                                          Pexp_construct "::" (typing/includemod_errorprinter.ml[763,25661+12]..[763,25661+14])
                                          Some
                                            expression (typing/includemod_errorprinter.ml[762,25616+12]..[763,25661+59]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/includemod_errorprinter.ml[762,25616+12]..[762,25616+44])
                                                  Pexp_apply
                                                  expression (typing/includemod_errorprinter.ml[762,25616+12]..[762,25616+24])
                                                    Pexp_ident "with_context" (typing/includemod_errorprinter.ml[762,25616+12]..[762,25616+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[762,25616+25]..[762,25616+28])
                                                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[762,25616+25]..[762,25616+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[762,25616+29]..[762,25616+42])
                                                        Pexp_ident "missing_field" (typing/includemod_errorprinter.ml[762,25616+29]..[762,25616+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[762,25616+43]..[762,25616+44])
                                                        Pexp_ident "a" (typing/includemod_errorprinter.ml[762,25616+43]..[762,25616+44])
                                                  ]
                                                expression (typing/includemod_errorprinter.ml[763,25661+15]..[763,25661+59])
                                                  Pexp_apply
                                                  expression (typing/includemod_errorprinter.ml[763,25661+15]..[763,25661+23])
                                                    Pexp_ident "List.map" (typing/includemod_errorprinter.ml[763,25661+15]..[763,25661+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[763,25661+24]..[763,25661+57])
                                                        Pexp_apply
                                                        expression (typing/includemod_errorprinter.ml[763,25661+25]..[763,25661+37])
                                                          Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[763,25661+25]..[763,25661+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[763,25661+38]..[763,25661+42])
                                                              Pexp_constant PConst_string("%a",(typing/includemod_errorprinter.ml[763,25661+39]..[763,25661+41]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/includemod_errorprinter.ml[763,25661+43]..[763,25661+56])
                                                              Pexp_ident "missing_field" (typing/includemod_errorprinter.ml[763,25661+43]..[763,25661+56])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/includemod_errorprinter.ml[763,25661+58]..[763,25661+59])
                                                        Pexp_ident "l" (typing/includemod_errorprinter.ml[763,25661+58]..[763,25661+59])
                                                  ]
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[764,25721+14]..[764,25721+20])
                                          Pexp_ident "before" (typing/includemod_errorprinter.ml[764,25721+14]..[764,25721+20])
                                    ]
                                  Some
                                    expression (typing/includemod_errorprinter.ml[766,25757+12]..[766,25757+18])
                                      Pexp_ident "before" (typing/includemod_errorprinter.ml[766,25757+12]..[766,25757+18])
                              <case>
                                pattern (typing/includemod_errorprinter.ml[767,25776+8]..[767,25776+18])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[767,25776+8]..[767,25776+10])
                                      Ppat_construct "[]" (typing/includemod_errorprinter.ml[767,25776+8]..[767,25776+10])
                                      None
                                    pattern (typing/includemod_errorprinter.ml[767,25776+12]..[767,25776+18])
                                      Ppat_construct "::" (typing/includemod_errorprinter.ml[767,25776+14]..[767,25776+16])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[767,25776+12]..[767,25776+18]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[767,25776+12]..[767,25776+13])
                                              Ppat_var "a" (typing/includemod_errorprinter.ml[767,25776+12]..[767,25776+13])
                                            pattern (typing/includemod_errorprinter.ml[767,25776+17]..[767,25776+18])
                                              Ppat_any
                                          ]
                                  ]
                                expression (typing/includemod_errorprinter.ml[767,25776+22]..[767,25776+74])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[767,25776+22]..[767,25776+29])
                                    Pexp_ident "sigitem" (typing/includemod_errorprinter.ml[767,25776+22]..[767,25776+29])
                                  [
                                    <arg>
                                    Labelled "expansion_token"
                                      expression (typing/includemod_errorprinter.ml[767,25776+31]..[767,25776+46])
                                        Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[767,25776+31]..[767,25776+46])
                                    <arg>
                                    Labelled "env"
                                      expression (typing/includemod_errorprinter.ml[767,25776+52]..[767,25776+59])
                                        Pexp_field
                                        expression (typing/includemod_errorprinter.ml[767,25776+52]..[767,25776+55])
                                          Pexp_ident "sgs" (typing/includemod_errorprinter.ml[767,25776+52]..[767,25776+55])
                                        "env" (typing/includemod_errorprinter.ml[767,25776+56]..[767,25776+59])
                                    <arg>
                                    Labelled "before"
                                      expression (typing/includemod_errorprinter.ml[767,25776+61]..[767,25776+67])
                                        Pexp_ident "before" (typing/includemod_errorprinter.ml[767,25776+61]..[767,25776+67])
                                    <arg>
                                    Labelled "ctx"
                                      expression (typing/includemod_errorprinter.ml[767,25776+69]..[767,25776+72])
                                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[767,25776+69]..[767,25776+72])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[767,25776+73]..[767,25776+74])
                                        Pexp_ident "a" (typing/includemod_errorprinter.ml[767,25776+73]..[767,25776+74])
                                  ]
                              <case>
                                pattern (typing/includemod_errorprinter.ml[768,25851+8]..[768,25851+14])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[768,25851+8]..[768,25851+10])
                                      Ppat_construct "[]" (typing/includemod_errorprinter.ml[768,25851+8]..[768,25851+10])
                                      None
                                    pattern (typing/includemod_errorprinter.ml[768,25851+12]..[768,25851+14])
                                      Ppat_construct "[]" (typing/includemod_errorprinter.ml[768,25851+12]..[768,25851+14])
                                      None
                                  ]
                                expression (typing/includemod_errorprinter.ml[768,25851+18]..[768,25851+30])
                                  Pexp_assert
                                  expression (typing/includemod_errorprinter.ml[768,25851+25]..[768,25851+30])
                                    Pexp_construct "false" (typing/includemod_errorprinter.ml[768,25851+25]..[768,25851+30])
                                    None
                            ]
                    ]
      <def>
        pattern (typing/includemod_errorprinter.ml[770,25888+4]..[770,25888+11])
          Ppat_var "sigitem" (typing/includemod_errorprinter.ml[770,25888+4]..[770,25888+11])
        expression (typing/includemod_errorprinter.ml[770,25888+12]..[777,26194+67]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[770,25888+13]..[770,25888+28])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[770,25888+13]..[770,25888+28])
          expression (typing/includemod_errorprinter.ml[770,25888+29]..[777,26194+67]) ghost
            Pexp_fun
            Labelled "env"
            None
            pattern (typing/includemod_errorprinter.ml[770,25888+30]..[770,25888+33])
              Ppat_var "env" (typing/includemod_errorprinter.ml[770,25888+30]..[770,25888+33])
            expression (typing/includemod_errorprinter.ml[770,25888+34]..[777,26194+67]) ghost
              Pexp_fun
              Labelled "before"
              None
              pattern (typing/includemod_errorprinter.ml[770,25888+35]..[770,25888+41])
                Ppat_var "before" (typing/includemod_errorprinter.ml[770,25888+35]..[770,25888+41])
              expression (typing/includemod_errorprinter.ml[770,25888+42]..[777,26194+67]) ghost
                Pexp_fun
                Labelled "ctx"
                None
                pattern (typing/includemod_errorprinter.ml[770,25888+43]..[770,25888+46])
                  Ppat_var "ctx" (typing/includemod_errorprinter.ml[770,25888+43]..[770,25888+46])
                expression (typing/includemod_errorprinter.ml[770,25888+47]..[777,26194+67]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[770,25888+47]..[770,25888+55])
                    Ppat_tuple
                    [
                      pattern (typing/includemod_errorprinter.ml[770,25888+48]..[770,25888+52])
                        Ppat_var "name" (typing/includemod_errorprinter.ml[770,25888+48]..[770,25888+52])
                      pattern (typing/includemod_errorprinter.ml[770,25888+53]..[770,25888+54])
                        Ppat_var "s" (typing/includemod_errorprinter.ml[770,25888+53]..[770,25888+54])
                    ]
                  expression (typing/includemod_errorprinter.ml[770,25888+58]..[777,26194+67])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[770,25888+64]..[770,25888+65])
                      Pexp_ident "s" (typing/includemod_errorprinter.ml[770,25888+64]..[770,25888+65])
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[771,25959+4]..[771,25959+10])
                          Ppat_construct "Core" (typing/includemod_errorprinter.ml[771,25959+4]..[771,25959+8])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[771,25959+9]..[771,25959+10])
                              Ppat_var "c" (typing/includemod_errorprinter.ml[771,25959+9]..[771,25959+10])
                        expression (typing/includemod_errorprinter.ml[772,25973+6]..[772,25973+51])
                          Pexp_construct "::" (typing/includemod_errorprinter.ml[772,25973+42]..[772,25973+44])
                          Some
                            expression (typing/includemod_errorprinter.ml[772,25973+6]..[772,25973+51]) ghost
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[772,25973+6]..[772,25973+41])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[772,25973+6]..[772,25973+19])
                                    Pexp_ident "dwith_context" (typing/includemod_errorprinter.ml[772,25973+6]..[772,25973+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[772,25973+20]..[772,25973+23])
                                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[772,25973+20]..[772,25973+23])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[772,25973+24]..[772,25973+41])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[772,25973+25]..[772,25973+29])
                                          Pexp_ident "core" (typing/includemod_errorprinter.ml[772,25973+25]..[772,25973+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[772,25973+30]..[772,25973+33])
                                              Pexp_ident "env" (typing/includemod_errorprinter.ml[772,25973+30]..[772,25973+33])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[772,25973+34]..[772,25973+38])
                                              Pexp_ident "name" (typing/includemod_errorprinter.ml[772,25973+34]..[772,25973+38])
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[772,25973+39]..[772,25973+40])
                                              Pexp_ident "c" (typing/includemod_errorprinter.ml[772,25973+39]..[772,25973+40])
                                        ]
                                  ]
                                expression (typing/includemod_errorprinter.ml[772,25973+45]..[772,25973+51])
                                  Pexp_ident "before" (typing/includemod_errorprinter.ml[772,25973+45]..[772,25973+51])
                              ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[773,26025+4]..[773,26025+20])
                          Ppat_construct "Module_type" (typing/includemod_errorprinter.ml[773,26025+4]..[773,26025+15])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[773,26025+16]..[773,26025+20])
                              Ppat_var "diff" (typing/includemod_errorprinter.ml[773,26025+16]..[773,26025+20])
                        expression (typing/includemod_errorprinter.ml[774,26049+6]..[775,26111+46])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[774,26049+6]..[774,26049+17])
                            Pexp_ident "module_type" (typing/includemod_errorprinter.ml[774,26049+6]..[774,26049+17])
                          [
                            <arg>
                            Labelled "expansion_token"
                              expression (typing/includemod_errorprinter.ml[774,26049+19]..[774,26049+34])
                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[774,26049+19]..[774,26049+34])
                            <arg>
                            Labelled "eqmode"
                              expression (typing/includemod_errorprinter.ml[774,26049+43]..[774,26049+48])
                                Pexp_construct "false" (typing/includemod_errorprinter.ml[774,26049+43]..[774,26049+48])
                                None
                            <arg>
                            Labelled "env"
                              expression (typing/includemod_errorprinter.ml[774,26049+50]..[774,26049+53])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[774,26049+50]..[774,26049+53])
                            <arg>
                            Labelled "before"
                              expression (typing/includemod_errorprinter.ml[774,26049+55]..[774,26049+61])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[774,26049+55]..[774,26049+61])
                            <arg>
                            Labelled "ctx"
                              expression (typing/includemod_errorprinter.ml[775,26111+13]..[775,26111+41])
                                Pexp_construct "::" (typing/includemod_errorprinter.ml[775,26111+34]..[775,26111+36])
                                Some
                                  expression (typing/includemod_errorprinter.ml[775,26111+14]..[775,26111+40]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/includemod_errorprinter.ml[775,26111+14]..[775,26111+33])
                                        Pexp_construct "Context.Module" (typing/includemod_errorprinter.ml[775,26111+14]..[775,26111+28])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[775,26111+29]..[775,26111+33])
                                            Pexp_ident "name" (typing/includemod_errorprinter.ml[775,26111+29]..[775,26111+33])
                                      expression (typing/includemod_errorprinter.ml[775,26111+37]..[775,26111+40])
                                        Pexp_ident "ctx" (typing/includemod_errorprinter.ml[775,26111+37]..[775,26111+40])
                                    ]
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[775,26111+42]..[775,26111+46])
                                Pexp_ident "diff" (typing/includemod_errorprinter.ml[775,26111+42]..[775,26111+46])
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[776,26158+4]..[776,26158+32])
                          Ppat_construct "Module_type_declaration" (typing/includemod_errorprinter.ml[776,26158+4]..[776,26158+27])
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[776,26158+28]..[776,26158+32])
                              Ppat_var "diff" (typing/includemod_errorprinter.ml[776,26158+28]..[776,26158+32])
                        expression (typing/includemod_errorprinter.ml[777,26194+6]..[777,26194+67])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[777,26194+6]..[777,26194+22])
                            Pexp_ident "module_type_decl" (typing/includemod_errorprinter.ml[777,26194+6]..[777,26194+22])
                          [
                            <arg>
                            Labelled "expansion_token"
                              expression (typing/includemod_errorprinter.ml[777,26194+24]..[777,26194+39])
                                Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[777,26194+24]..[777,26194+39])
                            <arg>
                            Labelled "env"
                              expression (typing/includemod_errorprinter.ml[777,26194+41]..[777,26194+44])
                                Pexp_ident "env" (typing/includemod_errorprinter.ml[777,26194+41]..[777,26194+44])
                            <arg>
                            Labelled "before"
                              expression (typing/includemod_errorprinter.ml[777,26194+46]..[777,26194+52])
                                Pexp_ident "before" (typing/includemod_errorprinter.ml[777,26194+46]..[777,26194+52])
                            <arg>
                            Labelled "ctx"
                              expression (typing/includemod_errorprinter.ml[777,26194+54]..[777,26194+57])
                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[777,26194+54]..[777,26194+57])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[777,26194+58]..[777,26194+62])
                                Pexp_ident "name" (typing/includemod_errorprinter.ml[777,26194+58]..[777,26194+62])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[777,26194+63]..[777,26194+67])
                                Pexp_ident "diff" (typing/includemod_errorprinter.ml[777,26194+63]..[777,26194+67])
                          ]
                    ]
      <def>
        pattern (typing/includemod_errorprinter.ml[778,26262+4]..[778,26262+20])
          Ppat_var "module_type_decl" (typing/includemod_errorprinter.ml[778,26262+4]..[778,26262+20])
        expression (typing/includemod_errorprinter.ml[778,26262+21]..[806,27363+9]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[778,26262+22]..[778,26262+37])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[778,26262+22]..[778,26262+37])
          expression (typing/includemod_errorprinter.ml[778,26262+38]..[806,27363+9]) ghost
            Pexp_fun
            Labelled "env"
            None
            pattern (typing/includemod_errorprinter.ml[778,26262+39]..[778,26262+42])
              Ppat_var "env" (typing/includemod_errorprinter.ml[778,26262+39]..[778,26262+42])
            expression (typing/includemod_errorprinter.ml[778,26262+43]..[806,27363+9]) ghost
              Pexp_fun
              Labelled "before"
              None
              pattern (typing/includemod_errorprinter.ml[778,26262+44]..[778,26262+50])
                Ppat_var "before" (typing/includemod_errorprinter.ml[778,26262+44]..[778,26262+50])
              expression (typing/includemod_errorprinter.ml[778,26262+51]..[806,27363+9]) ghost
                Pexp_fun
                Labelled "ctx"
                None
                pattern (typing/includemod_errorprinter.ml[778,26262+52]..[778,26262+55])
                  Ppat_var "ctx" (typing/includemod_errorprinter.ml[778,26262+52]..[778,26262+55])
                expression (typing/includemod_errorprinter.ml[778,26262+56]..[806,27363+9]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/includemod_errorprinter.ml[778,26262+56]..[778,26262+58])
                    Ppat_var "id" (typing/includemod_errorprinter.ml[778,26262+56]..[778,26262+58])
                  expression (typing/includemod_errorprinter.ml[778,26262+59]..[806,27363+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[778,26262+59]..[778,26262+63])
                      Ppat_var "diff" (typing/includemod_errorprinter.ml[778,26262+59]..[778,26262+63])
                    expression (typing/includemod_errorprinter.ml[779,26328+2]..[806,27363+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[779,26328+6]..[779,26328+10])
                            Ppat_var "next" (typing/includemod_errorprinter.ml[779,26328+6]..[779,26328+10])
                          expression (typing/includemod_errorprinter.ml[780,26341+4]..[780,26341+68])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[780,26341+4]..[780,26341+29])
                              Pexp_ident "dwith_context_and_elision" (typing/includemod_errorprinter.ml[780,26341+4]..[780,26341+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[780,26341+30]..[780,26341+33])
                                  Pexp_ident "ctx" (typing/includemod_errorprinter.ml[780,26341+30]..[780,26341+33])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[780,26341+34]..[780,26341+63])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[780,26341+35]..[780,26341+59])
                                    Pexp_ident "module_type_declarations" (typing/includemod_errorprinter.ml[780,26341+35]..[780,26341+59])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[780,26341+60]..[780,26341+62])
                                        Pexp_ident "id" (typing/includemod_errorprinter.ml[780,26341+60]..[780,26341+62])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[780,26341+64]..[780,26341+68])
                                  Pexp_ident "diff" (typing/includemod_errorprinter.ml[780,26341+64]..[780,26341+68])
                            ]
                      ]
                      expression (typing/includemod_errorprinter.ml[781,26413+2]..[806,27363+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[781,26413+6]..[781,26413+12])
                              Ppat_var "before" (typing/includemod_errorprinter.ml[781,26413+6]..[781,26413+12])
                            expression (typing/includemod_errorprinter.ml[781,26413+15]..[781,26413+29])
                              Pexp_construct "::" (typing/includemod_errorprinter.ml[781,26413+20]..[781,26413+22])
                              Some
                                expression (typing/includemod_errorprinter.ml[781,26413+15]..[781,26413+29]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/includemod_errorprinter.ml[781,26413+15]..[781,26413+19])
                                      Pexp_ident "next" (typing/includemod_errorprinter.ml[781,26413+15]..[781,26413+19])
                                    expression (typing/includemod_errorprinter.ml[781,26413+23]..[781,26413+29])
                                      Pexp_ident "before" (typing/includemod_errorprinter.ml[781,26413+23]..[781,26413+29])
                                  ]
                        ]
                        expression (typing/includemod_errorprinter.ml[782,26446+2]..[806,27363+9])
                          Pexp_match
                          expression (typing/includemod_errorprinter.ml[782,26446+8]..[782,26446+20])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[782,26446+8]..[782,26446+12])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[782,26446+8]..[782,26446+12])
                            "symptom" (typing/includemod_errorprinter.ml[782,26446+13]..[782,26446+20])
                          [
                            <case>
                              pattern (typing/includemod_errorprinter.ml[783,26472+4]..[783,26472+21])
                                Ppat_construct "Not_less_than" (typing/includemod_errorprinter.ml[783,26472+4]..[783,26472+17])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[783,26472+18]..[783,26472+21])
                                    Ppat_var "mts" (typing/includemod_errorprinter.ml[783,26472+18]..[783,26472+21])
                              expression (typing/includemod_errorprinter.ml[784,26497+6]..[789,26679+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[784,26497+10]..[784,26497+16])
                                      Ppat_var "before" (typing/includemod_errorprinter.ml[784,26497+10]..[784,26497+16])
                                    expression (typing/includemod_errorprinter.ml[785,26516+8]..[786,26591+17])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[786,26591+8]..[786,26591+10])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[785,26516+8]..[786,26591+17]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[785,26516+8]..[785,26516+74])
                                              Pexp_apply
                                              expression (typing/includemod_errorprinter.ml[785,26516+8]..[785,26516+20])
                                                Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[785,26516+8]..[785,26516+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[785,26516+21]..[785,26516+74])
                                                    Pexp_constant PConst_string("The first module type is not included in the second",(typing/includemod_errorprinter.ml[785,26516+22]..[785,26516+73]),None)
                                              ]
                                            expression (typing/includemod_errorprinter.ml[786,26591+11]..[786,26591+17])
                                              Pexp_ident "before" (typing/includemod_errorprinter.ml[786,26591+11]..[786,26591+17])
                                          ]
                                ]
                                expression (typing/includemod_errorprinter.ml[788,26618+6]..[789,26679+44])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[788,26618+6]..[788,26618+17])
                                    Pexp_ident "module_type" (typing/includemod_errorprinter.ml[788,26618+6]..[788,26618+17])
                                  [
                                    <arg>
                                    Labelled "expansion_token"
                                      expression (typing/includemod_errorprinter.ml[788,26618+19]..[788,26618+34])
                                        Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[788,26618+19]..[788,26618+34])
                                    <arg>
                                    Labelled "eqmode"
                                      expression (typing/includemod_errorprinter.ml[788,26618+43]..[788,26618+47])
                                        Pexp_construct "true" (typing/includemod_errorprinter.ml[788,26618+43]..[788,26618+47])
                                        None
                                    <arg>
                                    Labelled "before"
                                      expression (typing/includemod_errorprinter.ml[788,26618+49]..[788,26618+55])
                                        Pexp_ident "before" (typing/includemod_errorprinter.ml[788,26618+49]..[788,26618+55])
                                    <arg>
                                    Labelled "env"
                                      expression (typing/includemod_errorprinter.ml[788,26618+57]..[788,26618+60])
                                        Pexp_ident "env" (typing/includemod_errorprinter.ml[788,26618+57]..[788,26618+60])
                                    <arg>
                                    Labelled "ctx"
                                      expression (typing/includemod_errorprinter.ml[789,26679+13]..[789,26679+40])
                                        Pexp_construct "::" (typing/includemod_errorprinter.ml[789,26679+33]..[789,26679+35])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[789,26679+14]..[789,26679+39]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/includemod_errorprinter.ml[789,26679+14]..[789,26679+32])
                                                Pexp_construct "Context.Modtype" (typing/includemod_errorprinter.ml[789,26679+14]..[789,26679+29])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[789,26679+30]..[789,26679+32])
                                                    Pexp_ident "id" (typing/includemod_errorprinter.ml[789,26679+30]..[789,26679+32])
                                              expression (typing/includemod_errorprinter.ml[789,26679+36]..[789,26679+39])
                                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[789,26679+36]..[789,26679+39])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[789,26679+41]..[789,26679+44])
                                        Pexp_ident "mts" (typing/includemod_errorprinter.ml[789,26679+41]..[789,26679+44])
                                  ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[790,26724+4]..[790,26724+24])
                                Ppat_construct "Not_greater_than" (typing/includemod_errorprinter.ml[790,26724+4]..[790,26724+20])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[790,26724+21]..[790,26724+24])
                                    Ppat_var "mts" (typing/includemod_errorprinter.ml[790,26724+21]..[790,26724+24])
                              expression (typing/includemod_errorprinter.ml[791,26752+6]..[795,26928+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/includemod_errorprinter.ml[791,26752+10]..[791,26752+16])
                                      Ppat_var "before" (typing/includemod_errorprinter.ml[791,26752+10]..[791,26752+16])
                                    expression (typing/includemod_errorprinter.ml[792,26771+8]..[793,26846+17])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[793,26846+8]..[793,26846+10])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[792,26771+8]..[793,26846+17]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[792,26771+8]..[792,26771+74])
                                              Pexp_apply
                                              expression (typing/includemod_errorprinter.ml[792,26771+8]..[792,26771+20])
                                                Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[792,26771+8]..[792,26771+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[792,26771+21]..[792,26771+74])
                                                    Pexp_constant PConst_string("The second module type is not included in the first",(typing/includemod_errorprinter.ml[792,26771+22]..[792,26771+73]),None)
                                              ]
                                            expression (typing/includemod_errorprinter.ml[793,26846+11]..[793,26846+17])
                                              Pexp_ident "before" (typing/includemod_errorprinter.ml[793,26846+11]..[793,26846+17])
                                          ]
                                ]
                                expression (typing/includemod_errorprinter.ml[794,26867+6]..[795,26928+44])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[794,26867+6]..[794,26867+17])
                                    Pexp_ident "module_type" (typing/includemod_errorprinter.ml[794,26867+6]..[794,26867+17])
                                  [
                                    <arg>
                                    Labelled "expansion_token"
                                      expression (typing/includemod_errorprinter.ml[794,26867+19]..[794,26867+34])
                                        Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[794,26867+19]..[794,26867+34])
                                    <arg>
                                    Labelled "eqmode"
                                      expression (typing/includemod_errorprinter.ml[794,26867+43]..[794,26867+47])
                                        Pexp_construct "true" (typing/includemod_errorprinter.ml[794,26867+43]..[794,26867+47])
                                        None
                                    <arg>
                                    Labelled "before"
                                      expression (typing/includemod_errorprinter.ml[794,26867+49]..[794,26867+55])
                                        Pexp_ident "before" (typing/includemod_errorprinter.ml[794,26867+49]..[794,26867+55])
                                    <arg>
                                    Labelled "env"
                                      expression (typing/includemod_errorprinter.ml[794,26867+57]..[794,26867+60])
                                        Pexp_ident "env" (typing/includemod_errorprinter.ml[794,26867+57]..[794,26867+60])
                                    <arg>
                                    Labelled "ctx"
                                      expression (typing/includemod_errorprinter.ml[795,26928+13]..[795,26928+40])
                                        Pexp_construct "::" (typing/includemod_errorprinter.ml[795,26928+33]..[795,26928+35])
                                        Some
                                          expression (typing/includemod_errorprinter.ml[795,26928+14]..[795,26928+39]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/includemod_errorprinter.ml[795,26928+14]..[795,26928+32])
                                                Pexp_construct "Context.Modtype" (typing/includemod_errorprinter.ml[795,26928+14]..[795,26928+29])
                                                Some
                                                  expression (typing/includemod_errorprinter.ml[795,26928+30]..[795,26928+32])
                                                    Pexp_ident "id" (typing/includemod_errorprinter.ml[795,26928+30]..[795,26928+32])
                                              expression (typing/includemod_errorprinter.ml[795,26928+36]..[795,26928+39])
                                                Pexp_ident "ctx" (typing/includemod_errorprinter.ml[795,26928+36]..[795,26928+39])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[795,26928+41]..[795,26928+44])
                                        Pexp_ident "mts" (typing/includemod_errorprinter.ml[795,26928+41]..[795,26928+44])
                                  ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[796,26973+4]..[796,26973+20])
                                Ppat_construct "Incomparable" (typing/includemod_errorprinter.ml[796,26973+4]..[796,26973+16])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[796,26973+17]..[796,26973+20])
                                    Ppat_var "mts" (typing/includemod_errorprinter.ml[796,26973+17]..[796,26973+20])
                              expression (typing/includemod_errorprinter.ml[797,26997+6]..[798,27058+54])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[797,26997+6]..[797,26997+17])
                                  Pexp_ident "module_type" (typing/includemod_errorprinter.ml[797,26997+6]..[797,26997+17])
                                [
                                  <arg>
                                  Labelled "expansion_token"
                                    expression (typing/includemod_errorprinter.ml[797,26997+19]..[797,26997+34])
                                      Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[797,26997+19]..[797,26997+34])
                                  <arg>
                                  Labelled "eqmode"
                                    expression (typing/includemod_errorprinter.ml[797,26997+43]..[797,26997+47])
                                      Pexp_construct "true" (typing/includemod_errorprinter.ml[797,26997+43]..[797,26997+47])
                                      None
                                  <arg>
                                  Labelled "env"
                                    expression (typing/includemod_errorprinter.ml[797,26997+49]..[797,26997+52])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[797,26997+49]..[797,26997+52])
                                  <arg>
                                  Labelled "before"
                                    expression (typing/includemod_errorprinter.ml[797,26997+54]..[797,26997+60])
                                      Pexp_ident "before" (typing/includemod_errorprinter.ml[797,26997+54]..[797,26997+60])
                                  <arg>
                                  Labelled "ctx"
                                    expression (typing/includemod_errorprinter.ml[798,27058+13]..[798,27058+40])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[798,27058+33]..[798,27058+35])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[798,27058+14]..[798,27058+39]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[798,27058+14]..[798,27058+32])
                                              Pexp_construct "Context.Modtype" (typing/includemod_errorprinter.ml[798,27058+14]..[798,27058+29])
                                              Some
                                                expression (typing/includemod_errorprinter.ml[798,27058+30]..[798,27058+32])
                                                  Pexp_ident "id" (typing/includemod_errorprinter.ml[798,27058+30]..[798,27058+32])
                                            expression (typing/includemod_errorprinter.ml[798,27058+36]..[798,27058+39])
                                              Pexp_ident "ctx" (typing/includemod_errorprinter.ml[798,27058+36]..[798,27058+39])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[798,27058+41]..[798,27058+54])
                                      Pexp_field
                                      expression (typing/includemod_errorprinter.ml[798,27058+41]..[798,27058+44])
                                        Pexp_ident "mts" (typing/includemod_errorprinter.ml[798,27058+41]..[798,27058+44])
                                      "less_than" (typing/includemod_errorprinter.ml[798,27058+45]..[798,27058+54])
                                ]
                            <case>
                              pattern (typing/includemod_errorprinter.ml[799,27113+4]..[799,27113+25])
                                Ppat_construct "Illegal_permutation" (typing/includemod_errorprinter.ml[799,27113+4]..[799,27113+23])
                                Some
                                  []
                                  pattern (typing/includemod_errorprinter.ml[799,27113+24]..[799,27113+25])
                                    Ppat_var "c" (typing/includemod_errorprinter.ml[799,27113+24]..[799,27113+25])
                              expression (typing/includemod_errorprinter.ml[800,27142+6]..[806,27363+9])
                                Pexp_match
                                expression (typing/includemod_errorprinter.ml[800,27142+18]..[800,27142+41])
                                  Pexp_field
                                  expression (typing/includemod_errorprinter.ml[800,27142+18]..[800,27142+26])
                                    Pexp_field
                                    expression (typing/includemod_errorprinter.ml[800,27142+18]..[800,27142+22])
                                      Pexp_ident "diff" (typing/includemod_errorprinter.ml[800,27142+18]..[800,27142+22])
                                    "got" (typing/includemod_errorprinter.ml[800,27142+23]..[800,27142+26])
                                  "Types.mtd_type" (typing/includemod_errorprinter.ml[800,27142+27]..[800,27142+41])
                                [
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[801,27189+8]..[801,27189+12])
                                      Ppat_construct "None" (typing/includemod_errorprinter.ml[801,27189+8]..[801,27189+12])
                                      None
                                    expression (typing/includemod_errorprinter.ml[801,27189+16]..[801,27189+28])
                                      Pexp_assert
                                      expression (typing/includemod_errorprinter.ml[801,27189+23]..[801,27189+28])
                                        Pexp_construct "false" (typing/includemod_errorprinter.ml[801,27189+23]..[801,27189+28])
                                        None
                                  <case>
                                    pattern (typing/includemod_errorprinter.ml[802,27218+8]..[802,27218+16])
                                      Ppat_construct "Some" (typing/includemod_errorprinter.ml[802,27218+8]..[802,27218+12])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[802,27218+13]..[802,27218+16])
                                          Ppat_var "mty" (typing/includemod_errorprinter.ml[802,27218+13]..[802,27218+16])
                                    expression (typing/includemod_errorprinter.ml[803,27238+10]..[805,27343+19])
                                      Pexp_construct "::" (typing/includemod_errorprinter.ml[805,27343+10]..[805,27343+12])
                                      Some
                                        expression (typing/includemod_errorprinter.ml[803,27238+10]..[805,27343+19]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[803,27238+10]..[804,27279+63])
                                              Pexp_apply
                                              expression (typing/includemod_errorprinter.ml[803,27238+10]..[803,27238+22])
                                                Pexp_ident "with_context" (typing/includemod_errorprinter.ml[803,27238+10]..[803,27238+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[803,27238+23]..[803,27238+40])
                                                    Pexp_construct "::" (typing/includemod_errorprinter.ml[803,27238+34]..[803,27238+36])
                                                    Some
                                                      expression (typing/includemod_errorprinter.ml[803,27238+24]..[803,27238+39]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/includemod_errorprinter.ml[803,27238+24]..[803,27238+34])
                                                            Pexp_construct "Modtype" (typing/includemod_errorprinter.ml[803,27238+24]..[803,27238+31])
                                                            Some
                                                              expression (typing/includemod_errorprinter.ml[803,27238+32]..[803,27238+34])
                                                                Pexp_ident "id" (typing/includemod_errorprinter.ml[803,27238+32]..[803,27238+34])
                                                          expression (typing/includemod_errorprinter.ml[803,27238+36]..[803,27238+39])
                                                            Pexp_ident "ctx" (typing/includemod_errorprinter.ml[803,27238+36]..[803,27238+39])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[804,27279+12]..[804,27279+55])
                                                    Pexp_apply
                                                    expression (typing/includemod_errorprinter.ml[804,27279+13]..[804,27279+35])
                                                      Pexp_ident "Illegal_permutation.pp" (typing/includemod_errorprinter.ml[804,27279+13]..[804,27279+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[804,27279+36]..[804,27279+50])
                                                          Pexp_ident "Context.alt_pp" (typing/includemod_errorprinter.ml[804,27279+36]..[804,27279+50])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/includemod_errorprinter.ml[804,27279+51]..[804,27279+54])
                                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[804,27279+51]..[804,27279+54])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/includemod_errorprinter.ml[804,27279+56]..[804,27279+63])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/includemod_errorprinter.ml[804,27279+57]..[804,27279+60])
                                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[804,27279+57]..[804,27279+60])
                                                      expression (typing/includemod_errorprinter.ml[804,27279+61]..[804,27279+62])
                                                        Pexp_ident "c" (typing/includemod_errorprinter.ml[804,27279+61]..[804,27279+62])
                                                    ]
                                              ]
                                            expression (typing/includemod_errorprinter.ml[805,27343+13]..[805,27343+19])
                                              Pexp_ident "before" (typing/includemod_errorprinter.ml[805,27343+13]..[805,27343+19])
                                          ]
                                ]
                          ]
      <def>
        pattern (typing/includemod_errorprinter.ml[808,27374+4]..[808,27374+20])
          Ppat_var "functor_arg_diff" (typing/includemod_errorprinter.ml[808,27374+4]..[808,27374+20])
        expression (typing/includemod_errorprinter.ml[808,27374+21]..[821,27940+46]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[808,27374+22]..[808,27374+37])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[808,27374+22]..[808,27374+37])
          expression (typing/includemod_errorprinter.ml[808,27374+38]..[821,27940+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[808,27374+38]..[808,27374+41])
              Ppat_var "env" (typing/includemod_errorprinter.ml[808,27374+38]..[808,27374+41])
            expression (typing/includemod_errorprinter.ml[808,27374+42]..[821,27940+46]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[808,27374+42]..[808,27374+67])
                Ppat_constraint
                pattern (typing/includemod_errorprinter.ml[808,27374+43]..[808,27374+48])
                  Ppat_var "patch" (typing/includemod_errorprinter.ml[808,27374+43]..[808,27374+48])
                core_type (typing/includemod_errorprinter.ml[808,27374+50]..[808,27374+66])
                  Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[808,27374+52]..[808,27374+66])
                  [
                    core_type (typing/includemod_errorprinter.ml[808,27374+50]..[808,27374+51])
                      Ptyp_any
                  ]
              expression (typing/includemod_errorprinter.ml[809,27444+2]..[821,27940+46])
                Pexp_match
                expression (typing/includemod_errorprinter.ml[809,27444+8]..[809,27444+13])
                  Pexp_ident "patch" (typing/includemod_errorprinter.ml[809,27444+8]..[809,27444+13])
                [
                  <case>
                    pattern (typing/includemod_errorprinter.ml[810,27463+4]..[810,27463+14])
                      Ppat_construct "Insert" (typing/includemod_errorprinter.ml[810,27463+4]..[810,27463+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[810,27463+11]..[810,27463+14])
                          Ppat_var "mty" (typing/includemod_errorprinter.ml[810,27463+11]..[810,27463+14])
                    expression (typing/includemod_errorprinter.ml[810,27463+18]..[810,27463+55])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[810,27463+18]..[810,27463+51])
                        Pexp_ident "Functor_suberror.Inclusion.insert" (typing/includemod_errorprinter.ml[810,27463+18]..[810,27463+51])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[810,27463+52]..[810,27463+55])
                            Pexp_ident "mty" (typing/includemod_errorprinter.ml[810,27463+52]..[810,27463+55])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[811,27519+4]..[811,27519+14])
                      Ppat_construct "Delete" (typing/includemod_errorprinter.ml[811,27519+4]..[811,27519+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[811,27519+11]..[811,27519+14])
                          Ppat_var "mty" (typing/includemod_errorprinter.ml[811,27519+11]..[811,27519+14])
                    expression (typing/includemod_errorprinter.ml[811,27519+18]..[811,27519+55])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[811,27519+18]..[811,27519+51])
                        Pexp_ident "Functor_suberror.Inclusion.delete" (typing/includemod_errorprinter.ml[811,27519+18]..[811,27519+51])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[811,27519+52]..[811,27519+55])
                            Pexp_ident "mty" (typing/includemod_errorprinter.ml[811,27519+52]..[811,27519+55])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[812,27575+4]..[812,27575+18])
                      Ppat_construct "Keep" (typing/includemod_errorprinter.ml[812,27575+4]..[812,27575+8])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[812,27575+9]..[812,27575+18])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[812,27575+10]..[812,27575+11])
                              Ppat_var "x" (typing/includemod_errorprinter.ml[812,27575+10]..[812,27575+11])
                            pattern (typing/includemod_errorprinter.ml[812,27575+13]..[812,27575+14])
                              Ppat_var "y" (typing/includemod_errorprinter.ml[812,27575+13]..[812,27575+14])
                            pattern (typing/includemod_errorprinter.ml[812,27575+16]..[812,27575+17])
                              Ppat_any
                          ]
                    expression (typing/includemod_errorprinter.ml[812,27575+23]..[812,27575+56])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[812,27575+23]..[812,27575+52])
                        Pexp_ident "Functor_suberror.Inclusion.ok" (typing/includemod_errorprinter.ml[812,27575+23]..[812,27575+52])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[812,27575+53]..[812,27575+54])
                            Pexp_ident "x" (typing/includemod_errorprinter.ml[812,27575+53]..[812,27575+54])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[812,27575+55]..[812,27575+56])
                            Pexp_ident "y" (typing/includemod_errorprinter.ml[812,27575+55]..[812,27575+56])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[813,27632+4]..[813,27632+48])
                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[813,27632+4]..[813,27632+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[813,27632+11]..[813,27632+48])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[813,27632+12]..[813,27632+13])
                              Ppat_any
                            pattern (typing/includemod_errorprinter.ml[813,27632+15]..[813,27632+16])
                              Ppat_any
                            pattern (typing/includemod_errorprinter.ml[813,27632+18]..[813,27632+47])
                              Ppat_construct "Err.Incompatible_params" (typing/includemod_errorprinter.ml[813,27632+18]..[813,27632+41])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[813,27632+42]..[813,27632+47])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[813,27632+43]..[813,27632+44])
                                      Ppat_var "i" (typing/includemod_errorprinter.ml[813,27632+43]..[813,27632+44])
                                    pattern (typing/includemod_errorprinter.ml[813,27632+45]..[813,27632+46])
                                      Ppat_any
                                  ]
                          ]
                    expression (typing/includemod_errorprinter.ml[814,27684+6]..[814,27684+47])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[814,27684+6]..[814,27684+45])
                        Pexp_ident "Functor_suberror.Inclusion.incompatible" (typing/includemod_errorprinter.ml[814,27684+6]..[814,27684+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[814,27684+46]..[814,27684+47])
                            Pexp_ident "i" (typing/includemod_errorprinter.ml[814,27684+46]..[814,27684+47])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[815,27732+4]..[815,27732+41])
                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[815,27732+4]..[815,27732+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[815,27732+11]..[815,27732+41])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[815,27732+12]..[815,27732+13])
                              Ppat_var "g" (typing/includemod_errorprinter.ml[815,27732+12]..[815,27732+13])
                            pattern (typing/includemod_errorprinter.ml[815,27732+15]..[815,27732+16])
                              Ppat_var "e" (typing/includemod_errorprinter.ml[815,27732+15]..[815,27732+16])
                            pattern (typing/includemod_errorprinter.ml[815,27732+19]..[815,27732+40])
                              Ppat_construct "Err.Mismatch" (typing/includemod_errorprinter.ml[815,27732+19]..[815,27732+31])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[815,27732+32]..[815,27732+40])
                                  Ppat_var "mty_diff" (typing/includemod_errorprinter.ml[815,27732+32]..[815,27732+40])
                          ]
                    expression (typing/includemod_errorprinter.ml[816,27777+6]..[821,27940+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[816,27777+10]..[816,27777+14])
                            Ppat_var "more" (typing/includemod_errorprinter.ml[816,27777+10]..[816,27777+14])
                          expression (typing/includemod_errorprinter.ml[816,27777+15]..[819,27896+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[816,27777+15]..[816,27777+17])
                              Ppat_construct "()" (typing/includemod_errorprinter.ml[816,27777+15]..[816,27777+17])
                              None
                            expression (typing/includemod_errorprinter.ml[817,27797+8]..[819,27896+34])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[817,27797+21]..[817,27797+23])
                                Pexp_ident "@@" (typing/includemod_errorprinter.ml[817,27797+21]..[817,27797+23])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[817,27797+8]..[817,27797+20])
                                    Pexp_ident "subcase_list" (typing/includemod_errorprinter.ml[817,27797+8]..[817,27797+20])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[818,27821+8]..[819,27896+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[818,27821+8]..[818,27821+27])
                                      Pexp_ident "module_type_symptom" (typing/includemod_errorprinter.ml[818,27821+8]..[818,27821+27])
                                    [
                                      <arg>
                                      Labelled "eqmode"
                                        expression (typing/includemod_errorprinter.ml[818,27821+36]..[818,27821+41])
                                          Pexp_construct "false" (typing/includemod_errorprinter.ml[818,27821+36]..[818,27821+41])
                                          None
                                      <arg>
                                      Labelled "expansion_token"
                                        expression (typing/includemod_errorprinter.ml[818,27821+43]..[818,27821+58])
                                          Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[818,27821+43]..[818,27821+58])
                                      <arg>
                                      Labelled "env"
                                        expression (typing/includemod_errorprinter.ml[818,27821+60]..[818,27821+63])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[818,27821+60]..[818,27821+63])
                                      <arg>
                                      Labelled "before"
                                        expression (typing/includemod_errorprinter.ml[818,27821+72]..[818,27821+74])
                                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[818,27821+72]..[818,27821+74])
                                          None
                                      <arg>
                                      Labelled "ctx"
                                        expression (typing/includemod_errorprinter.ml[819,27896+15]..[819,27896+17])
                                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[819,27896+15]..[819,27896+17])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[819,27896+18]..[819,27896+34])
                                          Pexp_field
                                          expression (typing/includemod_errorprinter.ml[819,27896+18]..[819,27896+26])
                                            Pexp_ident "mty_diff" (typing/includemod_errorprinter.ml[819,27896+18]..[819,27896+26])
                                          "symptom" (typing/includemod_errorprinter.ml[819,27896+27]..[819,27896+34])
                                    ]
                              ]
                      ]
                      expression (typing/includemod_errorprinter.ml[821,27940+6]..[821,27940+46])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[821,27940+6]..[821,27940+37])
                          Pexp_ident "Functor_suberror.Inclusion.diff" (typing/includemod_errorprinter.ml[821,27940+6]..[821,27940+37])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[821,27940+38]..[821,27940+39])
                              Pexp_ident "g" (typing/includemod_errorprinter.ml[821,27940+38]..[821,27940+39])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[821,27940+40]..[821,27940+41])
                              Pexp_ident "e" (typing/includemod_errorprinter.ml[821,27940+40]..[821,27940+41])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[821,27940+42]..[821,27940+46])
                              Pexp_ident "more" (typing/includemod_errorprinter.ml[821,27940+42]..[821,27940+46])
                        ]
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[823,27988+0]..[836,28533+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[823,27988+4]..[823,27988+20])
          Ppat_var "functor_app_diff" (typing/includemod_errorprinter.ml[823,27988+4]..[823,27988+20])
        expression (typing/includemod_errorprinter.ml[823,27988+21]..[836,28533+40]) ghost
          Pexp_fun
          Labelled "expansion_token"
          None
          pattern (typing/includemod_errorprinter.ml[823,27988+22]..[823,27988+37])
            Ppat_var "expansion_token" (typing/includemod_errorprinter.ml[823,27988+22]..[823,27988+37])
          expression (typing/includemod_errorprinter.ml[823,27988+38]..[836,28533+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[823,27988+38]..[823,27988+41])
              Ppat_var "env" (typing/includemod_errorprinter.ml[823,27988+38]..[823,27988+41])
            expression (typing/includemod_errorprinter.ml[823,27988+43]..[836,28533+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[823,27988+43]..[823,27988+68])
                Ppat_constraint
                pattern (typing/includemod_errorprinter.ml[823,27988+44]..[823,27988+49])
                  Ppat_var "patch" (typing/includemod_errorprinter.ml[823,27988+44]..[823,27988+49])
                core_type (typing/includemod_errorprinter.ml[823,27988+51]..[823,27988+67])
                  Ptyp_constr "Diffing.change" (typing/includemod_errorprinter.ml[823,27988+53]..[823,27988+67])
                  [
                    core_type (typing/includemod_errorprinter.ml[823,27988+51]..[823,27988+52])
                      Ptyp_any
                  ]
              expression (typing/includemod_errorprinter.ml[824,28059+2]..[836,28533+40])
                Pexp_match
                expression (typing/includemod_errorprinter.ml[824,28059+8]..[824,28059+13])
                  Pexp_ident "patch" (typing/includemod_errorprinter.ml[824,28059+8]..[824,28059+13])
                [
                  <case>
                    pattern (typing/includemod_errorprinter.ml[825,28078+4]..[825,28078+14])
                      Ppat_construct "Insert" (typing/includemod_errorprinter.ml[825,28078+4]..[825,28078+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[825,28078+11]..[825,28078+14])
                          Ppat_var "mty" (typing/includemod_errorprinter.ml[825,28078+11]..[825,28078+14])
                    expression (typing/includemod_errorprinter.ml[825,28078+19]..[825,28078+50])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[825,28078+19]..[825,28078+46])
                        Pexp_ident "Functor_suberror.App.insert" (typing/includemod_errorprinter.ml[825,28078+19]..[825,28078+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[825,28078+47]..[825,28078+50])
                            Pexp_ident "mty" (typing/includemod_errorprinter.ml[825,28078+47]..[825,28078+50])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[826,28129+4]..[826,28129+14])
                      Ppat_construct "Delete" (typing/includemod_errorprinter.ml[826,28129+4]..[826,28129+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[826,28129+11]..[826,28129+14])
                          Ppat_var "mty" (typing/includemod_errorprinter.ml[826,28129+11]..[826,28129+14])
                    expression (typing/includemod_errorprinter.ml[826,28129+19]..[826,28129+50])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[826,28129+19]..[826,28129+46])
                        Pexp_ident "Functor_suberror.App.delete" (typing/includemod_errorprinter.ml[826,28129+19]..[826,28129+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[826,28129+47]..[826,28129+50])
                            Pexp_ident "mty" (typing/includemod_errorprinter.ml[826,28129+47]..[826,28129+50])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[827,28180+4]..[827,28180+18])
                      Ppat_construct "Keep" (typing/includemod_errorprinter.ml[827,28180+4]..[827,28180+8])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[827,28180+9]..[827,28180+18])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[827,28180+10]..[827,28180+11])
                              Ppat_var "x" (typing/includemod_errorprinter.ml[827,28180+10]..[827,28180+11])
                            pattern (typing/includemod_errorprinter.ml[827,28180+13]..[827,28180+14])
                              Ppat_var "y" (typing/includemod_errorprinter.ml[827,28180+13]..[827,28180+14])
                            pattern (typing/includemod_errorprinter.ml[827,28180+16]..[827,28180+17])
                              Ppat_any
                          ]
                    expression (typing/includemod_errorprinter.ml[827,28180+23]..[827,28180+50])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[827,28180+23]..[827,28180+46])
                        Pexp_ident "Functor_suberror.App.ok" (typing/includemod_errorprinter.ml[827,28180+23]..[827,28180+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[827,28180+47]..[827,28180+48])
                            Pexp_ident "x" (typing/includemod_errorprinter.ml[827,28180+47]..[827,28180+48])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[827,28180+49]..[827,28180+50])
                            Pexp_ident "y" (typing/includemod_errorprinter.ml[827,28180+49]..[827,28180+50])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[828,28231+4]..[828,28231+48])
                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[828,28231+4]..[828,28231+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[828,28231+11]..[828,28231+48])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[828,28231+12]..[828,28231+13])
                              Ppat_any
                            pattern (typing/includemod_errorprinter.ml[828,28231+15]..[828,28231+16])
                              Ppat_any
                            pattern (typing/includemod_errorprinter.ml[828,28231+18]..[828,28231+47])
                              Ppat_construct "Err.Incompatible_params" (typing/includemod_errorprinter.ml[828,28231+18]..[828,28231+41])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[828,28231+42]..[828,28231+47])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[828,28231+43]..[828,28231+44])
                                      Ppat_var "i" (typing/includemod_errorprinter.ml[828,28231+43]..[828,28231+44])
                                    pattern (typing/includemod_errorprinter.ml[828,28231+45]..[828,28231+46])
                                      Ppat_any
                                  ]
                          ]
                    expression (typing/includemod_errorprinter.ml[829,28283+6]..[829,28283+41])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[829,28283+6]..[829,28283+39])
                        Pexp_ident "Functor_suberror.App.incompatible" (typing/includemod_errorprinter.ml[829,28283+6]..[829,28283+39])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[829,28283+40]..[829,28283+41])
                            Pexp_ident "i" (typing/includemod_errorprinter.ml[829,28283+40]..[829,28283+41])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[830,28325+4]..[830,28325+41])
                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[830,28325+4]..[830,28325+10])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[830,28325+11]..[830,28325+41])
                          Ppat_tuple
                          [
                            pattern (typing/includemod_errorprinter.ml[830,28325+12]..[830,28325+13])
                              Ppat_var "g" (typing/includemod_errorprinter.ml[830,28325+12]..[830,28325+13])
                            pattern (typing/includemod_errorprinter.ml[830,28325+15]..[830,28325+16])
                              Ppat_var "e" (typing/includemod_errorprinter.ml[830,28325+15]..[830,28325+16])
                            pattern (typing/includemod_errorprinter.ml[830,28325+19]..[830,28325+40])
                              Ppat_construct "Err.Mismatch" (typing/includemod_errorprinter.ml[830,28325+19]..[830,28325+31])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[830,28325+32]..[830,28325+40])
                                  Ppat_var "mty_diff" (typing/includemod_errorprinter.ml[830,28325+32]..[830,28325+40])
                          ]
                    expression (typing/includemod_errorprinter.ml[831,28370+6]..[836,28533+40])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[831,28370+10]..[831,28370+14])
                            Ppat_var "more" (typing/includemod_errorprinter.ml[831,28370+10]..[831,28370+14])
                          expression (typing/includemod_errorprinter.ml[831,28370+15]..[834,28489+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includemod_errorprinter.ml[831,28370+15]..[831,28370+17])
                              Ppat_construct "()" (typing/includemod_errorprinter.ml[831,28370+15]..[831,28370+17])
                              None
                            expression (typing/includemod_errorprinter.ml[832,28390+8]..[834,28489+34])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[832,28390+21]..[832,28390+23])
                                Pexp_ident "@@" (typing/includemod_errorprinter.ml[832,28390+21]..[832,28390+23])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[832,28390+8]..[832,28390+20])
                                    Pexp_ident "subcase_list" (typing/includemod_errorprinter.ml[832,28390+8]..[832,28390+20])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[833,28414+8]..[834,28489+34])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[833,28414+8]..[833,28414+27])
                                      Pexp_ident "module_type_symptom" (typing/includemod_errorprinter.ml[833,28414+8]..[833,28414+27])
                                    [
                                      <arg>
                                      Labelled "eqmode"
                                        expression (typing/includemod_errorprinter.ml[833,28414+36]..[833,28414+41])
                                          Pexp_construct "false" (typing/includemod_errorprinter.ml[833,28414+36]..[833,28414+41])
                                          None
                                      <arg>
                                      Labelled "expansion_token"
                                        expression (typing/includemod_errorprinter.ml[833,28414+43]..[833,28414+58])
                                          Pexp_ident "expansion_token" (typing/includemod_errorprinter.ml[833,28414+43]..[833,28414+58])
                                      <arg>
                                      Labelled "env"
                                        expression (typing/includemod_errorprinter.ml[833,28414+60]..[833,28414+63])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[833,28414+60]..[833,28414+63])
                                      <arg>
                                      Labelled "before"
                                        expression (typing/includemod_errorprinter.ml[833,28414+72]..[833,28414+74])
                                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[833,28414+72]..[833,28414+74])
                                          None
                                      <arg>
                                      Labelled "ctx"
                                        expression (typing/includemod_errorprinter.ml[834,28489+15]..[834,28489+17])
                                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[834,28489+15]..[834,28489+17])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[834,28489+18]..[834,28489+34])
                                          Pexp_field
                                          expression (typing/includemod_errorprinter.ml[834,28489+18]..[834,28489+26])
                                            Pexp_ident "mty_diff" (typing/includemod_errorprinter.ml[834,28489+18]..[834,28489+26])
                                          "symptom" (typing/includemod_errorprinter.ml[834,28489+27]..[834,28489+34])
                                    ]
                              ]
                      ]
                      expression (typing/includemod_errorprinter.ml[836,28533+6]..[836,28533+40])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[836,28533+6]..[836,28533+31])
                          Pexp_ident "Functor_suberror.App.diff" (typing/includemod_errorprinter.ml[836,28533+6]..[836,28533+31])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[836,28533+32]..[836,28533+33])
                              Pexp_ident "g" (typing/includemod_errorprinter.ml[836,28533+32]..[836,28533+33])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[836,28533+34]..[836,28533+35])
                              Pexp_ident "e" (typing/includemod_errorprinter.ml[836,28533+34]..[836,28533+35])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[836,28533+36]..[836,28533+40])
                              Pexp_ident "more" (typing/includemod_errorprinter.ml[836,28533+36]..[836,28533+40])
                        ]
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[838,28575+0]..[854,29195+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[838,28575+4]..[838,28575+21])
          Ppat_var "module_type_subst" (typing/includemod_errorprinter.ml[838,28575+4]..[838,28575+21])
        expression (typing/includemod_errorprinter.ml[838,28575+22]..[854,29195+12]) ghost
          Pexp_fun
          Labelled "env"
          None
          pattern (typing/includemod_errorprinter.ml[838,28575+23]..[838,28575+26])
            Ppat_var "env" (typing/includemod_errorprinter.ml[838,28575+23]..[838,28575+26])
          expression (typing/includemod_errorprinter.ml[838,28575+27]..[854,29195+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[838,28575+27]..[838,28575+29])
              Ppat_var "id" (typing/includemod_errorprinter.ml[838,28575+27]..[838,28575+29])
            expression (typing/includemod_errorprinter.ml[838,28575+30]..[854,29195+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[838,28575+30]..[838,28575+34])
                Ppat_var "diff" (typing/includemod_errorprinter.ml[838,28575+30]..[838,28575+34])
              expression (typing/includemod_errorprinter.ml[839,28612+2]..[854,29195+12])
                Pexp_match
                expression (typing/includemod_errorprinter.ml[839,28612+8]..[839,28612+20])
                  Pexp_field
                  expression (typing/includemod_errorprinter.ml[839,28612+8]..[839,28612+12])
                    Pexp_ident "diff" (typing/includemod_errorprinter.ml[839,28612+8]..[839,28612+12])
                  "symptom" (typing/includemod_errorprinter.ml[839,28612+13]..[839,28612+20])
                [
                  <case>
                    pattern (typing/includemod_errorprinter.ml[840,28638+4]..[840,28638+21])
                      Ppat_construct "Not_less_than" (typing/includemod_errorprinter.ml[840,28638+4]..[840,28638+17])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[840,28638+18]..[840,28638+21])
                          Ppat_var "mts" (typing/includemod_errorprinter.ml[840,28638+18]..[840,28638+21])
                    expression (typing/includemod_errorprinter.ml[841,28663+6]..[842,28732+29])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[841,28663+6]..[841,28663+17])
                        Pexp_ident "module_type" (typing/includemod_errorprinter.ml[841,28663+6]..[841,28663+17])
                      [
                        <arg>
                        Labelled "expansion_token"
                          expression (typing/includemod_errorprinter.ml[841,28663+35]..[841,28663+39])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[841,28663+35]..[841,28663+39])
                            None
                        <arg>
                        Labelled "eqmode"
                          expression (typing/includemod_errorprinter.ml[841,28663+48]..[841,28663+52])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[841,28663+48]..[841,28663+52])
                            None
                        <arg>
                        Labelled "before"
                          expression (typing/includemod_errorprinter.ml[841,28663+61]..[841,28663+63])
                            Pexp_construct "[]" (typing/includemod_errorprinter.ml[841,28663+61]..[841,28663+63])
                            None
                        <arg>
                        Labelled "env"
                          expression (typing/includemod_errorprinter.ml[841,28663+65]..[841,28663+68])
                            Pexp_ident "env" (typing/includemod_errorprinter.ml[841,28663+65]..[841,28663+68])
                        <arg>
                        Labelled "ctx"
                          expression (typing/includemod_errorprinter.ml[842,28732+13]..[842,28732+25])
                            Pexp_construct "::" (typing/includemod_errorprinter.ml[842,28732+14]..[842,28732+25]) ghost
                            Some
                              expression (typing/includemod_errorprinter.ml[842,28732+14]..[842,28732+25]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[842,28732+14]..[842,28732+24])
                                    Pexp_construct "Modtype" (typing/includemod_errorprinter.ml[842,28732+14]..[842,28732+21])
                                    Some
                                      expression (typing/includemod_errorprinter.ml[842,28732+22]..[842,28732+24])
                                        Pexp_ident "id" (typing/includemod_errorprinter.ml[842,28732+22]..[842,28732+24])
                                  expression (typing/includemod_errorprinter.ml[842,28732+24]..[842,28732+25]) ghost
                                    Pexp_construct "[]" (typing/includemod_errorprinter.ml[842,28732+24]..[842,28732+25]) ghost
                                    None
                                ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[842,28732+26]..[842,28732+29])
                            Pexp_ident "mts" (typing/includemod_errorprinter.ml[842,28732+26]..[842,28732+29])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[843,28762+4]..[843,28762+24])
                      Ppat_construct "Not_greater_than" (typing/includemod_errorprinter.ml[843,28762+4]..[843,28762+20])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[843,28762+21]..[843,28762+24])
                          Ppat_var "mts" (typing/includemod_errorprinter.ml[843,28762+21]..[843,28762+24])
                    expression (typing/includemod_errorprinter.ml[844,28790+6]..[845,28859+29])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[844,28790+6]..[844,28790+17])
                        Pexp_ident "module_type" (typing/includemod_errorprinter.ml[844,28790+6]..[844,28790+17])
                      [
                        <arg>
                        Labelled "expansion_token"
                          expression (typing/includemod_errorprinter.ml[844,28790+35]..[844,28790+39])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[844,28790+35]..[844,28790+39])
                            None
                        <arg>
                        Labelled "eqmode"
                          expression (typing/includemod_errorprinter.ml[844,28790+48]..[844,28790+52])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[844,28790+48]..[844,28790+52])
                            None
                        <arg>
                        Labelled "before"
                          expression (typing/includemod_errorprinter.ml[844,28790+61]..[844,28790+63])
                            Pexp_construct "[]" (typing/includemod_errorprinter.ml[844,28790+61]..[844,28790+63])
                            None
                        <arg>
                        Labelled "env"
                          expression (typing/includemod_errorprinter.ml[844,28790+65]..[844,28790+68])
                            Pexp_ident "env" (typing/includemod_errorprinter.ml[844,28790+65]..[844,28790+68])
                        <arg>
                        Labelled "ctx"
                          expression (typing/includemod_errorprinter.ml[845,28859+13]..[845,28859+25])
                            Pexp_construct "::" (typing/includemod_errorprinter.ml[845,28859+14]..[845,28859+25]) ghost
                            Some
                              expression (typing/includemod_errorprinter.ml[845,28859+14]..[845,28859+25]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[845,28859+14]..[845,28859+24])
                                    Pexp_construct "Modtype" (typing/includemod_errorprinter.ml[845,28859+14]..[845,28859+21])
                                    Some
                                      expression (typing/includemod_errorprinter.ml[845,28859+22]..[845,28859+24])
                                        Pexp_ident "id" (typing/includemod_errorprinter.ml[845,28859+22]..[845,28859+24])
                                  expression (typing/includemod_errorprinter.ml[845,28859+24]..[845,28859+25]) ghost
                                    Pexp_construct "[]" (typing/includemod_errorprinter.ml[845,28859+24]..[845,28859+25]) ghost
                                    None
                                ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[845,28859+26]..[845,28859+29])
                            Pexp_ident "mts" (typing/includemod_errorprinter.ml[845,28859+26]..[845,28859+29])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[846,28889+4]..[846,28889+20])
                      Ppat_construct "Incomparable" (typing/includemod_errorprinter.ml[846,28889+4]..[846,28889+16])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[846,28889+17]..[846,28889+20])
                          Ppat_var "mts" (typing/includemod_errorprinter.ml[846,28889+17]..[846,28889+20])
                    expression (typing/includemod_errorprinter.ml[847,28913+6]..[848,28982+39])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[847,28913+6]..[847,28913+17])
                        Pexp_ident "module_type" (typing/includemod_errorprinter.ml[847,28913+6]..[847,28913+17])
                      [
                        <arg>
                        Labelled "expansion_token"
                          expression (typing/includemod_errorprinter.ml[847,28913+35]..[847,28913+39])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[847,28913+35]..[847,28913+39])
                            None
                        <arg>
                        Labelled "eqmode"
                          expression (typing/includemod_errorprinter.ml[847,28913+48]..[847,28913+52])
                            Pexp_construct "true" (typing/includemod_errorprinter.ml[847,28913+48]..[847,28913+52])
                            None
                        <arg>
                        Labelled "env"
                          expression (typing/includemod_errorprinter.ml[847,28913+54]..[847,28913+57])
                            Pexp_ident "env" (typing/includemod_errorprinter.ml[847,28913+54]..[847,28913+57])
                        <arg>
                        Labelled "before"
                          expression (typing/includemod_errorprinter.ml[847,28913+66]..[847,28913+68])
                            Pexp_construct "[]" (typing/includemod_errorprinter.ml[847,28913+66]..[847,28913+68])
                            None
                        <arg>
                        Labelled "ctx"
                          expression (typing/includemod_errorprinter.ml[848,28982+13]..[848,28982+25])
                            Pexp_construct "::" (typing/includemod_errorprinter.ml[848,28982+14]..[848,28982+25]) ghost
                            Some
                              expression (typing/includemod_errorprinter.ml[848,28982+14]..[848,28982+25]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/includemod_errorprinter.ml[848,28982+14]..[848,28982+24])
                                    Pexp_construct "Modtype" (typing/includemod_errorprinter.ml[848,28982+14]..[848,28982+21])
                                    Some
                                      expression (typing/includemod_errorprinter.ml[848,28982+22]..[848,28982+24])
                                        Pexp_ident "id" (typing/includemod_errorprinter.ml[848,28982+22]..[848,28982+24])
                                  expression (typing/includemod_errorprinter.ml[848,28982+24]..[848,28982+25]) ghost
                                    Pexp_construct "[]" (typing/includemod_errorprinter.ml[848,28982+24]..[848,28982+25]) ghost
                                    None
                                ]
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[848,28982+26]..[848,28982+39])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[848,28982+26]..[848,28982+29])
                              Pexp_ident "mts" (typing/includemod_errorprinter.ml[848,28982+26]..[848,28982+29])
                            "less_than" (typing/includemod_errorprinter.ml[848,28982+30]..[848,28982+39])
                      ]
                  <case>
                    pattern (typing/includemod_errorprinter.ml[849,29022+4]..[849,29022+25])
                      Ppat_construct "Illegal_permutation" (typing/includemod_errorprinter.ml[849,29022+4]..[849,29022+23])
                      Some
                        []
                        pattern (typing/includemod_errorprinter.ml[849,29022+24]..[849,29022+25])
                          Ppat_var "c" (typing/includemod_errorprinter.ml[849,29022+24]..[849,29022+25])
                    expression (typing/includemod_errorprinter.ml[850,29051+6]..[854,29195+12])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/includemod_errorprinter.ml[850,29051+10]..[850,29051+13])
                            Ppat_var "mty" (typing/includemod_errorprinter.ml[850,29051+10]..[850,29051+13])
                          expression (typing/includemod_errorprinter.ml[850,29051+16]..[850,29051+24])
                            Pexp_field
                            expression (typing/includemod_errorprinter.ml[850,29051+16]..[850,29051+20])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[850,29051+16]..[850,29051+20])
                            "got" (typing/includemod_errorprinter.ml[850,29051+21]..[850,29051+24])
                      ]
                      expression (typing/includemod_errorprinter.ml[851,29079+6]..[854,29195+12])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/includemod_errorprinter.ml[851,29079+10]..[851,29079+14])
                              Ppat_var "main" (typing/includemod_errorprinter.ml[851,29079+10]..[851,29079+14])
                            expression (typing/includemod_errorprinter.ml[852,29096+8]..[853,29130+61])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[852,29096+8]..[852,29096+20])
                                Pexp_ident "with_context" (typing/includemod_errorprinter.ml[852,29096+8]..[852,29096+20])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[852,29096+21]..[852,29096+33])
                                    Pexp_construct "::" (typing/includemod_errorprinter.ml[852,29096+22]..[852,29096+33]) ghost
                                    Some
                                      expression (typing/includemod_errorprinter.ml[852,29096+22]..[852,29096+33]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/includemod_errorprinter.ml[852,29096+22]..[852,29096+32])
                                            Pexp_construct "Modtype" (typing/includemod_errorprinter.ml[852,29096+22]..[852,29096+29])
                                            Some
                                              expression (typing/includemod_errorprinter.ml[852,29096+30]..[852,29096+32])
                                                Pexp_ident "id" (typing/includemod_errorprinter.ml[852,29096+30]..[852,29096+32])
                                          expression (typing/includemod_errorprinter.ml[852,29096+32]..[852,29096+33]) ghost
                                            Pexp_construct "[]" (typing/includemod_errorprinter.ml[852,29096+32]..[852,29096+33]) ghost
                                            None
                                        ]
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[853,29130+10]..[853,29130+53])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[853,29130+11]..[853,29130+33])
                                      Pexp_ident "Illegal_permutation.pp" (typing/includemod_errorprinter.ml[853,29130+11]..[853,29130+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[853,29130+34]..[853,29130+48])
                                          Pexp_ident "Context.alt_pp" (typing/includemod_errorprinter.ml[853,29130+34]..[853,29130+48])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[853,29130+49]..[853,29130+52])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[853,29130+49]..[853,29130+52])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[853,29130+54]..[853,29130+61])
                                    Pexp_tuple
                                    [
                                      expression (typing/includemod_errorprinter.ml[853,29130+55]..[853,29130+58])
                                        Pexp_ident "mty" (typing/includemod_errorprinter.ml[853,29130+55]..[853,29130+58])
                                      expression (typing/includemod_errorprinter.ml[853,29130+59]..[853,29130+60])
                                        Pexp_ident "c" (typing/includemod_errorprinter.ml[853,29130+59]..[853,29130+60])
                                    ]
                              ]
                        ]
                        expression (typing/includemod_errorprinter.ml[854,29195+6]..[854,29195+12])
                          Pexp_construct "::" (typing/includemod_errorprinter.ml[854,29195+7]..[854,29195+12]) ghost
                          Some
                            expression (typing/includemod_errorprinter.ml[854,29195+7]..[854,29195+12]) ghost
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[854,29195+7]..[854,29195+11])
                                  Pexp_ident "main" (typing/includemod_errorprinter.ml[854,29195+7]..[854,29195+11])
                                expression (typing/includemod_errorprinter.ml[854,29195+11]..[854,29195+12]) ghost
                                  Pexp_construct "[]" (typing/includemod_errorprinter.ml[854,29195+11]..[854,29195+12]) ghost
                                  None
                              ]
                ]
    ]
  structure_item (typing/includemod_errorprinter.ml[856,29209+0]..[872,29886+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[856,29209+4]..[856,29209+7])
          Ppat_var "all" (typing/includemod_errorprinter.ml[856,29209+4]..[856,29209+7])
        expression (typing/includemod_errorprinter.ml[856,29209+8]..[872,29886+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[856,29209+8]..[856,29209+11])
            Ppat_var "env" (typing/includemod_errorprinter.ml[856,29209+8]..[856,29209+11])
          expression (typing/includemod_errorprinter.ml[856,29209+14]..[872,29886+45])
            Pexp_function
            [
              <case>
                pattern (typing/includemod_errorprinter.ml[857,29232+4]..[857,29232+28])
                  Ppat_construct "In_Compilation_unit" (typing/includemod_errorprinter.ml[857,29232+4]..[857,29232+23])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[857,29232+24]..[857,29232+28])
                      Ppat_var "diff" (typing/includemod_errorprinter.ml[857,29232+24]..[857,29232+28])
                expression (typing/includemod_errorprinter.ml[858,29264+6]..[859,29327+79])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/includemod_errorprinter.ml[858,29264+10]..[858,29264+15])
                        Ppat_var "first" (typing/includemod_errorprinter.ml[858,29264+10]..[858,29264+15])
                      expression (typing/includemod_errorprinter.ml[858,29264+18]..[858,29264+59])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[858,29264+18]..[858,29264+30])
                          Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[858,29264+18]..[858,29264+30])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[858,29264+31]..[858,29264+35])
                              Pexp_constant PConst_string("%a",(typing/includemod_errorprinter.ml[858,29264+32]..[858,29264+34]),None)
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[858,29264+36]..[858,29264+54])
                              Pexp_ident "interface_mismatch" (typing/includemod_errorprinter.ml[858,29264+36]..[858,29264+54])
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[858,29264+55]..[858,29264+59])
                              Pexp_ident "diff" (typing/includemod_errorprinter.ml[858,29264+55]..[858,29264+59])
                        ]
                  ]
                  expression (typing/includemod_errorprinter.ml[859,29327+6]..[859,29327+79])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[859,29327+6]..[859,29327+15])
                      Pexp_ident "signature" (typing/includemod_errorprinter.ml[859,29327+6]..[859,29327+15])
                    [
                      <arg>
                      Labelled "expansion_token"
                        expression (typing/includemod_errorprinter.ml[859,29327+33]..[859,29327+37])
                          Pexp_construct "true" (typing/includemod_errorprinter.ml[859,29327+33]..[859,29327+37])
                          None
                      <arg>
                      Labelled "env"
                        expression (typing/includemod_errorprinter.ml[859,29327+39]..[859,29327+42])
                          Pexp_ident "env" (typing/includemod_errorprinter.ml[859,29327+39]..[859,29327+42])
                      <arg>
                      Labelled "before"
                        expression (typing/includemod_errorprinter.ml[859,29327+51]..[859,29327+58])
                          Pexp_construct "::" (typing/includemod_errorprinter.ml[859,29327+52]..[859,29327+58]) ghost
                          Some
                            expression (typing/includemod_errorprinter.ml[859,29327+52]..[859,29327+58]) ghost
                              Pexp_tuple
                              [
                                expression (typing/includemod_errorprinter.ml[859,29327+52]..[859,29327+57])
                                  Pexp_ident "first" (typing/includemod_errorprinter.ml[859,29327+52]..[859,29327+57])
                                expression (typing/includemod_errorprinter.ml[859,29327+57]..[859,29327+58]) ghost
                                  Pexp_construct "[]" (typing/includemod_errorprinter.ml[859,29327+57]..[859,29327+58]) ghost
                                  None
                              ]
                      <arg>
                      Labelled "ctx"
                        expression (typing/includemod_errorprinter.ml[859,29327+64]..[859,29327+66])
                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[859,29327+64]..[859,29327+66])
                          None
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[859,29327+67]..[859,29327+79])
                          Pexp_field
                          expression (typing/includemod_errorprinter.ml[859,29327+67]..[859,29327+71])
                            Pexp_ident "diff" (typing/includemod_errorprinter.ml[859,29327+67]..[859,29327+71])
                          "symptom" (typing/includemod_errorprinter.ml[859,29327+72]..[859,29327+79])
                    ]
              <case>
                pattern (typing/includemod_errorprinter.ml[860,29407+4]..[860,29407+35])
                  Ppat_construct "In_Type_declaration" (typing/includemod_errorprinter.ml[860,29407+4]..[860,29407+23])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[860,29407+24]..[860,29407+35])
                      Ppat_tuple
                      [
                        pattern (typing/includemod_errorprinter.ml[860,29407+25]..[860,29407+27])
                          Ppat_var "id" (typing/includemod_errorprinter.ml[860,29407+25]..[860,29407+27])
                        pattern (typing/includemod_errorprinter.ml[860,29407+28]..[860,29407+34])
                          Ppat_var "reason" (typing/includemod_errorprinter.ml[860,29407+28]..[860,29407+34])
                      ]
                expression (typing/includemod_errorprinter.ml[861,29446+6]..[861,29446+46])
                  Pexp_construct "::" (typing/includemod_errorprinter.ml[861,29446+7]..[861,29446+46]) ghost
                  Some
                    expression (typing/includemod_errorprinter.ml[861,29446+7]..[861,29446+46]) ghost
                      Pexp_tuple
                      [
                        expression (typing/includemod_errorprinter.ml[861,29446+7]..[861,29446+45])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[861,29446+7]..[861,29446+19])
                            Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[861,29446+7]..[861,29446+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[861,29446+20]..[861,29446+24])
                                Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[861,29446+21]..[861,29446+23]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[861,29446+25]..[861,29446+45])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[861,29446+26]..[861,29446+30])
                                  Pexp_ident "core" (typing/includemod_errorprinter.ml[861,29446+26]..[861,29446+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[861,29446+31]..[861,29446+34])
                                      Pexp_ident "env" (typing/includemod_errorprinter.ml[861,29446+31]..[861,29446+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[861,29446+35]..[861,29446+37])
                                      Pexp_ident "id" (typing/includemod_errorprinter.ml[861,29446+35]..[861,29446+37])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[861,29446+38]..[861,29446+44])
                                      Pexp_ident "reason" (typing/includemod_errorprinter.ml[861,29446+38]..[861,29446+44])
                                ]
                          ]
                        expression (typing/includemod_errorprinter.ml[861,29446+45]..[861,29446+46]) ghost
                          Pexp_construct "[]" (typing/includemod_errorprinter.ml[861,29446+45]..[861,29446+46]) ghost
                          None
                      ]
              <case>
                pattern (typing/includemod_errorprinter.ml[862,29493+4]..[862,29493+23])
                  Ppat_construct "In_Module_type" (typing/includemod_errorprinter.ml[862,29493+4]..[862,29493+18])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[862,29493+19]..[862,29493+23])
                      Ppat_var "diff" (typing/includemod_errorprinter.ml[862,29493+19]..[862,29493+23])
                expression (typing/includemod_errorprinter.ml[863,29520+6]..[864,29598+12])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[863,29520+6]..[863,29520+17])
                    Pexp_ident "module_type" (typing/includemod_errorprinter.ml[863,29520+6]..[863,29520+17])
                  [
                    <arg>
                    Labelled "expansion_token"
                      expression (typing/includemod_errorprinter.ml[863,29520+35]..[863,29520+39])
                        Pexp_construct "true" (typing/includemod_errorprinter.ml[863,29520+35]..[863,29520+39])
                        None
                    <arg>
                    Labelled "eqmode"
                      expression (typing/includemod_errorprinter.ml[863,29520+48]..[863,29520+53])
                        Pexp_construct "false" (typing/includemod_errorprinter.ml[863,29520+48]..[863,29520+53])
                        None
                    <arg>
                    Labelled "before"
                      expression (typing/includemod_errorprinter.ml[863,29520+62]..[863,29520+64])
                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[863,29520+62]..[863,29520+64])
                        None
                    <arg>
                    Labelled "env"
                      expression (typing/includemod_errorprinter.ml[863,29520+66]..[863,29520+69])
                        Pexp_ident "env" (typing/includemod_errorprinter.ml[863,29520+66]..[863,29520+69])
                    <arg>
                    Labelled "ctx"
                      expression (typing/includemod_errorprinter.ml[863,29520+75]..[863,29520+77])
                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[863,29520+75]..[863,29520+77])
                        None
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[864,29598+8]..[864,29598+12])
                        Pexp_ident "diff" (typing/includemod_errorprinter.ml[864,29598+8]..[864,29598+12])
                  ]
              <case>
                pattern (typing/includemod_errorprinter.ml[865,29611+4]..[865,29611+41])
                  Ppat_construct "In_Module_type_substitution" (typing/includemod_errorprinter.ml[865,29611+4]..[865,29611+31])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[865,29611+32]..[865,29611+41])
                      Ppat_tuple
                      [
                        pattern (typing/includemod_errorprinter.ml[865,29611+33]..[865,29611+35])
                          Ppat_var "id" (typing/includemod_errorprinter.ml[865,29611+33]..[865,29611+35])
                        pattern (typing/includemod_errorprinter.ml[865,29611+36]..[865,29611+40])
                          Ppat_var "diff" (typing/includemod_errorprinter.ml[865,29611+36]..[865,29611+40])
                      ]
                expression (typing/includemod_errorprinter.ml[866,29656+6]..[866,29656+36])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[866,29656+6]..[866,29656+23])
                    Pexp_ident "module_type_subst" (typing/includemod_errorprinter.ml[866,29656+6]..[866,29656+23])
                  [
                    <arg>
                    Labelled "env"
                      expression (typing/includemod_errorprinter.ml[866,29656+25]..[866,29656+28])
                        Pexp_ident "env" (typing/includemod_errorprinter.ml[866,29656+25]..[866,29656+28])
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[866,29656+29]..[866,29656+31])
                        Pexp_ident "id" (typing/includemod_errorprinter.ml[866,29656+29]..[866,29656+31])
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[866,29656+32]..[866,29656+36])
                        Pexp_ident "diff" (typing/includemod_errorprinter.ml[866,29656+32]..[866,29656+36])
                  ]
              <case>
                pattern (typing/includemod_errorprinter.ml[867,29693+4]..[867,29693+21])
                  Ppat_construct "In_Signature" (typing/includemod_errorprinter.ml[867,29693+4]..[867,29693+16])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[867,29693+17]..[867,29693+21])
                      Ppat_var "diff" (typing/includemod_errorprinter.ml[867,29693+17]..[867,29693+21])
                expression (typing/includemod_errorprinter.ml[868,29718+6]..[868,29718+66])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[868,29718+6]..[868,29718+15])
                    Pexp_ident "signature" (typing/includemod_errorprinter.ml[868,29718+6]..[868,29718+15])
                  [
                    <arg>
                    Labelled "expansion_token"
                      expression (typing/includemod_errorprinter.ml[868,29718+33]..[868,29718+37])
                        Pexp_construct "true" (typing/includemod_errorprinter.ml[868,29718+33]..[868,29718+37])
                        None
                    <arg>
                    Labelled "before"
                      expression (typing/includemod_errorprinter.ml[868,29718+46]..[868,29718+48])
                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[868,29718+46]..[868,29718+48])
                        None
                    <arg>
                    Labelled "env"
                      expression (typing/includemod_errorprinter.ml[868,29718+50]..[868,29718+53])
                        Pexp_ident "env" (typing/includemod_errorprinter.ml[868,29718+50]..[868,29718+53])
                    <arg>
                    Labelled "ctx"
                      expression (typing/includemod_errorprinter.ml[868,29718+59]..[868,29718+61])
                        Pexp_construct "[]" (typing/includemod_errorprinter.ml[868,29718+59]..[868,29718+61])
                        None
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[868,29718+62]..[868,29718+66])
                        Pexp_ident "diff" (typing/includemod_errorprinter.ml[868,29718+62]..[868,29718+66])
                  ]
              <case>
                pattern (typing/includemod_errorprinter.ml[869,29785+4]..[869,29785+21])
                  Ppat_construct "In_Expansion" (typing/includemod_errorprinter.ml[869,29785+4]..[869,29785+16])
                  Some
                    []
                    pattern (typing/includemod_errorprinter.ml[869,29785+17]..[869,29785+21])
                      Ppat_var "cmts" (typing/includemod_errorprinter.ml[869,29785+17]..[869,29785+21])
                expression (typing/includemod_errorprinter.ml[870,29810+6]..[872,29886+45])
                  Pexp_match
                  expression (typing/includemod_errorprinter.ml[870,29810+12]..[870,29810+41])
                    Pexp_apply
                    expression (typing/includemod_errorprinter.ml[870,29810+12]..[870,29810+36])
                      Pexp_ident "core_module_type_symptom" (typing/includemod_errorprinter.ml[870,29810+12]..[870,29810+36])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includemod_errorprinter.ml[870,29810+37]..[870,29810+41])
                          Pexp_ident "cmts" (typing/includemod_errorprinter.ml[870,29810+37]..[870,29810+41])
                    ]
                  [
                    <case>
                      pattern (typing/includemod_errorprinter.ml[871,29857+8]..[871,29857+12])
                        Ppat_construct "None" (typing/includemod_errorprinter.ml[871,29857+8]..[871,29857+12])
                        None
                      expression (typing/includemod_errorprinter.ml[871,29857+16]..[871,29857+28])
                        Pexp_assert
                        expression (typing/includemod_errorprinter.ml[871,29857+23]..[871,29857+28])
                          Pexp_construct "false" (typing/includemod_errorprinter.ml[871,29857+23]..[871,29857+28])
                          None
                    <case>
                      pattern (typing/includemod_errorprinter.ml[872,29886+8]..[872,29886+17])
                        Ppat_construct "Some" (typing/includemod_errorprinter.ml[872,29886+8]..[872,29886+12])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[872,29886+13]..[872,29886+17])
                            Ppat_var "main" (typing/includemod_errorprinter.ml[872,29886+13]..[872,29886+17])
                      expression (typing/includemod_errorprinter.ml[872,29886+21]..[872,29886+45])
                        Pexp_construct "::" (typing/includemod_errorprinter.ml[872,29886+22]..[872,29886+45]) ghost
                        Some
                          expression (typing/includemod_errorprinter.ml[872,29886+22]..[872,29886+45]) ghost
                            Pexp_tuple
                            [
                              expression (typing/includemod_errorprinter.ml[872,29886+22]..[872,29886+44])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[872,29886+22]..[872,29886+34])
                                  Pexp_ident "Location.msg" (typing/includemod_errorprinter.ml[872,29886+22]..[872,29886+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[872,29886+35]..[872,29886+39])
                                      Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[872,29886+36]..[872,29886+38]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[872,29886+40]..[872,29886+44])
                                      Pexp_ident "main" (typing/includemod_errorprinter.ml[872,29886+40]..[872,29886+44])
                                ]
                              expression (typing/includemod_errorprinter.ml[872,29886+44]..[872,29886+45]) ghost
                                Pexp_construct "[]" (typing/includemod_errorprinter.ml[872,29886+44]..[872,29886+45]) ghost
                                None
                            ]
                  ]
            ]
    ]
  structure_item (typing/includemod_errorprinter.ml[876,29964+0]..[879,30065+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[876,29964+4]..[876,29964+12])
          Ppat_var "err_msgs" (typing/includemod_errorprinter.ml[876,29964+4]..[876,29964+12])
        expression (typing/includemod_errorprinter.ml[876,29964+13]..[879,30065+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[876,29964+13]..[876,29964+23])
            Ppat_tuple
            [
              pattern (typing/includemod_errorprinter.ml[876,29964+14]..[876,29964+17])
                Ppat_var "env" (typing/includemod_errorprinter.ml[876,29964+14]..[876,29964+17])
              pattern (typing/includemod_errorprinter.ml[876,29964+19]..[876,29964+22])
                Ppat_var "err" (typing/includemod_errorprinter.ml[876,29964+19]..[876,29964+22])
            ]
          expression (typing/includemod_errorprinter.ml[877,29990+2]..[879,30065+39])
            Pexp_sequence
            expression (typing/includemod_errorprinter.ml[877,29990+2]..[877,29990+28])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[877,29990+2]..[877,29990+26])
                Pexp_ident "Printtyp.Conflicts.reset" (typing/includemod_errorprinter.ml[877,29990+2]..[877,29990+26])
              [
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[877,29990+26]..[877,29990+28])
                    Pexp_construct "()" (typing/includemod_errorprinter.ml[877,29990+26]..[877,29990+28])
                    None
              ]
            expression (typing/includemod_errorprinter.ml[878,30020+2]..[879,30065+39])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[878,30020+2]..[878,30020+28])
                Pexp_ident "Printtyp.wrap_printing_env" (typing/includemod_errorprinter.ml[878,30020+2]..[878,30020+28])
              [
                <arg>
                Labelled "error"
                  expression (typing/includemod_errorprinter.ml[878,30020+36]..[878,30020+40])
                    Pexp_construct "true" (typing/includemod_errorprinter.ml[878,30020+36]..[878,30020+40])
                    None
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[878,30020+41]..[878,30020+44])
                    Pexp_ident "env" (typing/includemod_errorprinter.ml[878,30020+41]..[878,30020+44])
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[879,30065+4]..[879,30065+39])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/includemod_errorprinter.ml[879,30065+9]..[879,30065+11])
                      Ppat_construct "()" (typing/includemod_errorprinter.ml[879,30065+9]..[879,30065+11])
                      None
                    expression (typing/includemod_errorprinter.ml[879,30065+15]..[879,30065+38])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[879,30065+24]..[879,30065+26])
                        Pexp_ident "@@" (typing/includemod_errorprinter.ml[879,30065+24]..[879,30065+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[879,30065+15]..[879,30065+23])
                            Pexp_ident "coalesce" (typing/includemod_errorprinter.ml[879,30065+15]..[879,30065+23])
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[879,30065+27]..[879,30065+38])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[879,30065+27]..[879,30065+30])
                              Pexp_ident "all" (typing/includemod_errorprinter.ml[879,30065+27]..[879,30065+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[879,30065+31]..[879,30065+34])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[879,30065+31]..[879,30065+34])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[879,30065+35]..[879,30065+38])
                                  Pexp_ident "err" (typing/includemod_errorprinter.ml[879,30065+35]..[879,30065+38])
                            ]
                      ]
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[881,30106+0]..[883,30158+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[881,30106+4]..[881,30106+16])
          Ppat_var "report_error" (typing/includemod_errorprinter.ml[881,30106+4]..[881,30106+16])
        expression (typing/includemod_errorprinter.ml[881,30106+17]..[883,30158+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[881,30106+17]..[881,30106+20])
            Ppat_var "err" (typing/includemod_errorprinter.ml[881,30106+17]..[881,30106+20])
          expression (typing/includemod_errorprinter.ml[882,30129+2]..[883,30158+63])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/includemod_errorprinter.ml[882,30129+6]..[882,30129+10])
                  Ppat_var "main" (typing/includemod_errorprinter.ml[882,30129+6]..[882,30129+10])
                expression (typing/includemod_errorprinter.ml[882,30129+13]..[882,30129+25])
                  Pexp_apply
                  expression (typing/includemod_errorprinter.ml[882,30129+13]..[882,30129+21])
                    Pexp_ident "err_msgs" (typing/includemod_errorprinter.ml[882,30129+13]..[882,30129+21])
                  [
                    <arg>
                    Nolabel
                      expression (typing/includemod_errorprinter.ml[882,30129+22]..[882,30129+25])
                        Pexp_ident "err" (typing/includemod_errorprinter.ml[882,30129+22]..[882,30129+25])
                  ]
            ]
            expression (typing/includemod_errorprinter.ml[883,30158+2]..[883,30158+63])
              Pexp_apply
              expression (typing/includemod_errorprinter.ml[883,30158+2]..[883,30158+17])
                Pexp_ident "Location.errorf" (typing/includemod_errorprinter.ml[883,30158+2]..[883,30158+17])
              [
                <arg>
                Labelled "loc"
                  expression (typing/includemod_errorprinter.ml[883,30158+23]..[883,30158+53])
                    Pexp_open Fresh
                    module_expr (typing/includemod_errorprinter.ml[883,30158+23]..[883,30158+31])
                      Pmod_ident "Location" (typing/includemod_errorprinter.ml[883,30158+23]..[883,30158+31])
                    expression (typing/includemod_errorprinter.ml[883,30158+33]..[883,30158+52])
                      Pexp_apply
                      expression (typing/includemod_errorprinter.ml[883,30158+33]..[883,30158+40])
                        Pexp_ident "in_file" (typing/includemod_errorprinter.ml[883,30158+33]..[883,30158+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includemod_errorprinter.ml[883,30158+41]..[883,30158+52])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[883,30158+41]..[883,30158+42])
                              Pexp_ident "!" (typing/includemod_errorprinter.ml[883,30158+41]..[883,30158+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[883,30158+42]..[883,30158+52])
                                  Pexp_ident "input_name" (typing/includemod_errorprinter.ml[883,30158+42]..[883,30158+52])
                            ]
                      ]
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[883,30158+54]..[883,30158+58])
                    Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[883,30158+55]..[883,30158+57]),None)
                <arg>
                Nolabel
                  expression (typing/includemod_errorprinter.ml[883,30158+59]..[883,30158+63])
                    Pexp_ident "main" (typing/includemod_errorprinter.ml[883,30158+59]..[883,30158+63])
              ]
    ]
  structure_item (typing/includemod_errorprinter.ml[885,30223+0]..[915,31488+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[885,30223+4]..[885,30223+22])
          Ppat_var "report_apply_error" (typing/includemod_errorprinter.ml[885,30223+4]..[885,30223+22])
        expression (typing/includemod_errorprinter.ml[885,30223+23]..[915,31488+23]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/includemod_errorprinter.ml[885,30223+24]..[885,30223+27])
            Ppat_var "loc" (typing/includemod_errorprinter.ml[885,30223+24]..[885,30223+27])
          expression (typing/includemod_errorprinter.ml[885,30223+28]..[915,31488+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includemod_errorprinter.ml[885,30223+28]..[885,30223+31])
              Ppat_var "env" (typing/includemod_errorprinter.ml[885,30223+28]..[885,30223+31])
            expression (typing/includemod_errorprinter.ml[885,30223+32]..[915,31488+23]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includemod_errorprinter.ml[885,30223+32]..[885,30223+54])
                Ppat_tuple
                [
                  pattern (typing/includemod_errorprinter.ml[885,30223+33]..[885,30223+40])
                    Ppat_var "lid_app" (typing/includemod_errorprinter.ml[885,30223+33]..[885,30223+40])
                  pattern (typing/includemod_errorprinter.ml[885,30223+42]..[885,30223+47])
                    Ppat_var "mty_f" (typing/includemod_errorprinter.ml[885,30223+42]..[885,30223+47])
                  pattern (typing/includemod_errorprinter.ml[885,30223+49]..[885,30223+53])
                    Ppat_var "args" (typing/includemod_errorprinter.ml[885,30223+49]..[885,30223+53])
                ]
              expression (typing/includemod_errorprinter.ml[886,30280+2]..[915,31488+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/includemod_errorprinter.ml[886,30280+6]..[886,30280+19])
                      Ppat_var "may_print_app" (typing/includemod_errorprinter.ml[886,30280+6]..[886,30280+19])
                    expression (typing/includemod_errorprinter.ml[886,30280+20]..[888,30342+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/includemod_errorprinter.ml[886,30280+20]..[886,30280+23])
                        Ppat_var "ppf" (typing/includemod_errorprinter.ml[886,30280+20]..[886,30280+23])
                      expression (typing/includemod_errorprinter.ml[886,30280+26]..[888,30342+65])
                        Pexp_match
                        expression (typing/includemod_errorprinter.ml[886,30280+32]..[886,30280+39])
                          Pexp_ident "lid_app" (typing/includemod_errorprinter.ml[886,30280+32]..[886,30280+39])
                        [
                          <case>
                            pattern (typing/includemod_errorprinter.ml[887,30325+6]..[887,30325+10])
                              Ppat_construct "None" (typing/includemod_errorprinter.ml[887,30325+6]..[887,30325+10])
                              None
                            expression (typing/includemod_errorprinter.ml[887,30325+14]..[887,30325+16])
                              Pexp_construct "()" (typing/includemod_errorprinter.ml[887,30325+14]..[887,30325+16])
                              None
                          <case>
                            pattern (typing/includemod_errorprinter.ml[888,30342+6]..[888,30342+14])
                              Ppat_construct "Some" (typing/includemod_errorprinter.ml[888,30342+6]..[888,30342+10])
                              Some
                                []
                                pattern (typing/includemod_errorprinter.ml[888,30342+11]..[888,30342+14])
                                  Ppat_var "lid" (typing/includemod_errorprinter.ml[888,30342+11]..[888,30342+14])
                            expression (typing/includemod_errorprinter.ml[888,30342+18]..[888,30342+65])
                              Pexp_apply
                              expression (typing/includemod_errorprinter.ml[888,30342+18]..[888,30342+32])
                                Pexp_ident "Format.fprintf" (typing/includemod_errorprinter.ml[888,30342+18]..[888,30342+32])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[888,30342+33]..[888,30342+36])
                                    Pexp_ident "ppf" (typing/includemod_errorprinter.ml[888,30342+33]..[888,30342+36])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[888,30342+37]..[888,30342+42])
                                    Pexp_constant PConst_string("%a ",(typing/includemod_errorprinter.ml[888,30342+38]..[888,30342+41]),None)
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[888,30342+43]..[888,30342+61])
                                    Pexp_ident "Printtyp.longident" (typing/includemod_errorprinter.ml[888,30342+43]..[888,30342+61])
                                <arg>
                                Nolabel
                                  expression (typing/includemod_errorprinter.ml[888,30342+62]..[888,30342+65])
                                    Pexp_ident "lid" (typing/includemod_errorprinter.ml[888,30342+62]..[888,30342+65])
                              ]
                        ]
                ]
                expression (typing/includemod_errorprinter.ml[890,30413+2]..[915,31488+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/includemod_errorprinter.ml[890,30413+6]..[890,30413+7])
                        Ppat_var "d" (typing/includemod_errorprinter.ml[890,30413+6]..[890,30413+7])
                      expression (typing/includemod_errorprinter.ml[890,30413+10]..[890,30413+55])
                        Pexp_apply
                        expression (typing/includemod_errorprinter.ml[890,30413+10]..[890,30413+36])
                          Pexp_ident "Functor_suberror.App.patch" (typing/includemod_errorprinter.ml[890,30413+10]..[890,30413+36])
                        [
                          <arg>
                          Nolabel
                            expression (typing/includemod_errorprinter.ml[890,30413+37]..[890,30413+40])
                              Pexp_ident "env" (typing/includemod_errorprinter.ml[890,30413+37]..[890,30413+40])
                          <arg>
                          Labelled "f"
                            expression (typing/includemod_errorprinter.ml[890,30413+44]..[890,30413+49])
                              Pexp_ident "mty_f" (typing/includemod_errorprinter.ml[890,30413+44]..[890,30413+49])
                          <arg>
                          Labelled "args"
                            expression (typing/includemod_errorprinter.ml[890,30413+51]..[890,30413+55])
                              Pexp_ident "args" (typing/includemod_errorprinter.ml[890,30413+51]..[890,30413+55])
                        ]
                  ]
                  expression (typing/includemod_errorprinter.ml[891,30472+2]..[915,31488+23])
                    Pexp_match
                    expression (typing/includemod_errorprinter.ml[891,30472+8]..[891,30472+9])
                      Pexp_ident "d" (typing/includemod_errorprinter.ml[891,30472+8]..[891,30472+9])
                    [
                      <case>
                        pattern (typing/includemod_errorprinter.ml[894,30603+4]..[894,30603+56])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[894,30603+6]..[894,30603+56]) ghost
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[894,30603+6]..[894,30603+56]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[894,30603+6]..[894,30603+54])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[894,30603+6]..[894,30603+7])
                                      Ppat_any
                                    pattern (typing/includemod_errorprinter.ml[894,30603+10]..[894,30603+54])
                                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[894,30603+10]..[894,30603+16])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[894,30603+17]..[894,30603+54])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[894,30603+18]..[894,30603+19])
                                              Ppat_any
                                            pattern (typing/includemod_errorprinter.ml[894,30603+21]..[894,30603+22])
                                              Ppat_any
                                            pattern (typing/includemod_errorprinter.ml[894,30603+24]..[894,30603+53])
                                              Ppat_construct "Err.Incompatible_params" (typing/includemod_errorprinter.ml[894,30603+24]..[894,30603+47])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[894,30603+48]..[894,30603+53])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/includemod_errorprinter.ml[894,30603+49]..[894,30603+50])
                                                      Ppat_var "i" (typing/includemod_errorprinter.ml[894,30603+49]..[894,30603+50])
                                                    pattern (typing/includemod_errorprinter.ml[894,30603+51]..[894,30603+52])
                                                      Ppat_any
                                                  ]
                                          ]
                                  ]
                                pattern (typing/includemod_errorprinter.ml[894,30603+55]..[894,30603+56]) ghost
                                  Ppat_construct "[]" (typing/includemod_errorprinter.ml[894,30603+55]..[894,30603+56]) ghost
                                  None
                              ]
                        expression (typing/includemod_errorprinter.ml[895,30663+6]..[895,30663+69])
                          Pexp_apply
                          expression (typing/includemod_errorprinter.ml[895,30663+6]..[895,30663+21])
                            Pexp_ident "Location.errorf" (typing/includemod_errorprinter.ml[895,30663+6]..[895,30663+21])
                          [
                            <arg>
                            Labelled "loc"
                              expression (typing/includemod_errorprinter.ml[895,30663+23]..[895,30663+26])
                                Pexp_ident "loc" (typing/includemod_errorprinter.ml[895,30663+23]..[895,30663+26])
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[895,30663+27]..[895,30663+31])
                                Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[895,30663+28]..[895,30663+30]),None)
                            <arg>
                            Nolabel
                              expression (typing/includemod_errorprinter.ml[895,30663+32]..[895,30663+69])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[895,30663+33]..[895,30663+66])
                                  Pexp_ident "Functor_suberror.App.incompatible" (typing/includemod_errorprinter.ml[895,30663+33]..[895,30663+66])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[895,30663+67]..[895,30663+68])
                                      Pexp_ident "i" (typing/includemod_errorprinter.ml[895,30663+67]..[895,30663+68])
                                ]
                          ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[896,30733+4]..[896,30733+48])
                          Ppat_construct "::" (typing/includemod_errorprinter.ml[896,30733+6]..[896,30733+48]) ghost
                          Some
                            []
                            pattern (typing/includemod_errorprinter.ml[896,30733+6]..[896,30733+48]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/includemod_errorprinter.ml[896,30733+6]..[896,30733+46])
                                  Ppat_tuple
                                  [
                                    pattern (typing/includemod_errorprinter.ml[896,30733+6]..[896,30733+7])
                                      Ppat_any
                                    pattern (typing/includemod_errorprinter.ml[896,30733+9]..[896,30733+46])
                                      Ppat_construct "Change" (typing/includemod_errorprinter.ml[896,30733+9]..[896,30733+15])
                                      Some
                                        []
                                        pattern (typing/includemod_errorprinter.ml[896,30733+16]..[896,30733+46])
                                          Ppat_tuple
                                          [
                                            pattern (typing/includemod_errorprinter.ml[896,30733+17]..[896,30733+18])
                                              Ppat_var "g" (typing/includemod_errorprinter.ml[896,30733+17]..[896,30733+18])
                                            pattern (typing/includemod_errorprinter.ml[896,30733+20]..[896,30733+21])
                                              Ppat_var "e" (typing/includemod_errorprinter.ml[896,30733+20]..[896,30733+21])
                                            pattern (typing/includemod_errorprinter.ml[896,30733+24]..[896,30733+45])
                                              Ppat_construct "Err.Mismatch" (typing/includemod_errorprinter.ml[896,30733+24]..[896,30733+36])
                                              Some
                                                []
                                                pattern (typing/includemod_errorprinter.ml[896,30733+37]..[896,30733+45])
                                                  Ppat_var "mty_diff" (typing/includemod_errorprinter.ml[896,30733+37]..[896,30733+45])
                                          ]
                                  ]
                                pattern (typing/includemod_errorprinter.ml[896,30733+47]..[896,30733+48]) ghost
                                  Ppat_construct "[]" (typing/includemod_errorprinter.ml[896,30733+47]..[896,30733+48]) ghost
                                  None
                              ]
                        expression (typing/includemod_errorprinter.ml[897,30785+6]..[902,30953+75])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[897,30785+10]..[897,30785+14])
                                Ppat_var "more" (typing/includemod_errorprinter.ml[897,30785+10]..[897,30785+14])
                              expression (typing/includemod_errorprinter.ml[897,30785+15]..[900,30909+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/includemod_errorprinter.ml[897,30785+15]..[897,30785+17])
                                  Ppat_construct "()" (typing/includemod_errorprinter.ml[897,30785+15]..[897,30785+17])
                                  None
                                expression (typing/includemod_errorprinter.ml[898,30805+8]..[900,30909+34])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[898,30805+21]..[898,30805+23])
                                    Pexp_ident "@@" (typing/includemod_errorprinter.ml[898,30805+21]..[898,30805+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[898,30805+8]..[898,30805+20])
                                        Pexp_ident "subcase_list" (typing/includemod_errorprinter.ml[898,30805+8]..[898,30805+20])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[899,30829+8]..[900,30909+34])
                                        Pexp_apply
                                        expression (typing/includemod_errorprinter.ml[899,30829+8]..[899,30829+27])
                                          Pexp_ident "module_type_symptom" (typing/includemod_errorprinter.ml[899,30829+8]..[899,30829+27])
                                        [
                                          <arg>
                                          Labelled "eqmode"
                                            expression (typing/includemod_errorprinter.ml[899,30829+36]..[899,30829+41])
                                              Pexp_construct "false" (typing/includemod_errorprinter.ml[899,30829+36]..[899,30829+41])
                                              None
                                          <arg>
                                          Labelled "expansion_token"
                                            expression (typing/includemod_errorprinter.ml[899,30829+59]..[899,30829+63])
                                              Pexp_construct "true" (typing/includemod_errorprinter.ml[899,30829+59]..[899,30829+63])
                                              None
                                          <arg>
                                          Labelled "env"
                                            expression (typing/includemod_errorprinter.ml[899,30829+65]..[899,30829+68])
                                              Pexp_ident "env" (typing/includemod_errorprinter.ml[899,30829+65]..[899,30829+68])
                                          <arg>
                                          Labelled "before"
                                            expression (typing/includemod_errorprinter.ml[899,30829+77]..[899,30829+79])
                                              Pexp_construct "[]" (typing/includemod_errorprinter.ml[899,30829+77]..[899,30829+79])
                                              None
                                          <arg>
                                          Labelled "ctx"
                                            expression (typing/includemod_errorprinter.ml[900,30909+15]..[900,30909+17])
                                              Pexp_construct "[]" (typing/includemod_errorprinter.ml[900,30909+15]..[900,30909+17])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/includemod_errorprinter.ml[900,30909+18]..[900,30909+34])
                                              Pexp_field
                                              expression (typing/includemod_errorprinter.ml[900,30909+18]..[900,30909+26])
                                                Pexp_ident "mty_diff" (typing/includemod_errorprinter.ml[900,30909+18]..[900,30909+26])
                                              "symptom" (typing/includemod_errorprinter.ml[900,30909+27]..[900,30909+34])
                                        ]
                                  ]
                          ]
                          expression (typing/includemod_errorprinter.ml[902,30953+6]..[902,30953+75])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[902,30953+6]..[902,30953+21])
                              Pexp_ident "Location.errorf" (typing/includemod_errorprinter.ml[902,30953+6]..[902,30953+21])
                            [
                              <arg>
                              Labelled "loc"
                                expression (typing/includemod_errorprinter.ml[902,30953+23]..[902,30953+26])
                                  Pexp_ident "loc" (typing/includemod_errorprinter.ml[902,30953+23]..[902,30953+26])
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[902,30953+27]..[902,30953+31])
                                  Pexp_constant PConst_string("%t",(typing/includemod_errorprinter.ml[902,30953+28]..[902,30953+30]),None)
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[902,30953+32]..[902,30953+75])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[902,30953+33]..[902,30953+65])
                                    Pexp_ident "Functor_suberror.App.single_diff" (typing/includemod_errorprinter.ml[902,30953+33]..[902,30953+65])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[902,30953+66]..[902,30953+67])
                                        Pexp_ident "g" (typing/includemod_errorprinter.ml[902,30953+66]..[902,30953+67])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[902,30953+68]..[902,30953+69])
                                        Pexp_ident "e" (typing/includemod_errorprinter.ml[902,30953+68]..[902,30953+69])
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[902,30953+70]..[902,30953+74])
                                        Pexp_ident "more" (typing/includemod_errorprinter.ml[902,30953+70]..[902,30953+74])
                                  ]
                            ]
                      <case>
                        pattern (typing/includemod_errorprinter.ml[903,31029+4]..[903,31029+5])
                          Ppat_any
                        expression (typing/includemod_errorprinter.ml[904,31038+6]..[915,31488+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/includemod_errorprinter.ml[904,31038+10]..[904,31038+16])
                                Ppat_var "actual" (typing/includemod_errorprinter.ml[904,31038+10]..[904,31038+16])
                              expression (typing/includemod_errorprinter.ml[904,31038+19]..[904,31038+45])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[904,31038+19]..[904,31038+43])
                                  Pexp_ident "Functor_suberror.App.got" (typing/includemod_errorprinter.ml[904,31038+19]..[904,31038+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[904,31038+44]..[904,31038+45])
                                      Pexp_ident "d" (typing/includemod_errorprinter.ml[904,31038+44]..[904,31038+45])
                                ]
                          ]
                          expression (typing/includemod_errorprinter.ml[905,31087+6]..[915,31488+23])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/includemod_errorprinter.ml[905,31087+10]..[905,31087+18])
                                  Ppat_var "expected" (typing/includemod_errorprinter.ml[905,31087+10]..[905,31087+18])
                                expression (typing/includemod_errorprinter.ml[905,31087+21]..[905,31087+48])
                                  Pexp_apply
                                  expression (typing/includemod_errorprinter.ml[905,31087+21]..[905,31087+46])
                                    Pexp_ident "Functor_suberror.expected" (typing/includemod_errorprinter.ml[905,31087+21]..[905,31087+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/includemod_errorprinter.ml[905,31087+47]..[905,31087+48])
                                        Pexp_ident "d" (typing/includemod_errorprinter.ml[905,31087+47]..[905,31087+48])
                                  ]
                            ]
                            expression (typing/includemod_errorprinter.ml[906,31139+6]..[915,31488+23])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/includemod_errorprinter.ml[906,31139+10]..[906,31139+13])
                                    Ppat_var "sub" (typing/includemod_errorprinter.ml[906,31139+10]..[906,31139+13])
                                  expression (typing/includemod_errorprinter.ml[907,31155+8]..[908,31175+76])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[907,31155+17]..[907,31155+19])
                                      Pexp_ident "@@" (typing/includemod_errorprinter.ml[907,31155+17]..[907,31155+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[907,31155+8]..[907,31155+16])
                                          Pexp_ident "List.rev" (typing/includemod_errorprinter.ml[907,31155+8]..[907,31155+16])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[908,31175+8]..[908,31175+76])
                                          Pexp_apply
                                          expression (typing/includemod_errorprinter.ml[908,31175+8]..[908,31175+31])
                                            Pexp_ident "Functor_suberror.params" (typing/includemod_errorprinter.ml[908,31175+8]..[908,31175+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[908,31175+32]..[908,31175+48])
                                                Pexp_ident "functor_app_diff" (typing/includemod_errorprinter.ml[908,31175+32]..[908,31175+48])
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[908,31175+49]..[908,31175+52])
                                                Pexp_ident "env" (typing/includemod_errorprinter.ml[908,31175+49]..[908,31175+52])
                                            <arg>
                                            Labelled "expansion_token"
                                              expression (typing/includemod_errorprinter.ml[908,31175+70]..[908,31175+74])
                                                Pexp_construct "true" (typing/includemod_errorprinter.ml[908,31175+70]..[908,31175+74])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/includemod_errorprinter.ml[908,31175+75]..[908,31175+76])
                                                Pexp_ident "d" (typing/includemod_errorprinter.ml[908,31175+75]..[908,31175+76])
                                          ]
                                    ]
                              ]
                              expression (typing/includemod_errorprinter.ml[910,31261+6]..[915,31488+23])
                                Pexp_apply
                                expression (typing/includemod_errorprinter.ml[910,31261+6]..[910,31261+21])
                                  Pexp_ident "Location.errorf" (typing/includemod_errorprinter.ml[910,31261+6]..[910,31261+21])
                                [
                                  <arg>
                                  Labelled "loc"
                                    expression (typing/includemod_errorprinter.ml[910,31261+23]..[910,31261+26])
                                      Pexp_ident "loc" (typing/includemod_errorprinter.ml[910,31261+23]..[910,31261+26])
                                  <arg>
                                  Labelled "sub"
                                    expression (typing/includemod_errorprinter.ml[910,31261+28]..[910,31261+31])
                                      Pexp_ident "sub" (typing/includemod_errorprinter.ml[910,31261+28]..[910,31261+31])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[911,31293+8]..[913,31385+80])
                                      Pexp_constant PConst_string("@[<hv>The functor application %tis ill-typed.@ These arguments:@;<1 2>@[%t@]@ do not match these parameters:@;<1 2>@[functor@ %t@ -> ...@]@]",(typing/includemod_errorprinter.ml[911,31293+9]..[913,31385+79]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[914,31466+8]..[914,31466+21])
                                      Pexp_ident "may_print_app" (typing/includemod_errorprinter.ml[914,31466+8]..[914,31466+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[915,31488+8]..[915,31488+14])
                                      Pexp_ident "actual" (typing/includemod_errorprinter.ml[915,31488+8]..[915,31488+14])
                                  <arg>
                                  Nolabel
                                    expression (typing/includemod_errorprinter.ml[915,31488+15]..[915,31488+23])
                                      Pexp_ident "expected" (typing/includemod_errorprinter.ml[915,31488+15]..[915,31488+23])
                                ]
                    ]
    ]
  structure_item (typing/includemod_errorprinter.ml[917,31513+0]..[926,31869+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includemod_errorprinter.ml[917,31513+4]..[917,31513+12])
          Ppat_var "register" (typing/includemod_errorprinter.ml[917,31513+4]..[917,31513+12])
        expression (typing/includemod_errorprinter.ml[917,31513+13]..[926,31869+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includemod_errorprinter.ml[917,31513+13]..[917,31513+15])
            Ppat_construct "()" (typing/includemod_errorprinter.ml[917,31513+13]..[917,31513+15])
            None
          expression (typing/includemod_errorprinter.ml[918,31531+2]..[926,31869+5])
            Pexp_apply
            expression (typing/includemod_errorprinter.ml[918,31531+2]..[918,31531+32])
              Pexp_ident "Location.register_error_of_exn" (typing/includemod_errorprinter.ml[918,31531+2]..[918,31531+32])
            [
              <arg>
              Nolabel
                expression (typing/includemod_errorprinter.ml[919,31564+4]..[926,31869+5])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/includemod_errorprinter.ml[920,31578+8]..[920,31578+28])
                        Ppat_construct "Includemod.Error" (typing/includemod_errorprinter.ml[920,31578+8]..[920,31578+24])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[920,31578+25]..[920,31578+28])
                            Ppat_var "err" (typing/includemod_errorprinter.ml[920,31578+25]..[920,31578+28])
                      expression (typing/includemod_errorprinter.ml[920,31578+32]..[920,31578+55])
                        Pexp_construct "Some" (typing/includemod_errorprinter.ml[920,31578+32]..[920,31578+36])
                        Some
                          expression (typing/includemod_errorprinter.ml[920,31578+37]..[920,31578+55])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[920,31578+38]..[920,31578+50])
                              Pexp_ident "report_error" (typing/includemod_errorprinter.ml[920,31578+38]..[920,31578+50])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[920,31578+51]..[920,31578+54])
                                  Pexp_ident "err" (typing/includemod_errorprinter.ml[920,31578+51]..[920,31578+54])
                            ]
                    <case>
                      pattern (typing/includemod_errorprinter.ml[921,31634+8]..[921,31634+63])
                        Ppat_construct "Includemod.Apply_error" (typing/includemod_errorprinter.ml[921,31634+8]..[921,31634+30])
                        Some
                          []
                          pattern (typing/includemod_errorprinter.ml[921,31634+31]..[921,31634+63])
                            Ppat_record Closed
                            [
                              "loc" (typing/includemod_errorprinter.ml[921,31634+32]..[921,31634+35]) ghost
                                pattern (typing/includemod_errorprinter.ml[921,31634+32]..[921,31634+35])
                                  Ppat_var "loc" (typing/includemod_errorprinter.ml[921,31634+32]..[921,31634+35])
                              "env" (typing/includemod_errorprinter.ml[921,31634+37]..[921,31634+40]) ghost
                                pattern (typing/includemod_errorprinter.ml[921,31634+37]..[921,31634+40])
                                  Ppat_var "env" (typing/includemod_errorprinter.ml[921,31634+37]..[921,31634+40])
                              "lid_app" (typing/includemod_errorprinter.ml[921,31634+42]..[921,31634+49]) ghost
                                pattern (typing/includemod_errorprinter.ml[921,31634+42]..[921,31634+49])
                                  Ppat_var "lid_app" (typing/includemod_errorprinter.ml[921,31634+42]..[921,31634+49])
                              "mty_f" (typing/includemod_errorprinter.ml[921,31634+51]..[921,31634+56]) ghost
                                pattern (typing/includemod_errorprinter.ml[921,31634+51]..[921,31634+56])
                                  Ppat_var "mty_f" (typing/includemod_errorprinter.ml[921,31634+51]..[921,31634+56])
                              "args" (typing/includemod_errorprinter.ml[921,31634+58]..[921,31634+62]) ghost
                                pattern (typing/includemod_errorprinter.ml[921,31634+58]..[921,31634+62])
                                  Ppat_var "args" (typing/includemod_errorprinter.ml[921,31634+58]..[921,31634+62])
                            ]
                      expression (typing/includemod_errorprinter.ml[922,31701+10]..[924,31837+13])
                        Pexp_construct "Some" (typing/includemod_errorprinter.ml[922,31701+10]..[922,31701+14])
                        Some
                          expression (typing/includemod_errorprinter.ml[922,31701+15]..[924,31837+13])
                            Pexp_apply
                            expression (typing/includemod_errorprinter.ml[922,31701+16]..[922,31701+42])
                              Pexp_ident "Printtyp.wrap_printing_env" (typing/includemod_errorprinter.ml[922,31701+16]..[922,31701+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[922,31701+43]..[922,31701+46])
                                  Pexp_ident "env" (typing/includemod_errorprinter.ml[922,31701+43]..[922,31701+46])
                              <arg>
                              Labelled "error"
                                expression (typing/includemod_errorprinter.ml[922,31701+54]..[922,31701+58])
                                  Pexp_construct "true" (typing/includemod_errorprinter.ml[922,31701+54]..[922,31701+58])
                                  None
                              <arg>
                              Nolabel
                                expression (typing/includemod_errorprinter.ml[922,31701+59]..[923,31771+65])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/includemod_errorprinter.ml[922,31701+64]..[922,31701+66])
                                    Ppat_construct "()" (typing/includemod_errorprinter.ml[922,31701+64]..[922,31701+66])
                                    None
                                  expression (typing/includemod_errorprinter.ml[923,31771+14]..[923,31771+64])
                                    Pexp_apply
                                    expression (typing/includemod_errorprinter.ml[923,31771+14]..[923,31771+32])
                                      Pexp_ident "report_apply_error" (typing/includemod_errorprinter.ml[923,31771+14]..[923,31771+32])
                                    [
                                      <arg>
                                      Labelled "loc"
                                        expression (typing/includemod_errorprinter.ml[923,31771+34]..[923,31771+37])
                                          Pexp_ident "loc" (typing/includemod_errorprinter.ml[923,31771+34]..[923,31771+37])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[923,31771+38]..[923,31771+41])
                                          Pexp_ident "env" (typing/includemod_errorprinter.ml[923,31771+38]..[923,31771+41])
                                      <arg>
                                      Nolabel
                                        expression (typing/includemod_errorprinter.ml[923,31771+42]..[923,31771+64])
                                          Pexp_tuple
                                          [
                                            expression (typing/includemod_errorprinter.ml[923,31771+43]..[923,31771+50])
                                              Pexp_ident "lid_app" (typing/includemod_errorprinter.ml[923,31771+43]..[923,31771+50])
                                            expression (typing/includemod_errorprinter.ml[923,31771+52]..[923,31771+57])
                                              Pexp_ident "mty_f" (typing/includemod_errorprinter.ml[923,31771+52]..[923,31771+57])
                                            expression (typing/includemod_errorprinter.ml[923,31771+59]..[923,31771+63])
                                              Pexp_ident "args" (typing/includemod_errorprinter.ml[923,31771+59]..[923,31771+63])
                                          ]
                                    ]
                            ]
                    <case>
                      pattern (typing/includemod_errorprinter.ml[925,31851+8]..[925,31851+9])
                        Ppat_any
                      expression (typing/includemod_errorprinter.ml[925,31851+13]..[925,31851+17])
                        Pexp_construct "None" (typing/includemod_errorprinter.ml[925,31851+13]..[925,31851+17])
                        None
                  ]
            ]
    ]
]

