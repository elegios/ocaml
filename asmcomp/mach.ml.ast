[
  structure_item (asmcomp/mach.ml[18,1152+0]..[20,1216+39])
    Pstr_type Rec
    [
      type_declaration "integer_comparison" (asmcomp/mach.ml[18,1152+5]..[18,1152+23]) (asmcomp/mach.ml[18,1152+0]..[20,1216+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/mach.ml[19,1178+4]..[19,1178+37])
                "Isigned" (asmcomp/mach.ml[19,1178+4]..[19,1178+11])
                [
                  core_type (asmcomp/mach.ml[19,1178+15]..[19,1178+37])
                    Ptyp_constr "Cmm.integer_comparison" (asmcomp/mach.ml[19,1178+15]..[19,1178+37])
                    []
                ]
                None
              (asmcomp/mach.ml[20,1216+2]..[20,1216+39])
                "Iunsigned" (asmcomp/mach.ml[20,1216+4]..[20,1216+13])
                [
                  core_type (asmcomp/mach.ml[20,1216+17]..[20,1216+39])
                    Ptyp_constr "Cmm.integer_comparison" (asmcomp/mach.ml[20,1216+17]..[20,1216+39])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[22,1257+0]..[26,1402+15])
    Pstr_type Rec
    [
      type_declaration "integer_operation" (asmcomp/mach.ml[22,1257+5]..[22,1257+22]) (asmcomp/mach.ml[22,1257+0]..[26,1402+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/mach.ml[23,1282+4]..[23,1282+8])
                "Iadd" (asmcomp/mach.ml[23,1282+4]..[23,1282+8])
                []
                None
              (asmcomp/mach.ml[23,1282+9]..[23,1282+15])
                "Isub" (asmcomp/mach.ml[23,1282+11]..[23,1282+15])
                []
                None
              (asmcomp/mach.ml[23,1282+16]..[23,1282+22])
                "Imul" (asmcomp/mach.ml[23,1282+18]..[23,1282+22])
                []
                None
              (asmcomp/mach.ml[23,1282+23]..[23,1282+30])
                "Imulh" (asmcomp/mach.ml[23,1282+25]..[23,1282+30])
                []
                None
              (asmcomp/mach.ml[23,1282+31]..[23,1282+37])
                "Idiv" (asmcomp/mach.ml[23,1282+33]..[23,1282+37])
                []
                None
              (asmcomp/mach.ml[23,1282+38]..[23,1282+44])
                "Imod" (asmcomp/mach.ml[23,1282+40]..[23,1282+44])
                []
                None
              (asmcomp/mach.ml[24,1327+2]..[24,1327+8])
                "Iand" (asmcomp/mach.ml[24,1327+4]..[24,1327+8])
                []
                None
              (asmcomp/mach.ml[24,1327+9]..[24,1327+14])
                "Ior" (asmcomp/mach.ml[24,1327+11]..[24,1327+14])
                []
                None
              (asmcomp/mach.ml[24,1327+15]..[24,1327+21])
                "Ixor" (asmcomp/mach.ml[24,1327+17]..[24,1327+21])
                []
                None
              (asmcomp/mach.ml[24,1327+22]..[24,1327+28])
                "Ilsl" (asmcomp/mach.ml[24,1327+24]..[24,1327+28])
                []
                None
              (asmcomp/mach.ml[24,1327+29]..[24,1327+35])
                "Ilsr" (asmcomp/mach.ml[24,1327+31]..[24,1327+35])
                []
                None
              (asmcomp/mach.ml[24,1327+36]..[24,1327+42])
                "Iasr" (asmcomp/mach.ml[24,1327+38]..[24,1327+42])
                []
                None
              (asmcomp/mach.ml[25,1370+2]..[25,1370+31])
                "Icomp" (asmcomp/mach.ml[25,1370+4]..[25,1370+9])
                [
                  core_type (asmcomp/mach.ml[25,1370+13]..[25,1370+31])
                    Ptyp_constr "integer_comparison" (asmcomp/mach.ml[25,1370+13]..[25,1370+31])
                    []
                ]
                None
              (asmcomp/mach.ml[26,1402+2]..[26,1402+15])
                "Icheckbound" (asmcomp/mach.ml[26,1402+4]..[26,1402+15])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[28,1419+0]..[28,1419+44])
    Pstr_type Rec
    [
      type_declaration "float_comparison" (asmcomp/mach.ml[28,1419+5]..[28,1419+21]) (asmcomp/mach.ml[28,1419+0]..[28,1419+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/mach.ml[28,1419+24]..[28,1419+44])
              Ptyp_constr "Cmm.float_comparison" (asmcomp/mach.ml[28,1419+24]..[28,1419+44])
              []
    ]
  structure_item (asmcomp/mach.ml[30,1465+0]..[37,1634+13])
    Pstr_type Rec
    [
      type_declaration "test" (asmcomp/mach.ml[30,1465+5]..[30,1465+9]) (asmcomp/mach.ml[30,1465+0]..[37,1634+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/mach.ml[31,1477+4]..[31,1477+13])
                "Itruetest" (asmcomp/mach.ml[31,1477+4]..[31,1477+13])
                []
                None
              (asmcomp/mach.ml[32,1491+2]..[32,1491+14])
                "Ifalsetest" (asmcomp/mach.ml[32,1491+4]..[32,1491+14])
                []
                None
              (asmcomp/mach.ml[33,1506+2]..[33,1506+34])
                "Iinttest" (asmcomp/mach.ml[33,1506+4]..[33,1506+12])
                [
                  core_type (asmcomp/mach.ml[33,1506+16]..[33,1506+34])
                    Ptyp_constr "integer_comparison" (asmcomp/mach.ml[33,1506+16]..[33,1506+34])
                    []
                ]
                None
              (asmcomp/mach.ml[34,1541+2]..[34,1541+44])
                "Iinttest_imm" (asmcomp/mach.ml[34,1541+4]..[34,1541+16])
                [
                  core_type (asmcomp/mach.ml[34,1541+20]..[34,1541+38])
                    Ptyp_constr "integer_comparison" (asmcomp/mach.ml[34,1541+20]..[34,1541+38])
                    []
                  core_type (asmcomp/mach.ml[34,1541+41]..[34,1541+44])
                    Ptyp_constr "int" (asmcomp/mach.ml[34,1541+41]..[34,1541+44])
                    []
                ]
                None
              (asmcomp/mach.ml[35,1586+2]..[35,1586+34])
                "Ifloattest" (asmcomp/mach.ml[35,1586+4]..[35,1586+14])
                [
                  core_type (asmcomp/mach.ml[35,1586+18]..[35,1586+34])
                    Ptyp_constr "float_comparison" (asmcomp/mach.ml[35,1586+18]..[35,1586+34])
                    []
                ]
                None
              (asmcomp/mach.ml[36,1621+2]..[36,1621+12])
                "Ioddtest" (asmcomp/mach.ml[36,1621+4]..[36,1621+12])
                []
                None
              (asmcomp/mach.ml[37,1634+2]..[37,1634+13])
                "Ieventest" (asmcomp/mach.ml[37,1634+4]..[37,1634+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[39,1649+0]..[63,2460+47])
    Pstr_type Rec
    [
      type_declaration "operation" (asmcomp/mach.ml[39,1649+5]..[39,1649+14]) (asmcomp/mach.ml[39,1649+0]..[63,2460+47])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/mach.ml[40,1666+4]..[40,1666+9])
                "Imove" (asmcomp/mach.ml[40,1666+4]..[40,1666+9])
                []
                None
              (asmcomp/mach.ml[41,1676+2]..[41,1676+10])
                "Ispill" (asmcomp/mach.ml[41,1676+4]..[41,1676+10])
                []
                None
              (asmcomp/mach.ml[42,1687+2]..[42,1687+11])
                "Ireload" (asmcomp/mach.ml[42,1687+4]..[42,1687+11])
                []
                None
              (asmcomp/mach.ml[43,1699+2]..[43,1699+27])
                "Iconst_int" (asmcomp/mach.ml[43,1699+4]..[43,1699+14])
                [
                  core_type (asmcomp/mach.ml[43,1699+18]..[43,1699+27])
                    Ptyp_constr "nativeint" (asmcomp/mach.ml[43,1699+18]..[43,1699+27])
                    []
                ]
                None
              (asmcomp/mach.ml[44,1727+2]..[44,1727+25])
                "Iconst_float" (asmcomp/mach.ml[44,1727+4]..[44,1727+16])
                [
                  core_type (asmcomp/mach.ml[44,1727+20]..[44,1727+25])
                    Ptyp_constr "int64" (asmcomp/mach.ml[44,1727+20]..[44,1727+25])
                    []
                ]
                None
              (asmcomp/mach.ml[45,1753+2]..[45,1753+27])
                "Iconst_symbol" (asmcomp/mach.ml[45,1753+4]..[45,1753+17])
                [
                  core_type (asmcomp/mach.ml[45,1753+21]..[45,1753+27])
                    Ptyp_constr "string" (asmcomp/mach.ml[45,1753+21]..[45,1753+27])
                    []
                ]
                None
              (asmcomp/mach.ml[46,1781+2]..[46,1781+13])
                "Icall_ind" (asmcomp/mach.ml[46,1781+4]..[46,1781+13])
                []
                None
              (asmcomp/mach.ml[47,1795+2]..[47,1795+35])
                "Icall_imm" (asmcomp/mach.ml[47,1795+4]..[47,1795+13])
                [
                  (asmcomp/mach.ml[47,1795+19]..[47,1795+33])
                    Immutable
                    "func" (asmcomp/mach.ml[47,1795+19]..[47,1795+23])                    core_type (asmcomp/mach.ml[47,1795+26]..[47,1795+32])
                      Ptyp_constr "string" (asmcomp/mach.ml[47,1795+26]..[47,1795+32])
                      []
                ]
                None
              (asmcomp/mach.ml[48,1831+2]..[48,1831+17])
                "Itailcall_ind" (asmcomp/mach.ml[48,1831+4]..[48,1831+17])
                []
                None
              (asmcomp/mach.ml[49,1849+2]..[49,1849+39])
                "Itailcall_imm" (asmcomp/mach.ml[49,1849+4]..[49,1849+17])
                [
                  (asmcomp/mach.ml[49,1849+23]..[49,1849+37])
                    Immutable
                    "func" (asmcomp/mach.ml[49,1849+23]..[49,1849+27])                    core_type (asmcomp/mach.ml[49,1849+30]..[49,1849+36])
                      Ptyp_constr "string" (asmcomp/mach.ml[49,1849+30]..[49,1849+36])
                      []
                ]
                None
              (asmcomp/mach.ml[50,1889+2]..[52,1991+33])
                "Iextcall" (asmcomp/mach.ml[50,1889+4]..[50,1889+12])
                [
                  (asmcomp/mach.ml[50,1889+18]..[50,1889+32])
                    Immutable
                    "func" (asmcomp/mach.ml[50,1889+18]..[50,1889+22])                    core_type (asmcomp/mach.ml[50,1889+25]..[50,1889+31])
                      Ptyp_constr "string" (asmcomp/mach.ml[50,1889+25]..[50,1889+31])
                      []
                  (asmcomp/mach.ml[51,1922+18]..[51,1922+40])
                    Immutable
                    "ty_res" (asmcomp/mach.ml[51,1922+18]..[51,1922+24])                    core_type (asmcomp/mach.ml[51,1922+27]..[51,1922+39])
                      Ptyp_constr "Cmm.machtype" (asmcomp/mach.ml[51,1922+27]..[51,1922+39])
                      []
                  (asmcomp/mach.ml[51,1922+41]..[51,1922+68])
                    Immutable
                    "ty_args" (asmcomp/mach.ml[51,1922+41]..[51,1922+48])                    core_type (asmcomp/mach.ml[51,1922+51]..[51,1922+67])
                      Ptyp_constr "list" (asmcomp/mach.ml[51,1922+63]..[51,1922+67])
                      [
                        core_type (asmcomp/mach.ml[51,1922+51]..[51,1922+62])
                          Ptyp_constr "Cmm.exttype" (asmcomp/mach.ml[51,1922+51]..[51,1922+62])
                          []
                      ]
                  (asmcomp/mach.ml[52,1991+18]..[52,1991+31])
                    Immutable
                    "alloc" (asmcomp/mach.ml[52,1991+18]..[52,1991+23])                    core_type (asmcomp/mach.ml[52,1991+26]..[52,1991+30])
                      Ptyp_constr "bool" (asmcomp/mach.ml[52,1991+26]..[52,1991+30])
                      []
                ]
                None
              (asmcomp/mach.ml[53,2025+2]..[53,2025+23])
                "Istackoffset" (asmcomp/mach.ml[53,2025+4]..[53,2025+16])
                [
                  core_type (asmcomp/mach.ml[53,2025+20]..[53,2025+23])
                    Ptyp_constr "int" (asmcomp/mach.ml[53,2025+20]..[53,2025+23])
                    []
                ]
                None
              (asmcomp/mach.ml[54,2049+2]..[54,2049+76])
                "Iload" (asmcomp/mach.ml[54,2049+4]..[54,2049+9])
                [
                  core_type (asmcomp/mach.ml[54,2049+13]..[54,2049+29])
                    Ptyp_constr "Cmm.memory_chunk" (asmcomp/mach.ml[54,2049+13]..[54,2049+29])
                    []
                  core_type (asmcomp/mach.ml[54,2049+32]..[54,2049+52])
                    Ptyp_constr "Arch.addressing_mode" (asmcomp/mach.ml[54,2049+32]..[54,2049+52])
                    []
                  core_type (asmcomp/mach.ml[54,2049+55]..[54,2049+76])
                    Ptyp_constr "Asttypes.mutable_flag" (asmcomp/mach.ml[54,2049+55]..[54,2049+76])
                    []
                ]
                None
              (asmcomp/mach.ml[55,2126+2]..[55,2126+60])
                "Istore" (asmcomp/mach.ml[55,2126+4]..[55,2126+10])
                [
                  core_type (asmcomp/mach.ml[55,2126+14]..[55,2126+30])
                    Ptyp_constr "Cmm.memory_chunk" (asmcomp/mach.ml[55,2126+14]..[55,2126+30])
                    []
                  core_type (asmcomp/mach.ml[55,2126+33]..[55,2126+53])
                    Ptyp_constr "Arch.addressing_mode" (asmcomp/mach.ml[55,2126+33]..[55,2126+53])
                    []
                  core_type (asmcomp/mach.ml[55,2126+56]..[55,2126+60])
                    Ptyp_constr "bool" (asmcomp/mach.ml[55,2126+56]..[55,2126+60])
                    []
                ]
                None
              (asmcomp/mach.ml[56,2187+2]..[56,2187+65])
                "Ialloc" (asmcomp/mach.ml[56,2187+4]..[56,2187+10])
                [
                  (asmcomp/mach.ml[56,2187+16]..[56,2187+28])
                    Immutable
                    "bytes" (asmcomp/mach.ml[56,2187+16]..[56,2187+21])                    core_type (asmcomp/mach.ml[56,2187+24]..[56,2187+27])
                      Ptyp_constr "int" (asmcomp/mach.ml[56,2187+24]..[56,2187+27])
                      []
                  (asmcomp/mach.ml[56,2187+29]..[56,2187+63])
                    Immutable
                    "dbginfo" (asmcomp/mach.ml[56,2187+29]..[56,2187+36])                    core_type (asmcomp/mach.ml[56,2187+39]..[56,2187+62])
                      Ptyp_constr "Debuginfo.alloc_dbginfo" (asmcomp/mach.ml[56,2187+39]..[56,2187+62])
                      []
                ]
                None
              (asmcomp/mach.ml[57,2253+2]..[57,2253+31])
                "Iintop" (asmcomp/mach.ml[57,2253+4]..[57,2253+10])
                [
                  core_type (asmcomp/mach.ml[57,2253+14]..[57,2253+31])
                    Ptyp_constr "integer_operation" (asmcomp/mach.ml[57,2253+14]..[57,2253+31])
                    []
                ]
                None
              (asmcomp/mach.ml[58,2285+2]..[58,2285+41])
                "Iintop_imm" (asmcomp/mach.ml[58,2285+4]..[58,2285+14])
                [
                  core_type (asmcomp/mach.ml[58,2285+18]..[58,2285+35])
                    Ptyp_constr "integer_operation" (asmcomp/mach.ml[58,2285+18]..[58,2285+35])
                    []
                  core_type (asmcomp/mach.ml[58,2285+38]..[58,2285+41])
                    Ptyp_constr "int" (asmcomp/mach.ml[58,2285+38]..[58,2285+41])
                    []
                ]
                None
              (asmcomp/mach.ml[59,2327+2]..[59,2327+9])
                "Inegf" (asmcomp/mach.ml[59,2327+4]..[59,2327+9])
                []
                None
              (asmcomp/mach.ml[59,2327+10]..[59,2327+17])
                "Iabsf" (asmcomp/mach.ml[59,2327+12]..[59,2327+17])
                []
                None
              (asmcomp/mach.ml[59,2327+18]..[59,2327+25])
                "Iaddf" (asmcomp/mach.ml[59,2327+20]..[59,2327+25])
                []
                None
              (asmcomp/mach.ml[59,2327+26]..[59,2327+33])
                "Isubf" (asmcomp/mach.ml[59,2327+28]..[59,2327+33])
                []
                None
              (asmcomp/mach.ml[59,2327+34]..[59,2327+41])
                "Imulf" (asmcomp/mach.ml[59,2327+36]..[59,2327+41])
                []
                None
              (asmcomp/mach.ml[59,2327+42]..[59,2327+49])
                "Idivf" (asmcomp/mach.ml[59,2327+44]..[59,2327+49])
                []
                None
              (asmcomp/mach.ml[60,2377+2]..[60,2377+15])
                "Ifloatofint" (asmcomp/mach.ml[60,2377+4]..[60,2377+15])
                []
                None
              (asmcomp/mach.ml[60,2377+16]..[60,2377+29])
                "Iintoffloat" (asmcomp/mach.ml[60,2377+18]..[60,2377+29])
                []
                None
              (asmcomp/mach.ml[61,2407+2]..[61,2407+11])
                "Iopaque" (asmcomp/mach.ml[61,2407+4]..[61,2407+11])
                []
                None
              (asmcomp/mach.ml[62,2419+2]..[62,2419+40])
                "Ispecific" (asmcomp/mach.ml[62,2419+4]..[62,2419+13])
                [
                  core_type (asmcomp/mach.ml[62,2419+17]..[62,2419+40])
                    Ptyp_constr "Arch.specific_operation" (asmcomp/mach.ml[62,2419+17]..[62,2419+40])
                    []
                ]
                None
              (asmcomp/mach.ml[63,2460+2]..[63,2460+47])
                "Ipoll" (asmcomp/mach.ml[63,2460+4]..[63,2460+9])
                [
                  (asmcomp/mach.ml[63,2460+15]..[63,2460+45])
                    Immutable
                    "return_label" (asmcomp/mach.ml[63,2460+15]..[63,2460+27])                    core_type (asmcomp/mach.ml[63,2460+29]..[63,2460+45])
                      Ptyp_constr "option" (asmcomp/mach.ml[63,2460+39]..[63,2460+45])
                      [
                        core_type (asmcomp/mach.ml[63,2460+29]..[63,2460+38])
                          Ptyp_constr "Cmm.label" (asmcomp/mach.ml[63,2460+29]..[63,2460+38])
                          []
                      ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[65,2509+0]..[83,2967+31])
    Pstr_type Rec
    [
      type_declaration "instruction" (asmcomp/mach.ml[65,2509+5]..[65,2509+16]) (asmcomp/mach.ml[65,2509+0]..[72,2673+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (asmcomp/mach.ml[66,2528+4]..[66,2528+27])
                Immutable
                "desc" (asmcomp/mach.ml[66,2528+4]..[66,2528+8])                core_type (asmcomp/mach.ml[66,2528+10]..[66,2528+26])
                  Ptyp_constr "instruction_desc" (asmcomp/mach.ml[66,2528+10]..[66,2528+26])
                  []
              (asmcomp/mach.ml[67,2556+4]..[67,2556+22])
                Immutable
                "next" (asmcomp/mach.ml[67,2556+4]..[67,2556+8])                core_type (asmcomp/mach.ml[67,2556+10]..[67,2556+21])
                  Ptyp_constr "instruction" (asmcomp/mach.ml[67,2556+10]..[67,2556+21])
                  []
              (asmcomp/mach.ml[68,2579+4]..[68,2579+21])
                Immutable
                "arg" (asmcomp/mach.ml[68,2579+4]..[68,2579+7])                core_type (asmcomp/mach.ml[68,2579+9]..[68,2579+20])
                  Ptyp_constr "array" (asmcomp/mach.ml[68,2579+15]..[68,2579+20])
                  [
                    core_type (asmcomp/mach.ml[68,2579+9]..[68,2579+14])
                      Ptyp_constr "Reg.t" (asmcomp/mach.ml[68,2579+9]..[68,2579+14])
                      []
                  ]
              (asmcomp/mach.ml[69,2601+4]..[69,2601+21])
                Immutable
                "res" (asmcomp/mach.ml[69,2601+4]..[69,2601+7])                core_type (asmcomp/mach.ml[69,2601+9]..[69,2601+20])
                  Ptyp_constr "array" (asmcomp/mach.ml[69,2601+15]..[69,2601+20])
                  [
                    core_type (asmcomp/mach.ml[69,2601+9]..[69,2601+14])
                      Ptyp_constr "Reg.t" (asmcomp/mach.ml[69,2601+9]..[69,2601+14])
                      []
                  ]
              (asmcomp/mach.ml[70,2623+4]..[70,2623+21])
                Immutable
                "dbg" (asmcomp/mach.ml[70,2623+4]..[70,2623+7])                core_type (asmcomp/mach.ml[70,2623+9]..[70,2623+20])
                  Ptyp_constr "Debuginfo.t" (asmcomp/mach.ml[70,2623+9]..[70,2623+20])
                  []
              (asmcomp/mach.ml[71,2645+4]..[71,2645+27])
                Mutable
                "live" (asmcomp/mach.ml[71,2645+12]..[71,2645+16])                core_type (asmcomp/mach.ml[71,2645+18]..[71,2645+27])
                  Ptyp_constr "Reg.Set.t" (asmcomp/mach.ml[71,2645+18]..[71,2645+27])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "instruction_desc" (asmcomp/mach.ml[74,2678+4]..[74,2678+20]) (asmcomp/mach.ml[74,2678+0]..[83,2967+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/mach.ml[75,2701+4]..[75,2701+8])
                "Iend" (asmcomp/mach.ml[75,2701+4]..[75,2701+8])
                []
                None
              (asmcomp/mach.ml[76,2710+2]..[76,2710+20])
                "Iop" (asmcomp/mach.ml[76,2710+4]..[76,2710+7])
                [
                  core_type (asmcomp/mach.ml[76,2710+11]..[76,2710+20])
                    Ptyp_constr "operation" (asmcomp/mach.ml[76,2710+11]..[76,2710+20])
                    []
                ]
                None
              (asmcomp/mach.ml[77,2731+2]..[77,2731+11])
                "Ireturn" (asmcomp/mach.ml[77,2731+4]..[77,2731+11])
                []
                None
              (asmcomp/mach.ml[78,2743+2]..[78,2743+51])
                "Iifthenelse" (asmcomp/mach.ml[78,2743+4]..[78,2743+15])
                [
                  core_type (asmcomp/mach.ml[78,2743+19]..[78,2743+23])
                    Ptyp_constr "test" (asmcomp/mach.ml[78,2743+19]..[78,2743+23])
                    []
                  core_type (asmcomp/mach.ml[78,2743+26]..[78,2743+37])
                    Ptyp_constr "instruction" (asmcomp/mach.ml[78,2743+26]..[78,2743+37])
                    []
                  core_type (asmcomp/mach.ml[78,2743+40]..[78,2743+51])
                    Ptyp_constr "instruction" (asmcomp/mach.ml[78,2743+40]..[78,2743+51])
                    []
                ]
                None
              (asmcomp/mach.ml[79,2795+2]..[79,2795+44])
                "Iswitch" (asmcomp/mach.ml[79,2795+4]..[79,2795+11])
                [
                  core_type (asmcomp/mach.ml[79,2795+15]..[79,2795+24])
                    Ptyp_constr "array" (asmcomp/mach.ml[79,2795+19]..[79,2795+24])
                    [
                      core_type (asmcomp/mach.ml[79,2795+15]..[79,2795+18])
                        Ptyp_constr "int" (asmcomp/mach.ml[79,2795+15]..[79,2795+18])
                        []
                    ]
                  core_type (asmcomp/mach.ml[79,2795+27]..[79,2795+44])
                    Ptyp_constr "array" (asmcomp/mach.ml[79,2795+39]..[79,2795+44])
                    [
                      core_type (asmcomp/mach.ml[79,2795+27]..[79,2795+38])
                        Ptyp_constr "instruction" (asmcomp/mach.ml[79,2795+27]..[79,2795+38])
                        []
                    ]
                ]
                None
              (asmcomp/mach.ml[80,2840+2]..[80,2840+67])
                "Icatch" (asmcomp/mach.ml[80,2840+4]..[80,2840+10])
                [
                  core_type (asmcomp/mach.ml[80,2840+14]..[80,2840+26])
                    Ptyp_constr "Cmm.rec_flag" (asmcomp/mach.ml[80,2840+14]..[80,2840+26])
                    []
                  core_type (asmcomp/mach.ml[80,2840+29]..[80,2840+53])
                    Ptyp_constr "list" (asmcomp/mach.ml[80,2840+49]..[80,2840+53])
                    [
                      core_type (asmcomp/mach.ml[80,2840+30]..[80,2840+47])
                        Ptyp_tuple
                        [
                          core_type (asmcomp/mach.ml[80,2840+30]..[80,2840+33])
                            Ptyp_constr "int" (asmcomp/mach.ml[80,2840+30]..[80,2840+33])
                            []
                          core_type (asmcomp/mach.ml[80,2840+36]..[80,2840+47])
                            Ptyp_constr "instruction" (asmcomp/mach.ml[80,2840+36]..[80,2840+47])
                            []
                        ]
                    ]
                  core_type (asmcomp/mach.ml[80,2840+56]..[80,2840+67])
                    Ptyp_constr "instruction" (asmcomp/mach.ml[80,2840+56]..[80,2840+67])
                    []
                ]
                None
              (asmcomp/mach.ml[81,2908+2]..[81,2908+16])
                "Iexit" (asmcomp/mach.ml[81,2908+4]..[81,2908+9])
                [
                  core_type (asmcomp/mach.ml[81,2908+13]..[81,2908+16])
                    Ptyp_constr "int" (asmcomp/mach.ml[81,2908+13]..[81,2908+16])
                    []
                ]
                None
              (asmcomp/mach.ml[82,2925+2]..[82,2925+41])
                "Itrywith" (asmcomp/mach.ml[82,2925+4]..[82,2925+12])
                [
                  core_type (asmcomp/mach.ml[82,2925+16]..[82,2925+27])
                    Ptyp_constr "instruction" (asmcomp/mach.ml[82,2925+16]..[82,2925+27])
                    []
                  core_type (asmcomp/mach.ml[82,2925+30]..[82,2925+41])
                    Ptyp_constr "instruction" (asmcomp/mach.ml[82,2925+30]..[82,2925+41])
                    []
                ]
                None
              (asmcomp/mach.ml[83,2967+2]..[83,2967+31])
                "Iraise" (asmcomp/mach.ml[83,2967+4]..[83,2967+10])
                [
                  core_type (asmcomp/mach.ml[83,2967+14]..[83,2967+31])
                    Ptyp_constr "Lambda.raise_kind" (asmcomp/mach.ml[83,2967+14]..[83,2967+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[85,3000+0]..[93,3235+3])
    Pstr_type Rec
    [
      type_declaration "fundecl" (asmcomp/mach.ml[85,3000+5]..[85,3000+12]) (asmcomp/mach.ml[85,3000+0]..[93,3235+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (asmcomp/mach.ml[86,3015+4]..[86,3015+21])
                Immutable
                "fun_name" (asmcomp/mach.ml[86,3015+4]..[86,3015+12])                core_type (asmcomp/mach.ml[86,3015+14]..[86,3015+20])
                  Ptyp_constr "string" (asmcomp/mach.ml[86,3015+14]..[86,3015+20])
                  []
              (asmcomp/mach.ml[87,3037+4]..[87,3037+26])
                Immutable
                "fun_args" (asmcomp/mach.ml[87,3037+4]..[87,3037+12])                core_type (asmcomp/mach.ml[87,3037+14]..[87,3037+25])
                  Ptyp_constr "array" (asmcomp/mach.ml[87,3037+20]..[87,3037+25])
                  [
                    core_type (asmcomp/mach.ml[87,3037+14]..[87,3037+19])
                      Ptyp_constr "Reg.t" (asmcomp/mach.ml[87,3037+14]..[87,3037+19])
                      []
                  ]
              (asmcomp/mach.ml[88,3064+4]..[88,3064+26])
                Immutable
                "fun_body" (asmcomp/mach.ml[88,3064+4]..[88,3064+12])                core_type (asmcomp/mach.ml[88,3064+14]..[88,3064+25])
                  Ptyp_constr "instruction" (asmcomp/mach.ml[88,3064+14]..[88,3064+25])
                  []
              (asmcomp/mach.ml[89,3091+4]..[89,3091+50])
                Immutable
                "fun_codegen_options" (asmcomp/mach.ml[89,3091+4]..[89,3091+23])                core_type (asmcomp/mach.ml[89,3091+26]..[89,3091+49])
                  Ptyp_constr "list" (asmcomp/mach.ml[89,3091+45]..[89,3091+49])
                  [
                    core_type (asmcomp/mach.ml[89,3091+26]..[89,3091+44])
                      Ptyp_constr "Cmm.codegen_option" (asmcomp/mach.ml[89,3091+26]..[89,3091+44])
                      []
                  ]
              (asmcomp/mach.ml[90,3142+4]..[90,3142+26])
                Immutable
                "fun_dbg" (asmcomp/mach.ml[90,3142+4]..[90,3142+11])                core_type (asmcomp/mach.ml[90,3142+14]..[90,3142+25])
                  Ptyp_constr "Debuginfo.t" (asmcomp/mach.ml[90,3142+14]..[90,3142+25])
                  []
              (asmcomp/mach.ml[91,3169+4]..[91,3169+35])
                Immutable
                "fun_num_stack_slots" (asmcomp/mach.ml[91,3169+4]..[91,3169+23])                core_type (asmcomp/mach.ml[91,3169+25]..[91,3169+34])
                  Ptyp_constr "array" (asmcomp/mach.ml[91,3169+29]..[91,3169+34])
                  [
                    core_type (asmcomp/mach.ml[91,3169+25]..[91,3169+28])
                      Ptyp_constr "int" (asmcomp/mach.ml[91,3169+25]..[91,3169+28])
                      []
                  ]
              (asmcomp/mach.ml[92,3205+4]..[92,3205+29])
                Immutable
                "fun_contains_calls" (asmcomp/mach.ml[92,3205+4]..[92,3205+22])                core_type (asmcomp/mach.ml[92,3205+24]..[92,3205+28])
                  Ptyp_constr "bool" (asmcomp/mach.ml[92,3205+24]..[92,3205+28])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/mach.ml[95,3240+0]..[102,3386+3])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/mach.ml[95,3240+8]..[95,3240+19])
          Ppat_var "dummy_instr" (asmcomp/mach.ml[95,3240+8]..[95,3240+19])
        expression (asmcomp/mach.ml[96,3262+2]..[102,3386+3])
          Pexp_record
          [
            "desc" (asmcomp/mach.ml[96,3262+4]..[96,3262+8])
              expression (asmcomp/mach.ml[96,3262+11]..[96,3262+15])
                Pexp_construct "Iend" (asmcomp/mach.ml[96,3262+11]..[96,3262+15])
                None
            "next" (asmcomp/mach.ml[97,3279+4]..[97,3279+8])
              expression (asmcomp/mach.ml[97,3279+11]..[97,3279+22])
                Pexp_ident "dummy_instr" (asmcomp/mach.ml[97,3279+11]..[97,3279+22])
            "arg" (asmcomp/mach.ml[98,3303+4]..[98,3303+7])
              expression (asmcomp/mach.ml[98,3303+10]..[98,3303+14])
                Pexp_array
                []
            "res" (asmcomp/mach.ml[99,3319+4]..[99,3319+7])
              expression (asmcomp/mach.ml[99,3319+10]..[99,3319+14])
                Pexp_array
                []
            "dbg" (asmcomp/mach.ml[100,3335+4]..[100,3335+7])
              expression (asmcomp/mach.ml[100,3335+10]..[100,3335+24])
                Pexp_ident "Debuginfo.none" (asmcomp/mach.ml[100,3335+10]..[100,3335+24])
            "live" (asmcomp/mach.ml[101,3361+4]..[101,3361+8])
              expression (asmcomp/mach.ml[101,3361+11]..[101,3361+24])
                Pexp_ident "Reg.Set.empty" (asmcomp/mach.ml[101,3361+11]..[101,3361+24])
          ]
          None
    ]
  structure_item (asmcomp/mach.ml[104,3391+0]..[111,3534+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/mach.ml[104,3391+4]..[104,3391+13])
          Ppat_var "end_instr" (asmcomp/mach.ml[104,3391+4]..[104,3391+13])
        expression (asmcomp/mach.ml[104,3391+14]..[111,3534+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/mach.ml[104,3391+14]..[104,3391+16])
            Ppat_construct "()" (asmcomp/mach.ml[104,3391+14]..[104,3391+16])
            None
          expression (asmcomp/mach.ml[105,3410+2]..[111,3534+3])
            Pexp_record
            [
              "desc" (asmcomp/mach.ml[105,3410+4]..[105,3410+8])
                expression (asmcomp/mach.ml[105,3410+11]..[105,3410+15])
                  Pexp_construct "Iend" (asmcomp/mach.ml[105,3410+11]..[105,3410+15])
                  None
              "next" (asmcomp/mach.ml[106,3427+4]..[106,3427+8])
                expression (asmcomp/mach.ml[106,3427+11]..[106,3427+22])
                  Pexp_ident "dummy_instr" (asmcomp/mach.ml[106,3427+11]..[106,3427+22])
              "arg" (asmcomp/mach.ml[107,3451+4]..[107,3451+7])
                expression (asmcomp/mach.ml[107,3451+10]..[107,3451+14])
                  Pexp_array
                  []
              "res" (asmcomp/mach.ml[108,3467+4]..[108,3467+7])
                expression (asmcomp/mach.ml[108,3467+10]..[108,3467+14])
                  Pexp_array
                  []
              "dbg" (asmcomp/mach.ml[109,3483+4]..[109,3483+7])
                expression (asmcomp/mach.ml[109,3483+10]..[109,3483+24])
                  Pexp_ident "Debuginfo.none" (asmcomp/mach.ml[109,3483+10]..[109,3483+24])
              "live" (asmcomp/mach.ml[110,3509+4]..[110,3509+8])
                expression (asmcomp/mach.ml[110,3509+11]..[110,3509+24])
                  Pexp_ident "Reg.Set.empty" (asmcomp/mach.ml[110,3509+11]..[110,3509+24])
            ]
            None
    ]
  structure_item (asmcomp/mach.ml[113,3539+0]..[116,3653+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/mach.ml[113,3539+4]..[113,3539+14])
          Ppat_var "instr_cons" (asmcomp/mach.ml[113,3539+4]..[113,3539+14])
        expression (asmcomp/mach.ml[113,3539+15]..[116,3653+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/mach.ml[113,3539+15]..[113,3539+16])
            Ppat_var "d" (asmcomp/mach.ml[113,3539+15]..[113,3539+16])
          expression (asmcomp/mach.ml[113,3539+17]..[116,3653+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/mach.ml[113,3539+17]..[113,3539+18])
              Ppat_var "a" (asmcomp/mach.ml[113,3539+17]..[113,3539+18])
            expression (asmcomp/mach.ml[113,3539+19]..[116,3653+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/mach.ml[113,3539+19]..[113,3539+20])
                Ppat_var "r" (asmcomp/mach.ml[113,3539+19]..[113,3539+20])
              expression (asmcomp/mach.ml[113,3539+21]..[116,3653+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/mach.ml[113,3539+21]..[113,3539+22])
                  Ppat_var "n" (asmcomp/mach.ml[113,3539+21]..[113,3539+22])
                expression (asmcomp/mach.ml[114,3564+2]..[116,3653+3])
                  Pexp_record
                  [
                    "desc" (asmcomp/mach.ml[114,3564+4]..[114,3564+8])
                      expression (asmcomp/mach.ml[114,3564+11]..[114,3564+12])
                        Pexp_ident "d" (asmcomp/mach.ml[114,3564+11]..[114,3564+12])
                    "next" (asmcomp/mach.ml[114,3564+14]..[114,3564+18])
                      expression (asmcomp/mach.ml[114,3564+21]..[114,3564+22])
                        Pexp_ident "n" (asmcomp/mach.ml[114,3564+21]..[114,3564+22])
                    "arg" (asmcomp/mach.ml[114,3564+24]..[114,3564+27])
                      expression (asmcomp/mach.ml[114,3564+30]..[114,3564+31])
                        Pexp_ident "a" (asmcomp/mach.ml[114,3564+30]..[114,3564+31])
                    "res" (asmcomp/mach.ml[114,3564+33]..[114,3564+36])
                      expression (asmcomp/mach.ml[114,3564+39]..[114,3564+40])
                        Pexp_ident "r" (asmcomp/mach.ml[114,3564+39]..[114,3564+40])
                    "dbg" (asmcomp/mach.ml[115,3606+4]..[115,3606+7])
                      expression (asmcomp/mach.ml[115,3606+10]..[115,3606+24])
                        Pexp_ident "Debuginfo.none" (asmcomp/mach.ml[115,3606+10]..[115,3606+24])
                    "live" (asmcomp/mach.ml[115,3606+26]..[115,3606+30])
                      expression (asmcomp/mach.ml[115,3606+33]..[115,3606+46])
                        Pexp_ident "Reg.Set.empty" (asmcomp/mach.ml[115,3606+33]..[115,3606+46])
                  ]
                  None
    ]
  structure_item (asmcomp/mach.ml[118,3658+0]..[119,3693+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/mach.ml[118,3658+4]..[118,3658+20])
          Ppat_var "instr_cons_debug" (asmcomp/mach.ml[118,3658+4]..[118,3658+20])
        expression (asmcomp/mach.ml[118,3658+21]..[119,3693+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/mach.ml[118,3658+21]..[118,3658+22])
            Ppat_var "d" (asmcomp/mach.ml[118,3658+21]..[118,3658+22])
          expression (asmcomp/mach.ml[118,3658+23]..[119,3693+75]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/mach.ml[118,3658+23]..[118,3658+24])
              Ppat_var "a" (asmcomp/mach.ml[118,3658+23]..[118,3658+24])
            expression (asmcomp/mach.ml[118,3658+25]..[119,3693+75]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/mach.ml[118,3658+25]..[118,3658+26])
                Ppat_var "r" (asmcomp/mach.ml[118,3658+25]..[118,3658+26])
              expression (asmcomp/mach.ml[118,3658+27]..[119,3693+75]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/mach.ml[118,3658+27]..[118,3658+30])
                  Ppat_var "dbg" (asmcomp/mach.ml[118,3658+27]..[118,3658+30])
                expression (asmcomp/mach.ml[118,3658+31]..[119,3693+75]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/mach.ml[118,3658+31]..[118,3658+32])
                    Ppat_var "n" (asmcomp/mach.ml[118,3658+31]..[118,3658+32])
                  expression (asmcomp/mach.ml[119,3693+2]..[119,3693+75])
                    Pexp_record
                    [
                      "desc" (asmcomp/mach.ml[119,3693+4]..[119,3693+8])
                        expression (asmcomp/mach.ml[119,3693+11]..[119,3693+12])
                          Pexp_ident "d" (asmcomp/mach.ml[119,3693+11]..[119,3693+12])
                      "next" (asmcomp/mach.ml[119,3693+14]..[119,3693+18])
                        expression (asmcomp/mach.ml[119,3693+21]..[119,3693+22])
                          Pexp_ident "n" (asmcomp/mach.ml[119,3693+21]..[119,3693+22])
                      "arg" (asmcomp/mach.ml[119,3693+24]..[119,3693+27])
                        expression (asmcomp/mach.ml[119,3693+30]..[119,3693+31])
                          Pexp_ident "a" (asmcomp/mach.ml[119,3693+30]..[119,3693+31])
                      "res" (asmcomp/mach.ml[119,3693+33]..[119,3693+36])
                        expression (asmcomp/mach.ml[119,3693+39]..[119,3693+40])
                          Pexp_ident "r" (asmcomp/mach.ml[119,3693+39]..[119,3693+40])
                      "dbg" (asmcomp/mach.ml[119,3693+42]..[119,3693+45])
                        expression (asmcomp/mach.ml[119,3693+48]..[119,3693+51])
                          Pexp_ident "dbg" (asmcomp/mach.ml[119,3693+48]..[119,3693+51])
                      "live" (asmcomp/mach.ml[119,3693+53]..[119,3693+57])
                        expression (asmcomp/mach.ml[119,3693+60]..[119,3693+73])
                          Pexp_ident "Reg.Set.empty" (asmcomp/mach.ml[119,3693+60]..[119,3693+73])
                    ]
                    None
    ]
  structure_item (asmcomp/mach.ml[121,3770+0]..[145,4567+29])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/mach.ml[121,3770+8]..[121,3770+18])
          Ppat_var "instr_iter" (asmcomp/mach.ml[121,3770+8]..[121,3770+18])
        expression (asmcomp/mach.ml[121,3770+19]..[145,4567+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/mach.ml[121,3770+19]..[121,3770+20])
            Ppat_var "f" (asmcomp/mach.ml[121,3770+19]..[121,3770+20])
          expression (asmcomp/mach.ml[121,3770+21]..[145,4567+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/mach.ml[121,3770+21]..[121,3770+22])
              Ppat_var "i" (asmcomp/mach.ml[121,3770+21]..[121,3770+22])
            expression (asmcomp/mach.ml[122,3795+2]..[145,4567+29])
              Pexp_match
              expression (asmcomp/mach.ml[122,3795+8]..[122,3795+14])
                Pexp_field
                expression (asmcomp/mach.ml[122,3795+8]..[122,3795+9])
                  Pexp_ident "i" (asmcomp/mach.ml[122,3795+8]..[122,3795+9])
                "desc" (asmcomp/mach.ml[122,3795+10]..[122,3795+14])
              [
                <case>
                  pattern (asmcomp/mach.ml[123,3815+4]..[123,3815+8])
                    Ppat_construct "Iend" (asmcomp/mach.ml[123,3815+4]..[123,3815+8])
                    None
                  expression (asmcomp/mach.ml[123,3815+12]..[123,3815+14])
                    Pexp_construct "()" (asmcomp/mach.ml[123,3815+12]..[123,3815+14])
                    None
                <case>
                  pattern (asmcomp/mach.ml[124,3830+4]..[124,3830+5])
                    Ppat_any
                  expression (asmcomp/mach.ml[125,3839+6]..[145,4567+29])
                    Pexp_sequence
                    expression (asmcomp/mach.ml[125,3839+6]..[125,3839+9])
                      Pexp_apply
                      expression (asmcomp/mach.ml[125,3839+6]..[125,3839+7])
                        Pexp_ident "f" (asmcomp/mach.ml[125,3839+6]..[125,3839+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/mach.ml[125,3839+8]..[125,3839+9])
                            Pexp_ident "i" (asmcomp/mach.ml[125,3839+8]..[125,3839+9])
                      ]
                    expression (asmcomp/mach.ml[126,3850+6]..[145,4567+29])
                      Pexp_match
                      expression (asmcomp/mach.ml[126,3850+12]..[126,3850+18])
                        Pexp_field
                        expression (asmcomp/mach.ml[126,3850+12]..[126,3850+13])
                          Pexp_ident "i" (asmcomp/mach.ml[126,3850+12]..[126,3850+13])
                        "desc" (asmcomp/mach.ml[126,3850+14]..[126,3850+18])
                      [
                        <case>
                          pattern (asmcomp/mach.ml[127,3874+8]..[127,3874+12])
                            Ppat_construct "Iend" (asmcomp/mach.ml[127,3874+8]..[127,3874+12])
                            None
                          expression (asmcomp/mach.ml[127,3874+16]..[127,3874+18])
                            Pexp_construct "()" (asmcomp/mach.ml[127,3874+16]..[127,3874+18])
                            None
                        <case>
                          pattern (asmcomp/mach.ml[128,3893+8]..[128,3893+58])
                            Ppat_or
                            pattern (asmcomp/mach.ml[128,3893+8]..[128,3893+35])
                              Ppat_or
                              pattern (asmcomp/mach.ml[128,3893+8]..[128,3893+15])
                                Ppat_construct "Ireturn" (asmcomp/mach.ml[128,3893+8]..[128,3893+15])
                                None
                              pattern (asmcomp/mach.ml[128,3893+18]..[128,3893+35])
                                Ppat_construct "Iop" (asmcomp/mach.ml[128,3893+18]..[128,3893+21])
                                Some
                                  []
                                  pattern (asmcomp/mach.ml[128,3893+22]..[128,3893+35])
                                    Ppat_construct "Itailcall_ind" (asmcomp/mach.ml[128,3893+22]..[128,3893+35])
                                    None
                            pattern (asmcomp/mach.ml[128,3893+38]..[128,3893+58])
                              Ppat_construct "Iop" (asmcomp/mach.ml[128,3893+38]..[128,3893+41])
                              Some
                                []
                                pattern (asmcomp/mach.ml[128,3893+41]..[128,3893+58])
                                  Ppat_construct "Itailcall_imm" (asmcomp/mach.ml[128,3893+42]..[128,3893+55])
                                  Some
                                    []
                                    pattern (asmcomp/mach.ml[128,3893+56]..[128,3893+57])
                                      Ppat_any
                          expression (asmcomp/mach.ml[128,3893+62]..[128,3893+64])
                            Pexp_construct "()" (asmcomp/mach.ml[128,3893+62]..[128,3893+64])
                            None
                        <case>
                          pattern (asmcomp/mach.ml[129,3958+8]..[129,3958+38])
                            Ppat_construct "Iifthenelse" (asmcomp/mach.ml[129,3958+8]..[129,3958+19])
                            Some
                              []
                              pattern (asmcomp/mach.ml[129,3958+19]..[129,3958+38])
                                Ppat_tuple
                                [
                                  pattern (asmcomp/mach.ml[129,3958+20]..[129,3958+24])
                                    Ppat_var "_tst" (asmcomp/mach.ml[129,3958+20]..[129,3958+24])
                                  pattern (asmcomp/mach.ml[129,3958+26]..[129,3958+30])
                                    Ppat_var "ifso" (asmcomp/mach.ml[129,3958+26]..[129,3958+30])
                                  pattern (asmcomp/mach.ml[129,3958+32]..[129,3958+37])
                                    Ppat_var "ifnot" (asmcomp/mach.ml[129,3958+32]..[129,3958+37])
                                ]
                          expression (asmcomp/mach.ml[130,4000+10]..[130,4000+68])
                            Pexp_sequence
                            expression (asmcomp/mach.ml[130,4000+10]..[130,4000+27])
                              Pexp_apply
                              expression (asmcomp/mach.ml[130,4000+10]..[130,4000+20])
                                Pexp_ident "instr_iter" (asmcomp/mach.ml[130,4000+10]..[130,4000+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[130,4000+21]..[130,4000+22])
                                    Pexp_ident "f" (asmcomp/mach.ml[130,4000+21]..[130,4000+22])
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[130,4000+23]..[130,4000+27])
                                    Pexp_ident "ifso" (asmcomp/mach.ml[130,4000+23]..[130,4000+27])
                              ]
                            expression (asmcomp/mach.ml[130,4000+29]..[130,4000+68])
                              Pexp_sequence
                              expression (asmcomp/mach.ml[130,4000+29]..[130,4000+47])
                                Pexp_apply
                                expression (asmcomp/mach.ml[130,4000+29]..[130,4000+39])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[130,4000+29]..[130,4000+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[130,4000+40]..[130,4000+41])
                                      Pexp_ident "f" (asmcomp/mach.ml[130,4000+40]..[130,4000+41])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[130,4000+42]..[130,4000+47])
                                      Pexp_ident "ifnot" (asmcomp/mach.ml[130,4000+42]..[130,4000+47])
                                ]
                              expression (asmcomp/mach.ml[130,4000+49]..[130,4000+68])
                                Pexp_apply
                                expression (asmcomp/mach.ml[130,4000+49]..[130,4000+59])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[130,4000+49]..[130,4000+59])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[130,4000+60]..[130,4000+61])
                                      Pexp_ident "f" (asmcomp/mach.ml[130,4000+60]..[130,4000+61])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[130,4000+62]..[130,4000+68])
                                      Pexp_field
                                      expression (asmcomp/mach.ml[130,4000+62]..[130,4000+63])
                                        Pexp_ident "i" (asmcomp/mach.ml[130,4000+62]..[130,4000+63])
                                      "next" (asmcomp/mach.ml[130,4000+64]..[130,4000+68])
                                ]
                        <case>
                          pattern (asmcomp/mach.ml[131,4069+8]..[131,4069+30])
                            Ppat_construct "Iswitch" (asmcomp/mach.ml[131,4069+8]..[131,4069+15])
                            Some
                              []
                              pattern (asmcomp/mach.ml[131,4069+15]..[131,4069+30])
                                Ppat_tuple
                                [
                                  pattern (asmcomp/mach.ml[131,4069+16]..[131,4069+22])
                                    Ppat_var "_index" (asmcomp/mach.ml[131,4069+16]..[131,4069+22])
                                  pattern (asmcomp/mach.ml[131,4069+24]..[131,4069+29])
                                    Ppat_var "cases" (asmcomp/mach.ml[131,4069+24]..[131,4069+29])
                                ]
                          expression (asmcomp/mach.ml[132,4103+10]..[135,4203+29])
                            Pexp_sequence
                            expression (asmcomp/mach.ml[132,4103+10]..[134,4187+14])
                              Pexp_for Up
                              pattern (asmcomp/mach.ml[132,4103+14]..[132,4103+15])
                                Ppat_var "i" (asmcomp/mach.ml[132,4103+14]..[132,4103+15])
                              expression (asmcomp/mach.ml[132,4103+18]..[132,4103+19])
                                Pexp_constant PConst_int (0,None)
                              expression (asmcomp/mach.ml[132,4103+23]..[132,4103+45])
                                Pexp_apply
                                expression (asmcomp/mach.ml[132,4103+42]..[132,4103+43])
                                  Pexp_ident "-" (asmcomp/mach.ml[132,4103+42]..[132,4103+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[132,4103+23]..[132,4103+41])
                                      Pexp_apply
                                      expression (asmcomp/mach.ml[132,4103+23]..[132,4103+35])
                                        Pexp_ident "Array.length" (asmcomp/mach.ml[132,4103+23]..[132,4103+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/mach.ml[132,4103+36]..[132,4103+41])
                                            Pexp_ident "cases" (asmcomp/mach.ml[132,4103+36]..[132,4103+41])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[132,4103+44]..[132,4103+45])
                                      Pexp_constant PConst_int (1,None)
                                ]
                              expression (asmcomp/mach.ml[133,4152+12]..[133,4152+34])
                                Pexp_apply
                                expression (asmcomp/mach.ml[133,4152+12]..[133,4152+22])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[133,4152+12]..[133,4152+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[133,4152+23]..[133,4152+24])
                                      Pexp_ident "f" (asmcomp/mach.ml[133,4152+23]..[133,4152+24])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[133,4152+25]..[133,4152+34])
                                      Pexp_apply
                                      expression (asmcomp/mach.ml[133,4152+25]..[133,4152+34]) ghost
                                        Pexp_ident "Array.get" (asmcomp/mach.ml[133,4152+25]..[133,4152+34]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/mach.ml[133,4152+25]..[133,4152+30])
                                            Pexp_ident "cases" (asmcomp/mach.ml[133,4152+25]..[133,4152+30])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/mach.ml[133,4152+32]..[133,4152+33])
                                            Pexp_ident "i" (asmcomp/mach.ml[133,4152+32]..[133,4152+33])
                                      ]
                                ]
                            expression (asmcomp/mach.ml[135,4203+10]..[135,4203+29])
                              Pexp_apply
                              expression (asmcomp/mach.ml[135,4203+10]..[135,4203+20])
                                Pexp_ident "instr_iter" (asmcomp/mach.ml[135,4203+10]..[135,4203+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[135,4203+21]..[135,4203+22])
                                    Pexp_ident "f" (asmcomp/mach.ml[135,4203+21]..[135,4203+22])
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[135,4203+23]..[135,4203+29])
                                    Pexp_field
                                    expression (asmcomp/mach.ml[135,4203+23]..[135,4203+24])
                                      Pexp_ident "i" (asmcomp/mach.ml[135,4203+23]..[135,4203+24])
                                    "next" (asmcomp/mach.ml[135,4203+25]..[135,4203+29])
                              ]
                        <case>
                          pattern (asmcomp/mach.ml[136,4233+8]..[136,4233+33])
                            Ppat_construct "Icatch" (asmcomp/mach.ml[136,4233+8]..[136,4233+14])
                            Some
                              []
                              pattern (asmcomp/mach.ml[136,4233+14]..[136,4233+33])
                                Ppat_tuple
                                [
                                  pattern (asmcomp/mach.ml[136,4233+15]..[136,4233+16])
                                    Ppat_any
                                  pattern (asmcomp/mach.ml[136,4233+18]..[136,4233+26])
                                    Ppat_var "handlers" (asmcomp/mach.ml[136,4233+18]..[136,4233+26])
                                  pattern (asmcomp/mach.ml[136,4233+28]..[136,4233+32])
                                    Ppat_var "body" (asmcomp/mach.ml[136,4233+28]..[136,4233+32])
                                ]
                          expression (asmcomp/mach.ml[137,4270+10]..[139,4373+29])
                            Pexp_sequence
                            expression (asmcomp/mach.ml[137,4270+10]..[137,4270+27])
                              Pexp_apply
                              expression (asmcomp/mach.ml[137,4270+10]..[137,4270+20])
                                Pexp_ident "instr_iter" (asmcomp/mach.ml[137,4270+10]..[137,4270+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[137,4270+21]..[137,4270+22])
                                    Pexp_ident "f" (asmcomp/mach.ml[137,4270+21]..[137,4270+22])
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[137,4270+23]..[137,4270+27])
                                    Pexp_ident "body" (asmcomp/mach.ml[137,4270+23]..[137,4270+27])
                              ]
                            expression (asmcomp/mach.ml[138,4299+10]..[139,4373+29])
                              Pexp_sequence
                              expression (asmcomp/mach.ml[138,4299+10]..[138,4299+72])
                                Pexp_apply
                                expression (asmcomp/mach.ml[138,4299+10]..[138,4299+19])
                                  Pexp_ident "List.iter" (asmcomp/mach.ml[138,4299+10]..[138,4299+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[138,4299+20]..[138,4299+63])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (asmcomp/mach.ml[138,4299+25]..[138,4299+38])
                                        Ppat_tuple
                                        [
                                          pattern (asmcomp/mach.ml[138,4299+26]..[138,4299+28])
                                            Ppat_var "_n" (asmcomp/mach.ml[138,4299+26]..[138,4299+28])
                                          pattern (asmcomp/mach.ml[138,4299+30]..[138,4299+37])
                                            Ppat_var "handler" (asmcomp/mach.ml[138,4299+30]..[138,4299+37])
                                        ]
                                      expression (asmcomp/mach.ml[138,4299+42]..[138,4299+62])
                                        Pexp_apply
                                        expression (asmcomp/mach.ml[138,4299+42]..[138,4299+52])
                                          Pexp_ident "instr_iter" (asmcomp/mach.ml[138,4299+42]..[138,4299+52])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/mach.ml[138,4299+53]..[138,4299+54])
                                              Pexp_ident "f" (asmcomp/mach.ml[138,4299+53]..[138,4299+54])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/mach.ml[138,4299+55]..[138,4299+62])
                                              Pexp_ident "handler" (asmcomp/mach.ml[138,4299+55]..[138,4299+62])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[138,4299+64]..[138,4299+72])
                                      Pexp_ident "handlers" (asmcomp/mach.ml[138,4299+64]..[138,4299+72])
                                ]
                              expression (asmcomp/mach.ml[139,4373+10]..[139,4373+29])
                                Pexp_apply
                                expression (asmcomp/mach.ml[139,4373+10]..[139,4373+20])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[139,4373+10]..[139,4373+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[139,4373+21]..[139,4373+22])
                                      Pexp_ident "f" (asmcomp/mach.ml[139,4373+21]..[139,4373+22])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[139,4373+23]..[139,4373+29])
                                      Pexp_field
                                      expression (asmcomp/mach.ml[139,4373+23]..[139,4373+24])
                                        Pexp_ident "i" (asmcomp/mach.ml[139,4373+23]..[139,4373+24])
                                      "next" (asmcomp/mach.ml[139,4373+25]..[139,4373+29])
                                ]
                        <case>
                          pattern (asmcomp/mach.ml[140,4403+8]..[140,4403+15])
                            Ppat_construct "Iexit" (asmcomp/mach.ml[140,4403+8]..[140,4403+13])
                            Some
                              []
                              pattern (asmcomp/mach.ml[140,4403+14]..[140,4403+15])
                                Ppat_any
                          expression (asmcomp/mach.ml[140,4403+19]..[140,4403+21])
                            Pexp_construct "()" (asmcomp/mach.ml[140,4403+19]..[140,4403+21])
                            None
                        <case>
                          pattern (asmcomp/mach.ml[141,4425+8]..[141,4425+31])
                            Ppat_construct "Itrywith" (asmcomp/mach.ml[141,4425+8]..[141,4425+16])
                            Some
                              []
                              pattern (asmcomp/mach.ml[141,4425+16]..[141,4425+31])
                                Ppat_tuple
                                [
                                  pattern (asmcomp/mach.ml[141,4425+17]..[141,4425+21])
                                    Ppat_var "body" (asmcomp/mach.ml[141,4425+17]..[141,4425+21])
                                  pattern (asmcomp/mach.ml[141,4425+23]..[141,4425+30])
                                    Ppat_var "handler" (asmcomp/mach.ml[141,4425+23]..[141,4425+30])
                                ]
                          expression (asmcomp/mach.ml[142,4460+10]..[142,4460+70])
                            Pexp_sequence
                            expression (asmcomp/mach.ml[142,4460+10]..[142,4460+27])
                              Pexp_apply
                              expression (asmcomp/mach.ml[142,4460+10]..[142,4460+20])
                                Pexp_ident "instr_iter" (asmcomp/mach.ml[142,4460+10]..[142,4460+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[142,4460+21]..[142,4460+22])
                                    Pexp_ident "f" (asmcomp/mach.ml[142,4460+21]..[142,4460+22])
                                <arg>
                                Nolabel
                                  expression (asmcomp/mach.ml[142,4460+23]..[142,4460+27])
                                    Pexp_ident "body" (asmcomp/mach.ml[142,4460+23]..[142,4460+27])
                              ]
                            expression (asmcomp/mach.ml[142,4460+29]..[142,4460+70])
                              Pexp_sequence
                              expression (asmcomp/mach.ml[142,4460+29]..[142,4460+49])
                                Pexp_apply
                                expression (asmcomp/mach.ml[142,4460+29]..[142,4460+39])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[142,4460+29]..[142,4460+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[142,4460+40]..[142,4460+41])
                                      Pexp_ident "f" (asmcomp/mach.ml[142,4460+40]..[142,4460+41])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[142,4460+42]..[142,4460+49])
                                      Pexp_ident "handler" (asmcomp/mach.ml[142,4460+42]..[142,4460+49])
                                ]
                              expression (asmcomp/mach.ml[142,4460+51]..[142,4460+70])
                                Pexp_apply
                                expression (asmcomp/mach.ml[142,4460+51]..[142,4460+61])
                                  Pexp_ident "instr_iter" (asmcomp/mach.ml[142,4460+51]..[142,4460+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[142,4460+62]..[142,4460+63])
                                      Pexp_ident "f" (asmcomp/mach.ml[142,4460+62]..[142,4460+63])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/mach.ml[142,4460+64]..[142,4460+70])
                                      Pexp_field
                                      expression (asmcomp/mach.ml[142,4460+64]..[142,4460+65])
                                        Pexp_ident "i" (asmcomp/mach.ml[142,4460+64]..[142,4460+65])
                                      "next" (asmcomp/mach.ml[142,4460+66]..[142,4460+70])
                                ]
                        <case>
                          pattern (asmcomp/mach.ml[143,4531+8]..[143,4531+16])
                            Ppat_construct "Iraise" (asmcomp/mach.ml[143,4531+8]..[143,4531+14])
                            Some
                              []
                              pattern (asmcomp/mach.ml[143,4531+15]..[143,4531+16])
                                Ppat_any
                          expression (asmcomp/mach.ml[143,4531+20]..[143,4531+22])
                            Pexp_construct "()" (asmcomp/mach.ml[143,4531+20]..[143,4531+22])
                            None
                        <case>
                          pattern (asmcomp/mach.ml[144,4554+8]..[144,4554+9])
                            Ppat_any
                          expression (asmcomp/mach.ml[145,4567+10]..[145,4567+29])
                            Pexp_apply
                            expression (asmcomp/mach.ml[145,4567+10]..[145,4567+20])
                              Pexp_ident "instr_iter" (asmcomp/mach.ml[145,4567+10]..[145,4567+20])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/mach.ml[145,4567+21]..[145,4567+22])
                                  Pexp_ident "f" (asmcomp/mach.ml[145,4567+21]..[145,4567+22])
                              <arg>
                              Nolabel
                                expression (asmcomp/mach.ml[145,4567+23]..[145,4567+29])
                                  Pexp_field
                                  expression (asmcomp/mach.ml[145,4567+23]..[145,4567+24])
                                    Pexp_ident "i" (asmcomp/mach.ml[145,4567+23]..[145,4567+24])
                                  "next" (asmcomp/mach.ml[145,4567+25]..[145,4567+29])
                            ]
                      ]
              ]
    ]
  structure_item (asmcomp/mach.ml[147,4598+0]..[152,4877+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/mach.ml[147,4598+4]..[147,4598+21])
          Ppat_var "operation_is_pure" (asmcomp/mach.ml[147,4598+4]..[147,4598+21])
        expression (asmcomp/mach.ml[147,4598+24]..[152,4877+13])
          Pexp_function
          [
            <case>
              pattern (asmcomp/mach.ml[148,4631+4]..[150,4757+62])
                Ppat_or
                pattern (asmcomp/mach.ml[148,4631+4]..[150,4757+52])
                  Ppat_or
                  pattern (asmcomp/mach.ml[148,4631+4]..[150,4757+23])
                    Ppat_or
                    pattern (asmcomp/mach.ml[148,4631+4]..[149,4693+63])
                      Ppat_or
                      pattern (asmcomp/mach.ml[148,4631+4]..[149,4693+53])
                        Ppat_or
                        pattern (asmcomp/mach.ml[148,4631+4]..[149,4693+42])
                          Ppat_or
                          pattern (asmcomp/mach.ml[148,4631+4]..[149,4693+31])
                            Ppat_or
                            pattern (asmcomp/mach.ml[148,4631+4]..[149,4693+14])
                              Ppat_or
                              pattern (asmcomp/mach.ml[148,4631+4]..[148,4631+61])
                                Ppat_or
                                pattern (asmcomp/mach.ml[148,4631+4]..[148,4631+43])
                                  Ppat_or
                                  pattern (asmcomp/mach.ml[148,4631+4]..[148,4631+27])
                                    Ppat_or
                                    pattern (asmcomp/mach.ml[148,4631+4]..[148,4631+13])
                                      Ppat_construct "Icall_ind" (asmcomp/mach.ml[148,4631+4]..[148,4631+13])
                                      None
                                    pattern (asmcomp/mach.ml[148,4631+16]..[148,4631+27])
                                      Ppat_construct "Icall_imm" (asmcomp/mach.ml[148,4631+16]..[148,4631+25])
                                      Some
                                        []
                                        pattern (asmcomp/mach.ml[148,4631+26]..[148,4631+27])
                                          Ppat_any
                                  pattern (asmcomp/mach.ml[148,4631+30]..[148,4631+43])
                                    Ppat_construct "Itailcall_ind" (asmcomp/mach.ml[148,4631+30]..[148,4631+43])
                                    None
                                pattern (asmcomp/mach.ml[148,4631+46]..[148,4631+61])
                                  Ppat_construct "Itailcall_imm" (asmcomp/mach.ml[148,4631+46]..[148,4631+59])
                                  Some
                                    []
                                    pattern (asmcomp/mach.ml[148,4631+60]..[148,4631+61])
                                      Ppat_any
                              pattern (asmcomp/mach.ml[149,4693+4]..[149,4693+14])
                                Ppat_construct "Iextcall" (asmcomp/mach.ml[149,4693+4]..[149,4693+12])
                                Some
                                  []
                                  pattern (asmcomp/mach.ml[149,4693+13]..[149,4693+14])
                                    Ppat_any
                            pattern (asmcomp/mach.ml[149,4693+17]..[149,4693+31])
                              Ppat_construct "Istackoffset" (asmcomp/mach.ml[149,4693+17]..[149,4693+29])
                              Some
                                []
                                pattern (asmcomp/mach.ml[149,4693+30]..[149,4693+31])
                                  Ppat_any
                          pattern (asmcomp/mach.ml[149,4693+34]..[149,4693+42])
                            Ppat_construct "Istore" (asmcomp/mach.ml[149,4693+34]..[149,4693+40])
                            Some
                              []
                              pattern (asmcomp/mach.ml[149,4693+41]..[149,4693+42])
                                Ppat_any
                        pattern (asmcomp/mach.ml[149,4693+45]..[149,4693+53])
                          Ppat_construct "Ialloc" (asmcomp/mach.ml[149,4693+45]..[149,4693+51])
                          Some
                            []
                            pattern (asmcomp/mach.ml[149,4693+52]..[149,4693+53])
                              Ppat_any
                      pattern (asmcomp/mach.ml[149,4693+56]..[149,4693+63])
                        Ppat_construct "Ipoll" (asmcomp/mach.ml[149,4693+56]..[149,4693+61])
                        Some
                          []
                          pattern (asmcomp/mach.ml[149,4693+62]..[149,4693+63])
                            Ppat_any
                    pattern (asmcomp/mach.ml[150,4757+4]..[150,4757+23])
                      Ppat_construct "Iintop" (asmcomp/mach.ml[150,4757+4]..[150,4757+10])
                      Some
                        []
                        pattern (asmcomp/mach.ml[150,4757+10]..[150,4757+23])
                          Ppat_construct "Icheckbound" (asmcomp/mach.ml[150,4757+11]..[150,4757+22])
                          None
                  pattern (asmcomp/mach.ml[150,4757+26]..[150,4757+52])
                    Ppat_construct "Iintop_imm" (asmcomp/mach.ml[150,4757+26]..[150,4757+36])
                    Some
                      []
                      pattern (asmcomp/mach.ml[150,4757+36]..[150,4757+52])
                        Ppat_tuple
                        [
                          pattern (asmcomp/mach.ml[150,4757+37]..[150,4757+48])
                            Ppat_construct "Icheckbound" (asmcomp/mach.ml[150,4757+37]..[150,4757+48])
                            None
                          pattern (asmcomp/mach.ml[150,4757+50]..[150,4757+51])
                            Ppat_any
                        ]
                pattern (asmcomp/mach.ml[150,4757+55]..[150,4757+62])
                  Ppat_construct "Iopaque" (asmcomp/mach.ml[150,4757+55]..[150,4757+62])
                  None
              expression (asmcomp/mach.ml[150,4757+66]..[150,4757+71])
                Pexp_construct "false" (asmcomp/mach.ml[150,4757+66]..[150,4757+71])
                None
            <case>
              pattern (asmcomp/mach.ml[151,4829+4]..[151,4829+17])
                Ppat_construct "Ispecific" (asmcomp/mach.ml[151,4829+4]..[151,4829+13])
                Some
                  []
                  pattern (asmcomp/mach.ml[151,4829+14]..[151,4829+17])
                    Ppat_var "sop" (asmcomp/mach.ml[151,4829+14]..[151,4829+17])
              expression (asmcomp/mach.ml[151,4829+21]..[151,4829+47])
                Pexp_apply
                expression (asmcomp/mach.ml[151,4829+21]..[151,4829+43])
                  Pexp_ident "Arch.operation_is_pure" (asmcomp/mach.ml[151,4829+21]..[151,4829+43])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/mach.ml[151,4829+44]..[151,4829+47])
                      Pexp_ident "sop" (asmcomp/mach.ml[151,4829+44]..[151,4829+47])
                ]
            <case>
              pattern (asmcomp/mach.ml[152,4877+4]..[152,4877+5])
                Ppat_any
              expression (asmcomp/mach.ml[152,4877+9]..[152,4877+13])
                Pexp_construct "true" (asmcomp/mach.ml[152,4877+9]..[152,4877+13])
                None
          ]
    ]
  structure_item (asmcomp/mach.ml[154,4892+0]..[160,5114+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/mach.ml[154,4892+4]..[154,4892+23])
          Ppat_var "operation_can_raise" (asmcomp/mach.ml[154,4892+4]..[154,4892+23])
        expression (asmcomp/mach.ml[154,4892+24]..[160,5114+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/mach.ml[154,4892+24]..[154,4892+26])
            Ppat_var "op" (asmcomp/mach.ml[154,4892+24]..[154,4892+26])
          expression (asmcomp/mach.ml[155,4921+2]..[160,5114+14])
            Pexp_match
            expression (asmcomp/mach.ml[155,4921+8]..[155,4921+10])
              Pexp_ident "op" (asmcomp/mach.ml[155,4921+8]..[155,4921+10])
            [
              <case>
                pattern (asmcomp/mach.ml[156,4937+4]..[158,5033+22])
                  Ppat_or
                  pattern (asmcomp/mach.ml[156,4937+4]..[158,5033+12])
                    Ppat_or
                    pattern (asmcomp/mach.ml[156,4937+4]..[157,4978+54])
                      Ppat_or
                      pattern (asmcomp/mach.ml[156,4937+4]..[157,4978+24])
                        Ppat_or
                        pattern (asmcomp/mach.ml[156,4937+4]..[156,4937+40])
                          Ppat_or
                          pattern (asmcomp/mach.ml[156,4937+4]..[156,4937+27])
                            Ppat_or
                            pattern (asmcomp/mach.ml[156,4937+4]..[156,4937+13])
                              Ppat_construct "Icall_ind" (asmcomp/mach.ml[156,4937+4]..[156,4937+13])
                              None
                            pattern (asmcomp/mach.ml[156,4937+16]..[156,4937+27])
                              Ppat_construct "Icall_imm" (asmcomp/mach.ml[156,4937+16]..[156,4937+25])
                              Some
                                []
                                pattern (asmcomp/mach.ml[156,4937+26]..[156,4937+27])
                                  Ppat_any
                          pattern (asmcomp/mach.ml[156,4937+30]..[156,4937+40])
                            Ppat_construct "Iextcall" (asmcomp/mach.ml[156,4937+30]..[156,4937+38])
                            Some
                              []
                              pattern (asmcomp/mach.ml[156,4937+39]..[156,4937+40])
                                Ppat_any
                        pattern (asmcomp/mach.ml[157,4978+4]..[157,4978+24])
                          Ppat_construct "Iintop" (asmcomp/mach.ml[157,4978+4]..[157,4978+10])
                          Some
                            []
                            pattern (asmcomp/mach.ml[157,4978+11]..[157,4978+24])
                              Ppat_construct "Icheckbound" (asmcomp/mach.ml[157,4978+12]..[157,4978+23])
                              None
                      pattern (asmcomp/mach.ml[157,4978+27]..[157,4978+54])
                        Ppat_construct "Iintop_imm" (asmcomp/mach.ml[157,4978+27]..[157,4978+37])
                        Some
                          []
                          pattern (asmcomp/mach.ml[157,4978+38]..[157,4978+54])
                            Ppat_tuple
                            [
                              pattern (asmcomp/mach.ml[157,4978+39]..[157,4978+50])
                                Ppat_construct "Icheckbound" (asmcomp/mach.ml[157,4978+39]..[157,4978+50])
                                None
                              pattern (asmcomp/mach.ml[157,4978+52]..[157,4978+53])
                                Ppat_any
                            ]
                    pattern (asmcomp/mach.ml[158,5033+4]..[158,5033+12])
                      Ppat_construct "Ialloc" (asmcomp/mach.ml[158,5033+4]..[158,5033+10])
                      Some
                        []
                        pattern (asmcomp/mach.ml[158,5033+11]..[158,5033+12])
                          Ppat_any
                  pattern (asmcomp/mach.ml[158,5033+15]..[158,5033+22])
                    Ppat_construct "Ipoll" (asmcomp/mach.ml[158,5033+15]..[158,5033+20])
                    Some
                      []
                      pattern (asmcomp/mach.ml[158,5033+21]..[158,5033+22])
                        Ppat_any
                expression (asmcomp/mach.ml[158,5033+26]..[158,5033+30])
                  Pexp_construct "true" (asmcomp/mach.ml[158,5033+26]..[158,5033+30])
                  None
              <case>
                pattern (asmcomp/mach.ml[159,5064+4]..[159,5064+17])
                  Ppat_construct "Ispecific" (asmcomp/mach.ml[159,5064+4]..[159,5064+13])
                  Some
                    []
                    pattern (asmcomp/mach.ml[159,5064+14]..[159,5064+17])
                      Ppat_var "sop" (asmcomp/mach.ml[159,5064+14]..[159,5064+17])
                expression (asmcomp/mach.ml[159,5064+21]..[159,5064+49])
                  Pexp_apply
                  expression (asmcomp/mach.ml[159,5064+21]..[159,5064+45])
                    Pexp_ident "Arch.operation_can_raise" (asmcomp/mach.ml[159,5064+21]..[159,5064+45])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/mach.ml[159,5064+46]..[159,5064+49])
                        Pexp_ident "sop" (asmcomp/mach.ml[159,5064+46]..[159,5064+49])
                  ]
              <case>
                pattern (asmcomp/mach.ml[160,5114+4]..[160,5114+5])
                  Ppat_any
                expression (asmcomp/mach.ml[160,5114+9]..[160,5114+14])
                  Pexp_construct "false" (asmcomp/mach.ml[160,5114+9]..[160,5114+14])
                  None
            ]
    ]
]

