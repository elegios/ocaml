[
  structure_item (middle_end/flambda/ref_to_variables.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/ref_to_variables.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/ref_to_variables.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/ref_to_variables.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/ref_to_variables.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/ref_to_variables.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/ref_to_variables.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/ref_to_variables.ml[20,1238+0]..[87,3834+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/ref_to_variables.ml[20,1238+4]..[20,1238+41])
          Ppat_var "variables_not_used_as_local_reference" (middle_end/flambda/ref_to_variables.ml[20,1238+4]..[20,1238+41])
        expression (middle_end/flambda/ref_to_variables.ml[20,1238+42]..[87,3834+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/ref_to_variables.ml[20,1238+42]..[20,1238+58])
            Ppat_constraint
            pattern (middle_end/flambda/ref_to_variables.ml[20,1238+43]..[20,1238+47])
              Ppat_var "tree" (middle_end/flambda/ref_to_variables.ml[20,1238+43]..[20,1238+47])
            core_type (middle_end/flambda/ref_to_variables.ml[20,1238+48]..[20,1238+57])
              Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[20,1238+48]..[20,1238+57])
              []
          expression (middle_end/flambda/ref_to_variables.ml[21,1299+2]..[87,3834+6])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/ref_to_variables.ml[21,1299+6]..[21,1299+9])
                  Ppat_var "set" (middle_end/flambda/ref_to_variables.ml[21,1299+6]..[21,1299+9])
                expression (middle_end/flambda/ref_to_variables.ml[21,1299+12]..[21,1299+34])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[21,1299+12]..[21,1299+15])
                    Pexp_ident "ref" (middle_end/flambda/ref_to_variables.ml[21,1299+12]..[21,1299+15])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[21,1299+16]..[21,1299+34])
                        Pexp_ident "Variable.Set.empty" (middle_end/flambda/ref_to_variables.ml[21,1299+16]..[21,1299+34])
                  ]
            ]
            expression (middle_end/flambda/ref_to_variables.ml[22,1337+2]..[87,3834+6])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/ref_to_variables.ml[22,1337+10]..[22,1337+20])
                    Ppat_var "loop_named" (middle_end/flambda/ref_to_variables.ml[22,1337+10]..[22,1337+20])
                  expression (middle_end/flambda/ref_to_variables.ml[22,1337+21]..[41,2240+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/ref_to_variables.ml[22,1337+21]..[22,1337+43])
                      Ppat_constraint
                      pattern (middle_end/flambda/ref_to_variables.ml[22,1337+22]..[22,1337+26])
                        Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[22,1337+22]..[22,1337+26])
                      core_type (middle_end/flambda/ref_to_variables.ml[22,1337+29]..[22,1337+42])
                        Ptyp_constr "Flambda.named" (middle_end/flambda/ref_to_variables.ml[22,1337+29]..[22,1337+42])
                        []
                    expression (middle_end/flambda/ref_to_variables.ml[23,1383+4]..[41,2240+12])
                      Pexp_match
                      expression (middle_end/flambda/ref_to_variables.ml[23,1383+10]..[23,1383+14])
                        Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[23,1383+10]..[23,1383+14])
                      [
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[25,1469+6]..[26,1498+32])
                            Ppat_or
                            pattern (middle_end/flambda/ref_to_variables.ml[25,1469+6]..[25,1469+28])
                              Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[25,1469+6]..[25,1469+10])
                              Some
                                []
                                pattern (middle_end/flambda/ref_to_variables.ml[25,1469+10]..[25,1469+28])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/ref_to_variables.ml[25,1469+11]..[25,1469+19])
                                      Ppat_construct "Pfield" (middle_end/flambda/ref_to_variables.ml[25,1469+11]..[25,1469+17])
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[25,1469+18]..[25,1469+19])
                                          Ppat_any
                                    pattern (middle_end/flambda/ref_to_variables.ml[25,1469+21]..[25,1469+24])
                                      Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[25,1469+22]..[25,1469+24]) ghost
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[25,1469+22]..[25,1469+24]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/ref_to_variables.ml[25,1469+22]..[25,1469+23])
                                              Ppat_any
                                            pattern (middle_end/flambda/ref_to_variables.ml[25,1469+23]..[25,1469+24]) ghost
                                              Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[25,1469+23]..[25,1469+24]) ghost
                                              None
                                          ]
                                    pattern (middle_end/flambda/ref_to_variables.ml[25,1469+26]..[25,1469+27])
                                      Ppat_any
                                  ]
                            pattern (middle_end/flambda/ref_to_variables.ml[26,1498+6]..[26,1498+32])
                              Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[26,1498+6]..[26,1498+10])
                              Some
                                []
                                pattern (middle_end/flambda/ref_to_variables.ml[26,1498+10]..[26,1498+32])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/ref_to_variables.ml[26,1498+11]..[26,1498+23])
                                      Ppat_construct "Poffsetref" (middle_end/flambda/ref_to_variables.ml[26,1498+11]..[26,1498+21])
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[26,1498+22]..[26,1498+23])
                                          Ppat_any
                                    pattern (middle_end/flambda/ref_to_variables.ml[26,1498+25]..[26,1498+28])
                                      Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[26,1498+26]..[26,1498+28]) ghost
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[26,1498+26]..[26,1498+28]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/ref_to_variables.ml[26,1498+26]..[26,1498+27])
                                              Ppat_any
                                            pattern (middle_end/flambda/ref_to_variables.ml[26,1498+27]..[26,1498+28]) ghost
                                              Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[26,1498+27]..[26,1498+28]) ghost
                                              None
                                          ]
                                    pattern (middle_end/flambda/ref_to_variables.ml[26,1498+30]..[26,1498+31])
                                      Ppat_any
                                  ]
                          expression (middle_end/flambda/ref_to_variables.ml[26,1498+36]..[26,1498+38])
                            Pexp_construct "()" (middle_end/flambda/ref_to_variables.ml[26,1498+36]..[26,1498+38])
                            None
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[27,1537+6]..[27,1537+39])
                            Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[27,1537+6]..[27,1537+10])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[27,1537+10]..[27,1537+39])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[27,1537+11]..[27,1537+22])
                                    Ppat_construct "Psetfield" (middle_end/flambda/ref_to_variables.ml[27,1537+11]..[27,1537+20])
                                    Some
                                      []
                                      pattern (middle_end/flambda/ref_to_variables.ml[27,1537+21]..[27,1537+22])
                                        Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[27,1537+24]..[27,1537+35])
                                    Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[27,1537+25]..[27,1537+35]) ghost
                                    Some
                                      []
                                      pattern (middle_end/flambda/ref_to_variables.ml[27,1537+25]..[27,1537+35]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/ref_to_variables.ml[27,1537+25]..[27,1537+31])
                                            Ppat_var "_block" (middle_end/flambda/ref_to_variables.ml[27,1537+25]..[27,1537+31])
                                          pattern (middle_end/flambda/ref_to_variables.ml[27,1537+33]..[27,1537+35]) ghost
                                            Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[27,1537+33]..[27,1537+35]) ghost
                                            Some
                                              []
                                              pattern (middle_end/flambda/ref_to_variables.ml[27,1537+33]..[27,1537+35]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/ref_to_variables.ml[27,1537+33]..[27,1537+34])
                                                    Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[27,1537+33]..[27,1537+34])
                                                  pattern (middle_end/flambda/ref_to_variables.ml[27,1537+34]..[27,1537+35]) ghost
                                                    Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[27,1537+34]..[27,1537+35]) ghost
                                                    None
                                                ]
                                        ]
                                  pattern (middle_end/flambda/ref_to_variables.ml[27,1537+37]..[27,1537+38])
                                    Ppat_any
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[29,1657+6]..[29,1657+36])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[29,1657+10]..[29,1657+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[29,1657+10]..[29,1657+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[29,1657+6]..[29,1657+9])
                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[29,1657+6]..[29,1657+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[29,1657+13]..[29,1657+36])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[29,1657+13]..[29,1657+29])
                                    Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[29,1657+13]..[29,1657+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[29,1657+30]..[29,1657+31])
                                        Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[29,1657+30]..[29,1657+31])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[29,1657+32]..[29,1657+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[29,1657+32]..[29,1657+33])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[29,1657+32]..[29,1657+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[29,1657+33]..[29,1657+36])
                                              Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[29,1657+33]..[29,1657+36])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[33,1821+51])
                            Ppat_or
                            pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[33,1821+35])
                              Ppat_or
                              pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[32,1775+45])
                                Ppat_or
                                pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[32,1775+25])
                                  Ppat_or
                                  pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[31,1714+60])
                                    Ppat_or
                                    pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[31,1714+43])
                                      Ppat_or
                                      pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[31,1714+23])
                                        Ppat_or
                                        pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[31,1714+14])
                                          Ppat_or
                                          pattern (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[30,1694+19])
                                            Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[30,1694+6]..[30,1694+10])
                                            Some
                                              []
                                              pattern (middle_end/flambda/ref_to_variables.ml[30,1694+10]..[30,1694+19])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/ref_to_variables.ml[30,1694+11]..[30,1694+12])
                                                    Ppat_any
                                                  pattern (middle_end/flambda/ref_to_variables.ml[30,1694+14]..[30,1694+15])
                                                    Ppat_any
                                                  pattern (middle_end/flambda/ref_to_variables.ml[30,1694+17]..[30,1694+18])
                                                    Ppat_any
                                                ]
                                          pattern (middle_end/flambda/ref_to_variables.ml[31,1714+6]..[31,1714+14])
                                            Ppat_construct "Symbol" (middle_end/flambda/ref_to_variables.ml[31,1714+6]..[31,1714+12])
                                            Some
                                              []
                                              pattern (middle_end/flambda/ref_to_variables.ml[31,1714+13]..[31,1714+14])
                                                Ppat_any
                                        pattern (middle_end/flambda/ref_to_variables.ml[31,1714+16]..[31,1714+23])
                                          Ppat_construct "Const" (middle_end/flambda/ref_to_variables.ml[31,1714+16]..[31,1714+21])
                                          Some
                                            []
                                            pattern (middle_end/flambda/ref_to_variables.ml[31,1714+22]..[31,1714+23])
                                              Ppat_any
                                      pattern (middle_end/flambda/ref_to_variables.ml[31,1714+26]..[31,1714+43])
                                        Ppat_construct "Allocated_const" (middle_end/flambda/ref_to_variables.ml[31,1714+26]..[31,1714+41])
                                        Some
                                          []
                                          pattern (middle_end/flambda/ref_to_variables.ml[31,1714+42]..[31,1714+43])
                                            Ppat_any
                                    pattern (middle_end/flambda/ref_to_variables.ml[31,1714+46]..[31,1714+60])
                                      Ppat_construct "Read_mutable" (middle_end/flambda/ref_to_variables.ml[31,1714+46]..[31,1714+58])
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[31,1714+59]..[31,1714+60])
                                          Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[32,1775+6]..[32,1775+25])
                                    Ppat_construct "Read_symbol_field" (middle_end/flambda/ref_to_variables.ml[32,1775+6]..[32,1775+23])
                                    Some
                                      []
                                      pattern (middle_end/flambda/ref_to_variables.ml[32,1775+24]..[32,1775+25])
                                        Ppat_any
                                pattern (middle_end/flambda/ref_to_variables.ml[32,1775+28]..[32,1775+45])
                                  Ppat_construct "Project_closure" (middle_end/flambda/ref_to_variables.ml[32,1775+28]..[32,1775+43])
                                  Some
                                    []
                                    pattern (middle_end/flambda/ref_to_variables.ml[32,1775+44]..[32,1775+45])
                                      Ppat_any
                              pattern (middle_end/flambda/ref_to_variables.ml[33,1821+6]..[33,1821+35])
                                Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/ref_to_variables.ml[33,1821+6]..[33,1821+33])
                                Some
                                  []
                                  pattern (middle_end/flambda/ref_to_variables.ml[33,1821+34]..[33,1821+35])
                                    Ppat_any
                            pattern (middle_end/flambda/ref_to_variables.ml[33,1821+38]..[33,1821+51])
                              Ppat_construct "Project_var" (middle_end/flambda/ref_to_variables.ml[33,1821+38]..[33,1821+49])
                              Some
                                []
                                pattern (middle_end/flambda/ref_to_variables.ml[33,1821+50]..[33,1821+51])
                                  Ppat_any
                          expression (middle_end/flambda/ref_to_variables.ml[34,1876+6]..[34,1876+72])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[34,1876+10]..[34,1876+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[34,1876+10]..[34,1876+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[34,1876+6]..[34,1876+9])
                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[34,1876+6]..[34,1876+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[34,1876+13]..[34,1876+72])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[34,1876+13]..[34,1876+31])
                                    Pexp_ident "Variable.Set.union" (middle_end/flambda/ref_to_variables.ml[34,1876+13]..[34,1876+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[34,1876+32]..[34,1876+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[34,1876+32]..[34,1876+33])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[34,1876+32]..[34,1876+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[34,1876+33]..[34,1876+36])
                                              Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[34,1876+33]..[34,1876+36])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[34,1876+37]..[34,1876+72])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[34,1876+38]..[34,1876+66])
                                          Pexp_ident "Flambda.free_variables_named" (middle_end/flambda/ref_to_variables.ml[34,1876+38]..[34,1876+66])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[34,1876+67]..[34,1876+71])
                                              Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[34,1876+67]..[34,1876+71])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[35,1949+6]..[35,1949+37])
                            Ppat_construct "Set_of_closures" (middle_end/flambda/ref_to_variables.ml[35,1949+6]..[35,1949+21])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[35,1949+22]..[35,1949+37])
                                Ppat_var "set_of_closures" (middle_end/flambda/ref_to_variables.ml[35,1949+22]..[35,1949+37])
                          expression (middle_end/flambda/ref_to_variables.ml[36,1990+6]..[39,2180+43])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[36,1990+6]..[36,1990+72])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[36,1990+10]..[36,1990+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[36,1990+10]..[36,1990+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[36,1990+6]..[36,1990+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[36,1990+6]..[36,1990+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[36,1990+13]..[36,1990+72])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[36,1990+13]..[36,1990+31])
                                      Pexp_ident "Variable.Set.union" (middle_end/flambda/ref_to_variables.ml[36,1990+13]..[36,1990+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[36,1990+32]..[36,1990+36])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[36,1990+32]..[36,1990+33])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[36,1990+32]..[36,1990+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[36,1990+33]..[36,1990+36])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[36,1990+33]..[36,1990+36])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[36,1990+37]..[36,1990+72])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[36,1990+38]..[36,1990+66])
                                            Pexp_ident "Flambda.free_variables_named" (middle_end/flambda/ref_to_variables.ml[36,1990+38]..[36,1990+66])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[36,1990+67]..[36,1990+71])
                                                Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[36,1990+67]..[36,1990+71])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[37,2064+6]..[39,2180+43])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[37,2064+6]..[37,2064+23])
                                Pexp_ident "Variable.Map.iter" (middle_end/flambda/ref_to_variables.ml[37,2064+6]..[37,2064+23])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[37,2064+24]..[38,2145+34])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/ref_to_variables.ml[37,2064+29]..[37,2064+30])
                                      Ppat_any
                                    expression (middle_end/flambda/ref_to_variables.ml[37,2064+31]..[38,2145+33]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/ref_to_variables.ml[37,2064+31]..[37,2064+77])
                                        Ppat_constraint
                                        pattern (middle_end/flambda/ref_to_variables.ml[37,2064+32]..[37,2064+45])
                                          Ppat_var "function_decl" (middle_end/flambda/ref_to_variables.ml[37,2064+32]..[37,2064+45])
                                        core_type (middle_end/flambda/ref_to_variables.ml[37,2064+48]..[37,2064+76])
                                          Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/ref_to_variables.ml[37,2064+48]..[37,2064+76])
                                          []
                                      expression (middle_end/flambda/ref_to_variables.ml[38,2145+10]..[38,2145+33])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[38,2145+10]..[38,2145+14])
                                          Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[38,2145+10]..[38,2145+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[38,2145+15]..[38,2145+33])
                                              Pexp_field
                                              expression (middle_end/flambda/ref_to_variables.ml[38,2145+15]..[38,2145+28])
                                                Pexp_ident "function_decl" (middle_end/flambda/ref_to_variables.ml[38,2145+15]..[38,2145+28])
                                              "body" (middle_end/flambda/ref_to_variables.ml[38,2145+29]..[38,2145+33])
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[39,2180+8]..[39,2180+43])
                                    Pexp_field
                                    expression (middle_end/flambda/ref_to_variables.ml[39,2180+8]..[39,2180+38])
                                      Pexp_field
                                      expression (middle_end/flambda/ref_to_variables.ml[39,2180+8]..[39,2180+23])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/ref_to_variables.ml[39,2180+8]..[39,2180+23])
                                      "function_decls" (middle_end/flambda/ref_to_variables.ml[39,2180+24]..[39,2180+38])
                                    "funs" (middle_end/flambda/ref_to_variables.ml[39,2180+39]..[39,2180+43])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[40,2224+6]..[40,2224+12])
                            Ppat_construct "Expr" (middle_end/flambda/ref_to_variables.ml[40,2224+6]..[40,2224+10])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[40,2224+11]..[40,2224+12])
                                Ppat_var "e" (middle_end/flambda/ref_to_variables.ml[40,2224+11]..[40,2224+12])
                          expression (middle_end/flambda/ref_to_variables.ml[41,2240+6]..[41,2240+12])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[41,2240+6]..[41,2240+10])
                              Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[41,2240+6]..[41,2240+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[41,2240+11]..[41,2240+12])
                                  Pexp_ident "e" (middle_end/flambda/ref_to_variables.ml[41,2240+11]..[41,2240+12])
                            ]
                      ]
                <def>
                  pattern (middle_end/flambda/ref_to_variables.ml[42,2253+6]..[42,2253+10])
                    Ppat_var "loop" (middle_end/flambda/ref_to_variables.ml[42,2253+6]..[42,2253+10])
                  expression (middle_end/flambda/ref_to_variables.ml[42,2253+11]..[84,3749+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/ref_to_variables.ml[42,2253+11]..[42,2253+29])
                      Ppat_constraint
                      pattern (middle_end/flambda/ref_to_variables.ml[42,2253+12]..[42,2253+16])
                        Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[42,2253+12]..[42,2253+16])
                      core_type (middle_end/flambda/ref_to_variables.ml[42,2253+19]..[42,2253+28])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[42,2253+19]..[42,2253+28])
                        []
                    expression (middle_end/flambda/ref_to_variables.ml[43,2285+4]..[84,3749+66])
                      Pexp_match
                      expression (middle_end/flambda/ref_to_variables.ml[43,2285+10]..[43,2285+14])
                        Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[43,2285+10]..[43,2285+14])
                      [
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[44,2305+6]..[44,2305+36])
                            Ppat_construct "Let" (middle_end/flambda/ref_to_variables.ml[44,2305+6]..[44,2305+9])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[44,2305+10]..[44,2305+36])
                                Ppat_record Open
                                [
                                  "defining_expr" (middle_end/flambda/ref_to_variables.ml[44,2305+12]..[44,2305+25]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[44,2305+12]..[44,2305+25])
                                      Ppat_var "defining_expr" (middle_end/flambda/ref_to_variables.ml[44,2305+12]..[44,2305+25])
                                  "body" (middle_end/flambda/ref_to_variables.ml[44,2305+27]..[44,2305+31]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[44,2305+27]..[44,2305+31])
                                      Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[44,2305+27]..[44,2305+31])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[45,2345+6]..[46,2377+15])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[45,2345+6]..[45,2345+30])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[45,2345+6]..[45,2345+16])
                                Pexp_ident "loop_named" (middle_end/flambda/ref_to_variables.ml[45,2345+6]..[45,2345+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[45,2345+17]..[45,2345+30])
                                    Pexp_ident "defining_expr" (middle_end/flambda/ref_to_variables.ml[45,2345+17]..[45,2345+30])
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[46,2377+6]..[46,2377+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[46,2377+6]..[46,2377+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[46,2377+6]..[46,2377+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[46,2377+11]..[46,2377+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[46,2377+11]..[46,2377+15])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[47,2393+6]..[47,2393+26])
                            Ppat_construct "Let_rec" (middle_end/flambda/ref_to_variables.ml[47,2393+6]..[47,2393+13])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[47,2393+14]..[47,2393+26])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[47,2393+15]..[47,2393+19])
                                    Ppat_var "defs" (middle_end/flambda/ref_to_variables.ml[47,2393+15]..[47,2393+19])
                                  pattern (middle_end/flambda/ref_to_variables.ml[47,2393+21]..[47,2393+25])
                                    Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[47,2393+21]..[47,2393+25])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[48,2423+6]..[49,2485+15])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[48,2423+6]..[48,2423+60])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[48,2423+6]..[48,2423+15])
                                Pexp_ident "List.iter" (middle_end/flambda/ref_to_variables.ml[48,2423+6]..[48,2423+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[48,2423+16]..[48,2423+55])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/ref_to_variables.ml[48,2423+21]..[48,2423+34])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/ref_to_variables.ml[48,2423+22]..[48,2423+26])
                                          Ppat_var "_var" (middle_end/flambda/ref_to_variables.ml[48,2423+22]..[48,2423+26])
                                        pattern (middle_end/flambda/ref_to_variables.ml[48,2423+28]..[48,2423+33])
                                          Ppat_var "named" (middle_end/flambda/ref_to_variables.ml[48,2423+28]..[48,2423+33])
                                      ]
                                    expression (middle_end/flambda/ref_to_variables.ml[48,2423+38]..[48,2423+54])
                                      Pexp_apply
                                      expression (middle_end/flambda/ref_to_variables.ml[48,2423+38]..[48,2423+48])
                                        Pexp_ident "loop_named" (middle_end/flambda/ref_to_variables.ml[48,2423+38]..[48,2423+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/ref_to_variables.ml[48,2423+49]..[48,2423+54])
                                            Pexp_ident "named" (middle_end/flambda/ref_to_variables.ml[48,2423+49]..[48,2423+54])
                                      ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[48,2423+56]..[48,2423+60])
                                    Pexp_ident "defs" (middle_end/flambda/ref_to_variables.ml[48,2423+56]..[48,2423+60])
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[49,2485+6]..[49,2485+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[49,2485+6]..[49,2485+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[49,2485+6]..[49,2485+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[49,2485+11]..[49,2485+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[49,2485+11]..[49,2485+15])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[50,2501+6]..[50,2501+11])
                            Ppat_construct "Var" (middle_end/flambda/ref_to_variables.ml[50,2501+6]..[50,2501+9])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[50,2501+10]..[50,2501+11])
                                Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[50,2501+10]..[50,2501+11])
                          expression (middle_end/flambda/ref_to_variables.ml[51,2516+6]..[51,2516+36])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[51,2516+10]..[51,2516+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[51,2516+10]..[51,2516+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[51,2516+6]..[51,2516+9])
                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[51,2516+6]..[51,2516+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[51,2516+13]..[51,2516+36])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[51,2516+13]..[51,2516+29])
                                    Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[51,2516+13]..[51,2516+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[51,2516+30]..[51,2516+31])
                                        Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[51,2516+30]..[51,2516+31])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[51,2516+32]..[51,2516+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[51,2516+32]..[51,2516+33])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[51,2516+32]..[51,2516+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[51,2516+33]..[51,2516+36])
                                              Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[51,2516+33]..[51,2516+36])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[52,2553+6]..[52,2553+45])
                            Ppat_construct "Let_mutable" (middle_end/flambda/ref_to_variables.ml[52,2553+6]..[52,2553+17])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[52,2553+18]..[52,2553+45])
                                Ppat_record Closed
                                [
                                  "initial_value" (middle_end/flambda/ref_to_variables.ml[52,2553+20]..[52,2553+33])
                                    pattern (middle_end/flambda/ref_to_variables.ml[52,2553+36]..[52,2553+37])
                                      Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[52,2553+36]..[52,2553+37])
                                  "body" (middle_end/flambda/ref_to_variables.ml[52,2553+39]..[52,2553+43]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[52,2553+39]..[52,2553+43])
                                      Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[52,2553+39]..[52,2553+43])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[53,2602+6]..[54,2640+15])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[53,2602+6]..[53,2602+36])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[53,2602+10]..[53,2602+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[53,2602+10]..[53,2602+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[53,2602+6]..[53,2602+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[53,2602+6]..[53,2602+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[53,2602+13]..[53,2602+36])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[53,2602+13]..[53,2602+29])
                                      Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[53,2602+13]..[53,2602+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[53,2602+30]..[53,2602+31])
                                          Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[53,2602+30]..[53,2602+31])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[53,2602+32]..[53,2602+36])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[53,2602+32]..[53,2602+33])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[53,2602+32]..[53,2602+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[53,2602+33]..[53,2602+36])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[53,2602+33]..[53,2602+36])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[54,2640+6]..[54,2640+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[54,2640+6]..[54,2640+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[54,2640+6]..[54,2640+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[54,2640+11]..[54,2640+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[54,2640+11]..[54,2640+15])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[55,2656+6]..[55,2656+38])
                            Ppat_construct "If_then_else" (middle_end/flambda/ref_to_variables.ml[55,2656+6]..[55,2656+18])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[55,2656+19]..[55,2656+38])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[55,2656+20]..[55,2656+24])
                                    Ppat_var "cond" (middle_end/flambda/ref_to_variables.ml[55,2656+20]..[55,2656+24])
                                  pattern (middle_end/flambda/ref_to_variables.ml[55,2656+26]..[55,2656+30])
                                    Ppat_var "ifso" (middle_end/flambda/ref_to_variables.ml[55,2656+26]..[55,2656+30])
                                  pattern (middle_end/flambda/ref_to_variables.ml[55,2656+32]..[55,2656+37])
                                    Ppat_var "ifnot" (middle_end/flambda/ref_to_variables.ml[55,2656+32]..[55,2656+37])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[56,2698+6]..[58,2756+16])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[56,2698+6]..[56,2698+39])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[56,2698+10]..[56,2698+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[56,2698+10]..[56,2698+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[56,2698+6]..[56,2698+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[56,2698+6]..[56,2698+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[56,2698+13]..[56,2698+39])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[56,2698+13]..[56,2698+29])
                                      Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[56,2698+13]..[56,2698+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[56,2698+30]..[56,2698+34])
                                          Pexp_ident "cond" (middle_end/flambda/ref_to_variables.ml[56,2698+30]..[56,2698+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[56,2698+35]..[56,2698+39])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[56,2698+35]..[56,2698+36])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[56,2698+35]..[56,2698+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[56,2698+36]..[56,2698+39])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[56,2698+36]..[56,2698+39])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[57,2739+6]..[58,2756+16])
                              Pexp_sequence
                              expression (middle_end/flambda/ref_to_variables.ml[57,2739+6]..[57,2739+15])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[57,2739+6]..[57,2739+10])
                                  Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[57,2739+6]..[57,2739+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[57,2739+11]..[57,2739+15])
                                      Pexp_ident "ifso" (middle_end/flambda/ref_to_variables.ml[57,2739+11]..[57,2739+15])
                                ]
                              expression (middle_end/flambda/ref_to_variables.ml[58,2756+6]..[58,2756+16])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[58,2756+6]..[58,2756+10])
                                  Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[58,2756+6]..[58,2756+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[58,2756+11]..[58,2756+16])
                                      Pexp_ident "ifnot" (middle_end/flambda/ref_to_variables.ml[58,2756+11]..[58,2756+16])
                                ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[59,2773+6]..[59,2773+51])
                            Ppat_construct "Switch" (middle_end/flambda/ref_to_variables.ml[59,2773+6]..[59,2773+12])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[59,2773+13]..[59,2773+51])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[59,2773+14]..[59,2773+18])
                                    Ppat_var "cond" (middle_end/flambda/ref_to_variables.ml[59,2773+14]..[59,2773+18])
                                  pattern (middle_end/flambda/ref_to_variables.ml[59,2773+20]..[59,2773+50])
                                    Ppat_record Closed
                                    [
                                      "consts" (middle_end/flambda/ref_to_variables.ml[59,2773+22]..[59,2773+28]) ghost
                                        pattern (middle_end/flambda/ref_to_variables.ml[59,2773+22]..[59,2773+28])
                                          Ppat_var "consts" (middle_end/flambda/ref_to_variables.ml[59,2773+22]..[59,2773+28])
                                      "blocks" (middle_end/flambda/ref_to_variables.ml[59,2773+30]..[59,2773+36]) ghost
                                        pattern (middle_end/flambda/ref_to_variables.ml[59,2773+30]..[59,2773+36])
                                          Ppat_var "blocks" (middle_end/flambda/ref_to_variables.ml[59,2773+30]..[59,2773+36])
                                      "failaction" (middle_end/flambda/ref_to_variables.ml[59,2773+38]..[59,2773+48]) ghost
                                        pattern (middle_end/flambda/ref_to_variables.ml[59,2773+38]..[59,2773+48])
                                          Ppat_var "failaction" (middle_end/flambda/ref_to_variables.ml[59,2773+38]..[59,2773+48])
                                    ]
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[60,2828+6]..[63,2983+33])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[60,2828+6]..[60,2828+39])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[60,2828+10]..[60,2828+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[60,2828+10]..[60,2828+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[60,2828+6]..[60,2828+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[60,2828+6]..[60,2828+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[60,2828+13]..[60,2828+39])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[60,2828+13]..[60,2828+29])
                                      Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[60,2828+13]..[60,2828+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[60,2828+30]..[60,2828+34])
                                          Pexp_ident "cond" (middle_end/flambda/ref_to_variables.ml[60,2828+30]..[60,2828+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[60,2828+35]..[60,2828+39])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[60,2828+35]..[60,2828+36])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[60,2828+35]..[60,2828+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[60,2828+36]..[60,2828+39])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[60,2828+36]..[60,2828+39])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[61,2869+6]..[63,2983+33])
                              Pexp_sequence
                              expression (middle_end/flambda/ref_to_variables.ml[61,2869+6]..[61,2869+55])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[61,2869+6]..[61,2869+15])
                                  Pexp_ident "List.iter" (middle_end/flambda/ref_to_variables.ml[61,2869+6]..[61,2869+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[61,2869+16]..[61,2869+48])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/ref_to_variables.ml[61,2869+21]..[61,2869+32])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/ref_to_variables.ml[61,2869+22]..[61,2869+23])
                                            Ppat_any
                                          pattern (middle_end/flambda/ref_to_variables.ml[61,2869+25]..[61,2869+31])
                                            Ppat_var "branch" (middle_end/flambda/ref_to_variables.ml[61,2869+25]..[61,2869+31])
                                        ]
                                      expression (middle_end/flambda/ref_to_variables.ml[61,2869+36]..[61,2869+47])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[61,2869+36]..[61,2869+40])
                                          Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[61,2869+36]..[61,2869+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[61,2869+41]..[61,2869+47])
                                              Pexp_ident "branch" (middle_end/flambda/ref_to_variables.ml[61,2869+41]..[61,2869+47])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[61,2869+49]..[61,2869+55])
                                      Pexp_ident "consts" (middle_end/flambda/ref_to_variables.ml[61,2869+49]..[61,2869+55])
                                ]
                              expression (middle_end/flambda/ref_to_variables.ml[62,2926+6]..[63,2983+33])
                                Pexp_sequence
                                expression (middle_end/flambda/ref_to_variables.ml[62,2926+6]..[62,2926+55])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[62,2926+6]..[62,2926+15])
                                    Pexp_ident "List.iter" (middle_end/flambda/ref_to_variables.ml[62,2926+6]..[62,2926+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[62,2926+16]..[62,2926+48])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/ref_to_variables.ml[62,2926+21]..[62,2926+32])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/ref_to_variables.ml[62,2926+22]..[62,2926+23])
                                              Ppat_any
                                            pattern (middle_end/flambda/ref_to_variables.ml[62,2926+25]..[62,2926+31])
                                              Ppat_var "branch" (middle_end/flambda/ref_to_variables.ml[62,2926+25]..[62,2926+31])
                                          ]
                                        expression (middle_end/flambda/ref_to_variables.ml[62,2926+36]..[62,2926+47])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[62,2926+36]..[62,2926+40])
                                            Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[62,2926+36]..[62,2926+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[62,2926+41]..[62,2926+47])
                                                Pexp_ident "branch" (middle_end/flambda/ref_to_variables.ml[62,2926+41]..[62,2926+47])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[62,2926+49]..[62,2926+55])
                                        Pexp_ident "blocks" (middle_end/flambda/ref_to_variables.ml[62,2926+49]..[62,2926+55])
                                  ]
                                expression (middle_end/flambda/ref_to_variables.ml[63,2983+6]..[63,2983+33])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[63,2983+6]..[63,2983+17])
                                    Pexp_ident "Option.iter" (middle_end/flambda/ref_to_variables.ml[63,2983+6]..[63,2983+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[63,2983+18]..[63,2983+22])
                                        Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[63,2983+18]..[63,2983+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[63,2983+23]..[63,2983+33])
                                        Pexp_ident "failaction" (middle_end/flambda/ref_to_variables.ml[63,2983+23]..[63,2983+33])
                                  ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[64,3017+6]..[64,3017+45])
                            Ppat_construct "String_switch" (middle_end/flambda/ref_to_variables.ml[64,3017+6]..[64,3017+19])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[64,3017+20]..[64,3017+45])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[64,3017+21]..[64,3017+25])
                                    Ppat_var "cond" (middle_end/flambda/ref_to_variables.ml[64,3017+21]..[64,3017+25])
                                  pattern (middle_end/flambda/ref_to_variables.ml[64,3017+27]..[64,3017+35])
                                    Ppat_var "branches" (middle_end/flambda/ref_to_variables.ml[64,3017+27]..[64,3017+35])
                                  pattern (middle_end/flambda/ref_to_variables.ml[64,3017+37]..[64,3017+44])
                                    Ppat_var "default" (middle_end/flambda/ref_to_variables.ml[64,3017+37]..[64,3017+44])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[65,3066+6]..[67,3166+30])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[65,3066+6]..[65,3066+39])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[65,3066+10]..[65,3066+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[65,3066+10]..[65,3066+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[65,3066+6]..[65,3066+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[65,3066+6]..[65,3066+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[65,3066+13]..[65,3066+39])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[65,3066+13]..[65,3066+29])
                                      Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[65,3066+13]..[65,3066+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[65,3066+30]..[65,3066+34])
                                          Pexp_ident "cond" (middle_end/flambda/ref_to_variables.ml[65,3066+30]..[65,3066+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[65,3066+35]..[65,3066+39])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[65,3066+35]..[65,3066+36])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[65,3066+35]..[65,3066+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[65,3066+36]..[65,3066+39])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[65,3066+36]..[65,3066+39])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[66,3107+6]..[67,3166+30])
                              Pexp_sequence
                              expression (middle_end/flambda/ref_to_variables.ml[66,3107+6]..[66,3107+57])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[66,3107+6]..[66,3107+15])
                                  Pexp_ident "List.iter" (middle_end/flambda/ref_to_variables.ml[66,3107+6]..[66,3107+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[66,3107+16]..[66,3107+48])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/ref_to_variables.ml[66,3107+21]..[66,3107+32])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/ref_to_variables.ml[66,3107+22]..[66,3107+23])
                                            Ppat_any
                                          pattern (middle_end/flambda/ref_to_variables.ml[66,3107+25]..[66,3107+31])
                                            Ppat_var "branch" (middle_end/flambda/ref_to_variables.ml[66,3107+25]..[66,3107+31])
                                        ]
                                      expression (middle_end/flambda/ref_to_variables.ml[66,3107+36]..[66,3107+47])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[66,3107+36]..[66,3107+40])
                                          Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[66,3107+36]..[66,3107+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[66,3107+41]..[66,3107+47])
                                              Pexp_ident "branch" (middle_end/flambda/ref_to_variables.ml[66,3107+41]..[66,3107+47])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[66,3107+49]..[66,3107+57])
                                      Pexp_ident "branches" (middle_end/flambda/ref_to_variables.ml[66,3107+49]..[66,3107+57])
                                ]
                              expression (middle_end/flambda/ref_to_variables.ml[67,3166+6]..[67,3166+30])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[67,3166+6]..[67,3166+17])
                                  Pexp_ident "Option.iter" (middle_end/flambda/ref_to_variables.ml[67,3166+6]..[67,3166+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[67,3166+18]..[67,3166+22])
                                      Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[67,3166+18]..[67,3166+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[67,3166+23]..[67,3166+30])
                                      Pexp_ident "default" (middle_end/flambda/ref_to_variables.ml[67,3166+23]..[67,3166+30])
                                ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[68,3197+6]..[68,3197+40])
                            Ppat_construct "Static_catch" (middle_end/flambda/ref_to_variables.ml[68,3197+6]..[68,3197+18])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[68,3197+19]..[68,3197+40])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[68,3197+20]..[68,3197+21])
                                    Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[68,3197+23]..[68,3197+24])
                                    Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[68,3197+26]..[68,3197+30])
                                    Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[68,3197+26]..[68,3197+30])
                                  pattern (middle_end/flambda/ref_to_variables.ml[68,3197+32]..[68,3197+39])
                                    Ppat_var "handler" (middle_end/flambda/ref_to_variables.ml[68,3197+32]..[68,3197+39])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[69,3241+6]..[70,3258+18])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[69,3241+6]..[69,3241+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[69,3241+6]..[69,3241+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[69,3241+6]..[69,3241+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[69,3241+11]..[69,3241+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[69,3241+11]..[69,3241+15])
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[70,3258+6]..[70,3258+18])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[70,3258+6]..[70,3258+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[70,3258+6]..[70,3258+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[70,3258+11]..[70,3258+18])
                                    Pexp_ident "handler" (middle_end/flambda/ref_to_variables.ml[70,3258+11]..[70,3258+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[71,3277+6]..[71,3277+33])
                            Ppat_construct "Try_with" (middle_end/flambda/ref_to_variables.ml[71,3277+6]..[71,3277+14])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[71,3277+15]..[71,3277+33])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[71,3277+16]..[71,3277+20])
                                    Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[71,3277+16]..[71,3277+20])
                                  pattern (middle_end/flambda/ref_to_variables.ml[71,3277+22]..[71,3277+23])
                                    Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[71,3277+25]..[71,3277+32])
                                    Ppat_var "handler" (middle_end/flambda/ref_to_variables.ml[71,3277+25]..[71,3277+32])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[72,3314+6]..[73,3331+18])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[72,3314+6]..[72,3314+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[72,3314+6]..[72,3314+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[72,3314+6]..[72,3314+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[72,3314+11]..[72,3314+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[72,3314+11]..[72,3314+15])
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[73,3331+6]..[73,3331+18])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[73,3331+6]..[73,3331+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[73,3331+6]..[73,3331+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[73,3331+11]..[73,3331+18])
                                    Pexp_ident "handler" (middle_end/flambda/ref_to_variables.ml[73,3331+11]..[73,3331+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[74,3350+6]..[74,3350+24])
                            Ppat_construct "While" (middle_end/flambda/ref_to_variables.ml[74,3350+6]..[74,3350+11])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[74,3350+12]..[74,3350+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[74,3350+13]..[74,3350+17])
                                    Ppat_var "cond" (middle_end/flambda/ref_to_variables.ml[74,3350+13]..[74,3350+17])
                                  pattern (middle_end/flambda/ref_to_variables.ml[74,3350+19]..[74,3350+23])
                                    Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[74,3350+19]..[74,3350+23])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[75,3378+6]..[76,3395+15])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[75,3378+6]..[75,3378+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[75,3378+6]..[75,3378+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[75,3378+6]..[75,3378+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[75,3378+11]..[75,3378+15])
                                    Pexp_ident "cond" (middle_end/flambda/ref_to_variables.ml[75,3378+11]..[75,3378+15])
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[76,3395+6]..[76,3395+15])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[76,3395+6]..[76,3395+10])
                                Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[76,3395+6]..[76,3395+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[76,3395+11]..[76,3395+15])
                                    Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[76,3395+11]..[76,3395+15])
                              ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[77,3411+6]..[77,3411+71])
                            Ppat_construct "For" (middle_end/flambda/ref_to_variables.ml[77,3411+6]..[77,3411+9])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[77,3411+10]..[77,3411+71])
                                Ppat_record Closed
                                [
                                  "bound_var" (middle_end/flambda/ref_to_variables.ml[77,3411+12]..[77,3411+21])
                                    pattern (middle_end/flambda/ref_to_variables.ml[77,3411+24]..[77,3411+25])
                                      Ppat_any
                                  "from_value" (middle_end/flambda/ref_to_variables.ml[77,3411+27]..[77,3411+37]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[77,3411+27]..[77,3411+37])
                                      Ppat_var "from_value" (middle_end/flambda/ref_to_variables.ml[77,3411+27]..[77,3411+37])
                                  "to_value" (middle_end/flambda/ref_to_variables.ml[77,3411+39]..[77,3411+47]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[77,3411+39]..[77,3411+47])
                                      Ppat_var "to_value" (middle_end/flambda/ref_to_variables.ml[77,3411+39]..[77,3411+47])
                                  "direction" (middle_end/flambda/ref_to_variables.ml[77,3411+49]..[77,3411+58])
                                    pattern (middle_end/flambda/ref_to_variables.ml[77,3411+61]..[77,3411+62])
                                      Ppat_any
                                  "body" (middle_end/flambda/ref_to_variables.ml[77,3411+64]..[77,3411+68]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[77,3411+64]..[77,3411+68])
                                      Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[77,3411+64]..[77,3411+68])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[78,3486+6]..[80,3578+15])
                            Pexp_sequence
                            expression (middle_end/flambda/ref_to_variables.ml[78,3486+6]..[78,3486+45])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[78,3486+10]..[78,3486+12])
                                Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[78,3486+10]..[78,3486+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[78,3486+6]..[78,3486+9])
                                    Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[78,3486+6]..[78,3486+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[78,3486+13]..[78,3486+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[78,3486+13]..[78,3486+29])
                                      Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[78,3486+13]..[78,3486+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[78,3486+30]..[78,3486+40])
                                          Pexp_ident "from_value" (middle_end/flambda/ref_to_variables.ml[78,3486+30]..[78,3486+40])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[78,3486+41]..[78,3486+45])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[78,3486+41]..[78,3486+42])
                                            Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[78,3486+41]..[78,3486+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[78,3486+42]..[78,3486+45])
                                                Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[78,3486+42]..[78,3486+45])
                                          ]
                                    ]
                              ]
                            expression (middle_end/flambda/ref_to_variables.ml[79,3533+6]..[80,3578+15])
                              Pexp_sequence
                              expression (middle_end/flambda/ref_to_variables.ml[79,3533+6]..[79,3533+43])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[79,3533+10]..[79,3533+12])
                                  Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[79,3533+10]..[79,3533+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[79,3533+6]..[79,3533+9])
                                      Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[79,3533+6]..[79,3533+9])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[79,3533+13]..[79,3533+43])
                                      Pexp_apply
                                      expression (middle_end/flambda/ref_to_variables.ml[79,3533+13]..[79,3533+29])
                                        Pexp_ident "Variable.Set.add" (middle_end/flambda/ref_to_variables.ml[79,3533+13]..[79,3533+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/ref_to_variables.ml[79,3533+30]..[79,3533+38])
                                            Pexp_ident "to_value" (middle_end/flambda/ref_to_variables.ml[79,3533+30]..[79,3533+38])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/ref_to_variables.ml[79,3533+39]..[79,3533+43])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[79,3533+39]..[79,3533+40])
                                              Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[79,3533+39]..[79,3533+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[79,3533+40]..[79,3533+43])
                                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[79,3533+40]..[79,3533+43])
                                            ]
                                      ]
                                ]
                              expression (middle_end/flambda/ref_to_variables.ml[80,3578+6]..[80,3578+15])
                                Pexp_apply
                                expression (middle_end/flambda/ref_to_variables.ml[80,3578+6]..[80,3578+10])
                                  Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[80,3578+6]..[80,3578+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/ref_to_variables.ml[80,3578+11]..[80,3578+15])
                                      Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[80,3578+11]..[80,3578+15])
                                ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[81,3594+6]..[81,3594+28])
                            Ppat_construct "Static_raise" (middle_end/flambda/ref_to_variables.ml[81,3594+6]..[81,3594+18])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[81,3594+19]..[81,3594+28])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/ref_to_variables.ml[81,3594+20]..[81,3594+21])
                                    Ppat_any
                                  pattern (middle_end/flambda/ref_to_variables.ml[81,3594+23]..[81,3594+27])
                                    Ppat_var "args" (middle_end/flambda/ref_to_variables.ml[81,3594+23]..[81,3594+27])
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[82,3626+6]..[82,3626+64])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[82,3626+10]..[82,3626+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[82,3626+10]..[82,3626+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[82,3626+6]..[82,3626+9])
                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[82,3626+6]..[82,3626+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[82,3626+13]..[82,3626+64])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[82,3626+13]..[82,3626+31])
                                    Pexp_ident "Variable.Set.union" (middle_end/flambda/ref_to_variables.ml[82,3626+13]..[82,3626+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[82,3626+32]..[82,3626+59])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[82,3626+33]..[82,3626+53])
                                          Pexp_ident "Variable.Set.of_list" (middle_end/flambda/ref_to_variables.ml[82,3626+33]..[82,3626+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[82,3626+54]..[82,3626+58])
                                              Pexp_ident "args" (middle_end/flambda/ref_to_variables.ml[82,3626+54]..[82,3626+58])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[82,3626+60]..[82,3626+64])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[82,3626+60]..[82,3626+61])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[82,3626+60]..[82,3626+61])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[82,3626+61]..[82,3626+64])
                                              Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[82,3626+61]..[82,3626+64])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[83,3691+6]..[83,3691+54])
                            Ppat_or
                            pattern (middle_end/flambda/ref_to_variables.ml[83,3691+6]..[83,3691+43])
                              Ppat_or
                              pattern (middle_end/flambda/ref_to_variables.ml[83,3691+6]..[83,3691+34])
                                Ppat_or
                                pattern (middle_end/flambda/ref_to_variables.ml[83,3691+6]..[83,3691+24])
                                  Ppat_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[83,3691+6]..[83,3691+24])
                                  None
                                pattern (middle_end/flambda/ref_to_variables.ml[83,3691+27]..[83,3691+34])
                                  Ppat_construct "Apply" (middle_end/flambda/ref_to_variables.ml[83,3691+27]..[83,3691+32])
                                  Some
                                    []
                                    pattern (middle_end/flambda/ref_to_variables.ml[83,3691+33]..[83,3691+34])
                                      Ppat_any
                              pattern (middle_end/flambda/ref_to_variables.ml[83,3691+37]..[83,3691+43])
                                Ppat_construct "Send" (middle_end/flambda/ref_to_variables.ml[83,3691+37]..[83,3691+41])
                                Some
                                  []
                                  pattern (middle_end/flambda/ref_to_variables.ml[83,3691+42]..[83,3691+43])
                                    Ppat_any
                            pattern (middle_end/flambda/ref_to_variables.ml[83,3691+46]..[83,3691+54])
                              Ppat_construct "Assign" (middle_end/flambda/ref_to_variables.ml[83,3691+46]..[83,3691+52])
                              Some
                                []
                                pattern (middle_end/flambda/ref_to_variables.ml[83,3691+53]..[83,3691+54])
                                  Ppat_any
                          expression (middle_end/flambda/ref_to_variables.ml[84,3749+6]..[84,3749+66])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[84,3749+10]..[84,3749+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[84,3749+10]..[84,3749+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[84,3749+6]..[84,3749+9])
                                  Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[84,3749+6]..[84,3749+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[84,3749+13]..[84,3749+66])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[84,3749+13]..[84,3749+31])
                                    Pexp_ident "Variable.Set.union" (middle_end/flambda/ref_to_variables.ml[84,3749+13]..[84,3749+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[84,3749+32]..[84,3749+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[84,3749+32]..[84,3749+33])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[84,3749+32]..[84,3749+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[84,3749+33]..[84,3749+36])
                                              Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[84,3749+33]..[84,3749+36])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[84,3749+37]..[84,3749+66])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[84,3749+38]..[84,3749+60])
                                          Pexp_ident "Flambda.free_variables" (middle_end/flambda/ref_to_variables.ml[84,3749+38]..[84,3749+60])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[84,3749+61]..[84,3749+65])
                                              Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[84,3749+61]..[84,3749+65])
                                        ]
                                  ]
                            ]
                      ]
              ]
              expression (middle_end/flambda/ref_to_variables.ml[86,3821+2]..[87,3834+6])
                Pexp_sequence
                expression (middle_end/flambda/ref_to_variables.ml[86,3821+2]..[86,3821+11])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[86,3821+2]..[86,3821+6])
                    Pexp_ident "loop" (middle_end/flambda/ref_to_variables.ml[86,3821+2]..[86,3821+6])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[86,3821+7]..[86,3821+11])
                        Pexp_ident "tree" (middle_end/flambda/ref_to_variables.ml[86,3821+7]..[86,3821+11])
                  ]
                expression (middle_end/flambda/ref_to_variables.ml[87,3834+2]..[87,3834+6])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[87,3834+2]..[87,3834+3])
                    Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[87,3834+2]..[87,3834+3])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[87,3834+3]..[87,3834+6])
                        Pexp_ident "set" (middle_end/flambda/ref_to_variables.ml[87,3834+3]..[87,3834+6])
                  ]
    ]
  structure_item (middle_end/flambda/ref_to_variables.ml[89,3842+0]..[100,4210+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/ref_to_variables.ml[89,3842+4]..[89,3842+28])
          Ppat_var "variables_containing_ref" (middle_end/flambda/ref_to_variables.ml[89,3842+4]..[89,3842+28])
        expression (middle_end/flambda/ref_to_variables.ml[89,3842+29]..[100,4210+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/ref_to_variables.ml[89,3842+29]..[89,3842+45])
            Ppat_constraint
            pattern (middle_end/flambda/ref_to_variables.ml[89,3842+30]..[89,3842+34])
              Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[89,3842+30]..[89,3842+34])
            core_type (middle_end/flambda/ref_to_variables.ml[89,3842+35]..[89,3842+44])
              Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[89,3842+35]..[89,3842+44])
              []
          expression (middle_end/flambda/ref_to_variables.ml[90,3890+2]..[100,4210+6])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/ref_to_variables.ml[90,3890+6]..[90,3890+9])
                  Ppat_var "map" (middle_end/flambda/ref_to_variables.ml[90,3890+6]..[90,3890+9])
                expression (middle_end/flambda/ref_to_variables.ml[90,3890+12]..[90,3890+34])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[90,3890+12]..[90,3890+15])
                    Pexp_ident "ref" (middle_end/flambda/ref_to_variables.ml[90,3890+12]..[90,3890+15])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[90,3890+16]..[90,3890+34])
                        Pexp_ident "Variable.Map.empty" (middle_end/flambda/ref_to_variables.ml[90,3890+16]..[90,3890+34])
                  ]
            ]
            expression (middle_end/flambda/ref_to_variables.ml[91,3928+2]..[100,4210+6])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/ref_to_variables.ml[91,3928+6]..[91,3928+9])
                    Ppat_var "aux" (middle_end/flambda/ref_to_variables.ml[91,3928+6]..[91,3928+9])
                  expression (middle_end/flambda/ref_to_variables.ml[91,3928+10]..[97,4142+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/ref_to_variables.ml[91,3928+10]..[91,3928+28])
                      Ppat_constraint
                      pattern (middle_end/flambda/ref_to_variables.ml[91,3928+11]..[91,3928+15])
                        Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[91,3928+11]..[91,3928+15])
                      core_type (middle_end/flambda/ref_to_variables.ml[91,3928+18]..[91,3928+27])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[91,3928+18]..[91,3928+27])
                        []
                    expression (middle_end/flambda/ref_to_variables.ml[92,3959+4]..[97,4142+13])
                      Pexp_match
                      expression (middle_end/flambda/ref_to_variables.ml[92,3959+10]..[92,3959+14])
                        Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[92,3959+10]..[92,3959+14])
                      [
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[93,3979+6]..[95,4072+11])
                            Ppat_construct "Let" (middle_end/flambda/ref_to_variables.ml[93,3979+6]..[93,3979+9])
                            Some
                              []
                              pattern (middle_end/flambda/ref_to_variables.ml[93,3979+10]..[95,4072+11])
                                Ppat_record Closed
                                [
                                  "var" (middle_end/flambda/ref_to_variables.ml[93,3979+12]..[93,3979+15]) ghost
                                    pattern (middle_end/flambda/ref_to_variables.ml[93,3979+12]..[93,3979+15])
                                      Ppat_var "var" (middle_end/flambda/ref_to_variables.ml[93,3979+12]..[93,3979+15])
                                  "defining_expr" (middle_end/flambda/ref_to_variables.ml[94,3996+12]..[94,3996+25])
                                    pattern (middle_end/flambda/ref_to_variables.ml[94,3996+28]..[94,3996+74])
                                      Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[94,3996+28]..[94,3996+32])
                                      Some
                                        []
                                        pattern (middle_end/flambda/ref_to_variables.ml[94,3996+32]..[94,3996+74])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/ref_to_variables.ml[94,3996+33]..[94,3996+67])
                                              Ppat_construct "Pmakeblock" (middle_end/flambda/ref_to_variables.ml[94,3996+33]..[94,3996+43])
                                              Some
                                                []
                                                pattern (middle_end/flambda/ref_to_variables.ml[94,3996+43]..[94,3996+67])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/ref_to_variables.ml[94,3996+44]..[94,3996+45])
                                                      Ppat_constant PConst_int (0,None)
                                                    pattern (middle_end/flambda/ref_to_variables.ml[94,3996+47]..[94,3996+63])
                                                      Ppat_construct "Asttypes.Mutable" (middle_end/flambda/ref_to_variables.ml[94,3996+47]..[94,3996+63])
                                                      None
                                                    pattern (middle_end/flambda/ref_to_variables.ml[94,3996+65]..[94,3996+66])
                                                      Ppat_any
                                                  ]
                                            pattern (middle_end/flambda/ref_to_variables.ml[94,3996+69]..[94,3996+70])
                                              Ppat_var "l" (middle_end/flambda/ref_to_variables.ml[94,3996+69]..[94,3996+70])
                                            pattern (middle_end/flambda/ref_to_variables.ml[94,3996+72]..[94,3996+73])
                                              Ppat_any
                                          ]
                                ]
                          expression (middle_end/flambda/ref_to_variables.ml[96,4087+6]..[96,4087+54])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[96,4087+10]..[96,4087+12])
                              Pexp_ident ":=" (middle_end/flambda/ref_to_variables.ml[96,4087+10]..[96,4087+12])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[96,4087+6]..[96,4087+9])
                                  Pexp_ident "map" (middle_end/flambda/ref_to_variables.ml[96,4087+6]..[96,4087+9])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[96,4087+13]..[96,4087+54])
                                  Pexp_apply
                                  expression (middle_end/flambda/ref_to_variables.ml[96,4087+13]..[96,4087+29])
                                    Pexp_ident "Variable.Map.add" (middle_end/flambda/ref_to_variables.ml[96,4087+13]..[96,4087+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[96,4087+30]..[96,4087+33])
                                        Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[96,4087+30]..[96,4087+33])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[96,4087+34]..[96,4087+49])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[96,4087+35]..[96,4087+46])
                                          Pexp_ident "List.length" (middle_end/flambda/ref_to_variables.ml[96,4087+35]..[96,4087+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[96,4087+47]..[96,4087+48])
                                              Pexp_ident "l" (middle_end/flambda/ref_to_variables.ml[96,4087+47]..[96,4087+48])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/ref_to_variables.ml[96,4087+50]..[96,4087+54])
                                        Pexp_apply
                                        expression (middle_end/flambda/ref_to_variables.ml[96,4087+50]..[96,4087+51])
                                          Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[96,4087+50]..[96,4087+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/ref_to_variables.ml[96,4087+51]..[96,4087+54])
                                              Pexp_ident "map" (middle_end/flambda/ref_to_variables.ml[96,4087+51]..[96,4087+54])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/ref_to_variables.ml[97,4142+6]..[97,4142+7])
                            Ppat_any
                          expression (middle_end/flambda/ref_to_variables.ml[97,4142+11]..[97,4142+13])
                            Pexp_construct "()" (middle_end/flambda/ref_to_variables.ml[97,4142+11]..[97,4142+13])
                            None
                      ]
              ]
              expression (middle_end/flambda/ref_to_variables.ml[99,4161+2]..[100,4210+6])
                Pexp_sequence
                expression (middle_end/flambda/ref_to_variables.ml[99,4161+2]..[99,4161+47])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[99,4161+2]..[99,4161+24])
                    Pexp_ident "Flambda_iterators.iter" (middle_end/flambda/ref_to_variables.ml[99,4161+2]..[99,4161+24])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[99,4161+25]..[99,4161+28])
                        Pexp_ident "aux" (middle_end/flambda/ref_to_variables.ml[99,4161+25]..[99,4161+28])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[99,4161+29]..[99,4161+42])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/ref_to_variables.ml[99,4161+34]..[99,4161+35])
                          Ppat_any
                        expression (middle_end/flambda/ref_to_variables.ml[99,4161+39]..[99,4161+41])
                          Pexp_construct "()" (middle_end/flambda/ref_to_variables.ml[99,4161+39]..[99,4161+41])
                          None
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[99,4161+43]..[99,4161+47])
                        Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[99,4161+43]..[99,4161+47])
                  ]
                expression (middle_end/flambda/ref_to_variables.ml[100,4210+2]..[100,4210+6])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[100,4210+2]..[100,4210+3])
                    Pexp_ident "!" (middle_end/flambda/ref_to_variables.ml[100,4210+2]..[100,4210+3])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[100,4210+3]..[100,4210+6])
                        Pexp_ident "map" (middle_end/flambda/ref_to_variables.ml[100,4210+3]..[100,4210+6])
                  ]
    ]
  structure_item (middle_end/flambda/ref_to_variables.ml[102,4218+0]..[195,7912+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/ref_to_variables.ml[102,4218+4]..[102,4218+25])
          Ppat_var "eliminate_ref_of_expr" (middle_end/flambda/ref_to_variables.ml[102,4218+4]..[102,4218+25])
        expression (middle_end/flambda/ref_to_variables.ml[102,4218+26]..[195,7912+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/ref_to_variables.ml[102,4218+26]..[102,4218+30])
            Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[102,4218+26]..[102,4218+30])
          expression (middle_end/flambda/ref_to_variables.ml[103,4251+2]..[195,7912+44])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/ref_to_variables.ml[103,4251+6]..[103,4251+43])
                  Ppat_var "variables_not_used_as_local_reference" (middle_end/flambda/ref_to_variables.ml[103,4251+6]..[103,4251+43])
                expression (middle_end/flambda/ref_to_variables.ml[104,4297+4]..[104,4297+46])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[104,4297+4]..[104,4297+41])
                    Pexp_ident "variables_not_used_as_local_reference" (middle_end/flambda/ref_to_variables.ml[104,4297+4]..[104,4297+41])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[104,4297+42]..[104,4297+46])
                        Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[104,4297+42]..[104,4297+46])
                  ]
            ]
            expression (middle_end/flambda/ref_to_variables.ml[106,4349+2]..[195,7912+44])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/ref_to_variables.ml[106,4349+6]..[106,4349+27])
                    Ppat_var "convertible_variables" (middle_end/flambda/ref_to_variables.ml[106,4349+6]..[106,4349+27])
                  expression (middle_end/flambda/ref_to_variables.ml[107,4379+4]..[110,4493+37])
                    Pexp_apply
                    expression (middle_end/flambda/ref_to_variables.ml[107,4379+4]..[107,4379+23])
                      Pexp_ident "Variable.Map.filter" (middle_end/flambda/ref_to_variables.ml[107,4379+4]..[107,4379+23])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/ref_to_variables.ml[108,4403+6]..[109,4421+71])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/ref_to_variables.ml[108,4403+11]..[108,4403+12])
                            Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[108,4403+11]..[108,4403+12])
                          expression (middle_end/flambda/ref_to_variables.ml[108,4403+13]..[109,4421+70]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/ref_to_variables.ml[108,4403+13]..[108,4403+14])
                              Ppat_any
                            expression (middle_end/flambda/ref_to_variables.ml[109,4421+8]..[109,4421+70])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[109,4421+8]..[109,4421+11])
                                Pexp_ident "not" (middle_end/flambda/ref_to_variables.ml[109,4421+8]..[109,4421+11])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[109,4421+12]..[109,4421+70])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[109,4421+13]..[109,4421+29])
                                      Pexp_ident "Variable.Set.mem" (middle_end/flambda/ref_to_variables.ml[109,4421+13]..[109,4421+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[109,4421+30]..[109,4421+31])
                                          Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[109,4421+30]..[109,4421+31])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[109,4421+32]..[109,4421+69])
                                          Pexp_ident "variables_not_used_as_local_reference" (middle_end/flambda/ref_to_variables.ml[109,4421+32]..[109,4421+69])
                                    ]
                              ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/ref_to_variables.ml[110,4493+6]..[110,4493+37])
                          Pexp_apply
                          expression (middle_end/flambda/ref_to_variables.ml[110,4493+7]..[110,4493+31])
                            Pexp_ident "variables_containing_ref" (middle_end/flambda/ref_to_variables.ml[110,4493+7]..[110,4493+31])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/ref_to_variables.ml[110,4493+32]..[110,4493+36])
                                Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[110,4493+32]..[110,4493+36])
                          ]
                    ]
              ]
              expression (middle_end/flambda/ref_to_variables.ml[112,4536+2]..[195,7912+44])
                Pexp_ifthenelse
                expression (middle_end/flambda/ref_to_variables.ml[112,4536+5]..[112,4536+52])
                  Pexp_apply
                  expression (middle_end/flambda/ref_to_variables.ml[112,4536+49]..[112,4536+50])
                    Pexp_ident "=" (middle_end/flambda/ref_to_variables.ml[112,4536+49]..[112,4536+50])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[112,4536+5]..[112,4536+48])
                        Pexp_apply
                        expression (middle_end/flambda/ref_to_variables.ml[112,4536+5]..[112,4536+26])
                          Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/ref_to_variables.ml[112,4536+5]..[112,4536+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/ref_to_variables.ml[112,4536+27]..[112,4536+48])
                              Pexp_ident "convertible_variables" (middle_end/flambda/ref_to_variables.ml[112,4536+27]..[112,4536+48])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/ref_to_variables.ml[112,4536+51]..[112,4536+52])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (middle_end/flambda/ref_to_variables.ml[112,4536+58]..[112,4536+62])
                  Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[112,4536+58]..[112,4536+62])
                Some
                  expression (middle_end/flambda/ref_to_variables.ml[114,4606+4]..[195,7912+44])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/ref_to_variables.ml[114,4606+8]..[114,4606+29])
                          Ppat_var "convertible_variables" (middle_end/flambda/ref_to_variables.ml[114,4606+8]..[114,4606+29])
                        expression (middle_end/flambda/ref_to_variables.ml[115,4638+6]..[117,4755+29])
                          Pexp_apply
                          expression (middle_end/flambda/ref_to_variables.ml[115,4638+6]..[115,4638+23])
                            Pexp_ident "Variable.Map.mapi" (middle_end/flambda/ref_to_variables.ml[115,4638+6]..[115,4638+23])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/ref_to_variables.ml[115,4638+24]..[116,4677+77])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/ref_to_variables.ml[115,4638+29]..[115,4638+30])
                                  Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[115,4638+29]..[115,4638+30])
                                expression (middle_end/flambda/ref_to_variables.ml[115,4638+31]..[116,4677+76]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/ref_to_variables.ml[115,4638+31]..[115,4638+35])
                                    Ppat_var "size" (middle_end/flambda/ref_to_variables.ml[115,4638+31]..[115,4638+35])
                                  expression (middle_end/flambda/ref_to_variables.ml[116,4677+10]..[116,4677+76])
                                    Pexp_apply
                                    expression (middle_end/flambda/ref_to_variables.ml[116,4677+10]..[116,4677+20])
                                      Pexp_ident "Array.init" (middle_end/flambda/ref_to_variables.ml[116,4677+10]..[116,4677+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[116,4677+21]..[116,4677+25])
                                          Pexp_ident "size" (middle_end/flambda/ref_to_variables.ml[116,4677+21]..[116,4677+25])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/ref_to_variables.ml[116,4677+26]..[116,4677+76])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/ref_to_variables.ml[116,4677+31]..[116,4677+32])
                                            Ppat_any
                                          expression (middle_end/flambda/ref_to_variables.ml[116,4677+36]..[116,4677+75])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[116,4677+36]..[116,4677+73])
                                              Pexp_ident "Mutable_variable.create_from_variable" (middle_end/flambda/ref_to_variables.ml[116,4677+36]..[116,4677+73])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[116,4677+74]..[116,4677+75])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[116,4677+74]..[116,4677+75])
                                            ]
                                    ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/ref_to_variables.ml[117,4755+8]..[117,4755+29])
                                Pexp_ident "convertible_variables" (middle_end/flambda/ref_to_variables.ml[117,4755+8]..[117,4755+29])
                          ]
                    ]
                    expression (middle_end/flambda/ref_to_variables.ml[119,4792+4]..[195,7912+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/ref_to_variables.ml[119,4792+8]..[119,4792+28])
                            Ppat_var "convertible_variable" (middle_end/flambda/ref_to_variables.ml[119,4792+8]..[119,4792+28])
                          expression (middle_end/flambda/ref_to_variables.ml[119,4792+29]..[119,4792+73]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/ref_to_variables.ml[119,4792+29]..[119,4792+30])
                              Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[119,4792+29]..[119,4792+30])
                            expression (middle_end/flambda/ref_to_variables.ml[119,4792+33]..[119,4792+73])
                              Pexp_apply
                              expression (middle_end/flambda/ref_to_variables.ml[119,4792+33]..[119,4792+49])
                                Pexp_ident "Variable.Map.mem" (middle_end/flambda/ref_to_variables.ml[119,4792+33]..[119,4792+49])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[119,4792+50]..[119,4792+51])
                                    Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[119,4792+50]..[119,4792+51])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/ref_to_variables.ml[119,4792+52]..[119,4792+73])
                                    Pexp_ident "convertible_variables" (middle_end/flambda/ref_to_variables.ml[119,4792+52]..[119,4792+73])
                              ]
                      ]
                      expression (middle_end/flambda/ref_to_variables.ml[120,4869+4]..[195,7912+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/ref_to_variables.ml[120,4869+8]..[120,4869+20])
                              Ppat_var "get_variable" (middle_end/flambda/ref_to_variables.ml[120,4869+8]..[120,4869+20])
                            expression (middle_end/flambda/ref_to_variables.ml[120,4869+21]..[125,5119+47]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/ref_to_variables.ml[120,4869+21]..[120,4869+22])
                                Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[120,4869+21]..[120,4869+22])
                              expression (middle_end/flambda/ref_to_variables.ml[120,4869+23]..[125,5119+47]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/ref_to_variables.ml[120,4869+23]..[120,4869+28])
                                  Ppat_var "field" (middle_end/flambda/ref_to_variables.ml[120,4869+23]..[120,4869+28])
                                expression (middle_end/flambda/ref_to_variables.ml[121,4900+6]..[125,5119+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/ref_to_variables.ml[121,4900+10]..[121,4900+13])
                                        Ppat_var "arr" (middle_end/flambda/ref_to_variables.ml[121,4900+10]..[121,4900+13])
                                      expression (middle_end/flambda/ref_to_variables.ml[121,4900+16]..[122,4962+38])
                                        Pexp_try
                                        expression (middle_end/flambda/ref_to_variables.ml[121,4900+20]..[121,4900+61])
                                          Pexp_apply
                                          expression (middle_end/flambda/ref_to_variables.ml[121,4900+20]..[121,4900+37])
                                            Pexp_ident "Variable.Map.find" (middle_end/flambda/ref_to_variables.ml[121,4900+20]..[121,4900+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[121,4900+38]..[121,4900+39])
                                                Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[121,4900+38]..[121,4900+39])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/ref_to_variables.ml[121,4900+40]..[121,4900+61])
                                                Pexp_ident "convertible_variables" (middle_end/flambda/ref_to_variables.ml[121,4900+40]..[121,4900+61])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/ref_to_variables.ml[122,4962+13]..[122,4962+22])
                                              Ppat_construct "Not_found" (middle_end/flambda/ref_to_variables.ml[122,4962+13]..[122,4962+22])
                                              None
                                            expression (middle_end/flambda/ref_to_variables.ml[122,4962+26]..[122,4962+38])
                                              Pexp_assert
                                              expression (middle_end/flambda/ref_to_variables.ml[122,4962+33]..[122,4962+38])
                                                Pexp_construct "false" (middle_end/flambda/ref_to_variables.ml[122,4962+33]..[122,4962+38])
                                                None
                                        ]
                                  ]
                                  expression (middle_end/flambda/ref_to_variables.ml[123,5004+6]..[125,5119+47])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/ref_to_variables.ml[123,5004+9]..[123,5004+34])
                                      Pexp_apply
                                      expression (middle_end/flambda/ref_to_variables.ml[123,5004+26]..[123,5004+28])
                                        Pexp_ident "<=" (middle_end/flambda/ref_to_variables.ml[123,5004+26]..[123,5004+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/ref_to_variables.ml[123,5004+9]..[123,5004+25])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[123,5004+9]..[123,5004+21])
                                              Pexp_ident "Array.length" (middle_end/flambda/ref_to_variables.ml[123,5004+9]..[123,5004+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[123,5004+22]..[123,5004+25])
                                                  Pexp_ident "arr" (middle_end/flambda/ref_to_variables.ml[123,5004+22]..[123,5004+25])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/ref_to_variables.ml[123,5004+29]..[123,5004+34])
                                            Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[123,5004+29]..[123,5004+34])
                                      ]
                                    expression (middle_end/flambda/ref_to_variables.ml[124,5039+11]..[124,5039+15])
                                      Pexp_construct "None" (middle_end/flambda/ref_to_variables.ml[124,5039+11]..[124,5039+15])
                                      None
                                    Some
                                      expression (middle_end/flambda/ref_to_variables.ml[125,5119+11]..[125,5119+47])
                                        Pexp_construct "Some" (middle_end/flambda/ref_to_variables.ml[125,5119+11]..[125,5119+15])
                                        Some
                                          expression (middle_end/flambda/ref_to_variables.ml[125,5119+16]..[125,5119+47])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/ref_to_variables.ml[125,5119+17]..[125,5119+28])
                                                Pexp_apply
                                                expression (middle_end/flambda/ref_to_variables.ml[125,5119+17]..[125,5119+28]) ghost
                                                  Pexp_ident "Array.get" (middle_end/flambda/ref_to_variables.ml[125,5119+17]..[125,5119+28]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/ref_to_variables.ml[125,5119+17]..[125,5119+20])
                                                      Pexp_ident "arr" (middle_end/flambda/ref_to_variables.ml[125,5119+17]..[125,5119+20])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/ref_to_variables.ml[125,5119+22]..[125,5119+27])
                                                      Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[125,5119+22]..[125,5119+27])
                                                ]
                                              expression (middle_end/flambda/ref_to_variables.ml[125,5119+30]..[125,5119+46])
                                                Pexp_apply
                                                expression (middle_end/flambda/ref_to_variables.ml[125,5119+30]..[125,5119+42])
                                                  Pexp_ident "Array.length" (middle_end/flambda/ref_to_variables.ml[125,5119+30]..[125,5119+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/ref_to_variables.ml[125,5119+43]..[125,5119+46])
                                                      Pexp_ident "arr" (middle_end/flambda/ref_to_variables.ml[125,5119+43]..[125,5119+46])
                                                ]
                                            ]
                        ]
                        expression (middle_end/flambda/ref_to_variables.ml[127,5174+4]..[195,7912+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/ref_to_variables.ml[127,5174+8]..[127,5174+11])
                                Ppat_var "aux" (middle_end/flambda/ref_to_variables.ml[127,5174+8]..[127,5174+11])
                              expression (middle_end/flambda/ref_to_variables.ml[127,5174+12]..[155,6264+12]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/ref_to_variables.ml[127,5174+12]..[127,5174+30])
                                  Ppat_constraint
                                  pattern (middle_end/flambda/ref_to_variables.ml[127,5174+13]..[127,5174+17])
                                    Ppat_var "flam" (middle_end/flambda/ref_to_variables.ml[127,5174+13]..[127,5174+17])
                                  core_type (middle_end/flambda/ref_to_variables.ml[127,5174+20]..[127,5174+29])
                                    Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[127,5174+20]..[127,5174+29])
                                    []
                                expression (middle_end/flambda/ref_to_variables.ml[127,5174+31]..[155,6264+12])
                                  Pexp_constraint
                                  expression (middle_end/flambda/ref_to_variables.ml[128,5219+6]..[155,6264+12])
                                    Pexp_match
                                    expression (middle_end/flambda/ref_to_variables.ml[128,5219+12]..[128,5219+16])
                                      Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[128,5219+12]..[128,5219+16])
                                    [
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[129,5241+8]..[131,5341+20])
                                          Ppat_construct "Let" (middle_end/flambda/ref_to_variables.ml[129,5241+8]..[129,5241+11])
                                          Some
                                            []
                                            pattern (middle_end/flambda/ref_to_variables.ml[129,5241+12]..[131,5341+20])
                                              Ppat_record Closed
                                              [
                                                "var" (middle_end/flambda/ref_to_variables.ml[129,5241+14]..[129,5241+17]) ghost
                                                  pattern (middle_end/flambda/ref_to_variables.ml[129,5241+14]..[129,5241+17])
                                                    Ppat_var "var" (middle_end/flambda/ref_to_variables.ml[129,5241+14]..[129,5241+17])
                                                "defining_expr" (middle_end/flambda/ref_to_variables.ml[130,5260+14]..[130,5260+27])
                                                  pattern (middle_end/flambda/ref_to_variables.ml[130,5260+30]..[130,5260+79])
                                                    Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[130,5260+30]..[130,5260+34])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/ref_to_variables.ml[130,5260+34]..[130,5260+79])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/ref_to_variables.ml[130,5260+35]..[130,5260+73])
                                                            Ppat_construct "Pmakeblock" (middle_end/flambda/ref_to_variables.ml[130,5260+35]..[130,5260+45])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/ref_to_variables.ml[130,5260+45]..[130,5260+73])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[130,5260+46]..[130,5260+47])
                                                                    Ppat_constant PConst_int (0,None)
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[130,5260+49]..[130,5260+65])
                                                                    Ppat_construct "Asttypes.Mutable" (middle_end/flambda/ref_to_variables.ml[130,5260+49]..[130,5260+65])
                                                                    None
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[130,5260+67]..[130,5260+72])
                                                                    Ppat_var "shape" (middle_end/flambda/ref_to_variables.ml[130,5260+67]..[130,5260+72])
                                                                ]
                                                          pattern (middle_end/flambda/ref_to_variables.ml[130,5260+75]..[130,5260+76])
                                                            Ppat_var "l" (middle_end/flambda/ref_to_variables.ml[130,5260+75]..[130,5260+76])
                                                          pattern (middle_end/flambda/ref_to_variables.ml[130,5260+77]..[130,5260+78])
                                                            Ppat_any
                                                        ]
                                                "body" (middle_end/flambda/ref_to_variables.ml[131,5341+14]..[131,5341+18]) ghost
                                                  pattern (middle_end/flambda/ref_to_variables.ml[131,5341+14]..[131,5341+18])
                                                    Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[131,5341+14]..[131,5341+18])
                                              ]
                                        <when>
                                          expression (middle_end/flambda/ref_to_variables.ml[132,5362+13]..[132,5362+37])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[132,5362+13]..[132,5362+33])
                                              Pexp_ident "convertible_variable" (middle_end/flambda/ref_to_variables.ml[132,5362+13]..[132,5362+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[132,5362+34]..[132,5362+37])
                                                  Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[132,5362+34]..[132,5362+37])
                                            ]
                                        expression (middle_end/flambda/ref_to_variables.ml[133,5403+8]..[148,6006+12])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/ref_to_variables.ml[133,5403+12]..[133,5403+17])
                                                Ppat_var "shape" (middle_end/flambda/ref_to_variables.ml[133,5403+12]..[133,5403+17])
                                              expression (middle_end/flambda/ref_to_variables.ml[133,5403+20]..[135,5497+31])
                                                Pexp_match
                                                expression (middle_end/flambda/ref_to_variables.ml[133,5403+26]..[133,5403+31])
                                                  Pexp_ident "shape" (middle_end/flambda/ref_to_variables.ml[133,5403+26]..[133,5403+31])
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/ref_to_variables.ml[134,5440+12]..[134,5440+16])
                                                      Ppat_construct "None" (middle_end/flambda/ref_to_variables.ml[134,5440+12]..[134,5440+16])
                                                      None
                                                    expression (middle_end/flambda/ref_to_variables.ml[134,5440+20]..[134,5440+56])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/ref_to_variables.ml[134,5440+20]..[134,5440+28])
                                                        Pexp_ident "List.map" (middle_end/flambda/ref_to_variables.ml[134,5440+20]..[134,5440+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/ref_to_variables.ml[134,5440+29]..[134,5440+54])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/ref_to_variables.ml[134,5440+34]..[134,5440+35])
                                                              Ppat_any
                                                            expression (middle_end/flambda/ref_to_variables.ml[134,5440+39]..[134,5440+53])
                                                              Pexp_construct "Lambda.Pgenval" (middle_end/flambda/ref_to_variables.ml[134,5440+39]..[134,5440+53])
                                                              None
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/ref_to_variables.ml[134,5440+55]..[134,5440+56])
                                                            Pexp_ident "l" (middle_end/flambda/ref_to_variables.ml[134,5440+55]..[134,5440+56])
                                                      ]
                                                  <case>
                                                    pattern (middle_end/flambda/ref_to_variables.ml[135,5497+12]..[135,5497+22])
                                                      Ppat_construct "Some" (middle_end/flambda/ref_to_variables.ml[135,5497+12]..[135,5497+16])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/ref_to_variables.ml[135,5497+17]..[135,5497+22])
                                                          Ppat_var "shape" (middle_end/flambda/ref_to_variables.ml[135,5497+17]..[135,5497+22])
                                                    expression (middle_end/flambda/ref_to_variables.ml[135,5497+26]..[135,5497+31])
                                                      Pexp_ident "shape" (middle_end/flambda/ref_to_variables.ml[135,5497+26]..[135,5497+31])
                                                ]
                                          ]
                                          expression (middle_end/flambda/ref_to_variables.ml[137,5540+8]..[148,6006+12])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/ref_to_variables.ml[137,5540+12]..[137,5540+19])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/ref_to_variables.ml[137,5540+12]..[137,5540+13])
                                                      Ppat_any
                                                    pattern (middle_end/flambda/ref_to_variables.ml[137,5540+15]..[137,5540+19])
                                                      Ppat_var "expr" (middle_end/flambda/ref_to_variables.ml[137,5540+15]..[137,5540+19])
                                                  ]
                                                expression (middle_end/flambda/ref_to_variables.ml[138,5562+10]..[147,5974+28])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/ref_to_variables.ml[138,5562+10]..[138,5562+25])
                                                    Pexp_ident "List.fold_left2" (middle_end/flambda/ref_to_variables.ml[138,5562+10]..[138,5562+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[138,5562+26]..[146,5906+67])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/ref_to_variables.ml[138,5562+31]..[138,5562+43])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/ref_to_variables.ml[138,5562+32]..[138,5562+37])
                                                              Ppat_var "field" (middle_end/flambda/ref_to_variables.ml[138,5562+32]..[138,5562+37])
                                                            pattern (middle_end/flambda/ref_to_variables.ml[138,5562+38]..[138,5562+42])
                                                              Ppat_var "body" (middle_end/flambda/ref_to_variables.ml[138,5562+38]..[138,5562+42])
                                                          ]
                                                        expression (middle_end/flambda/ref_to_variables.ml[138,5562+44]..[146,5906+66]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/ref_to_variables.ml[138,5562+44]..[138,5562+48])
                                                            Ppat_var "init" (middle_end/flambda/ref_to_variables.ml[138,5562+44]..[138,5562+48])
                                                          expression (middle_end/flambda/ref_to_variables.ml[138,5562+49]..[146,5906+66]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/ref_to_variables.ml[138,5562+49]..[138,5562+53])
                                                              Ppat_var "kind" (middle_end/flambda/ref_to_variables.ml[138,5562+49]..[138,5562+53])
                                                            expression (middle_end/flambda/ref_to_variables.ml[139,5619+14]..[146,5906+66])
                                                              Pexp_match
                                                              expression (middle_end/flambda/ref_to_variables.ml[139,5619+20]..[139,5619+42])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/ref_to_variables.ml[139,5619+20]..[139,5619+32])
                                                                  Pexp_ident "get_variable" (middle_end/flambda/ref_to_variables.ml[139,5619+20]..[139,5619+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/ref_to_variables.ml[139,5619+33]..[139,5619+36])
                                                                      Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[139,5619+33]..[139,5619+36])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/ref_to_variables.ml[139,5619+37]..[139,5619+42])
                                                                      Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[139,5619+37]..[139,5619+42])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[140,5667+16]..[140,5667+20])
                                                                    Ppat_construct "None" (middle_end/flambda/ref_to_variables.ml[140,5667+16]..[140,5667+20])
                                                                    None
                                                                  expression (middle_end/flambda/ref_to_variables.ml[140,5667+24]..[140,5667+36])
                                                                    Pexp_assert
                                                                    expression (middle_end/flambda/ref_to_variables.ml[140,5667+31]..[140,5667+36])
                                                                      Pexp_construct "false" (middle_end/flambda/ref_to_variables.ml[140,5667+31]..[140,5667+36])
                                                                      None
                                                                <case>
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[141,5704+16]..[141,5704+35])
                                                                    Ppat_construct "Some" (middle_end/flambda/ref_to_variables.ml[141,5704+16]..[141,5704+20])
                                                                    Some
                                                                      []
                                                                      pattern (middle_end/flambda/ref_to_variables.ml[141,5704+21]..[141,5704+35])
Ppat_tuple
[
  pattern (middle_end/flambda/ref_to_variables.ml[141,5704+22]..[141,5704+31])
    Ppat_var "field_var" (middle_end/flambda/ref_to_variables.ml[141,5704+22]..[141,5704+31])
  pattern (middle_end/flambda/ref_to_variables.ml[141,5704+33]..[141,5704+34])
    Ppat_any
]
                                                                  expression (middle_end/flambda/ref_to_variables.ml[142,5743+16]..[146,5906+66])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/ref_to_variables.ml[142,5743+16]..[142,5743+23])
Pexp_apply
expression (middle_end/flambda/ref_to_variables.ml[142,5743+21]..[142,5743+22])
  Pexp_ident "+" (middle_end/flambda/ref_to_variables.ml[142,5743+21]..[142,5743+22])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/ref_to_variables.ml[142,5743+16]..[142,5743+21])
      Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[142,5743+16]..[142,5743+21])
  <arg>
  Nolabel
    expression (middle_end/flambda/ref_to_variables.ml[142,5743+22]..[142,5743+23])
      Pexp_constant PConst_int (1,None)
]
                                                                      expression (middle_end/flambda/ref_to_variables.ml[143,5768+16]..[146,5906+66])
Pexp_constraint
expression (middle_end/flambda/ref_to_variables.ml[143,5768+17]..[146,5906+53])
  Pexp_construct "Let_mutable" (middle_end/flambda/ref_to_variables.ml[143,5768+17]..[143,5768+28])
  Some
    expression (middle_end/flambda/ref_to_variables.ml[143,5768+29]..[146,5906+53])
      Pexp_record
      [
        "var" (middle_end/flambda/ref_to_variables.ml[143,5768+31]..[143,5768+34])
          expression (middle_end/flambda/ref_to_variables.ml[143,5768+37]..[143,5768+46])
            Pexp_ident "field_var" (middle_end/flambda/ref_to_variables.ml[143,5768+37]..[143,5768+46])
        "initial_value" (middle_end/flambda/ref_to_variables.ml[144,5816+31]..[144,5816+44])
          expression (middle_end/flambda/ref_to_variables.ml[144,5816+47]..[144,5816+51])
            Pexp_ident "init" (middle_end/flambda/ref_to_variables.ml[144,5816+47]..[144,5816+51])
        "body" (middle_end/flambda/ref_to_variables.ml[145,5869+31]..[145,5869+35]) ghost
          expression (middle_end/flambda/ref_to_variables.ml[145,5869+31]..[145,5869+35])
            Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[145,5869+31]..[145,5869+35])
        "contents_kind" (middle_end/flambda/ref_to_variables.ml[146,5906+31]..[146,5906+44])
          expression (middle_end/flambda/ref_to_variables.ml[146,5906+47]..[146,5906+51])
            Pexp_ident "kind" (middle_end/flambda/ref_to_variables.ml[146,5906+47]..[146,5906+51])
      ]
      None
core_type (middle_end/flambda/ref_to_variables.ml[146,5906+56]..[146,5906+65])
  Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[146,5906+56]..[146,5906+65])
  []
                                                                    ]
                                                              ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[147,5974+12]..[147,5974+20])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/ref_to_variables.ml[147,5974+13]..[147,5974+14])
                                                            Pexp_constant PConst_int (0,None)
                                                          expression (middle_end/flambda/ref_to_variables.ml[147,5974+15]..[147,5974+19])
                                                            Pexp_ident "body" (middle_end/flambda/ref_to_variables.ml[147,5974+15]..[147,5974+19])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[147,5974+21]..[147,5974+22])
                                                        Pexp_ident "l" (middle_end/flambda/ref_to_variables.ml[147,5974+21]..[147,5974+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[147,5974+23]..[147,5974+28])
                                                        Pexp_ident "shape" (middle_end/flambda/ref_to_variables.ml[147,5974+23]..[147,5974+28])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/ref_to_variables.ml[148,6006+8]..[148,6006+12])
                                              Pexp_ident "expr" (middle_end/flambda/ref_to_variables.ml[148,6006+8]..[148,6006+12])
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[154,6207+53])
                                          Ppat_or
                                          pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[154,6207+32])
                                            Ppat_or
                                            pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[154,6207+23])
                                              Ppat_or
                                              pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[154,6207+15])
                                                Ppat_or
                                                pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[153,6171+35])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[153,6171+18])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[152,6131+39])
                                                      Ppat_or
                                                      pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[152,6131+22])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[151,6084+46])
                                                          Ppat_or
                                                          pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[151,6084+28])
                                                            Ppat_or
                                                            pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[151,6084+17])
                                                              Ppat_or
                                                              pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[150,6049+34])
                                                                Ppat_or
                                                                pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[150,6049+24])
                                                                  Ppat_or
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[150,6049+16])
                                                                    Ppat_or
                                                                    pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[149,6019+29])
                                                                      Ppat_or
                                                                      pattern (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[149,6019+13])
Ppat_construct "Let" (middle_end/flambda/ref_to_variables.ml[149,6019+8]..[149,6019+11])
Some
  []
  pattern (middle_end/flambda/ref_to_variables.ml[149,6019+12]..[149,6019+13])
    Ppat_any
                                                                      pattern (middle_end/flambda/ref_to_variables.ml[149,6019+16]..[149,6019+29])
Ppat_construct "Let_mutable" (middle_end/flambda/ref_to_variables.ml[149,6019+16]..[149,6019+27])
Some
  []
  pattern (middle_end/flambda/ref_to_variables.ml[149,6019+28]..[149,6019+29])
    Ppat_any
                                                                    pattern (middle_end/flambda/ref_to_variables.ml[150,6049+8]..[150,6049+16])
                                                                      Ppat_construct "Assign" (middle_end/flambda/ref_to_variables.ml[150,6049+8]..[150,6049+14])
                                                                      Some
[]
pattern (middle_end/flambda/ref_to_variables.ml[150,6049+15]..[150,6049+16])
  Ppat_any
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[150,6049+19]..[150,6049+24])
                                                                    Ppat_construct "Var" (middle_end/flambda/ref_to_variables.ml[150,6049+19]..[150,6049+22])
                                                                    Some
                                                                      []
                                                                      pattern (middle_end/flambda/ref_to_variables.ml[150,6049+23]..[150,6049+24])
Ppat_any
                                                                pattern (middle_end/flambda/ref_to_variables.ml[150,6049+27]..[150,6049+34])
                                                                  Ppat_construct "Apply" (middle_end/flambda/ref_to_variables.ml[150,6049+27]..[150,6049+32])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/ref_to_variables.ml[150,6049+33]..[150,6049+34])
                                                                      Ppat_any
                                                              pattern (middle_end/flambda/ref_to_variables.ml[151,6084+8]..[151,6084+17])
                                                                Ppat_construct "Let_rec" (middle_end/flambda/ref_to_variables.ml[151,6084+8]..[151,6084+15])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/flambda/ref_to_variables.ml[151,6084+16]..[151,6084+17])
                                                                    Ppat_any
                                                            pattern (middle_end/flambda/ref_to_variables.ml[151,6084+20]..[151,6084+28])
                                                              Ppat_construct "Switch" (middle_end/flambda/ref_to_variables.ml[151,6084+20]..[151,6084+26])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/ref_to_variables.ml[151,6084+27]..[151,6084+28])
                                                                  Ppat_any
                                                          pattern (middle_end/flambda/ref_to_variables.ml[151,6084+31]..[151,6084+46])
                                                            Ppat_construct "String_switch" (middle_end/flambda/ref_to_variables.ml[151,6084+31]..[151,6084+44])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/ref_to_variables.ml[151,6084+45]..[151,6084+46])
                                                                Ppat_any
                                                        pattern (middle_end/flambda/ref_to_variables.ml[152,6131+8]..[152,6131+22])
                                                          Ppat_construct "Static_raise" (middle_end/flambda/ref_to_variables.ml[152,6131+8]..[152,6131+20])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/ref_to_variables.ml[152,6131+21]..[152,6131+22])
                                                              Ppat_any
                                                      pattern (middle_end/flambda/ref_to_variables.ml[152,6131+25]..[152,6131+39])
                                                        Ppat_construct "Static_catch" (middle_end/flambda/ref_to_variables.ml[152,6131+25]..[152,6131+37])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/ref_to_variables.ml[152,6131+38]..[152,6131+39])
                                                            Ppat_any
                                                    pattern (middle_end/flambda/ref_to_variables.ml[153,6171+8]..[153,6171+18])
                                                      Ppat_construct "Try_with" (middle_end/flambda/ref_to_variables.ml[153,6171+8]..[153,6171+16])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/ref_to_variables.ml[153,6171+17]..[153,6171+18])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/ref_to_variables.ml[153,6171+21]..[153,6171+35])
                                                    Ppat_construct "If_then_else" (middle_end/flambda/ref_to_variables.ml[153,6171+21]..[153,6171+33])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/ref_to_variables.ml[153,6171+34]..[153,6171+35])
                                                        Ppat_any
                                                pattern (middle_end/flambda/ref_to_variables.ml[154,6207+8]..[154,6207+15])
                                                  Ppat_construct "While" (middle_end/flambda/ref_to_variables.ml[154,6207+8]..[154,6207+13])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[154,6207+14]..[154,6207+15])
                                                      Ppat_any
                                              pattern (middle_end/flambda/ref_to_variables.ml[154,6207+18]..[154,6207+23])
                                                Ppat_construct "For" (middle_end/flambda/ref_to_variables.ml[154,6207+18]..[154,6207+21])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/ref_to_variables.ml[154,6207+22]..[154,6207+23])
                                                    Ppat_any
                                            pattern (middle_end/flambda/ref_to_variables.ml[154,6207+26]..[154,6207+32])
                                              Ppat_construct "Send" (middle_end/flambda/ref_to_variables.ml[154,6207+26]..[154,6207+30])
                                              Some
                                                []
                                                pattern (middle_end/flambda/ref_to_variables.ml[154,6207+31]..[154,6207+32])
                                                  Ppat_any
                                          pattern (middle_end/flambda/ref_to_variables.ml[154,6207+35]..[154,6207+53])
                                            Ppat_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[154,6207+35]..[154,6207+53])
                                            None
                                        expression (middle_end/flambda/ref_to_variables.ml[155,6264+8]..[155,6264+12])
                                          Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[155,6264+8]..[155,6264+12])
                                    ]
                                  core_type (middle_end/flambda/ref_to_variables.ml[127,5174+33]..[127,5174+42])
                                    Ptyp_constr "Flambda.t" (middle_end/flambda/ref_to_variables.ml[127,5174+33]..[127,5174+42])
                                    []
                            <def>
                              pattern (middle_end/flambda/ref_to_variables.ml[156,6277+8]..[156,6277+17])
                                Ppat_var "aux_named" (middle_end/flambda/ref_to_variables.ml[156,6277+8]..[156,6277+17])
                              expression (middle_end/flambda/ref_to_variables.ml[156,6277+18]..[193,7891+13]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/ref_to_variables.ml[156,6277+18]..[156,6277+41])
                                  Ppat_constraint
                                  pattern (middle_end/flambda/ref_to_variables.ml[156,6277+19]..[156,6277+24])
                                    Ppat_var "named" (middle_end/flambda/ref_to_variables.ml[156,6277+19]..[156,6277+24])
                                  core_type (middle_end/flambda/ref_to_variables.ml[156,6277+27]..[156,6277+40])
                                    Ptyp_constr "Flambda.named" (middle_end/flambda/ref_to_variables.ml[156,6277+27]..[156,6277+40])
                                    []
                                expression (middle_end/flambda/ref_to_variables.ml[156,6277+42]..[193,7891+13])
                                  Pexp_constraint
                                  expression (middle_end/flambda/ref_to_variables.ml[157,6337+6]..[193,7891+13])
                                    Pexp_match
                                    expression (middle_end/flambda/ref_to_variables.ml[157,6337+12]..[157,6337+17])
                                      Pexp_ident "named" (middle_end/flambda/ref_to_variables.ml[157,6337+12]..[157,6337+17])
                                    [
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[158,6360+8]..[158,6360+34])
                                          Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[158,6360+8]..[158,6360+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/ref_to_variables.ml[158,6360+12]..[158,6360+34])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/ref_to_variables.ml[158,6360+13]..[158,6360+25])
                                                  Ppat_construct "Pfield" (middle_end/flambda/ref_to_variables.ml[158,6360+13]..[158,6360+19])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[158,6360+20]..[158,6360+25])
                                                      Ppat_var "field" (middle_end/flambda/ref_to_variables.ml[158,6360+20]..[158,6360+25])
                                                pattern (middle_end/flambda/ref_to_variables.ml[158,6360+27]..[158,6360+30])
                                                  Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[158,6360+28]..[158,6360+30]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[158,6360+28]..[158,6360+30]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/ref_to_variables.ml[158,6360+28]..[158,6360+29])
                                                          Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[158,6360+28]..[158,6360+29])
                                                        pattern (middle_end/flambda/ref_to_variables.ml[158,6360+29]..[158,6360+30]) ghost
                                                          Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[158,6360+29]..[158,6360+30]) ghost
                                                          None
                                                      ]
                                                pattern (middle_end/flambda/ref_to_variables.ml[158,6360+32]..[158,6360+33])
                                                  Ppat_any
                                              ]
                                        <when>
                                          expression (middle_end/flambda/ref_to_variables.ml[159,6395+13]..[159,6395+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[159,6395+13]..[159,6395+33])
                                              Pexp_ident "convertible_variable" (middle_end/flambda/ref_to_variables.ml[159,6395+13]..[159,6395+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[159,6395+34]..[159,6395+35])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[159,6395+34]..[159,6395+35])
                                            ]
                                        expression (middle_end/flambda/ref_to_variables.ml[160,6434+8]..[162,6518+44])
                                          Pexp_match
                                          expression (middle_end/flambda/ref_to_variables.ml[160,6434+15]..[160,6434+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[160,6434+15]..[160,6434+27])
                                              Pexp_ident "get_variable" (middle_end/flambda/ref_to_variables.ml[160,6434+15]..[160,6434+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[160,6434+28]..[160,6434+29])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[160,6434+28]..[160,6434+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[160,6434+30]..[160,6434+35])
                                                  Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[160,6434+30]..[160,6434+35])
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[161,6475+11]..[161,6475+15])
                                                Ppat_construct "None" (middle_end/flambda/ref_to_variables.ml[161,6475+11]..[161,6475+15])
                                                None
                                              expression (middle_end/flambda/ref_to_variables.ml[161,6475+19]..[161,6475+42])
                                                Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[161,6475+19]..[161,6475+23])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[161,6475+24]..[161,6475+42])
                                                    Pexp_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[161,6475+24]..[161,6475+42])
                                                    None
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[162,6518+11]..[162,6518+23])
                                                Ppat_construct "Some" (middle_end/flambda/ref_to_variables.ml[162,6518+11]..[162,6518+15])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/ref_to_variables.ml[162,6518+16]..[162,6518+23])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/ref_to_variables.ml[162,6518+17]..[162,6518+20])
                                                        Ppat_var "var" (middle_end/flambda/ref_to_variables.ml[162,6518+17]..[162,6518+20])
                                                      pattern (middle_end/flambda/ref_to_variables.ml[162,6518+21]..[162,6518+22])
                                                        Ppat_any
                                                    ]
                                              expression (middle_end/flambda/ref_to_variables.ml[162,6518+27]..[162,6518+43])
                                                Pexp_construct "Read_mutable" (middle_end/flambda/ref_to_variables.ml[162,6518+27]..[162,6518+39])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[162,6518+40]..[162,6518+43])
                                                    Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[162,6518+40]..[162,6518+43])
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[163,6563+8]..[163,6563+40])
                                          Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[163,6563+8]..[163,6563+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/ref_to_variables.ml[163,6563+12]..[163,6563+40])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/ref_to_variables.ml[163,6563+13]..[163,6563+29])
                                                  Ppat_construct "Poffsetref" (middle_end/flambda/ref_to_variables.ml[163,6563+13]..[163,6563+23])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[163,6563+24]..[163,6563+29])
                                                      Ppat_var "delta" (middle_end/flambda/ref_to_variables.ml[163,6563+24]..[163,6563+29])
                                                pattern (middle_end/flambda/ref_to_variables.ml[163,6563+31]..[163,6563+34])
                                                  Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[163,6563+32]..[163,6563+34]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[163,6563+32]..[163,6563+34]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/ref_to_variables.ml[163,6563+32]..[163,6563+33])
                                                          Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[163,6563+32]..[163,6563+33])
                                                        pattern (middle_end/flambda/ref_to_variables.ml[163,6563+33]..[163,6563+34]) ghost
                                                          Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[163,6563+33]..[163,6563+34]) ghost
                                                          None
                                                      ]
                                                pattern (middle_end/flambda/ref_to_variables.ml[163,6563+36]..[163,6563+39])
                                                  Ppat_var "dbg" (middle_end/flambda/ref_to_variables.ml[163,6563+36]..[163,6563+39])
                                              ]
                                        <when>
                                          expression (middle_end/flambda/ref_to_variables.ml[164,6604+13]..[164,6604+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[164,6604+13]..[164,6604+33])
                                              Pexp_ident "convertible_variable" (middle_end/flambda/ref_to_variables.ml[164,6604+13]..[164,6604+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[164,6604+34]..[164,6604+35])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[164,6604+34]..[164,6604+35])
                                            ]
                                        expression (middle_end/flambda/ref_to_variables.ml[165,6643+8]..[183,7372+37])
                                          Pexp_match
                                          expression (middle_end/flambda/ref_to_variables.ml[165,6643+15]..[165,6643+31])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[165,6643+15]..[165,6643+27])
                                              Pexp_ident "get_variable" (middle_end/flambda/ref_to_variables.ml[165,6643+15]..[165,6643+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[165,6643+28]..[165,6643+29])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[165,6643+28]..[165,6643+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[165,6643+30]..[165,6643+31])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[166,6680+11]..[166,6680+15])
                                                Ppat_construct "None" (middle_end/flambda/ref_to_variables.ml[166,6680+11]..[166,6680+15])
                                                None
                                              expression (middle_end/flambda/ref_to_variables.ml[166,6680+19]..[166,6680+42])
                                                Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[166,6680+19]..[166,6680+23])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[166,6680+24]..[166,6680+42])
                                                    Pexp_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[166,6680+24]..[166,6680+42])
                                                    None
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[167,6723+11]..[167,6723+26])
                                                Ppat_construct "Some" (middle_end/flambda/ref_to_variables.ml[167,6723+11]..[167,6723+15])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/ref_to_variables.ml[167,6723+16]..[167,6723+26])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/ref_to_variables.ml[167,6723+17]..[167,6723+20])
                                                        Ppat_var "var" (middle_end/flambda/ref_to_variables.ml[167,6723+17]..[167,6723+20])
                                                      pattern (middle_end/flambda/ref_to_variables.ml[167,6723+21]..[167,6723+25])
                                                        Ppat_var "size" (middle_end/flambda/ref_to_variables.ml[167,6723+21]..[167,6723+25])
                                                    ]
                                              expression (middle_end/flambda/ref_to_variables.ml[168,6753+11]..[183,7372+36])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/ref_to_variables.ml[168,6753+14]..[168,6753+22])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/ref_to_variables.ml[168,6753+19]..[168,6753+20])
                                                    Pexp_ident "=" (middle_end/flambda/ref_to_variables.ml[168,6753+19]..[168,6753+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[168,6753+14]..[168,6753+18])
                                                        Pexp_ident "size" (middle_end/flambda/ref_to_variables.ml[168,6753+14]..[168,6753+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/ref_to_variables.ml[168,6753+21]..[168,6753+22])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                                expression (middle_end/flambda/ref_to_variables.ml[169,6776+16]..[181,7341+14])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/ref_to_variables.ml[170,6798+17]..[170,6798+25])
                                                        Ppat_var "mut_name" (middle_end/flambda/ref_to_variables.ml[170,6798+17]..[170,6798+25])
                                                      expression (middle_end/flambda/ref_to_variables.ml[170,6798+28]..[170,6798+64])
                                                        Pexp_ident "Internal_variable_names.read_mutable" (middle_end/flambda/ref_to_variables.ml[170,6798+28]..[170,6798+64])
                                                  ]
                                                  expression (middle_end/flambda/ref_to_variables.ml[171,6866+13]..[180,7318+22])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/ref_to_variables.ml[171,6866+17]..[171,6866+20])
                                                          Ppat_var "mut" (middle_end/flambda/ref_to_variables.ml[171,6866+17]..[171,6866+20])
                                                        expression (middle_end/flambda/ref_to_variables.ml[171,6866+23]..[171,6866+47])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/ref_to_variables.ml[171,6866+23]..[171,6866+38])
                                                            Pexp_ident "Variable.create" (middle_end/flambda/ref_to_variables.ml[171,6866+23]..[171,6866+38])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/ref_to_variables.ml[171,6866+39]..[171,6866+47])
                                                                Pexp_ident "mut_name" (middle_end/flambda/ref_to_variables.ml[171,6866+39]..[171,6866+47])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/ref_to_variables.ml[172,6917+13]..[180,7318+22])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/ref_to_variables.ml[172,6917+17]..[172,6917+31])
                                                            Ppat_var "new_value_name" (middle_end/flambda/ref_to_variables.ml[172,6917+17]..[172,6917+31])
                                                          expression (middle_end/flambda/ref_to_variables.ml[172,6917+34]..[172,6917+67])
                                                            Pexp_ident "Internal_variable_names.offsetted" (middle_end/flambda/ref_to_variables.ml[172,6917+34]..[172,6917+67])
                                                      ]
                                                      expression (middle_end/flambda/ref_to_variables.ml[173,6988+13]..[180,7318+22])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/ref_to_variables.ml[173,6988+17]..[173,6988+26])
                                                              Ppat_var "new_value" (middle_end/flambda/ref_to_variables.ml[173,6988+17]..[173,6988+26])
                                                            expression (middle_end/flambda/ref_to_variables.ml[173,6988+29]..[173,6988+59])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/ref_to_variables.ml[173,6988+29]..[173,6988+44])
                                                                Pexp_ident "Variable.create" (middle_end/flambda/ref_to_variables.ml[173,6988+29]..[173,6988+44])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/ref_to_variables.ml[173,6988+45]..[173,6988+59])
                                                                    Pexp_ident "new_value_name" (middle_end/flambda/ref_to_variables.ml[173,6988+45]..[173,6988+59])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/ref_to_variables.ml[174,7051+13]..[180,7318+22])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/ref_to_variables.ml[174,7051+17]..[174,7051+21])
                                                                Ppat_var "expr" (middle_end/flambda/ref_to_variables.ml[174,7051+17]..[174,7051+21])
                                                              expression (middle_end/flambda/ref_to_variables.ml[175,7075+15]..[178,7236+65])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/ref_to_variables.ml[175,7075+15]..[175,7075+33])
                                                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/ref_to_variables.ml[175,7075+15]..[175,7075+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/ref_to_variables.ml[175,7075+34]..[175,7075+37])
                                                                      Pexp_ident "mut" (middle_end/flambda/ref_to_variables.ml[175,7075+34]..[175,7075+37])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/ref_to_variables.ml[175,7075+38]..[175,7075+56])
                                                                      Pexp_construct "Read_mutable" (middle_end/flambda/ref_to_variables.ml[175,7075+39]..[175,7075+51])
                                                                      Some
expression (middle_end/flambda/ref_to_variables.ml[175,7075+52]..[175,7075+55])
  Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[175,7075+52]..[175,7075+55])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/ref_to_variables.ml[176,7132+17]..[178,7236+65])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/ref_to_variables.ml[176,7132+18]..[176,7132+36])
Pexp_ident "Flambda.create_let" (middle_end/flambda/ref_to_variables.ml[176,7132+18]..[176,7132+36])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/ref_to_variables.ml[176,7132+37]..[176,7132+46])
    Pexp_ident "new_value" (middle_end/flambda/ref_to_variables.ml[176,7132+37]..[176,7132+46])
<arg>
Nolabel
  expression (middle_end/flambda/ref_to_variables.ml[177,7179+20]..[177,7179+56])
    Pexp_construct "Prim" (middle_end/flambda/ref_to_variables.ml[177,7179+21]..[177,7179+25])
    Some
      expression (middle_end/flambda/ref_to_variables.ml[177,7179+25]..[177,7179+55])
        Pexp_tuple
        [
          expression (middle_end/flambda/ref_to_variables.ml[177,7179+26]..[177,7179+42])
            Pexp_construct "Poffsetint" (middle_end/flambda/ref_to_variables.ml[177,7179+26]..[177,7179+36])
            Some
              expression (middle_end/flambda/ref_to_variables.ml[177,7179+37]..[177,7179+42])
                Pexp_ident "delta" (middle_end/flambda/ref_to_variables.ml[177,7179+37]..[177,7179+42])
          expression (middle_end/flambda/ref_to_variables.ml[177,7179+44]..[177,7179+49])
            Pexp_construct "::" (middle_end/flambda/ref_to_variables.ml[177,7179+45]..[177,7179+49]) ghost
            Some
              expression (middle_end/flambda/ref_to_variables.ml[177,7179+45]..[177,7179+49]) ghost
                Pexp_tuple
                [
                  expression (middle_end/flambda/ref_to_variables.ml[177,7179+45]..[177,7179+48])
                    Pexp_ident "mut" (middle_end/flambda/ref_to_variables.ml[177,7179+45]..[177,7179+48])
                  expression (middle_end/flambda/ref_to_variables.ml[177,7179+48]..[177,7179+49]) ghost
                    Pexp_construct "[]" (middle_end/flambda/ref_to_variables.ml[177,7179+48]..[177,7179+49]) ghost
                    None
                ]
          expression (middle_end/flambda/ref_to_variables.ml[177,7179+51]..[177,7179+54])
            Pexp_ident "dbg" (middle_end/flambda/ref_to_variables.ml[177,7179+51]..[177,7179+54])
        ]
<arg>
Nolabel
  expression (middle_end/flambda/ref_to_variables.ml[178,7236+20]..[178,7236+64])
    Pexp_construct "Assign" (middle_end/flambda/ref_to_variables.ml[178,7236+21]..[178,7236+27])
    Some
      expression (middle_end/flambda/ref_to_variables.ml[178,7236+28]..[178,7236+63])
        Pexp_record
        [
          "being_assigned" (middle_end/flambda/ref_to_variables.ml[178,7236+30]..[178,7236+44])
            expression (middle_end/flambda/ref_to_variables.ml[178,7236+47]..[178,7236+50])
              Pexp_ident "var" (middle_end/flambda/ref_to_variables.ml[178,7236+47]..[178,7236+50])
          "new_value" (middle_end/flambda/ref_to_variables.ml[178,7236+52]..[178,7236+61]) ghost
            expression (middle_end/flambda/ref_to_variables.ml[178,7236+52]..[178,7236+61])
              Pexp_ident "new_value" (middle_end/flambda/ref_to_variables.ml[178,7236+52]..[178,7236+61])
        ]
        None
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/ref_to_variables.ml[180,7318+13]..[180,7318+22])
                                                            Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[180,7318+13]..[180,7318+17])
                                                            Some
                                                              expression (middle_end/flambda/ref_to_variables.ml[180,7318+18]..[180,7318+22])
                                                                Pexp_ident "expr" (middle_end/flambda/ref_to_variables.ml[180,7318+18]..[180,7318+22])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[183,7372+13]..[183,7372+36])
                                                    Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[183,7372+13]..[183,7372+17])
                                                    Some
                                                      expression (middle_end/flambda/ref_to_variables.ml[183,7372+18]..[183,7372+36])
                                                        Pexp_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[183,7372+18]..[183,7372+36])
                                                        None
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+8]..[184,7410+56])
                                          Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[184,7410+8]..[184,7410+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/ref_to_variables.ml[184,7410+12]..[184,7410+56])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/ref_to_variables.ml[184,7410+13]..[184,7410+36])
                                                  Ppat_construct "Psetfield" (middle_end/flambda/ref_to_variables.ml[184,7410+13]..[184,7410+22])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[184,7410+23]..[184,7410+36])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+24]..[184,7410+29])
                                                          Ppat_var "field" (middle_end/flambda/ref_to_variables.ml[184,7410+24]..[184,7410+29])
                                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+31]..[184,7410+32])
                                                          Ppat_any
                                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+34]..[184,7410+35])
                                                          Ppat_any
                                                      ]
                                                pattern (middle_end/flambda/ref_to_variables.ml[184,7410+38]..[184,7410+52])
                                                  Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[184,7410+39]..[184,7410+52]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[184,7410+39]..[184,7410+52]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+39]..[184,7410+40])
                                                          Ppat_var "v" (middle_end/flambda/ref_to_variables.ml[184,7410+39]..[184,7410+40])
                                                        pattern (middle_end/flambda/ref_to_variables.ml[184,7410+42]..[184,7410+52]) ghost
                                                          Ppat_construct "::" (middle_end/flambda/ref_to_variables.ml[184,7410+42]..[184,7410+52]) ghost
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/ref_to_variables.ml[184,7410+42]..[184,7410+52]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/ref_to_variables.ml[184,7410+42]..[184,7410+51])
                                                                  Ppat_var "new_value" (middle_end/flambda/ref_to_variables.ml[184,7410+42]..[184,7410+51])
                                                                pattern (middle_end/flambda/ref_to_variables.ml[184,7410+51]..[184,7410+52]) ghost
                                                                  Ppat_construct "[]" (middle_end/flambda/ref_to_variables.ml[184,7410+51]..[184,7410+52]) ghost
                                                                  None
                                                              ]
                                                      ]
                                                pattern (middle_end/flambda/ref_to_variables.ml[184,7410+54]..[184,7410+55])
                                                  Ppat_any
                                              ]
                                        <when>
                                          expression (middle_end/flambda/ref_to_variables.ml[185,7467+13]..[185,7467+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[185,7467+13]..[185,7467+33])
                                              Pexp_ident "convertible_variable" (middle_end/flambda/ref_to_variables.ml[185,7467+13]..[185,7467+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[185,7467+34]..[185,7467+35])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[185,7467+34]..[185,7467+35])
                                            ]
                                        expression (middle_end/flambda/ref_to_variables.ml[186,7506+8]..[189,7628+55])
                                          Pexp_match
                                          expression (middle_end/flambda/ref_to_variables.ml[186,7506+15]..[186,7506+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/ref_to_variables.ml[186,7506+15]..[186,7506+27])
                                              Pexp_ident "get_variable" (middle_end/flambda/ref_to_variables.ml[186,7506+15]..[186,7506+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[186,7506+28]..[186,7506+29])
                                                  Pexp_ident "v" (middle_end/flambda/ref_to_variables.ml[186,7506+28]..[186,7506+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/ref_to_variables.ml[186,7506+30]..[186,7506+35])
                                                  Pexp_ident "field" (middle_end/flambda/ref_to_variables.ml[186,7506+30]..[186,7506+35])
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[187,7547+11]..[187,7547+15])
                                                Ppat_construct "None" (middle_end/flambda/ref_to_variables.ml[187,7547+11]..[187,7547+15])
                                                None
                                              expression (middle_end/flambda/ref_to_variables.ml[187,7547+19]..[187,7547+42])
                                                Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[187,7547+19]..[187,7547+23])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[187,7547+24]..[187,7547+42])
                                                    Pexp_construct "Proved_unreachable" (middle_end/flambda/ref_to_variables.ml[187,7547+24]..[187,7547+42])
                                                    None
                                            <case>
                                              pattern (middle_end/flambda/ref_to_variables.ml[188,7590+11]..[188,7590+34])
                                                Ppat_construct "Some" (middle_end/flambda/ref_to_variables.ml[188,7590+11]..[188,7590+15])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/ref_to_variables.ml[188,7590+16]..[188,7590+34])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/ref_to_variables.ml[188,7590+17]..[188,7590+31])
                                                        Ppat_var "being_assigned" (middle_end/flambda/ref_to_variables.ml[188,7590+17]..[188,7590+31])
                                                      pattern (middle_end/flambda/ref_to_variables.ml[188,7590+32]..[188,7590+33])
                                                        Ppat_any
                                                    ]
                                              expression (middle_end/flambda/ref_to_variables.ml[189,7628+11]..[189,7628+54])
                                                Pexp_construct "Expr" (middle_end/flambda/ref_to_variables.ml[189,7628+11]..[189,7628+15])
                                                Some
                                                  expression (middle_end/flambda/ref_to_variables.ml[189,7628+16]..[189,7628+54])
                                                    Pexp_construct "Assign" (middle_end/flambda/ref_to_variables.ml[189,7628+17]..[189,7628+23])
                                                    Some
                                                      expression (middle_end/flambda/ref_to_variables.ml[189,7628+24]..[189,7628+53])
                                                        Pexp_record
                                                        [
                                                          "being_assigned" (middle_end/flambda/ref_to_variables.ml[189,7628+26]..[189,7628+40]) ghost
                                                            expression (middle_end/flambda/ref_to_variables.ml[189,7628+26]..[189,7628+40])
                                                              Pexp_ident "being_assigned" (middle_end/flambda/ref_to_variables.ml[189,7628+26]..[189,7628+40])
                                                          "new_value" (middle_end/flambda/ref_to_variables.ml[189,7628+42]..[189,7628+51]) ghost
                                                            expression (middle_end/flambda/ref_to_variables.ml[189,7628+42]..[189,7628+51])
                                                              Pexp_ident "new_value" (middle_end/flambda/ref_to_variables.ml[189,7628+42]..[189,7628+51])
                                                        ]
                                                        None
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[192,7825+62])
                                          Ppat_or
                                          pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[192,7825+53])
                                            Ppat_or
                                            pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[192,7825+37])
                                              Ppat_or
                                              pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[191,7757+67])
                                                Ppat_or
                                                pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[191,7757+47])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[191,7757+27])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+72])
                                                      Ppat_or
                                                      pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+55])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+35])
                                                          Ppat_or
                                                          pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+25])
                                                            Ppat_or
                                                            pattern (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+14])
                                                              Ppat_construct "Prim" (middle_end/flambda/ref_to_variables.ml[190,7684+8]..[190,7684+12])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/ref_to_variables.ml[190,7684+13]..[190,7684+14])
                                                                  Ppat_any
                                                            pattern (middle_end/flambda/ref_to_variables.ml[190,7684+17]..[190,7684+25])
                                                              Ppat_construct "Symbol" (middle_end/flambda/ref_to_variables.ml[190,7684+17]..[190,7684+23])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/ref_to_variables.ml[190,7684+24]..[190,7684+25])
                                                                  Ppat_any
                                                          pattern (middle_end/flambda/ref_to_variables.ml[190,7684+28]..[190,7684+35])
                                                            Ppat_construct "Const" (middle_end/flambda/ref_to_variables.ml[190,7684+28]..[190,7684+33])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/ref_to_variables.ml[190,7684+34]..[190,7684+35])
                                                                Ppat_any
                                                        pattern (middle_end/flambda/ref_to_variables.ml[190,7684+38]..[190,7684+55])
                                                          Ppat_construct "Allocated_const" (middle_end/flambda/ref_to_variables.ml[190,7684+38]..[190,7684+53])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/ref_to_variables.ml[190,7684+54]..[190,7684+55])
                                                              Ppat_any
                                                      pattern (middle_end/flambda/ref_to_variables.ml[190,7684+58]..[190,7684+72])
                                                        Ppat_construct "Read_mutable" (middle_end/flambda/ref_to_variables.ml[190,7684+58]..[190,7684+70])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/ref_to_variables.ml[190,7684+71]..[190,7684+72])
                                                            Ppat_any
                                                    pattern (middle_end/flambda/ref_to_variables.ml[191,7757+8]..[191,7757+27])
                                                      Ppat_construct "Read_symbol_field" (middle_end/flambda/ref_to_variables.ml[191,7757+8]..[191,7757+25])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/ref_to_variables.ml[191,7757+26]..[191,7757+27])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/ref_to_variables.ml[191,7757+30]..[191,7757+47])
                                                    Ppat_construct "Set_of_closures" (middle_end/flambda/ref_to_variables.ml[191,7757+30]..[191,7757+45])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/ref_to_variables.ml[191,7757+46]..[191,7757+47])
                                                        Ppat_any
                                                pattern (middle_end/flambda/ref_to_variables.ml[191,7757+50]..[191,7757+67])
                                                  Ppat_construct "Project_closure" (middle_end/flambda/ref_to_variables.ml[191,7757+50]..[191,7757+65])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/ref_to_variables.ml[191,7757+66]..[191,7757+67])
                                                      Ppat_any
                                              pattern (middle_end/flambda/ref_to_variables.ml[192,7825+8]..[192,7825+37])
                                                Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/ref_to_variables.ml[192,7825+8]..[192,7825+35])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/ref_to_variables.ml[192,7825+36]..[192,7825+37])
                                                    Ppat_any
                                            pattern (middle_end/flambda/ref_to_variables.ml[192,7825+40]..[192,7825+53])
                                              Ppat_construct "Project_var" (middle_end/flambda/ref_to_variables.ml[192,7825+40]..[192,7825+51])
                                              Some
                                                []
                                                pattern (middle_end/flambda/ref_to_variables.ml[192,7825+52]..[192,7825+53])
                                                  Ppat_any
                                          pattern (middle_end/flambda/ref_to_variables.ml[192,7825+56]..[192,7825+62])
                                            Ppat_construct "Expr" (middle_end/flambda/ref_to_variables.ml[192,7825+56]..[192,7825+60])
                                            Some
                                              []
                                              pattern (middle_end/flambda/ref_to_variables.ml[192,7825+61]..[192,7825+62])
                                                Ppat_any
                                        expression (middle_end/flambda/ref_to_variables.ml[193,7891+8]..[193,7891+13])
                                          Pexp_ident "named" (middle_end/flambda/ref_to_variables.ml[193,7891+8]..[193,7891+13])
                                    ]
                                  core_type (middle_end/flambda/ref_to_variables.ml[156,6277+44]..[156,6277+57])
                                    Ptyp_constr "Flambda.named" (middle_end/flambda/ref_to_variables.ml[156,6277+44]..[156,6277+57])
                                    []
                          ]
                          expression (middle_end/flambda/ref_to_variables.ml[195,7912+4]..[195,7912+44])
                            Pexp_apply
                            expression (middle_end/flambda/ref_to_variables.ml[195,7912+4]..[195,7912+25])
                              Pexp_ident "Flambda_iterators.map" (middle_end/flambda/ref_to_variables.ml[195,7912+4]..[195,7912+25])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[195,7912+26]..[195,7912+29])
                                  Pexp_ident "aux" (middle_end/flambda/ref_to_variables.ml[195,7912+26]..[195,7912+29])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[195,7912+30]..[195,7912+39])
                                  Pexp_ident "aux_named" (middle_end/flambda/ref_to_variables.ml[195,7912+30]..[195,7912+39])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/ref_to_variables.ml[195,7912+40]..[195,7912+44])
                                  Pexp_ident "flam" (middle_end/flambda/ref_to_variables.ml[195,7912+40]..[195,7912+44])
                            ]
    ]
  structure_item (middle_end/flambda/ref_to_variables.ml[197,7958+0]..[199,8065+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/ref_to_variables.ml[197,7958+4]..[197,7958+17])
          Ppat_var "eliminate_ref" (middle_end/flambda/ref_to_variables.ml[197,7958+4]..[197,7958+17])
        expression (middle_end/flambda/ref_to_variables.ml[197,7958+18]..[199,8065+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/ref_to_variables.ml[197,7958+18]..[197,7958+43])
            Ppat_constraint
            pattern (middle_end/flambda/ref_to_variables.ml[197,7958+19]..[197,7958+26])
              Ppat_var "program" (middle_end/flambda/ref_to_variables.ml[197,7958+19]..[197,7958+26])
            core_type (middle_end/flambda/ref_to_variables.ml[197,7958+27]..[197,7958+42])
              Ptyp_constr "Flambda.program" (middle_end/flambda/ref_to_variables.ml[197,7958+27]..[197,7958+42])
              []
          expression (middle_end/flambda/ref_to_variables.ml[198,8004+2]..[199,8065+28])
            Pexp_apply
            expression (middle_end/flambda/ref_to_variables.ml[198,8004+2]..[198,8004+52])
              Pexp_ident "Flambda_iterators.map_exprs_at_toplevel_of_program" (middle_end/flambda/ref_to_variables.ml[198,8004+2]..[198,8004+52])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/ref_to_variables.ml[198,8004+53]..[198,8004+60])
                  Pexp_ident "program" (middle_end/flambda/ref_to_variables.ml[198,8004+53]..[198,8004+60])
              <arg>
              Labelled "f"
                expression (middle_end/flambda/ref_to_variables.ml[199,8065+7]..[199,8065+28])
                  Pexp_ident "eliminate_ref_of_expr" (middle_end/flambda/ref_to_variables.ml[199,8065+7]..[199,8065+28])
            ]
    ]
]

