[
  structure_item (middle_end/flambda/inline_and_simplify.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/inline_and_simplify.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/inline_and_simplify.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/inline_and_simplify.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/inline_and_simplify.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/inline_and_simplify.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/inline_and_simplify.ml[20,1238+0]..[20,1238+30])
    Pstr_module
    "A" (middle_end/flambda/inline_and_simplify.ml[20,1238+7]..[20,1238+8])
      module_expr (middle_end/flambda/inline_and_simplify.ml[20,1238+11]..[20,1238+30])
        Pmod_ident "Simple_value_approx" (middle_end/flambda/inline_and_simplify.ml[20,1238+11]..[20,1238+30])
  structure_item (middle_end/flambda/inline_and_simplify.ml[21,1269+0]..[21,1269+32])
    Pstr_module
    "B" (middle_end/flambda/inline_and_simplify.ml[21,1269+7]..[21,1269+8])
      module_expr (middle_end/flambda/inline_and_simplify.ml[21,1269+11]..[21,1269+32])
        Pmod_ident "Inlining_cost.Benefit" (middle_end/flambda/inline_and_simplify.ml[21,1269+11]..[21,1269+32])
  structure_item (middle_end/flambda/inline_and_simplify.ml[22,1302+0]..[22,1302+38])
    Pstr_module
    "E" (middle_end/flambda/inline_and_simplify.ml[22,1302+7]..[22,1302+8])
      module_expr (middle_end/flambda/inline_and_simplify.ml[22,1302+11]..[22,1302+38])
        Pmod_ident "Inline_and_simplify_aux.Env" (middle_end/flambda/inline_and_simplify.ml[22,1302+11]..[22,1302+38])
  structure_item (middle_end/flambda/inline_and_simplify.ml[23,1341+0]..[23,1341+41])
    Pstr_module
    "R" (middle_end/flambda/inline_and_simplify.ml[23,1341+7]..[23,1341+8])
      module_expr (middle_end/flambda/inline_and_simplify.ml[23,1341+11]..[23,1341+41])
        Pmod_ident "Inline_and_simplify_aux.Result" (middle_end/flambda/inline_and_simplify.ml[23,1341+11]..[23,1341+41])
  structure_item (middle_end/flambda/inline_and_simplify.ml[25,1384+0]..[33,1896+2])
    Pstr_attribute "ocaml.text"
    [
      structure_item (middle_end/flambda/inline_and_simplify.ml[25,1384+0]..[33,1896+2])
        Pstr_eval
        expression (middle_end/flambda/inline_and_simplify.ml[25,1384+0]..[33,1896+2])
          Pexp_constant PConst_string(" Values of two types hold the information propagated during simplification:\n    - [E.t] \"environments\", top-down, almost always called \"env\";\n    - [R.t] \"results\", bottom-up approximately following the evaluation order,\n      almost always called \"r\".  These results come along with rewritten\n      Flambda terms.\n    The environments map variables to approximations, which enable various\n    simplifications to be performed; for example, some variable may be known\n    to always hold a particular constant.\n",(middle_end/flambda/inline_and_simplify.ml[25,1384+0]..[33,1896+2]),None)
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[35,1900+0]..[35,1900+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[35,1900+4]..[35,1900+7])
          Ppat_var "ret" (middle_end/flambda/inline_and_simplify.ml[35,1900+4]..[35,1900+7])
        expression (middle_end/flambda/inline_and_simplify.ml[35,1900+10]..[35,1900+22])
          Pexp_ident "R.set_approx" (middle_end/flambda/inline_and_simplify.ml[35,1900+10]..[35,1900+22])
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[37,1924+0]..[39,1985+73])
    Pstr_type Rec
    [
      type_declaration "simplify_variable_result" (middle_end/flambda/inline_and_simplify.ml[37,1924+5]..[37,1924+29]) (middle_end/flambda/inline_and_simplify.ml[37,1924+0]..[39,1985+73])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/inline_and_simplify.ml[38,1956+2]..[38,1956+28])
                "No_binding" (middle_end/flambda/inline_and_simplify.ml[38,1956+4]..[38,1956+14])
                [
                  core_type (middle_end/flambda/inline_and_simplify.ml[38,1956+18]..[38,1956+28])
                    Ptyp_constr "Variable.t" (middle_end/flambda/inline_and_simplify.ml[38,1956+18]..[38,1956+28])
                    []
                ]
                None
              (middle_end/flambda/inline_and_simplify.ml[39,1985+2]..[39,1985+73])
                "Binding" (middle_end/flambda/inline_and_simplify.ml[39,1985+4]..[39,1985+11])
                [
                  core_type (middle_end/flambda/inline_and_simplify.ml[39,1985+15]..[39,1985+25])
                    Ptyp_constr "Variable.t" (middle_end/flambda/inline_and_simplify.ml[39,1985+15]..[39,1985+25])
                    []
                  core_type (middle_end/flambda/inline_and_simplify.ml[39,1985+29]..[39,1985+72])
                    Ptyp_constr "Flambda.With_free_variables.t" (middle_end/flambda/inline_and_simplify.ml[39,1985+43]..[39,1985+72])
                    [
                      core_type (middle_end/flambda/inline_and_simplify.ml[39,1985+29]..[39,1985+42])
                        Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[39,1985+29]..[39,1985+42])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[41,2060+0]..[72,3415+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[41,2060+4]..[41,2060+35])
          Ppat_var "simplify_free_variable_internal" (middle_end/flambda/inline_and_simplify.ml[41,2060+4]..[41,2060+35])
        expression (middle_end/flambda/inline_and_simplify.ml[41,2060+36]..[72,3415+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[41,2060+36]..[41,2060+39])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[41,2060+36]..[41,2060+39])
          expression (middle_end/flambda/inline_and_simplify.ml[41,2060+40]..[72,3415+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[41,2060+40]..[41,2060+52])
              Ppat_var "original_var" (middle_end/flambda/inline_and_simplify.ml[41,2060+40]..[41,2060+52])
            expression (middle_end/flambda/inline_and_simplify.ml[42,2115+2]..[72,3415+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/inline_and_simplify.ml[42,2115+6]..[42,2115+9])
                    Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[42,2115+6]..[42,2115+9])
                  expression (middle_end/flambda/inline_and_simplify.ml[42,2115+12]..[42,2115+69])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[42,2115+12]..[42,2115+37])
                      Pexp_ident "Freshening.apply_variable" (middle_end/flambda/inline_and_simplify.ml[42,2115+12]..[42,2115+37])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[42,2115+38]..[42,2115+56])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[42,2115+39]..[42,2115+51])
                            Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[42,2115+39]..[42,2115+51])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[42,2115+52]..[42,2115+55])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[42,2115+52]..[42,2115+55])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[42,2115+57]..[42,2115+69])
                          Pexp_ident "original_var" (middle_end/flambda/inline_and_simplify.ml[42,2115+57]..[42,2115+69])
                    ]
              ]
              expression (middle_end/flambda/inline_and_simplify.ml[43,2188+2]..[72,3415+54])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/inline_and_simplify.ml[43,2188+6]..[43,2188+18])
                      Ppat_var "original_var" (middle_end/flambda/inline_and_simplify.ml[43,2188+6]..[43,2188+18])
                    expression (middle_end/flambda/inline_and_simplify.ml[43,2188+21]..[43,2188+24])
                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[43,2188+21]..[43,2188+24])
                ]
                expression (middle_end/flambda/inline_and_simplify.ml[55,2737+2]..[72,3415+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[55,2737+6]..[55,2737+9])
                        Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[55,2737+6]..[55,2737+9])
                      expression (middle_end/flambda/inline_and_simplify.ml[56,2749+4]..[59,2855+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[56,2749+8]..[56,2749+14])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[56,2749+8]..[56,2749+14])
                            expression (middle_end/flambda/inline_and_simplify.ml[56,2749+17]..[56,2749+35])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[56,2749+17]..[56,2749+27])
                                Pexp_ident "E.find_exn" (middle_end/flambda/inline_and_simplify.ml[56,2749+17]..[56,2749+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[56,2749+28]..[56,2749+31])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[56,2749+28]..[56,2749+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[56,2749+32]..[56,2749+35])
                                    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[56,2749+32]..[56,2749+35])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[57,2788+4]..[59,2855+26])
                          Pexp_match
                          expression (middle_end/flambda/inline_and_simplify.ml[57,2788+10]..[57,2788+20])
                            Pexp_field
                            expression (middle_end/flambda/inline_and_simplify.ml[57,2788+10]..[57,2788+16])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[57,2788+10]..[57,2788+16])
                            "var" (middle_end/flambda/inline_and_simplify.ml[57,2788+17]..[57,2788+20])
                          [
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[58,2814+6]..[58,2814+14])
                                Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[58,2814+6]..[58,2814+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/inline_and_simplify.ml[58,2814+11]..[58,2814+14])
                                    Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[58,2814+11]..[58,2814+14])
                              <when>
                                expression (middle_end/flambda/inline_and_simplify.ml[58,2814+20]..[58,2814+33])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[58,2814+20]..[58,2814+25])
                                    Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[58,2814+20]..[58,2814+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[58,2814+26]..[58,2814+29])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[58,2814+26]..[58,2814+29])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[58,2814+30]..[58,2814+33])
                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[58,2814+30]..[58,2814+33])
                                  ]
                              expression (middle_end/flambda/inline_and_simplify.ml[58,2814+37]..[58,2814+40])
                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[58,2814+37]..[58,2814+40])
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[59,2855+6]..[59,2855+19])
                                Ppat_or
                                pattern (middle_end/flambda/inline_and_simplify.ml[59,2855+6]..[59,2855+12])
                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[59,2855+6]..[59,2855+10])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inline_and_simplify.ml[59,2855+11]..[59,2855+12])
                                      Ppat_any
                                pattern (middle_end/flambda/inline_and_simplify.ml[59,2855+15]..[59,2855+19])
                                  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[59,2855+15]..[59,2855+19])
                                  None
                              expression (middle_end/flambda/inline_and_simplify.ml[59,2855+23]..[59,2855+26])
                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[59,2855+23]..[59,2855+26])
                          ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[65,3122+2]..[72,3415+54])
                    Pexp_match
                    expression (middle_end/flambda/inline_and_simplify.ml[65,3122+8]..[65,3122+37])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[65,3122+8]..[65,3122+29])
                        Pexp_ident "E.find_with_scope_exn" (middle_end/flambda/inline_and_simplify.ml[65,3122+8]..[65,3122+29])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[65,3122+30]..[65,3122+33])
                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[65,3122+30]..[65,3122+33])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[65,3122+34]..[65,3122+37])
                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[65,3122+34]..[65,3122+37])
                      ]
                    [
                      <case>
                        pattern (middle_end/flambda/inline_and_simplify.ml[66,3165+4]..[66,3165+19])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/inline_and_simplify.ml[66,3165+4]..[66,3165+11])
                              Ppat_construct "Current" (middle_end/flambda/inline_and_simplify.ml[66,3165+4]..[66,3165+11])
                              None
                            pattern (middle_end/flambda/inline_and_simplify.ml[66,3165+13]..[66,3165+19])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[66,3165+13]..[66,3165+19])
                          ]
                        expression (middle_end/flambda/inline_and_simplify.ml[66,3165+23]..[66,3165+45])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/inline_and_simplify.ml[66,3165+23]..[66,3165+37])
                              Pexp_construct "No_binding" (middle_end/flambda/inline_and_simplify.ml[66,3165+23]..[66,3165+33])
                              Some
                                expression (middle_end/flambda/inline_and_simplify.ml[66,3165+34]..[66,3165+37])
                                  Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[66,3165+34]..[66,3165+37])
                            expression (middle_end/flambda/inline_and_simplify.ml[66,3165+39]..[66,3165+45])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[66,3165+39]..[66,3165+45])
                          ]
                      <case>
                        pattern (middle_end/flambda/inline_and_simplify.ml[67,3238+4]..[67,3238+17])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/inline_and_simplify.ml[67,3238+4]..[67,3238+9])
                              Ppat_construct "Outer" (middle_end/flambda/inline_and_simplify.ml[67,3238+4]..[67,3238+9])
                              None
                            pattern (middle_end/flambda/inline_and_simplify.ml[67,3238+11]..[67,3238+17])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[67,3238+11]..[67,3238+17])
                          ]
                        expression (middle_end/flambda/inline_and_simplify.ml[68,3259+4]..[72,3415+54])
                          Pexp_match
                          expression (middle_end/flambda/inline_and_simplify.ml[68,3259+10]..[68,3259+31])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[68,3259+10]..[68,3259+24])
                              Pexp_ident "A.simplify_var" (middle_end/flambda/inline_and_simplify.ml[68,3259+10]..[68,3259+24])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[68,3259+25]..[68,3259+31])
                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[68,3259+25]..[68,3259+31])
                            ]
                          [
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[69,3296+6]..[69,3296+10])
                                Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[69,3296+6]..[69,3296+10])
                                None
                              expression (middle_end/flambda/inline_and_simplify.ml[69,3296+14]..[69,3296+36])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[69,3296+14]..[69,3296+28])
                                    Pexp_construct "No_binding" (middle_end/flambda/inline_and_simplify.ml[69,3296+14]..[69,3296+24])
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[69,3296+25]..[69,3296+28])
                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[69,3296+25]..[69,3296+28])
                                  expression (middle_end/flambda/inline_and_simplify.ml[69,3296+30]..[69,3296+36])
                                    Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[69,3296+30]..[69,3296+36])
                                ]
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[70,3333+6]..[70,3333+26])
                                Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[70,3333+6]..[70,3333+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/inline_and_simplify.ml[70,3333+11]..[70,3333+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[70,3333+12]..[70,3333+17])
                                        Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[70,3333+12]..[70,3333+17])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[70,3333+19]..[70,3333+25])
                                        Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[70,3333+19]..[70,3333+25])
                                    ]
                              expression (middle_end/flambda/inline_and_simplify.ml[71,3363+6]..[72,3415+54])
                                Pexp_letmodule "W" (middle_end/flambda/inline_and_simplify.ml[71,3363+17]..[71,3363+18])
                                module_expr (middle_end/flambda/inline_and_simplify.ml[71,3363+21]..[71,3363+48])
                                  Pmod_ident "Flambda.With_free_variables" (middle_end/flambda/inline_and_simplify.ml[71,3363+21]..[71,3363+48])
                                expression (middle_end/flambda/inline_and_simplify.ml[72,3415+6]..[72,3415+54])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[72,3415+6]..[72,3415+46])
                                      Pexp_construct "Binding" (middle_end/flambda/inline_and_simplify.ml[72,3415+6]..[72,3415+13])
                                      Some
                                        expression (middle_end/flambda/inline_and_simplify.ml[72,3415+14]..[72,3415+46])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[72,3415+15]..[72,3415+27])
                                              Pexp_ident "original_var" (middle_end/flambda/inline_and_simplify.ml[72,3415+15]..[72,3415+27])
                                            expression (middle_end/flambda/inline_and_simplify.ml[72,3415+29]..[72,3415+45])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[72,3415+29]..[72,3415+39])
                                                Pexp_ident "W.of_named" (middle_end/flambda/inline_and_simplify.ml[72,3415+29]..[72,3415+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[72,3415+40]..[72,3415+45])
                                                    Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[72,3415+40]..[72,3415+45])
                                              ]
                                          ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[72,3415+48]..[72,3415+54])
                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[72,3415+48]..[72,3415+54])
                                  ]
                          ]
                    ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[74,3471+0]..[82,3828+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[74,3471+4]..[74,3471+26])
          Ppat_var "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[74,3471+4]..[74,3471+26])
        expression (middle_end/flambda/inline_and_simplify.ml[74,3471+27]..[82,3828+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[74,3471+27]..[74,3471+30])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[74,3471+27]..[74,3471+30])
          expression (middle_end/flambda/inline_and_simplify.ml[74,3471+31]..[82,3828+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[74,3471+31]..[74,3471+34])
              Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[74,3471+31]..[74,3471+34])
            expression (middle_end/flambda/inline_and_simplify.ml[74,3471+35]..[82,3828+58]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[74,3471+36]..[74,3471+37])
                Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[74,3471+36]..[74,3471+37])
              expression (middle_end/flambda/inline_and_simplify.ml[74,3471+38]..[82,3828+58])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[75,3529+2]..[82,3828+58])
                  Pexp_match
                  expression (middle_end/flambda/inline_and_simplify.ml[75,3529+8]..[75,3529+47])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[75,3529+8]..[75,3529+39])
                      Pexp_ident "simplify_free_variable_internal" (middle_end/flambda/inline_and_simplify.ml[75,3529+8]..[75,3529+39])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[75,3529+40]..[75,3529+43])
                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[75,3529+40]..[75,3529+43])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[75,3529+44]..[75,3529+47])
                          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[75,3529+44]..[75,3529+47])
                    ]
                  [
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[76,3582+4]..[76,3582+26])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[76,3582+4]..[76,3582+18])
                            Ppat_construct "No_binding" (middle_end/flambda/inline_and_simplify.ml[76,3582+4]..[76,3582+14])
                            Some
                              []
                              pattern (middle_end/flambda/inline_and_simplify.ml[76,3582+15]..[76,3582+18])
                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[76,3582+15]..[76,3582+18])
                          pattern (middle_end/flambda/inline_and_simplify.ml[76,3582+20]..[76,3582+26])
                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[76,3582+20]..[76,3582+26])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[76,3582+30]..[76,3582+46])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[76,3582+30]..[76,3582+31])
                          Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[76,3582+30]..[76,3582+31])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[76,3582+32]..[76,3582+35])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[76,3582+32]..[76,3582+35])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[76,3582+36]..[76,3582+39])
                              Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[76,3582+36]..[76,3582+39])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[76,3582+40]..[76,3582+46])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[76,3582+40]..[76,3582+46])
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+4]..[77,3629+32])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+4]..[77,3629+24])
                            Ppat_construct "Binding" (middle_end/flambda/inline_and_simplify.ml[77,3629+4]..[77,3629+11])
                            Some
                              []
                              pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+12]..[77,3629+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+13]..[77,3629+16])
                                    Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[77,3629+13]..[77,3629+16])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+18]..[77,3629+23])
                                    Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[77,3629+18]..[77,3629+23])
                                ]
                          pattern (middle_end/flambda/inline_and_simplify.ml[77,3629+26]..[77,3629+32])
                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[77,3629+26]..[77,3629+32])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[78,3665+4]..[82,3828+58])
                        Pexp_letmodule "W" (middle_end/flambda/inline_and_simplify.ml[78,3665+15]..[78,3665+16])
                        module_expr (middle_end/flambda/inline_and_simplify.ml[78,3665+19]..[78,3665+46])
                          Pmod_ident "Flambda.With_free_variables" (middle_end/flambda/inline_and_simplify.ml[78,3665+19]..[78,3665+46])
                        expression (middle_end/flambda/inline_and_simplify.ml[79,3715+4]..[82,3828+58])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[79,3715+8]..[79,3715+11])
                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[79,3715+8]..[79,3715+11])
                              expression (middle_end/flambda/inline_and_simplify.ml[79,3715+14]..[79,3715+33])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[79,3715+14]..[79,3715+29])
                                  Pexp_ident "Variable.rename" (middle_end/flambda/inline_and_simplify.ml[79,3715+14]..[79,3715+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[79,3715+30]..[79,3715+33])
                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[79,3715+30]..[79,3715+33])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[80,3752+4]..[82,3828+58])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[80,3752+8]..[80,3752+11])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[80,3752+8]..[80,3752+11])
                                expression (middle_end/flambda/inline_and_simplify.ml[80,3752+14]..[80,3752+34])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[80,3752+14]..[80,3752+19])
                                    Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[80,3752+14]..[80,3752+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[80,3752+20]..[80,3752+23])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[80,3752+20]..[80,3752+23])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[80,3752+24]..[80,3752+27])
                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[80,3752+24]..[80,3752+27])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[80,3752+28]..[80,3752+34])
                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[80,3752+28]..[80,3752+34])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[81,3790+4]..[82,3828+58])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[81,3790+8]..[81,3790+15])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[81,3790+8]..[81,3790+12])
                                        Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[81,3790+8]..[81,3790+12])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[81,3790+14]..[81,3790+15])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[81,3790+14]..[81,3790+15])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[81,3790+18]..[81,3790+34])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[81,3790+18]..[81,3790+19])
                                      Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[81,3790+18]..[81,3790+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[81,3790+20]..[81,3790+23])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[81,3790+20]..[81,3790+23])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[81,3790+24]..[81,3790+27])
                                          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[81,3790+24]..[81,3790+27])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[81,3790+28]..[81,3790+34])
                                          Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[81,3790+28]..[81,3790+34])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[82,3828+4]..[82,3828+58])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[82,3828+4]..[82,3828+55])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[82,3828+5]..[82,3828+39])
                                      Pexp_ident "W.create_let_reusing_defining_expr" (middle_end/flambda/inline_and_simplify.ml[82,3828+5]..[82,3828+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[82,3828+40]..[82,3828+43])
                                          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[82,3828+40]..[82,3828+43])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[82,3828+44]..[82,3828+49])
                                          Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[82,3828+44]..[82,3828+49])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[82,3828+50]..[82,3828+54])
                                          Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[82,3828+50]..[82,3828+54])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[82,3828+57]..[82,3828+58])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[82,3828+57]..[82,3828+58])
                                ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[74,3471+40]..[74,3471+55])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[74,3471+40]..[74,3471+49])
                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[74,3471+40]..[74,3471+49])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[74,3471+52]..[74,3471+55])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[74,3471+52]..[74,3471+55])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[84,3888+0]..[101,4632+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[84,3888+4]..[84,3888+27])
          Ppat_var "simplify_free_variables" (middle_end/flambda/inline_and_simplify.ml[84,3888+4]..[84,3888+27])
        expression (middle_end/flambda/inline_and_simplify.ml[84,3888+28]..[101,4632+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[84,3888+28]..[84,3888+31])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[84,3888+28]..[84,3888+31])
          expression (middle_end/flambda/inline_and_simplify.ml[84,3888+32]..[101,4632+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[84,3888+32]..[84,3888+36])
              Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[84,3888+32]..[84,3888+36])
            expression (middle_end/flambda/inline_and_simplify.ml[84,3888+37]..[101,4632+33]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[84,3888+38]..[84,3888+39])
                Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[84,3888+38]..[84,3888+39])
              expression (middle_end/flambda/inline_and_simplify.ml[84,3888+40]..[101,4632+33])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[85,3948+2]..[101,4632+33])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[85,3948+10]..[85,3948+26])
                        Ppat_var "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[85,3948+10]..[85,3948+26])
                      expression (middle_end/flambda/inline_and_simplify.ml[85,3948+27]..[99,4564+62]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[85,3948+27]..[85,3948+31])
                          Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[85,3948+27]..[85,3948+31])
                        expression (middle_end/flambda/inline_and_simplify.ml[85,3948+32]..[99,4564+62]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[85,3948+32]..[85,3948+35])
                            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[85,3948+32]..[85,3948+35])
                          expression (middle_end/flambda/inline_and_simplify.ml[85,3948+36]..[99,4564+62]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[85,3948+36]..[85,3948+46])
                              Ppat_var "bound_vars" (middle_end/flambda/inline_and_simplify.ml[85,3948+36]..[85,3948+46])
                            expression (middle_end/flambda/inline_and_simplify.ml[85,3948+47]..[99,4564+62]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[85,3948+47]..[85,3948+54])
                                Ppat_var "approxs" (middle_end/flambda/inline_and_simplify.ml[85,3948+47]..[85,3948+54])
                              expression (middle_end/flambda/inline_and_simplify.ml[85,3948+55]..[99,4564+62])
                                Pexp_constraint
                                expression (middle_end/flambda/inline_and_simplify.ml[86,4023+4]..[99,4564+62])
                                  Pexp_match
                                  expression (middle_end/flambda/inline_and_simplify.ml[86,4023+10]..[86,4023+14])
                                    Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[86,4023+10]..[86,4023+14])
                                  [
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[87,4043+6]..[87,4043+8])
                                        Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[87,4043+6]..[87,4043+8])
                                        None
                                      expression (middle_end/flambda/inline_and_simplify.ml[87,4043+12]..[87,4043+58])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[87,4043+12]..[87,4043+13])
                                          Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[87,4043+12]..[87,4043+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[87,4043+14]..[87,4043+17])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[87,4043+14]..[87,4043+17])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[87,4043+18]..[87,4043+39])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[87,4043+19]..[87,4043+27])
                                                Pexp_ident "List.rev" (middle_end/flambda/inline_and_simplify.ml[87,4043+19]..[87,4043+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[87,4043+28]..[87,4043+38])
                                                    Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[87,4043+28]..[87,4043+38])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[87,4043+40]..[87,4043+58])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[87,4043+41]..[87,4043+49])
                                                Pexp_ident "List.rev" (middle_end/flambda/inline_and_simplify.ml[87,4043+41]..[87,4043+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[87,4043+50]..[87,4043+57])
                                                    Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[87,4043+50]..[87,4043+57])
                                              ]
                                        ]
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[88,4102+6]..[88,4102+15])
                                        Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[88,4102+9]..[88,4102+11])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inline_and_simplify.ml[88,4102+6]..[88,4102+15]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[88,4102+6]..[88,4102+9])
                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[88,4102+6]..[88,4102+9])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[88,4102+11]..[88,4102+15])
                                                Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[88,4102+11]..[88,4102+15])
                                            ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[89,4121+6]..[99,4564+62])
                                        Pexp_match
                                        expression (middle_end/flambda/inline_and_simplify.ml[89,4121+12]..[89,4121+51])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[89,4121+12]..[89,4121+43])
                                            Pexp_ident "simplify_free_variable_internal" (middle_end/flambda/inline_and_simplify.ml[89,4121+12]..[89,4121+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[89,4121+44]..[89,4121+47])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[89,4121+44]..[89,4121+47])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[89,4121+48]..[89,4121+51])
                                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[89,4121+48]..[89,4121+51])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[90,4178+8]..[90,4178+30])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[90,4178+8]..[90,4178+22])
                                                  Ppat_construct "No_binding" (middle_end/flambda/inline_and_simplify.ml[90,4178+8]..[90,4178+18])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[90,4178+19]..[90,4178+22])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[90,4178+19]..[90,4178+22])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[90,4178+24]..[90,4178+30])
                                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[90,4178+24]..[90,4178+30])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[91,4212+8]..[91,4212+69])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[91,4212+8]..[91,4212+24])
                                                Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[91,4212+8]..[91,4212+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[91,4212+25]..[91,4212+29])
                                                    Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[91,4212+25]..[91,4212+29])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[91,4212+30]..[91,4212+33])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[91,4212+30]..[91,4212+33])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[91,4212+34]..[91,4212+51])
                                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[91,4212+38]..[91,4212+40])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[91,4212+35]..[91,4212+50]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[91,4212+35]..[91,4212+38])
                                                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[91,4212+35]..[91,4212+38])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[91,4212+40]..[91,4212+50])
                                                            Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[91,4212+40]..[91,4212+50])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[91,4212+52]..[91,4212+69])
                                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[91,4212+59]..[91,4212+61])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[91,4212+53]..[91,4212+68]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[91,4212+53]..[91,4212+59])
                                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[91,4212+53]..[91,4212+59])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[91,4212+61]..[91,4212+68])
                                                            Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[91,4212+61]..[91,4212+68])
                                                        ]
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+8]..[92,4282+36])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+8]..[92,4282+28])
                                                  Ppat_construct "Binding" (middle_end/flambda/inline_and_simplify.ml[92,4282+8]..[92,4282+15])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+16]..[92,4282+28])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+17]..[92,4282+20])
                                                          Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[92,4282+17]..[92,4282+20])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+22]..[92,4282+27])
                                                          Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[92,4282+22]..[92,4282+27])
                                                      ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[92,4282+30]..[92,4282+36])
                                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[92,4282+30]..[92,4282+36])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[93,4322+8]..[99,4564+62])
                                              Pexp_letmodule "W" (middle_end/flambda/inline_and_simplify.ml[93,4322+19]..[93,4322+20])
                                              module_expr (middle_end/flambda/inline_and_simplify.ml[93,4322+23]..[93,4322+50])
                                                Pmod_ident "Flambda.With_free_variables" (middle_end/flambda/inline_and_simplify.ml[93,4322+23]..[93,4322+50])
                                              expression (middle_end/flambda/inline_and_simplify.ml[94,4376+8]..[99,4564+62])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[94,4376+12]..[94,4376+15])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[94,4376+12]..[94,4376+15])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[94,4376+18]..[94,4376+37])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[94,4376+18]..[94,4376+33])
                                                        Pexp_ident "Variable.rename" (middle_end/flambda/inline_and_simplify.ml[94,4376+18]..[94,4376+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[94,4376+34]..[94,4376+37])
                                                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[94,4376+34]..[94,4376+37])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[95,4417+8]..[99,4564+62])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[95,4417+12]..[95,4417+15])
                                                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[95,4417+12]..[95,4417+15])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[95,4417+18]..[95,4417+38])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[95,4417+18]..[95,4417+23])
                                                          Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[95,4417+18]..[95,4417+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[95,4417+24]..[95,4417+27])
                                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[95,4417+24]..[95,4417+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[95,4417+28]..[95,4417+31])
                                                              Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[95,4417+28]..[95,4417+31])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[95,4417+32]..[95,4417+38])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[95,4417+32]..[95,4417+38])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[96,4459+8]..[99,4564+62])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[96,4459+12]..[96,4459+19])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[96,4459+12]..[96,4459+16])
                                                              Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[96,4459+12]..[96,4459+16])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[96,4459+18]..[96,4459+19])
                                                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[96,4459+18]..[96,4459+19])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[97,4481+10]..[97,4481+71])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[97,4481+10]..[97,4481+26])
                                                            Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[97,4481+10]..[97,4481+26])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[97,4481+27]..[97,4481+31])
                                                                Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[97,4481+27]..[97,4481+31])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[97,4481+32]..[97,4481+35])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[97,4481+32]..[97,4481+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[97,4481+36]..[97,4481+53])
                                                                Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[97,4481+40]..[97,4481+42])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[97,4481+37]..[97,4481+52]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[97,4481+37]..[97,4481+40])
Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[97,4481+37]..[97,4481+40])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[97,4481+42]..[97,4481+52])
Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[97,4481+42]..[97,4481+52])
                                                                    ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[97,4481+54]..[97,4481+71])
                                                                Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[97,4481+61]..[97,4481+63])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[97,4481+55]..[97,4481+70]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[97,4481+55]..[97,4481+61])
Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[97,4481+55]..[97,4481+61])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[97,4481+63]..[97,4481+70])
Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[97,4481+63]..[97,4481+70])
                                                                    ]
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[99,4564+8]..[99,4564+62])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/inline_and_simplify.ml[99,4564+8]..[99,4564+59])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[99,4564+9]..[99,4564+43])
                                                            Pexp_ident "W.create_let_reusing_defining_expr" (middle_end/flambda/inline_and_simplify.ml[99,4564+9]..[99,4564+43])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[99,4564+44]..[99,4564+47])
                                                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[99,4564+44]..[99,4564+47])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[99,4564+48]..[99,4564+53])
                                                                Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[99,4564+48]..[99,4564+53])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[99,4564+54]..[99,4564+58])
                                                                Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[99,4564+54]..[99,4564+58])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[99,4564+61]..[99,4564+62])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[99,4564+61]..[99,4564+62])
                                                      ]
                                        ]
                                  ]
                                core_type (middle_end/flambda/inline_and_simplify.ml[85,3948+57]..[85,3948+72])
                                  Ptyp_tuple
                                  [
                                    core_type (middle_end/flambda/inline_and_simplify.ml[85,3948+57]..[85,3948+66])
                                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[85,3948+57]..[85,3948+66])
                                      []
                                    core_type (middle_end/flambda/inline_and_simplify.ml[85,3948+69]..[85,3948+72])
                                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[85,3948+69]..[85,3948+72])
                                      []
                                  ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[101,4632+2]..[101,4632+33])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[101,4632+2]..[101,4632+18])
                      Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[101,4632+2]..[101,4632+18])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[101,4632+19]..[101,4632+23])
                          Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[101,4632+19]..[101,4632+23])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[101,4632+24]..[101,4632+27])
                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[101,4632+24]..[101,4632+27])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[101,4632+28]..[101,4632+30])
                          Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[101,4632+28]..[101,4632+30])
                          None
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[101,4632+31]..[101,4632+33])
                          Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[101,4632+31]..[101,4632+33])
                          None
                    ]
                core_type (middle_end/flambda/inline_and_simplify.ml[84,3888+42]..[84,3888+57])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[84,3888+42]..[84,3888+51])
                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[84,3888+42]..[84,3888+51])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[84,3888+54]..[84,3888+57])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[84,3888+54]..[84,3888+57])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[103,4667+0]..[133,5840+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[103,4667+4]..[103,4667+33])
          Ppat_var "simplify_free_variables_named" (middle_end/flambda/inline_and_simplify.ml[103,4667+4]..[103,4667+33])
        expression (middle_end/flambda/inline_and_simplify.ml[103,4667+34]..[133,5840+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[103,4667+34]..[103,4667+37])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[103,4667+34]..[103,4667+37])
          expression (middle_end/flambda/inline_and_simplify.ml[103,4667+38]..[133,5840+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[103,4667+38]..[103,4667+42])
              Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[103,4667+38]..[103,4667+42])
            expression (middle_end/flambda/inline_and_simplify.ml[103,4667+43]..[133,5840+32]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[103,4667+44]..[103,4667+45])
                Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[103,4667+44]..[103,4667+45])
              expression (middle_end/flambda/inline_and_simplify.ml[103,4667+46]..[133,5840+32])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[104,4737+2]..[133,5840+32])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[104,4737+10]..[104,4737+26])
                        Ppat_var "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[104,4737+10]..[104,4737+26])
                      expression (middle_end/flambda/inline_and_simplify.ml[104,4737+27]..[128,5646+70]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[104,4737+27]..[104,4737+31])
                          Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[104,4737+27]..[104,4737+31])
                        expression (middle_end/flambda/inline_and_simplify.ml[104,4737+32]..[128,5646+70]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[104,4737+32]..[104,4737+35])
                            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[104,4737+32]..[104,4737+35])
                          expression (middle_end/flambda/inline_and_simplify.ml[104,4737+36]..[128,5646+70]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[104,4737+36]..[104,4737+46])
                              Ppat_var "bound_vars" (middle_end/flambda/inline_and_simplify.ml[104,4737+36]..[104,4737+46])
                            expression (middle_end/flambda/inline_and_simplify.ml[104,4737+47]..[128,5646+70]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[104,4737+47]..[104,4737+54])
                                Ppat_var "approxs" (middle_end/flambda/inline_and_simplify.ml[104,4737+47]..[104,4737+54])
                              expression (middle_end/flambda/inline_and_simplify.ml[105,4792+8]..[128,5646+70])
                                Pexp_constraint
                                expression (middle_end/flambda/inline_and_simplify.ml[106,4830+4]..[128,5646+70])
                                  Pexp_match
                                  expression (middle_end/flambda/inline_and_simplify.ml[106,4830+10]..[106,4830+14])
                                    Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[106,4830+10]..[106,4830+14])
                                  [
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[107,4850+6]..[107,4850+8])
                                        Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[107,4850+6]..[107,4850+8])
                                        None
                                      expression (middle_end/flambda/inline_and_simplify.ml[108,4862+6]..[109,4933+23])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[108,4862+10]..[108,4862+18])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[108,4862+10]..[108,4862+15])
                                                  Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[108,4862+10]..[108,4862+15])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[108,4862+17]..[108,4862+18])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[108,4862+17]..[108,4862+18])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[108,4862+21]..[108,4862+67])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[108,4862+21]..[108,4862+22])
                                                Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[108,4862+21]..[108,4862+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[108,4862+23]..[108,4862+26])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[108,4862+23]..[108,4862+26])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[108,4862+27]..[108,4862+48])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[108,4862+28]..[108,4862+36])
                                                      Pexp_ident "List.rev" (middle_end/flambda/inline_and_simplify.ml[108,4862+28]..[108,4862+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[108,4862+37]..[108,4862+47])
                                                          Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[108,4862+37]..[108,4862+47])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[108,4862+49]..[108,4862+67])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[108,4862+50]..[108,4862+58])
                                                      Pexp_ident "List.rev" (middle_end/flambda/inline_and_simplify.ml[108,4862+50]..[108,4862+58])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[108,4862+59]..[108,4862+66])
                                                          Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[108,4862+59]..[108,4862+66])
                                                    ]
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[109,4933+6]..[109,4933+23])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[109,4933+6]..[109,4933+20])
                                              Pexp_construct "Is_named" (middle_end/flambda/inline_and_simplify.ml[109,4933+6]..[109,4933+14])
                                              Some
                                                expression (middle_end/flambda/inline_and_simplify.ml[109,4933+15]..[109,4933+20])
                                                  Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[109,4933+15]..[109,4933+20])
                                            expression (middle_end/flambda/inline_and_simplify.ml[109,4933+22]..[109,4933+23])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[109,4933+22]..[109,4933+23])
                                          ]
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[110,4957+6]..[110,4957+15])
                                        Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[110,4957+9]..[110,4957+11])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inline_and_simplify.ml[110,4957+6]..[110,4957+15]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[110,4957+6]..[110,4957+9])
                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[110,4957+6]..[110,4957+9])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[110,4957+11]..[110,4957+15])
                                                Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[110,4957+11]..[110,4957+15])
                                            ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[111,4976+6]..[128,5646+70])
                                        Pexp_match
                                        expression (middle_end/flambda/inline_and_simplify.ml[111,4976+12]..[111,4976+51])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[111,4976+12]..[111,4976+43])
                                            Pexp_ident "simplify_free_variable_internal" (middle_end/flambda/inline_and_simplify.ml[111,4976+12]..[111,4976+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[111,4976+44]..[111,4976+47])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[111,4976+44]..[111,4976+47])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[111,4976+48]..[111,4976+51])
                                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[111,4976+48]..[111,4976+51])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[112,5033+8]..[112,5033+30])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[112,5033+8]..[112,5033+22])
                                                  Ppat_construct "No_binding" (middle_end/flambda/inline_and_simplify.ml[112,5033+8]..[112,5033+18])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[112,5033+19]..[112,5033+22])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[112,5033+19]..[112,5033+22])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[112,5033+24]..[112,5033+30])
                                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[112,5033+24]..[112,5033+30])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[113,5067+8]..[113,5067+69])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[113,5067+8]..[113,5067+24])
                                                Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[113,5067+8]..[113,5067+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[113,5067+25]..[113,5067+29])
                                                    Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[113,5067+25]..[113,5067+29])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[113,5067+30]..[113,5067+33])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[113,5067+30]..[113,5067+33])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[113,5067+34]..[113,5067+51])
                                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[113,5067+38]..[113,5067+40])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[113,5067+35]..[113,5067+50]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[113,5067+35]..[113,5067+38])
                                                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[113,5067+35]..[113,5067+38])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[113,5067+40]..[113,5067+50])
                                                            Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[113,5067+40]..[113,5067+50])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[113,5067+52]..[113,5067+69])
                                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[113,5067+59]..[113,5067+61])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[113,5067+53]..[113,5067+68]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[113,5067+53]..[113,5067+59])
                                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[113,5067+53]..[113,5067+59])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[113,5067+61]..[113,5067+68])
                                                            Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[113,5067+61]..[113,5067+68])
                                                        ]
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+8]..[114,5137+36])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+8]..[114,5137+28])
                                                  Ppat_construct "Binding" (middle_end/flambda/inline_and_simplify.ml[114,5137+8]..[114,5137+15])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+16]..[114,5137+28])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+17]..[114,5137+20])
                                                          Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[114,5137+17]..[114,5137+20])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+22]..[114,5137+27])
                                                          Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[114,5137+22]..[114,5137+27])
                                                      ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[114,5137+30]..[114,5137+36])
                                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[114,5137+30]..[114,5137+36])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[115,5177+8]..[128,5646+70])
                                              Pexp_letmodule "W" (middle_end/flambda/inline_and_simplify.ml[115,5177+19]..[115,5177+20])
                                              module_expr (middle_end/flambda/inline_and_simplify.ml[115,5177+23]..[115,5177+50])
                                                Pmod_ident "Flambda.With_free_variables" (middle_end/flambda/inline_and_simplify.ml[115,5177+23]..[115,5177+50])
                                              expression (middle_end/flambda/inline_and_simplify.ml[116,5231+8]..[128,5646+70])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[116,5231+12]..[116,5231+15])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[116,5231+12]..[116,5231+15])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[116,5231+18]..[116,5231+37])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[116,5231+18]..[116,5231+33])
                                                        Pexp_ident "Variable.rename" (middle_end/flambda/inline_and_simplify.ml[116,5231+18]..[116,5231+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[116,5231+34]..[116,5231+37])
                                                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[116,5231+34]..[116,5231+37])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[117,5272+8]..[128,5646+70])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[117,5272+12]..[117,5272+15])
                                                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[117,5272+12]..[117,5272+15])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[117,5272+18]..[117,5272+38])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[117,5272+18]..[117,5272+23])
                                                          Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[117,5272+18]..[117,5272+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[117,5272+24]..[117,5272+27])
                                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[117,5272+24]..[117,5272+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[117,5272+28]..[117,5272+31])
                                                              Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[117,5272+28]..[117,5272+31])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[117,5272+32]..[117,5272+38])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[117,5272+32]..[117,5272+38])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[118,5314+8]..[128,5646+70])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[118,5314+12]..[118,5314+19])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[118,5314+12]..[118,5314+16])
                                                              Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[118,5314+12]..[118,5314+16])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[118,5314+18]..[118,5314+19])
                                                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[118,5314+18]..[118,5314+19])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[119,5336+10]..[119,5336+71])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[119,5336+10]..[119,5336+26])
                                                            Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[119,5336+10]..[119,5336+26])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[119,5336+27]..[119,5336+31])
                                                                Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[119,5336+27]..[119,5336+31])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[119,5336+32]..[119,5336+35])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[119,5336+32]..[119,5336+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[119,5336+36]..[119,5336+53])
                                                                Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[119,5336+40]..[119,5336+42])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[119,5336+37]..[119,5336+52]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[119,5336+37]..[119,5336+40])
Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[119,5336+37]..[119,5336+40])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[119,5336+42]..[119,5336+52])
Pexp_ident "bound_vars" (middle_end/flambda/inline_and_simplify.ml[119,5336+42]..[119,5336+52])
                                                                    ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[119,5336+54]..[119,5336+71])
                                                                Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[119,5336+61]..[119,5336+63])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[119,5336+55]..[119,5336+70]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[119,5336+55]..[119,5336+61])
Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[119,5336+55]..[119,5336+61])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[119,5336+63]..[119,5336+70])
Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[119,5336+63]..[119,5336+70])
                                                                    ]
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[121,5419+8]..[128,5646+70])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[121,5419+12]..[121,5419+16])
                                                            Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[121,5419+12]..[121,5419+16])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[122,5438+10]..[126,5602+32])
                                                            Pexp_match
                                                            expression (middle_end/flambda/inline_and_simplify.ml[122,5438+16]..[122,5438+20])
                                                              Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[122,5438+16]..[122,5438+20])
                                                            [
                                                              <case>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[123,5464+12]..[123,5464+25])
                                                                  Ppat_construct "Is_named" (middle_end/flambda/inline_and_simplify.ml[123,5464+12]..[123,5464+20])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[123,5464+21]..[123,5464+25])
                                                                      Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[123,5464+21]..[123,5464+25])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[124,5493+12]..[125,5555+46])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[124,5493+16]..[124,5493+20])
Ppat_var "name" (middle_end/flambda/inline_and_simplify.ml[124,5493+16]..[124,5493+20])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[124,5493+23]..[124,5493+58])
Pexp_ident "Internal_variable_names.simplify_fv" (middle_end/flambda/inline_and_simplify.ml[124,5493+23]..[124,5493+58])
                                                                  ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[125,5555+12]..[125,5555+46])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[125,5555+12]..[125,5555+35])
                                                                      Pexp_ident "Flambda_utils.name_expr" (middle_end/flambda/inline_and_simplify.ml[125,5555+12]..[125,5555+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[125,5555+36]..[125,5555+40])
  Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[125,5555+36]..[125,5555+40])
                                                                      <arg>
                                                                      Labelled "name"
expression (middle_end/flambda/inline_and_simplify.ml[125,5555+42]..[125,5555+46])
  Pexp_ident "name" (middle_end/flambda/inline_and_simplify.ml[125,5555+42]..[125,5555+46])
                                                                    ]
                                                              <case>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[126,5602+12]..[126,5602+24])
                                                                  Ppat_construct "Is_expr" (middle_end/flambda/inline_and_simplify.ml[126,5602+12]..[126,5602+19])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[126,5602+20]..[126,5602+24])
                                                                      Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[126,5602+20]..[126,5602+24])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[126,5602+28]..[126,5602+32])
                                                                  Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[126,5602+28]..[126,5602+32])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[128,5646+8]..[128,5646+70])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[128,5646+8]..[128,5646+67])
                                                            Pexp_construct "Is_expr" (middle_end/flambda/inline_and_simplify.ml[128,5646+8]..[128,5646+15])
                                                            Some
                                                              expression (middle_end/flambda/inline_and_simplify.ml[128,5646+16]..[128,5646+67])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[128,5646+17]..[128,5646+51])
                                                                  Pexp_ident "W.create_let_reusing_defining_expr" (middle_end/flambda/inline_and_simplify.ml[128,5646+17]..[128,5646+51])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[128,5646+52]..[128,5646+55])
                                                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[128,5646+52]..[128,5646+55])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[128,5646+56]..[128,5646+61])
                                                                      Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[128,5646+56]..[128,5646+61])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[128,5646+62]..[128,5646+66])
                                                                      Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[128,5646+62]..[128,5646+66])
                                                                ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[128,5646+69]..[128,5646+70])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[128,5646+69]..[128,5646+70])
                                                        ]
                                        ]
                                  ]
                                core_type (middle_end/flambda/inline_and_simplify.ml[105,4792+10]..[105,4792+35])
                                  Ptyp_tuple
                                  [
                                    core_type (middle_end/flambda/inline_and_simplify.ml[105,4792+10]..[105,4792+29])
                                      Ptyp_constr "Flambda.maybe_named" (middle_end/flambda/inline_and_simplify.ml[105,4792+10]..[105,4792+29])
                                      []
                                    core_type (middle_end/flambda/inline_and_simplify.ml[105,4792+32]..[105,4792+35])
                                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[105,4792+32]..[105,4792+35])
                                      []
                                  ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[130,5722+2]..[133,5840+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[130,5722+6]..[130,5722+22])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/inline_and_simplify.ml[130,5722+6]..[130,5722+19])
                              Ppat_var "named_or_expr" (middle_end/flambda/inline_and_simplify.ml[130,5722+6]..[130,5722+19])
                            pattern (middle_end/flambda/inline_and_simplify.ml[130,5722+21]..[130,5722+22])
                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[130,5722+21]..[130,5722+22])
                          ]
                        expression (middle_end/flambda/inline_and_simplify.ml[130,5722+25]..[130,5722+56])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[130,5722+25]..[130,5722+41])
                            Pexp_ident "collect_bindings" (middle_end/flambda/inline_and_simplify.ml[130,5722+25]..[130,5722+41])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[130,5722+42]..[130,5722+46])
                                Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[130,5722+42]..[130,5722+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[130,5722+47]..[130,5722+50])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[130,5722+47]..[130,5722+50])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[130,5722+51]..[130,5722+53])
                                Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[130,5722+51]..[130,5722+53])
                                None
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[130,5722+54]..[130,5722+56])
                                Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[130,5722+54]..[130,5722+56])
                                None
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[131,5782+2]..[133,5840+32])
                      Pexp_match
                      expression (middle_end/flambda/inline_and_simplify.ml[131,5782+8]..[131,5782+21])
                        Pexp_ident "named_or_expr" (middle_end/flambda/inline_and_simplify.ml[131,5782+8]..[131,5782+21])
                      [
                        <case>
                          pattern (middle_end/flambda/inline_and_simplify.ml[132,5809+4]..[132,5809+18])
                            Ppat_construct "Is_named" (middle_end/flambda/inline_and_simplify.ml[132,5809+4]..[132,5809+12])
                            Some
                              []
                              pattern (middle_end/flambda/inline_and_simplify.ml[132,5809+13]..[132,5809+18])
                                Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[132,5809+13]..[132,5809+18])
                          expression (middle_end/flambda/inline_and_simplify.ml[132,5809+22]..[132,5809+30])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[132,5809+22]..[132,5809+27])
                                Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[132,5809+22]..[132,5809+27])
                              expression (middle_end/flambda/inline_and_simplify.ml[132,5809+29]..[132,5809+30])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[132,5809+29]..[132,5809+30])
                            ]
                        <case>
                          pattern (middle_end/flambda/inline_and_simplify.ml[133,5840+4]..[133,5840+16])
                            Ppat_construct "Is_expr" (middle_end/flambda/inline_and_simplify.ml[133,5840+4]..[133,5840+11])
                            Some
                              []
                              pattern (middle_end/flambda/inline_and_simplify.ml[133,5840+12]..[133,5840+16])
                                Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[133,5840+12]..[133,5840+16])
                          expression (middle_end/flambda/inline_and_simplify.ml[133,5840+20]..[133,5840+32])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[133,5840+20]..[133,5840+29])
                                Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[133,5840+20]..[133,5840+24])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[133,5840+25]..[133,5840+29])
                                    Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[133,5840+25]..[133,5840+29])
                              expression (middle_end/flambda/inline_and_simplify.ml[133,5840+31]..[133,5840+32])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[133,5840+31]..[133,5840+32])
                            ]
                      ]
                core_type (middle_end/flambda/inline_and_simplify.ml[103,4667+48]..[103,4667+67])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[103,4667+48]..[103,4667+61])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[103,4667+48]..[103,4667+61])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[103,4667+64]..[103,4667+67])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[103,4667+64]..[103,4667+67])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[136,5912+0]..[140,6131+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[136,5912+4]..[136,5912+32])
          Ppat_var "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[136,5912+4]..[136,5912+32])
        expression (middle_end/flambda/inline_and_simplify.ml[136,5912+33]..[140,6131+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[136,5912+33]..[136,5912+36])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[136,5912+33]..[136,5912+36])
          expression (middle_end/flambda/inline_and_simplify.ml[136,5912+37]..[140,6131+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[136,5912+37]..[136,5912+40])
              Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[136,5912+37]..[136,5912+40])
            expression (middle_end/flambda/inline_and_simplify.ml[136,5912+41]..[140,6131+24]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[136,5912+42]..[136,5912+43])
                Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[136,5912+42]..[136,5912+43])
              expression (middle_end/flambda/inline_and_simplify.ml[136,5912+44]..[140,6131+24])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[137,5980+2]..[140,6131+24])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[137,5980+2]..[137,5980+31])
                    Pexp_ident "simplify_free_variables_named" (middle_end/flambda/inline_and_simplify.ml[137,5980+2]..[137,5980+31])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[137,5980+32]..[137,5980+35])
                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[137,5980+32]..[137,5980+35])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[137,5980+36]..[137,5980+41])
                        Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[137,5980+37]..[137,5980+41]) ghost
                        Some
                          expression (middle_end/flambda/inline_and_simplify.ml[137,5980+37]..[137,5980+41]) ghost
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[137,5980+37]..[137,5980+40])
                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[137,5980+37]..[137,5980+40])
                              expression (middle_end/flambda/inline_and_simplify.ml[137,5980+40]..[137,5980+41]) ghost
                                Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[137,5980+40]..[137,5980+41]) ghost
                                None
                            ]
                    <arg>
                    Labelled "f"
                      expression (middle_end/flambda/inline_and_simplify.ml[137,5980+45]..[140,6131+24])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[137,5980+50]..[137,5980+53])
                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[137,5980+50]..[137,5980+53])
                        expression (middle_end/flambda/inline_and_simplify.ml[137,5980+54]..[140,6131+23]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[137,5980+54]..[137,5980+58])
                            Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[137,5980+54]..[137,5980+58])
                          expression (middle_end/flambda/inline_and_simplify.ml[137,5980+59]..[140,6131+23]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[137,5980+59]..[137,5980+71])
                              Ppat_var "vars_approxs" (middle_end/flambda/inline_and_simplify.ml[137,5980+59]..[137,5980+71])
                            expression (middle_end/flambda/inline_and_simplify.ml[138,6055+4]..[140,6131+23])
                              Pexp_match
                              expression (middle_end/flambda/inline_and_simplify.ml[138,6055+10]..[138,6055+28])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[138,6055+10]..[138,6055+14])
                                    Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[138,6055+10]..[138,6055+14])
                                  expression (middle_end/flambda/inline_and_simplify.ml[138,6055+16]..[138,6055+28])
                                    Pexp_ident "vars_approxs" (middle_end/flambda/inline_and_simplify.ml[138,6055+16]..[138,6055+28])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+6]..[139,6089+21])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+6]..[139,6089+11])
                                        Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[139,6089+7]..[139,6089+11]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+7]..[139,6089+11]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+7]..[139,6089+10])
                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[139,6089+7]..[139,6089+10])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+10]..[139,6089+11]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[139,6089+10]..[139,6089+11]) ghost
                                                None
                                            ]
                                      pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+13]..[139,6089+21])
                                        Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[139,6089+14]..[139,6089+21]) ghost
                                        Some
                                          []
                                          pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+14]..[139,6089+21]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+14]..[139,6089+20])
                                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[139,6089+14]..[139,6089+20])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[139,6089+20]..[139,6089+21]) ghost
                                                Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[139,6089+20]..[139,6089+21]) ghost
                                                None
                                            ]
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[139,6089+25]..[139,6089+41])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[139,6089+25]..[139,6089+26])
                                      Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[139,6089+25]..[139,6089+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[139,6089+27]..[139,6089+30])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[139,6089+27]..[139,6089+30])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[139,6089+31]..[139,6089+34])
                                          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[139,6089+31]..[139,6089+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[139,6089+35]..[139,6089+41])
                                          Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[139,6089+35]..[139,6089+41])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[140,6131+6]..[140,6131+7])
                                    Ppat_any
                                  expression (middle_end/flambda/inline_and_simplify.ml[140,6131+11]..[140,6131+23])
                                    Pexp_assert
                                    expression (middle_end/flambda/inline_and_simplify.ml[140,6131+18]..[140,6131+23])
                                      Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[140,6131+18]..[140,6131+23])
                                      None
                              ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[136,5912+46]..[136,5912+65])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[136,5912+46]..[136,5912+59])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[136,5912+46]..[136,5912+59])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[136,5912+62]..[136,5912+65])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[136,5912+62]..[136,5912+65])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[142,6157+0]..[144,6265+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[142,6157+4]..[142,6157+31])
          Ppat_var "simplify_named_using_approx" (middle_end/flambda/inline_and_simplify.ml[142,6157+4]..[142,6157+31])
        expression (middle_end/flambda/inline_and_simplify.ml[142,6157+32]..[144,6265+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[142,6157+32]..[142,6157+33])
            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[142,6157+32]..[142,6157+33])
          expression (middle_end/flambda/inline_and_simplify.ml[142,6157+34]..[144,6265+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[142,6157+34]..[142,6157+37])
              Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[142,6157+34]..[142,6157+37])
            expression (middle_end/flambda/inline_and_simplify.ml[142,6157+38]..[144,6265+28]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[142,6157+38]..[142,6157+44])
                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[142,6157+38]..[142,6157+44])
              expression (middle_end/flambda/inline_and_simplify.ml[143,6204+2]..[144,6265+28])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/inline_and_simplify.ml[143,6204+6]..[143,6204+27])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/inline_and_simplify.ml[143,6204+6]..[143,6204+9])
                          Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[143,6204+6]..[143,6204+9])
                        pattern (middle_end/flambda/inline_and_simplify.ml[143,6204+11]..[143,6204+19])
                          Ppat_var "_summary" (middle_end/flambda/inline_and_simplify.ml[143,6204+11]..[143,6204+19])
                        pattern (middle_end/flambda/inline_and_simplify.ml[143,6204+21]..[143,6204+27])
                          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[143,6204+21]..[143,6204+27])
                      ]
                    expression (middle_end/flambda/inline_and_simplify.ml[143,6204+30]..[143,6204+57])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[143,6204+30]..[143,6204+46])
                        Pexp_ident "A.simplify_named" (middle_end/flambda/inline_and_simplify.ml[143,6204+30]..[143,6204+46])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[143,6204+47]..[143,6204+53])
                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[143,6204+47]..[143,6204+53])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[143,6204+54]..[143,6204+57])
                            Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[143,6204+54]..[143,6204+57])
                      ]
                ]
                expression (middle_end/flambda/inline_and_simplify.ml[144,6265+2]..[144,6265+28])
                  Pexp_tuple
                  [
                    expression (middle_end/flambda/inline_and_simplify.ml[144,6265+2]..[144,6265+5])
                      Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[144,6265+2]..[144,6265+5])
                    expression (middle_end/flambda/inline_and_simplify.ml[144,6265+7]..[144,6265+28])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[144,6265+7]..[144,6265+19])
                        Pexp_ident "R.set_approx" (middle_end/flambda/inline_and_simplify.ml[144,6265+7]..[144,6265+19])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[144,6265+20]..[144,6265+21])
                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[144,6265+20]..[144,6265+21])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[144,6265+22]..[144,6265+28])
                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[144,6265+22]..[144,6265+28])
                      ]
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[146,6295+0]..[159,6760+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[146,6295+4]..[146,6295+33])
          Ppat_var "simplify_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[146,6295+4]..[146,6295+33])
        expression (middle_end/flambda/inline_and_simplify.ml[146,6295+34]..[159,6760+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[146,6295+34]..[146,6295+37])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[146,6295+34]..[146,6295+37])
          expression (middle_end/flambda/inline_and_simplify.ml[146,6295+38]..[159,6760+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[146,6295+38]..[146,6295+39])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[146,6295+38]..[146,6295+39])
            expression (middle_end/flambda/inline_and_simplify.ml[146,6295+40]..[159,6760+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[146,6295+40]..[146,6295+52])
                Ppat_var "original_lam" (middle_end/flambda/inline_and_simplify.ml[146,6295+40]..[146,6295+52])
              expression (middle_end/flambda/inline_and_simplify.ml[146,6295+53]..[159,6760+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[146,6295+53]..[146,6295+59])
                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[146,6295+53]..[146,6295+59])
                expression (middle_end/flambda/inline_and_simplify.ml[147,6357+2]..[159,6760+8])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[147,6357+6]..[147,6357+26])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[147,6357+6]..[147,6357+9])
                            Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[147,6357+6]..[147,6357+9])
                          pattern (middle_end/flambda/inline_and_simplify.ml[147,6357+11]..[147,6357+18])
                            Ppat_var "summary" (middle_end/flambda/inline_and_simplify.ml[147,6357+11]..[147,6357+18])
                          pattern (middle_end/flambda/inline_and_simplify.ml[147,6357+20]..[147,6357+26])
                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[147,6357+20]..[147,6357+26])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[148,6386+4]..[148,6386+75])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[148,6386+4]..[148,6386+24])
                          Pexp_ident "A.simplify_using_env" (middle_end/flambda/inline_and_simplify.ml[148,6386+4]..[148,6386+24])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[148,6386+25]..[148,6386+31])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[148,6386+25]..[148,6386+31])
                          <arg>
                          Labelled "is_present_in_env"
                            expression (middle_end/flambda/inline_and_simplify.ml[148,6386+51]..[148,6386+62])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[148,6386+52]..[148,6386+57])
                                Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[148,6386+52]..[148,6386+57])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[148,6386+58]..[148,6386+61])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[148,6386+58]..[148,6386+61])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[148,6386+63]..[148,6386+75])
                              Pexp_ident "original_lam" (middle_end/flambda/inline_and_simplify.ml[148,6386+63]..[148,6386+75])
                        ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[150,6467+2]..[159,6760+8])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[150,6467+6]..[150,6467+7])
                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[150,6467+6]..[150,6467+7])
                        expression (middle_end/flambda/inline_and_simplify.ml[151,6477+4]..[157,6731+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[151,6477+8]..[151,6477+9])
                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[151,6477+8]..[151,6477+9])
                              expression (middle_end/flambda/inline_and_simplify.ml[151,6477+12]..[151,6477+24])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[151,6477+12]..[151,6477+15])
                                  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[151,6477+12]..[151,6477+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[151,6477+16]..[151,6477+17])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[151,6477+16]..[151,6477+17])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[151,6477+18]..[151,6477+24])
                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[151,6477+18]..[151,6477+24])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[152,6505+4]..[157,6731+23])
                            Pexp_match
                            expression (middle_end/flambda/inline_and_simplify.ml[152,6505+10]..[152,6505+17])
                              Pexp_ident "summary" (middle_end/flambda/inline_and_simplify.ml[152,6505+10]..[152,6505+17])
                            [
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[156,6663+6]..[156,6663+19])
                                  Ppat_construct "Replaced_term" (middle_end/flambda/inline_and_simplify.ml[156,6663+6]..[156,6663+19])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[156,6663+23]..[156,6663+67])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[156,6663+23]..[156,6663+36])
                                    Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[156,6663+23]..[156,6663+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[156,6663+37]..[156,6663+38])
                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[156,6663+37]..[156,6663+38])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[156,6663+39]..[156,6663+67])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[156,6663+40]..[156,6663+53])
                                          Pexp_ident "B.remove_code" (middle_end/flambda/inline_and_simplify.ml[156,6663+40]..[156,6663+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[156,6663+54]..[156,6663+66])
                                              Pexp_ident "original_lam" (middle_end/flambda/inline_and_simplify.ml[156,6663+54]..[156,6663+66])
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[157,6731+6]..[157,6731+18])
                                  Ppat_construct "Nothing_done" (middle_end/flambda/inline_and_simplify.ml[157,6731+6]..[157,6731+18])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[157,6731+22]..[157,6731+23])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[157,6731+22]..[157,6731+23])
                            ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[159,6760+2]..[159,6760+8])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/inline_and_simplify.ml[159,6760+2]..[159,6760+5])
                          Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[159,6760+2]..[159,6760+5])
                        expression (middle_end/flambda/inline_and_simplify.ml[159,6760+7]..[159,6760+8])
                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[159,6760+7]..[159,6760+8])
                      ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[161,6770+0]..[172,7132+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[161,6770+4]..[161,6770+39])
          Ppat_var "simplify_named_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[161,6770+4]..[161,6770+39])
        expression (middle_end/flambda/inline_and_simplify.ml[161,6770+40]..[172,7132+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[161,6770+40]..[161,6770+43])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[161,6770+40]..[161,6770+43])
          expression (middle_end/flambda/inline_and_simplify.ml[161,6770+44]..[172,7132+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[161,6770+44]..[161,6770+45])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[161,6770+44]..[161,6770+45])
            expression (middle_end/flambda/inline_and_simplify.ml[161,6770+46]..[172,7132+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[161,6770+46]..[161,6770+60])
                Ppat_var "original_named" (middle_end/flambda/inline_and_simplify.ml[161,6770+46]..[161,6770+60])
              expression (middle_end/flambda/inline_and_simplify.ml[161,6770+61]..[172,7132+10]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[161,6770+61]..[161,6770+67])
                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[161,6770+61]..[161,6770+67])
                expression (middle_end/flambda/inline_and_simplify.ml[162,6840+2]..[172,7132+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[162,6840+6]..[162,6840+28])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[162,6840+6]..[162,6840+11])
                            Ppat_var "named" (middle_end/flambda/inline_and_simplify.ml[162,6840+6]..[162,6840+11])
                          pattern (middle_end/flambda/inline_and_simplify.ml[162,6840+13]..[162,6840+20])
                            Ppat_var "summary" (middle_end/flambda/inline_and_simplify.ml[162,6840+13]..[162,6840+20])
                          pattern (middle_end/flambda/inline_and_simplify.ml[162,6840+22]..[162,6840+28])
                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[162,6840+22]..[162,6840+28])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[163,6871+4]..[164,6940+20])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[163,6871+4]..[163,6871+30])
                          Pexp_ident "A.simplify_named_using_env" (middle_end/flambda/inline_and_simplify.ml[163,6871+4]..[163,6871+30])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[163,6871+31]..[163,6871+37])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[163,6871+31]..[163,6871+37])
                          <arg>
                          Labelled "is_present_in_env"
                            expression (middle_end/flambda/inline_and_simplify.ml[163,6871+57]..[163,6871+68])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[163,6871+58]..[163,6871+63])
                                Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[163,6871+58]..[163,6871+63])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[163,6871+64]..[163,6871+67])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[163,6871+64]..[163,6871+67])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[164,6940+6]..[164,6940+20])
                              Pexp_ident "original_named" (middle_end/flambda/inline_and_simplify.ml[164,6940+6]..[164,6940+20])
                        ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[166,6966+2]..[172,7132+10])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[166,6966+6]..[166,6966+7])
                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[166,6966+6]..[166,6966+7])
                        expression (middle_end/flambda/inline_and_simplify.ml[167,6976+4]..[170,7103+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[167,6976+8]..[167,6976+9])
                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[167,6976+8]..[167,6976+9])
                              expression (middle_end/flambda/inline_and_simplify.ml[167,6976+12]..[167,6976+24])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[167,6976+12]..[167,6976+15])
                                  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[167,6976+12]..[167,6976+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[167,6976+16]..[167,6976+17])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[167,6976+16]..[167,6976+17])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[167,6976+18]..[167,6976+24])
                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[167,6976+18]..[167,6976+24])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[168,7004+4]..[170,7103+23])
                            Pexp_match
                            expression (middle_end/flambda/inline_and_simplify.ml[168,7004+10]..[168,7004+17])
                              Pexp_ident "summary" (middle_end/flambda/inline_and_simplify.ml[168,7004+10]..[168,7004+17])
                            [
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[169,7027+6]..[169,7027+19])
                                  Ppat_construct "Replaced_term" (middle_end/flambda/inline_and_simplify.ml[169,7027+6]..[169,7027+19])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[169,7027+23]..[169,7027+75])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[169,7027+23]..[169,7027+36])
                                    Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[169,7027+23]..[169,7027+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[169,7027+37]..[169,7027+38])
                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[169,7027+37]..[169,7027+38])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[169,7027+39]..[169,7027+75])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[169,7027+40]..[169,7027+59])
                                          Pexp_ident "B.remove_code_named" (middle_end/flambda/inline_and_simplify.ml[169,7027+40]..[169,7027+59])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[169,7027+60]..[169,7027+74])
                                              Pexp_ident "original_named" (middle_end/flambda/inline_and_simplify.ml[169,7027+60]..[169,7027+74])
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[170,7103+6]..[170,7103+18])
                                  Ppat_construct "Nothing_done" (middle_end/flambda/inline_and_simplify.ml[170,7103+6]..[170,7103+18])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[170,7103+22]..[170,7103+23])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[170,7103+22]..[170,7103+23])
                            ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[172,7132+2]..[172,7132+10])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/inline_and_simplify.ml[172,7132+2]..[172,7132+7])
                          Pexp_ident "named" (middle_end/flambda/inline_and_simplify.ml[172,7132+2]..[172,7132+7])
                        expression (middle_end/flambda/inline_and_simplify.ml[172,7132+9]..[172,7132+10])
                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[172,7132+9]..[172,7132+10])
                      ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[174,7144+0]..[177,7235+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[174,7144+4]..[174,7144+18])
          Ppat_var "simplify_const" (middle_end/flambda/inline_and_simplify.ml[174,7144+4]..[174,7144+18])
        expression (middle_end/flambda/inline_and_simplify.ml[174,7144+19]..[177,7235+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[174,7144+19]..[174,7144+42])
            Ppat_constraint
            pattern (middle_end/flambda/inline_and_simplify.ml[174,7144+20]..[174,7144+25])
              Ppat_var "const" (middle_end/flambda/inline_and_simplify.ml[174,7144+20]..[174,7144+25])
            core_type (middle_end/flambda/inline_and_simplify.ml[174,7144+28]..[174,7144+41])
              Ptyp_constr "Flambda.const" (middle_end/flambda/inline_and_simplify.ml[174,7144+28]..[174,7144+41])
              []
          expression (middle_end/flambda/inline_and_simplify.ml[175,7189+2]..[177,7235+28])
            Pexp_match
            expression (middle_end/flambda/inline_and_simplify.ml[175,7189+8]..[175,7189+13])
              Pexp_ident "const" (middle_end/flambda/inline_and_simplify.ml[175,7189+8]..[175,7189+13])
            [
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[176,7208+4]..[176,7208+9])
                  Ppat_construct "Int" (middle_end/flambda/inline_and_simplify.ml[176,7208+4]..[176,7208+7])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[176,7208+8]..[176,7208+9])
                      Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[176,7208+8]..[176,7208+9])
                expression (middle_end/flambda/inline_and_simplify.ml[176,7208+13]..[176,7208+26])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[176,7208+13]..[176,7208+24])
                    Pexp_ident "A.value_int" (middle_end/flambda/inline_and_simplify.ml[176,7208+13]..[176,7208+24])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[176,7208+25]..[176,7208+26])
                        Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[176,7208+25]..[176,7208+26])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[177,7235+4]..[177,7235+10])
                  Ppat_construct "Char" (middle_end/flambda/inline_and_simplify.ml[177,7235+4]..[177,7235+8])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[177,7235+9]..[177,7235+10])
                      Ppat_var "c" (middle_end/flambda/inline_and_simplify.ml[177,7235+9]..[177,7235+10])
                expression (middle_end/flambda/inline_and_simplify.ml[177,7235+14]..[177,7235+28])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[177,7235+14]..[177,7235+26])
                    Pexp_ident "A.value_char" (middle_end/flambda/inline_and_simplify.ml[177,7235+14]..[177,7235+26])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[177,7235+27]..[177,7235+28])
                        Pexp_ident "c" (middle_end/flambda/inline_and_simplify.ml[177,7235+27]..[177,7235+28])
                  ]
            ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[179,7265+0]..[190,7767+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[179,7265+4]..[179,7265+30])
          Ppat_var "approx_for_allocated_const" (middle_end/flambda/inline_and_simplify.ml[179,7265+4]..[179,7265+30])
        expression (middle_end/flambda/inline_and_simplify.ml[179,7265+31]..[190,7767+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[179,7265+31]..[179,7265+58])
            Ppat_constraint
            pattern (middle_end/flambda/inline_and_simplify.ml[179,7265+32]..[179,7265+37])
              Ppat_var "const" (middle_end/flambda/inline_and_simplify.ml[179,7265+32]..[179,7265+37])
            core_type (middle_end/flambda/inline_and_simplify.ml[179,7265+40]..[179,7265+57])
              Ptyp_constr "Allocated_const.t" (middle_end/flambda/inline_and_simplify.ml[179,7265+40]..[179,7265+57])
              []
          expression (middle_end/flambda/inline_and_simplify.ml[180,7326+2]..[190,7767+51])
            Pexp_match
            expression (middle_end/flambda/inline_and_simplify.ml[180,7326+8]..[180,7326+13])
              Pexp_ident "const" (middle_end/flambda/inline_and_simplify.ml[180,7326+8]..[180,7326+13])
            [
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[181,7345+4]..[181,7345+12])
                  Ppat_construct "String" (middle_end/flambda/inline_and_simplify.ml[181,7345+4]..[181,7345+10])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[181,7345+11]..[181,7345+12])
                      Ppat_var "s" (middle_end/flambda/inline_and_simplify.ml[181,7345+11]..[181,7345+12])
                expression (middle_end/flambda/inline_and_simplify.ml[181,7345+16]..[181,7345+53])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[181,7345+16]..[181,7345+30])
                    Pexp_ident "A.value_string" (middle_end/flambda/inline_and_simplify.ml[181,7345+16]..[181,7345+30])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[181,7345+31]..[181,7345+48])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[181,7345+32]..[181,7345+45])
                          Pexp_ident "String.length" (middle_end/flambda/inline_and_simplify.ml[181,7345+32]..[181,7345+45])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[181,7345+46]..[181,7345+47])
                              Pexp_ident "s" (middle_end/flambda/inline_and_simplify.ml[181,7345+46]..[181,7345+47])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[181,7345+49]..[181,7345+53])
                        Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[181,7345+49]..[181,7345+53])
                        None
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[182,7399+4]..[182,7399+22])
                  Ppat_construct "Immutable_string" (middle_end/flambda/inline_and_simplify.ml[182,7399+4]..[182,7399+20])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[182,7399+21]..[182,7399+22])
                      Ppat_var "s" (middle_end/flambda/inline_and_simplify.ml[182,7399+21]..[182,7399+22])
                expression (middle_end/flambda/inline_and_simplify.ml[182,7399+26]..[182,7399+67])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[182,7399+26]..[182,7399+40])
                    Pexp_ident "A.value_string" (middle_end/flambda/inline_and_simplify.ml[182,7399+26]..[182,7399+40])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[182,7399+41]..[182,7399+58])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[182,7399+42]..[182,7399+55])
                          Pexp_ident "String.length" (middle_end/flambda/inline_and_simplify.ml[182,7399+42]..[182,7399+55])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[182,7399+56]..[182,7399+57])
                              Pexp_ident "s" (middle_end/flambda/inline_and_simplify.ml[182,7399+56]..[182,7399+57])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[182,7399+59]..[182,7399+67])
                        Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[182,7399+60]..[182,7399+64])
                        Some
                          expression (middle_end/flambda/inline_and_simplify.ml[182,7399+65]..[182,7399+66])
                            Pexp_ident "s" (middle_end/flambda/inline_and_simplify.ml[182,7399+65]..[182,7399+66])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[183,7467+4]..[183,7467+11])
                  Ppat_construct "Int32" (middle_end/flambda/inline_and_simplify.ml[183,7467+4]..[183,7467+9])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[183,7467+10]..[183,7467+11])
                      Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[183,7467+10]..[183,7467+11])
                expression (middle_end/flambda/inline_and_simplify.ml[183,7467+15]..[183,7467+40])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[183,7467+15]..[183,7467+32])
                    Pexp_ident "A.value_boxed_int" (middle_end/flambda/inline_and_simplify.ml[183,7467+15]..[183,7467+32])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[183,7467+33]..[183,7467+38])
                        Pexp_construct "Int32" (middle_end/flambda/inline_and_simplify.ml[183,7467+33]..[183,7467+38])
                        None
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[183,7467+39]..[183,7467+40])
                        Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[183,7467+39]..[183,7467+40])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[184,7508+4]..[184,7508+11])
                  Ppat_construct "Int64" (middle_end/flambda/inline_and_simplify.ml[184,7508+4]..[184,7508+9])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[184,7508+10]..[184,7508+11])
                      Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[184,7508+10]..[184,7508+11])
                expression (middle_end/flambda/inline_and_simplify.ml[184,7508+15]..[184,7508+40])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[184,7508+15]..[184,7508+32])
                    Pexp_ident "A.value_boxed_int" (middle_end/flambda/inline_and_simplify.ml[184,7508+15]..[184,7508+32])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[184,7508+33]..[184,7508+38])
                        Pexp_construct "Int64" (middle_end/flambda/inline_and_simplify.ml[184,7508+33]..[184,7508+38])
                        None
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[184,7508+39]..[184,7508+40])
                        Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[184,7508+39]..[184,7508+40])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[185,7549+4]..[185,7549+15])
                  Ppat_construct "Nativeint" (middle_end/flambda/inline_and_simplify.ml[185,7549+4]..[185,7549+13])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[185,7549+14]..[185,7549+15])
                      Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[185,7549+14]..[185,7549+15])
                expression (middle_end/flambda/inline_and_simplify.ml[185,7549+19]..[185,7549+48])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[185,7549+19]..[185,7549+36])
                    Pexp_ident "A.value_boxed_int" (middle_end/flambda/inline_and_simplify.ml[185,7549+19]..[185,7549+36])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[185,7549+37]..[185,7549+46])
                        Pexp_construct "Nativeint" (middle_end/flambda/inline_and_simplify.ml[185,7549+37]..[185,7549+46])
                        None
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[185,7549+47]..[185,7549+48])
                        Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[185,7549+47]..[185,7549+48])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[186,7598+4]..[186,7598+11])
                  Ppat_construct "Float" (middle_end/flambda/inline_and_simplify.ml[186,7598+4]..[186,7598+9])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[186,7598+10]..[186,7598+11])
                      Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[186,7598+10]..[186,7598+11])
                expression (middle_end/flambda/inline_and_simplify.ml[186,7598+15]..[186,7598+30])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[186,7598+15]..[186,7598+28])
                    Pexp_ident "A.value_float" (middle_end/flambda/inline_and_simplify.ml[186,7598+15]..[186,7598+28])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[186,7598+29]..[186,7598+30])
                        Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[186,7598+29]..[186,7598+30])
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[187,7629+4]..[187,7629+17])
                  Ppat_construct "Float_array" (middle_end/flambda/inline_and_simplify.ml[187,7629+4]..[187,7629+15])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[187,7629+16]..[187,7629+17])
                      Ppat_var "a" (middle_end/flambda/inline_and_simplify.ml[187,7629+16]..[187,7629+17])
                expression (middle_end/flambda/inline_and_simplify.ml[187,7629+21]..[187,7629+70])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[187,7629+21]..[187,7629+48])
                    Pexp_ident "A.value_mutable_float_array" (middle_end/flambda/inline_and_simplify.ml[187,7629+21]..[187,7629+48])
                  [
                    <arg>
                    Labelled "size"
                      expression (middle_end/flambda/inline_and_simplify.ml[187,7629+55]..[187,7629+70])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[187,7629+56]..[187,7629+67])
                          Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[187,7629+56]..[187,7629+67])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[187,7629+68]..[187,7629+69])
                              Pexp_ident "a" (middle_end/flambda/inline_and_simplify.ml[187,7629+68]..[187,7629+69])
                        ]
                  ]
              <case>
                pattern (middle_end/flambda/inline_and_simplify.ml[188,7700+4]..[188,7700+27])
                  Ppat_construct "Immutable_float_array" (middle_end/flambda/inline_and_simplify.ml[188,7700+4]..[188,7700+25])
                  Some
                    []
                    pattern (middle_end/flambda/inline_and_simplify.ml[188,7700+26]..[188,7700+27])
                      Ppat_var "a" (middle_end/flambda/inline_and_simplify.ml[188,7700+26]..[188,7700+27])
                expression (middle_end/flambda/inline_and_simplify.ml[189,7731+6]..[190,7767+51])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[189,7731+6]..[189,7731+35])
                    Pexp_ident "A.value_immutable_float_array" (middle_end/flambda/inline_and_simplify.ml[189,7731+6]..[189,7731+35])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[190,7767+8]..[190,7767+51])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[190,7767+9]..[190,7767+18])
                          Pexp_ident "Array.map" (middle_end/flambda/inline_and_simplify.ml[190,7767+9]..[190,7767+18])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[190,7767+19]..[190,7767+32])
                              Pexp_ident "A.value_float" (middle_end/flambda/inline_and_simplify.ml[190,7767+19]..[190,7767+32])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[190,7767+33]..[190,7767+50])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[190,7767+34]..[190,7767+47])
                                Pexp_ident "Array.of_list" (middle_end/flambda/inline_and_simplify.ml[190,7767+34]..[190,7767+47])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[190,7767+48]..[190,7767+49])
                                    Pexp_ident "a" (middle_end/flambda/inline_and_simplify.ml[190,7767+48]..[190,7767+49])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[192,7820+0]..[194,7883+42])
    Pstr_type Rec
    [
      type_declaration "filtered_switch_branches" (middle_end/flambda/inline_and_simplify.ml[192,7820+5]..[192,7820+29]) (middle_end/flambda/inline_and_simplify.ml[192,7820+0]..[194,7883+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/inline_and_simplify.ml[193,7852+2]..[193,7852+30])
                "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[193,7852+4]..[193,7852+17])
                [
                  core_type (middle_end/flambda/inline_and_simplify.ml[193,7852+21]..[193,7852+30])
                    Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[193,7852+21]..[193,7852+30])
                    []
                ]
                None
              (middle_end/flambda/inline_and_simplify.ml[194,7883+2]..[194,7883+42])
                "Can_be_taken" (middle_end/flambda/inline_and_simplify.ml[194,7883+4]..[194,7883+16])
                [
                  core_type (middle_end/flambda/inline_and_simplify.ml[194,7883+20]..[194,7883+42])
                    Ptyp_constr "list" (middle_end/flambda/inline_and_simplify.ml[194,7883+38]..[194,7883+42])
                    [
                      core_type (middle_end/flambda/inline_and_simplify.ml[194,7883+21]..[194,7883+36])
                        Ptyp_tuple
                        [
                          core_type (middle_end/flambda/inline_and_simplify.ml[194,7883+21]..[194,7883+24])
                            Ptyp_constr "int" (middle_end/flambda/inline_and_simplify.ml[194,7883+21]..[194,7883+24])
                            []
                          core_type (middle_end/flambda/inline_and_simplify.ml[194,7883+27]..[194,7883+36])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[194,7883+27]..[194,7883+36])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[201,8302+0]..[205,8468+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[201,8302+4]..[201,8302+41])
          Ppat_var "reference_recursive_function_directly" (middle_end/flambda/inline_and_simplify.ml[201,8302+4]..[201,8302+41])
        expression (middle_end/flambda/inline_and_simplify.ml[201,8302+42]..[205,8468+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[201,8302+42]..[201,8302+45])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[201,8302+42]..[201,8302+45])
          expression (middle_end/flambda/inline_and_simplify.ml[201,8302+46]..[205,8468+63]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[201,8302+46]..[201,8302+56])
              Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[201,8302+46]..[201,8302+56])
            expression (middle_end/flambda/inline_and_simplify.ml[202,8361+2]..[205,8468+63])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/inline_and_simplify.ml[202,8361+6]..[202,8361+16])
                    Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[202,8361+6]..[202,8361+16])
                  expression (middle_end/flambda/inline_and_simplify.ml[202,8361+19]..[202,8361+47])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[202,8361+19]..[202,8361+36])
                      Pexp_ident "Closure_id.unwrap" (middle_end/flambda/inline_and_simplify.ml[202,8361+19]..[202,8361+36])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[202,8361+37]..[202,8361+47])
                          Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[202,8361+37]..[202,8361+47])
                    ]
              ]
              expression (middle_end/flambda/inline_and_simplify.ml[203,8412+2]..[205,8468+63])
                Pexp_match
                expression (middle_end/flambda/inline_and_simplify.ml[203,8412+8]..[203,8412+33])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[203,8412+8]..[203,8412+18])
                    Pexp_ident "E.find_opt" (middle_end/flambda/inline_and_simplify.ml[203,8412+8]..[203,8412+18])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[203,8412+19]..[203,8412+22])
                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[203,8412+19]..[203,8412+22])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[203,8412+23]..[203,8412+33])
                        Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[203,8412+23]..[203,8412+33])
                  ]
                [
                  <case>
                    pattern (middle_end/flambda/inline_and_simplify.ml[204,8451+4]..[204,8451+8])
                      Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[204,8451+4]..[204,8451+8])
                      None
                    expression (middle_end/flambda/inline_and_simplify.ml[204,8451+12]..[204,8451+16])
                      Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[204,8451+12]..[204,8451+16])
                      None
                  <case>
                    pattern (middle_end/flambda/inline_and_simplify.ml[205,8468+4]..[205,8468+15])
                      Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[205,8468+4]..[205,8468+8])
                      Some
                        []
                        pattern (middle_end/flambda/inline_and_simplify.ml[205,8468+9]..[205,8468+15])
                          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[205,8468+9]..[205,8468+15])
                    expression (middle_end/flambda/inline_and_simplify.ml[205,8468+19]..[205,8468+63])
                      Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[205,8468+19]..[205,8468+23])
                      Some
                        expression (middle_end/flambda/inline_and_simplify.ml[205,8468+24]..[205,8468+63])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/inline_and_simplify.ml[205,8468+25]..[205,8468+54])
                              Pexp_construct "Flambda.Expr" (middle_end/flambda/inline_and_simplify.ml[205,8468+25]..[205,8468+37])
                              Some
                                expression (middle_end/flambda/inline_and_simplify.ml[205,8468+38]..[205,8468+54])
                                  Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[205,8468+39]..[205,8468+42])
                                  Some
                                    expression (middle_end/flambda/inline_and_simplify.ml[205,8468+43]..[205,8468+53])
                                      Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[205,8468+43]..[205,8468+53])
                            expression (middle_end/flambda/inline_and_simplify.ml[205,8468+56]..[205,8468+62])
                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[205,8468+56]..[205,8468+62])
                          ]
                ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[209,8638+0]..[275,11360+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[209,8638+4]..[209,8638+28])
          Ppat_var "simplify_project_closure" (middle_end/flambda/inline_and_simplify.ml[209,8638+4]..[209,8638+28])
        expression (middle_end/flambda/inline_and_simplify.ml[209,8638+29]..[275,11360+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[209,8638+29]..[209,8638+32])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[209,8638+29]..[209,8638+32])
          expression (middle_end/flambda/inline_and_simplify.ml[209,8638+33]..[275,11360+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[209,8638+33]..[209,8638+34])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[209,8638+33]..[209,8638+34])
            expression (middle_end/flambda/inline_and_simplify.ml[209,8638+35]..[275,11360+73]) ghost
              Pexp_fun
              Labelled "project_closure"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[209,8638+37]..[209,8638+78])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[209,8638+37]..[209,8638+52])
                  Ppat_var "project_closure" (middle_end/flambda/inline_and_simplify.ml[209,8638+37]..[209,8638+52])
                core_type (middle_end/flambda/inline_and_simplify.ml[209,8638+55]..[209,8638+78])
                  Ptyp_constr "Flambda.project_closure" (middle_end/flambda/inline_and_simplify.ml[209,8638+55]..[209,8638+78])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[210,8718+6]..[275,11360+73])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[211,8748+2]..[275,11360+73])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[211,8748+2]..[211,8748+30])
                    Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[211,8748+2]..[211,8748+30])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[211,8748+31]..[211,8748+34])
                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[211,8748+31]..[211,8748+34])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[211,8748+35]..[211,8748+66])
                        Pexp_field
                        expression (middle_end/flambda/inline_and_simplify.ml[211,8748+35]..[211,8748+50])
                          Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[211,8748+35]..[211,8748+50])
                        "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[211,8748+51]..[211,8748+66])
                    <arg>
                    Labelled "f"
                      expression (middle_end/flambda/inline_and_simplify.ml[212,8815+7]..[275,11360+73])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[212,8815+12]..[212,8815+16])
                          Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[212,8815+12]..[212,8815+16])
                        expression (middle_end/flambda/inline_and_simplify.ml[212,8815+17]..[275,11360+72]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[212,8815+17]..[212,8815+32])
                            Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[212,8815+17]..[212,8815+32])
                          expression (middle_end/flambda/inline_and_simplify.ml[212,8815+33]..[275,11360+72]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[212,8815+33]..[212,8815+55])
                              Ppat_var "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[212,8815+33]..[212,8815+55])
                            expression (middle_end/flambda/inline_and_simplify.ml[213,8874+4]..[275,11360+72])
                              Pexp_match
                              expression (middle_end/flambda/inline_and_simplify.ml[213,8874+10]..[213,8874+67])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[213,8874+10]..[213,8874+44])
                                  Pexp_ident "A.check_approx_for_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[213,8874+10]..[213,8874+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[213,8874+45]..[213,8874+67])
                                      Pexp_ident "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[213,8874+45]..[213,8874+67])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[214,8947+6]..[214,8947+11])
                                    Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[214,8947+6]..[214,8947+11])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[215,8962+6]..[216,9036+53])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[215,8962+6]..[215,8962+23])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[215,8962+6]..[215,8962+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[215,8962+24]..[215,8962+73])
                                          Pexp_constant PConst_string("Wrong approximation when projecting closure: %a",(middle_end/flambda/inline_and_simplify.ml[215,8962+25]..[215,8962+72]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[216,9036+8]..[216,9036+37])
                                          Pexp_ident "Flambda.print_project_closure" (middle_end/flambda/inline_and_simplify.ml[216,9036+8]..[216,9036+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[216,9036+38]..[216,9036+53])
                                          Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[216,9036+38]..[216,9036+53])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[217,9090+6]..[217,9090+22])
                                    Ppat_construct "Unresolved" (middle_end/flambda/inline_and_simplify.ml[217,9090+6]..[217,9090+16])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[217,9090+17]..[217,9090+22])
                                        Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[217,9090+17]..[217,9090+22])
                                  expression (middle_end/flambda/inline_and_simplify.ml[221,9309+6]..[224,9407+41])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[221,9309+6]..[224,9407+7])
                                        Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[221,9309+6]..[221,9309+21])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[221,9309+22]..[224,9407+7])
                                            Pexp_record
                                            [
                                              "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[222,9333+8]..[222,9333+23]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[222,9333+8]..[222,9333+23])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[222,9333+8]..[222,9333+23])
                                              "closure_id" (middle_end/flambda/inline_and_simplify.ml[223,9358+8]..[223,9358+18])
                                                expression (middle_end/flambda/inline_and_simplify.ml[223,9358+21]..[223,9358+47])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[223,9358+21]..[223,9358+36])
                                                    Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[223,9358+21]..[223,9358+36])
                                                  "closure_id" (middle_end/flambda/inline_and_simplify.ml[223,9358+37]..[223,9358+47])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[224,9407+9]..[224,9407+41])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[224,9407+9]..[224,9407+12])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[224,9407+9]..[224,9407+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[224,9407+13]..[224,9407+14])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[224,9407+13]..[224,9407+14])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[224,9407+15]..[224,9407+41])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[224,9407+16]..[224,9407+34])
                                                Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[224,9407+16]..[224,9407+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[224,9407+35]..[224,9407+40])
                                                    Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[224,9407+35]..[224,9407+40])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[225,9449+6]..[225,9449+13])
                                    Ppat_construct "Unknown" (middle_end/flambda/inline_and_simplify.ml[225,9449+6]..[225,9449+13])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[228,9599+6]..[231,9697+38])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[228,9599+6]..[231,9697+7])
                                        Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[228,9599+6]..[228,9599+21])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[228,9599+22]..[231,9697+7])
                                            Pexp_record
                                            [
                                              "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[229,9623+8]..[229,9623+23]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[229,9623+8]..[229,9623+23])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[229,9623+8]..[229,9623+23])
                                              "closure_id" (middle_end/flambda/inline_and_simplify.ml[230,9648+8]..[230,9648+18])
                                                expression (middle_end/flambda/inline_and_simplify.ml[230,9648+21]..[230,9648+47])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[230,9648+21]..[230,9648+36])
                                                    Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[230,9648+21]..[230,9648+36])
                                                  "closure_id" (middle_end/flambda/inline_and_simplify.ml[230,9648+37]..[230,9648+47])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[231,9697+9]..[231,9697+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[231,9697+9]..[231,9697+12])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[231,9697+9]..[231,9697+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[231,9697+13]..[231,9697+14])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[231,9697+13]..[231,9697+14])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[231,9697+15]..[231,9697+38])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[231,9697+16]..[231,9697+31])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[231,9697+16]..[231,9697+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[231,9697+32]..[231,9697+37])
                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[231,9697+32]..[231,9697+37])
                                                    None
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[232,9736+6]..[232,9736+47])
                                    Ppat_construct "Unknown_because_of_unresolved_value" (middle_end/flambda/inline_and_simplify.ml[232,9736+6]..[232,9736+41])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[232,9736+42]..[232,9736+47])
                                        Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[232,9736+42]..[232,9736+47])
                                  expression (middle_end/flambda/inline_and_simplify.ml[233,9787+6]..[236,9885+57])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[233,9787+6]..[236,9885+7])
                                        Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[233,9787+6]..[233,9787+21])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[233,9787+22]..[236,9885+7])
                                            Pexp_record
                                            [
                                              "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[234,9811+8]..[234,9811+23]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[234,9811+8]..[234,9811+23])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[234,9811+8]..[234,9811+23])
                                              "closure_id" (middle_end/flambda/inline_and_simplify.ml[235,9836+8]..[235,9836+18])
                                                expression (middle_end/flambda/inline_and_simplify.ml[235,9836+21]..[235,9836+47])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[235,9836+21]..[235,9836+36])
                                                    Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[235,9836+21]..[235,9836+36])
                                                  "closure_id" (middle_end/flambda/inline_and_simplify.ml[235,9836+37]..[235,9836+47])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[236,9885+9]..[236,9885+57])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[236,9885+9]..[236,9885+12])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[236,9885+9]..[236,9885+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[236,9885+13]..[236,9885+14])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[236,9885+13]..[236,9885+14])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[236,9885+15]..[236,9885+57])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[236,9885+16]..[236,9885+31])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[236,9885+16]..[236,9885+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[236,9885+32]..[236,9885+56])
                                                    Pexp_construct "Unresolved_value" (middle_end/flambda/inline_and_simplify.ml[236,9885+33]..[236,9885+49])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[236,9885+50]..[236,9885+55])
                                                        Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[236,9885+50]..[236,9885+55])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[237,9943+6]..[237,9943+53])
                                    Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[237,9943+6]..[237,9943+8])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[237,9943+9]..[237,9943+53])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/inline_and_simplify.ml[237,9943+10]..[237,9943+29])
                                            Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[237,9943+10]..[237,9943+29])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[237,9943+31]..[237,9943+52])
                                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[237,9943+31]..[237,9943+52])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[238,10000+6]..[275,11360+72])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[238,10000+10]..[238,10000+20])
                                          Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[238,10000+10]..[238,10000+20])
                                        expression (middle_end/flambda/inline_and_simplify.ml[239,10023+8]..[240,10084+36])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[239,10023+8]..[239,10023+38])
                                            Pexp_ident "A.freshen_and_check_closure_id" (middle_end/flambda/inline_and_simplify.ml[239,10023+8]..[239,10023+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[239,10023+39]..[239,10023+60])
                                                Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[239,10023+39]..[239,10023+60])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[240,10084+10]..[240,10084+36])
                                                Pexp_field
                                                expression (middle_end/flambda/inline_and_simplify.ml[240,10084+10]..[240,10084+25])
                                                  Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[240,10084+10]..[240,10084+25])
                                                "closure_id" (middle_end/flambda/inline_and_simplify.ml[240,10084+26]..[240,10084+36])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[242,10130+6]..[275,11360+72])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[242,10130+10]..[242,10130+25])
                                            Ppat_var "projecting_from" (middle_end/flambda/inline_and_simplify.ml[242,10130+10]..[242,10130+25])
                                          expression (middle_end/flambda/inline_and_simplify.ml[243,10158+8]..[254,10516+46])
                                            Pexp_match
                                            expression (middle_end/flambda/inline_and_simplify.ml[243,10158+14]..[243,10158+33])
                                              Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[243,10158+14]..[243,10158+33])
                                            [
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[244,10197+10]..[244,10197+14])
                                                  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[244,10197+10]..[244,10197+14])
                                                  None
                                                expression (middle_end/flambda/inline_and_simplify.ml[244,10197+18]..[244,10197+22])
                                                  Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[244,10197+18]..[244,10197+22])
                                                  None
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[245,10220+10]..[245,10220+34])
                                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[245,10220+10]..[245,10220+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[245,10220+15]..[245,10220+34])
                                                      Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[245,10220+15]..[245,10220+34])
                                                expression (middle_end/flambda/inline_and_simplify.ml[246,10258+10]..[254,10516+46])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[246,10258+14]..[246,10258+39]) ghost
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[246,10258+14]..[246,10258+24])
                                                          Ppat_var "projection" (middle_end/flambda/inline_and_simplify.ml[246,10258+14]..[246,10258+24])
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[246,10258+27]..[246,10258+39]) ghost
                                                          Ptyp_poly
                                                          core_type (middle_end/flambda/inline_and_simplify.ml[246,10258+27]..[246,10258+39])
                                                            Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[246,10258+27]..[246,10258+39])
                                                            []
                                                      expression (middle_end/flambda/inline_and_simplify.ml[246,10258+14]..[250,10409+13])
                                                        Pexp_constraint
                                                        expression (middle_end/flambda/inline_and_simplify.ml[247,10300+12]..[250,10409+13])
                                                          Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[247,10300+12]..[247,10300+27])
                                                          Some
                                                            expression (middle_end/flambda/inline_and_simplify.ml[247,10300+28]..[250,10409+13])
                                                              Pexp_record
                                                              [
                                                                "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[248,10330+14]..[248,10330+29])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[248,10330+32]..[248,10330+51])
                                                                    Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[248,10330+32]..[248,10330+51])
                                                                "closure_id" (middle_end/flambda/inline_and_simplify.ml[249,10383+14]..[249,10383+24]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[249,10383+14]..[249,10383+24])
                                                                    Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[249,10383+14]..[249,10383+24])
                                                              ]
                                                              None
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[246,10258+27]..[246,10258+39])
                                                          Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[246,10258+27]..[246,10258+39])
                                                          []
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[252,10436+10]..[254,10516+46])
                                                    Pexp_match
                                                    expression (middle_end/flambda/inline_and_simplify.ml[252,10436+16]..[252,10436+49])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[252,10436+16]..[252,10436+33])
                                                        Pexp_ident "E.find_projection" (middle_end/flambda/inline_and_simplify.ml[252,10436+16]..[252,10436+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[252,10436+34]..[252,10436+37])
                                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[252,10436+34]..[252,10436+37])
                                                        <arg>
                                                        Labelled "projection"
                                                          expression (middle_end/flambda/inline_and_simplify.ml[252,10436+39]..[252,10436+49])
                                                            Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[252,10436+39]..[252,10436+49])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[253,10491+12]..[253,10491+16])
                                                          Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[253,10491+12]..[253,10491+16])
                                                          None
                                                        expression (middle_end/flambda/inline_and_simplify.ml[253,10491+20]..[253,10491+24])
                                                          Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[253,10491+20]..[253,10491+24])
                                                          None
                                                      <case>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[254,10516+12]..[254,10516+20])
                                                          Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[254,10516+12]..[254,10516+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[254,10516+17]..[254,10516+20])
                                                              Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[254,10516+17]..[254,10516+20])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[254,10516+24]..[254,10516+46])
                                                          Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[254,10516+24]..[254,10516+28])
                                                          Some
                                                            expression (middle_end/flambda/inline_and_simplify.ml[254,10516+29]..[254,10516+46])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/inline_and_simplify.ml[254,10516+30]..[254,10516+33])
                                                                  Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[254,10516+30]..[254,10516+33])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[254,10516+35]..[254,10516+45])
                                                                  Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[254,10516+35]..[254,10516+45])
                                                              ]
                                                    ]
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[256,10572+6]..[275,11360+72])
                                        Pexp_match
                                        expression (middle_end/flambda/inline_and_simplify.ml[256,10572+12]..[256,10572+27])
                                          Pexp_ident "projecting_from" (middle_end/flambda/inline_and_simplify.ml[256,10572+12]..[256,10572+27])
                                        [
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[257,10605+8]..[257,10605+30])
                                              Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[257,10605+8]..[257,10605+12])
                                              Some
                                                []
                                                pattern (middle_end/flambda/inline_and_simplify.ml[257,10605+13]..[257,10605+30])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[257,10605+14]..[257,10605+17])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[257,10605+14]..[257,10605+17])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[257,10605+19]..[257,10605+29])
                                                      Ppat_var "projection" (middle_end/flambda/inline_and_simplify.ml[257,10605+19]..[257,10605+29])
                                                  ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[258,10639+8]..[260,10785+43])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[258,10639+8]..[258,10639+36])
                                                Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[258,10639+8]..[258,10639+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[258,10639+37]..[258,10639+40])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[258,10639+37]..[258,10639+40])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[258,10639+41]..[258,10639+44])
                                                    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[258,10639+41]..[258,10639+44])
                                                <arg>
                                                Labelled "f"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[258,10639+48]..[260,10785+43])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[258,10639+53]..[258,10639+57])
                                                      Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[258,10639+53]..[258,10639+57])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[258,10639+58]..[260,10785+42]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[258,10639+58]..[258,10639+61])
                                                        Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[258,10639+58]..[258,10639+61])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[258,10639+62]..[260,10785+42]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[258,10639+62]..[258,10639+72])
                                                          Ppat_var "var_approx" (middle_end/flambda/inline_and_simplify.ml[258,10639+62]..[258,10639+72])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[259,10715+10]..[260,10785+42])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[259,10715+14]..[259,10715+15])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[259,10715+14]..[259,10715+15])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[259,10715+18]..[259,10715+66])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[259,10715+18]..[259,10715+31])
                                                                  Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[259,10715+18]..[259,10715+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[259,10715+32]..[259,10715+33])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[259,10715+32]..[259,10715+33])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[259,10715+34]..[259,10715+66])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[259,10715+35]..[259,10715+54])
Pexp_ident "B.remove_projection" (middle_end/flambda/inline_and_simplify.ml[259,10715+35]..[259,10715+54])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[259,10715+55]..[259,10715+65])
    Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[259,10715+55]..[259,10715+65])
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[260,10785+10]..[260,10785+42])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/inline_and_simplify.ml[260,10785+10]..[260,10785+24])
                                                                Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[260,10785+10]..[260,10785+14])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[260,10785+15]..[260,10785+24])
                                                                    Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[260,10785+16]..[260,10785+19])
                                                                    Some
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[260,10785+20]..[260,10785+23])
Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[260,10785+20]..[260,10785+23])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[260,10785+26]..[260,10785+42])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[260,10785+26]..[260,10785+29])
                                                                  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[260,10785+26]..[260,10785+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[260,10785+30]..[260,10785+31])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[260,10785+30]..[260,10785+31])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[260,10785+32]..[260,10785+42])
                                                                      Pexp_ident "var_approx" (middle_end/flambda/inline_and_simplify.ml[260,10785+32]..[260,10785+42])
                                                                ]
                                                            ]
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[261,10829+8]..[261,10829+12])
                                              Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[261,10829+8]..[261,10829+12])
                                              None
                                            expression (middle_end/flambda/inline_and_simplify.ml[262,10845+8]..[275,11360+72])
                                              Pexp_match
                                              expression (middle_end/flambda/inline_and_simplify.ml[262,10845+14]..[262,10845+66])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[262,10845+14]..[262,10845+51])
                                                  Pexp_ident "reference_recursive_function_directly" (middle_end/flambda/inline_and_simplify.ml[262,10845+14]..[262,10845+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[262,10845+52]..[262,10845+55])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[262,10845+52]..[262,10845+55])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[262,10845+56]..[262,10845+66])
                                                      Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[262,10845+56]..[262,10845+66])
                                                ]
                                              [
                                                <case>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[263,10917+10]..[263,10917+29])
                                                    Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[263,10917+10]..[263,10917+14])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[263,10917+15]..[263,10917+29])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[263,10917+16]..[263,10917+20])
                                                            Ppat_var "flam" (middle_end/flambda/inline_and_simplify.ml[263,10917+16]..[263,10917+20])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[263,10917+22]..[263,10917+28])
                                                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[263,10917+22]..[263,10917+28])
                                                        ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[263,10917+33]..[263,10917+51])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/inline_and_simplify.ml[263,10917+33]..[263,10917+37])
                                                        Pexp_ident "flam" (middle_end/flambda/inline_and_simplify.ml[263,10917+33]..[263,10917+37])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[263,10917+39]..[263,10917+51])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[263,10917+39]..[263,10917+42])
                                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[263,10917+39]..[263,10917+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[263,10917+43]..[263,10917+44])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[263,10917+43]..[263,10917+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[263,10917+45]..[263,10917+51])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[263,10917+45]..[263,10917+51])
                                                        ]
                                                    ]
                                                <case>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[264,10969+10]..[264,10969+14])
                                                    Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[264,10969+10]..[264,10969+14])
                                                    None
                                                  expression (middle_end/flambda/inline_and_simplify.ml[265,10987+10]..[275,11360+72])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[265,10987+14]..[265,10987+33])
                                                          Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[265,10987+14]..[265,10987+33])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[266,11023+12]..[269,11179+35])
                                                          Pexp_match
                                                          expression (middle_end/flambda/inline_and_simplify.ml[266,11023+18]..[266,11023+37])
                                                            Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[266,11023+18]..[266,11023+37])
                                                          [
                                                            <case>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[267,11066+14]..[267,11066+39])
                                                                Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[267,11066+14]..[267,11066+18])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[267,11066+19]..[267,11066+39])
                                                                    Ppat_var "set_of_closures_var'" (middle_end/flambda/inline_and_simplify.ml[267,11066+19]..[267,11066+39])
                                                              <when>
                                                                expression (middle_end/flambda/inline_and_simplify.ml[267,11066+45]..[267,11066+75])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[267,11066+45]..[267,11066+50])
                                                                    Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[267,11066+45]..[267,11066+50])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[267,11066+51]..[267,11066+54])
Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[267,11066+51]..[267,11066+54])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[267,11066+55]..[267,11066+75])
Pexp_ident "set_of_closures_var'" (middle_end/flambda/inline_and_simplify.ml[267,11066+55]..[267,11066+75])
                                                                  ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[268,11145+14]..[268,11145+33])
                                                                Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[268,11145+14]..[268,11145+33])
                                                            <case>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[269,11179+14]..[269,11179+27])
                                                                Ppat_or
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[269,11179+14]..[269,11179+20])
                                                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[269,11179+14]..[269,11179+18])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[269,11179+19]..[269,11179+20])
                                                                      Ppat_any
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[269,11179+23]..[269,11179+27])
                                                                  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[269,11179+23]..[269,11179+27])
                                                                  None
                                                              expression (middle_end/flambda/inline_and_simplify.ml[269,11179+31]..[269,11179+35])
                                                                Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[269,11179+31]..[269,11179+35])
                                                                None
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[271,11228+10]..[275,11360+72])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[271,11228+14]..[271,11228+20])
                                                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[271,11228+14]..[271,11228+20])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[272,11251+12]..[273,11322+24])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[272,11251+12]..[272,11251+27])
                                                              Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[272,11251+12]..[272,11251+27])
                                                            [
                                                              <arg>
                                                              Optional "set_of_closures_var"
                                                                expression (middle_end/flambda/inline_and_simplify.ml[272,11251+29]..[272,11251+48])
                                                                  Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[272,11251+29]..[272,11251+48])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[272,11251+49]..[272,11251+70])
                                                                  Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[272,11251+49]..[272,11251+70])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[273,11322+14]..[273,11322+24])
                                                                  Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[273,11322+14]..[273,11322+24])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[275,11360+10]..[275,11360+72])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[275,11360+10]..[275,11360+58])
                                                            Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[275,11360+10]..[275,11360+25])
                                                            Some
                                                              expression (middle_end/flambda/inline_and_simplify.ml[275,11360+26]..[275,11360+58])
                                                                Pexp_record
                                                                [
                                                                  "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[275,11360+28]..[275,11360+43]) ghost
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[275,11360+28]..[275,11360+43])
                                                                      Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[275,11360+28]..[275,11360+43])
                                                                  "closure_id" (middle_end/flambda/inline_and_simplify.ml[275,11360+45]..[275,11360+55]) ghost
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[275,11360+45]..[275,11360+55])
                                                                      Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[275,11360+45]..[275,11360+55])
                                                                ]
                                                                None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[275,11360+60]..[275,11360+72])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[275,11360+60]..[275,11360+63])
                                                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[275,11360+60]..[275,11360+63])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[275,11360+64]..[275,11360+65])
                                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[275,11360+64]..[275,11360+65])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[275,11360+66]..[275,11360+72])
                                                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[275,11360+66]..[275,11360+72])
                                                            ]
                                                        ]
                                              ]
                                        ]
                              ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[210,8718+8]..[210,8718+27])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[210,8718+8]..[210,8718+21])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[210,8718+8]..[210,8718+21])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[210,8718+24]..[210,8718+27])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[210,8718+24]..[210,8718+27])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[280,11592+0]..[395,16684+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[280,11592+4]..[280,11592+40])
          Ppat_var "simplify_move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[280,11592+4]..[280,11592+40])
        expression (middle_end/flambda/inline_and_simplify.ml[280,11592+41]..[395,16684+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[280,11592+41]..[280,11592+44])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[280,11592+41]..[280,11592+44])
          expression (middle_end/flambda/inline_and_simplify.ml[280,11592+45]..[395,16684+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[280,11592+45]..[280,11592+46])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[280,11592+45]..[280,11592+46])
            expression (middle_end/flambda/inline_and_simplify.ml[281,11639+6]..[395,16684+70]) ghost
              Pexp_fun
              Labelled "move_within_set_of_closures"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[281,11639+8]..[281,11639+73])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[281,11639+8]..[281,11639+35])
                  Ppat_var "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[281,11639+8]..[281,11639+35])
                core_type (middle_end/flambda/inline_and_simplify.ml[281,11639+38]..[281,11639+73])
                  Ptyp_constr "Flambda.move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[281,11639+38]..[281,11639+73])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[282,11714+6]..[395,16684+70])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[283,11744+2]..[395,16684+70])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[283,11744+2]..[283,11744+30])
                    Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[283,11744+2]..[283,11744+30])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[283,11744+31]..[283,11744+34])
                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[283,11744+31]..[283,11744+34])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[283,11744+35]..[283,11744+70])
                        Pexp_field
                        expression (middle_end/flambda/inline_and_simplify.ml[283,11744+35]..[283,11744+62])
                          Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[283,11744+35]..[283,11744+62])
                        "closure" (middle_end/flambda/inline_and_simplify.ml[283,11744+63]..[283,11744+70])
                    <arg>
                    Labelled "f"
                      expression (middle_end/flambda/inline_and_simplify.ml[284,11815+7]..[395,16684+70])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[284,11815+12]..[284,11815+16])
                          Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[284,11815+12]..[284,11815+16])
                        expression (middle_end/flambda/inline_and_simplify.ml[284,11815+17]..[395,16684+69]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[284,11815+17]..[284,11815+24])
                            Ppat_var "closure" (middle_end/flambda/inline_and_simplify.ml[284,11815+17]..[284,11815+24])
                          expression (middle_end/flambda/inline_and_simplify.ml[284,11815+25]..[395,16684+69]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[284,11815+25]..[284,11815+39])
                              Ppat_var "closure_approx" (middle_end/flambda/inline_and_simplify.ml[284,11815+25]..[284,11815+39])
                            expression (middle_end/flambda/inline_and_simplify.ml[285,11858+4]..[395,16684+69])
                              Pexp_match
                              expression (middle_end/flambda/inline_and_simplify.ml[285,11858+10]..[285,11858+71])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[285,11858+10]..[285,11858+56])
                                  Pexp_ident "A.check_approx_for_closure_allowing_unresolved" (middle_end/flambda/inline_and_simplify.ml[285,11858+10]..[285,11858+56])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[285,11858+57]..[285,11858+71])
                                      Pexp_ident "closure_approx" (middle_end/flambda/inline_and_simplify.ml[285,11858+57]..[285,11858+71])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[286,11935+6]..[286,11935+11])
                                    Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[286,11935+6]..[286,11935+11])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[287,11950+6]..[290,12104+77])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[287,11950+6]..[287,11950+23])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[287,11950+6]..[287,11950+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[287,11950+24]..[288,12023+49])
                                          Pexp_constant PConst_string("Wrong approximation when moving within set of closures.  Approximation: %a  Term: %a",(middle_end/flambda/inline_and_simplify.ml[287,11950+25]..[288,12023+48]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[289,12073+8]..[289,12073+15])
                                          Pexp_ident "A.print" (middle_end/flambda/inline_and_simplify.ml[289,12073+8]..[289,12073+15])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[289,12073+16]..[289,12073+30])
                                          Pexp_ident "closure_approx" (middle_end/flambda/inline_and_simplify.ml[289,12073+16]..[289,12073+30])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[290,12104+8]..[290,12104+49])
                                          Pexp_ident "Flambda.print_move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[290,12104+8]..[290,12104+49])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[290,12104+50]..[290,12104+77])
                                          Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[290,12104+50]..[290,12104+77])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[291,12182+6]..[291,12182+20])
                                    Ppat_construct "Unresolved" (middle_end/flambda/inline_and_simplify.ml[291,12182+6]..[291,12182+16])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[291,12182+17]..[291,12182+20])
                                        Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[291,12182+17]..[291,12182+20])
                                  expression (middle_end/flambda/inline_and_simplify.ml[292,12206+6]..[297,12392+38])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[292,12206+6]..[296,12381+9])
                                        Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[292,12206+6]..[292,12206+33])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[292,12206+34]..[296,12381+9])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[293,12242+10]..[293,12242+17]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[293,12242+10]..[293,12242+17])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[293,12242+10]..[293,12242+17])
                                              "start_from" (middle_end/flambda/inline_and_simplify.ml[294,12261+10]..[294,12261+20])
                                                expression (middle_end/flambda/inline_and_simplify.ml[294,12261+23]..[294,12261+61])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[294,12261+23]..[294,12261+50])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[294,12261+23]..[294,12261+50])
                                                  "start_from" (middle_end/flambda/inline_and_simplify.ml[294,12261+51]..[294,12261+61])
                                              "move_to" (middle_end/flambda/inline_and_simplify.ml[295,12324+10]..[295,12324+17])
                                                expression (middle_end/flambda/inline_and_simplify.ml[295,12324+20]..[295,12324+55])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[295,12324+20]..[295,12324+47])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[295,12324+20]..[295,12324+47])
                                                  "move_to" (middle_end/flambda/inline_and_simplify.ml[295,12324+48]..[295,12324+55])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[297,12392+8]..[297,12392+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[297,12392+8]..[297,12392+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[297,12392+8]..[297,12392+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[297,12392+12]..[297,12392+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[297,12392+12]..[297,12392+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[297,12392+14]..[297,12392+38])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[297,12392+15]..[297,12392+33])
                                                Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[297,12392+15]..[297,12392+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[297,12392+34]..[297,12392+37])
                                                    Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[297,12392+34]..[297,12392+37])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[298,12431+6]..[298,12431+13])
                                    Ppat_construct "Unknown" (middle_end/flambda/inline_and_simplify.ml[298,12431+6]..[298,12431+13])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[299,12448+6]..[304,12634+37])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[299,12448+6]..[303,12623+9])
                                        Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[299,12448+6]..[299,12448+33])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[299,12448+34]..[303,12623+9])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[300,12484+10]..[300,12484+17]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[300,12484+10]..[300,12484+17])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[300,12484+10]..[300,12484+17])
                                              "start_from" (middle_end/flambda/inline_and_simplify.ml[301,12503+10]..[301,12503+20])
                                                expression (middle_end/flambda/inline_and_simplify.ml[301,12503+23]..[301,12503+61])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[301,12503+23]..[301,12503+50])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[301,12503+23]..[301,12503+50])
                                                  "start_from" (middle_end/flambda/inline_and_simplify.ml[301,12503+51]..[301,12503+61])
                                              "move_to" (middle_end/flambda/inline_and_simplify.ml[302,12566+10]..[302,12566+17])
                                                expression (middle_end/flambda/inline_and_simplify.ml[302,12566+20]..[302,12566+55])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[302,12566+20]..[302,12566+47])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[302,12566+20]..[302,12566+47])
                                                  "move_to" (middle_end/flambda/inline_and_simplify.ml[302,12566+48]..[302,12566+55])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[304,12634+8]..[304,12634+37])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[304,12634+8]..[304,12634+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[304,12634+8]..[304,12634+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[304,12634+12]..[304,12634+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[304,12634+12]..[304,12634+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[304,12634+14]..[304,12634+37])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[304,12634+15]..[304,12634+30])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[304,12634+15]..[304,12634+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[304,12634+31]..[304,12634+36])
                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[304,12634+31]..[304,12634+36])
                                                    None
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[305,12672+6]..[305,12672+47])
                                    Ppat_construct "Unknown_because_of_unresolved_value" (middle_end/flambda/inline_and_simplify.ml[305,12672+6]..[305,12672+41])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[305,12672+42]..[305,12672+47])
                                        Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[305,12672+42]..[305,12672+47])
                                  expression (middle_end/flambda/inline_and_simplify.ml[308,12821+6]..[313,13007+56])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[308,12821+6]..[312,12996+9])
                                        Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[308,12821+6]..[308,12821+33])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[308,12821+34]..[312,12996+9])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[309,12857+10]..[309,12857+17]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[309,12857+10]..[309,12857+17])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[309,12857+10]..[309,12857+17])
                                              "start_from" (middle_end/flambda/inline_and_simplify.ml[310,12876+10]..[310,12876+20])
                                                expression (middle_end/flambda/inline_and_simplify.ml[310,12876+23]..[310,12876+61])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[310,12876+23]..[310,12876+50])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[310,12876+23]..[310,12876+50])
                                                  "start_from" (middle_end/flambda/inline_and_simplify.ml[310,12876+51]..[310,12876+61])
                                              "move_to" (middle_end/flambda/inline_and_simplify.ml[311,12939+10]..[311,12939+17])
                                                expression (middle_end/flambda/inline_and_simplify.ml[311,12939+20]..[311,12939+55])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[311,12939+20]..[311,12939+47])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[311,12939+20]..[311,12939+47])
                                                  "move_to" (middle_end/flambda/inline_and_simplify.ml[311,12939+48]..[311,12939+55])
                                            ]
                                            None
                                      expression (middle_end/flambda/inline_and_simplify.ml[313,13007+8]..[313,13007+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[313,13007+8]..[313,13007+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[313,13007+8]..[313,13007+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[313,13007+12]..[313,13007+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[313,13007+12]..[313,13007+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[313,13007+14]..[313,13007+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[313,13007+15]..[313,13007+30])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[313,13007+15]..[313,13007+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[313,13007+31]..[313,13007+55])
                                                    Pexp_construct "Unresolved_value" (middle_end/flambda/inline_and_simplify.ml[313,13007+32]..[313,13007+48])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[313,13007+49]..[313,13007+54])
                                                        Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[313,13007+49]..[313,13007+54])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[314,13064+6]..[315,13135+32])
                                    Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[314,13064+6]..[314,13064+8])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[314,13064+9]..[315,13135+32])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/inline_and_simplify.ml[314,13064+10]..[314,13064+24])
                                            Ppat_var "_value_closure" (middle_end/flambda/inline_and_simplify.ml[314,13064+10]..[314,13064+24])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[314,13064+26]..[314,13064+45])
                                            Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[314,13064+26]..[314,13064+45])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[314,13064+47]..[314,13064+69])
                                            Ppat_var "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[314,13064+47]..[314,13064+69])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[315,13135+10]..[315,13135+31])
                                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[315,13135+10]..[315,13135+31])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[316,13171+6]..[395,16684+69])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[316,13171+10]..[316,13171+17])
                                          Ppat_var "freshen" (middle_end/flambda/inline_and_simplify.ml[316,13171+10]..[316,13171+17])
                                        expression (middle_end/flambda/inline_and_simplify.ml[319,13328+8]..[319,13328+60])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[319,13328+8]..[319,13328+38])
                                            Pexp_ident "A.freshen_and_check_closure_id" (middle_end/flambda/inline_and_simplify.ml[319,13328+8]..[319,13328+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[319,13328+39]..[319,13328+60])
                                                Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[319,13328+39]..[319,13328+60])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[321,13398+6]..[395,16684+69])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[321,13398+10]..[321,13398+17])
                                            Ppat_var "move_to" (middle_end/flambda/inline_and_simplify.ml[321,13398+10]..[321,13398+17])
                                          expression (middle_end/flambda/inline_and_simplify.ml[321,13398+20]..[321,13398+63])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[321,13398+20]..[321,13398+27])
                                              Pexp_ident "freshen" (middle_end/flambda/inline_and_simplify.ml[321,13398+20]..[321,13398+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[321,13398+28]..[321,13398+63])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[321,13398+28]..[321,13398+55])
                                                    Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[321,13398+28]..[321,13398+55])
                                                  "move_to" (middle_end/flambda/inline_and_simplify.ml[321,13398+56]..[321,13398+63])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[322,13465+6]..[395,16684+69])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[322,13465+10]..[322,13465+20])
                                              Ppat_var "start_from" (middle_end/flambda/inline_and_simplify.ml[322,13465+10]..[322,13465+20])
                                            expression (middle_end/flambda/inline_and_simplify.ml[322,13465+23]..[322,13465+69])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[322,13465+23]..[322,13465+30])
                                                Pexp_ident "freshen" (middle_end/flambda/inline_and_simplify.ml[322,13465+23]..[322,13465+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[322,13465+31]..[322,13465+69])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[322,13465+31]..[322,13465+58])
                                                      Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[322,13465+31]..[322,13465+58])
                                                    "start_from" (middle_end/flambda/inline_and_simplify.ml[322,13465+59]..[322,13465+69])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[323,13538+6]..[395,16684+69])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[323,13538+10]..[323,13538+35]) ghost
                                                Ppat_constraint
                                                pattern (middle_end/flambda/inline_and_simplify.ml[323,13538+10]..[323,13538+20])
                                                  Ppat_var "projection" (middle_end/flambda/inline_and_simplify.ml[323,13538+10]..[323,13538+20])
                                                core_type (middle_end/flambda/inline_and_simplify.ml[323,13538+23]..[323,13538+35]) ghost
                                                  Ptyp_poly
                                                  core_type (middle_end/flambda/inline_and_simplify.ml[323,13538+23]..[323,13538+35])
                                                    Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[323,13538+23]..[323,13538+35])
                                                    []
                                              expression (middle_end/flambda/inline_and_simplify.ml[323,13538+10]..[328,13674+9])
                                                Pexp_constraint
                                                expression (middle_end/flambda/inline_and_simplify.ml[324,13576+8]..[328,13674+9])
                                                  Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[324,13576+8]..[324,13576+35])
                                                  Some
                                                    expression (middle_end/flambda/inline_and_simplify.ml[324,13576+36]..[328,13674+9])
                                                      Pexp_record
                                                      [
                                                        "closure" (middle_end/flambda/inline_and_simplify.ml[325,13614+10]..[325,13614+17]) ghost
                                                          expression (middle_end/flambda/inline_and_simplify.ml[325,13614+10]..[325,13614+17])
                                                            Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[325,13614+10]..[325,13614+17])
                                                        "start_from" (middle_end/flambda/inline_and_simplify.ml[326,13633+10]..[326,13633+20]) ghost
                                                          expression (middle_end/flambda/inline_and_simplify.ml[326,13633+10]..[326,13633+20])
                                                            Pexp_ident "start_from" (middle_end/flambda/inline_and_simplify.ml[326,13633+10]..[326,13633+20])
                                                        "move_to" (middle_end/flambda/inline_and_simplify.ml[327,13655+10]..[327,13655+17]) ghost
                                                          expression (middle_end/flambda/inline_and_simplify.ml[327,13655+10]..[327,13655+17])
                                                            Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[327,13655+10]..[327,13655+17])
                                                      ]
                                                      None
                                                core_type (middle_end/flambda/inline_and_simplify.ml[323,13538+23]..[323,13538+35])
                                                  Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[323,13538+23]..[323,13538+35])
                                                  []
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[330,13693+6]..[395,16684+69])
                                            Pexp_match
                                            expression (middle_end/flambda/inline_and_simplify.ml[330,13693+12]..[330,13693+45])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[330,13693+12]..[330,13693+29])
                                                Pexp_ident "E.find_projection" (middle_end/flambda/inline_and_simplify.ml[330,13693+12]..[330,13693+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[330,13693+30]..[330,13693+33])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[330,13693+30]..[330,13693+33])
                                                <arg>
                                                Labelled "projection"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[330,13693+35]..[330,13693+45])
                                                    Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[330,13693+35]..[330,13693+45])
                                              ]
                                            [
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[331,13744+8]..[331,13744+16])
                                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[331,13744+8]..[331,13744+12])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[331,13744+13]..[331,13744+16])
                                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[331,13744+13]..[331,13744+16])
                                                expression (middle_end/flambda/inline_and_simplify.ml[332,13764+8]..[334,13910+43])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[332,13764+8]..[332,13764+36])
                                                    Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[332,13764+8]..[332,13764+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[332,13764+37]..[332,13764+40])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[332,13764+37]..[332,13764+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[332,13764+41]..[332,13764+44])
                                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[332,13764+41]..[332,13764+44])
                                                    <arg>
                                                    Labelled "f"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[332,13764+48]..[334,13910+43])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[332,13764+53]..[332,13764+57])
                                                          Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[332,13764+53]..[332,13764+57])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[332,13764+58]..[334,13910+42]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[332,13764+58]..[332,13764+61])
                                                            Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[332,13764+58]..[332,13764+61])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[332,13764+62]..[334,13910+42]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[332,13764+62]..[332,13764+72])
                                                              Ppat_var "var_approx" (middle_end/flambda/inline_and_simplify.ml[332,13764+62]..[332,13764+72])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[333,13840+10]..[334,13910+42])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[333,13840+14]..[333,13840+15])
                                                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[333,13840+14]..[333,13840+15])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[333,13840+18]..[333,13840+66])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[333,13840+18]..[333,13840+31])
                                                                      Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[333,13840+18]..[333,13840+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[333,13840+32]..[333,13840+33])
  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[333,13840+32]..[333,13840+33])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[333,13840+34]..[333,13840+66])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[333,13840+35]..[333,13840+54])
    Pexp_ident "B.remove_projection" (middle_end/flambda/inline_and_simplify.ml[333,13840+35]..[333,13840+54])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[333,13840+55]..[333,13840+65])
        Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[333,13840+55]..[333,13840+65])
  ]
                                                                    ]
                                                              ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[334,13910+10]..[334,13910+42])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[334,13910+10]..[334,13910+24])
                                                                    Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[334,13910+10]..[334,13910+14])
                                                                    Some
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[334,13910+15]..[334,13910+24])
Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[334,13910+16]..[334,13910+19])
Some
  expression (middle_end/flambda/inline_and_simplify.ml[334,13910+20]..[334,13910+23])
    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[334,13910+20]..[334,13910+23])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[334,13910+26]..[334,13910+42])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[334,13910+26]..[334,13910+29])
                                                                      Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[334,13910+26]..[334,13910+29])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[334,13910+30]..[334,13910+31])
  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[334,13910+30]..[334,13910+31])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[334,13910+32]..[334,13910+42])
  Pexp_ident "var_approx" (middle_end/flambda/inline_and_simplify.ml[334,13910+32]..[334,13910+42])
                                                                    ]
                                                                ]
                                                  ]
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[335,13954+8]..[335,13954+12])
                                                  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[335,13954+8]..[335,13954+12])
                                                  None
                                                expression (middle_end/flambda/inline_and_simplify.ml[336,13970+8]..[395,16684+69])
                                                  Pexp_match
                                                  expression (middle_end/flambda/inline_and_simplify.ml[336,13970+14]..[336,13970+63])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[336,13970+14]..[336,13970+51])
                                                      Pexp_ident "reference_recursive_function_directly" (middle_end/flambda/inline_and_simplify.ml[336,13970+14]..[336,13970+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[336,13970+52]..[336,13970+55])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[336,13970+52]..[336,13970+55])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[336,13970+56]..[336,13970+63])
                                                          Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[336,13970+56]..[336,13970+63])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[337,14039+10]..[337,14039+29])
                                                        Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[337,14039+10]..[337,14039+14])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[337,14039+15]..[337,14039+29])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[337,14039+16]..[337,14039+20])
                                                                Ppat_var "flam" (middle_end/flambda/inline_and_simplify.ml[337,14039+16]..[337,14039+20])
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[337,14039+22]..[337,14039+28])
                                                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[337,14039+22]..[337,14039+28])
                                                            ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[337,14039+33]..[337,14039+51])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[337,14039+33]..[337,14039+37])
                                                            Pexp_ident "flam" (middle_end/flambda/inline_and_simplify.ml[337,14039+33]..[337,14039+37])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[337,14039+39]..[337,14039+51])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[337,14039+39]..[337,14039+42])
                                                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[337,14039+39]..[337,14039+42])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[337,14039+43]..[337,14039+44])
                                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[337,14039+43]..[337,14039+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[337,14039+45]..[337,14039+51])
                                                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[337,14039+45]..[337,14039+51])
                                                            ]
                                                        ]
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[338,14091+10]..[338,14091+14])
                                                        Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[338,14091+10]..[338,14091+14])
                                                        None
                                                      expression (middle_end/flambda/inline_and_simplify.ml[339,14109+10]..[395,16684+69])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/flambda/inline_and_simplify.ml[339,14109+13]..[339,14109+48])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[339,14109+13]..[339,14109+29])
                                                            Pexp_ident "Closure_id.equal" (middle_end/flambda/inline_and_simplify.ml[339,14109+13]..[339,14109+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[339,14109+30]..[339,14109+40])
                                                                Pexp_ident "start_from" (middle_end/flambda/inline_and_simplify.ml[339,14109+30]..[339,14109+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[339,14109+41]..[339,14109+48])
                                                                Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[339,14109+41]..[339,14109+48])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[342,14321+12]..[342,14321+52])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[342,14321+12]..[342,14321+30])
                                                              Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[342,14321+12]..[342,14321+16])
                                                              Some
                                                                expression (middle_end/flambda/inline_and_simplify.ml[342,14321+17]..[342,14321+30])
                                                                  Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[342,14321+18]..[342,14321+21])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[342,14321+22]..[342,14321+29])
                                                                      Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[342,14321+22]..[342,14321+29])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[342,14321+32]..[342,14321+52])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[342,14321+32]..[342,14321+35])
                                                                Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[342,14321+32]..[342,14321+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[342,14321+36]..[342,14321+37])
                                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[342,14321+36]..[342,14321+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[342,14321+38]..[342,14321+52])
                                                                    Pexp_ident "closure_approx" (middle_end/flambda/inline_and_simplify.ml[342,14321+38]..[342,14321+52])
                                                              ]
                                                          ]
                                                        Some
                                                          expression (middle_end/flambda/inline_and_simplify.ml[344,14389+12]..[395,16684+69])
                                                            Pexp_match
                                                            expression (middle_end/flambda/inline_and_simplify.ml[344,14389+18]..[344,14389+37])
                                                              Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[344,14389+18]..[344,14389+37])
                                                            [
                                                              <case>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[345,14432+14]..[345,14432+38])
                                                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[345,14432+14]..[345,14432+18])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[345,14432+19]..[345,14432+38])
                                                                      Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[345,14432+19]..[345,14432+38])
                                                                <when>
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[345,14432+44]..[345,14432+73])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[345,14432+44]..[345,14432+49])
                                                                      Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[345,14432+44]..[345,14432+49])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[345,14432+50]..[345,14432+53])
  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[345,14432+50]..[345,14432+53])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[345,14432+54]..[345,14432+73])
  Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[345,14432+54]..[345,14432+73])
                                                                    ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[349,14697+14]..[358,15036+59])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[349,14697+18]..[349,14697+59]) ghost
Ppat_constraint
pattern (middle_end/flambda/inline_and_simplify.ml[349,14697+18]..[349,14697+33])
  Ppat_var "project_closure" (middle_end/flambda/inline_and_simplify.ml[349,14697+18]..[349,14697+33])
core_type (middle_end/flambda/inline_and_simplify.ml[349,14697+36]..[349,14697+59]) ghost
  Ptyp_poly
  core_type (middle_end/flambda/inline_and_simplify.ml[349,14697+36]..[349,14697+59])
    Ptyp_constr "Flambda.project_closure" (middle_end/flambda/inline_and_simplify.ml[349,14697+36]..[349,14697+59])
    []
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[349,14697+18]..[352,14856+17])
Pexp_constraint
expression (middle_end/flambda/inline_and_simplify.ml[350,14759+16]..[352,14856+17])
  Pexp_record
  [
    "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[350,14759+18]..[350,14759+33])
      expression (middle_end/flambda/inline_and_simplify.ml[350,14759+36]..[350,14759+55])
        Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[350,14759+36]..[350,14759+55])
    "closure_id" (middle_end/flambda/inline_and_simplify.ml[351,14816+18]..[351,14816+28])
      expression (middle_end/flambda/inline_and_simplify.ml[351,14816+31]..[351,14816+38])
        Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[351,14816+31]..[351,14816+38])
  ]
  None
core_type (middle_end/flambda/inline_and_simplify.ml[349,14697+36]..[349,14697+59])
  Ptyp_constr "Flambda.project_closure" (middle_end/flambda/inline_and_simplify.ml[349,14697+36]..[349,14697+59])
  []
                                                                  ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[354,14891+14]..[358,15036+59])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/inline_and_simplify.ml[354,14891+18]..[354,14891+24])
  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[354,14891+18]..[354,14891+24])
expression (middle_end/flambda/inline_and_simplify.ml[355,14918+16]..[356,14993+25])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[355,14918+16]..[355,14918+31])
    Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[355,14918+16]..[355,14918+31])
  [
    <arg>
    Labelled "set_of_closures_var"
      expression (middle_end/flambda/inline_and_simplify.ml[355,14918+33]..[355,14918+52])
        Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[355,14918+33]..[355,14918+52])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[355,14918+53]..[355,14918+74])
        Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[355,14918+53]..[355,14918+74])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[356,14993+18]..[356,14993+25])
        Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[356,14993+18]..[356,14993+25])
  ]
                                                                    ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[358,15036+14]..[358,15036+59])
                                                                      Pexp_tuple
                                                                      [
expression (middle_end/flambda/inline_and_simplify.ml[358,15036+14]..[358,15036+45])
  Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[358,15036+14]..[358,15036+29])
  Some
    expression (middle_end/flambda/inline_and_simplify.ml[358,15036+30]..[358,15036+45])
      Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[358,15036+30]..[358,15036+45])
expression (middle_end/flambda/inline_and_simplify.ml[358,15036+47]..[358,15036+59])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[358,15036+47]..[358,15036+50])
    Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[358,15036+47]..[358,15036+50])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[358,15036+51]..[358,15036+52])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[358,15036+51]..[358,15036+52])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[358,15036+53]..[358,15036+59])
        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[358,15036+53]..[358,15036+59])
  ]
                                                                      ]
                                                              <case>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[359,15096+14]..[359,15096+27])
                                                                  Ppat_or
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[359,15096+14]..[359,15096+20])
                                                                    Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[359,15096+14]..[359,15096+18])
                                                                    Some
                                                                      []
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[359,15096+19]..[359,15096+20])
Ppat_any
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[359,15096+23]..[359,15096+27])
                                                                    Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[359,15096+23]..[359,15096+27])
                                                                    None
                                                                expression (middle_end/flambda/inline_and_simplify.ml[360,15127+14]..[395,16684+69])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[360,15127+20]..[360,15127+42])
                                                                    Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[360,15127+20]..[360,15127+42])
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[361,15175+16]..[361,15175+43])
Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[361,15175+16]..[361,15175+20])
Some
  []
  pattern (middle_end/flambda/inline_and_simplify.ml[361,15175+21]..[361,15175+43])
    Ppat_var "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[361,15175+21]..[361,15175+43])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[362,15222+16]..[387,16247+39])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/inline_and_simplify.ml[362,15222+20]..[362,15222+39])
      Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[362,15222+20]..[362,15222+39])
    expression (middle_end/flambda/inline_and_simplify.ml[363,15264+18]..[363,15264+64])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[363,15264+18]..[363,15264+33])
        Pexp_ident "Variable.create" (middle_end/flambda/inline_and_simplify.ml[363,15264+18]..[363,15264+33])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[363,15264+34]..[363,15264+64])
            Pexp_ident "Internal_variable_names.symbol" (middle_end/flambda/inline_and_simplify.ml[363,15264+34]..[363,15264+64])
      ]
]
expression (middle_end/flambda/inline_and_simplify.ml[365,15348+16]..[387,16247+39])
  Pexp_let Nonrec
  [
    <def>
      pattern (middle_end/flambda/inline_and_simplify.ml[365,15348+20]..[365,15348+61]) ghost
        Ppat_constraint
        pattern (middle_end/flambda/inline_and_simplify.ml[365,15348+20]..[365,15348+35])
          Ppat_var "project_closure" (middle_end/flambda/inline_and_simplify.ml[365,15348+20]..[365,15348+35])
        core_type (middle_end/flambda/inline_and_simplify.ml[365,15348+38]..[365,15348+61]) ghost
          Ptyp_poly
          core_type (middle_end/flambda/inline_and_simplify.ml[365,15348+38]..[365,15348+61])
            Ptyp_constr "Flambda.project_closure" (middle_end/flambda/inline_and_simplify.ml[365,15348+38]..[365,15348+61])
            []
      expression (middle_end/flambda/inline_and_simplify.ml[365,15348+20]..[368,15513+19])
        Pexp_constraint
        expression (middle_end/flambda/inline_and_simplify.ml[366,15412+18]..[368,15513+19])
          Pexp_record
          [
            "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[366,15412+20]..[366,15412+35])
              expression (middle_end/flambda/inline_and_simplify.ml[366,15412+38]..[366,15412+57])
                Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[366,15412+38]..[366,15412+57])
            "closure_id" (middle_end/flambda/inline_and_simplify.ml[367,15471+20]..[367,15471+30])
              expression (middle_end/flambda/inline_and_simplify.ml[367,15471+33]..[367,15471+40])
                Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[367,15471+33]..[367,15471+40])
          ]
          None
        core_type (middle_end/flambda/inline_and_simplify.ml[365,15348+38]..[365,15348+61])
          Ptyp_constr "Flambda.project_closure" (middle_end/flambda/inline_and_simplify.ml[365,15348+38]..[365,15348+61])
          []
  ]
  expression (middle_end/flambda/inline_and_simplify.ml[370,15552+16]..[387,16247+39])
    Pexp_let Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[370,15552+20]..[370,15552+39])
          Ppat_var "project_closure_var" (middle_end/flambda/inline_and_simplify.ml[370,15552+20]..[370,15552+39])
        expression (middle_end/flambda/inline_and_simplify.ml[371,15594+18]..[371,15594+73])
          Pexp_apply
          expression (middle_end/flambda/inline_and_simplify.ml[371,15594+18]..[371,15594+33])
            Pexp_ident "Variable.create" (middle_end/flambda/inline_and_simplify.ml[371,15594+18]..[371,15594+33])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[371,15594+34]..[371,15594+73])
                Pexp_ident "Internal_variable_names.project_closure" (middle_end/flambda/inline_and_simplify.ml[371,15594+34]..[371,15594+73])
          ]
    ]
    expression (middle_end/flambda/inline_and_simplify.ml[373,15687+16]..[387,16247+39])
      Pexp_let Nonrec
      [
        <def>
          pattern (middle_end/flambda/inline_and_simplify.ml[373,15687+20]..[373,15687+24])
            Ppat_var "let1" (middle_end/flambda/inline_and_simplify.ml[373,15687+20]..[373,15687+24])
          expression (middle_end/flambda/inline_and_simplify.ml[374,15714+18]..[376,15825+45])
            Pexp_apply
            expression (middle_end/flambda/inline_and_simplify.ml[374,15714+18]..[374,15714+36])
              Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[374,15714+18]..[374,15714+36])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[374,15714+37]..[374,15714+56])
                  Pexp_ident "project_closure_var" (middle_end/flambda/inline_and_simplify.ml[374,15714+37]..[374,15714+56])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[375,15771+20]..[375,15771+53])
                  Pexp_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[375,15771+21]..[375,15771+36])
                  Some
                    expression (middle_end/flambda/inline_and_simplify.ml[375,15771+37]..[375,15771+52])
                      Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[375,15771+37]..[375,15771+52])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[376,15825+20]..[376,15825+45])
                  Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[376,15825+21]..[376,15825+24])
                  Some
                    expression (middle_end/flambda/inline_and_simplify.ml[376,15825+25]..[376,15825+44])
                      Pexp_ident "project_closure_var" (middle_end/flambda/inline_and_simplify.ml[376,15825+25]..[376,15825+44])
            ]
      ]
      expression (middle_end/flambda/inline_and_simplify.ml[378,15890+16]..[387,16247+39])
        Pexp_let Nonrec
        [
          <def>
            pattern (middle_end/flambda/inline_and_simplify.ml[378,15890+20]..[378,15890+24])
              Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[378,15890+20]..[378,15890+24])
            expression (middle_end/flambda/inline_and_simplify.ml[379,15917+18]..[381,16026+24])
              Pexp_apply
              expression (middle_end/flambda/inline_and_simplify.ml[379,15917+18]..[379,15917+36])
                Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[379,15917+18]..[379,15917+36])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[379,15917+37]..[379,15917+56])
                    Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[379,15917+37]..[379,15917+56])
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[380,15974+20]..[380,15974+51])
                    Pexp_construct "Symbol" (middle_end/flambda/inline_and_simplify.ml[380,15974+21]..[380,15974+27])
                    Some
                      expression (middle_end/flambda/inline_and_simplify.ml[380,15974+28]..[380,15974+50])
                        Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[380,15974+28]..[380,15974+50])
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[381,16026+20]..[381,16026+24])
                    Pexp_ident "let1" (middle_end/flambda/inline_and_simplify.ml[381,16026+20]..[381,16026+24])
              ]
        ]
        expression (middle_end/flambda/inline_and_simplify.ml[383,16070+16]..[387,16247+39])
          Pexp_let Nonrec
          [
            <def>
              pattern (middle_end/flambda/inline_and_simplify.ml[383,16070+20]..[383,16070+26])
                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[383,16070+20]..[383,16070+26])
              expression (middle_end/flambda/inline_and_simplify.ml[384,16099+18]..[385,16178+49])
                Pexp_apply
                expression (middle_end/flambda/inline_and_simplify.ml[384,16099+18]..[384,16099+33])
                  Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[384,16099+18]..[384,16099+33])
                [
                  <arg>
                  Labelled "set_of_closures_var"
                    expression (middle_end/flambda/inline_and_simplify.ml[384,16099+35]..[384,16099+54])
                      Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[384,16099+35]..[384,16099+54])
                  <arg>
                  Labelled "set_of_closures_symbol"
                    expression (middle_end/flambda/inline_and_simplify.ml[384,16099+56]..[384,16099+78])
                      Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[384,16099+56]..[384,16099+78])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[385,16178+20]..[385,16178+41])
                      Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[385,16178+20]..[385,16178+41])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[385,16178+42]..[385,16178+49])
                      Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[385,16178+42]..[385,16178+49])
                ]
          ]
          expression (middle_end/flambda/inline_and_simplify.ml[387,16247+16]..[387,16247+39])
            Pexp_tuple
            [
              expression (middle_end/flambda/inline_and_simplify.ml[387,16247+16]..[387,16247+25])
                Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[387,16247+16]..[387,16247+20])
                Some
                  expression (middle_end/flambda/inline_and_simplify.ml[387,16247+21]..[387,16247+25])
                    Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[387,16247+21]..[387,16247+25])
              expression (middle_end/flambda/inline_and_simplify.ml[387,16247+27]..[387,16247+39])
                Pexp_apply
                expression (middle_end/flambda/inline_and_simplify.ml[387,16247+27]..[387,16247+30])
                  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[387,16247+27]..[387,16247+30])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[387,16247+31]..[387,16247+32])
                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[387,16247+31]..[387,16247+32])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[387,16247+33]..[387,16247+39])
                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[387,16247+33]..[387,16247+39])
                ]
            ]
                                                                    <case>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[388,16287+16]..[388,16287+20])
Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[388,16287+16]..[388,16287+20])
None
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[391,16463+16]..[395,16684+69])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/inline_and_simplify.ml[391,16463+20]..[391,16463+69]) ghost
      Ppat_constraint
      pattern (middle_end/flambda/inline_and_simplify.ml[391,16463+20]..[391,16463+31])
        Ppat_var "move_within" (middle_end/flambda/inline_and_simplify.ml[391,16463+20]..[391,16463+31])
      core_type (middle_end/flambda/inline_and_simplify.ml[391,16463+34]..[391,16463+69]) ghost
        Ptyp_poly
        core_type (middle_end/flambda/inline_and_simplify.ml[391,16463+34]..[391,16463+69])
          Ptyp_constr "Flambda.move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[391,16463+34]..[391,16463+69])
          []
    expression (middle_end/flambda/inline_and_simplify.ml[391,16463+20]..[392,16535+51])
      Pexp_constraint
      expression (middle_end/flambda/inline_and_simplify.ml[392,16535+18]..[392,16535+51])
        Pexp_record
        [
          "closure" (middle_end/flambda/inline_and_simplify.ml[392,16535+20]..[392,16535+27]) ghost
            expression (middle_end/flambda/inline_and_simplify.ml[392,16535+20]..[392,16535+27])
              Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[392,16535+20]..[392,16535+27])
          "start_from" (middle_end/flambda/inline_and_simplify.ml[392,16535+29]..[392,16535+39]) ghost
            expression (middle_end/flambda/inline_and_simplify.ml[392,16535+29]..[392,16535+39])
              Pexp_ident "start_from" (middle_end/flambda/inline_and_simplify.ml[392,16535+29]..[392,16535+39])
          "move_to" (middle_end/flambda/inline_and_simplify.ml[392,16535+41]..[392,16535+48]) ghost
            expression (middle_end/flambda/inline_and_simplify.ml[392,16535+41]..[392,16535+48])
              Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[392,16535+41]..[392,16535+48])
        ]
        None
      core_type (middle_end/flambda/inline_and_simplify.ml[391,16463+34]..[391,16463+69])
        Ptyp_constr "Flambda.move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[391,16463+34]..[391,16463+69])
        []
]
expression (middle_end/flambda/inline_and_simplify.ml[394,16606+16]..[395,16684+69])
  Pexp_let Nonrec
  [
    <def>
      pattern (middle_end/flambda/inline_and_simplify.ml[394,16606+20]..[394,16606+26])
        Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[394,16606+20]..[394,16606+26])
      expression (middle_end/flambda/inline_and_simplify.ml[394,16606+29]..[394,16606+74])
        Pexp_apply
        expression (middle_end/flambda/inline_and_simplify.ml[394,16606+29]..[394,16606+44])
          Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[394,16606+29]..[394,16606+44])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[394,16606+45]..[394,16606+66])
              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[394,16606+45]..[394,16606+66])
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[394,16606+67]..[394,16606+74])
              Pexp_ident "move_to" (middle_end/flambda/inline_and_simplify.ml[394,16606+67]..[394,16606+74])
        ]
  ]
  expression (middle_end/flambda/inline_and_simplify.ml[395,16684+16]..[395,16684+69])
    Pexp_tuple
    [
      expression (middle_end/flambda/inline_and_simplify.ml[395,16684+16]..[395,16684+55])
        Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[395,16684+16]..[395,16684+43])
        Some
          expression (middle_end/flambda/inline_and_simplify.ml[395,16684+44]..[395,16684+55])
            Pexp_ident "move_within" (middle_end/flambda/inline_and_simplify.ml[395,16684+44]..[395,16684+55])
      expression (middle_end/flambda/inline_and_simplify.ml[395,16684+57]..[395,16684+69])
        Pexp_apply
        expression (middle_end/flambda/inline_and_simplify.ml[395,16684+57]..[395,16684+60])
          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[395,16684+57]..[395,16684+60])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[395,16684+61]..[395,16684+62])
              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[395,16684+61]..[395,16684+62])
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[395,16684+63]..[395,16684+69])
              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[395,16684+63]..[395,16684+69])
        ]
    ]
                                                                  ]
                                                            ]
                                                  ]
                                            ]
                              ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[282,11714+8]..[282,11714+27])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[282,11714+8]..[282,11714+21])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[282,11714+8]..[282,11714+21])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[282,11714+24]..[282,11714+27])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[282,11714+24]..[282,11714+27])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[444,18525+0]..[1432,61209+33])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[444,18525+8]..[444,18525+28])
          Ppat_var "simplify_project_var" (middle_end/flambda/inline_and_simplify.ml[444,18525+8]..[444,18525+28])
        expression (middle_end/flambda/inline_and_simplify.ml[444,18525+29]..[510,21583+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[444,18525+29]..[444,18525+32])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[444,18525+29]..[444,18525+32])
          expression (middle_end/flambda/inline_and_simplify.ml[444,18525+33]..[510,21583+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[444,18525+33]..[444,18525+34])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[444,18525+33]..[444,18525+34])
            expression (middle_end/flambda/inline_and_simplify.ml[444,18525+35]..[510,21583+41]) ghost
              Pexp_fun
              Labelled "project_var"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[444,18525+37]..[444,18525+70])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[444,18525+37]..[444,18525+48])
                  Ppat_var "project_var" (middle_end/flambda/inline_and_simplify.ml[444,18525+37]..[444,18525+48])
                core_type (middle_end/flambda/inline_and_simplify.ml[444,18525+51]..[444,18525+70])
                  Ptyp_constr "Flambda.project_var" (middle_end/flambda/inline_and_simplify.ml[444,18525+51]..[444,18525+70])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[445,18597+6]..[510,21583+41])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[446,18627+2]..[510,21583+41])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[446,18627+2]..[446,18627+30])
                    Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[446,18627+2]..[446,18627+30])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[446,18627+31]..[446,18627+34])
                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[446,18627+31]..[446,18627+34])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[446,18627+35]..[446,18627+54])
                        Pexp_field
                        expression (middle_end/flambda/inline_and_simplify.ml[446,18627+35]..[446,18627+46])
                          Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[446,18627+35]..[446,18627+46])
                        "closure" (middle_end/flambda/inline_and_simplify.ml[446,18627+47]..[446,18627+54])
                    <arg>
                    Labelled "f"
                      expression (middle_end/flambda/inline_and_simplify.ml[447,18682+7]..[510,21583+41])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[447,18682+12]..[447,18682+16])
                          Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[447,18682+12]..[447,18682+16])
                        expression (middle_end/flambda/inline_and_simplify.ml[447,18682+17]..[510,21583+40]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[447,18682+17]..[447,18682+24])
                            Ppat_var "closure" (middle_end/flambda/inline_and_simplify.ml[447,18682+17]..[447,18682+24])
                          expression (middle_end/flambda/inline_and_simplify.ml[447,18682+25]..[510,21583+40]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[447,18682+25]..[447,18682+31])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[447,18682+25]..[447,18682+31])
                            expression (middle_end/flambda/inline_and_simplify.ml[448,18717+4]..[510,21583+40])
                              Pexp_match
                              expression (middle_end/flambda/inline_and_simplify.ml[448,18717+10]..[448,18717+63])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[448,18717+10]..[448,18717+56])
                                  Pexp_ident "A.check_approx_for_closure_allowing_unresolved" (middle_end/flambda/inline_and_simplify.ml[448,18717+10]..[448,18717+56])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[448,18717+57]..[448,18717+63])
                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[448,18717+57]..[448,18717+63])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[449,18786+6]..[450,18858+32])
                                    Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[449,18786+6]..[449,18786+8])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[449,18786+9]..[450,18858+32])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/inline_and_simplify.ml[449,18786+10]..[449,18786+23])
                                            Ppat_var "value_closure" (middle_end/flambda/inline_and_simplify.ml[449,18786+10]..[449,18786+23])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[449,18786+25]..[449,18786+45])
                                            Ppat_var "_set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[449,18786+25]..[449,18786+45])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[449,18786+47]..[449,18786+70])
                                            Ppat_var "_set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[449,18786+47]..[449,18786+70])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[450,18858+10]..[450,18858+31])
                                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[450,18858+10]..[450,18858+31])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[451,18894+6]..[489,20583+9])
                                    Pexp_letmodule "F" (middle_end/flambda/inline_and_simplify.ml[451,18894+17]..[451,18894+18])
                                    module_expr (middle_end/flambda/inline_and_simplify.ml[451,18894+21]..[451,18894+43])
                                      Pmod_ident "Freshening.Project_var" (middle_end/flambda/inline_and_simplify.ml[451,18894+21]..[451,18894+43])
                                    expression (middle_end/flambda/inline_and_simplify.ml[452,18941+6]..[489,20583+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[452,18941+10]..[452,18941+20])
                                            Ppat_var "freshening" (middle_end/flambda/inline_and_simplify.ml[452,18941+10]..[452,18941+20])
                                          expression (middle_end/flambda/inline_and_simplify.ml[452,18941+23]..[452,18941+55])
                                            Pexp_field
                                            expression (middle_end/flambda/inline_and_simplify.ml[452,18941+23]..[452,18941+44])
                                              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[452,18941+23]..[452,18941+44])
                                            "freshening" (middle_end/flambda/inline_and_simplify.ml[452,18941+45]..[452,18941+55])
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[453,19000+6]..[489,20583+9])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[453,19000+10]..[453,19000+13])
                                              Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[453,19000+10]..[453,19000+13])
                                            expression (middle_end/flambda/inline_and_simplify.ml[453,19000+16]..[453,19000+69])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[453,19000+16]..[453,19000+42])
                                                Pexp_ident "F.apply_var_within_closure" (middle_end/flambda/inline_and_simplify.ml[453,19000+16]..[453,19000+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[453,19000+43]..[453,19000+53])
                                                    Pexp_ident "freshening" (middle_end/flambda/inline_and_simplify.ml[453,19000+43]..[453,19000+53])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[453,19000+54]..[453,19000+69])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[453,19000+54]..[453,19000+65])
                                                      Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[453,19000+54]..[453,19000+65])
                                                    "var" (middle_end/flambda/inline_and_simplify.ml[453,19000+66]..[453,19000+69])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[454,19073+6]..[489,20583+9])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[454,19073+10]..[454,19073+20])
                                                Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[454,19073+10]..[454,19073+20])
                                              expression (middle_end/flambda/inline_and_simplify.ml[454,19073+23]..[454,19073+75])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[454,19073+23]..[454,19073+41])
                                                  Pexp_ident "F.apply_closure_id" (middle_end/flambda/inline_and_simplify.ml[454,19073+23]..[454,19073+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[454,19073+42]..[454,19073+52])
                                                      Pexp_ident "freshening" (middle_end/flambda/inline_and_simplify.ml[454,19073+42]..[454,19073+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[454,19073+53]..[454,19073+75])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[454,19073+53]..[454,19073+64])
                                                        Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[454,19073+53]..[454,19073+64])
                                                      "closure_id" (middle_end/flambda/inline_and_simplify.ml[454,19073+65]..[454,19073+75])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[455,19152+6]..[489,20583+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[455,19152+10]..[455,19152+30])
                                                  Ppat_var "closure_id_in_approx" (middle_end/flambda/inline_and_simplify.ml[455,19152+10]..[455,19152+30])
                                                expression (middle_end/flambda/inline_and_simplify.ml[455,19152+33]..[455,19152+57])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[455,19152+33]..[455,19152+46])
                                                    Pexp_ident "value_closure" (middle_end/flambda/inline_and_simplify.ml[455,19152+33]..[455,19152+46])
                                                  "closure_id" (middle_end/flambda/inline_and_simplify.ml[455,19152+47]..[455,19152+57])
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[456,19213+6]..[489,20583+9])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inline_and_simplify.ml[456,19213+6]..[465,19741+9])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/inline_and_simplify.ml[456,19213+9]..[456,19213+63])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[456,19213+9]..[456,19213+12])
                                                    Pexp_ident "not" (middle_end/flambda/inline_and_simplify.ml[456,19213+9]..[456,19213+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[456,19213+13]..[456,19213+63])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[456,19213+14]..[456,19213+30])
                                                          Pexp_ident "Closure_id.equal" (middle_end/flambda/inline_and_simplify.ml[456,19213+14]..[456,19213+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[456,19213+31]..[456,19213+41])
                                                              Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[456,19213+31]..[456,19213+41])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[456,19213+42]..[456,19213+62])
                                                              Pexp_ident "closure_id_in_approx" (middle_end/flambda/inline_and_simplify.ml[456,19213+42]..[456,19213+62])
                                                        ]
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[456,19213+69]..[465,19741+9])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[457,19288+8]..[457,19288+25])
                                                    Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[457,19288+8]..[457,19288+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[457,19288+26]..[460,19519+53])
                                                        Pexp_constant PConst_string("When simplifying [Project_var], the closure ID %a in the approximation of the set of closures did not match the closure ID %a in the [Project_var] term.  Approximation: %a@. Var-within-closure being projected: %a@.",(middle_end/flambda/inline_and_simplify.ml[457,19288+27]..[460,19519+52]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[461,19573+10]..[461,19573+26])
                                                        Pexp_ident "Closure_id.print" (middle_end/flambda/inline_and_simplify.ml[461,19573+10]..[461,19573+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[461,19573+27]..[461,19573+47])
                                                        Pexp_ident "closure_id_in_approx" (middle_end/flambda/inline_and_simplify.ml[461,19573+27]..[461,19573+47])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[462,19621+10]..[462,19621+26])
                                                        Pexp_ident "Closure_id.print" (middle_end/flambda/inline_and_simplify.ml[462,19621+10]..[462,19621+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[462,19621+27]..[462,19621+37])
                                                        Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[462,19621+27]..[462,19621+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[463,19659+10]..[463,19659+35])
                                                        Pexp_ident "Simple_value_approx.print" (middle_end/flambda/inline_and_simplify.ml[463,19659+10]..[463,19659+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[463,19659+36]..[463,19659+42])
                                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[463,19659+36]..[463,19659+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[464,19702+10]..[464,19702+34])
                                                        Pexp_ident "Var_within_closure.print" (middle_end/flambda/inline_and_simplify.ml[464,19702+10]..[464,19702+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[464,19702+35]..[464,19702+38])
                                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[464,19702+35]..[464,19702+38])
                                                  ]
                                                None
                                              expression (middle_end/flambda/inline_and_simplify.ml[466,19752+6]..[489,20583+9])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[466,19752+10]..[466,19752+35]) ghost
                                                      Ppat_constraint
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[466,19752+10]..[466,19752+20])
                                                        Ppat_var "projection" (middle_end/flambda/inline_and_simplify.ml[466,19752+10]..[466,19752+20])
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[466,19752+23]..[466,19752+35]) ghost
                                                        Ptyp_poly
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[466,19752+23]..[466,19752+35])
                                                          Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[466,19752+23]..[466,19752+35])
                                                          []
                                                    expression (middle_end/flambda/inline_and_simplify.ml[466,19752+10]..[471,19868+9])
                                                      Pexp_constraint
                                                      expression (middle_end/flambda/inline_and_simplify.ml[467,19790+8]..[471,19868+9])
                                                        Pexp_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[467,19790+8]..[467,19790+19])
                                                        Some
                                                          expression (middle_end/flambda/inline_and_simplify.ml[467,19790+20]..[471,19868+9])
                                                            Pexp_record
                                                            [
                                                              "closure" (middle_end/flambda/inline_and_simplify.ml[468,19812+10]..[468,19812+17]) ghost
                                                                expression (middle_end/flambda/inline_and_simplify.ml[468,19812+10]..[468,19812+17])
                                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[468,19812+10]..[468,19812+17])
                                                              "closure_id" (middle_end/flambda/inline_and_simplify.ml[469,19831+10]..[469,19831+20]) ghost
                                                                expression (middle_end/flambda/inline_and_simplify.ml[469,19831+10]..[469,19831+20])
                                                                  Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[469,19831+10]..[469,19831+20])
                                                              "var" (middle_end/flambda/inline_and_simplify.ml[470,19853+10]..[470,19853+13]) ghost
                                                                expression (middle_end/flambda/inline_and_simplify.ml[470,19853+10]..[470,19853+13])
                                                                  Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[470,19853+10]..[470,19853+13])
                                                            ]
                                                            None
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[466,19752+23]..[466,19752+35])
                                                        Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[466,19752+23]..[466,19752+35])
                                                        []
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[473,19887+6]..[489,20583+9])
                                                  Pexp_match
                                                  expression (middle_end/flambda/inline_and_simplify.ml[473,19887+18]..[473,19887+51])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[473,19887+18]..[473,19887+35])
                                                      Pexp_ident "E.find_projection" (middle_end/flambda/inline_and_simplify.ml[473,19887+18]..[473,19887+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[473,19887+36]..[473,19887+39])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[473,19887+36]..[473,19887+39])
                                                      <arg>
                                                      Labelled "projection"
                                                        expression (middle_end/flambda/inline_and_simplify.ml[473,19887+41]..[473,19887+51])
                                                          Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[473,19887+41]..[473,19887+51])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[474,19944+8]..[474,19944+16])
                                                        Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[474,19944+8]..[474,19944+12])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[474,19944+13]..[474,19944+16])
                                                            Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[474,19944+13]..[474,19944+16])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[475,19964+8]..[477,20110+43])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[475,19964+8]..[475,19964+36])
                                                          Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[475,19964+8]..[475,19964+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[475,19964+37]..[475,19964+40])
                                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[475,19964+37]..[475,19964+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[475,19964+41]..[475,19964+44])
                                                              Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[475,19964+41]..[475,19964+44])
                                                          <arg>
                                                          Labelled "f"
                                                            expression (middle_end/flambda/inline_and_simplify.ml[475,19964+48]..[477,20110+43])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[475,19964+53]..[475,19964+57])
                                                                Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[475,19964+53]..[475,19964+57])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[475,19964+58]..[477,20110+42]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[475,19964+58]..[475,19964+61])
                                                                  Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[475,19964+58]..[475,19964+61])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[475,19964+62]..[477,20110+42]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[475,19964+62]..[475,19964+72])
                                                                    Ppat_var "var_approx" (middle_end/flambda/inline_and_simplify.ml[475,19964+62]..[475,19964+72])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[476,20040+10]..[477,20110+42])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/inline_and_simplify.ml[476,20040+14]..[476,20040+15])
  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[476,20040+14]..[476,20040+15])
expression (middle_end/flambda/inline_and_simplify.ml[476,20040+18]..[476,20040+66])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[476,20040+18]..[476,20040+31])
    Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[476,20040+18]..[476,20040+31])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[476,20040+32]..[476,20040+33])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[476,20040+32]..[476,20040+33])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[476,20040+34]..[476,20040+66])
        Pexp_apply
        expression (middle_end/flambda/inline_and_simplify.ml[476,20040+35]..[476,20040+54])
          Pexp_ident "B.remove_projection" (middle_end/flambda/inline_and_simplify.ml[476,20040+35]..[476,20040+54])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[476,20040+55]..[476,20040+65])
              Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[476,20040+55]..[476,20040+65])
        ]
  ]
                                                                    ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[477,20110+10]..[477,20110+42])
                                                                      Pexp_tuple
                                                                      [
expression (middle_end/flambda/inline_and_simplify.ml[477,20110+10]..[477,20110+24])
  Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[477,20110+10]..[477,20110+14])
  Some
    expression (middle_end/flambda/inline_and_simplify.ml[477,20110+15]..[477,20110+24])
      Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[477,20110+16]..[477,20110+19])
      Some
        expression (middle_end/flambda/inline_and_simplify.ml[477,20110+20]..[477,20110+23])
          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[477,20110+20]..[477,20110+23])
expression (middle_end/flambda/inline_and_simplify.ml[477,20110+26]..[477,20110+42])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[477,20110+26]..[477,20110+29])
    Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[477,20110+26]..[477,20110+29])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[477,20110+30]..[477,20110+31])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[477,20110+30]..[477,20110+31])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[477,20110+32]..[477,20110+42])
        Pexp_ident "var_approx" (middle_end/flambda/inline_and_simplify.ml[477,20110+32]..[477,20110+42])
  ]
                                                                      ]
                                                        ]
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[478,20154+8]..[478,20154+12])
                                                        Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[478,20154+8]..[478,20154+12])
                                                        None
                                                      expression (middle_end/flambda/inline_and_simplify.ml[479,20170+8]..[488,20521+61])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[479,20170+12]..[479,20170+18])
                                                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[479,20170+12]..[479,20170+18])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[479,20170+21]..[479,20170+69])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[479,20170+21]..[479,20170+43])
                                                                Pexp_ident "A.approx_for_bound_var" (middle_end/flambda/inline_and_simplify.ml[479,20170+21]..[479,20170+43])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[479,20170+44]..[479,20170+65])
                                                                    Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[479,20170+44]..[479,20170+65])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[479,20170+66]..[479,20170+69])
                                                                    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[479,20170+66]..[479,20170+69])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[480,20243+8]..[488,20521+61])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[480,20243+12]..[480,20243+32]) ghost
                                                                Ppat_constraint
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[480,20243+12]..[480,20243+16])
                                                                  Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[480,20243+12]..[480,20243+16])
                                                                core_type (middle_end/flambda/inline_and_simplify.ml[480,20243+19]..[480,20243+32]) ghost
                                                                  Ptyp_poly
                                                                  core_type (middle_end/flambda/inline_and_simplify.ml[480,20243+19]..[480,20243+32])
                                                                    Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[480,20243+19]..[480,20243+32])
                                                                    []
                                                              expression (middle_end/flambda/inline_and_simplify.ml[480,20243+12]..[480,20243+76])
                                                                Pexp_constraint
                                                                expression (middle_end/flambda/inline_and_simplify.ml[480,20243+35]..[480,20243+76])
                                                                  Pexp_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[480,20243+35]..[480,20243+46])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[480,20243+47]..[480,20243+76])
                                                                      Pexp_record
                                                                      [
"closure" (middle_end/flambda/inline_and_simplify.ml[480,20243+49]..[480,20243+56]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[480,20243+49]..[480,20243+56])
    Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[480,20243+49]..[480,20243+56])
"closure_id" (middle_end/flambda/inline_and_simplify.ml[480,20243+58]..[480,20243+68]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[480,20243+58]..[480,20243+68])
    Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[480,20243+58]..[480,20243+68])
"var" (middle_end/flambda/inline_and_simplify.ml[480,20243+70]..[480,20243+73]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[480,20243+70]..[480,20243+73])
    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[480,20243+70]..[480,20243+73])
                                                                      ]
                                                                      None
                                                                core_type (middle_end/flambda/inline_and_simplify.ml[480,20243+19]..[480,20243+32])
                                                                  Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[480,20243+19]..[480,20243+32])
                                                                  []
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[481,20323+8]..[488,20521+61])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[481,20323+12]..[481,20323+21])
                                                                  Ppat_var "unwrapped" (middle_end/flambda/inline_and_simplify.ml[481,20323+12]..[481,20323+21])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[481,20323+24]..[481,20323+53])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[481,20323+24]..[481,20323+49])
                                                                    Pexp_ident "Var_within_closure.unwrap" (middle_end/flambda/inline_and_simplify.ml[481,20323+24]..[481,20323+49])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[481,20323+50]..[481,20323+53])
Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[481,20323+50]..[481,20323+53])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[482,20380+8]..[488,20521+61])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[482,20380+12]..[482,20380+16])
                                                                    Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[482,20380+12]..[482,20380+16])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[483,20399+10]..[486,20493+16])
                                                                    Pexp_ifthenelse
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[483,20399+13]..[483,20399+32])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[483,20399+13]..[483,20399+18])
Pexp_ident "E.mem" (middle_end/flambda/inline_and_simplify.ml[483,20399+13]..[483,20399+18])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[483,20399+19]..[483,20399+22])
    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[483,20399+19]..[483,20399+22])
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[483,20399+23]..[483,20399+32])
    Pexp_ident "unwrapped" (middle_end/flambda/inline_and_simplify.ml[483,20399+23]..[483,20399+32])
                                                                      ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[484,20437+12]..[484,20437+40])
                                                                      Pexp_construct "Flambda.Expr" (middle_end/flambda/inline_and_simplify.ml[484,20437+12]..[484,20437+24])
                                                                      Some
expression (middle_end/flambda/inline_and_simplify.ml[484,20437+25]..[484,20437+40])
  Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[484,20437+26]..[484,20437+29])
  Some
    expression (middle_end/flambda/inline_and_simplify.ml[484,20437+30]..[484,20437+39])
      Pexp_ident "unwrapped" (middle_end/flambda/inline_and_simplify.ml[484,20437+30]..[484,20437+39])
                                                                    Some
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[486,20493+12]..[486,20493+16])
Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[486,20493+12]..[486,20493+16])
                                                              ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[488,20521+8]..[488,20521+61])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[488,20521+8]..[488,20521+43])
                                                                  Pexp_ident "simplify_named_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[488,20521+8]..[488,20521+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[488,20521+44]..[488,20521+47])
                                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[488,20521+44]..[488,20521+47])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[488,20521+48]..[488,20521+49])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[488,20521+48]..[488,20521+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[488,20521+50]..[488,20521+54])
                                                                      Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[488,20521+50]..[488,20521+54])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[488,20521+55]..[488,20521+61])
                                                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[488,20521+55]..[488,20521+61])
                                                                ]
                                                  ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[490,20593+6]..[490,20593+23])
                                    Ppat_construct "Unresolved" (middle_end/flambda/inline_and_simplify.ml[490,20593+6]..[490,20593+16])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[490,20593+17]..[490,20593+23])
                                        Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[490,20593+17]..[490,20593+23])
                                  expression (middle_end/flambda/inline_and_simplify.ml[495,20893+6]..[496,20941+41])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[495,20893+6]..[495,20893+46])
                                        Pexp_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[495,20893+6]..[495,20893+17])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[495,20893+18]..[495,20893+46])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[495,20893+37]..[495,20893+44]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[495,20893+37]..[495,20893+44])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[495,20893+37]..[495,20893+44])
                                            ]
                                            Some
                                              expression (middle_end/flambda/inline_and_simplify.ml[495,20893+20]..[495,20893+31])
                                                Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[495,20893+20]..[495,20893+31])
                                      expression (middle_end/flambda/inline_and_simplify.ml[496,20941+8]..[496,20941+41])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[496,20941+8]..[496,20941+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[496,20941+8]..[496,20941+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[496,20941+12]..[496,20941+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[496,20941+12]..[496,20941+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[496,20941+14]..[496,20941+41])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[496,20941+15]..[496,20941+33])
                                                Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[496,20941+15]..[496,20941+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[496,20941+34]..[496,20941+40])
                                                    Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[496,20941+34]..[496,20941+40])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[497,20983+6]..[497,20983+13])
                                    Ppat_construct "Unknown" (middle_end/flambda/inline_and_simplify.ml[497,20983+6]..[497,20983+13])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[498,21000+6]..[499,21048+37])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[498,21000+6]..[498,21000+46])
                                        Pexp_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[498,21000+6]..[498,21000+17])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[498,21000+18]..[498,21000+46])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[498,21000+37]..[498,21000+44]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[498,21000+37]..[498,21000+44])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[498,21000+37]..[498,21000+44])
                                            ]
                                            Some
                                              expression (middle_end/flambda/inline_and_simplify.ml[498,21000+20]..[498,21000+31])
                                                Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[498,21000+20]..[498,21000+31])
                                      expression (middle_end/flambda/inline_and_simplify.ml[499,21048+8]..[499,21048+37])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[499,21048+8]..[499,21048+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[499,21048+8]..[499,21048+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[499,21048+12]..[499,21048+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[499,21048+12]..[499,21048+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[499,21048+14]..[499,21048+37])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[499,21048+15]..[499,21048+30])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[499,21048+15]..[499,21048+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[499,21048+31]..[499,21048+36])
                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[499,21048+31]..[499,21048+36])
                                                    None
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[500,21086+6]..[500,21086+47])
                                    Ppat_construct "Unknown_because_of_unresolved_value" (middle_end/flambda/inline_and_simplify.ml[500,21086+6]..[500,21086+41])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inline_and_simplify.ml[500,21086+42]..[500,21086+47])
                                        Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[500,21086+42]..[500,21086+47])
                                  expression (middle_end/flambda/inline_and_simplify.ml[501,21137+6]..[502,21185+56])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[501,21137+6]..[501,21137+46])
                                        Pexp_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[501,21137+6]..[501,21137+17])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[501,21137+18]..[501,21137+46])
                                            Pexp_record
                                            [
                                              "closure" (middle_end/flambda/inline_and_simplify.ml[501,21137+37]..[501,21137+44]) ghost
                                                expression (middle_end/flambda/inline_and_simplify.ml[501,21137+37]..[501,21137+44])
                                                  Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[501,21137+37]..[501,21137+44])
                                            ]
                                            Some
                                              expression (middle_end/flambda/inline_and_simplify.ml[501,21137+20]..[501,21137+31])
                                                Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[501,21137+20]..[501,21137+31])
                                      expression (middle_end/flambda/inline_and_simplify.ml[502,21185+8]..[502,21185+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[502,21185+8]..[502,21185+11])
                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[502,21185+8]..[502,21185+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[502,21185+12]..[502,21185+13])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[502,21185+12]..[502,21185+13])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[502,21185+14]..[502,21185+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[502,21185+15]..[502,21185+30])
                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[502,21185+15]..[502,21185+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[502,21185+31]..[502,21185+55])
                                                    Pexp_construct "Unresolved_value" (middle_end/flambda/inline_and_simplify.ml[502,21185+32]..[502,21185+48])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[502,21185+49]..[502,21185+54])
                                                        Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[502,21185+49]..[502,21185+54])
                                              ]
                                        ]
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[503,21242+6]..[503,21242+11])
                                    Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[503,21242+6]..[503,21242+11])
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[506,21376+6]..[510,21583+40])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[506,21376+6]..[506,21376+23])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[506,21376+6]..[506,21376+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[506,21376+24]..[507,21441+64])
                                          Pexp_constant PConst_string("[Project_var] from a value with wrong approximation: %a@.closure=%a@.approx of closure=%a@.",(middle_end/flambda/inline_and_simplify.ml[506,21376+25]..[507,21441+63]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[508,21506+8]..[508,21506+33])
                                          Pexp_ident "Flambda.print_project_var" (middle_end/flambda/inline_and_simplify.ml[508,21506+8]..[508,21506+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[508,21506+34]..[508,21506+45])
                                          Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[508,21506+34]..[508,21506+45])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[509,21552+8]..[509,21552+22])
                                          Pexp_ident "Variable.print" (middle_end/flambda/inline_and_simplify.ml[509,21552+8]..[509,21552+22])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[509,21552+23]..[509,21552+30])
                                          Pexp_ident "closure" (middle_end/flambda/inline_and_simplify.ml[509,21552+23]..[509,21552+30])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[510,21583+8]..[510,21583+33])
                                          Pexp_ident "Simple_value_approx.print" (middle_end/flambda/inline_and_simplify.ml[510,21583+8]..[510,21583+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[510,21583+34]..[510,21583+40])
                                          Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[510,21583+34]..[510,21583+40])
                                    ]
                              ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[445,18597+8]..[445,18597+27])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[445,18597+8]..[445,18597+21])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[445,18597+8]..[445,18597+21])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[445,18597+24]..[445,18597+27])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[445,18597+24]..[445,18597+27])
                      []
                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[574,24001+4]..[574,24001+28])
          Ppat_var "simplify_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[574,24001+4]..[574,24001+28])
        expression (middle_end/flambda/inline_and_simplify.ml[574,24001+29]..[671,28091+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[574,24001+29]..[574,24001+41])
            Ppat_var "original_env" (middle_end/flambda/inline_and_simplify.ml[574,24001+29]..[574,24001+41])
          expression (middle_end/flambda/inline_and_simplify.ml[574,24001+42]..[671,28091+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[574,24001+42]..[574,24001+43])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[574,24001+42]..[574,24001+43])
            expression (middle_end/flambda/inline_and_simplify.ml[575,24045+6]..[671,28091+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[575,24045+6]..[575,24045+49])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[575,24045+7]..[575,24045+22])
                  Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[575,24045+7]..[575,24045+22])
                core_type (middle_end/flambda/inline_and_simplify.ml[575,24045+25]..[575,24045+48])
                  Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/inline_and_simplify.ml[575,24045+25]..[575,24045+48])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[576,24095+6]..[671,28091+54])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[577,24162+2]..[671,28091+54])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[577,24162+6]..[577,24162+20])
                        Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[577,24162+6]..[577,24162+20])
                      expression (middle_end/flambda/inline_and_simplify.ml[578,24185+4]..[585,24606+49])
                        Pexp_letmodule "Backend" (middle_end/flambda/inline_and_simplify.ml[578,24185+15]..[578,24185+22])
                        module_expr (middle_end/flambda/inline_and_simplify.ml[578,24185+25]..[578,24185+72])
                          Pmod_unpack
                          expression (middle_end/flambda/inline_and_simplify.ml[578,24185+30]..[578,24185+71]) ghost
                            Pexp_constraint
                            expression (middle_end/flambda/inline_and_simplify.ml[578,24185+30]..[578,24185+54])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[578,24185+31]..[578,24185+40])
                                Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[578,24185+31]..[578,24185+40])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[578,24185+41]..[578,24185+53])
                                    Pexp_ident "original_env" (middle_end/flambda/inline_and_simplify.ml[578,24185+41]..[578,24185+53])
                              ]
                            core_type (middle_end/flambda/inline_and_simplify.ml[578,24185+57]..[578,24185+71])
                              Ptyp_package "Backend_intf.S" (middle_end/flambda/inline_and_simplify.ml[578,24185+57]..[578,24185+71])
                              []
                        expression (middle_end/flambda/inline_and_simplify.ml[583,24489+4]..[585,24606+49])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[583,24489+4]..[583,24489+51])
                            Pexp_ident "Freshening.rewrite_recursive_calls_with_symbols" (middle_end/flambda/inline_and_simplify.ml[583,24489+4]..[583,24489+51])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[583,24489+52]..[583,24489+79])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[583,24489+53]..[583,24489+65])
                                  Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[583,24489+53]..[583,24489+65])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[583,24489+66]..[583,24489+78])
                                      Pexp_ident "original_env" (middle_end/flambda/inline_and_simplify.ml[583,24489+66]..[583,24489+78])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[584,24569+6]..[584,24569+36])
                                Pexp_field
                                expression (middle_end/flambda/inline_and_simplify.ml[584,24569+6]..[584,24569+21])
                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[584,24569+6]..[584,24569+21])
                                "function_decls" (middle_end/flambda/inline_and_simplify.ml[584,24569+22]..[584,24569+36])
                            <arg>
                            Labelled "make_closure_symbol"
                              expression (middle_end/flambda/inline_and_simplify.ml[585,24606+27]..[585,24606+49])
                                Pexp_ident "Backend.closure_symbol" (middle_end/flambda/inline_and_simplify.ml[585,24606+27]..[585,24606+49])
                          ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[587,24661+2]..[671,28091+54])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[587,24661+6]..[587,24661+9])
                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[587,24661+6]..[587,24661+9])
                        expression (middle_end/flambda/inline_and_simplify.ml[587,24661+12]..[587,24661+49])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[587,24661+12]..[587,24661+36])
                            Pexp_ident "E.increase_closure_depth" (middle_end/flambda/inline_and_simplify.ml[587,24661+12]..[587,24661+36])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[587,24661+37]..[587,24661+49])
                                Pexp_ident "original_env" (middle_end/flambda/inline_and_simplify.ml[587,24661+37]..[587,24661+49])
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[588,24714+2]..[671,28091+54])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inline_and_simplify.ml[588,24714+6]..[589,24791+57])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[588,24714+6]..[588,24714+15])
                                Ppat_var "free_vars" (middle_end/flambda/inline_and_simplify.ml[588,24714+6]..[588,24714+15])
                              pattern (middle_end/flambda/inline_and_simplify.ml[588,24714+17]..[588,24714+33])
                                Ppat_var "specialised_args" (middle_end/flambda/inline_and_simplify.ml[588,24714+17]..[588,24714+33])
                              pattern (middle_end/flambda/inline_and_simplify.ml[588,24714+35]..[588,24714+49])
                                Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[588,24714+35]..[588,24714+49])
                              pattern (middle_end/flambda/inline_and_simplify.ml[588,24714+51]..[588,24714+75])
                                Ppat_var "parameter_approximations" (middle_end/flambda/inline_and_simplify.ml[588,24714+51]..[588,24714+75])
                              pattern (middle_end/flambda/inline_and_simplify.ml[589,24791+6]..[589,24791+36])
                                Ppat_var "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[589,24791+6]..[589,24791+36])
                              pattern (middle_end/flambda/inline_and_simplify.ml[589,24791+38]..[589,24791+57])
                                Ppat_var "set_of_closures_env" (middle_end/flambda/inline_and_simplify.ml[589,24791+38]..[589,24791+57])
                            ]
                          expression (middle_end/flambda/inline_and_simplify.ml[590,24851+4]..[592,24988+19])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[590,24851+4]..[590,24851+63])
                              Pexp_ident "Inline_and_simplify_aux.prepare_to_simplify_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[590,24851+4]..[590,24851+63])
                            [
                              <arg>
                              Labelled "env"
                                expression (middle_end/flambda/inline_and_simplify.ml[590,24851+65]..[590,24851+68])
                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[590,24851+65]..[590,24851+68])
                              <arg>
                              Labelled "set_of_closures"
                                expression (middle_end/flambda/inline_and_simplify.ml[591,24920+7]..[591,24920+22])
                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[591,24920+7]..[591,24920+22])
                              <arg>
                              Labelled "function_decls"
                                expression (middle_end/flambda/inline_and_simplify.ml[591,24920+24]..[591,24920+38])
                                  Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[591,24920+24]..[591,24920+38])
                              <arg>
                              Labelled "only_for_function_decl"
                                expression (middle_end/flambda/inline_and_simplify.ml[591,24920+63]..[591,24920+67])
                                  Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[591,24920+63]..[591,24920+67])
                                  None
                              <arg>
                              Labelled "freshen"
                                expression (middle_end/flambda/inline_and_simplify.ml[592,24988+15]..[592,24988+19])
                                  Pexp_construct "true" (middle_end/flambda/inline_and_simplify.ml[592,24988+15]..[592,24988+19])
                                  None
                            ]
                      ]
                      expression (middle_end/flambda/inline_and_simplify.ml[594,25013+2]..[671,28091+54])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[594,25013+6]..[594,25013+23])
                              Ppat_var "simplify_function" (middle_end/flambda/inline_and_simplify.ml[594,25013+6]..[594,25013+23])
                            expression (middle_end/flambda/inline_and_simplify.ml[594,25013+24]..[621,26268+52]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[594,25013+24]..[594,25013+31])
                                Ppat_var "fun_var" (middle_end/flambda/inline_and_simplify.ml[594,25013+24]..[594,25013+31])
                              expression (middle_end/flambda/inline_and_simplify.ml[594,25013+32]..[621,26268+52]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[594,25013+32]..[594,25013+78])
                                  Ppat_constraint
                                  pattern (middle_end/flambda/inline_and_simplify.ml[594,25013+33]..[594,25013+46])
                                    Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[594,25013+33]..[594,25013+46])
                                  core_type (middle_end/flambda/inline_and_simplify.ml[594,25013+49]..[594,25013+77])
                                    Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/inline_and_simplify.ml[594,25013+49]..[594,25013+77])
                                    []
                                expression (middle_end/flambda/inline_and_simplify.ml[595,25092+8]..[621,26268+52]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[595,25092+8]..[595,25092+30])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[595,25092+9]..[595,25092+13])
                                        Ppat_var "funs" (middle_end/flambda/inline_and_simplify.ml[595,25092+9]..[595,25092+13])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[595,25092+15]..[595,25092+26])
                                        Ppat_var "used_params" (middle_end/flambda/inline_and_simplify.ml[595,25092+15]..[595,25092+26])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[595,25092+28]..[595,25092+29])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[595,25092+28]..[595,25092+29])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[596,25123+8]..[621,26268+52])
                                    Pexp_constraint
                                    expression (middle_end/flambda/inline_and_simplify.ml[597,25202+4]..[621,26268+52])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[597,25202+8]..[597,25202+19])
                                            Ppat_var "closure_env" (middle_end/flambda/inline_and_simplify.ml[597,25202+8]..[597,25202+19])
                                          expression (middle_end/flambda/inline_and_simplify.ml[598,25224+6]..[600,25360+28])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[598,25224+6]..[598,25224+57])
                                              Pexp_ident "Inline_and_simplify_aux.prepare_to_simplify_closure" (middle_end/flambda/inline_and_simplify.ml[598,25224+6]..[598,25224+57])
                                            [
                                              <arg>
                                              Labelled "function_decl"
                                                expression (middle_end/flambda/inline_and_simplify.ml[598,25224+59]..[598,25224+72])
                                                  Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[598,25224+59]..[598,25224+72])
                                              <arg>
                                              Labelled "free_vars"
                                                expression (middle_end/flambda/inline_and_simplify.ml[599,25297+9]..[599,25297+18])
                                                  Pexp_ident "free_vars" (middle_end/flambda/inline_and_simplify.ml[599,25297+9]..[599,25297+18])
                                              <arg>
                                              Labelled "specialised_args"
                                                expression (middle_end/flambda/inline_and_simplify.ml[599,25297+20]..[599,25297+36])
                                                  Pexp_ident "specialised_args" (middle_end/flambda/inline_and_simplify.ml[599,25297+20]..[599,25297+36])
                                              <arg>
                                              Labelled "parameter_approximations"
                                                expression (middle_end/flambda/inline_and_simplify.ml[599,25297+38]..[599,25297+62])
                                                  Pexp_ident "parameter_approximations" (middle_end/flambda/inline_and_simplify.ml[599,25297+38]..[599,25297+62])
                                              <arg>
                                              Labelled "set_of_closures_env"
                                                expression (middle_end/flambda/inline_and_simplify.ml[600,25360+9]..[600,25360+28])
                                                  Pexp_ident "set_of_closures_env" (middle_end/flambda/inline_and_simplify.ml[600,25360+9]..[600,25360+28])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[602,25396+4]..[621,26268+52])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[602,25396+8]..[602,25396+15])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[602,25396+8]..[602,25396+12])
                                                  Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[602,25396+8]..[602,25396+12])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[602,25396+14]..[602,25396+15])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[602,25396+14]..[602,25396+15])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[603,25414+6]..[610,25762+49])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[603,25414+6]..[603,25414+21])
                                                Pexp_ident "E.enter_closure" (middle_end/flambda/inline_and_simplify.ml[603,25414+6]..[603,25414+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[603,25414+22]..[603,25414+33])
                                                    Pexp_ident "closure_env" (middle_end/flambda/inline_and_simplify.ml[603,25414+22]..[603,25414+33])
                                                <arg>
                                                Labelled "closure_id"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[603,25414+46]..[603,25414+71])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[603,25414+47]..[603,25414+62])
                                                      Pexp_ident "Closure_id.wrap" (middle_end/flambda/inline_and_simplify.ml[603,25414+47]..[603,25414+62])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[603,25414+63]..[603,25414+70])
                                                          Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[603,25414+63]..[603,25414+70])
                                                    ]
                                                <arg>
                                                Labelled "inline_inside"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[605,25510+10]..[605,25510+76])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[605,25510+11]..[605,25510+61])
                                                      Pexp_ident "Inlining_decision.should_inline_inside_declaration" (middle_end/flambda/inline_and_simplify.ml[605,25510+11]..[605,25510+61])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[605,25510+62]..[605,25510+75])
                                                          Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[605,25510+62]..[605,25510+75])
                                                    ]
                                                <arg>
                                                Labelled "dbg"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[606,25587+13]..[606,25587+30])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[606,25587+13]..[606,25587+26])
                                                      Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[606,25587+13]..[606,25587+26])
                                                    "dbg" (middle_end/flambda/inline_and_simplify.ml[606,25587+27]..[606,25587+30])
                                                <arg>
                                                Labelled "f"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[607,25618+11]..[610,25762+49])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[607,25618+16]..[607,25618+24])
                                                      Ppat_var "body_env" (middle_end/flambda/inline_and_simplify.ml[607,25618+16]..[607,25618+24])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[608,25646+10]..[610,25762+48])
                                                      Pexp_sequence
                                                      expression (middle_end/flambda/inline_and_simplify.ml[608,25646+10]..[609,25701+59])
                                                        Pexp_assert
                                                        expression (middle_end/flambda/inline_and_simplify.ml[608,25646+17]..[609,25701+59])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[608,25646+18]..[608,25646+54])
                                                            Pexp_ident "E.inside_set_of_closures_declaration" (middle_end/flambda/inline_and_simplify.ml[608,25646+18]..[608,25646+54])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[609,25701+12]..[609,25701+49])
                                                                Pexp_field
                                                                expression (middle_end/flambda/inline_and_simplify.ml[609,25701+12]..[609,25701+26])
                                                                  Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[609,25701+12]..[609,25701+26])
                                                                "set_of_closures_origin" (middle_end/flambda/inline_and_simplify.ml[609,25701+27]..[609,25701+49])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[609,25701+50]..[609,25701+58])
                                                                Pexp_ident "body_env" (middle_end/flambda/inline_and_simplify.ml[609,25701+50]..[609,25701+58])
                                                          ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[610,25762+10]..[610,25762+48])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[610,25762+10]..[610,25762+18])
                                                          Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[610,25762+10]..[610,25762+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[610,25762+19]..[610,25762+27])
                                                              Pexp_ident "body_env" (middle_end/flambda/inline_and_simplify.ml[610,25762+19]..[610,25762+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[610,25762+28]..[610,25762+29])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[610,25762+28]..[610,25762+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[610,25762+30]..[610,25762+48])
                                                              Pexp_field
                                                              expression (middle_end/flambda/inline_and_simplify.ml[610,25762+30]..[610,25762+43])
                                                                Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[610,25762+30]..[610,25762+43])
                                                              "body" (middle_end/flambda/inline_and_simplify.ml[610,25762+44]..[610,25762+48])
                                                        ]
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[612,25819+4]..[621,26268+52])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[612,25819+8]..[612,25819+21])
                                                Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[612,25819+8]..[612,25819+21])
                                              expression (middle_end/flambda/inline_and_simplify.ml[613,25843+6]..[617,26099+52])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[613,25843+6]..[613,25843+41])
                                                  Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/inline_and_simplify.ml[613,25843+6]..[613,25843+41])
                                                [
                                                  <arg>
                                                  Labelled "params"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[613,25843+50]..[613,25843+70])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[613,25843+50]..[613,25843+63])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[613,25843+50]..[613,25843+63])
                                                      "params" (middle_end/flambda/inline_and_simplify.ml[613,25843+64]..[613,25843+70])
                                                  <arg>
                                                  Labelled "body"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[614,25914+9]..[614,25914+13])
                                                      Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[614,25914+9]..[614,25914+13])
                                                  <arg>
                                                  Labelled "stub"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[614,25914+20]..[614,25914+38])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[614,25914+20]..[614,25914+33])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[614,25914+20]..[614,25914+33])
                                                      "stub" (middle_end/flambda/inline_and_simplify.ml[614,25914+34]..[614,25914+38])
                                                  <arg>
                                                  Labelled "dbg"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[614,25914+44]..[614,25914+61])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[614,25914+44]..[614,25914+57])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[614,25914+44]..[614,25914+57])
                                                      "dbg" (middle_end/flambda/inline_and_simplify.ml[614,25914+58]..[614,25914+61])
                                                  <arg>
                                                  Labelled "inline"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[615,25976+16]..[615,25976+36])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[615,25976+16]..[615,25976+29])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[615,25976+16]..[615,25976+29])
                                                      "inline" (middle_end/flambda/inline_and_simplify.ml[615,25976+30]..[615,25976+36])
                                                  <arg>
                                                  Labelled "specialise"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[615,25976+49]..[615,25976+73])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[615,25976+49]..[615,25976+62])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[615,25976+49]..[615,25976+62])
                                                      "specialise" (middle_end/flambda/inline_and_simplify.ml[615,25976+63]..[615,25976+73])
                                                  <arg>
                                                  Labelled "is_a_functor"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[616,26050+22]..[616,26050+48])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[616,26050+22]..[616,26050+35])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[616,26050+22]..[616,26050+35])
                                                      "is_a_functor" (middle_end/flambda/inline_and_simplify.ml[616,26050+36]..[616,26050+48])
                                                  <arg>
                                                  Labelled "closure_origin"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[617,26099+24]..[617,26099+52])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[617,26099+24]..[617,26099+37])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[617,26099+24]..[617,26099+37])
                                                      "closure_origin" (middle_end/flambda/inline_and_simplify.ml[617,26099+38]..[617,26099+52])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[619,26159+4]..[621,26268+52])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[619,26159+8]..[619,26159+20])
                                                  Ppat_var "used_params'" (middle_end/flambda/inline_and_simplify.ml[619,26159+8]..[619,26159+20])
                                                expression (middle_end/flambda/inline_and_simplify.ml[619,26159+23]..[619,26159+56])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[619,26159+23]..[619,26159+42])
                                                    Pexp_ident "Flambda.used_params" (middle_end/flambda/inline_and_simplify.ml[619,26159+23]..[619,26159+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[619,26159+43]..[619,26159+56])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[619,26159+43]..[619,26159+56])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[620,26219+4]..[621,26268+52])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inline_and_simplify.ml[620,26219+4]..[620,26219+47])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[620,26219+4]..[620,26219+20])
                                                    Pexp_ident "Variable.Map.add" (middle_end/flambda/inline_and_simplify.ml[620,26219+4]..[620,26219+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[620,26219+21]..[620,26219+28])
                                                        Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[620,26219+21]..[620,26219+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[620,26219+29]..[620,26219+42])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[620,26219+29]..[620,26219+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[620,26219+43]..[620,26219+47])
                                                        Pexp_ident "funs" (middle_end/flambda/inline_and_simplify.ml[620,26219+43]..[620,26219+47])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[621,26268+6]..[621,26268+49])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[621,26268+6]..[621,26268+24])
                                                    Pexp_ident "Variable.Set.union" (middle_end/flambda/inline_and_simplify.ml[621,26268+6]..[621,26268+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[621,26268+25]..[621,26268+36])
                                                        Pexp_ident "used_params" (middle_end/flambda/inline_and_simplify.ml[621,26268+25]..[621,26268+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[621,26268+37]..[621,26268+49])
                                                        Pexp_ident "used_params'" (middle_end/flambda/inline_and_simplify.ml[621,26268+37]..[621,26268+49])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[621,26268+51]..[621,26268+52])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[621,26268+51]..[621,26268+52])
                                              ]
                                    core_type (middle_end/flambda/inline_and_simplify.ml[596,25123+10]..[596,25123+76])
                                      Ptyp_tuple
                                      [
                                        core_type (middle_end/flambda/inline_and_simplify.ml[596,25123+10]..[596,25123+53])
                                          Ptyp_constr "Variable.Map.t" (middle_end/flambda/inline_and_simplify.ml[596,25123+39]..[596,25123+53])
                                          [
                                            core_type (middle_end/flambda/inline_and_simplify.ml[596,25123+10]..[596,25123+38])
                                              Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/inline_and_simplify.ml[596,25123+10]..[596,25123+38])
                                              []
                                          ]
                                        core_type (middle_end/flambda/inline_and_simplify.ml[596,25123+56]..[596,25123+70])
                                          Ptyp_constr "Variable.Set.t" (middle_end/flambda/inline_and_simplify.ml[596,25123+56]..[596,25123+70])
                                          []
                                        core_type (middle_end/flambda/inline_and_simplify.ml[596,25123+73]..[596,25123+76])
                                          Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[596,25123+73]..[596,25123+76])
                                          []
                                      ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[623,26326+2]..[671,28091+54])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[623,26326+6]..[623,26326+27])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[623,26326+6]..[623,26326+10])
                                    Ppat_var "funs" (middle_end/flambda/inline_and_simplify.ml[623,26326+6]..[623,26326+10])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[623,26326+12]..[623,26326+24])
                                    Ppat_var "_used_params" (middle_end/flambda/inline_and_simplify.ml[623,26326+12]..[623,26326+24])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[623,26326+26]..[623,26326+27])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[623,26326+26]..[623,26326+27])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[624,26356+4]..[625,26416+49])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[624,26356+4]..[624,26356+21])
                                  Pexp_ident "Variable.Map.fold" (middle_end/flambda/inline_and_simplify.ml[624,26356+4]..[624,26356+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[624,26356+22]..[624,26356+39])
                                      Pexp_ident "simplify_function" (middle_end/flambda/inline_and_simplify.ml[624,26356+22]..[624,26356+39])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[624,26356+40]..[624,26356+59])
                                      Pexp_field
                                      expression (middle_end/flambda/inline_and_simplify.ml[624,26356+40]..[624,26356+54])
                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[624,26356+40]..[624,26356+54])
                                      "funs" (middle_end/flambda/inline_and_simplify.ml[624,26356+55]..[624,26356+59])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[625,26416+6]..[625,26416+49])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/inline_and_simplify.ml[625,26416+7]..[625,26416+25])
                                          Pexp_ident "Variable.Map.empty" (middle_end/flambda/inline_and_simplify.ml[625,26416+7]..[625,26416+25])
                                        expression (middle_end/flambda/inline_and_simplify.ml[625,26416+27]..[625,26416+45])
                                          Pexp_ident "Variable.Set.empty" (middle_end/flambda/inline_and_simplify.ml[625,26416+27]..[625,26416+45])
                                        expression (middle_end/flambda/inline_and_simplify.ml[625,26416+47]..[625,26416+48])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[625,26416+47]..[625,26416+48])
                                      ]
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[627,26471+2]..[671,28091+54])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[627,26471+6]..[627,26471+20])
                                  Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[627,26471+6]..[627,26471+20])
                                expression (middle_end/flambda/inline_and_simplify.ml[628,26494+4]..[628,26494+61])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[628,26494+4]..[628,26494+40])
                                    Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/inline_and_simplify.ml[628,26494+4]..[628,26494+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[628,26494+41]..[628,26494+55])
                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[628,26494+41]..[628,26494+55])
                                    <arg>
                                    Labelled "funs"
                                      expression (middle_end/flambda/inline_and_simplify.ml[628,26494+57]..[628,26494+61])
                                        Pexp_ident "funs" (middle_end/flambda/inline_and_simplify.ml[628,26494+57]..[628,26494+61])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[630,26561+2]..[671,28091+54])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[630,26561+6]..[630,26561+22])
                                    Ppat_var "invariant_params" (middle_end/flambda/inline_and_simplify.ml[630,26561+6]..[630,26561+22])
                                  expression (middle_end/flambda/inline_and_simplify.ml[631,26586+4]..[632,26658+31])
                                    Pexp_lazy
                                    expression (middle_end/flambda/inline_and_simplify.ml[631,26586+9]..[632,26658+31])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[631,26586+10]..[631,26586+56])
                                        Pexp_ident "Invariant_params.invariant_params_in_recursion" (middle_end/flambda/inline_and_simplify.ml[631,26586+10]..[631,26586+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[631,26586+57]..[631,26586+71])
                                            Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[631,26586+57]..[631,26586+71])
                                        <arg>
                                        Labelled "backend"
                                          expression (middle_end/flambda/inline_and_simplify.ml[632,26658+15]..[632,26658+30])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[632,26658+16]..[632,26658+25])
                                              Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[632,26658+16]..[632,26658+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[632,26658+26]..[632,26658+29])
                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[632,26658+26]..[632,26658+29])
                                            ]
                                      ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[634,26695+2]..[671,28091+54])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[634,26695+6]..[634,26695+15])
                                      Ppat_var "recursive" (middle_end/flambda/inline_and_simplify.ml[634,26695+6]..[634,26695+15])
                                    expression (middle_end/flambda/inline_and_simplify.ml[635,26713+4]..[636,26788+31])
                                      Pexp_lazy
                                      expression (middle_end/flambda/inline_and_simplify.ml[635,26713+9]..[636,26788+31])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[635,26713+10]..[635,26713+59])
                                          Pexp_ident "Find_recursive_functions.in_function_declarations" (middle_end/flambda/inline_and_simplify.ml[635,26713+10]..[635,26713+59])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[635,26713+60]..[635,26713+74])
                                              Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[635,26713+60]..[635,26713+74])
                                          <arg>
                                          Labelled "backend"
                                            expression (middle_end/flambda/inline_and_simplify.ml[636,26788+15]..[636,26788+30])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[636,26788+16]..[636,26788+25])
                                                Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[636,26788+16]..[636,26788+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[636,26788+26]..[636,26788+29])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[636,26788+26]..[636,26788+29])
                                              ]
                                        ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[638,26825+2]..[671,28091+54])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[638,26825+6]..[638,26825+15])
                                        Ppat_var "keep_body" (middle_end/flambda/inline_and_simplify.ml[638,26825+6]..[638,26825+15])
                                      expression (middle_end/flambda/inline_and_simplify.ml[639,26843+4]..[640,26887+64])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[639,26843+4]..[639,26843+43])
                                          Pexp_ident "Inline_and_simplify_aux.keep_body_check" (middle_end/flambda/inline_and_simplify.ml[639,26843+4]..[639,26843+43])
                                        [
                                          <arg>
                                          Labelled "is_classic_mode"
                                            expression (middle_end/flambda/inline_and_simplify.ml[640,26887+23]..[640,26887+53])
                                              Pexp_field
                                              expression (middle_end/flambda/inline_and_simplify.ml[640,26887+23]..[640,26887+37])
                                                Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[640,26887+23]..[640,26887+37])
                                              "is_classic_mode" (middle_end/flambda/inline_and_simplify.ml[640,26887+38]..[640,26887+53])
                                          <arg>
                                          Labelled "recursive"
                                            expression (middle_end/flambda/inline_and_simplify.ml[640,26887+55]..[640,26887+64])
                                              Pexp_ident "recursive" (middle_end/flambda/inline_and_simplify.ml[640,26887+55]..[640,26887+64])
                                        ]
                                  ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[642,26957+2]..[671,28091+54])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[642,26957+6]..[642,26957+27])
                                          Ppat_var "function_decls_approx" (middle_end/flambda/inline_and_simplify.ml[642,26957+6]..[642,26957+27])
                                        expression (middle_end/flambda/inline_and_simplify.ml[643,26987+4]..[643,26987+60])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[643,26987+4]..[643,26987+34])
                                            Pexp_ident "A.function_declarations_approx" (middle_end/flambda/inline_and_simplify.ml[643,26987+4]..[643,26987+34])
                                          [
                                            <arg>
                                            Labelled "keep_body"
                                              expression (middle_end/flambda/inline_and_simplify.ml[643,26987+36]..[643,26987+45])
                                                Pexp_ident "keep_body" (middle_end/flambda/inline_and_simplify.ml[643,26987+36]..[643,26987+45])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[643,26987+46]..[643,26987+60])
                                                Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[643,26987+46]..[643,26987+60])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[645,27053+2]..[671,28091+54])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[645,27053+6]..[645,27053+27])
                                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[645,27053+6]..[645,27053+27])
                                          expression (middle_end/flambda/inline_and_simplify.ml[646,27083+4]..[655,27484+61])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[646,27083+4]..[646,27083+34])
                                              Pexp_ident "A.create_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[646,27083+4]..[646,27083+34])
                                            [
                                              <arg>
                                              Labelled "function_decls"
                                                expression (middle_end/flambda/inline_and_simplify.ml[647,27118+22]..[647,27118+43])
                                                  Pexp_ident "function_decls_approx" (middle_end/flambda/inline_and_simplify.ml[647,27118+22]..[647,27118+43])
                                              <arg>
                                              Labelled "bound_vars"
                                                expression (middle_end/flambda/inline_and_simplify.ml[648,27162+18]..[648,27162+59])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[648,27162+18]..[648,27162+48])
                                                    Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[648,27162+18]..[648,27162+48])
                                                  "bound_vars" (middle_end/flambda/inline_and_simplify.ml[648,27162+49]..[648,27162+59])
                                              <arg>
                                              Labelled "invariant_params"
                                                expression (middle_end/flambda/inline_and_simplify.ml[649,27222+7]..[649,27222+23])
                                                  Pexp_ident "invariant_params" (middle_end/flambda/inline_and_simplify.ml[649,27222+7]..[649,27222+23])
                                              <arg>
                                              Labelled "recursive"
                                                expression (middle_end/flambda/inline_and_simplify.ml[650,27246+7]..[650,27246+16])
                                                  Pexp_ident "recursive" (middle_end/flambda/inline_and_simplify.ml[650,27246+7]..[650,27246+16])
                                              <arg>
                                              Labelled "specialised_args"
                                                expression (middle_end/flambda/inline_and_simplify.ml[651,27263+24]..[651,27263+71])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[651,27263+24]..[651,27263+54])
                                                    Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[651,27263+24]..[651,27263+54])
                                                  "specialised_args" (middle_end/flambda/inline_and_simplify.ml[651,27263+55]..[651,27263+71])
                                              <arg>
                                              Labelled "free_vars"
                                                expression (middle_end/flambda/inline_and_simplify.ml[652,27335+17]..[652,27335+57])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[652,27335+17]..[652,27335+47])
                                                    Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[652,27335+17]..[652,27335+47])
                                                  "free_vars" (middle_end/flambda/inline_and_simplify.ml[652,27335+48]..[652,27335+57])
                                              <arg>
                                              Labelled "freshening"
                                                expression (middle_end/flambda/inline_and_simplify.ml[653,27393+18]..[653,27393+59])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[653,27393+18]..[653,27393+48])
                                                    Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[653,27393+18]..[653,27393+48])
                                                  "freshening" (middle_end/flambda/inline_and_simplify.ml[653,27393+49]..[653,27393+59])
                                              <arg>
                                              Labelled "direct_call_surrogates"
                                                expression (middle_end/flambda/inline_and_simplify.ml[655,27484+8]..[655,27484+61])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[655,27484+8]..[655,27484+38])
                                                    Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[655,27484+8]..[655,27484+38])
                                                  "direct_call_surrogates" (middle_end/flambda/inline_and_simplify.ml[655,27484+39]..[655,27484+61])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[657,27551+2]..[671,28091+54])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[657,27551+6]..[657,27551+28])
                                              Ppat_var "direct_call_surrogates" (middle_end/flambda/inline_and_simplify.ml[657,27551+6]..[657,27551+28])
                                            expression (middle_end/flambda/inline_and_simplify.ml[658,27582+4]..[662,27810+24])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[658,27582+4]..[658,27582+23])
                                                Pexp_ident "Closure_id.Map.fold" (middle_end/flambda/inline_and_simplify.ml[658,27582+4]..[658,27582+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[658,27582+24]..[660,27698+51])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[658,27582+29]..[658,27582+37])
                                                      Ppat_var "existing" (middle_end/flambda/inline_and_simplify.ml[658,27582+29]..[658,27582+37])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[658,27582+38]..[660,27698+50]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[658,27582+38]..[658,27582+47])
                                                        Ppat_var "surrogate" (middle_end/flambda/inline_and_simplify.ml[658,27582+38]..[658,27582+47])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[658,27582+48]..[660,27698+50]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[658,27582+48]..[658,27582+58])
                                                          Ppat_var "surrogates" (middle_end/flambda/inline_and_simplify.ml[658,27582+48]..[658,27582+58])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[659,27644+8]..[660,27698+50])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[659,27644+8]..[659,27644+24])
                                                            Pexp_ident "Variable.Map.add" (middle_end/flambda/inline_and_simplify.ml[659,27644+8]..[659,27644+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[659,27644+25]..[659,27644+53])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[659,27644+26]..[659,27644+43])
                                                                  Pexp_ident "Closure_id.unwrap" (middle_end/flambda/inline_and_simplify.ml[659,27644+26]..[659,27644+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[659,27644+44]..[659,27644+52])
                                                                      Pexp_ident "existing" (middle_end/flambda/inline_and_simplify.ml[659,27644+44]..[659,27644+52])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[660,27698+10]..[660,27698+39])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[660,27698+11]..[660,27698+28])
                                                                  Pexp_ident "Closure_id.unwrap" (middle_end/flambda/inline_and_simplify.ml[660,27698+11]..[660,27698+28])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[660,27698+29]..[660,27698+38])
                                                                      Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[660,27698+29]..[660,27698+38])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[660,27698+40]..[660,27698+50])
                                                                Pexp_ident "surrogates" (middle_end/flambda/inline_and_simplify.ml[660,27698+40]..[660,27698+50])
                                                          ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[661,27750+6]..[661,27750+59])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[661,27750+6]..[661,27750+36])
                                                      Pexp_ident "internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[661,27750+6]..[661,27750+36])
                                                    "direct_call_surrogates" (middle_end/flambda/inline_and_simplify.ml[661,27750+37]..[661,27750+59])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[662,27810+6]..[662,27810+24])
                                                    Pexp_ident "Variable.Map.empty" (middle_end/flambda/inline_and_simplify.ml[662,27810+6]..[662,27810+24])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[664,27840+2]..[671,28091+54])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[664,27840+6]..[664,27840+21])
                                                Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[664,27840+6]..[664,27840+21])
                                              expression (middle_end/flambda/inline_and_simplify.ml[665,27864+4]..[668,27989+29])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[665,27864+4]..[665,27864+34])
                                                  Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[665,27864+4]..[665,27864+34])
                                                [
                                                  <arg>
                                                  Labelled "function_decls"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[665,27864+36]..[665,27864+50])
                                                      Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[665,27864+36]..[665,27864+50])
                                                  <arg>
                                                  Labelled "free_vars"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[666,27915+17]..[666,27915+49])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[666,27915+18]..[666,27915+34])
                                                        Pexp_ident "Variable.Map.map" (middle_end/flambda/inline_and_simplify.ml[666,27915+18]..[666,27915+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[666,27915+35]..[666,27915+38])
                                                            Pexp_ident "fst" (middle_end/flambda/inline_and_simplify.ml[666,27915+35]..[666,27915+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[666,27915+39]..[666,27915+48])
                                                            Pexp_ident "free_vars" (middle_end/flambda/inline_and_simplify.ml[666,27915+39]..[666,27915+48])
                                                      ]
                                                  <arg>
                                                  Labelled "specialised_args"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[667,27965+7]..[667,27965+23])
                                                      Pexp_ident "specialised_args" (middle_end/flambda/inline_and_simplify.ml[667,27965+7]..[667,27965+23])
                                                  <arg>
                                                  Labelled "direct_call_surrogates"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[668,27989+7]..[668,27989+29])
                                                      Pexp_ident "direct_call_surrogates" (middle_end/flambda/inline_and_simplify.ml[668,27989+7]..[668,27989+29])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[670,28024+2]..[671,28091+54])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[670,28024+6]..[670,28024+7])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[670,28024+6]..[670,28024+7])
                                                expression (middle_end/flambda/inline_and_simplify.ml[670,28024+10]..[670,28024+63])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[670,28024+10]..[670,28024+13])
                                                    Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[670,28024+10]..[670,28024+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[670,28024+14]..[670,28024+15])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[670,28024+14]..[670,28024+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[670,28024+16]..[670,28024+63])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[670,28024+17]..[670,28024+40])
                                                          Pexp_ident "A.value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[670,28024+17]..[670,28024+40])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[670,28024+41]..[670,28024+62])
                                                              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[670,28024+41]..[670,28024+62])
                                                        ]
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[671,28091+2]..[671,28091+54])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inline_and_simplify.ml[671,28091+2]..[671,28091+17])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[671,28091+2]..[671,28091+17])
                                                expression (middle_end/flambda/inline_and_simplify.ml[671,28091+19]..[671,28091+20])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[671,28091+19]..[671,28091+20])
                                                expression (middle_end/flambda/inline_and_simplify.ml[671,28091+22]..[671,28091+54])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[671,28091+22]..[671,28091+43])
                                                    Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[671,28091+22]..[671,28091+43])
                                                  "freshening" (middle_end/flambda/inline_and_simplify.ml[671,28091+44]..[671,28091+54])
                                              ]
                core_type (middle_end/flambda/inline_and_simplify.ml[576,24095+8]..[576,24095+64])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[576,24095+8]..[576,24095+31])
                      Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/inline_and_simplify.ml[576,24095+8]..[576,24095+31])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[576,24095+34]..[576,24095+37])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[576,24095+34]..[576,24095+37])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[576,24095+40]..[576,24095+64])
                      Ptyp_constr "Freshening.Project_var.t" (middle_end/flambda/inline_and_simplify.ml[576,24095+40]..[576,24095+64])
                      []
                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[673,28147+4]..[673,28147+18])
          Ppat_var "simplify_apply" (middle_end/flambda/inline_and_simplify.ml[673,28147+4]..[673,28147+18])
        expression (middle_end/flambda/inline_and_simplify.ml[673,28147+19]..[772,33164+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[673,28147+19]..[673,28147+22])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[673,28147+19]..[673,28147+22])
          expression (middle_end/flambda/inline_and_simplify.ml[673,28147+23]..[772,33164+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[673,28147+23]..[673,28147+24])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[673,28147+23]..[673,28147+24])
            expression (middle_end/flambda/inline_and_simplify.ml[673,28147+25]..[772,33164+43]) ghost
              Pexp_fun
              Labelled "apply"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[673,28147+27]..[673,28147+48])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[673,28147+27]..[673,28147+32])
                  Ppat_var "apply" (middle_end/flambda/inline_and_simplify.ml[673,28147+27]..[673,28147+32])
                core_type (middle_end/flambda/inline_and_simplify.ml[673,28147+35]..[673,28147+48])
                  Ptyp_constr "Flambda.apply" (middle_end/flambda/inline_and_simplify.ml[673,28147+35]..[673,28147+48])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[673,28147+50]..[772,33164+43])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[674,28217+2]..[772,33164+43])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[674,28217+6]..[677,28352+3])
                        Ppat_record Closed
                        [
                          "Flambda.func" (middle_end/flambda/inline_and_simplify.ml[675,28225+4]..[675,28225+17])
                            pattern (middle_end/flambda/inline_and_simplify.ml[675,28225+20]..[675,28225+38])
                              Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[675,28225+20]..[675,28225+38])
                          "args" (middle_end/flambda/inline_and_simplify.ml[675,28225+40]..[675,28225+44]) ghost
                            pattern (middle_end/flambda/inline_and_simplify.ml[675,28225+40]..[675,28225+44])
                              Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[675,28225+40]..[675,28225+44])
                          "kind" (middle_end/flambda/inline_and_simplify.ml[675,28225+46]..[675,28225+50])
                            pattern (middle_end/flambda/inline_and_simplify.ml[675,28225+53]..[675,28225+54])
                              Ppat_any
                          "dbg" (middle_end/flambda/inline_and_simplify.ml[675,28225+56]..[675,28225+59]) ghost
                            pattern (middle_end/flambda/inline_and_simplify.ml[675,28225+56]..[675,28225+59])
                              Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[675,28225+56]..[675,28225+59])
                          "inline" (middle_end/flambda/inline_and_simplify.ml[676,28286+4]..[676,28286+10])
                            pattern (middle_end/flambda/inline_and_simplify.ml[676,28286+13]..[676,28286+29])
                              Ppat_var "inline_requested" (middle_end/flambda/inline_and_simplify.ml[676,28286+13]..[676,28286+29])
                          "specialise" (middle_end/flambda/inline_and_simplify.ml[676,28286+31]..[676,28286+41])
                            pattern (middle_end/flambda/inline_and_simplify.ml[676,28286+44]..[676,28286+64])
                              Ppat_var "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[676,28286+44]..[676,28286+64])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[677,28352+6]..[677,28352+11])
                        Pexp_ident "apply" (middle_end/flambda/inline_and_simplify.ml[677,28352+6]..[677,28352+11])
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[678,28367+2]..[772,33164+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[678,28367+6]..[678,28367+9])
                          Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[678,28367+6]..[678,28367+9])
                        expression (middle_end/flambda/inline_and_simplify.ml[678,28367+12]..[678,28367+44])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[678,28367+12]..[678,28367+35])
                            Pexp_ident "E.add_inlined_debuginfo" (middle_end/flambda/inline_and_simplify.ml[678,28367+12]..[678,28367+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[678,28367+36]..[678,28367+39])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[678,28367+36]..[678,28367+39])
                            <arg>
                            Labelled "dbg"
                              expression (middle_end/flambda/inline_and_simplify.ml[678,28367+41]..[678,28367+44])
                                Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[678,28367+41]..[678,28367+44])
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[679,28415+2]..[772,33164+43])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[679,28415+2]..[679,28415+24])
                        Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[679,28415+2]..[679,28415+24])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[679,28415+25]..[679,28415+28])
                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[679,28415+25]..[679,28415+28])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[679,28415+29]..[679,28415+47])
                            Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[679,28415+29]..[679,28415+47])
                        <arg>
                        Labelled "f"
                          expression (middle_end/flambda/inline_and_simplify.ml[680,28463+7]..[772,33164+43])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[680,28463+12]..[680,28463+15])
                              Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[680,28463+12]..[680,28463+15])
                            expression (middle_end/flambda/inline_and_simplify.ml[680,28463+16]..[772,33164+42]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[680,28463+16]..[680,28463+34])
                                Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[680,28463+16]..[680,28463+34])
                              expression (middle_end/flambda/inline_and_simplify.ml[680,28463+35]..[772,33164+42]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[680,28463+35]..[680,28463+60])
                                  Ppat_var "lhs_of_application_approx" (middle_end/flambda/inline_and_simplify.ml[680,28463+35]..[680,28463+60])
                                expression (middle_end/flambda/inline_and_simplify.ml[681,28527+6]..[772,33164+42])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[681,28527+6]..[681,28527+29])
                                    Pexp_ident "simplify_free_variables" (middle_end/flambda/inline_and_simplify.ml[681,28527+6]..[681,28527+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[681,28527+30]..[681,28527+33])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[681,28527+30]..[681,28527+33])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[681,28527+34]..[681,28527+38])
                                        Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[681,28527+34]..[681,28527+38])
                                    <arg>
                                    Labelled "f"
                                      expression (middle_end/flambda/inline_and_simplify.ml[681,28527+42]..[772,33164+42])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[681,28527+47]..[681,28527+50])
                                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[681,28527+47]..[681,28527+50])
                                        expression (middle_end/flambda/inline_and_simplify.ml[681,28527+51]..[772,33164+41]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[681,28527+51]..[681,28527+55])
                                            Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[681,28527+51]..[681,28527+55])
                                          expression (middle_end/flambda/inline_and_simplify.ml[681,28527+56]..[772,33164+41]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[681,28527+56]..[681,28527+68])
                                              Ppat_var "args_approxs" (middle_end/flambda/inline_and_simplify.ml[681,28527+56]..[681,28527+68])
                                            expression (middle_end/flambda/inline_and_simplify.ml[687,28916+8]..[772,33164+41])
                                              Pexp_match
                                              expression (middle_end/flambda/inline_and_simplify.ml[687,28916+14]..[687,28916+66])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[687,28916+14]..[687,28916+40])
                                                  Pexp_ident "A.check_approx_for_closure" (middle_end/flambda/inline_and_simplify.ml[687,28916+14]..[687,28916+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[687,28916+41]..[687,28916+66])
                                                      Pexp_ident "lhs_of_application_approx" (middle_end/flambda/inline_and_simplify.ml[687,28916+41]..[687,28916+66])
                                                ]
                                              [
                                                <case>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[688,28988+10]..[689,29038+60])
                                                    Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[688,28988+10]..[688,28988+12])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[688,28988+13]..[689,29038+60])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[688,28988+14]..[688,28988+27])
                                                            Ppat_var "value_closure" (middle_end/flambda/inline_and_simplify.ml[688,28988+14]..[688,28988+27])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[688,28988+29]..[688,28988+48])
                                                            Ppat_var "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[688,28988+29]..[688,28988+48])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[689,29038+14]..[689,29038+36])
                                                            Ppat_var "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[689,29038+14]..[689,29038+36])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[689,29038+38]..[689,29038+59])
                                                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[689,29038+38]..[689,29038+59])
                                                        ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[690,29102+10]..[768,32907+24])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[690,29102+14]..[691,29162+48])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[690,29102+14]..[690,29102+32])
                                                              Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[690,29102+14]..[690,29102+32])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[690,29102+34]..[690,29102+58])
                                                              Ppat_var "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[690,29102+34]..[690,29102+58])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[691,29162+16]..[691,29162+37])
                                                              Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[691,29162+16]..[691,29162+37])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[691,29162+39]..[691,29162+42])
                                                              Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[691,29162+39]..[691,29162+42])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[691,29162+44]..[691,29162+48])
                                                              Ppat_var "wrap" (middle_end/flambda/inline_and_simplify.ml[691,29162+44]..[691,29162+48])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[692,29213+12]..[726,30953+72])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[692,29213+16]..[692,29213+40])
                                                                Ppat_var "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[692,29213+16]..[692,29213+40])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[692,29213+43]..[692,29213+67])
                                                                Pexp_field
                                                                expression (middle_end/flambda/inline_and_simplify.ml[692,29213+43]..[692,29213+56])
                                                                  Pexp_ident "value_closure" (middle_end/flambda/inline_and_simplify.ml[692,29213+43]..[692,29213+56])
                                                                "closure_id" (middle_end/flambda/inline_and_simplify.ml[692,29213+57]..[692,29213+67])
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[696,29485+12]..[726,30953+72])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[696,29485+16]..[696,29485+26])
                                                                  Ppat_var "surrogates" (middle_end/flambda/inline_and_simplify.ml[696,29485+16]..[696,29485+26])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[696,29485+29]..[696,29485+73])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[696,29485+29]..[696,29485+50])
                                                                    Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[696,29485+29]..[696,29485+50])
                                                                  "direct_call_surrogates" (middle_end/flambda/inline_and_simplify.ml[696,29485+51]..[696,29485+73])
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[697,29562+12]..[726,30953+72])
                                                              Pexp_match
                                                              expression (middle_end/flambda/inline_and_simplify.ml[697,29562+18]..[697,29562+73])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[697,29562+18]..[697,29562+37])
                                                                  Pexp_ident "Closure_id.Map.find" (middle_end/flambda/inline_and_simplify.ml[697,29562+18]..[697,29562+37])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[697,29562+38]..[697,29562+62])
                                                                      Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[697,29562+38]..[697,29562+62])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[697,29562+63]..[697,29562+73])
                                                                      Pexp_ident "surrogates" (middle_end/flambda/inline_and_simplify.ml[697,29562+63]..[697,29562+73])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[698,29641+14]..[698,29641+33])
                                                                    Ppat_exception
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[698,29641+24]..[698,29641+33])
                                                                      Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[698,29641+24]..[698,29641+33])
                                                                      None
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[699,29678+14]..[700,29738+62])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[699,29678+14]..[699,29678+32])
Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[699,29678+14]..[699,29678+32])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[699,29678+34]..[699,29678+58])
Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[699,29678+34]..[699,29678+58])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[700,29738+16]..[700,29738+37])
Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[700,29738+16]..[700,29738+37])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[700,29738+39]..[700,29738+42])
Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[700,29738+39]..[700,29738+42])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[700,29738+44]..[700,29738+62])
Pexp_fun
Nolabel
None
pattern (middle_end/flambda/inline_and_simplify.ml[700,29738+49]..[700,29738+53])
  Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[700,29738+49]..[700,29738+53])
expression (middle_end/flambda/inline_and_simplify.ml[700,29738+57]..[700,29738+61])
  Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[700,29738+57]..[700,29738+61])
                                                                    ]
                                                                <case>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[701,29801+14]..[701,29801+23])
                                                                    Ppat_var "surrogate" (middle_end/flambda/inline_and_simplify.ml[701,29801+14]..[701,29801+23])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[702,29828+14]..[726,30953+72])
                                                                    Pexp_let Rec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/inline_and_simplify.ml[702,29828+22]..[702,29828+39])
  Ppat_var "find_transitively" (middle_end/flambda/inline_and_simplify.ml[702,29828+22]..[702,29828+39])
expression (middle_end/flambda/inline_and_simplify.ml[702,29828+40]..[705,29999+58]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (middle_end/flambda/inline_and_simplify.ml[702,29828+40]..[702,29828+49])
    Ppat_var "surrogate" (middle_end/flambda/inline_and_simplify.ml[702,29828+40]..[702,29828+49])
  expression (middle_end/flambda/inline_and_simplify.ml[703,29880+16]..[705,29999+58])
    Pexp_match
    expression (middle_end/flambda/inline_and_simplify.ml[703,29880+22]..[703,29880+62])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[703,29880+22]..[703,29880+41])
        Pexp_ident "Closure_id.Map.find" (middle_end/flambda/inline_and_simplify.ml[703,29880+22]..[703,29880+41])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[703,29880+42]..[703,29880+51])
            Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[703,29880+42]..[703,29880+51])
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[703,29880+52]..[703,29880+62])
            Pexp_ident "surrogates" (middle_end/flambda/inline_and_simplify.ml[703,29880+52]..[703,29880+62])
      ]
    [
      <case>
        pattern (middle_end/flambda/inline_and_simplify.ml[704,29948+18]..[704,29948+37])
          Ppat_exception
          pattern (middle_end/flambda/inline_and_simplify.ml[704,29948+28]..[704,29948+37])
            Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[704,29948+28]..[704,29948+37])
            None
        expression (middle_end/flambda/inline_and_simplify.ml[704,29948+41]..[704,29948+50])
          Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[704,29948+41]..[704,29948+50])
      <case>
        pattern (middle_end/flambda/inline_and_simplify.ml[705,29999+18]..[705,29999+27])
          Ppat_var "surrogate" (middle_end/flambda/inline_and_simplify.ml[705,29999+18]..[705,29999+27])
        expression (middle_end/flambda/inline_and_simplify.ml[705,29999+31]..[705,29999+58])
          Pexp_apply
          expression (middle_end/flambda/inline_and_simplify.ml[705,29999+31]..[705,29999+48])
            Pexp_ident "find_transitively" (middle_end/flambda/inline_and_simplify.ml[705,29999+31]..[705,29999+48])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[705,29999+49]..[705,29999+58])
                Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[705,29999+49]..[705,29999+58])
          ]
    ]
                                                                    ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[707,30075+14]..[726,30953+72])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (middle_end/flambda/inline_and_simplify.ml[707,30075+18]..[707,30075+27])
    Ppat_var "surrogate" (middle_end/flambda/inline_and_simplify.ml[707,30075+18]..[707,30075+27])
  expression (middle_end/flambda/inline_and_simplify.ml[707,30075+30]..[707,30075+57])
    Pexp_apply
    expression (middle_end/flambda/inline_and_simplify.ml[707,30075+30]..[707,30075+47])
      Pexp_ident "find_transitively" (middle_end/flambda/inline_and_simplify.ml[707,30075+30]..[707,30075+47])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/inline_and_simplify.ml[707,30075+48]..[707,30075+57])
          Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[707,30075+48]..[707,30075+57])
    ]
                                                                      ]
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[708,30136+14]..[726,30953+72])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/inline_and_simplify.ml[708,30136+18]..[708,30136+31])
      Ppat_var "surrogate_var" (middle_end/flambda/inline_and_simplify.ml[708,30136+18]..[708,30136+31])
    expression (middle_end/flambda/inline_and_simplify.ml[708,30136+34]..[708,30136+68])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[708,30136+34]..[708,30136+49])
        Pexp_ident "Variable.rename" (middle_end/flambda/inline_and_simplify.ml[708,30136+34]..[708,30136+49])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[708,30136+50]..[708,30136+68])
            Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[708,30136+50]..[708,30136+68])
      ]
]
expression (middle_end/flambda/inline_and_simplify.ml[709,30208+14]..[726,30953+72])
  Pexp_let Nonrec
  [
    <def>
      pattern (middle_end/flambda/inline_and_simplify.ml[709,30208+18]..[709,30208+76]) ghost
        Ppat_constraint
        pattern (middle_end/flambda/inline_and_simplify.ml[709,30208+18]..[709,30208+35])
          Ppat_var "move_to_surrogate" (middle_end/flambda/inline_and_simplify.ml[709,30208+18]..[709,30208+35])
        core_type (middle_end/flambda/inline_and_simplify.ml[709,30208+38]..[709,30208+76]) ghost
          Ptyp_poly
          core_type (middle_end/flambda/inline_and_simplify.ml[709,30208+38]..[709,30208+76])
            Ptyp_constr "Projection.move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[709,30208+38]..[709,30208+76])
            []
      expression (middle_end/flambda/inline_and_simplify.ml[709,30208+18]..[713,30431+17])
        Pexp_constraint
        expression (middle_end/flambda/inline_and_simplify.ml[710,30287+16]..[713,30431+17])
          Pexp_record
          [
            "closure" (middle_end/flambda/inline_and_simplify.ml[710,30287+18]..[710,30287+25])
              expression (middle_end/flambda/inline_and_simplify.ml[710,30287+28]..[710,30287+46])
                Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[710,30287+28]..[710,30287+46])
            "start_from" (middle_end/flambda/inline_and_simplify.ml[711,30335+18]..[711,30335+28])
              expression (middle_end/flambda/inline_and_simplify.ml[711,30335+31]..[711,30335+55])
                Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[711,30335+31]..[711,30335+55])
            "move_to" (middle_end/flambda/inline_and_simplify.ml[712,30392+18]..[712,30392+25])
              expression (middle_end/flambda/inline_and_simplify.ml[712,30392+28]..[712,30392+37])
                Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[712,30392+28]..[712,30392+37])
          ]
          None
        core_type (middle_end/flambda/inline_and_simplify.ml[709,30208+38]..[709,30208+76])
          Ptyp_constr "Projection.move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[709,30208+38]..[709,30208+76])
          []
  ]
  expression (middle_end/flambda/inline_and_simplify.ml[715,30466+14]..[726,30953+72])
    Pexp_let Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[715,30466+18]..[715,30466+38])
          Ppat_var "approx_for_surrogate" (middle_end/flambda/inline_and_simplify.ml[715,30466+18]..[715,30466+38])
        expression (middle_end/flambda/inline_and_simplify.ml[716,30507+16]..[718,30629+49])
          Pexp_apply
          expression (middle_end/flambda/inline_and_simplify.ml[716,30507+16]..[716,30507+31])
            Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[716,30507+16]..[716,30507+31])
          [
            <arg>
            Labelled "closure_var"
              expression (middle_end/flambda/inline_and_simplify.ml[716,30507+45]..[716,30507+58])
                Pexp_ident "surrogate_var" (middle_end/flambda/inline_and_simplify.ml[716,30507+45]..[716,30507+58])
            <arg>
            Optional "set_of_closures_var"
              expression (middle_end/flambda/inline_and_simplify.ml[717,30566+19]..[717,30566+38])
                Pexp_ident "set_of_closures_var" (middle_end/flambda/inline_and_simplify.ml[717,30566+19]..[717,30566+38])
            <arg>
            Optional "set_of_closures_symbol"
              expression (middle_end/flambda/inline_and_simplify.ml[717,30566+40]..[717,30566+62])
                Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[717,30566+40]..[717,30566+62])
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[718,30629+18]..[718,30629+39])
                Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[718,30629+18]..[718,30629+39])
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[718,30629+40]..[718,30629+49])
                Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[718,30629+40]..[718,30629+49])
          ]
    ]
    expression (middle_end/flambda/inline_and_simplify.ml[720,30696+14]..[726,30953+72])
      Pexp_let Nonrec
      [
        <def>
          pattern (middle_end/flambda/inline_and_simplify.ml[720,30696+18]..[720,30696+21])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[720,30696+18]..[720,30696+21])
          expression (middle_end/flambda/inline_and_simplify.ml[720,30696+24]..[720,30696+68])
            Pexp_apply
            expression (middle_end/flambda/inline_and_simplify.ml[720,30696+24]..[720,30696+29])
              Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[720,30696+24]..[720,30696+29])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[720,30696+30]..[720,30696+33])
                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[720,30696+30]..[720,30696+33])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[720,30696+34]..[720,30696+47])
                  Pexp_ident "surrogate_var" (middle_end/flambda/inline_and_simplify.ml[720,30696+34]..[720,30696+47])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[720,30696+48]..[720,30696+68])
                  Pexp_ident "approx_for_surrogate" (middle_end/flambda/inline_and_simplify.ml[720,30696+48]..[720,30696+68])
            ]
      ]
      expression (middle_end/flambda/inline_and_simplify.ml[721,30768+14]..[726,30953+72])
        Pexp_let Nonrec
        [
          <def>
            pattern (middle_end/flambda/inline_and_simplify.ml[721,30768+18]..[721,30768+22])
              Ppat_var "wrap" (middle_end/flambda/inline_and_simplify.ml[721,30768+18]..[721,30768+22])
            expression (middle_end/flambda/inline_and_simplify.ml[721,30768+23]..[724,30913+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[721,30768+23]..[721,30768+27])
                Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[721,30768+23]..[721,30768+27])
              expression (middle_end/flambda/inline_and_simplify.ml[722,30798+16]..[724,30913+22])
                Pexp_apply
                expression (middle_end/flambda/inline_and_simplify.ml[722,30798+16]..[722,30798+34])
                  Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[722,30798+16]..[722,30798+34])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[722,30798+35]..[722,30798+48])
                      Pexp_ident "surrogate_var" (middle_end/flambda/inline_and_simplify.ml[722,30798+35]..[722,30798+48])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[723,30847+18]..[723,30847+65])
                      Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[723,30847+19]..[723,30847+46])
                      Some
                        expression (middle_end/flambda/inline_and_simplify.ml[723,30847+47]..[723,30847+64])
                          Pexp_ident "move_to_surrogate" (middle_end/flambda/inline_and_simplify.ml[723,30847+47]..[723,30847+64])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[724,30913+18]..[724,30913+22])
                      Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[724,30913+18]..[724,30913+22])
                ]
        ]
        expression (middle_end/flambda/inline_and_simplify.ml[726,30953+14]..[726,30953+72])
          Pexp_tuple
          [
            expression (middle_end/flambda/inline_and_simplify.ml[726,30953+14]..[726,30953+27])
              Pexp_ident "surrogate_var" (middle_end/flambda/inline_and_simplify.ml[726,30953+14]..[726,30953+27])
            expression (middle_end/flambda/inline_and_simplify.ml[726,30953+29]..[726,30953+38])
              Pexp_ident "surrogate" (middle_end/flambda/inline_and_simplify.ml[726,30953+29]..[726,30953+38])
            expression (middle_end/flambda/inline_and_simplify.ml[726,30953+40]..[726,30953+61])
              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[726,30953+40]..[726,30953+61])
            expression (middle_end/flambda/inline_and_simplify.ml[726,30953+63]..[726,30953+66])
              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[726,30953+63]..[726,30953+66])
            expression (middle_end/flambda/inline_and_simplify.ml[726,30953+68]..[726,30953+72])
              Pexp_ident "wrap" (middle_end/flambda/inline_and_simplify.ml[726,30953+68]..[726,30953+72])
          ]
                                                              ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[728,31039+10]..[768,32907+24])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[728,31039+14]..[728,31039+28])
                                                            Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[728,31039+14]..[728,31039+28])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[728,31039+31]..[728,31039+67])
                                                            Pexp_field
                                                            expression (middle_end/flambda/inline_and_simplify.ml[728,31039+31]..[728,31039+52])
                                                              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[728,31039+31]..[728,31039+52])
                                                            "function_decls" (middle_end/flambda/inline_and_simplify.ml[728,31039+53]..[728,31039+67])
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[729,31110+10]..[768,32907+24])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[729,31110+14]..[729,31110+27])
                                                              Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[729,31110+14]..[729,31110+27])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[730,31140+12]..[738,31472+57])
                                                              Pexp_try
                                                              expression (middle_end/flambda/inline_and_simplify.ml[731,31156+14]..[733,31249+35])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[731,31156+14]..[731,31156+31])
                                                                  Pexp_ident "Variable.Map.find" (middle_end/flambda/inline_and_simplify.ml[731,31156+14]..[731,31156+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[732,31188+16]..[732,31188+60])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[732,31188+17]..[732,31188+34])
Pexp_ident "Closure_id.unwrap" (middle_end/flambda/inline_and_simplify.ml[732,31188+17]..[732,31188+34])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[732,31188+35]..[732,31188+59])
    Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[732,31188+35]..[732,31188+59])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[733,31249+16]..[733,31249+35])
                                                                      Pexp_field
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[733,31249+16]..[733,31249+30])
Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[733,31249+16]..[733,31249+30])
                                                                      "funs" (middle_end/flambda/inline_and_simplify.ml[733,31249+31]..[733,31249+35])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[735,31302+14]..[735,31302+23])
                                                                    Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[735,31302+14]..[735,31302+23])
                                                                    None
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[736,31329+14]..[738,31472+57])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[736,31329+14]..[736,31329+31])
                                                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[736,31329+14]..[736,31329+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[736,31329+32]..[737,31402+69])
  Pexp_constant PConst_string("When handling application expression, approximation references non-existent closure %a@.",(middle_end/flambda/inline_and_simplify.ml[736,31329+33]..[737,31402+68]),None)
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[738,31472+16]..[738,31472+32])
  Pexp_ident "Closure_id.print" (middle_end/flambda/inline_and_simplify.ml[738,31472+16]..[738,31472+32])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[738,31472+33]..[738,31472+57])
  Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[738,31472+33]..[738,31472+57])
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[740,31543+10]..[768,32907+24])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[740,31543+14]..[740,31543+15])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[740,31543+14]..[740,31543+15])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[741,31561+12]..[744,31697+27])
                                                                Pexp_match
                                                                expression (middle_end/flambda/inline_and_simplify.ml[741,31561+18]..[741,31561+28])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[741,31561+18]..[741,31561+23])
                                                                    Pexp_ident "apply" (middle_end/flambda/inline_and_simplify.ml[741,31561+18]..[741,31561+23])
                                                                  "kind" (middle_end/flambda/inline_and_simplify.ml[741,31561+24]..[741,31561+28])
                                                                [
                                                                  <case>
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[742,31595+14]..[742,31595+22])
                                                                      Ppat_construct "Indirect" (middle_end/flambda/inline_and_simplify.ml[742,31595+14]..[742,31595+22])
                                                                      None
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[743,31621+14]..[743,31621+75])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[743,31621+14]..[743,31621+27])
Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[743,31621+14]..[743,31621+27])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[743,31621+28]..[743,31621+29])
    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[743,31621+28]..[743,31621+29])
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[743,31621+30]..[743,31621+75])
    Pexp_ident "Inlining_cost.Benefit.direct_call_of_indirect" (middle_end/flambda/inline_and_simplify.ml[743,31621+30]..[743,31621+75])
                                                                      ]
                                                                  <case>
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[744,31697+14]..[744,31697+22])
                                                                      Ppat_construct "Direct" (middle_end/flambda/inline_and_simplify.ml[744,31697+14]..[744,31697+20])
                                                                      Some
[]
pattern (middle_end/flambda/inline_and_simplify.ml[744,31697+21]..[744,31697+22])
  Ppat_any
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[744,31697+26]..[744,31697+27])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[744,31697+26]..[744,31697+27])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[746,31738+10]..[768,32907+24])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[746,31738+14]..[746,31738+19])
                                                                  Ppat_var "nargs" (middle_end/flambda/inline_and_simplify.ml[746,31738+14]..[746,31738+19])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[746,31738+22]..[746,31738+38])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[746,31738+22]..[746,31738+33])
                                                                    Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[746,31738+22]..[746,31738+33])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[746,31738+34]..[746,31738+38])
Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[746,31738+34]..[746,31738+38])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[747,31780+10]..[768,32907+24])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[747,31780+14]..[747,31780+19])
                                                                    Ppat_var "arity" (middle_end/flambda/inline_and_simplify.ml[747,31780+14]..[747,31780+19])
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[747,31780+22]..[747,31780+52])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[747,31780+22]..[747,31780+38])
                                                                      Pexp_ident "A.function_arity" (middle_end/flambda/inline_and_simplify.ml[747,31780+22]..[747,31780+38])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[747,31780+39]..[747,31780+52])
  Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[747,31780+39]..[747,31780+52])
                                                                    ]
                                                              ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[748,31836+10]..[768,32907+24])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[748,31836+14]..[748,31836+23])
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[748,31836+14]..[748,31836+20])
  Ppat_var "result" (middle_end/flambda/inline_and_simplify.ml[748,31836+14]..[748,31836+20])
pattern (middle_end/flambda/inline_and_simplify.ml[748,31836+22]..[748,31836+23])
  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[748,31836+22]..[748,31836+23])
                                                                      ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[749,31862+12]..[766,32836+57])
                                                                      Pexp_ifthenelse
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[749,31862+15]..[749,31862+28])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[749,31862+21]..[749,31862+22])
  Pexp_ident "=" (middle_end/flambda/inline_and_simplify.ml[749,31862+21]..[749,31862+22])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[749,31862+15]..[749,31862+20])
      Pexp_ident "nargs" (middle_end/flambda/inline_and_simplify.ml[749,31862+15]..[749,31862+20])
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[749,31862+23]..[749,31862+28])
      Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[749,31862+23]..[749,31862+28])
]
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[750,31896+14]..[753,32099+55])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[750,31896+14]..[750,31896+39])
  Pexp_ident "simplify_full_application" (middle_end/flambda/inline_and_simplify.ml[750,31896+14]..[750,31896+39])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[750,31896+40]..[750,31896+43])
      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[750,31896+40]..[750,31896+43])
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[750,31896+44]..[750,31896+45])
      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[750,31896+44]..[750,31896+45])
  <arg>
  Labelled "function_decls"
    expression (middle_end/flambda/inline_and_simplify.ml[750,31896+47]..[750,31896+61])
      Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[750,31896+47]..[750,31896+61])
  <arg>
  Labelled "lhs_of_application"
    expression (middle_end/flambda/inline_and_simplify.ml[751,31958+17]..[751,31958+35])
      Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[751,31958+17]..[751,31958+35])
  <arg>
  Labelled "closure_id_being_applied"
    expression (middle_end/flambda/inline_and_simplify.ml[751,31958+37]..[751,31958+61])
      Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[751,31958+37]..[751,31958+61])
  <arg>
  Labelled "function_decl"
    expression (middle_end/flambda/inline_and_simplify.ml[751,31958+63]..[751,31958+76])
      Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[751,31958+63]..[751,31958+76])
  <arg>
  Labelled "value_set_of_closures"
    expression (middle_end/flambda/inline_and_simplify.ml[752,32035+17]..[752,32035+38])
      Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[752,32035+17]..[752,32035+38])
  <arg>
  Labelled "args"
    expression (middle_end/flambda/inline_and_simplify.ml[752,32035+40]..[752,32035+44])
      Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[752,32035+40]..[752,32035+44])
  <arg>
  Labelled "args_approxs"
    expression (middle_end/flambda/inline_and_simplify.ml[752,32035+46]..[752,32035+58])
      Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[752,32035+46]..[752,32035+58])
  <arg>
  Labelled "dbg"
    expression (middle_end/flambda/inline_and_simplify.ml[752,32035+60]..[752,32035+63])
      Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[752,32035+60]..[752,32035+63])
  <arg>
  Labelled "inline_requested"
    expression (middle_end/flambda/inline_and_simplify.ml[753,32099+17]..[753,32099+33])
      Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[753,32099+17]..[753,32099+33])
  <arg>
  Labelled "specialise_requested"
    expression (middle_end/flambda/inline_and_simplify.ml[753,32099+35]..[753,32099+55])
      Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[753,32099+35]..[753,32099+55])
]
                                                                      Some
expression (middle_end/flambda/inline_and_simplify.ml[754,32155+17]..[766,32836+57])
  Pexp_ifthenelse
  expression (middle_end/flambda/inline_and_simplify.ml[754,32155+20]..[754,32155+33])
    Pexp_apply
    expression (middle_end/flambda/inline_and_simplify.ml[754,32155+26]..[754,32155+27])
      Pexp_ident ">" (middle_end/flambda/inline_and_simplify.ml[754,32155+26]..[754,32155+27])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/inline_and_simplify.ml[754,32155+20]..[754,32155+25])
          Pexp_ident "nargs" (middle_end/flambda/inline_and_simplify.ml[754,32155+20]..[754,32155+25])
      <arg>
      Nolabel
        expression (middle_end/flambda/inline_and_simplify.ml[754,32155+28]..[754,32155+33])
          Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[754,32155+28]..[754,32155+33])
    ]
  expression (middle_end/flambda/inline_and_simplify.ml[755,32194+14]..[758,32415+37])
    Pexp_apply
    expression (middle_end/flambda/inline_and_simplify.ml[755,32194+14]..[755,32194+39])
      Pexp_ident "simplify_over_application" (middle_end/flambda/inline_and_simplify.ml[755,32194+14]..[755,32194+39])
    [
      <arg>
      Nolabel
        expression (middle_end/flambda/inline_and_simplify.ml[755,32194+40]..[755,32194+43])
          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[755,32194+40]..[755,32194+43])
      <arg>
      Nolabel
        expression (middle_end/flambda/inline_and_simplify.ml[755,32194+44]..[755,32194+45])
          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[755,32194+44]..[755,32194+45])
      <arg>
      Labelled "args"
        expression (middle_end/flambda/inline_and_simplify.ml[755,32194+47]..[755,32194+51])
          Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[755,32194+47]..[755,32194+51])
      <arg>
      Labelled "args_approxs"
        expression (middle_end/flambda/inline_and_simplify.ml[755,32194+53]..[755,32194+65])
          Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[755,32194+53]..[755,32194+65])
      <arg>
      Labelled "function_decls"
        expression (middle_end/flambda/inline_and_simplify.ml[756,32260+17]..[756,32260+31])
          Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[756,32260+17]..[756,32260+31])
      <arg>
      Labelled "lhs_of_application"
        expression (middle_end/flambda/inline_and_simplify.ml[756,32260+33]..[756,32260+51])
          Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[756,32260+33]..[756,32260+51])
      <arg>
      Labelled "closure_id_being_applied"
        expression (middle_end/flambda/inline_and_simplify.ml[756,32260+53]..[756,32260+77])
          Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[756,32260+53]..[756,32260+77])
      <arg>
      Labelled "function_decl"
        expression (middle_end/flambda/inline_and_simplify.ml[757,32338+17]..[757,32338+30])
          Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[757,32338+17]..[757,32338+30])
      <arg>
      Labelled "value_set_of_closures"
        expression (middle_end/flambda/inline_and_simplify.ml[757,32338+32]..[757,32338+53])
          Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[757,32338+32]..[757,32338+53])
      <arg>
      Labelled "dbg"
        expression (middle_end/flambda/inline_and_simplify.ml[757,32338+55]..[757,32338+58])
          Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[757,32338+55]..[757,32338+58])
      <arg>
      Labelled "inline_requested"
        expression (middle_end/flambda/inline_and_simplify.ml[757,32338+60]..[757,32338+76])
          Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[757,32338+60]..[757,32338+76])
      <arg>
      Labelled "specialise_requested"
        expression (middle_end/flambda/inline_and_simplify.ml[758,32415+17]..[758,32415+37])
          Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[758,32415+17]..[758,32415+37])
    ]
  Some
    expression (middle_end/flambda/inline_and_simplify.ml[759,32453+17]..[766,32836+57])
      Pexp_ifthenelse
      expression (middle_end/flambda/inline_and_simplify.ml[759,32453+20]..[759,32453+46])
        Pexp_apply
        expression (middle_end/flambda/inline_and_simplify.ml[759,32453+30]..[759,32453+32])
          Pexp_ident "&&" (middle_end/flambda/inline_and_simplify.ml[759,32453+30]..[759,32453+32])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[759,32453+20]..[759,32453+29])
              Pexp_apply
              expression (middle_end/flambda/inline_and_simplify.ml[759,32453+26]..[759,32453+27])
                Pexp_ident ">" (middle_end/flambda/inline_and_simplify.ml[759,32453+26]..[759,32453+27])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[759,32453+20]..[759,32453+25])
                    Pexp_ident "nargs" (middle_end/flambda/inline_and_simplify.ml[759,32453+20]..[759,32453+25])
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[759,32453+28]..[759,32453+29])
                    Pexp_constant PConst_int (0,None)
              ]
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[759,32453+33]..[759,32453+46])
              Pexp_apply
              expression (middle_end/flambda/inline_and_simplify.ml[759,32453+39]..[759,32453+40])
                Pexp_ident "<" (middle_end/flambda/inline_and_simplify.ml[759,32453+39]..[759,32453+40])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[759,32453+33]..[759,32453+38])
                    Pexp_ident "nargs" (middle_end/flambda/inline_and_simplify.ml[759,32453+33]..[759,32453+38])
                <arg>
                Nolabel
                  expression (middle_end/flambda/inline_and_simplify.ml[759,32453+41]..[759,32453+46])
                    Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[759,32453+41]..[759,32453+46])
              ]
        ]
      expression (middle_end/flambda/inline_and_simplify.ml[760,32505+14]..[762,32642+55])
        Pexp_apply
        expression (middle_end/flambda/inline_and_simplify.ml[760,32505+14]..[760,32505+42])
          Pexp_ident "simplify_partial_application" (middle_end/flambda/inline_and_simplify.ml[760,32505+14]..[760,32505+42])
        [
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[760,32505+43]..[760,32505+46])
              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[760,32505+43]..[760,32505+46])
          <arg>
          Nolabel
            expression (middle_end/flambda/inline_and_simplify.ml[760,32505+47]..[760,32505+48])
              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[760,32505+47]..[760,32505+48])
          <arg>
          Labelled "lhs_of_application"
            expression (middle_end/flambda/inline_and_simplify.ml[760,32505+50]..[760,32505+68])
              Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[760,32505+50]..[760,32505+68])
          <arg>
          Labelled "closure_id_being_applied"
            expression (middle_end/flambda/inline_and_simplify.ml[761,32574+17]..[761,32574+41])
              Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[761,32574+17]..[761,32574+41])
          <arg>
          Labelled "function_decl"
            expression (middle_end/flambda/inline_and_simplify.ml[761,32574+43]..[761,32574+56])
              Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[761,32574+43]..[761,32574+56])
          <arg>
          Labelled "args"
            expression (middle_end/flambda/inline_and_simplify.ml[761,32574+58]..[761,32574+62])
              Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[761,32574+58]..[761,32574+62])
          <arg>
          Labelled "dbg"
            expression (middle_end/flambda/inline_and_simplify.ml[761,32574+64]..[761,32574+67])
              Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[761,32574+64]..[761,32574+67])
          <arg>
          Labelled "inline_requested"
            expression (middle_end/flambda/inline_and_simplify.ml[762,32642+17]..[762,32642+33])
              Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[762,32642+17]..[762,32642+33])
          <arg>
          Labelled "specialise_requested"
            expression (middle_end/flambda/inline_and_simplify.ml[762,32642+35]..[762,32642+55])
              Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[762,32642+35]..[762,32642+55])
        ]
      Some
        expression (middle_end/flambda/inline_and_simplify.ml[764,32715+14]..[766,32836+57])
          Pexp_apply
          expression (middle_end/flambda/inline_and_simplify.ml[764,32715+14]..[764,32715+31])
            Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[764,32715+14]..[764,32715+31])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[764,32715+32]..[765,32790+45])
                Pexp_constant PConst_string("Function with arity %d when simplifying application expression: %a",(middle_end/flambda/inline_and_simplify.ml[764,32715+33]..[765,32790+44]),None)
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[766,32836+16]..[766,32836+21])
                Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[766,32836+16]..[766,32836+21])
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[766,32836+22]..[766,32836+35])
                Pexp_ident "Flambda.print" (middle_end/flambda/inline_and_simplify.ml[766,32836+22]..[766,32836+35])
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[766,32836+36]..[766,32836+57])
                Pexp_construct "Flambda.Apply" (middle_end/flambda/inline_and_simplify.ml[766,32836+37]..[766,32836+50])
                Some
                  expression (middle_end/flambda/inline_and_simplify.ml[766,32836+51]..[766,32836+56])
                    Pexp_ident "apply" (middle_end/flambda/inline_and_simplify.ml[766,32836+51]..[766,32836+56])
          ]
                                                                ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[768,32907+10]..[768,32907+24])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[768,32907+10]..[768,32907+21])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[768,32907+10]..[768,32907+14])
Pexp_ident "wrap" (middle_end/flambda/inline_and_simplify.ml[768,32907+10]..[768,32907+14])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inline_and_simplify.ml[768,32907+15]..[768,32907+21])
    Pexp_ident "result" (middle_end/flambda/inline_and_simplify.ml[768,32907+15]..[768,32907+21])
                                                                      ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[768,32907+23]..[768,32907+24])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[768,32907+23]..[768,32907+24])
                                                                  ]
                                                <case>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[769,32932+10]..[769,32932+15])
                                                    Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[769,32932+10]..[769,32932+15])
                                                    None
                                                  expression (middle_end/flambda/inline_and_simplify.ml[770,33010+10]..[772,33164+41])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/inline_and_simplify.ml[770,33010+10]..[771,33084+78])
                                                        Pexp_construct "Apply" (middle_end/flambda/inline_and_simplify.ml[770,33010+10]..[770,33010+15])
                                                        Some
                                                          expression (middle_end/flambda/inline_and_simplify.ml[770,33010+16]..[771,33084+78])
                                                            Pexp_record
                                                            [
                                                              "func" (middle_end/flambda/inline_and_simplify.ml[770,33010+19]..[770,33010+23])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[770,33010+26]..[770,33010+44])
                                                                  Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[770,33010+26]..[770,33010+44])
                                                              "args" (middle_end/flambda/inline_and_simplify.ml[770,33010+46]..[770,33010+50]) ghost
                                                                expression (middle_end/flambda/inline_and_simplify.ml[770,33010+46]..[770,33010+50])
                                                                  Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[770,33010+46]..[770,33010+50])
                                                              "kind" (middle_end/flambda/inline_and_simplify.ml[770,33010+52]..[770,33010+56])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[770,33010+59]..[770,33010+67])
                                                                  Pexp_construct "Indirect" (middle_end/flambda/inline_and_simplify.ml[770,33010+59]..[770,33010+67])
                                                                  None
                                                              "dbg" (middle_end/flambda/inline_and_simplify.ml[770,33010+69]..[770,33010+72]) ghost
                                                                expression (middle_end/flambda/inline_and_simplify.ml[770,33010+69]..[770,33010+72])
                                                                  Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[770,33010+69]..[770,33010+72])
                                                              "inline" (middle_end/flambda/inline_and_simplify.ml[771,33084+14]..[771,33084+20])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[771,33084+23]..[771,33084+39])
                                                                  Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[771,33084+23]..[771,33084+39])
                                                              "specialise" (middle_end/flambda/inline_and_simplify.ml[771,33084+41]..[771,33084+51])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[771,33084+54]..[771,33084+74])
                                                                  Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[771,33084+54]..[771,33084+74])
                                                            ]
                                                            None
                                                      expression (middle_end/flambda/inline_and_simplify.ml[772,33164+12]..[772,33164+41])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[772,33164+12]..[772,33164+15])
                                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[772,33164+12]..[772,33164+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[772,33164+16]..[772,33164+17])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[772,33164+16]..[772,33164+17])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[772,33164+18]..[772,33164+41])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[772,33164+19]..[772,33164+34])
                                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[772,33164+19]..[772,33164+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[772,33164+35]..[772,33164+40])
                                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[772,33164+35]..[772,33164+40])
                                                                    None
                                                              ]
                                                        ]
                                                    ]
                                              ]
                                  ]
                      ]
                core_type (middle_end/flambda/inline_and_simplify.ml[673,28147+52]..[673,28147+67])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[673,28147+52]..[673,28147+61])
                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[673,28147+52]..[673,28147+61])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[673,28147+64]..[673,28147+67])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[673,28147+64]..[673,28147+67])
                      []
                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[774,33209+4]..[774,33209+29])
          Ppat_var "simplify_full_application" (middle_end/flambda/inline_and_simplify.ml[774,33209+4]..[774,33209+29])
        expression (middle_end/flambda/inline_and_simplify.ml[774,33209+30]..[780,33609+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[774,33209+30]..[774,33209+33])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[774,33209+30]..[774,33209+33])
          expression (middle_end/flambda/inline_and_simplify.ml[774,33209+34]..[780,33609+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[774,33209+34]..[774,33209+35])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[774,33209+34]..[774,33209+35])
            expression (middle_end/flambda/inline_and_simplify.ml[774,33209+36]..[780,33609+43]) ghost
              Pexp_fun
              Labelled "function_decls"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[774,33209+37]..[774,33209+51])
                Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[774,33209+37]..[774,33209+51])
              expression (middle_end/flambda/inline_and_simplify.ml[774,33209+52]..[780,33609+43]) ghost
                Pexp_fun
                Labelled "lhs_of_application"
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[774,33209+53]..[774,33209+71])
                  Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[774,33209+53]..[774,33209+71])
                expression (middle_end/flambda/inline_and_simplify.ml[775,33281+6]..[780,33609+43]) ghost
                  Pexp_fun
                  Labelled "closure_id_being_applied"
                  None
                  pattern (middle_end/flambda/inline_and_simplify.ml[775,33281+7]..[775,33281+31])
                    Ppat_var "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[775,33281+7]..[775,33281+31])
                  expression (middle_end/flambda/inline_and_simplify.ml[775,33281+32]..[780,33609+43]) ghost
                    Pexp_fun
                    Labelled "function_decl"
                    None
                    pattern (middle_end/flambda/inline_and_simplify.ml[775,33281+33]..[775,33281+46])
                      Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[775,33281+33]..[775,33281+46])
                    expression (middle_end/flambda/inline_and_simplify.ml[775,33281+47]..[780,33609+43]) ghost
                      Pexp_fun
                      Labelled "value_set_of_closures"
                      None
                      pattern (middle_end/flambda/inline_and_simplify.ml[775,33281+48]..[775,33281+69])
                        Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[775,33281+48]..[775,33281+69])
                      expression (middle_end/flambda/inline_and_simplify.ml[775,33281+70]..[780,33609+43]) ghost
                        Pexp_fun
                        Labelled "args"
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[775,33281+71]..[775,33281+75])
                          Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[775,33281+71]..[775,33281+75])
                        expression (middle_end/flambda/inline_and_simplify.ml[776,33357+6]..[780,33609+43]) ghost
                          Pexp_fun
                          Labelled "args_approxs"
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[776,33357+7]..[776,33357+19])
                            Ppat_var "args_approxs" (middle_end/flambda/inline_and_simplify.ml[776,33357+7]..[776,33357+19])
                          expression (middle_end/flambda/inline_and_simplify.ml[776,33357+20]..[780,33609+43]) ghost
                            Pexp_fun
                            Labelled "dbg"
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[776,33357+21]..[776,33357+24])
                              Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[776,33357+21]..[776,33357+24])
                            expression (middle_end/flambda/inline_and_simplify.ml[776,33357+25]..[780,33609+43]) ghost
                              Pexp_fun
                              Labelled "inline_requested"
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[776,33357+26]..[776,33357+42])
                                Ppat_var "inline_requested" (middle_end/flambda/inline_and_simplify.ml[776,33357+26]..[776,33357+42])
                              expression (middle_end/flambda/inline_and_simplify.ml[776,33357+43]..[780,33609+43]) ghost
                                Pexp_fun
                                Labelled "specialise_requested"
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[776,33357+44]..[776,33357+64])
                                  Ppat_var "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[776,33357+44]..[776,33357+64])
                                expression (middle_end/flambda/inline_and_simplify.ml[777,33424+2]..[780,33609+43])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[777,33424+2]..[777,33424+33])
                                    Pexp_ident "Inlining_decision.for_call_site" (middle_end/flambda/inline_and_simplify.ml[777,33424+2]..[777,33424+33])
                                  [
                                    <arg>
                                    Labelled "env"
                                      expression (middle_end/flambda/inline_and_simplify.ml[777,33424+35]..[777,33424+38])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[777,33424+35]..[777,33424+38])
                                    <arg>
                                    Labelled "r"
                                      expression (middle_end/flambda/inline_and_simplify.ml[777,33424+40]..[777,33424+41])
                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[777,33424+40]..[777,33424+41])
                                    <arg>
                                    Labelled "function_decls"
                                      expression (middle_end/flambda/inline_and_simplify.ml[777,33424+43]..[777,33424+57])
                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[777,33424+43]..[777,33424+57])
                                    <arg>
                                    Labelled "lhs_of_application"
                                      expression (middle_end/flambda/inline_and_simplify.ml[778,33482+5]..[778,33482+23])
                                        Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[778,33482+5]..[778,33482+23])
                                    <arg>
                                    Labelled "closure_id_being_applied"
                                      expression (middle_end/flambda/inline_and_simplify.ml[778,33482+25]..[778,33482+49])
                                        Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[778,33482+25]..[778,33482+49])
                                    <arg>
                                    Labelled "function_decl"
                                      expression (middle_end/flambda/inline_and_simplify.ml[778,33482+51]..[778,33482+64])
                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[778,33482+51]..[778,33482+64])
                                    <arg>
                                    Labelled "value_set_of_closures"
                                      expression (middle_end/flambda/inline_and_simplify.ml[779,33547+5]..[779,33547+26])
                                        Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[779,33547+5]..[779,33547+26])
                                    <arg>
                                    Labelled "args"
                                      expression (middle_end/flambda/inline_and_simplify.ml[779,33547+28]..[779,33547+32])
                                        Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[779,33547+28]..[779,33547+32])
                                    <arg>
                                    Labelled "args_approxs"
                                      expression (middle_end/flambda/inline_and_simplify.ml[779,33547+34]..[779,33547+46])
                                        Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[779,33547+34]..[779,33547+46])
                                    <arg>
                                    Labelled "dbg"
                                      expression (middle_end/flambda/inline_and_simplify.ml[779,33547+48]..[779,33547+51])
                                        Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[779,33547+48]..[779,33547+51])
                                    <arg>
                                    Labelled "simplify"
                                      expression (middle_end/flambda/inline_and_simplify.ml[779,33547+53]..[779,33547+61])
                                        Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[779,33547+53]..[779,33547+61])
                                    <arg>
                                    Labelled "inline_requested"
                                      expression (middle_end/flambda/inline_and_simplify.ml[780,33609+5]..[780,33609+21])
                                        Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[780,33609+5]..[780,33609+21])
                                    <arg>
                                    Labelled "specialise_requested"
                                      expression (middle_end/flambda/inline_and_simplify.ml[780,33609+23]..[780,33609+43])
                                        Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[780,33609+23]..[780,33609+43])
                                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[782,33654+4]..[782,33654+32])
          Ppat_var "simplify_partial_application" (middle_end/flambda/inline_and_simplify.ml[782,33654+4]..[782,33654+32])
        expression (middle_end/flambda/inline_and_simplify.ml[782,33654+33]..[845,36101+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[782,33654+33]..[782,33654+36])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[782,33654+33]..[782,33654+36])
          expression (middle_end/flambda/inline_and_simplify.ml[782,33654+37]..[845,36101+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[782,33654+37]..[782,33654+38])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[782,33654+37]..[782,33654+38])
            expression (middle_end/flambda/inline_and_simplify.ml[782,33654+39]..[845,36101+32]) ghost
              Pexp_fun
              Labelled "lhs_of_application"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[782,33654+40]..[782,33654+58])
                Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[782,33654+40]..[782,33654+58])
              expression (middle_end/flambda/inline_and_simplify.ml[783,33713+6]..[845,36101+32]) ghost
                Pexp_fun
                Labelled "closure_id_being_applied"
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[783,33713+7]..[783,33713+31])
                  Ppat_var "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[783,33713+7]..[783,33713+31])
                expression (middle_end/flambda/inline_and_simplify.ml[783,33713+32]..[845,36101+32]) ghost
                  Pexp_fun
                  Labelled "function_decl"
                  None
                  pattern (middle_end/flambda/inline_and_simplify.ml[783,33713+33]..[783,33713+46])
                    Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[783,33713+33]..[783,33713+46])
                  expression (middle_end/flambda/inline_and_simplify.ml[783,33713+47]..[845,36101+32]) ghost
                    Pexp_fun
                    Labelled "args"
                    None
                    pattern (middle_end/flambda/inline_and_simplify.ml[783,33713+48]..[783,33713+52])
                      Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[783,33713+48]..[783,33713+52])
                    expression (middle_end/flambda/inline_and_simplify.ml[783,33713+53]..[845,36101+32]) ghost
                      Pexp_fun
                      Labelled "dbg"
                      None
                      pattern (middle_end/flambda/inline_and_simplify.ml[783,33713+54]..[783,33713+57])
                        Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[783,33713+54]..[783,33713+57])
                      expression (middle_end/flambda/inline_and_simplify.ml[784,33771+6]..[845,36101+32]) ghost
                        Pexp_fun
                        Labelled "inline_requested"
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[784,33771+7]..[784,33771+23])
                          Ppat_var "inline_requested" (middle_end/flambda/inline_and_simplify.ml[784,33771+7]..[784,33771+23])
                        expression (middle_end/flambda/inline_and_simplify.ml[784,33771+24]..[845,36101+32]) ghost
                          Pexp_fun
                          Labelled "specialise_requested"
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[784,33771+25]..[784,33771+45])
                            Ppat_var "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[784,33771+25]..[784,33771+45])
                          expression (middle_end/flambda/inline_and_simplify.ml[785,33819+2]..[845,36101+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[785,33819+6]..[785,33819+11])
                                  Ppat_var "arity" (middle_end/flambda/inline_and_simplify.ml[785,33819+6]..[785,33819+11])
                                expression (middle_end/flambda/inline_and_simplify.ml[785,33819+14]..[785,33819+44])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[785,33819+14]..[785,33819+30])
                                    Pexp_ident "A.function_arity" (middle_end/flambda/inline_and_simplify.ml[785,33819+14]..[785,33819+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[785,33819+31]..[785,33819+44])
                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[785,33819+31]..[785,33819+44])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[786,33867+2]..[845,36101+32])
                              Pexp_sequence
                              expression (middle_end/flambda/inline_and_simplify.ml[786,33867+2]..[786,33867+35])
                                Pexp_assert
                                expression (middle_end/flambda/inline_and_simplify.ml[786,33867+9]..[786,33867+35])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[786,33867+16]..[786,33867+17])
                                    Pexp_ident ">" (middle_end/flambda/inline_and_simplify.ml[786,33867+16]..[786,33867+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[786,33867+10]..[786,33867+15])
                                        Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[786,33867+10]..[786,33867+15])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[786,33867+18]..[786,33867+34])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[786,33867+18]..[786,33867+29])
                                          Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[786,33867+18]..[786,33867+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[786,33867+30]..[786,33867+34])
                                              Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[786,33867+30]..[786,33867+34])
                                        ]
                                  ]
                              expression (middle_end/flambda/inline_and_simplify.ml[793,34261+2]..[845,36101+32])
                                Pexp_sequence
                                expression (middle_end/flambda/inline_and_simplify.ml[793,34261+2]..[803,34749+5])
                                  Pexp_match
                                  expression (middle_end/flambda/inline_and_simplify.ml[793,34261+14]..[793,34261+58])
                                    Pexp_constraint
                                    expression (middle_end/flambda/inline_and_simplify.ml[793,34261+15]..[793,34261+31])
                                      Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[793,34261+15]..[793,34261+31])
                                    core_type (middle_end/flambda/inline_and_simplify.ml[793,34261+34]..[793,34261+57])
                                      Ptyp_constr "Lambda.inline_attribute" (middle_end/flambda/inline_and_simplify.ml[793,34261+34]..[793,34261+57])
                                      []
                                  [
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[794,34325+4]..[794,34325+32])
                                        Ppat_or
                                        pattern (middle_end/flambda/inline_and_simplify.ml[794,34325+4]..[794,34325+17])
                                          Ppat_construct "Always_inline" (middle_end/flambda/inline_and_simplify.ml[794,34325+4]..[794,34325+17])
                                          None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[794,34325+20]..[794,34325+32])
                                          Ppat_construct "Never_inline" (middle_end/flambda/inline_and_simplify.ml[794,34325+20]..[794,34325+32])
                                          None
                                      expression (middle_end/flambda/inline_and_simplify.ml[795,34361+4]..[797,34493+33])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[795,34361+4]..[795,34361+26])
                                          Pexp_ident "Location.prerr_warning" (middle_end/flambda/inline_and_simplify.ml[795,34361+4]..[795,34361+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[795,34361+27]..[795,34361+54])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[795,34361+28]..[795,34361+49])
                                                Pexp_ident "Debuginfo.to_location" (middle_end/flambda/inline_and_simplify.ml[795,34361+28]..[795,34361+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[795,34361+50]..[795,34361+53])
                                                    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[795,34361+50]..[795,34361+53])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[796,34416+6]..[797,34493+33])
                                              Pexp_construct "Warnings.Inlining_impossible" (middle_end/flambda/inline_and_simplify.ml[796,34416+7]..[796,34416+35])
                                              Some
                                                expression (middle_end/flambda/inline_and_simplify.ml[796,34416+36]..[797,34493+32])
                                                  Pexp_constant PConst_string("[@inlined] attributes may not be used on partial applications",(middle_end/flambda/inline_and_simplify.ml[796,34416+37]..[797,34493+31]),None)
                                        ]
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[798,34527+4]..[798,34527+12])
                                        Ppat_construct "Unroll" (middle_end/flambda/inline_and_simplify.ml[798,34527+4]..[798,34527+10])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inline_and_simplify.ml[798,34527+11]..[798,34527+12])
                                            Ppat_any
                                      expression (middle_end/flambda/inline_and_simplify.ml[799,34543+4]..[801,34676+33])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[799,34543+4]..[799,34543+26])
                                          Pexp_ident "Location.prerr_warning" (middle_end/flambda/inline_and_simplify.ml[799,34543+4]..[799,34543+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[799,34543+27]..[799,34543+54])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[799,34543+28]..[799,34543+49])
                                                Pexp_ident "Debuginfo.to_location" (middle_end/flambda/inline_and_simplify.ml[799,34543+28]..[799,34543+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[799,34543+50]..[799,34543+53])
                                                    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[799,34543+50]..[799,34543+53])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[800,34598+6]..[801,34676+33])
                                              Pexp_construct "Warnings.Inlining_impossible" (middle_end/flambda/inline_and_simplify.ml[800,34598+7]..[800,34598+35])
                                              Some
                                                expression (middle_end/flambda/inline_and_simplify.ml[800,34598+36]..[801,34676+32])
                                                  Pexp_constant PConst_string("[@unrolled] attributes may not be used on partial applications",(middle_end/flambda/inline_and_simplify.ml[800,34598+37]..[801,34676+31]),None)
                                        ]
                                    <case>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[802,34710+4]..[802,34710+32])
                                        Ppat_or
                                        pattern (middle_end/flambda/inline_and_simplify.ml[802,34710+4]..[802,34710+15])
                                          Ppat_construct "Hint_inline" (middle_end/flambda/inline_and_simplify.ml[802,34710+4]..[802,34710+15])
                                          None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[802,34710+18]..[802,34710+32])
                                          Ppat_construct "Default_inline" (middle_end/flambda/inline_and_simplify.ml[802,34710+18]..[802,34710+32])
                                          None
                                      expression (middle_end/flambda/inline_and_simplify.ml[802,34710+36]..[802,34710+38])
                                        Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[802,34710+36]..[802,34710+38])
                                        None
                                  ]
                                expression (middle_end/flambda/inline_and_simplify.ml[804,34756+2]..[845,36101+32])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inline_and_simplify.ml[804,34756+2]..[810,35071+5])
                                    Pexp_match
                                    expression (middle_end/flambda/inline_and_simplify.ml[804,34756+14]..[804,34756+66])
                                      Pexp_constraint
                                      expression (middle_end/flambda/inline_and_simplify.ml[804,34756+15]..[804,34756+35])
                                        Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[804,34756+15]..[804,34756+35])
                                      core_type (middle_end/flambda/inline_and_simplify.ml[804,34756+38]..[804,34756+65])
                                        Ptyp_constr "Lambda.specialise_attribute" (middle_end/flambda/inline_and_simplify.ml[804,34756+38]..[804,34756+65])
                                        []
                                    [
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[805,34828+4]..[805,34828+40])
                                          Ppat_or
                                          pattern (middle_end/flambda/inline_and_simplify.ml[805,34828+4]..[805,34828+21])
                                            Ppat_construct "Always_specialise" (middle_end/flambda/inline_and_simplify.ml[805,34828+4]..[805,34828+21])
                                            None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[805,34828+24]..[805,34828+40])
                                            Ppat_construct "Never_specialise" (middle_end/flambda/inline_and_simplify.ml[805,34828+24]..[805,34828+40])
                                            None
                                        expression (middle_end/flambda/inline_and_simplify.ml[806,34872+4]..[808,35008+33])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[806,34872+4]..[806,34872+26])
                                            Pexp_ident "Location.prerr_warning" (middle_end/flambda/inline_and_simplify.ml[806,34872+4]..[806,34872+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[806,34872+27]..[806,34872+54])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[806,34872+28]..[806,34872+49])
                                                  Pexp_ident "Debuginfo.to_location" (middle_end/flambda/inline_and_simplify.ml[806,34872+28]..[806,34872+49])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[806,34872+50]..[806,34872+53])
                                                      Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[806,34872+50]..[806,34872+53])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[807,34927+6]..[808,35008+33])
                                                Pexp_construct "Warnings.Inlining_impossible" (middle_end/flambda/inline_and_simplify.ml[807,34927+7]..[807,34927+35])
                                                Some
                                                  expression (middle_end/flambda/inline_and_simplify.ml[807,34927+36]..[808,35008+32])
                                                    Pexp_constant PConst_string("[@specialised] attributes may not be used on partial applications",(middle_end/flambda/inline_and_simplify.ml[807,34927+37]..[808,35008+31]),None)
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[809,35042+4]..[809,35042+22])
                                          Ppat_construct "Default_specialise" (middle_end/flambda/inline_and_simplify.ml[809,35042+4]..[809,35042+22])
                                          None
                                        expression (middle_end/flambda/inline_and_simplify.ml[809,35042+26]..[809,35042+28])
                                          Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[809,35042+26]..[809,35042+28])
                                          None
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[811,35078+2]..[845,36101+32])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[811,35078+6]..[811,35078+22])
                                          Ppat_var "freshened_params" (middle_end/flambda/inline_and_simplify.ml[811,35078+6]..[811,35078+22])
                                        expression (middle_end/flambda/inline_and_simplify.ml[812,35103+4]..[812,35103+65])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[812,35103+4]..[812,35103+12])
                                            Pexp_ident "List.map" (middle_end/flambda/inline_and_simplify.ml[812,35103+4]..[812,35103+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[812,35103+13]..[812,35103+42])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/inline_and_simplify.ml[812,35103+18]..[812,35103+19])
                                                  Ppat_var "p" (middle_end/flambda/inline_and_simplify.ml[812,35103+18]..[812,35103+19])
                                                expression (middle_end/flambda/inline_and_simplify.ml[812,35103+23]..[812,35103+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[812,35103+23]..[812,35103+39])
                                                    Pexp_ident "Parameter.rename" (middle_end/flambda/inline_and_simplify.ml[812,35103+23]..[812,35103+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[812,35103+40]..[812,35103+41])
                                                        Pexp_ident "p" (middle_end/flambda/inline_and_simplify.ml[812,35103+40]..[812,35103+41])
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[812,35103+43]..[812,35103+65])
                                                Pexp_field
                                                expression (middle_end/flambda/inline_and_simplify.ml[812,35103+43]..[812,35103+56])
                                                  Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[812,35103+43]..[812,35103+56])
                                                "A.params" (middle_end/flambda/inline_and_simplify.ml[812,35103+57]..[812,35103+65])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[814,35174+2]..[845,36101+32])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[814,35174+6]..[814,35174+34])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[814,35174+6]..[814,35174+18])
                                                Ppat_var "applied_args" (middle_end/flambda/inline_and_simplify.ml[814,35174+6]..[814,35174+18])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[814,35174+20]..[814,35174+34])
                                                Ppat_var "remaining_args" (middle_end/flambda/inline_and_simplify.ml[814,35174+20]..[814,35174+34])
                                            ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[815,35211+4]..[816,35270+27])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[815,35211+4]..[815,35211+32])
                                              Pexp_ident "Misc.Stdlib.List.map2_prefix" (middle_end/flambda/inline_and_simplify.ml[815,35211+4]..[815,35211+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[815,35211+33]..[815,35211+58])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[815,35211+38]..[815,35211+41])
                                                    Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[815,35211+38]..[815,35211+41])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[815,35211+42]..[815,35211+57]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[815,35211+42]..[815,35211+45])
                                                      Ppat_var "id'" (middle_end/flambda/inline_and_simplify.ml[815,35211+42]..[815,35211+45])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[815,35211+49]..[815,35211+57])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/inline_and_simplify.ml[815,35211+49]..[815,35211+52])
                                                          Pexp_ident "id'" (middle_end/flambda/inline_and_simplify.ml[815,35211+49]..[815,35211+52])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[815,35211+54]..[815,35211+57])
                                                          Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[815,35211+54]..[815,35211+57])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[816,35270+6]..[816,35270+10])
                                                  Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[816,35270+6]..[816,35270+10])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[816,35270+11]..[816,35270+27])
                                                  Pexp_ident "freshened_params" (middle_end/flambda/inline_and_simplify.ml[816,35270+11]..[816,35270+27])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[818,35303+2]..[845,36101+32])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[818,35303+6]..[818,35303+38])
                                              Ppat_var "wrapper_accepting_remaining_args" (middle_end/flambda/inline_and_simplify.ml[818,35303+6]..[818,35303+38])
                                            expression (middle_end/flambda/inline_and_simplify.ml[819,35344+4]..[837,35866+16])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[819,35344+8]..[819,35344+24]) ghost
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[819,35344+8]..[819,35344+12])
                                                      Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[819,35344+8]..[819,35344+12])
                                                    core_type (middle_end/flambda/inline_and_simplify.ml[819,35344+15]..[819,35344+24]) ghost
                                                      Ptyp_poly
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[819,35344+15]..[819,35344+24])
                                                        Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[819,35344+15]..[819,35344+24])
                                                        []
                                                  expression (middle_end/flambda/inline_and_simplify.ml[819,35344+8]..[827,35608+7])
                                                    Pexp_constraint
                                                    expression (middle_end/flambda/inline_and_simplify.ml[820,35371+6]..[827,35608+7])
                                                      Pexp_construct "Apply" (middle_end/flambda/inline_and_simplify.ml[820,35371+6]..[820,35371+11])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[820,35371+12]..[827,35608+7])
                                                          Pexp_record
                                                          [
                                                            "func" (middle_end/flambda/inline_and_simplify.ml[821,35385+8]..[821,35385+12])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[821,35385+15]..[821,35385+33])
                                                                Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[821,35385+15]..[821,35385+33])
                                                            "args" (middle_end/flambda/inline_and_simplify.ml[822,35420+8]..[822,35420+12])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[822,35420+15]..[822,35420+51])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[822,35420+15]..[822,35420+34])
                                                                  Pexp_ident "Parameter.List.vars" (middle_end/flambda/inline_and_simplify.ml[822,35420+15]..[822,35420+34])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[822,35420+35]..[822,35420+51])
                                                                      Pexp_ident "freshened_params" (middle_end/flambda/inline_and_simplify.ml[822,35420+35]..[822,35420+51])
                                                                ]
                                                            "kind" (middle_end/flambda/inline_and_simplify.ml[823,35473+8]..[823,35473+12])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[823,35473+15]..[823,35473+46])
                                                                Pexp_construct "Direct" (middle_end/flambda/inline_and_simplify.ml[823,35473+15]..[823,35473+21])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[823,35473+22]..[823,35473+46])
                                                                    Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[823,35473+22]..[823,35473+46])
                                                            "dbg" (middle_end/flambda/inline_and_simplify.ml[824,35521+8]..[824,35521+11]) ghost
                                                              expression (middle_end/flambda/inline_and_simplify.ml[824,35521+8]..[824,35521+11])
                                                                Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[824,35521+8]..[824,35521+11])
                                                            "inline" (middle_end/flambda/inline_and_simplify.ml[825,35534+8]..[825,35534+14])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[825,35534+17]..[825,35534+31])
                                                                Pexp_construct "Default_inline" (middle_end/flambda/inline_and_simplify.ml[825,35534+17]..[825,35534+31])
                                                                None
                                                            "specialise" (middle_end/flambda/inline_and_simplify.ml[826,35567+8]..[826,35567+18])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[826,35567+21]..[826,35567+39])
                                                                Pexp_construct "Default_specialise" (middle_end/flambda/inline_and_simplify.ml[826,35567+21]..[826,35567+39])
                                                                None
                                                          ]
                                                          None
                                                    core_type (middle_end/flambda/inline_and_simplify.ml[819,35344+15]..[819,35344+24])
                                                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[819,35344+15]..[819,35344+24])
                                                      []
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[829,35623+4]..[837,35866+16])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[829,35623+8]..[829,35623+24])
                                                      Ppat_var "closure_variable" (middle_end/flambda/inline_and_simplify.ml[829,35623+8]..[829,35623+24])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[830,35650+6]..[831,35672+52])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[830,35650+6]..[830,35650+21])
                                                        Pexp_ident "Variable.rename" (middle_end/flambda/inline_and_simplify.ml[830,35650+6]..[830,35650+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[831,35672+8]..[831,35672+52])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[831,35672+9]..[831,35672+26])
                                                              Pexp_ident "Closure_id.unwrap" (middle_end/flambda/inline_and_simplify.ml[831,35672+9]..[831,35672+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[831,35672+27]..[831,35672+51])
                                                                  Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[831,35672+27]..[831,35672+51])
                                                            ]
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[833,35732+4]..[837,35866+16])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[833,35732+4]..[833,35732+42])
                                                    Pexp_ident "Flambda_utils.make_closure_declaration" (middle_end/flambda/inline_and_simplify.ml[833,35732+4]..[833,35732+42])
                                                  [
                                                    <arg>
                                                    Labelled "id"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[833,35732+47]..[833,35732+63])
                                                        Pexp_ident "closure_variable" (middle_end/flambda/inline_and_simplify.ml[833,35732+47]..[833,35732+63])
                                                    <arg>
                                                    Labelled "is_classic_mode"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[834,35796+23]..[834,35796+28])
                                                        Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[834,35796+23]..[834,35796+28])
                                                        None
                                                    <arg>
                                                    Labelled "body"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[835,35825+7]..[835,35825+11])
                                                        Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[835,35825+7]..[835,35825+11])
                                                    <arg>
                                                    Labelled "params"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[836,35837+14]..[836,35837+28])
                                                        Pexp_ident "remaining_args" (middle_end/flambda/inline_and_simplify.ml[836,35837+14]..[836,35837+28])
                                                    <arg>
                                                    Labelled "stub"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[837,35866+12]..[837,35866+16])
                                                        Pexp_construct "true" (middle_end/flambda/inline_and_simplify.ml[837,35866+12]..[837,35866+16])
                                                        None
                                                  ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[839,35888+2]..[845,36101+32])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[839,35888+6]..[839,35888+21])
                                                Ppat_var "with_known_args" (middle_end/flambda/inline_and_simplify.ml[839,35888+6]..[839,35888+21])
                                              expression (middle_end/flambda/inline_and_simplify.ml[840,35912+4]..[843,36051+44])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[840,35912+4]..[840,35912+22])
                                                  Pexp_ident "Flambda_utils.bind" (middle_end/flambda/inline_and_simplify.ml[840,35912+4]..[840,35912+22])
                                                [
                                                  <arg>
                                                  Labelled "bindings"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[841,35935+16]..[842,35982+68])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[841,35935+17]..[841,35935+25])
                                                        Pexp_ident "List.map" (middle_end/flambda/inline_and_simplify.ml[841,35935+17]..[841,35935+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[841,35935+26]..[842,35982+54])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[841,35935+31]..[841,35935+43])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[841,35935+32]..[841,35935+37])
                                                                  Ppat_var "param" (middle_end/flambda/inline_and_simplify.ml[841,35935+32]..[841,35935+37])
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[841,35935+39]..[841,35935+42])
                                                                  Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[841,35935+39]..[841,35935+42])
                                                              ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[842,35982+10]..[842,35982+53])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/inline_and_simplify.ml[842,35982+10]..[842,35982+29])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[842,35982+10]..[842,35982+23])
                                                                    Pexp_ident "Parameter.var" (middle_end/flambda/inline_and_simplify.ml[842,35982+10]..[842,35982+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[842,35982+24]..[842,35982+29])
Pexp_ident "param" (middle_end/flambda/inline_and_simplify.ml[842,35982+24]..[842,35982+29])
                                                                  ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[842,35982+31]..[842,35982+53])
                                                                  Pexp_construct "Flambda.Expr" (middle_end/flambda/inline_and_simplify.ml[842,35982+31]..[842,35982+43])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[842,35982+44]..[842,35982+53])
                                                                      Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[842,35982+45]..[842,35982+48])
                                                                      Some
expression (middle_end/flambda/inline_and_simplify.ml[842,35982+49]..[842,35982+52])
  Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[842,35982+49]..[842,35982+52])
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[842,35982+55]..[842,35982+67])
                                                            Pexp_ident "applied_args" (middle_end/flambda/inline_and_simplify.ml[842,35982+55]..[842,35982+67])
                                                      ]
                                                  <arg>
                                                  Labelled "body"
                                                    expression (middle_end/flambda/inline_and_simplify.ml[843,36051+12]..[843,36051+44])
                                                      Pexp_ident "wrapper_accepting_remaining_args" (middle_end/flambda/inline_and_simplify.ml[843,36051+12]..[843,36051+44])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[845,36101+2]..[845,36101+32])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[845,36101+2]..[845,36101+10])
                                              Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[845,36101+2]..[845,36101+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[845,36101+11]..[845,36101+14])
                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[845,36101+11]..[845,36101+14])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[845,36101+15]..[845,36101+16])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[845,36101+15]..[845,36101+16])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[845,36101+17]..[845,36101+32])
                                                  Pexp_ident "with_known_args" (middle_end/flambda/inline_and_simplify.ml[845,36101+17]..[845,36101+32])
                                            ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+4]..[847,36135+29])
          Ppat_var "simplify_over_application" (middle_end/flambda/inline_and_simplify.ml[847,36135+4]..[847,36135+29])
        expression (middle_end/flambda/inline_and_simplify.ml[847,36135+30]..[872,37284+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+30]..[847,36135+33])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[847,36135+30]..[847,36135+33])
          expression (middle_end/flambda/inline_and_simplify.ml[847,36135+34]..[872,37284+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+34]..[847,36135+35])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[847,36135+34]..[847,36135+35])
            expression (middle_end/flambda/inline_and_simplify.ml[847,36135+36]..[872,37284+42]) ghost
              Pexp_fun
              Labelled "args"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+37]..[847,36135+41])
                Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[847,36135+37]..[847,36135+41])
              expression (middle_end/flambda/inline_and_simplify.ml[847,36135+42]..[872,37284+42]) ghost
                Pexp_fun
                Labelled "args_approxs"
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+43]..[847,36135+55])
                  Ppat_var "args_approxs" (middle_end/flambda/inline_and_simplify.ml[847,36135+43]..[847,36135+55])
                expression (middle_end/flambda/inline_and_simplify.ml[847,36135+56]..[872,37284+42]) ghost
                  Pexp_fun
                  Labelled "function_decls"
                  None
                  pattern (middle_end/flambda/inline_and_simplify.ml[847,36135+57]..[847,36135+71])
                    Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[847,36135+57]..[847,36135+71])
                  expression (middle_end/flambda/inline_and_simplify.ml[848,36207+6]..[872,37284+42]) ghost
                    Pexp_fun
                    Labelled "lhs_of_application"
                    None
                    pattern (middle_end/flambda/inline_and_simplify.ml[848,36207+7]..[848,36207+25])
                      Ppat_var "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[848,36207+7]..[848,36207+25])
                    expression (middle_end/flambda/inline_and_simplify.ml[848,36207+26]..[872,37284+42]) ghost
                      Pexp_fun
                      Labelled "closure_id_being_applied"
                      None
                      pattern (middle_end/flambda/inline_and_simplify.ml[848,36207+27]..[848,36207+51])
                        Ppat_var "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[848,36207+27]..[848,36207+51])
                      expression (middle_end/flambda/inline_and_simplify.ml[848,36207+52]..[872,37284+42]) ghost
                        Pexp_fun
                        Labelled "function_decl"
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[848,36207+53]..[848,36207+66])
                          Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[848,36207+53]..[848,36207+66])
                        expression (middle_end/flambda/inline_and_simplify.ml[849,36274+6]..[872,37284+42]) ghost
                          Pexp_fun
                          Labelled "value_set_of_closures"
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[849,36274+7]..[849,36274+28])
                            Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[849,36274+7]..[849,36274+28])
                          expression (middle_end/flambda/inline_and_simplify.ml[849,36274+29]..[872,37284+42]) ghost
                            Pexp_fun
                            Labelled "dbg"
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[849,36274+30]..[849,36274+33])
                              Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[849,36274+30]..[849,36274+33])
                            expression (middle_end/flambda/inline_and_simplify.ml[849,36274+34]..[872,37284+42]) ghost
                              Pexp_fun
                              Labelled "inline_requested"
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[849,36274+35]..[849,36274+51])
                                Ppat_var "inline_requested" (middle_end/flambda/inline_and_simplify.ml[849,36274+35]..[849,36274+51])
                              expression (middle_end/flambda/inline_and_simplify.ml[849,36274+52]..[872,37284+42]) ghost
                                Pexp_fun
                                Labelled "specialise_requested"
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[849,36274+53]..[849,36274+73])
                                  Ppat_var "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[849,36274+53]..[849,36274+73])
                                expression (middle_end/flambda/inline_and_simplify.ml[850,36350+2]..[872,37284+42])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[850,36350+6]..[850,36350+11])
                                        Ppat_var "arity" (middle_end/flambda/inline_and_simplify.ml[850,36350+6]..[850,36350+11])
                                      expression (middle_end/flambda/inline_and_simplify.ml[850,36350+14]..[850,36350+44])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[850,36350+14]..[850,36350+30])
                                          Pexp_ident "A.function_arity" (middle_end/flambda/inline_and_simplify.ml[850,36350+14]..[850,36350+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[850,36350+31]..[850,36350+44])
                                              Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[850,36350+31]..[850,36350+44])
                                        ]
                                  ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[851,36398+2]..[872,37284+42])
                                    Pexp_sequence
                                    expression (middle_end/flambda/inline_and_simplify.ml[851,36398+2]..[851,36398+35])
                                      Pexp_assert
                                      expression (middle_end/flambda/inline_and_simplify.ml[851,36398+9]..[851,36398+35])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[851,36398+16]..[851,36398+17])
                                          Pexp_ident "<" (middle_end/flambda/inline_and_simplify.ml[851,36398+16]..[851,36398+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[851,36398+10]..[851,36398+15])
                                              Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[851,36398+10]..[851,36398+15])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[851,36398+18]..[851,36398+34])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[851,36398+18]..[851,36398+29])
                                                Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[851,36398+18]..[851,36398+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[851,36398+30]..[851,36398+34])
                                                    Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[851,36398+30]..[851,36398+34])
                                              ]
                                        ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[852,36435+2]..[872,37284+42])
                                      Pexp_sequence
                                      expression (middle_end/flambda/inline_and_simplify.ml[852,36435+2]..[852,36435+54])
                                        Pexp_assert
                                        expression (middle_end/flambda/inline_and_simplify.ml[852,36435+9]..[852,36435+54])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[852,36435+27]..[852,36435+28])
                                            Pexp_ident "=" (middle_end/flambda/inline_and_simplify.ml[852,36435+27]..[852,36435+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[852,36435+10]..[852,36435+26])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[852,36435+10]..[852,36435+21])
                                                  Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[852,36435+10]..[852,36435+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[852,36435+22]..[852,36435+26])
                                                      Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[852,36435+22]..[852,36435+26])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[852,36435+29]..[852,36435+53])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[852,36435+29]..[852,36435+40])
                                                  Pexp_ident "List.length" (middle_end/flambda/inline_and_simplify.ml[852,36435+29]..[852,36435+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[852,36435+41]..[852,36435+53])
                                                      Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[852,36435+41]..[852,36435+53])
                                                ]
                                          ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[853,36491+2]..[872,37284+42])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[853,36491+6]..[853,36491+35])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[853,36491+6]..[853,36491+19])
                                                  Ppat_var "full_app_args" (middle_end/flambda/inline_and_simplify.ml[853,36491+6]..[853,36491+19])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[853,36491+21]..[853,36491+35])
                                                  Ppat_var "remaining_args" (middle_end/flambda/inline_and_simplify.ml[853,36491+21]..[853,36491+35])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[854,36529+4]..[854,36529+40])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[854,36529+4]..[854,36529+29])
                                                Pexp_ident "Misc.Stdlib.List.split_at" (middle_end/flambda/inline_and_simplify.ml[854,36529+4]..[854,36529+29])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[854,36529+30]..[854,36529+35])
                                                    Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[854,36529+30]..[854,36529+35])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[854,36529+36]..[854,36529+40])
                                                    Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[854,36529+36]..[854,36529+40])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[856,36575+2]..[872,37284+42])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[856,36575+6]..[856,36575+25])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[856,36575+6]..[856,36575+22])
                                                    Ppat_var "full_app_approxs" (middle_end/flambda/inline_and_simplify.ml[856,36575+6]..[856,36575+22])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[856,36575+24]..[856,36575+25])
                                                    Ppat_any
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[857,36603+4]..[857,36603+48])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[857,36603+4]..[857,36603+29])
                                                  Pexp_ident "Misc.Stdlib.List.split_at" (middle_end/flambda/inline_and_simplify.ml[857,36603+4]..[857,36603+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[857,36603+30]..[857,36603+35])
                                                      Pexp_ident "arity" (middle_end/flambda/inline_and_simplify.ml[857,36603+30]..[857,36603+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[857,36603+36]..[857,36603+48])
                                                      Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[857,36603+36]..[857,36603+48])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[859,36657+2]..[872,37284+42])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[859,36657+6]..[859,36657+13])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[859,36657+6]..[859,36657+10])
                                                      Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[859,36657+6]..[859,36657+10])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[859,36657+12]..[859,36657+13])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[859,36657+12]..[859,36657+13])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[860,36673+4]..[863,36877+45])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[860,36673+4]..[860,36673+29])
                                                    Pexp_ident "simplify_full_application" (middle_end/flambda/inline_and_simplify.ml[860,36673+4]..[860,36673+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[860,36673+30]..[860,36673+33])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[860,36673+30]..[860,36673+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[860,36673+34]..[860,36673+35])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[860,36673+34]..[860,36673+35])
                                                    <arg>
                                                    Labelled "function_decls"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[860,36673+37]..[860,36673+51])
                                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[860,36673+37]..[860,36673+51])
                                                    <arg>
                                                    Labelled "lhs_of_application"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[860,36673+53]..[860,36673+71])
                                                        Pexp_ident "lhs_of_application" (middle_end/flambda/inline_and_simplify.ml[860,36673+53]..[860,36673+71])
                                                    <arg>
                                                    Labelled "closure_id_being_applied"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[861,36745+7]..[861,36745+31])
                                                        Pexp_ident "closure_id_being_applied" (middle_end/flambda/inline_and_simplify.ml[861,36745+7]..[861,36745+31])
                                                    <arg>
                                                    Labelled "function_decl"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[861,36745+33]..[861,36745+46])
                                                        Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[861,36745+33]..[861,36745+46])
                                                    <arg>
                                                    Labelled "value_set_of_closures"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[861,36745+48]..[861,36745+69])
                                                        Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[861,36745+48]..[861,36745+69])
                                                    <arg>
                                                    Labelled "args"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[862,36815+12]..[862,36815+25])
                                                        Pexp_ident "full_app_args" (middle_end/flambda/inline_and_simplify.ml[862,36815+12]..[862,36815+25])
                                                    <arg>
                                                    Labelled "args_approxs"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[862,36815+40]..[862,36815+56])
                                                        Pexp_ident "full_app_approxs" (middle_end/flambda/inline_and_simplify.ml[862,36815+40]..[862,36815+56])
                                                    <arg>
                                                    Labelled "dbg"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[862,36815+58]..[862,36815+61])
                                                        Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[862,36815+58]..[862,36815+61])
                                                    <arg>
                                                    Labelled "inline_requested"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[863,36877+7]..[863,36877+23])
                                                        Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[863,36877+7]..[863,36877+23])
                                                    <arg>
                                                    Labelled "specialise_requested"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[863,36877+25]..[863,36877+45])
                                                        Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[863,36877+25]..[863,36877+45])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[865,36928+2]..[872,37284+42])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[865,36928+6]..[865,36928+14])
                                                    Ppat_var "func_var" (middle_end/flambda/inline_and_simplify.ml[865,36928+6]..[865,36928+14])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[865,36928+17]..[865,36928+67])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[865,36928+17]..[865,36928+32])
                                                      Pexp_ident "Variable.create" (middle_end/flambda/inline_and_simplify.ml[865,36928+17]..[865,36928+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[865,36928+33]..[865,36928+67])
                                                          Pexp_ident "Internal_variable_names.full_apply" (middle_end/flambda/inline_and_simplify.ml[865,36928+33]..[865,36928+67])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[866,36999+2]..[872,37284+42])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[866,36999+6]..[866,36999+22]) ghost
                                                      Ppat_constraint
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[866,36999+6]..[866,36999+10])
                                                        Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[866,36999+6]..[866,36999+10])
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[866,36999+13]..[866,36999+22]) ghost
                                                        Ptyp_poly
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[866,36999+13]..[866,36999+22])
                                                          Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[866,36999+13]..[866,36999+22])
                                                          []
                                                    expression (middle_end/flambda/inline_and_simplify.ml[866,36999+6]..[869,37145+72])
                                                      Pexp_constraint
                                                      expression (middle_end/flambda/inline_and_simplify.ml[867,37024+4]..[869,37145+72])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[867,37024+4]..[867,37024+22])
                                                          Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[867,37024+4]..[867,37024+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[867,37024+23]..[867,37024+31])
                                                              Pexp_ident "func_var" (middle_end/flambda/inline_and_simplify.ml[867,37024+23]..[867,37024+31])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[867,37024+32]..[867,37024+43])
                                                              Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[867,37024+33]..[867,37024+37])
                                                              Some
                                                                expression (middle_end/flambda/inline_and_simplify.ml[867,37024+38]..[867,37024+42])
                                                                  Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[867,37024+38]..[867,37024+42])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[868,37068+6]..[869,37145+72])
                                                              Pexp_construct "Apply" (middle_end/flambda/inline_and_simplify.ml[868,37068+7]..[868,37068+12])
                                                              Some
                                                                expression (middle_end/flambda/inline_and_simplify.ml[868,37068+13]..[869,37145+71])
                                                                  Pexp_record
                                                                  [
                                                                    "func" (middle_end/flambda/inline_and_simplify.ml[868,37068+15]..[868,37068+19])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[868,37068+22]..[868,37068+30])
Pexp_ident "func_var" (middle_end/flambda/inline_and_simplify.ml[868,37068+22]..[868,37068+30])
                                                                    "args" (middle_end/flambda/inline_and_simplify.ml[868,37068+32]..[868,37068+36])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[868,37068+39]..[868,37068+53])
Pexp_ident "remaining_args" (middle_end/flambda/inline_and_simplify.ml[868,37068+39]..[868,37068+53])
                                                                    "kind" (middle_end/flambda/inline_and_simplify.ml[868,37068+55]..[868,37068+59])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[868,37068+62]..[868,37068+70])
Pexp_construct "Indirect" (middle_end/flambda/inline_and_simplify.ml[868,37068+62]..[868,37068+70])
None
                                                                    "dbg" (middle_end/flambda/inline_and_simplify.ml[868,37068+72]..[868,37068+75]) ghost
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[868,37068+72]..[868,37068+75])
Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[868,37068+72]..[868,37068+75])
                                                                    "inline" (middle_end/flambda/inline_and_simplify.ml[869,37145+8]..[869,37145+14])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[869,37145+17]..[869,37145+33])
Pexp_ident "inline_requested" (middle_end/flambda/inline_and_simplify.ml[869,37145+17]..[869,37145+33])
                                                                    "specialise" (middle_end/flambda/inline_and_simplify.ml[869,37145+35]..[869,37145+45])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[869,37145+48]..[869,37145+68])
Pexp_ident "specialise_requested" (middle_end/flambda/inline_and_simplify.ml[869,37145+48]..[869,37145+68])
                                                                  ]
                                                                  None
                                                        ]
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[866,36999+13]..[866,36999+22])
                                                        Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[866,36999+13]..[866,36999+22])
                                                        []
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[871,37223+2]..[872,37284+42])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[871,37223+6]..[871,37223+10])
                                                        Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[871,37223+6]..[871,37223+10])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[871,37223+13]..[871,37223+57])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[871,37223+13]..[871,37223+37])
                                                          Pexp_ident "Lift_code.lift_lets_expr" (middle_end/flambda/inline_and_simplify.ml[871,37223+13]..[871,37223+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[871,37223+38]..[871,37223+42])
                                                              Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[871,37223+38]..[871,37223+42])
                                                          <arg>
                                                          Labelled "toplevel"
                                                            expression (middle_end/flambda/inline_and_simplify.ml[871,37223+53]..[871,37223+57])
                                                              Pexp_construct "true" (middle_end/flambda/inline_and_simplify.ml[871,37223+53]..[871,37223+57])
                                                              None
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[872,37284+2]..[872,37284+42])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[872,37284+2]..[872,37284+10])
                                                      Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[872,37284+2]..[872,37284+10])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[872,37284+11]..[872,37284+35])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[872,37284+12]..[872,37284+30])
                                                            Pexp_ident "E.set_never_inline" (middle_end/flambda/inline_and_simplify.ml[872,37284+12]..[872,37284+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[872,37284+31]..[872,37284+34])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[872,37284+31]..[872,37284+34])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[872,37284+36]..[872,37284+37])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[872,37284+36]..[872,37284+37])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[872,37284+38]..[872,37284+42])
                                                          Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[872,37284+38]..[872,37284+42])
                                                    ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[874,37328+4]..[874,37328+18])
          Ppat_var "simplify_named" (middle_end/flambda/inline_and_simplify.ml[874,37328+4]..[874,37328+18])
        expression (middle_end/flambda/inline_and_simplify.ml[874,37328+19]..[1082,46876+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[874,37328+19]..[874,37328+22])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[874,37328+19]..[874,37328+22])
          expression (middle_end/flambda/inline_and_simplify.ml[874,37328+23]..[1082,46876+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[874,37328+23]..[874,37328+24])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[874,37328+23]..[874,37328+24])
            expression (middle_end/flambda/inline_and_simplify.ml[874,37328+25]..[1082,46876+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[874,37328+25]..[874,37328+47])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[874,37328+26]..[874,37328+30])
                  Ppat_var "tree" (middle_end/flambda/inline_and_simplify.ml[874,37328+26]..[874,37328+30])
                core_type (middle_end/flambda/inline_and_simplify.ml[874,37328+33]..[874,37328+46])
                  Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[874,37328+33]..[874,37328+46])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[874,37328+48]..[1082,46876+16])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[875,37400+2]..[1082,46876+16])
                  Pexp_match
                  expression (middle_end/flambda/inline_and_simplify.ml[875,37400+8]..[875,37400+12])
                    Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[875,37400+8]..[875,37400+12])
                  [
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[876,37418+4]..[876,37418+14])
                        Ppat_construct "Symbol" (middle_end/flambda/inline_and_simplify.ml[876,37418+4]..[876,37418+10])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[876,37418+11]..[876,37418+14])
                            Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[876,37418+11]..[876,37418+14])
                      expression (middle_end/flambda/inline_and_simplify.ml[880,37639+4]..[881,37689+45])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[880,37639+8]..[880,37639+14])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[880,37639+8]..[880,37639+14])
                            expression (middle_end/flambda/inline_and_simplify.ml[880,37639+17]..[880,37639+46])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[880,37639+17]..[880,37639+38])
                                Pexp_ident "E.find_or_load_symbol" (middle_end/flambda/inline_and_simplify.ml[880,37639+17]..[880,37639+38])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[880,37639+39]..[880,37639+42])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[880,37639+39]..[880,37639+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[880,37639+43]..[880,37639+46])
                                    Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[880,37639+43]..[880,37639+46])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[881,37689+4]..[881,37689+45])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[881,37689+4]..[881,37689+31])
                            Pexp_ident "simplify_named_using_approx" (middle_end/flambda/inline_and_simplify.ml[881,37689+4]..[881,37689+31])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[881,37689+32]..[881,37689+33])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[881,37689+32]..[881,37689+33])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[881,37689+34]..[881,37689+38])
                                Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[881,37689+34]..[881,37689+38])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[881,37689+39]..[881,37689+45])
                                Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[881,37689+39]..[881,37689+45])
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[882,37735+4]..[882,37735+13])
                        Ppat_construct "Const" (middle_end/flambda/inline_and_simplify.ml[882,37735+4]..[882,37735+9])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[882,37735+10]..[882,37735+13])
                            Ppat_var "cst" (middle_end/flambda/inline_and_simplify.ml[882,37735+10]..[882,37735+13])
                      expression (middle_end/flambda/inline_and_simplify.ml[882,37735+17]..[882,37735+49])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inline_and_simplify.ml[882,37735+17]..[882,37735+21])
                            Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[882,37735+17]..[882,37735+21])
                          expression (middle_end/flambda/inline_and_simplify.ml[882,37735+23]..[882,37735+49])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[882,37735+23]..[882,37735+26])
                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[882,37735+23]..[882,37735+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[882,37735+27]..[882,37735+28])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[882,37735+27]..[882,37735+28])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[882,37735+29]..[882,37735+49])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[882,37735+30]..[882,37735+44])
                                    Pexp_ident "simplify_const" (middle_end/flambda/inline_and_simplify.ml[882,37735+30]..[882,37735+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[882,37735+45]..[882,37735+48])
                                        Pexp_ident "cst" (middle_end/flambda/inline_and_simplify.ml[882,37735+45]..[882,37735+48])
                                  ]
                            ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[883,37785+4]..[883,37785+23])
                        Ppat_construct "Allocated_const" (middle_end/flambda/inline_and_simplify.ml[883,37785+4]..[883,37785+19])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[883,37785+20]..[883,37785+23])
                            Ppat_var "cst" (middle_end/flambda/inline_and_simplify.ml[883,37785+20]..[883,37785+23])
                      expression (middle_end/flambda/inline_and_simplify.ml[883,37785+27]..[883,37785+71])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inline_and_simplify.ml[883,37785+27]..[883,37785+31])
                            Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[883,37785+27]..[883,37785+31])
                          expression (middle_end/flambda/inline_and_simplify.ml[883,37785+33]..[883,37785+71])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[883,37785+33]..[883,37785+36])
                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[883,37785+33]..[883,37785+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[883,37785+37]..[883,37785+38])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[883,37785+37]..[883,37785+38])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[883,37785+39]..[883,37785+71])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[883,37785+40]..[883,37785+66])
                                    Pexp_ident "approx_for_allocated_const" (middle_end/flambda/inline_and_simplify.ml[883,37785+40]..[883,37785+66])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[883,37785+67]..[883,37785+70])
                                        Pexp_ident "cst" (middle_end/flambda/inline_and_simplify.ml[883,37785+67]..[883,37785+70])
                                  ]
                            ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[884,37857+4]..[884,37857+24])
                        Ppat_construct "Read_mutable" (middle_end/flambda/inline_and_simplify.ml[884,37857+4]..[884,37857+16])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[884,37857+17]..[884,37857+24])
                            Ppat_var "mut_var" (middle_end/flambda/inline_and_simplify.ml[884,37857+17]..[884,37857+24])
                      expression (middle_end/flambda/inline_and_simplify.ml[886,37929+4]..[889,38021+55])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[886,37929+8]..[886,37929+15])
                              Ppat_var "mut_var" (middle_end/flambda/inline_and_simplify.ml[886,37929+8]..[886,37929+15])
                            expression (middle_end/flambda/inline_and_simplify.ml[887,37947+6]..[887,37947+66])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[887,37947+6]..[887,37947+39])
                                Pexp_ident "Freshening.apply_mutable_variable" (middle_end/flambda/inline_and_simplify.ml[887,37947+6]..[887,37947+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[887,37947+40]..[887,37947+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[887,37947+41]..[887,37947+53])
                                      Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[887,37947+41]..[887,37947+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[887,37947+54]..[887,37947+57])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[887,37947+54]..[887,37947+57])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[887,37947+59]..[887,37947+66])
                                    Pexp_ident "mut_var" (middle_end/flambda/inline_and_simplify.ml[887,37947+59]..[887,37947+66])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[889,38021+4]..[889,38021+55])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/inline_and_simplify.ml[889,38021+4]..[889,38021+24])
                              Pexp_construct "Read_mutable" (middle_end/flambda/inline_and_simplify.ml[889,38021+4]..[889,38021+16])
                              Some
                                expression (middle_end/flambda/inline_and_simplify.ml[889,38021+17]..[889,38021+24])
                                  Pexp_ident "mut_var" (middle_end/flambda/inline_and_simplify.ml[889,38021+17]..[889,38021+24])
                            expression (middle_end/flambda/inline_and_simplify.ml[889,38021+26]..[889,38021+55])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[889,38021+26]..[889,38021+29])
                                Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[889,38021+26]..[889,38021+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[889,38021+30]..[889,38021+31])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[889,38021+30]..[889,38021+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[889,38021+32]..[889,38021+55])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[889,38021+33]..[889,38021+48])
                                      Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[889,38021+33]..[889,38021+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[889,38021+49]..[889,38021+54])
                                          Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[889,38021+49]..[889,38021+54])
                                          None
                                    ]
                              ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[890,38077+4]..[890,38077+43])
                        Ppat_construct "Read_symbol_field" (middle_end/flambda/inline_and_simplify.ml[890,38077+4]..[890,38077+21])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[890,38077+22]..[890,38077+43])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[890,38077+23]..[890,38077+29])
                                Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[890,38077+23]..[890,38077+29])
                              pattern (middle_end/flambda/inline_and_simplify.ml[890,38077+31]..[890,38077+42])
                                Ppat_var "field_index" (middle_end/flambda/inline_and_simplify.ml[890,38077+31]..[890,38077+42])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[891,38124+4]..[898,38521+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[891,38124+8]..[891,38124+14])
                              Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[891,38124+8]..[891,38124+14])
                            expression (middle_end/flambda/inline_and_simplify.ml[891,38124+17]..[891,38124+49])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[891,38124+17]..[891,38124+38])
                                Pexp_ident "E.find_or_load_symbol" (middle_end/flambda/inline_and_simplify.ml[891,38124+17]..[891,38124+38])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[891,38124+39]..[891,38124+42])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[891,38124+39]..[891,38124+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[891,38124+43]..[891,38124+49])
                                    Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[891,38124+43]..[891,38124+49])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[892,38177+4]..[898,38521+7])
                          Pexp_match
                          expression (middle_end/flambda/inline_and_simplify.ml[892,38177+16]..[892,38177+47])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[892,38177+16]..[892,38177+27])
                              Pexp_ident "A.get_field" (middle_end/flambda/inline_and_simplify.ml[892,38177+16]..[892,38177+27])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[892,38177+28]..[892,38177+34])
                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[892,38177+28]..[892,38177+34])
                              <arg>
                              Labelled "field_index"
                                expression (middle_end/flambda/inline_and_simplify.ml[892,38177+36]..[892,38177+47])
                                  Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[892,38177+36]..[892,38177+47])
                            ]
                          [
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[894,38308+6]..[894,38308+17])
                                Ppat_construct "Unreachable" (middle_end/flambda/inline_and_simplify.ml[894,38308+6]..[894,38308+17])
                                None
                              expression (middle_end/flambda/inline_and_simplify.ml[894,38308+21]..[894,38308+57])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[894,38308+21]..[894,38308+54])
                                    Pexp_construct "Flambda.Expr" (middle_end/flambda/inline_and_simplify.ml[894,38308+22]..[894,38308+34])
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[894,38308+35]..[894,38308+53])
                                        Pexp_construct "Proved_unreachable" (middle_end/flambda/inline_and_simplify.ml[894,38308+35]..[894,38308+53])
                                        None
                                  expression (middle_end/flambda/inline_and_simplify.ml[894,38308+56]..[894,38308+57])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[894,38308+56]..[894,38308+57])
                                ]
                            <case>
                              pattern (middle_end/flambda/inline_and_simplify.ml[895,38366+6]..[895,38366+15])
                                Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[895,38366+6]..[895,38366+8])
                                Some
                                  []
                                  pattern (middle_end/flambda/inline_and_simplify.ml[895,38366+9]..[895,38366+15])
                                    Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[895,38366+9]..[895,38366+15])
                              expression (middle_end/flambda/inline_and_simplify.ml[896,38385+6]..[897,38461+59])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[896,38385+10]..[896,38385+16])
                                      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[896,38385+10]..[896,38385+16])
                                    expression (middle_end/flambda/inline_and_simplify.ml[896,38385+19]..[896,38385+72])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[896,38385+19]..[896,38385+46])
                                        Pexp_ident "A.augment_with_symbol_field" (middle_end/flambda/inline_and_simplify.ml[896,38385+19]..[896,38385+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[896,38385+47]..[896,38385+53])
                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[896,38385+47]..[896,38385+53])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[896,38385+54]..[896,38385+60])
                                            Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[896,38385+54]..[896,38385+60])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[896,38385+61]..[896,38385+72])
                                            Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[896,38385+61]..[896,38385+72])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[897,38461+6]..[897,38461+59])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[897,38461+6]..[897,38461+41])
                                    Pexp_ident "simplify_named_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[897,38461+6]..[897,38461+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[897,38461+42]..[897,38461+45])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[897,38461+42]..[897,38461+45])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[897,38461+46]..[897,38461+47])
                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[897,38461+46]..[897,38461+47])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[897,38461+48]..[897,38461+52])
                                        Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[897,38461+48]..[897,38461+52])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[897,38461+53]..[897,38461+59])
                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[897,38461+53]..[897,38461+59])
                                  ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[899,38529+4]..[899,38529+35])
                        Ppat_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[899,38529+4]..[899,38529+19])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[899,38529+20]..[899,38529+35])
                            Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[899,38529+20]..[899,38529+35])
                      expression (middle_end/flambda/inline_and_simplify.ml[899,38529+39]..[982,42329+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[900,38574+8]..[900,38574+15])
                              Ppat_var "backend" (middle_end/flambda/inline_and_simplify.ml[900,38574+8]..[900,38574+15])
                            expression (middle_end/flambda/inline_and_simplify.ml[900,38574+18]..[900,38574+31])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[900,38574+18]..[900,38574+27])
                                Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[900,38574+18]..[900,38574+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[900,38574+28]..[900,38574+31])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[900,38574+28]..[900,38574+31])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[901,38609+4]..[981,42282+46])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[901,38609+8]..[901,38609+44])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[901,38609+8]..[901,38609+23])
                                    Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[901,38609+8]..[901,38609+23])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[901,38609+25]..[901,38609+26])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[901,38609+25]..[901,38609+26])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[901,38609+28]..[901,38609+44])
                                    Ppat_var "first_freshening" (middle_end/flambda/inline_and_simplify.ml[901,38609+28]..[901,38609+44])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[902,38656+6]..[902,38656+52])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[902,38656+6]..[902,38656+30])
                                  Pexp_ident "simplify_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[902,38656+6]..[902,38656+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[902,38656+31]..[902,38656+34])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[902,38656+31]..[902,38656+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[902,38656+35]..[902,38656+36])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[902,38656+35]..[902,38656+36])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[902,38656+37]..[902,38656+52])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[902,38656+37]..[902,38656+52])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[904,38716+4]..[981,42282+46])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[904,38716+8]..[904,38716+16])
                                  Ppat_var "simplify" (middle_end/flambda/inline_and_simplify.ml[904,38716+8]..[904,38716+16])
                                expression (middle_end/flambda/inline_and_simplify.ml[904,38716+17]..[932,40195+72]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[904,38716+17]..[904,38716+20])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[904,38716+17]..[904,38716+20])
                                  expression (middle_end/flambda/inline_and_simplify.ml[904,38716+21]..[932,40195+72]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[904,38716+21]..[904,38716+22])
                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[904,38716+21]..[904,38716+22])
                                    expression (middle_end/flambda/inline_and_simplify.ml[904,38716+23]..[932,40195+72]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inline_and_simplify.ml[904,38716+23]..[904,38716+27])
                                        Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[904,38716+23]..[904,38716+27])
                                      expression (middle_end/flambda/inline_and_simplify.ml[904,38716+28]..[932,40195+72]) ghost
                                        Pexp_fun
                                        Labelled "pass_name"
                                        None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[904,38716+29]..[904,38716+38])
                                          Ppat_var "pass_name" (middle_end/flambda/inline_and_simplify.ml[904,38716+29]..[904,38716+38])
                                        expression (middle_end/flambda/inline_and_simplify.ml[904,38716+39]..[932,40195+72])
                                          Pexp_constraint
                                          expression (middle_end/flambda/inline_and_simplify.ml[916,39502+6]..[932,40195+72])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[916,39502+10]..[916,39502+17])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[916,39502+10]..[916,39502+14])
                                                      Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[916,39502+10]..[916,39502+14])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[916,39502+16]..[916,39502+17])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[916,39502+16]..[916,39502+17])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[916,39502+20]..[916,39502+60])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[916,39502+20]..[916,39502+28])
                                                    Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[916,39502+20]..[916,39502+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[916,39502+29]..[916,39502+53])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[916,39502+30]..[916,39502+48])
                                                          Pexp_ident "E.set_never_inline" (middle_end/flambda/inline_and_simplify.ml[916,39502+30]..[916,39502+48])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[916,39502+49]..[916,39502+52])
                                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[916,39502+49]..[916,39502+52])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[916,39502+54]..[916,39502+55])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[916,39502+54]..[916,39502+55])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[916,39502+56]..[916,39502+60])
                                                        Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[916,39502+56]..[916,39502+60])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[917,39566+6]..[932,40195+72])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[917,39566+10]..[917,39566+16])
                                                    Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[917,39566+10]..[917,39566+16])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[917,39566+19]..[917,39566+29])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[917,39566+19]..[917,39566+27])
                                                      Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[917,39566+19]..[917,39566+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[917,39566+28]..[917,39566+29])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[917,39566+28]..[917,39566+29])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[918,39599+6]..[932,40195+72])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[918,39599+10]..[918,39599+31])
                                                      Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[918,39599+10]..[918,39599+31])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[919,39633+8]..[930,40162+23])
                                                      Pexp_match
                                                      expression (middle_end/flambda/inline_and_simplify.ml[919,39633+14]..[919,39633+62])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[919,39633+14]..[919,39633+55])
                                                          Pexp_ident "A.strict_check_approx_for_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[919,39633+14]..[919,39633+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[919,39633+56]..[919,39633+62])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[919,39633+56]..[919,39633+62])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[920,39701+10]..[920,39701+15])
                                                            Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[920,39701+10]..[920,39701+15])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[921,39720+10]..[923,39839+36])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[921,39720+10]..[921,39720+27])
                                                              Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[921,39720+10]..[921,39720+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[921,39720+28]..[922,39790+48])
                                                                  Pexp_constant PConst_string("Unexpected approximation returned from simplification of [%s] result: %a",(middle_end/flambda/inline_and_simplify.ml[921,39720+29]..[922,39790+47]),None)
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[923,39839+12]..[923,39839+21])
                                                                  Pexp_ident "pass_name" (middle_end/flambda/inline_and_simplify.ml[923,39839+12]..[923,39839+21])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[923,39839+22]..[923,39839+29])
                                                                  Pexp_ident "A.print" (middle_end/flambda/inline_and_simplify.ml[923,39839+22]..[923,39839+29])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[923,39839+30]..[923,39839+36])
                                                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[923,39839+30]..[923,39839+36])
                                                            ]
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[924,39876+10]..[924,39876+42])
                                                            Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[924,39876+10]..[924,39876+12])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[924,39876+13]..[924,39876+42])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[924,39876+14]..[924,39876+18])
                                                                    Ppat_var "_var" (middle_end/flambda/inline_and_simplify.ml[924,39876+14]..[924,39876+18])
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[924,39876+20]..[924,39876+41])
                                                                    Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[924,39876+20]..[924,39876+41])
                                                                ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[925,39922+10]..[930,40162+23])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[925,39922+14]..[925,39922+24])
                                                                  Ppat_var "freshening" (middle_end/flambda/inline_and_simplify.ml[925,39922+14]..[925,39922+24])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[926,39949+12]..[927,40018+53])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[926,39949+12]..[926,39949+42])
                                                                    Pexp_ident "Freshening.Project_var.compose" (middle_end/flambda/inline_and_simplify.ml[926,39949+12]..[926,39949+42])
                                                                  [
                                                                    <arg>
                                                                    Labelled "earlier"
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[926,39949+52]..[926,39949+68])
Pexp_ident "first_freshening" (middle_end/flambda/inline_and_simplify.ml[926,39949+52]..[926,39949+68])
                                                                    <arg>
                                                                    Labelled "later"
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[927,40018+21]..[927,40018+53])
Pexp_field
expression (middle_end/flambda/inline_and_simplify.ml[927,40018+21]..[927,40018+42])
  Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[927,40018+21]..[927,40018+42])
"freshening" (middle_end/flambda/inline_and_simplify.ml[927,40018+43]..[927,40018+53])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[929,40085+10]..[930,40162+23])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[929,40085+10]..[929,40085+54])
                                                                Pexp_ident "A.update_freshening_of_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[929,40085+10]..[929,40085+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[929,40085+55]..[929,40085+76])
                                                                    Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[929,40085+55]..[929,40085+76])
                                                                <arg>
                                                                Labelled "freshening"
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[930,40162+13]..[930,40162+23])
                                                                    Pexp_ident "freshening" (middle_end/flambda/inline_and_simplify.ml[930,40162+13]..[930,40162+23])
                                                              ]
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[932,40195+6]..[932,40195+72])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[932,40195+6]..[932,40195+15])
                                                      Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[932,40195+6]..[932,40195+10])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[932,40195+11]..[932,40195+15])
                                                          Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[932,40195+11]..[932,40195+15])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[932,40195+17]..[932,40195+72])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[932,40195+18]..[932,40195+21])
                                                        Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[932,40195+18]..[932,40195+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[932,40195+22]..[932,40195+23])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[932,40195+22]..[932,40195+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[932,40195+24]..[932,40195+71])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[932,40195+25]..[932,40195+48])
                                                              Pexp_ident "A.value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[932,40195+25]..[932,40195+48])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[932,40195+49]..[932,40195+70])
                                                                  Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[932,40195+49]..[932,40195+70])
                                                            ]
                                                      ]
                                                  ]
                                          core_type (middle_end/flambda/inline_and_simplify.ml[904,38716+41]..[904,38716+60])
                                            Ptyp_tuple
                                            [
                                              core_type (middle_end/flambda/inline_and_simplify.ml[904,38716+41]..[904,38716+54])
                                                Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[904,38716+41]..[904,38716+54])
                                                []
                                              core_type (middle_end/flambda/inline_and_simplify.ml[904,38716+57]..[904,38716+60])
                                                Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[904,38716+57]..[904,38716+60])
                                                []
                                            ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[938,40527+4]..[981,42282+46])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[938,40527+8]..[938,40527+23])
                                    Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[938,40527+8]..[938,40527+23])
                                  expression (middle_end/flambda/inline_and_simplify.ml[939,40553+6]..[942,40728+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[939,40553+10]..[939,40553+18])
                                          Ppat_var "ppf_dump" (middle_end/flambda/inline_and_simplify.ml[939,40553+10]..[939,40553+18])
                                        expression (middle_end/flambda/inline_and_simplify.ml[939,40553+21]..[939,40553+61])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[939,40553+21]..[939,40553+57])
                                            Pexp_ident "Inline_and_simplify_aux.Env.ppf_dump" (middle_end/flambda/inline_and_simplify.ml[939,40553+21]..[939,40553+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[939,40553+58]..[939,40553+61])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[939,40553+58]..[939,40553+61])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[940,40618+6]..[942,40728+47])
                                      Pexp_match
                                      expression (middle_end/flambda/inline_and_simplify.ml[940,40618+12]..[940,40618+72])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[940,40618+12]..[940,40618+46])
                                          Pexp_ident "Remove_free_vars_equal_to_args.run" (middle_end/flambda/inline_and_simplify.ml[940,40618+12]..[940,40618+46])
                                        [
                                          <arg>
                                          Labelled "ppf_dump"
                                            expression (middle_end/flambda/inline_and_simplify.ml[940,40618+48]..[940,40618+56])
                                              Pexp_ident "ppf_dump" (middle_end/flambda/inline_and_simplify.ml[940,40618+48]..[940,40618+56])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[940,40618+57]..[940,40618+72])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[940,40618+57]..[940,40618+72])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[941,40696+8]..[941,40696+12])
                                            Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[941,40696+8]..[941,40696+12])
                                            None
                                          expression (middle_end/flambda/inline_and_simplify.ml[941,40696+16]..[941,40696+31])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[941,40696+16]..[941,40696+31])
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[942,40728+8]..[942,40728+28])
                                            Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[942,40728+8]..[942,40728+12])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[942,40728+13]..[942,40728+28])
                                                Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[942,40728+13]..[942,40728+28])
                                          expression (middle_end/flambda/inline_and_simplify.ml[942,40728+32]..[942,40728+47])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[942,40728+32]..[942,40728+47])
                                      ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[947,40946+4]..[981,42282+46])
                                Pexp_match
                                expression (middle_end/flambda/inline_and_simplify.ml[948,40956+6]..[949,41006+44])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[948,40956+6]..[948,40956+44])
                                    Pexp_ident "Unbox_closures.rewrite_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[948,40956+6]..[948,40956+44])
                                  [
                                    <arg>
                                    Labelled "env"
                                      expression (middle_end/flambda/inline_and_simplify.ml[948,40956+46]..[948,40956+49])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[948,40956+46]..[948,40956+49])
                                    <arg>
                                    Labelled "duplicate_function"
                                      expression (middle_end/flambda/inline_and_simplify.ml[949,41006+9]..[949,41006+27])
                                        Pexp_ident "duplicate_function" (middle_end/flambda/inline_and_simplify.ml[949,41006+9]..[949,41006+27])
                                    <arg>
                                    Labelled "set_of_closures"
                                      expression (middle_end/flambda/inline_and_simplify.ml[949,41006+29]..[949,41006+44])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[949,41006+29]..[949,41006+44])
                                  ]
                                [
                                  <case>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[951,41060+6]..[951,41060+26])
                                      Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[951,41060+6]..[951,41060+10])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inline_and_simplify.ml[951,41060+11]..[951,41060+26])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inline_and_simplify.ml[951,41060+12]..[951,41060+16])
                                              Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[951,41060+12]..[951,41060+16])
                                            pattern (middle_end/flambda/inline_and_simplify.ml[951,41060+18]..[951,41060+25])
                                              Ppat_var "benefit" (middle_end/flambda/inline_and_simplify.ml[951,41060+18]..[951,41060+25])
                                          ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[952,41090+6]..[953,41131+53])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[952,41090+10]..[952,41090+11])
                                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[952,41090+10]..[952,41090+11])
                                          expression (middle_end/flambda/inline_and_simplify.ml[952,41090+14]..[952,41090+37])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[952,41090+14]..[952,41090+27])
                                              Pexp_ident "R.add_benefit" (middle_end/flambda/inline_and_simplify.ml[952,41090+14]..[952,41090+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[952,41090+28]..[952,41090+29])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[952,41090+28]..[952,41090+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[952,41090+30]..[952,41090+37])
                                                  Pexp_ident "benefit" (middle_end/flambda/inline_and_simplify.ml[952,41090+30]..[952,41090+37])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[953,41131+6]..[953,41131+53])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[953,41131+6]..[953,41131+14])
                                          Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[953,41131+6]..[953,41131+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[953,41131+15]..[953,41131+18])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[953,41131+15]..[953,41131+18])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[953,41131+19]..[953,41131+20])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[953,41131+19]..[953,41131+20])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[953,41131+21]..[953,41131+25])
                                              Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[953,41131+21]..[953,41131+25])
                                          <arg>
                                          Labelled "pass_name"
                                            expression (middle_end/flambda/inline_and_simplify.ml[953,41131+37]..[953,41131+53])
                                              Pexp_constant PConst_string("Unbox_closures",(middle_end/flambda/inline_and_simplify.ml[953,41131+38]..[953,41131+52]),None)
                                        ]
                                  <case>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[954,41185+6]..[954,41185+10])
                                      Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[954,41185+6]..[954,41185+10])
                                      None
                                    expression (middle_end/flambda/inline_and_simplify.ml[955,41199+6]..[981,42282+46])
                                      Pexp_match
                                      expression (middle_end/flambda/inline_and_simplify.ml[955,41199+12]..[955,41199+65])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[955,41199+12]..[955,41199+43])
                                          Pexp_ident "Unbox_free_vars_of_closures.run" (middle_end/flambda/inline_and_simplify.ml[955,41199+12]..[955,41199+43])
                                        [
                                          <arg>
                                          Labelled "env"
                                            expression (middle_end/flambda/inline_and_simplify.ml[955,41199+45]..[955,41199+48])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[955,41199+45]..[955,41199+48])
                                          <arg>
                                          Labelled "set_of_closures"
                                            expression (middle_end/flambda/inline_and_simplify.ml[955,41199+50]..[955,41199+65])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[955,41199+50]..[955,41199+65])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[956,41270+8]..[956,41270+28])
                                            Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[956,41270+8]..[956,41270+12])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[956,41270+13]..[956,41270+28])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[956,41270+14]..[956,41270+18])
                                                    Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[956,41270+14]..[956,41270+18])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[956,41270+20]..[956,41270+27])
                                                    Ppat_var "benefit" (middle_end/flambda/inline_and_simplify.ml[956,41270+20]..[956,41270+27])
                                                ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[957,41302+8]..[958,41345+68])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[957,41302+12]..[957,41302+13])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[957,41302+12]..[957,41302+13])
                                                expression (middle_end/flambda/inline_and_simplify.ml[957,41302+16]..[957,41302+39])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[957,41302+16]..[957,41302+29])
                                                    Pexp_ident "R.add_benefit" (middle_end/flambda/inline_and_simplify.ml[957,41302+16]..[957,41302+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[957,41302+30]..[957,41302+31])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[957,41302+30]..[957,41302+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[957,41302+32]..[957,41302+39])
                                                        Pexp_ident "benefit" (middle_end/flambda/inline_and_simplify.ml[957,41302+32]..[957,41302+39])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[958,41345+8]..[958,41345+68])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[958,41345+8]..[958,41345+16])
                                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[958,41345+8]..[958,41345+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[958,41345+17]..[958,41345+20])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[958,41345+17]..[958,41345+20])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[958,41345+21]..[958,41345+22])
                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[958,41345+21]..[958,41345+22])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[958,41345+23]..[958,41345+27])
                                                    Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[958,41345+23]..[958,41345+27])
                                                <arg>
                                                Labelled "pass_name"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[958,41345+39]..[958,41345+68])
                                                    Pexp_constant PConst_string("Unbox_free_vars_of_closures",(middle_end/flambda/inline_and_simplify.ml[958,41345+40]..[958,41345+67]),None)
                                              ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[959,41414+8]..[959,41414+12])
                                            Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[959,41414+8]..[959,41414+12])
                                            None
                                          expression (middle_end/flambda/inline_and_simplify.ml[961,41508+8]..[981,42282+46])
                                            Pexp_match
                                            expression (middle_end/flambda/inline_and_simplify.ml[962,41522+10]..[963,41584+48])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[962,41522+10]..[962,41522+56])
                                                Pexp_ident "Unbox_specialised_args.rewrite_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[962,41522+10]..[962,41522+56])
                                              [
                                                <arg>
                                                Labelled "env"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[962,41522+58]..[962,41522+61])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[962,41522+58]..[962,41522+61])
                                                <arg>
                                                Labelled "duplicate_function"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[963,41584+13]..[963,41584+31])
                                                    Pexp_ident "duplicate_function" (middle_end/flambda/inline_and_simplify.ml[963,41584+13]..[963,41584+31])
                                                <arg>
                                                Labelled "set_of_closures"
                                                  expression (middle_end/flambda/inline_and_simplify.ml[963,41584+33]..[963,41584+48])
                                                    Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[963,41584+33]..[963,41584+48])
                                              ]
                                            [
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[965,41646+10]..[965,41646+30])
                                                  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[965,41646+10]..[965,41646+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[965,41646+15]..[965,41646+30])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[965,41646+16]..[965,41646+20])
                                                          Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[965,41646+16]..[965,41646+20])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[965,41646+22]..[965,41646+29])
                                                          Ppat_var "benefit" (middle_end/flambda/inline_and_simplify.ml[965,41646+22]..[965,41646+29])
                                                      ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[966,41680+10]..[967,41725+65])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[966,41680+14]..[966,41680+15])
                                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[966,41680+14]..[966,41680+15])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[966,41680+18]..[966,41680+41])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[966,41680+18]..[966,41680+31])
                                                          Pexp_ident "R.add_benefit" (middle_end/flambda/inline_and_simplify.ml[966,41680+18]..[966,41680+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[966,41680+32]..[966,41680+33])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[966,41680+32]..[966,41680+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[966,41680+34]..[966,41680+41])
                                                              Pexp_ident "benefit" (middle_end/flambda/inline_and_simplify.ml[966,41680+34]..[966,41680+41])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[967,41725+10]..[967,41725+65])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[967,41725+10]..[967,41725+18])
                                                      Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[967,41725+10]..[967,41725+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[967,41725+19]..[967,41725+22])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[967,41725+19]..[967,41725+22])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[967,41725+23]..[967,41725+24])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[967,41725+23]..[967,41725+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[967,41725+25]..[967,41725+29])
                                                          Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[967,41725+25]..[967,41725+29])
                                                      <arg>
                                                      Labelled "pass_name"
                                                        expression (middle_end/flambda/inline_and_simplify.ml[967,41725+41]..[967,41725+65])
                                                          Pexp_constant PConst_string("Unbox_specialised_args",(middle_end/flambda/inline_and_simplify.ml[967,41725+42]..[967,41725+64]),None)
                                                    ]
                                              <case>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[968,41791+10]..[968,41791+14])
                                                  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[968,41791+10]..[968,41791+14])
                                                  None
                                                expression (middle_end/flambda/inline_and_simplify.ml[969,41809+10]..[981,42282+46])
                                                  Pexp_match
                                                  expression (middle_end/flambda/inline_and_simplify.ml[970,41825+12]..[972,41923+38])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[970,41825+12]..[971,41862+60])
                                                      Pexp_ident "Remove_unused_arguments.separate_unused_arguments_in_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[970,41825+12]..[971,41862+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[972,41923+14]..[972,41923+29])
                                                          Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[972,41923+14]..[972,41923+29])
                                                      <arg>
                                                      Labelled "backend"
                                                        expression (middle_end/flambda/inline_and_simplify.ml[972,41923+31]..[972,41923+38])
                                                          Pexp_ident "backend" (middle_end/flambda/inline_and_simplify.ml[972,41923+31]..[972,41923+38])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[974,41977+12]..[974,41977+32])
                                                        Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[974,41977+12]..[974,41977+16])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[974,41977+17]..[974,41977+32])
                                                            Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[974,41977+17]..[974,41977+32])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[975,42013+12]..[979,42193+68])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[975,42013+16]..[975,42013+20])
                                                              Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[975,42013+16]..[975,42013+20])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[976,42036+14]..[977,42108+69])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[976,42036+14]..[976,42036+37])
                                                                Pexp_ident "Flambda_utils.name_expr" (middle_end/flambda/inline_and_simplify.ml[976,42036+14]..[976,42036+37])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[976,42036+38]..[976,42036+71])
                                                                    Pexp_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[976,42036+39]..[976,42036+54])
                                                                    Some
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[976,42036+55]..[976,42036+70])
Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[976,42036+55]..[976,42036+70])
                                                                <arg>
                                                                Labelled "name"
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[977,42108+22]..[977,42108+69])
                                                                    Pexp_ident "Internal_variable_names.remove_unused_arguments" (middle_end/flambda/inline_and_simplify.ml[977,42108+22]..[977,42108+69])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[979,42193+12]..[979,42193+68])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[979,42193+12]..[979,42193+20])
                                                            Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[979,42193+12]..[979,42193+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[979,42193+21]..[979,42193+24])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[979,42193+21]..[979,42193+24])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[979,42193+25]..[979,42193+26])
                                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[979,42193+25]..[979,42193+26])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[979,42193+27]..[979,42193+31])
                                                                Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[979,42193+27]..[979,42193+31])
                                                            <arg>
                                                            Labelled "pass_name"
                                                              expression (middle_end/flambda/inline_and_simplify.ml[979,42193+43]..[979,42193+68])
                                                                Pexp_constant PConst_string("Remove_unused_arguments",(middle_end/flambda/inline_and_simplify.ml[979,42193+44]..[979,42193+67]),None)
                                                          ]
                                                    <case>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[980,42262+12]..[980,42262+16])
                                                        Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[980,42262+12]..[980,42262+16])
                                                        None
                                                      expression (middle_end/flambda/inline_and_simplify.ml[981,42282+12]..[981,42282+46])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[981,42282+12]..[981,42282+43])
                                                            Pexp_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[981,42282+12]..[981,42282+27])
                                                            Some
                                                              expression (middle_end/flambda/inline_and_simplify.ml[981,42282+28]..[981,42282+43])
                                                                Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[981,42282+28]..[981,42282+43])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[981,42282+45]..[981,42282+46])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[981,42282+45]..[981,42282+46])
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[983,42337+4]..[983,42337+35])
                        Ppat_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[983,42337+4]..[983,42337+19])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[983,42337+20]..[983,42337+35])
                            Ppat_var "project_closure" (middle_end/flambda/inline_and_simplify.ml[983,42337+20]..[983,42337+35])
                      expression (middle_end/flambda/inline_and_simplify.ml[984,42376+4]..[984,42376+51])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[984,42376+4]..[984,42376+28])
                          Pexp_ident "simplify_project_closure" (middle_end/flambda/inline_and_simplify.ml[984,42376+4]..[984,42376+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[984,42376+29]..[984,42376+32])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[984,42376+29]..[984,42376+32])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[984,42376+33]..[984,42376+34])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[984,42376+33]..[984,42376+34])
                          <arg>
                          Labelled "project_closure"
                            expression (middle_end/flambda/inline_and_simplify.ml[984,42376+36]..[984,42376+51])
                              Pexp_ident "project_closure" (middle_end/flambda/inline_and_simplify.ml[984,42376+36]..[984,42376+51])
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[985,42428+4]..[985,42428+27])
                        Ppat_construct "Project_var" (middle_end/flambda/inline_and_simplify.ml[985,42428+4]..[985,42428+15])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[985,42428+16]..[985,42428+27])
                            Ppat_var "project_var" (middle_end/flambda/inline_and_simplify.ml[985,42428+16]..[985,42428+27])
                      expression (middle_end/flambda/inline_and_simplify.ml[985,42428+31]..[985,42428+70])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[985,42428+31]..[985,42428+51])
                          Pexp_ident "simplify_project_var" (middle_end/flambda/inline_and_simplify.ml[985,42428+31]..[985,42428+51])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[985,42428+52]..[985,42428+55])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[985,42428+52]..[985,42428+55])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[985,42428+56]..[985,42428+57])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[985,42428+56]..[985,42428+57])
                          <arg>
                          Labelled "project_var"
                            expression (middle_end/flambda/inline_and_simplify.ml[985,42428+59]..[985,42428+70])
                              Pexp_ident "project_var" (middle_end/flambda/inline_and_simplify.ml[985,42428+59]..[985,42428+70])
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[986,42499+4]..[986,42499+59])
                        Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[986,42499+4]..[986,42499+31])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[986,42499+32]..[986,42499+59])
                            Ppat_var "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[986,42499+32]..[986,42499+59])
                      expression (middle_end/flambda/inline_and_simplify.ml[987,42562+4]..[987,42562+75])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[987,42562+4]..[987,42562+40])
                          Pexp_ident "simplify_move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[987,42562+4]..[987,42562+40])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[987,42562+41]..[987,42562+44])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[987,42562+41]..[987,42562+44])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[987,42562+45]..[987,42562+46])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[987,42562+45]..[987,42562+46])
                          <arg>
                          Labelled "move_within_set_of_closures"
                            expression (middle_end/flambda/inline_and_simplify.ml[987,42562+48]..[987,42562+75])
                              Pexp_ident "move_within_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[987,42562+48]..[987,42562+75])
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[988,42638+4]..[988,42638+26])
                        Ppat_construct "Prim" (middle_end/flambda/inline_and_simplify.ml[988,42638+4]..[988,42638+8])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[988,42638+9]..[988,42638+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[988,42638+10]..[988,42638+14])
                                Ppat_var "prim" (middle_end/flambda/inline_and_simplify.ml[988,42638+10]..[988,42638+14])
                              pattern (middle_end/flambda/inline_and_simplify.ml[988,42638+16]..[988,42638+20])
                                Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[988,42638+16]..[988,42638+20])
                              pattern (middle_end/flambda/inline_and_simplify.ml[988,42638+22]..[988,42638+25])
                                Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[988,42638+22]..[988,42638+25])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[989,42668+4]..[1079,46807+10])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[989,42668+8]..[989,42668+11])
                              Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[989,42668+8]..[989,42668+11])
                            expression (middle_end/flambda/inline_and_simplify.ml[989,42668+14]..[989,42668+46])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[989,42668+14]..[989,42668+37])
                                Pexp_ident "E.add_inlined_debuginfo" (middle_end/flambda/inline_and_simplify.ml[989,42668+14]..[989,42668+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[989,42668+38]..[989,42668+41])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[989,42668+38]..[989,42668+41])
                                <arg>
                                Labelled "dbg"
                                  expression (middle_end/flambda/inline_and_simplify.ml[989,42668+43]..[989,42668+46])
                                    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[989,42668+43]..[989,42668+46])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[990,42718+4]..[1079,46807+10])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[990,42718+4]..[990,42718+33])
                            Pexp_ident "simplify_free_variables_named" (middle_end/flambda/inline_and_simplify.ml[990,42718+4]..[990,42718+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[990,42718+34]..[990,42718+37])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[990,42718+34]..[990,42718+37])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[990,42718+38]..[990,42718+42])
                                Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[990,42718+38]..[990,42718+42])
                            <arg>
                            Labelled "f"
                              expression (middle_end/flambda/inline_and_simplify.ml[990,42718+46]..[1079,46807+10])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[990,42718+51]..[990,42718+54])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[990,42718+51]..[990,42718+54])
                                expression (middle_end/flambda/inline_and_simplify.ml[990,42718+55]..[1079,46807+9]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[990,42718+55]..[990,42718+59])
                                    Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[990,42718+55]..[990,42718+59])
                                  expression (middle_end/flambda/inline_and_simplify.ml[990,42718+60]..[1079,46807+9]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[990,42718+60]..[990,42718+72])
                                      Ppat_var "args_approxs" (middle_end/flambda/inline_and_simplify.ml[990,42718+60]..[990,42718+72])
                                    expression (middle_end/flambda/inline_and_simplify.ml[991,42794+6]..[1079,46807+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[991,42794+10]..[991,42794+14])
                                            Ppat_var "tree" (middle_end/flambda/inline_and_simplify.ml[991,42794+10]..[991,42794+14])
                                          expression (middle_end/flambda/inline_and_simplify.ml[991,42794+17]..[991,42794+47])
                                            Pexp_construct "Flambda.Prim" (middle_end/flambda/inline_and_simplify.ml[991,42794+17]..[991,42794+29])
                                            Some
                                              expression (middle_end/flambda/inline_and_simplify.ml[991,42794+30]..[991,42794+47])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[991,42794+31]..[991,42794+35])
                                                    Pexp_ident "prim" (middle_end/flambda/inline_and_simplify.ml[991,42794+31]..[991,42794+35])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[991,42794+37]..[991,42794+41])
                                                    Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[991,42794+37]..[991,42794+41])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[991,42794+43]..[991,42794+46])
                                                    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[991,42794+43]..[991,42794+46])
                                                ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[992,42845+6]..[1079,46807+9])
                                        Pexp_match
                                        expression (middle_end/flambda/inline_and_simplify.ml[992,42845+18]..[992,42845+42])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[992,42845+18]..[992,42845+22])
                                              Pexp_ident "prim" (middle_end/flambda/inline_and_simplify.ml[992,42845+18]..[992,42845+22])
                                            expression (middle_end/flambda/inline_and_simplify.ml[992,42845+24]..[992,42845+28])
                                              Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[992,42845+24]..[992,42845+28])
                                            expression (middle_end/flambda/inline_and_simplify.ml[992,42845+30]..[992,42845+42])
                                              Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[992,42845+30]..[992,42845+42])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+8]..[994,42955+47])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+8]..[994,42955+26])
                                                  Ppat_construct "Pfield" (middle_end/flambda/inline_and_simplify.ml[994,42955+8]..[994,42955+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+15]..[994,42955+26])
                                                      Ppat_var "field_index" (middle_end/flambda/inline_and_simplify.ml[994,42955+15]..[994,42955+26])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+28]..[994,42955+33])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[994,42955+29]..[994,42955+33]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+29]..[994,42955+33]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+29]..[994,42955+32])
                                                          Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[994,42955+29]..[994,42955+32])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+32]..[994,42955+33]) ghost
                                                          Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[994,42955+32]..[994,42955+33]) ghost
                                                          None
                                                      ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+35]..[994,42955+47])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[994,42955+36]..[994,42955+47]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+36]..[994,42955+47]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+36]..[994,42955+46])
                                                          Ppat_var "arg_approx" (middle_end/flambda/inline_and_simplify.ml[994,42955+36]..[994,42955+46])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[994,42955+46]..[994,42955+47]) ghost
                                                          Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[994,42955+46]..[994,42955+47]) ghost
                                                          None
                                                      ]
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[995,43006+8]..[1022,44357+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[995,43006+12]..[995,43006+37]) ghost
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[995,43006+12]..[995,43006+22])
                                                      Ppat_var "projection" (middle_end/flambda/inline_and_simplify.ml[995,43006+12]..[995,43006+22])
                                                    core_type (middle_end/flambda/inline_and_simplify.ml[995,43006+25]..[995,43006+37]) ghost
                                                      Ptyp_poly
                                                      core_type (middle_end/flambda/inline_and_simplify.ml[995,43006+25]..[995,43006+37])
                                                        Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[995,43006+25]..[995,43006+37])
                                                        []
                                                  expression (middle_end/flambda/inline_and_simplify.ml[995,43006+12]..[995,43006+64])
                                                    Pexp_constraint
                                                    expression (middle_end/flambda/inline_and_simplify.ml[995,43006+40]..[995,43006+64])
                                                      Pexp_construct "Field" (middle_end/flambda/inline_and_simplify.ml[995,43006+40]..[995,43006+45])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[995,43006+46]..[995,43006+64])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[995,43006+47]..[995,43006+58])
                                                              Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[995,43006+47]..[995,43006+58])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[995,43006+60]..[995,43006+63])
                                                              Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[995,43006+60]..[995,43006+63])
                                                          ]
                                                    core_type (middle_end/flambda/inline_and_simplify.ml[995,43006+25]..[995,43006+37])
                                                      Ptyp_constr "Projection.t" (middle_end/flambda/inline_and_simplify.ml[995,43006+25]..[995,43006+37])
                                                      []
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[996,43074+8]..[1022,44357+11])
                                                Pexp_match
                                                expression (middle_end/flambda/inline_and_simplify.ml[996,43074+20]..[996,43074+53])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[996,43074+20]..[996,43074+37])
                                                    Pexp_ident "E.find_projection" (middle_end/flambda/inline_and_simplify.ml[996,43074+20]..[996,43074+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[996,43074+38]..[996,43074+41])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[996,43074+38]..[996,43074+41])
                                                    <arg>
                                                    Labelled "projection"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[996,43074+43]..[996,43074+53])
                                                        Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[996,43074+43]..[996,43074+53])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[997,43133+10]..[997,43133+18])
                                                      Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[997,43133+10]..[997,43133+14])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[997,43133+15]..[997,43133+18])
                                                          Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[997,43133+15]..[997,43133+18])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[998,43155+10]..[1000,43305+45])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[998,43155+10]..[998,43155+38])
                                                        Pexp_ident "simplify_free_variable_named" (middle_end/flambda/inline_and_simplify.ml[998,43155+10]..[998,43155+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[998,43155+39]..[998,43155+42])
                                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[998,43155+39]..[998,43155+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[998,43155+43]..[998,43155+46])
                                                            Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[998,43155+43]..[998,43155+46])
                                                        <arg>
                                                        Labelled "f"
                                                          expression (middle_end/flambda/inline_and_simplify.ml[998,43155+50]..[1000,43305+45])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[998,43155+55]..[998,43155+59])
                                                              Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[998,43155+55]..[998,43155+59])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[998,43155+60]..[1000,43305+44]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[998,43155+60]..[998,43155+63])
                                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[998,43155+60]..[998,43155+63])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[998,43155+64]..[1000,43305+44]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[998,43155+64]..[998,43155+74])
                                                                  Ppat_var "var_approx" (middle_end/flambda/inline_and_simplify.ml[998,43155+64]..[998,43155+74])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[999,43233+12]..[1000,43305+44])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[999,43233+16]..[999,43233+17])
Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[999,43233+16]..[999,43233+17])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[999,43233+20]..[999,43233+68])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[999,43233+20]..[999,43233+33])
  Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[999,43233+20]..[999,43233+33])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[999,43233+34]..[999,43233+35])
      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[999,43233+34]..[999,43233+35])
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[999,43233+36]..[999,43233+68])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[999,43233+37]..[999,43233+56])
        Pexp_ident "B.remove_projection" (middle_end/flambda/inline_and_simplify.ml[999,43233+37]..[999,43233+56])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[999,43233+57]..[999,43233+67])
            Pexp_ident "projection" (middle_end/flambda/inline_and_simplify.ml[999,43233+57]..[999,43233+67])
      ]
]
                                                                  ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+12]..[1000,43305+44])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+12]..[1000,43305+26])
Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[1000,43305+12]..[1000,43305+16])
Some
  expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+17]..[1000,43305+26])
    Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[1000,43305+18]..[1000,43305+21])
    Some
      expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+22]..[1000,43305+25])
        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1000,43305+22]..[1000,43305+25])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+28]..[1000,43305+44])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+28]..[1000,43305+31])
  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1000,43305+28]..[1000,43305+31])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+32]..[1000,43305+33])
      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1000,43305+32]..[1000,43305+33])
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[1000,43305+34]..[1000,43305+44])
      Pexp_ident "var_approx" (middle_end/flambda/inline_and_simplify.ml[1000,43305+34]..[1000,43305+44])
]
                                                                    ]
                                                      ]
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1001,43351+10]..[1001,43351+14])
                                                      Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1001,43351+10]..[1001,43351+14])
                                                      None
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1002,43369+10]..[1021,44343+13])
                                                      Pexp_match
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1002,43369+22]..[1002,43369+57])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1002,43369+22]..[1002,43369+33])
                                                          Pexp_ident "A.get_field" (middle_end/flambda/inline_and_simplify.ml[1002,43369+22]..[1002,43369+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1002,43369+34]..[1002,43369+44])
                                                              Pexp_ident "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1002,43369+34]..[1002,43369+44])
                                                          <arg>
                                                          Labelled "field_index"
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1002,43369+46]..[1002,43369+57])
                                                              Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[1002,43369+46]..[1002,43369+57])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1003,43432+12]..[1003,43432+23])
                                                            Ppat_construct "Unreachable" (middle_end/flambda/inline_and_simplify.ml[1003,43432+12]..[1003,43432+23])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1003,43432+27]..[1003,43432+63])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1003,43432+28]..[1003,43432+59])
                                                                Pexp_construct "Flambda.Expr" (middle_end/flambda/inline_and_simplify.ml[1003,43432+28]..[1003,43432+40])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1003,43432+41]..[1003,43432+59])
                                                                    Pexp_construct "Proved_unreachable" (middle_end/flambda/inline_and_simplify.ml[1003,43432+41]..[1003,43432+59])
                                                                    None
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1003,43432+61]..[1003,43432+62])
                                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1003,43432+61]..[1003,43432+62])
                                                            ]
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1004,43496+12]..[1004,43496+21])
                                                            Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[1004,43496+12]..[1004,43496+14])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1004,43496+15]..[1004,43496+21])
                                                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1004,43496+15]..[1004,43496+21])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1005,43521+12]..[1020,44277+65])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1005,43521+16]..[1005,43521+28])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1005,43521+16]..[1005,43521+20])
                                                                      Ppat_var "tree" (middle_end/flambda/inline_and_simplify.ml[1005,43521+16]..[1005,43521+20])
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1005,43521+22]..[1005,43521+28])
                                                                      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1005,43521+22]..[1005,43521+28])
                                                                  ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1006,43552+14]..[1018,44232+29])
                                                                  Pexp_match
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1006,43552+20]..[1006,43552+37])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1006,43552+20]..[1006,43552+30])
                                                                      Pexp_ident "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1006,43552+20]..[1006,43552+30])
                                                                    "symbol" (middle_end/flambda/inline_and_simplify.ml[1006,43552+31]..[1006,43552+37])
                                                                  [
                                                                    <case>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1009,43733+16]..[1009,43733+35])
Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1009,43733+16]..[1009,43733+20])
Some
  []
  pattern (middle_end/flambda/inline_and_simplify.ml[1009,43733+21]..[1009,43733+35])
    Ppat_tuple
    [
      pattern (middle_end/flambda/inline_and_simplify.ml[1009,43733+22]..[1009,43733+28])
        Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1009,43733+22]..[1009,43733+28])
      pattern (middle_end/flambda/inline_and_simplify.ml[1009,43733+30]..[1009,43733+34])
        Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1009,43733+30]..[1009,43733+34])
        None
    ]
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1010,43772+16]..[1013,43892+71])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/inline_and_simplify.ml[1010,43772+20]..[1010,43772+26])
      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1010,43772+20]..[1010,43772+26])
    expression (middle_end/flambda/inline_and_simplify.ml[1011,43801+18]..[1011,43801+71])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[1011,43801+18]..[1011,43801+45])
        Pexp_ident "A.augment_with_symbol_field" (middle_end/flambda/inline_and_simplify.ml[1011,43801+18]..[1011,43801+45])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[1011,43801+46]..[1011,43801+52])
            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1011,43801+46]..[1011,43801+52])
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[1011,43801+53]..[1011,43801+59])
            Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1011,43801+53]..[1011,43801+59])
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[1011,43801+60]..[1011,43801+71])
            Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[1011,43801+60]..[1011,43801+71])
      ]
]
expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+16]..[1013,43892+71])
  Pexp_tuple
  [
    expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+16]..[1013,43892+63])
      Pexp_construct "Flambda.Read_symbol_field" (middle_end/flambda/inline_and_simplify.ml[1013,43892+16]..[1013,43892+41])
      Some
        expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+42]..[1013,43892+63])
          Pexp_tuple
          [
            expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+43]..[1013,43892+49])
              Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1013,43892+43]..[1013,43892+49])
            expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+51]..[1013,43892+62])
              Pexp_ident "field_index" (middle_end/flambda/inline_and_simplify.ml[1013,43892+51]..[1013,43892+62])
          ]
    expression (middle_end/flambda/inline_and_simplify.ml[1013,43892+65]..[1013,43892+71])
      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1013,43892+65]..[1013,43892+71])
  ]
                                                                    <case>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+16]..[1014,43964+40])
Ppat_or
pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+16]..[1014,43964+20])
  Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1014,43964+16]..[1014,43964+20])
  None
pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+23]..[1014,43964+40])
  Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1014,43964+23]..[1014,43964+27])
  Some
    []
    pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+28]..[1014,43964+40])
      Ppat_tuple
      [
        pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+29]..[1014,43964+30])
          Ppat_any
        pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+32]..[1014,43964+38])
          Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1014,43964+32]..[1014,43964+36])
          Some
            []
            pattern (middle_end/flambda/inline_and_simplify.ml[1014,43964+37]..[1014,43964+38])
              Ppat_any
      ]
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1017,44165+16]..[1018,44232+29])
Pexp_let Nonrec
[
  <def>
    pattern (middle_end/flambda/inline_and_simplify.ml[1017,44165+20]..[1017,44165+27])
      Ppat_var "approx'" (middle_end/flambda/inline_and_simplify.ml[1017,44165+20]..[1017,44165+27])
    expression (middle_end/flambda/inline_and_simplify.ml[1017,44165+30]..[1017,44165+63])
      Pexp_apply
      expression (middle_end/flambda/inline_and_simplify.ml[1017,44165+30]..[1017,44165+52])
        Pexp_ident "E.really_import_approx" (middle_end/flambda/inline_and_simplify.ml[1017,44165+30]..[1017,44165+52])
      [
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[1017,44165+53]..[1017,44165+56])
            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1017,44165+53]..[1017,44165+56])
        <arg>
        Nolabel
          expression (middle_end/flambda/inline_and_simplify.ml[1017,44165+57]..[1017,44165+63])
            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1017,44165+57]..[1017,44165+63])
      ]
]
expression (middle_end/flambda/inline_and_simplify.ml[1018,44232+16]..[1018,44232+29])
  Pexp_tuple
  [
    expression (middle_end/flambda/inline_and_simplify.ml[1018,44232+16]..[1018,44232+20])
      Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1018,44232+16]..[1018,44232+20])
    expression (middle_end/flambda/inline_and_simplify.ml[1018,44232+22]..[1018,44232+29])
      Pexp_ident "approx'" (middle_end/flambda/inline_and_simplify.ml[1018,44232+22]..[1018,44232+29])
  ]
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+12]..[1020,44277+65])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+12]..[1020,44277+47])
                                                                Pexp_ident "simplify_named_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[1020,44277+12]..[1020,44277+47])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+48]..[1020,44277+51])
                                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1020,44277+48]..[1020,44277+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+52]..[1020,44277+53])
                                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1020,44277+52]..[1020,44277+53])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+54]..[1020,44277+58])
                                                                    Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1020,44277+54]..[1020,44277+58])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1020,44277+59]..[1020,44277+65])
                                                                    Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1020,44277+59]..[1020,44277+65])
                                                              ]
                                                      ]
                                                ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1023,44369+8]..[1023,44369+22])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1023,44369+8]..[1023,44369+16])
                                                  Ppat_construct "Pfield" (middle_end/flambda/inline_and_simplify.ml[1023,44369+8]..[1023,44369+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1023,44369+15]..[1023,44369+16])
                                                      Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1023,44369+18]..[1023,44369+19])
                                                  Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1023,44369+21]..[1023,44369+22])
                                                  Ppat_any
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1023,44369+26]..[1023,44369+63])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1023,44369+26]..[1023,44369+42])
                                                Pexp_ident "Misc.fatal_error" (middle_end/flambda/inline_and_simplify.ml[1023,44369+26]..[1023,44369+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1023,44369+43]..[1023,44369+63])
                                                    Pexp_constant PConst_string("Pfield arity error",(middle_end/flambda/inline_and_simplify.ml[1023,44369+44]..[1023,44369+62]),None)
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+8]..[1026,44512+51])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+8]..[1024,44433+43])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+9]..[1024,44433+24])
                                                    Ppat_construct "Parraysetu" (middle_end/flambda/inline_and_simplify.ml[1024,44433+9]..[1024,44433+19])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+20]..[1024,44433+24])
                                                        Ppat_var "kind" (middle_end/flambda/inline_and_simplify.ml[1024,44433+20]..[1024,44433+24])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+27]..[1024,44433+42])
                                                    Ppat_construct "Parraysets" (middle_end/flambda/inline_and_simplify.ml[1024,44433+27]..[1024,44433+37])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1024,44433+38]..[1024,44433+42])
                                                        Ppat_var "kind" (middle_end/flambda/inline_and_simplify.ml[1024,44433+38]..[1024,44433+42])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+8]..[1025,44478+32])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1025,44478+9]..[1025,44478+32]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+9]..[1025,44478+32]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+9]..[1025,44478+15])
                                                          Ppat_var "_block" (middle_end/flambda/inline_and_simplify.ml[1025,44478+9]..[1025,44478+15])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+17]..[1025,44478+32]) ghost
                                                          Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1025,44478+17]..[1025,44478+32]) ghost
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+17]..[1025,44478+32]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+17]..[1025,44478+23])
                                                                  Ppat_var "_field" (middle_end/flambda/inline_and_simplify.ml[1025,44478+17]..[1025,44478+23])
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+25]..[1025,44478+32]) ghost
                                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1025,44478+25]..[1025,44478+32]) ghost
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+25]..[1025,44478+32]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+25]..[1025,44478+31])
  Ppat_var "_value" (middle_end/flambda/inline_and_simplify.ml[1025,44478+25]..[1025,44478+31])
pattern (middle_end/flambda/inline_and_simplify.ml[1025,44478+31]..[1025,44478+32]) ghost
  Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1025,44478+31]..[1025,44478+32]) ghost
  None
                                                                      ]
                                                              ]
                                                      ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+8]..[1026,44512+51])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1026,44512+9]..[1026,44512+51]) ghost
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+9]..[1026,44512+51]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+9]..[1026,44512+21])
                                                          Ppat_var "block_approx" (middle_end/flambda/inline_and_simplify.ml[1026,44512+9]..[1026,44512+21])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+23]..[1026,44512+51]) ghost
                                                          Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1026,44512+23]..[1026,44512+51]) ghost
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+23]..[1026,44512+51]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+23]..[1026,44512+36])
                                                                  Ppat_var "_field_approx" (middle_end/flambda/inline_and_simplify.ml[1026,44512+23]..[1026,44512+36])
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+38]..[1026,44512+51]) ghost
                                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1026,44512+38]..[1026,44512+51]) ghost
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+38]..[1026,44512+51]) ghost
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+38]..[1026,44512+50])
  Ppat_var "value_approx" (middle_end/flambda/inline_and_simplify.ml[1026,44512+38]..[1026,44512+50])
pattern (middle_end/flambda/inline_and_simplify.ml[1026,44512+50]..[1026,44512+51]) ghost
  Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1026,44512+50]..[1026,44512+51]) ghost
  None
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+8]..[1054,45702+61])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+8]..[1030,44743+11])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+11]..[1027,44567+42])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+11]..[1027,44567+29])
                                                    Pexp_ident "A.warn_on_mutation" (middle_end/flambda/inline_and_simplify.ml[1027,44567+11]..[1027,44567+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+30]..[1027,44567+42])
                                                        Pexp_ident "block_approx" (middle_end/flambda/inline_and_simplify.ml[1027,44567+30]..[1027,44567+42])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1027,44567+48]..[1030,44743+11])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1028,44621+10]..[1028,44621+32])
                                                    Pexp_ident "Location.prerr_warning" (middle_end/flambda/inline_and_simplify.ml[1028,44621+10]..[1028,44621+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1028,44621+33]..[1028,44621+60])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1028,44621+34]..[1028,44621+55])
                                                          Pexp_ident "Debuginfo.to_location" (middle_end/flambda/inline_and_simplify.ml[1028,44621+34]..[1028,44621+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1028,44621+56]..[1028,44621+59])
                                                              Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1028,44621+56]..[1028,44621+59])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1029,44682+12]..[1029,44682+60])
                                                        Pexp_construct "Warnings.Flambda_assignment_to_non_mutable_value" (middle_end/flambda/inline_and_simplify.ml[1029,44682+12]..[1029,44682+60])
                                                        None
                                                  ]
                                                None
                                              expression (middle_end/flambda/inline_and_simplify.ml[1031,44756+8]..[1054,45702+61])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1031,44756+12]..[1031,44756+16])
                                                      Ppat_var "kind" (middle_end/flambda/inline_and_simplify.ml[1031,44756+12]..[1031,44756+16])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1032,44775+10]..[1047,45479+16])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1032,44775+14]..[1032,44775+19])
                                                            Ppat_var "check" (middle_end/flambda/inline_and_simplify.ml[1032,44775+14]..[1032,44775+19])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1032,44775+20]..[1039,45099+40]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1032,44775+20]..[1032,44775+22])
                                                              Ppat_construct "()" (middle_end/flambda/inline_and_simplify.ml[1032,44775+20]..[1032,44775+22])
                                                              None
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1033,44800+12]..[1039,45099+40])
                                                              Pexp_match
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1033,44800+18]..[1033,44800+22])
                                                                Pexp_ident "kind" (middle_end/flambda/inline_and_simplify.ml[1033,44800+18]..[1033,44800+22])
                                                              [
                                                                <case>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1034,44828+14]..[1034,44828+37])
                                                                    Ppat_or
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1034,44828+14]..[1034,44828+25])
                                                                      Ppat_construct "Pfloatarray" (middle_end/flambda/inline_and_simplify.ml[1034,44828+14]..[1034,44828+25])
                                                                      None
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1034,44828+28]..[1034,44828+37])
                                                                      Ppat_construct "Pgenarray" (middle_end/flambda/inline_and_simplify.ml[1034,44828+28]..[1034,44828+37])
                                                                      None
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1034,44828+41]..[1034,44828+43])
                                                                    Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[1034,44828+41]..[1034,44828+43])
                                                                    None
                                                                <case>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1035,44872+14]..[1035,44872+36])
                                                                    Ppat_or
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1035,44872+14]..[1035,44872+24])
                                                                      Ppat_construct "Paddrarray" (middle_end/flambda/inline_and_simplify.ml[1035,44872+14]..[1035,44872+24])
                                                                      None
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1035,44872+27]..[1035,44872+36])
                                                                      Ppat_construct "Pintarray" (middle_end/flambda/inline_and_simplify.ml[1035,44872+27]..[1035,44872+36])
                                                                      None
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1037,44971+14]..[1039,45099+40])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1037,44971+14]..[1037,44971+31])
                                                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1037,44971+14]..[1037,44971+31])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1037,44971+32]..[1038,45045+53])
  Pexp_constant PConst_string("Assignment of a float to a specialised non-float array: %a",(middle_end/flambda/inline_and_simplify.ml[1037,44971+33]..[1038,45045+52]),None)
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1039,45099+16]..[1039,45099+35])
  Pexp_ident "Flambda.print_named" (middle_end/flambda/inline_and_simplify.ml[1039,45099+16]..[1039,45099+35])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1039,45099+36]..[1039,45099+40])
  Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1039,45099+36]..[1039,45099+40])
                                                                    ]
                                                              ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+10]..[1047,45479+16])
                                                        Pexp_match
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+16]..[1041,45153+58])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+16]..[1041,45153+36])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+16]..[1041,45153+23])
                                                                Pexp_ident "A.descr" (middle_end/flambda/inline_and_simplify.ml[1041,45153+16]..[1041,45153+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+24]..[1041,45153+36])
                                                                    Pexp_ident "block_approx" (middle_end/flambda/inline_and_simplify.ml[1041,45153+24]..[1041,45153+36])
                                                              ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+38]..[1041,45153+58])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+38]..[1041,45153+45])
                                                                Pexp_ident "A.descr" (middle_end/flambda/inline_and_simplify.ml[1041,45153+38]..[1041,45153+45])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1041,45153+46]..[1041,45153+58])
                                                                    Pexp_ident "value_approx" (middle_end/flambda/inline_and_simplify.ml[1041,45153+46]..[1041,45153+58])
                                                              ]
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1042,45217+12]..[1042,45217+36])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1042,45217+13]..[1042,45217+32])
                                                                  Ppat_construct "Value_float_array" (middle_end/flambda/inline_and_simplify.ml[1042,45217+13]..[1042,45217+30])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1042,45217+31]..[1042,45217+32])
                                                                      Ppat_any
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1042,45217+34]..[1042,45217+35])
                                                                  Ppat_any
                                                              ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1042,45217+40]..[1042,45217+68])
                                                              Pexp_sequence
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1042,45217+40]..[1042,45217+48])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1042,45217+40]..[1042,45217+45])
                                                                  Pexp_ident "check" (middle_end/flambda/inline_and_simplify.ml[1042,45217+40]..[1042,45217+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1042,45217+46]..[1042,45217+48])
                                                                      Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[1042,45217+46]..[1042,45217+48])
                                                                      None
                                                                ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1042,45217+50]..[1042,45217+68])
                                                                Pexp_construct "Lambda.Pfloatarray" (middle_end/flambda/inline_and_simplify.ml[1042,45217+50]..[1042,45217+68])
                                                                None
                                                          <case>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1043,45286+12]..[1043,45286+30])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1043,45286+13]..[1043,45286+14])
                                                                  Ppat_any
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1043,45286+16]..[1043,45286+29])
                                                                  Ppat_construct "Value_float" (middle_end/flambda/inline_and_simplify.ml[1043,45286+16]..[1043,45286+27])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1043,45286+28]..[1043,45286+29])
                                                                      Ppat_any
                                                              ]
                                                            <when>
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1043,45286+36]..[1043,45286+59])
                                                                Pexp_ident "Config.flat_float_array" (middle_end/flambda/inline_and_simplify.ml[1043,45286+36]..[1043,45286+59])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1044,45349+12]..[1044,45349+40])
                                                              Pexp_sequence
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1044,45349+12]..[1044,45349+20])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1044,45349+12]..[1044,45349+17])
                                                                  Pexp_ident "check" (middle_end/flambda/inline_and_simplify.ml[1044,45349+12]..[1044,45349+17])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1044,45349+18]..[1044,45349+20])
                                                                      Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[1044,45349+18]..[1044,45349+20])
                                                                      None
                                                                ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1044,45349+22]..[1044,45349+40])
                                                                Pexp_construct "Lambda.Pfloatarray" (middle_end/flambda/inline_and_simplify.ml[1044,45349+22]..[1044,45349+40])
                                                                None
                                                          <case>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1046,45462+12]..[1046,45462+13])
                                                              Ppat_any
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1047,45479+12]..[1047,45479+16])
                                                              Pexp_ident "kind" (middle_end/flambda/inline_and_simplify.ml[1047,45479+12]..[1047,45479+16])
                                                        ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1049,45507+8]..[1054,45702+61])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1049,45507+12]..[1049,45507+47]) ghost
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1049,45507+12]..[1049,45507+16])
                                                          Ppat_var "prim" (middle_end/flambda/inline_and_simplify.ml[1049,45507+12]..[1049,45507+16])
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[1049,45507+19]..[1049,45507+47]) ghost
                                                          Ptyp_poly
                                                          core_type (middle_end/flambda/inline_and_simplify.ml[1049,45507+19]..[1049,45507+47])
                                                            Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/inline_and_simplify.ml[1049,45507+19]..[1049,45507+47])
                                                            []
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1049,45507+12]..[1052,45661+29])
                                                        Pexp_constraint
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1049,45507+50]..[1052,45661+29])
                                                          Pexp_match
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1049,45507+56]..[1049,45507+60])
                                                            Pexp_ident "prim" (middle_end/flambda/inline_and_simplify.ml[1049,45507+56]..[1049,45507+60])
                                                          [
                                                            <case>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1050,45573+12]..[1050,45573+24])
                                                                Ppat_construct "Parraysetu" (middle_end/flambda/inline_and_simplify.ml[1050,45573+12]..[1050,45573+22])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1050,45573+23]..[1050,45573+24])
                                                                    Ppat_any
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1050,45573+28]..[1050,45573+43])
                                                                Pexp_construct "Parraysetu" (middle_end/flambda/inline_and_simplify.ml[1050,45573+28]..[1050,45573+38])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1050,45573+39]..[1050,45573+43])
                                                                    Pexp_ident "kind" (middle_end/flambda/inline_and_simplify.ml[1050,45573+39]..[1050,45573+43])
                                                            <case>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1051,45617+12]..[1051,45617+24])
                                                                Ppat_construct "Parraysets" (middle_end/flambda/inline_and_simplify.ml[1051,45617+12]..[1051,45617+22])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1051,45617+23]..[1051,45617+24])
                                                                    Ppat_any
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1051,45617+28]..[1051,45617+43])
                                                                Pexp_construct "Parraysets" (middle_end/flambda/inline_and_simplify.ml[1051,45617+28]..[1051,45617+38])
                                                                Some
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1051,45617+39]..[1051,45617+43])
                                                                    Pexp_ident "kind" (middle_end/flambda/inline_and_simplify.ml[1051,45617+39]..[1051,45617+43])
                                                            <case>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1052,45661+12]..[1052,45661+13])
                                                                Ppat_any
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1052,45661+17]..[1052,45661+29])
                                                                Pexp_assert
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1052,45661+24]..[1052,45661+29])
                                                                  Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1052,45661+24]..[1052,45661+29])
                                                                  None
                                                          ]
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[1049,45507+19]..[1049,45507+47])
                                                          Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/inline_and_simplify.ml[1049,45507+19]..[1049,45507+47])
                                                          []
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+8]..[1054,45702+61])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+8]..[1054,45702+30])
                                                        Pexp_construct "Prim" (middle_end/flambda/inline_and_simplify.ml[1054,45702+8]..[1054,45702+12])
                                                        Some
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+13]..[1054,45702+30])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+14]..[1054,45702+18])
                                                                Pexp_ident "prim" (middle_end/flambda/inline_and_simplify.ml[1054,45702+14]..[1054,45702+18])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+20]..[1054,45702+24])
                                                                Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1054,45702+20]..[1054,45702+24])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+26]..[1054,45702+29])
                                                                Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1054,45702+26]..[1054,45702+29])
                                                            ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+32]..[1054,45702+61])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+32]..[1054,45702+35])
                                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1054,45702+32]..[1054,45702+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+36]..[1054,45702+37])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1054,45702+36]..[1054,45702+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+38]..[1054,45702+61])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+39]..[1054,45702+54])
                                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1054,45702+39]..[1054,45702+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1054,45702+55]..[1054,45702+60])
                                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1054,45702+55]..[1054,45702+60])
                                                                    None
                                                              ]
                                                        ]
                                                    ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+8]..[1055,45764+47])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+8]..[1055,45764+19])
                                                  Ppat_construct "Psetfield" (middle_end/flambda/inline_and_simplify.ml[1055,45764+8]..[1055,45764+17])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+18]..[1055,45764+19])
                                                      Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+21]..[1055,45764+30])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1055,45764+27]..[1055,45764+29])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+21]..[1055,45764+30]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+21]..[1055,45764+27])
                                                          Ppat_var "_block" (middle_end/flambda/inline_and_simplify.ml[1055,45764+21]..[1055,45764+27])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+29]..[1055,45764+30])
                                                          Ppat_any
                                                      ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+32]..[1055,45764+47])
                                                  Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1055,45764+44]..[1055,45764+46])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+32]..[1055,45764+47]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+32]..[1055,45764+44])
                                                          Ppat_var "block_approx" (middle_end/flambda/inline_and_simplify.ml[1055,45764+32]..[1055,45764+44])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1055,45764+46]..[1055,45764+47])
                                                          Ppat_any
                                                      ]
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+8]..[1060,46004+43])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+8]..[1059,45991+11])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+11]..[1056,45815+42])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+11]..[1056,45815+29])
                                                    Pexp_ident "A.warn_on_mutation" (middle_end/flambda/inline_and_simplify.ml[1056,45815+11]..[1056,45815+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+30]..[1056,45815+42])
                                                        Pexp_ident "block_approx" (middle_end/flambda/inline_and_simplify.ml[1056,45815+30]..[1056,45815+42])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1056,45815+48]..[1059,45991+11])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1057,45869+10]..[1057,45869+32])
                                                    Pexp_ident "Location.prerr_warning" (middle_end/flambda/inline_and_simplify.ml[1057,45869+10]..[1057,45869+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1057,45869+33]..[1057,45869+60])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1057,45869+34]..[1057,45869+55])
                                                          Pexp_ident "Debuginfo.to_location" (middle_end/flambda/inline_and_simplify.ml[1057,45869+34]..[1057,45869+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1057,45869+56]..[1057,45869+59])
                                                              Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1057,45869+56]..[1057,45869+59])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1058,45930+12]..[1058,45930+60])
                                                        Pexp_construct "Warnings.Flambda_assignment_to_non_mutable_value" (middle_end/flambda/inline_and_simplify.ml[1058,45930+12]..[1058,45930+60])
                                                        None
                                                  ]
                                                None
                                              expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+8]..[1060,46004+43])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+8]..[1060,46004+12])
                                                    Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1060,46004+8]..[1060,46004+12])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+14]..[1060,46004+43])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+14]..[1060,46004+17])
                                                      Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1060,46004+14]..[1060,46004+17])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+18]..[1060,46004+19])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1060,46004+18]..[1060,46004+19])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+20]..[1060,46004+43])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+21]..[1060,46004+36])
                                                            Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1060,46004+21]..[1060,46004+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1060,46004+37]..[1060,46004+42])
                                                                Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1060,46004+37]..[1060,46004+42])
                                                                None
                                                          ]
                                                    ]
                                                ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+8]..[1061,46048+57])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+8]..[1061,46048+51])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+9]..[1061,46048+35])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+9]..[1061,46048+20])
                                                      Ppat_construct "Psetfield" (middle_end/flambda/inline_and_simplify.ml[1061,46048+9]..[1061,46048+18])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+19]..[1061,46048+20])
                                                          Ppat_any
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+23]..[1061,46048+35])
                                                      Ppat_construct "Parraysetu" (middle_end/flambda/inline_and_simplify.ml[1061,46048+23]..[1061,46048+33])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+34]..[1061,46048+35])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+38]..[1061,46048+50])
                                                    Ppat_construct "Parraysets" (middle_end/flambda/inline_and_simplify.ml[1061,46048+38]..[1061,46048+48])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+49]..[1061,46048+50])
                                                        Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+53]..[1061,46048+54])
                                                  Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1061,46048+56]..[1061,46048+57])
                                                  Ppat_any
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1062,46109+8]..[1062,46109+74])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1062,46109+8]..[1062,46109+24])
                                                Pexp_ident "Misc.fatal_error" (middle_end/flambda/inline_and_simplify.ml[1062,46109+8]..[1062,46109+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1062,46109+25]..[1062,46109+74])
                                                    Pexp_constant PConst_string("Psetfield / Parraysetu / Parraysets arity error",(middle_end/flambda/inline_and_simplify.ml[1062,46109+26]..[1062,46109+73]),None)
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+8]..[1063,46184+34])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+8]..[1063,46184+28])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+9]..[1063,46184+17])
                                                    Ppat_construct "Psequand" (middle_end/flambda/inline_and_simplify.ml[1063,46184+9]..[1063,46184+17])
                                                    None
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+20]..[1063,46184+27])
                                                    Ppat_construct "Psequor" (middle_end/flambda/inline_and_simplify.ml[1063,46184+20]..[1063,46184+27])
                                                    None
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+30]..[1063,46184+31])
                                                  Ppat_any
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1063,46184+33]..[1063,46184+34])
                                                  Ppat_any
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1064,46222+8]..[1065,46302+38])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1064,46222+8]..[1064,46222+24])
                                                Pexp_ident "Misc.fatal_error" (middle_end/flambda/inline_and_simplify.ml[1064,46222+8]..[1064,46222+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1064,46222+25]..[1065,46302+38])
                                                    Pexp_constant PConst_string("Psequand and Psequor must be expanded (see handling in closure_conversion.ml)",(middle_end/flambda/inline_and_simplify.ml[1064,46222+26]..[1065,46302+37]),None)
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1066,46341+8]..[1066,46341+29])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1066,46341+8]..[1066,46341+9])
                                                  Ppat_var "p" (middle_end/flambda/inline_and_simplify.ml[1066,46341+8]..[1066,46341+9])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1066,46341+11]..[1066,46341+15])
                                                  Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1066,46341+11]..[1066,46341+15])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1066,46341+17]..[1066,46341+29])
                                                  Ppat_var "args_approxs" (middle_end/flambda/inline_and_simplify.ml[1066,46341+17]..[1066,46341+29])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1067,46374+8]..[1078,46780+26])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1067,46374+12]..[1067,46374+33])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1067,46374+12]..[1067,46374+16])
                                                        Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[1067,46374+12]..[1067,46374+16])
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1067,46374+18]..[1067,46374+24])
                                                        Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1067,46374+18]..[1067,46374+24])
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1067,46374+26]..[1067,46374+33])
                                                        Ppat_var "benefit" (middle_end/flambda/inline_and_simplify.ml[1067,46374+26]..[1067,46374+33])
                                                    ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1068,46410+10]..[1070,46555+38])
                                                    Pexp_letmodule "Backend" (middle_end/flambda/inline_and_simplify.ml[1068,46410+21]..[1068,46410+28])
                                                    module_expr (middle_end/flambda/inline_and_simplify.ml[1068,46410+31]..[1068,46410+69])
                                                      Pmod_unpack
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1068,46410+36]..[1068,46410+68]) ghost
                                                        Pexp_constraint
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1068,46410+36]..[1068,46410+51])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1068,46410+37]..[1068,46410+46])
                                                            Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[1068,46410+37]..[1068,46410+46])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1068,46410+47]..[1068,46410+50])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1068,46410+47]..[1068,46410+50])
                                                          ]
                                                        core_type (middle_end/flambda/inline_and_simplify.ml[1068,46410+54]..[1068,46410+68])
                                                          Ptyp_package "Backend_intf.S" (middle_end/flambda/inline_and_simplify.ml[1068,46410+54]..[1068,46410+68])
                                                          []
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+10]..[1070,46555+38])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+10]..[1069,46483+39])
                                                        Pexp_ident "Simplify_primitives.primitive" (middle_end/flambda/inline_and_simplify.ml[1069,46483+10]..[1069,46483+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+40]..[1069,46483+41])
                                                            Pexp_ident "p" (middle_end/flambda/inline_and_simplify.ml[1069,46483+40]..[1069,46483+41])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+42]..[1069,46483+62])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+43]..[1069,46483+47])
                                                                Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1069,46483+43]..[1069,46483+47])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+49]..[1069,46483+61])
                                                                Pexp_ident "args_approxs" (middle_end/flambda/inline_and_simplify.ml[1069,46483+49]..[1069,46483+61])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+63]..[1069,46483+67])
                                                            Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1069,46483+63]..[1069,46483+67])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1069,46483+68]..[1069,46483+71])
                                                            Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1069,46483+68]..[1069,46483+71])
                                                        <arg>
                                                        Labelled "size_int"
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1070,46555+22]..[1070,46555+38])
                                                            Pexp_ident "Backend.size_int" (middle_end/flambda/inline_and_simplify.ml[1070,46555+22]..[1070,46555+38])
                                                      ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+8]..[1078,46780+26])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1072,46605+12]..[1072,46605+13])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1072,46605+12]..[1072,46605+13])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+16]..[1072,46605+47])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+16]..[1072,46605+29])
                                                        Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1072,46605+16]..[1072,46605+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+30]..[1072,46605+31])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1072,46605+30]..[1072,46605+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+32]..[1072,46605+47])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+33]..[1072,46605+38])
                                                              Pexp_ident "B.+" (middle_end/flambda/inline_and_simplify.ml[1072,46605+33]..[1072,46605+38])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1072,46605+39]..[1072,46605+46])
                                                                  Pexp_ident "benefit" (middle_end/flambda/inline_and_simplify.ml[1072,46605+39]..[1072,46605+46])
                                                            ]
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1073,46656+8]..[1078,46780+26])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1073,46656+12]..[1073,46656+18])
                                                        Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1073,46656+12]..[1073,46656+18])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1074,46677+10]..[1076,46745+23])
                                                        Pexp_match
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1074,46677+16]..[1074,46677+17])
                                                          Pexp_ident "p" (middle_end/flambda/inline_and_simplify.ml[1074,46677+16]..[1074,46677+17])
                                                        [
                                                          <case>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1075,46700+12]..[1075,46700+19])
                                                              Ppat_construct "Popaque" (middle_end/flambda/inline_and_simplify.ml[1075,46700+12]..[1075,46700+19])
                                                              None
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1075,46700+23]..[1075,46700+44])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1075,46700+23]..[1075,46700+38])
                                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1075,46700+23]..[1075,46700+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1075,46700+39]..[1075,46700+44])
                                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1075,46700+39]..[1075,46700+44])
                                                                    None
                                                              ]
                                                          <case>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1076,46745+12]..[1076,46745+13])
                                                              Ppat_any
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1076,46745+17]..[1076,46745+23])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1076,46745+17]..[1076,46745+23])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+8]..[1078,46780+26])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+8]..[1078,46780+12])
                                                        Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[1078,46780+8]..[1078,46780+12])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+14]..[1078,46780+26])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+14]..[1078,46780+17])
                                                          Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1078,46780+14]..[1078,46780+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+18]..[1078,46780+19])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1078,46780+18]..[1078,46780+19])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1078,46780+20]..[1078,46780+26])
                                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1078,46780+20]..[1078,46780+26])
                                                        ]
                                                    ]
                                        ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1080,46818+4]..[1080,46818+13])
                        Ppat_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[1080,46818+4]..[1080,46818+8])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1080,46818+9]..[1080,46818+13])
                            Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[1080,46818+9]..[1080,46818+13])
                      expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+4]..[1082,46876+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1081,46835+8]..[1081,46835+15])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1081,46835+8]..[1081,46835+12])
                                  Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[1081,46835+8]..[1081,46835+12])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1081,46835+14]..[1081,46835+15])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1081,46835+14]..[1081,46835+15])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+18]..[1081,46835+37])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+18]..[1081,46835+26])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1081,46835+18]..[1081,46835+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+27]..[1081,46835+30])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1081,46835+27]..[1081,46835+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+31]..[1081,46835+32])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1081,46835+31]..[1081,46835+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1081,46835+33]..[1081,46835+37])
                                    Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[1081,46835+33]..[1081,46835+37])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1082,46876+4]..[1082,46876+16])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/inline_and_simplify.ml[1082,46876+4]..[1082,46876+13])
                              Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[1082,46876+4]..[1082,46876+8])
                              Some
                                expression (middle_end/flambda/inline_and_simplify.ml[1082,46876+9]..[1082,46876+13])
                                  Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[1082,46876+9]..[1082,46876+13])
                            expression (middle_end/flambda/inline_and_simplify.ml[1082,46876+15]..[1082,46876+16])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1082,46876+15]..[1082,46876+16])
                          ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[874,37328+50]..[874,37328+69])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[874,37328+50]..[874,37328+63])
                      Ptyp_constr "Flambda.named" (middle_end/flambda/inline_and_simplify.ml[874,37328+50]..[874,37328+63])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[874,37328+66]..[874,37328+69])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[874,37328+66]..[874,37328+69])
                      []
                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1084,46894+4]..[1084,46894+12])
          Ppat_var "simplify" (middle_end/flambda/inline_and_simplify.ml[1084,46894+4]..[1084,46894+12])
        expression (middle_end/flambda/inline_and_simplify.ml[1084,46894+13]..[1374,58939+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1084,46894+13]..[1084,46894+16])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1084,46894+13]..[1084,46894+16])
          expression (middle_end/flambda/inline_and_simplify.ml[1084,46894+17]..[1374,58939+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1084,46894+17]..[1084,46894+18])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1084,46894+17]..[1084,46894+18])
            expression (middle_end/flambda/inline_and_simplify.ml[1084,46894+19]..[1374,58939+52]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1084,46894+19]..[1084,46894+37])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[1084,46894+20]..[1084,46894+24])
                  Ppat_var "tree" (middle_end/flambda/inline_and_simplify.ml[1084,46894+20]..[1084,46894+24])
                core_type (middle_end/flambda/inline_and_simplify.ml[1084,46894+27]..[1084,46894+36])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[1084,46894+27]..[1084,46894+36])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[1084,46894+38]..[1374,58939+52])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[1085,46952+2]..[1374,58939+52])
                  Pexp_match
                  expression (middle_end/flambda/inline_and_simplify.ml[1085,46952+8]..[1085,46952+12])
                    Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1085,46952+8]..[1085,46952+12])
                  [
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1086,46970+4]..[1086,46970+11])
                        Ppat_construct "Var" (middle_end/flambda/inline_and_simplify.ml[1086,46970+4]..[1086,46970+7])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1086,46970+8]..[1086,46970+11])
                            Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1086,46970+8]..[1086,46970+11])
                      expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+4]..[1093,47356+70])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1087,46985+8]..[1087,46985+11])
                              Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1087,46985+8]..[1087,46985+11])
                            expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+14]..[1087,46985+62])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+14]..[1087,46985+39])
                                Pexp_ident "Freshening.apply_variable" (middle_end/flambda/inline_and_simplify.ml[1087,46985+14]..[1087,46985+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+40]..[1087,46985+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+41]..[1087,46985+53])
                                      Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1087,46985+41]..[1087,46985+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+54]..[1087,46985+57])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1087,46985+54]..[1087,46985+57])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1087,46985+59]..[1087,46985+62])
                                    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1087,46985+59]..[1087,46985+62])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+4]..[1093,47356+70])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+4]..[1093,47356+33])
                            Pexp_ident "simplify_using_approx_and_env" (middle_end/flambda/inline_and_simplify.ml[1093,47356+4]..[1093,47356+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+34]..[1093,47356+37])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1093,47356+34]..[1093,47356+37])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+38]..[1093,47356+39])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1093,47356+38]..[1093,47356+39])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+40]..[1093,47356+49])
                                Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[1093,47356+41]..[1093,47356+44])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+45]..[1093,47356+48])
                                    Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1093,47356+45]..[1093,47356+48])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+50]..[1093,47356+70])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+51]..[1093,47356+61])
                                  Pexp_ident "E.find_exn" (middle_end/flambda/inline_and_simplify.ml[1093,47356+51]..[1093,47356+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+62]..[1093,47356+65])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1093,47356+62]..[1093,47356+65])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1093,47356+66]..[1093,47356+69])
                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1093,47356+66]..[1093,47356+69])
                                ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1094,47427+4]..[1094,47427+15])
                        Ppat_construct "Apply" (middle_end/flambda/inline_and_simplify.ml[1094,47427+4]..[1094,47427+9])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1094,47427+10]..[1094,47427+15])
                            Ppat_var "apply" (middle_end/flambda/inline_and_simplify.ml[1094,47427+10]..[1094,47427+15])
                      expression (middle_end/flambda/inline_and_simplify.ml[1095,47446+4]..[1095,47446+31])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1095,47446+4]..[1095,47446+18])
                          Pexp_ident "simplify_apply" (middle_end/flambda/inline_and_simplify.ml[1095,47446+4]..[1095,47446+18])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1095,47446+19]..[1095,47446+22])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1095,47446+19]..[1095,47446+22])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1095,47446+23]..[1095,47446+24])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1095,47446+23]..[1095,47446+24])
                          <arg>
                          Labelled "apply"
                            expression (middle_end/flambda/inline_and_simplify.ml[1095,47446+26]..[1095,47446+31])
                              Pexp_ident "apply" (middle_end/flambda/inline_and_simplify.ml[1095,47446+26]..[1095,47446+31])
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1096,47478+4]..[1096,47478+9])
                        Ppat_construct "Let" (middle_end/flambda/inline_and_simplify.ml[1096,47478+4]..[1096,47478+7])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1096,47478+8]..[1096,47478+9])
                            Ppat_any
                      expression (middle_end/flambda/inline_and_simplify.ml[1097,47491+4]..[1120,48354+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+8]..[1097,47491+25])
                              Ppat_var "for_defining_expr" (middle_end/flambda/inline_and_simplify.ml[1097,47491+8]..[1097,47491+25])
                            expression (middle_end/flambda/inline_and_simplify.ml[1097,47491+26]..[1102,47772+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+26]..[1097,47491+34])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+27]..[1097,47491+30])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1097,47491+27]..[1097,47491+30])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+32]..[1097,47491+33])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1097,47491+32]..[1097,47491+33])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1097,47491+35]..[1102,47772+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+35]..[1097,47491+38])
                                  Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1097,47491+35]..[1097,47491+38])
                                expression (middle_end/flambda/inline_and_simplify.ml[1097,47491+39]..[1102,47772+34]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1097,47491+39]..[1097,47491+52])
                                    Ppat_var "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1097,47491+39]..[1097,47491+52])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+6]..[1102,47772+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1098,47546+10]..[1098,47546+26])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1098,47546+10]..[1098,47546+23])
                                              Ppat_var "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1098,47546+10]..[1098,47546+23])
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1098,47546+25]..[1098,47546+26])
                                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1098,47546+25]..[1098,47546+26])
                                          ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+29]..[1098,47546+63])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+29]..[1098,47546+43])
                                            Pexp_ident "simplify_named" (middle_end/flambda/inline_and_simplify.ml[1098,47546+29]..[1098,47546+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+44]..[1098,47546+47])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1098,47546+44]..[1098,47546+47])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+48]..[1098,47546+49])
                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1098,47546+48]..[1098,47546+49])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1098,47546+50]..[1098,47546+63])
                                                Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1098,47546+50]..[1098,47546+63])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+6]..[1102,47772+34])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1099,47613+10]..[1099,47613+17])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1099,47613+10]..[1099,47613+13])
                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1099,47613+10]..[1099,47613+13])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1099,47613+15]..[1099,47613+17])
                                                Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1099,47613+15]..[1099,47613+17])
                                            ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+20]..[1099,47613+66])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+20]..[1099,47613+43])
                                              Pexp_ident "Freshening.add_variable" (middle_end/flambda/inline_and_simplify.ml[1099,47613+20]..[1099,47613+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+44]..[1099,47613+62])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+45]..[1099,47613+57])
                                                    Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1099,47613+45]..[1099,47613+57])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+58]..[1099,47613+61])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1099,47613+58]..[1099,47613+61])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1099,47613+63]..[1099,47613+66])
                                                  Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1099,47613+63]..[1099,47613+66])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1100,47683+6]..[1102,47772+34])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1100,47683+10]..[1100,47683+13])
                                              Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1100,47683+10]..[1100,47683+13])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1100,47683+16]..[1100,47683+39])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1100,47683+16]..[1100,47683+32])
                                                Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1100,47683+16]..[1100,47683+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1100,47683+33]..[1100,47683+36])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1100,47683+33]..[1100,47683+36])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1100,47683+37]..[1100,47683+39])
                                                    Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1100,47683+37]..[1100,47683+39])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+6]..[1102,47772+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1101,47726+10]..[1101,47726+13])
                                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1101,47726+10]..[1101,47726+13])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+16]..[1101,47726+42])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+16]..[1101,47726+21])
                                                  Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1101,47726+16]..[1101,47726+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+22]..[1101,47726+25])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1101,47726+22]..[1101,47726+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+26]..[1101,47726+29])
                                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1101,47726+26]..[1101,47726+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+30]..[1101,47726+42])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+31]..[1101,47726+39])
                                                        Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1101,47726+31]..[1101,47726+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1101,47726+40]..[1101,47726+41])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1101,47726+40]..[1101,47726+41])
                                                      ]
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+6]..[1102,47772+34])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+6]..[1102,47772+14])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+7]..[1102,47772+10])
                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1102,47772+7]..[1102,47772+10])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+12]..[1102,47772+13])
                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1102,47772+12]..[1102,47772+13])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+16]..[1102,47772+19])
                                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1102,47772+16]..[1102,47772+19])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1102,47772+21]..[1102,47772+34])
                                                Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1102,47772+21]..[1102,47772+34])
                                            ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1104,47814+4]..[1120,48354+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1104,47814+8]..[1104,47814+21])
                                Ppat_var "for_last_body" (middle_end/flambda/inline_and_simplify.ml[1104,47814+8]..[1104,47814+21])
                              expression (middle_end/flambda/inline_and_simplify.ml[1104,47814+22]..[1105,47852+25]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1104,47814+22]..[1104,47814+30])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1104,47814+23]..[1104,47814+26])
                                      Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1104,47814+23]..[1104,47814+26])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1104,47814+28]..[1104,47814+29])
                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1104,47814+28]..[1104,47814+29])
                                  ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1104,47814+31]..[1105,47852+25]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1104,47814+31]..[1104,47814+35])
                                    Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1104,47814+31]..[1104,47814+35])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1105,47852+6]..[1105,47852+25])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1105,47852+6]..[1105,47852+14])
                                      Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1105,47852+6]..[1105,47852+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1105,47852+15]..[1105,47852+18])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1105,47852+15]..[1105,47852+18])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1105,47852+19]..[1105,47852+20])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1105,47852+19]..[1105,47852+20])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1105,47852+21]..[1105,47852+25])
                                          Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1105,47852+21]..[1105,47852+25])
                                    ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1107,47885+4]..[1120,48354+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1107,47885+8]..[1107,47885+28])
                                  Ppat_var "filter_defining_expr" (middle_end/flambda/inline_and_simplify.ml[1107,47885+8]..[1107,47885+28])
                                expression (middle_end/flambda/inline_and_simplify.ml[1107,47885+29]..[1114,48211+34]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1107,47885+29]..[1107,47885+30])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1107,47885+29]..[1107,47885+30])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1107,47885+31]..[1114,48211+34]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1107,47885+31]..[1107,47885+34])
                                      Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1107,47885+31]..[1107,47885+34])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1107,47885+35]..[1114,48211+34]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1107,47885+35]..[1107,47885+48])
                                        Ppat_var "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1107,47885+35]..[1107,47885+48])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1107,47885+49]..[1114,48211+34]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1107,47885+49]..[1107,47885+66])
                                          Ppat_var "free_vars_of_body" (middle_end/flambda/inline_and_simplify.ml[1107,47885+49]..[1107,47885+66])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1108,47954+6]..[1114,48211+34])
                                          Pexp_ifthenelse
                                          expression (middle_end/flambda/inline_and_simplify.ml[1108,47954+9]..[1108,47954+47])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1108,47954+9]..[1108,47954+25])
                                              Pexp_ident "Variable.Set.mem" (middle_end/flambda/inline_and_simplify.ml[1108,47954+9]..[1108,47954+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1108,47954+26]..[1108,47954+29])
                                                  Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1108,47954+26]..[1108,47954+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1108,47954+30]..[1108,47954+47])
                                                  Pexp_ident "free_vars_of_body" (middle_end/flambda/inline_and_simplify.ml[1108,47954+30]..[1108,47954+47])
                                            ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1109,48007+8]..[1109,48007+34])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1109,48007+8]..[1109,48007+9])
                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1109,48007+8]..[1109,48007+9])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1109,48007+11]..[1109,48007+14])
                                                Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1109,48007+11]..[1109,48007+14])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1109,48007+16]..[1109,48007+34])
                                                Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1109,48007+16]..[1109,48007+20])
                                                Some
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1109,48007+21]..[1109,48007+34])
                                                    Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1109,48007+21]..[1109,48007+34])
                                            ]
                                          Some
                                            expression (middle_end/flambda/inline_and_simplify.ml[1110,48042+11]..[1114,48211+34])
                                              Pexp_ifthenelse
                                              expression (middle_end/flambda/inline_and_simplify.ml[1110,48042+14]..[1110,48042+60])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1110,48042+14]..[1110,48042+46])
                                                  Pexp_ident "Effect_analysis.no_effects_named" (middle_end/flambda/inline_and_simplify.ml[1110,48042+14]..[1110,48042+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1110,48042+47]..[1110,48042+60])
                                                      Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1110,48042+47]..[1110,48042+60])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+8]..[1112,48179+20])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1111,48108+12]..[1111,48108+13])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1111,48108+12]..[1111,48108+13])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+16]..[1111,48108+67])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+16]..[1111,48108+29])
                                                        Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1111,48108+16]..[1111,48108+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+30]..[1111,48108+31])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1111,48108+30]..[1111,48108+31])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+32]..[1111,48108+67])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+33]..[1111,48108+52])
                                                              Pexp_ident "B.remove_code_named" (middle_end/flambda/inline_and_simplify.ml[1111,48108+33]..[1111,48108+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1111,48108+53]..[1111,48108+66])
                                                                  Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1111,48108+53]..[1111,48108+66])
                                                            ]
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1112,48179+8]..[1112,48179+20])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1112,48179+8]..[1112,48179+9])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1112,48179+8]..[1112,48179+9])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1112,48179+11]..[1112,48179+14])
                                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1112,48179+11]..[1112,48179+14])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1112,48179+16]..[1112,48179+20])
                                                      Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[1112,48179+16]..[1112,48179+20])
                                                      None
                                                  ]
                                              Some
                                                expression (middle_end/flambda/inline_and_simplify.ml[1114,48211+8]..[1114,48211+34])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1114,48211+8]..[1114,48211+9])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1114,48211+8]..[1114,48211+9])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1114,48211+11]..[1114,48211+14])
                                                      Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1114,48211+11]..[1114,48211+14])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1114,48211+16]..[1114,48211+34])
                                                      Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1114,48211+16]..[1114,48211+20])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1114,48211+21]..[1114,48211+34])
                                                          Pexp_ident "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1114,48211+21]..[1114,48211+34])
                                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1116,48253+4]..[1120,48354+27])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1116,48253+4]..[1116,48253+28])
                                Pexp_ident "Flambda.fold_lets_option" (middle_end/flambda/inline_and_simplify.ml[1116,48253+4]..[1116,48253+28])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1116,48253+29]..[1116,48253+33])
                                    Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1116,48253+29]..[1116,48253+33])
                                <arg>
                                Labelled "init"
                                  expression (middle_end/flambda/inline_and_simplify.ml[1117,48287+12]..[1117,48287+20])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[1117,48287+13]..[1117,48287+16])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1117,48287+13]..[1117,48287+16])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1117,48287+18]..[1117,48287+19])
                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1117,48287+18]..[1117,48287+19])
                                    ]
                                <arg>
                                Labelled "for_defining_expr"
                                  expression (middle_end/flambda/inline_and_simplify.ml[1118,48308+7]..[1118,48308+24])
                                    Pexp_ident "for_defining_expr" (middle_end/flambda/inline_and_simplify.ml[1118,48308+7]..[1118,48308+24])
                                <arg>
                                Labelled "for_last_body"
                                  expression (middle_end/flambda/inline_and_simplify.ml[1119,48333+7]..[1119,48333+20])
                                    Pexp_ident "for_last_body" (middle_end/flambda/inline_and_simplify.ml[1119,48333+7]..[1119,48333+20])
                                <arg>
                                Labelled "filter_defining_expr"
                                  expression (middle_end/flambda/inline_and_simplify.ml[1120,48354+7]..[1120,48354+27])
                                    Pexp_ident "filter_defining_expr" (middle_end/flambda/inline_and_simplify.ml[1120,48354+7]..[1120,48354+27])
                              ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+4]..[1121,48382+75])
                        Ppat_construct "Let_mutable" (middle_end/flambda/inline_and_simplify.ml[1121,48382+4]..[1121,48382+15])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+16]..[1121,48382+75])
                            Ppat_record Closed
                            [
                              "var" (middle_end/flambda/inline_and_simplify.ml[1121,48382+18]..[1121,48382+21])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+24]..[1121,48382+31])
                                  Ppat_var "mut_var" (middle_end/flambda/inline_and_simplify.ml[1121,48382+24]..[1121,48382+31])
                              "initial_value" (middle_end/flambda/inline_and_simplify.ml[1121,48382+33]..[1121,48382+46])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+49]..[1121,48382+52])
                                  Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1121,48382+49]..[1121,48382+52])
                              "body" (middle_end/flambda/inline_and_simplify.ml[1121,48382+54]..[1121,48382+58]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+54]..[1121,48382+58])
                                  Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1121,48382+54]..[1121,48382+58])
                              "contents_kind" (middle_end/flambda/inline_and_simplify.ml[1121,48382+60]..[1121,48382+73]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1121,48382+60]..[1121,48382+73])
                                  Ppat_var "contents_kind" (middle_end/flambda/inline_and_simplify.ml[1121,48382+60]..[1121,48382+73])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+4]..[1136,48972+8])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+4]..[1123,48533+26])
                          Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1123,48533+4]..[1123,48533+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+27]..[1123,48533+30])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1123,48533+27]..[1123,48533+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+31]..[1123,48533+34])
                              Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1123,48533+31]..[1123,48533+34])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+38]..[1136,48972+8])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1123,48533+43]..[1123,48533+46])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1123,48533+43]..[1123,48533+46])
                              expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+47]..[1136,48972+7]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1123,48533+47]..[1123,48533+50])
                                  Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1123,48533+47]..[1123,48533+50])
                                expression (middle_end/flambda/inline_and_simplify.ml[1123,48533+51]..[1136,48972+7]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1123,48533+51]..[1123,48533+62])
                                    Ppat_var "_var_approx" (middle_end/flambda/inline_and_simplify.ml[1123,48533+51]..[1123,48533+62])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1124,48599+6]..[1136,48972+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1124,48599+10]..[1124,48599+21])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1124,48599+10]..[1124,48599+17])
                                              Ppat_var "mut_var" (middle_end/flambda/inline_and_simplify.ml[1124,48599+10]..[1124,48599+17])
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1124,48599+19]..[1124,48599+21])
                                              Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1124,48599+19]..[1124,48599+21])
                                          ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+8]..[1125,48623+66])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+8]..[1125,48623+39])
                                            Pexp_ident "Freshening.add_mutable_variable" (middle_end/flambda/inline_and_simplify.ml[1125,48623+8]..[1125,48623+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+40]..[1125,48623+58])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+41]..[1125,48623+53])
                                                  Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1125,48623+41]..[1125,48623+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+54]..[1125,48623+57])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1125,48623+54]..[1125,48623+57])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1125,48623+59]..[1125,48623+66])
                                                Pexp_ident "mut_var" (middle_end/flambda/inline_and_simplify.ml[1125,48623+59]..[1125,48623+66])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1127,48699+6]..[1136,48972+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1127,48699+10]..[1127,48699+13])
                                            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1127,48699+10]..[1127,48699+13])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1127,48699+16]..[1127,48699+39])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1127,48699+16]..[1127,48699+32])
                                              Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1127,48699+16]..[1127,48699+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1127,48699+33]..[1127,48699+36])
                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1127,48699+33]..[1127,48699+36])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1127,48699+37]..[1127,48699+39])
                                                  Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1127,48699+37]..[1127,48699+39])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1128,48742+6]..[1136,48972+7])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1128,48742+10]..[1128,48742+17])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1128,48742+10]..[1128,48742+14])
                                                  Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1128,48742+10]..[1128,48742+14])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1128,48742+16]..[1128,48742+17])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1128,48742+16]..[1128,48742+17])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+8]..[1129,48762+75])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+8]..[1129,48762+16])
                                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1129,48762+8]..[1129,48762+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+17]..[1129,48762+68])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+18]..[1129,48762+31])
                                                      Pexp_ident "E.add_mutable" (middle_end/flambda/inline_and_simplify.ml[1129,48762+18]..[1129,48762+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+32]..[1129,48762+35])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1129,48762+32]..[1129,48762+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+36]..[1129,48762+43])
                                                          Pexp_ident "mut_var" (middle_end/flambda/inline_and_simplify.ml[1129,48762+36]..[1129,48762+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+44]..[1129,48762+67])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+45]..[1129,48762+60])
                                                            Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1129,48762+45]..[1129,48762+60])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+61]..[1129,48762+66])
                                                                Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1129,48762+61]..[1129,48762+66])
                                                                None
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+69]..[1129,48762+70])
                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1129,48762+69]..[1129,48762+70])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1129,48762+71]..[1129,48762+75])
                                                    Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1129,48762+71]..[1129,48762+75])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1131,48847+6]..[1136,48972+7])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[1131,48847+6]..[1135,48945+25])
                                              Pexp_construct "Flambda.Let_mutable" (middle_end/flambda/inline_and_simplify.ml[1131,48847+6]..[1131,48847+25])
                                              Some
                                                expression (middle_end/flambda/inline_and_simplify.ml[1132,48873+8]..[1135,48945+25])
                                                  Pexp_record
                                                  [
                                                    "var" (middle_end/flambda/inline_and_simplify.ml[1132,48873+10]..[1132,48873+13])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1132,48873+16]..[1132,48873+23])
                                                        Pexp_ident "mut_var" (middle_end/flambda/inline_and_simplify.ml[1132,48873+16]..[1132,48873+23])
                                                    "initial_value" (middle_end/flambda/inline_and_simplify.ml[1133,48898+10]..[1133,48898+23])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1133,48898+26]..[1133,48898+29])
                                                        Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1133,48898+26]..[1133,48898+29])
                                                    "body" (middle_end/flambda/inline_and_simplify.ml[1134,48929+10]..[1134,48929+14]) ghost
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1134,48929+10]..[1134,48929+14])
                                                        Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1134,48929+10]..[1134,48929+14])
                                                    "contents_kind" (middle_end/flambda/inline_and_simplify.ml[1135,48945+10]..[1135,48945+23]) ghost
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1135,48945+10]..[1135,48945+23])
                                                        Pexp_ident "contents_kind" (middle_end/flambda/inline_and_simplify.ml[1135,48945+10]..[1135,48945+23])
                                                  ]
                                                  None
                                            expression (middle_end/flambda/inline_and_simplify.ml[1136,48972+6]..[1136,48972+7])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1136,48972+6]..[1136,48972+7])
                                          ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1137,48981+4]..[1137,48981+24])
                        Ppat_construct "Let_rec" (middle_end/flambda/inline_and_simplify.ml[1137,48981+4]..[1137,48981+11])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1137,48981+12]..[1137,48981+24])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1137,48981+13]..[1137,48981+17])
                                Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1137,48981+13]..[1137,48981+17])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1137,48981+19]..[1137,48981+23])
                                Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1137,48981+19]..[1137,48981+23])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+4]..[1154,49611+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1138,49009+8]..[1138,49009+16])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1138,49009+8]..[1138,49009+12])
                                  Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1138,49009+8]..[1138,49009+12])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1138,49009+14]..[1138,49009+16])
                                  Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1138,49009+14]..[1138,49009+16])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+19]..[1138,49009+67])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+19]..[1138,49009+43])
                                Pexp_ident "Freshening.add_variables" (middle_end/flambda/inline_and_simplify.ml[1138,49009+19]..[1138,49009+43])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+44]..[1138,49009+62])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+45]..[1138,49009+57])
                                      Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1138,49009+45]..[1138,49009+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+58]..[1138,49009+61])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1138,49009+58]..[1138,49009+61])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1138,49009+63]..[1138,49009+67])
                                    Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1138,49009+63]..[1138,49009+67])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1139,49080+4]..[1154,49611+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1139,49080+8]..[1139,49080+11])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1139,49080+8]..[1139,49080+11])
                              expression (middle_end/flambda/inline_and_simplify.ml[1139,49080+14]..[1139,49080+37])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1139,49080+14]..[1139,49080+30])
                                  Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1139,49080+14]..[1139,49080+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1139,49080+31]..[1139,49080+34])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1139,49080+31]..[1139,49080+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1139,49080+35]..[1139,49080+37])
                                      Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1139,49080+35]..[1139,49080+37])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1140,49121+4]..[1154,49611+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1140,49121+8]..[1140,49121+15])
                                  Ppat_var "def_env" (middle_end/flambda/inline_and_simplify.ml[1140,49121+8]..[1140,49121+15])
                                expression (middle_end/flambda/inline_and_simplify.ml[1141,49139+6]..[1143,49239+16])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1141,49139+6]..[1141,49139+20])
                                    Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1141,49139+6]..[1141,49139+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1141,49139+21]..[1142,49187+51])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1141,49139+26]..[1141,49139+33])
                                          Ppat_var "env_acc" (middle_end/flambda/inline_and_simplify.ml[1141,49139+26]..[1141,49139+33])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1141,49139+34]..[1142,49187+50]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1141,49139+34]..[1141,49139+44])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1141,49139+35]..[1141,49139+37])
                                                Ppat_var "id" (middle_end/flambda/inline_and_simplify.ml[1141,49139+35]..[1141,49139+37])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1141,49139+39]..[1141,49139+43])
                                                Ppat_var "_lam" (middle_end/flambda/inline_and_simplify.ml[1141,49139+39]..[1141,49139+43])
                                            ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+10]..[1142,49187+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+10]..[1142,49187+15])
                                              Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1142,49187+10]..[1142,49187+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+16]..[1142,49187+23])
                                                  Pexp_ident "env_acc" (middle_end/flambda/inline_and_simplify.ml[1142,49187+16]..[1142,49187+23])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+24]..[1142,49187+26])
                                                  Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1142,49187+24]..[1142,49187+26])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+27]..[1142,49187+50])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+28]..[1142,49187+43])
                                                    Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1142,49187+28]..[1142,49187+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1142,49187+44]..[1142,49187+49])
                                                        Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1142,49187+44]..[1142,49187+49])
                                                        None
                                                  ]
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1143,49239+8]..[1143,49239+11])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1143,49239+8]..[1143,49239+11])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1143,49239+12]..[1143,49239+16])
                                        Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1143,49239+12]..[1143,49239+16])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1145,49263+4]..[1154,49611+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1145,49263+8]..[1145,49263+25])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1145,49263+8]..[1145,49263+12])
                                        Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1145,49263+8]..[1145,49263+12])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1145,49263+14]..[1145,49263+22])
                                        Ppat_var "body_env" (middle_end/flambda/inline_and_simplify.ml[1145,49263+14]..[1145,49263+22])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1145,49263+24]..[1145,49263+25])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1145,49263+24]..[1145,49263+25])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1146,49291+6]..[1151,49532+25])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1146,49291+6]..[1146,49291+21])
                                      Pexp_ident "List.fold_right" (middle_end/flambda/inline_and_simplify.ml[1146,49291+6]..[1146,49291+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1146,49291+22]..[1150,49504+27])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+27]..[1146,49291+36])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+28]..[1146,49291+30])
                                                Ppat_var "id" (middle_end/flambda/inline_and_simplify.ml[1146,49291+28]..[1146,49291+30])
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+32]..[1146,49291+35])
                                                Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1146,49291+32]..[1146,49291+35])
                                            ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1146,49291+37]..[1150,49504+26]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+37]..[1146,49291+55])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+38]..[1146,49291+42])
                                                  Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1146,49291+38]..[1146,49291+42])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+44]..[1146,49291+51])
                                                  Ppat_var "env_acc" (middle_end/flambda/inline_and_simplify.ml[1146,49291+44]..[1146,49291+51])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1146,49291+53]..[1146,49291+54])
                                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1146,49291+53]..[1146,49291+54])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+10]..[1150,49504+26])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1147,49350+14]..[1147,49350+20])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1147,49350+14]..[1147,49350+17])
                                                        Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1147,49350+14]..[1147,49350+17])
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1147,49350+19]..[1147,49350+20])
                                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1147,49350+19]..[1147,49350+20])
                                                    ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+23]..[1147,49350+51])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+23]..[1147,49350+37])
                                                      Pexp_ident "simplify_named" (middle_end/flambda/inline_and_simplify.ml[1147,49350+23]..[1147,49350+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+38]..[1147,49350+45])
                                                          Pexp_ident "def_env" (middle_end/flambda/inline_and_simplify.ml[1147,49350+38]..[1147,49350+45])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+46]..[1147,49350+47])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1147,49350+46]..[1147,49350+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1147,49350+48]..[1147,49350+51])
                                                          Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1147,49350+48]..[1147,49350+51])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+10]..[1150,49504+26])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1148,49405+14]..[1148,49405+18])
                                                      Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1148,49405+14]..[1148,49405+18])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+21]..[1148,49405+38])
                                                      Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1148,49405+31]..[1148,49405+33])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+21]..[1148,49405+38]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+21]..[1148,49405+30])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+22]..[1148,49405+24])
                                                                  Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1148,49405+22]..[1148,49405+24])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+26]..[1148,49405+29])
                                                                  Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1148,49405+26]..[1148,49405+29])
                                                              ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1148,49405+34]..[1148,49405+38])
                                                              Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1148,49405+34]..[1148,49405+38])
                                                          ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+10]..[1150,49504+26])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1149,49447+14]..[1149,49447+21])
                                                        Ppat_var "env_acc" (middle_end/flambda/inline_and_simplify.ml[1149,49447+14]..[1149,49447+21])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+24]..[1149,49447+53])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+24]..[1149,49447+29])
                                                          Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1149,49447+24]..[1149,49447+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+30]..[1149,49447+37])
                                                              Pexp_ident "env_acc" (middle_end/flambda/inline_and_simplify.ml[1149,49447+30]..[1149,49447+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+38]..[1149,49447+40])
                                                              Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1149,49447+38]..[1149,49447+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+41]..[1149,49447+53])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+42]..[1149,49447+50])
                                                                Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1149,49447+42]..[1149,49447+50])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1149,49447+51]..[1149,49447+52])
                                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1149,49447+51]..[1149,49447+52])
                                                              ]
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1150,49504+10]..[1150,49504+26])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1150,49504+10]..[1150,49504+14])
                                                        Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1150,49504+10]..[1150,49504+14])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1150,49504+16]..[1150,49504+23])
                                                        Pexp_ident "env_acc" (middle_end/flambda/inline_and_simplify.ml[1150,49504+16]..[1150,49504+23])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1150,49504+25]..[1150,49504+26])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1150,49504+25]..[1150,49504+26])
                                                    ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1151,49532+8]..[1151,49532+12])
                                          Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1151,49532+8]..[1151,49532+12])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1151,49532+13]..[1151,49532+25])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[1151,49532+14]..[1151,49532+16])
                                              Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1151,49532+14]..[1151,49532+16])
                                              None
                                            expression (middle_end/flambda/inline_and_simplify.ml[1151,49532+18]..[1151,49532+21])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1151,49532+18]..[1151,49532+21])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1151,49532+23]..[1151,49532+24])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1151,49532+23]..[1151,49532+24])
                                          ]
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+4]..[1154,49611+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1153,49565+8]..[1153,49565+15])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1153,49565+8]..[1153,49565+12])
                                          Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1153,49565+8]..[1153,49565+12])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1153,49565+14]..[1153,49565+15])
                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1153,49565+14]..[1153,49565+15])
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+18]..[1153,49565+42])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+18]..[1153,49565+26])
                                        Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1153,49565+18]..[1153,49565+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+27]..[1153,49565+35])
                                            Pexp_ident "body_env" (middle_end/flambda/inline_and_simplify.ml[1153,49565+27]..[1153,49565+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+36]..[1153,49565+37])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1153,49565+36]..[1153,49565+37])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1153,49565+38]..[1153,49565+42])
                                            Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1153,49565+38]..[1153,49565+42])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+4]..[1154,49611+27])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+4]..[1154,49611+24])
                                      Pexp_construct "Let_rec" (middle_end/flambda/inline_and_simplify.ml[1154,49611+4]..[1154,49611+11])
                                      Some
                                        expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+12]..[1154,49611+24])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+13]..[1154,49611+17])
                                              Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1154,49611+13]..[1154,49611+17])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+19]..[1154,49611+23])
                                              Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1154,49611+19]..[1154,49611+23])
                                          ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1154,49611+26]..[1154,49611+27])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1154,49611+26]..[1154,49611+27])
                                  ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1155,49639+4]..[1155,49639+26])
                        Ppat_construct "Static_raise" (middle_end/flambda/inline_and_simplify.ml[1155,49639+4]..[1155,49639+16])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1155,49639+17]..[1155,49639+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1155,49639+18]..[1155,49639+19])
                                Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[1155,49639+18]..[1155,49639+19])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1155,49639+21]..[1155,49639+25])
                                Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1155,49639+21]..[1155,49639+25])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+4]..[1159,49855+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1156,49669+8]..[1156,49669+9])
                              Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[1156,49669+8]..[1156,49669+9])
                            expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+12]..[1156,49669+66])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+12]..[1156,49669+45])
                                Pexp_ident "Freshening.apply_static_exception" (middle_end/flambda/inline_and_simplify.ml[1156,49669+12]..[1156,49669+45])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+46]..[1156,49669+64])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+47]..[1156,49669+59])
                                      Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1156,49669+47]..[1156,49669+59])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+60]..[1156,49669+63])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1156,49669+60]..[1156,49669+63])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1156,49669+65]..[1156,49669+66])
                                    Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1156,49669+65]..[1156,49669+66])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+4]..[1159,49855+51])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+4]..[1157,49739+27])
                            Pexp_ident "simplify_free_variables" (middle_end/flambda/inline_and_simplify.ml[1157,49739+4]..[1157,49739+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+28]..[1157,49739+31])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1157,49739+28]..[1157,49739+31])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+32]..[1157,49739+36])
                                Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1157,49739+32]..[1157,49739+36])
                            <arg>
                            Labelled "f"
                              expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+40]..[1159,49855+51])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1157,49739+45]..[1157,49739+49])
                                  Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[1157,49739+45]..[1157,49739+49])
                                expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+50]..[1159,49855+50]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1157,49739+50]..[1157,49739+54])
                                    Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1157,49739+50]..[1157,49739+54])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1157,49739+55]..[1159,49855+50]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1157,49739+55]..[1157,49739+68])
                                      Ppat_var "_args_approxs" (middle_end/flambda/inline_and_simplify.ml[1157,49739+55]..[1157,49739+68])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1158,49811+6]..[1159,49855+50])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1158,49811+10]..[1158,49811+11])
                                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1158,49811+10]..[1158,49811+11])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1158,49811+14]..[1158,49811+40])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1158,49811+14]..[1158,49811+36])
                                              Pexp_ident "R.use_static_exception" (middle_end/flambda/inline_and_simplify.ml[1158,49811+14]..[1158,49811+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1158,49811+37]..[1158,49811+38])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1158,49811+37]..[1158,49811+38])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1158,49811+39]..[1158,49811+40])
                                                  Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1158,49811+39]..[1158,49811+40])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+6]..[1159,49855+50])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+6]..[1159,49855+28])
                                            Pexp_construct "Static_raise" (middle_end/flambda/inline_and_simplify.ml[1159,49855+6]..[1159,49855+18])
                                            Some
                                              expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+19]..[1159,49855+28])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+20]..[1159,49855+21])
                                                    Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1159,49855+20]..[1159,49855+21])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+23]..[1159,49855+27])
                                                    Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1159,49855+23]..[1159,49855+27])
                                                ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+30]..[1159,49855+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+30]..[1159,49855+33])
                                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1159,49855+30]..[1159,49855+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+34]..[1159,49855+35])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1159,49855+34]..[1159,49855+35])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1159,49855+36]..[1159,49855+50])
                                                  Pexp_ident "A.value_bottom" (middle_end/flambda/inline_and_simplify.ml[1159,49855+36]..[1159,49855+50])
                                            ]
                                        ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+4]..[1160,49907+41])
                        Ppat_construct "Static_catch" (middle_end/flambda/inline_and_simplify.ml[1160,49907+4]..[1160,49907+16])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+17]..[1160,49907+41])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+18]..[1160,49907+19])
                                Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[1160,49907+18]..[1160,49907+19])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+21]..[1160,49907+25])
                                Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[1160,49907+21]..[1160,49907+25])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+27]..[1160,49907+31])
                                Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1160,49907+27]..[1160,49907+31])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1160,49907+33]..[1160,49907+40])
                                Ppat_var "handler" (middle_end/flambda/inline_and_simplify.ml[1160,49907+33]..[1160,49907+40])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1161,49952+4]..[1201,51656+7])
                        Pexp_match
                        expression (middle_end/flambda/inline_and_simplify.ml[1162,49962+12]..[1162,49962+16])
                          Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1162,49962+12]..[1162,49962+16])
                        [
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1163,49984+8]..[1163,49984+49])
                              Ppat_construct "Let" (middle_end/flambda/inline_and_simplify.ml[1163,49984+8]..[1163,49984+11])
                              Some
                                []
                                pattern (middle_end/flambda/inline_and_simplify.ml[1163,49984+12]..[1163,49984+49])
                                  Ppat_record Open
                                  [
                                    "var" (middle_end/flambda/inline_and_simplify.ml[1163,49984+14]..[1163,49984+17]) ghost
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1163,49984+14]..[1163,49984+17])
                                        Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1163,49984+14]..[1163,49984+17])
                                    "defining_expr" (middle_end/flambda/inline_and_simplify.ml[1163,49984+19]..[1163,49984+32])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1163,49984+35]..[1163,49984+38])
                                        Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1163,49984+35]..[1163,49984+38])
                                    "body" (middle_end/flambda/inline_and_simplify.ml[1163,49984+40]..[1163,49984+44]) ghost
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1163,49984+40]..[1163,49984+44])
                                        Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1163,49984+40]..[1163,49984+44])
                                  ]
                            <when>
                              expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+15]..[1164,50034+63])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+15]..[1164,50034+18])
                                  Pexp_ident "not" (middle_end/flambda/inline_and_simplify.ml[1164,50034+15]..[1164,50034+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+19]..[1164,50034+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+20]..[1164,50034+56])
                                        Pexp_ident "Flambda_utils.might_raise_static_exn" (middle_end/flambda/inline_and_simplify.ml[1164,50034+20]..[1164,50034+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+57]..[1164,50034+60])
                                            Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1164,50034+57]..[1164,50034+60])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1164,50034+61]..[1164,50034+62])
                                            Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1164,50034+61]..[1164,50034+62])
                                      ]
                                ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1165,50101+8]..[1166,50124+78])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1165,50101+8]..[1165,50101+16])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1165,50101+8]..[1165,50101+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1165,50101+17]..[1165,50101+20])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1165,50101+17]..[1165,50101+20])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1165,50101+21]..[1165,50101+22])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1165,50101+21]..[1165,50101+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+10]..[1166,50124+78])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+11]..[1166,50124+29])
                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[1166,50124+11]..[1166,50124+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+30]..[1166,50124+33])
                                          Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1166,50124+30]..[1166,50124+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+34]..[1166,50124+37])
                                          Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1166,50124+34]..[1166,50124+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+38]..[1166,50124+77])
                                          Pexp_construct "Static_catch" (middle_end/flambda/inline_and_simplify.ml[1166,50124+39]..[1166,50124+51])
                                          Some
                                            expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+52]..[1166,50124+76])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+53]..[1166,50124+54])
                                                  Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1166,50124+53]..[1166,50124+54])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+56]..[1166,50124+60])
                                                  Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[1166,50124+56]..[1166,50124+60])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+62]..[1166,50124+66])
                                                  Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1166,50124+62]..[1166,50124+66])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1166,50124+68]..[1166,50124+75])
                                                  Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1166,50124+68]..[1166,50124+75])
                                              ]
                                    ]
                              ]
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1167,50203+8]..[1167,50203+9])
                              Ppat_any
                            expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+8]..[1200,51644+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1168,50216+12]..[1168,50216+17])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1168,50216+12]..[1168,50216+13])
                                        Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[1168,50216+12]..[1168,50216+13])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1168,50216+15]..[1168,50216+17])
                                        Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1168,50216+15]..[1168,50216+17])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+20]..[1168,50216+72])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+20]..[1168,50216+51])
                                      Pexp_ident "Freshening.add_static_exception" (middle_end/flambda/inline_and_simplify.ml[1168,50216+20]..[1168,50216+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+52]..[1168,50216+70])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+53]..[1168,50216+65])
                                            Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1168,50216+53]..[1168,50216+65])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+66]..[1168,50216+69])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1168,50216+66]..[1168,50216+69])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1168,50216+71]..[1168,50216+72])
                                          Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1168,50216+71]..[1168,50216+72])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1169,50292+8]..[1200,51644+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1169,50292+12]..[1169,50292+15])
                                      Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1169,50292+12]..[1169,50292+15])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1169,50292+18]..[1169,50292+41])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1169,50292+18]..[1169,50292+34])
                                        Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1169,50292+18]..[1169,50292+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1169,50292+35]..[1169,50292+38])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1169,50292+35]..[1169,50292+38])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1169,50292+39]..[1169,50292+41])
                                            Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1169,50292+39]..[1169,50292+41])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+8]..[1200,51644+11])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1170,50337+12]..[1170,50337+19])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1170,50337+12]..[1170,50337+16])
                                            Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1170,50337+12]..[1170,50337+16])
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1170,50337+18]..[1170,50337+19])
                                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1170,50337+18]..[1170,50337+19])
                                        ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+22]..[1170,50337+41])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+22]..[1170,50337+30])
                                          Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1170,50337+22]..[1170,50337+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+31]..[1170,50337+34])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1170,50337+31]..[1170,50337+34])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+35]..[1170,50337+36])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1170,50337+35]..[1170,50337+36])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1170,50337+37]..[1170,50337+41])
                                              Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1170,50337+37]..[1170,50337+41])
                                        ]
                                  ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+8]..[1200,51644+11])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+11]..[1173,50492+72])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+11]..[1173,50492+14])
                                        Pexp_ident "not" (middle_end/flambda/inline_and_simplify.ml[1173,50492+11]..[1173,50492+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+15]..[1173,50492+72])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+16]..[1173,50492+40])
                                              Pexp_ident "Static_exception.Set.mem" (middle_end/flambda/inline_and_simplify.ml[1173,50492+16]..[1173,50492+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+41]..[1173,50492+42])
                                                  Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1173,50492+41]..[1173,50492+42])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+43]..[1173,50492+71])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+44]..[1173,50492+68])
                                                    Pexp_ident "R.used_static_exceptions" (middle_end/flambda/inline_and_simplify.ml[1173,50492+44]..[1173,50492+68])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1173,50492+69]..[1173,50492+70])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1173,50492+69]..[1173,50492+70])
                                                  ]
                                            ]
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1175,50651+10]..[1175,50651+17])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/inline_and_simplify.ml[1175,50651+10]..[1175,50651+14])
                                          Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1175,50651+10]..[1175,50651+14])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1175,50651+16]..[1175,50651+17])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1175,50651+16]..[1175,50651+17])
                                      ]
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[1176,50669+13]..[1200,51644+11])
                                        Pexp_match
                                        expression (middle_end/flambda/inline_and_simplify.ml[1177,50688+16]..[1177,50688+34])
                                          Pexp_constraint
                                          expression (middle_end/flambda/inline_and_simplify.ml[1177,50688+17]..[1177,50688+21])
                                            Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1177,50688+17]..[1177,50688+21])
                                          core_type (middle_end/flambda/inline_and_simplify.ml[1177,50688+24]..[1177,50688+33])
                                            Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[1177,50688+24]..[1177,50688+33])
                                            []
                                        [
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1178,50728+12]..[1178,50728+34])
                                              Ppat_construct "Static_raise" (middle_end/flambda/inline_and_simplify.ml[1178,50728+12]..[1178,50728+24])
                                              Some
                                                []
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1178,50728+25]..[1178,50728+34])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1178,50728+26]..[1178,50728+27])
                                                      Ppat_var "j" (middle_end/flambda/inline_and_simplify.ml[1178,50728+26]..[1178,50728+27])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1178,50728+29]..[1178,50728+33])
                                                      Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1178,50728+29]..[1178,50728+33])
                                                  ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+12]..[1186,51051+34])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+12]..[1179,50766+47])
                                                Pexp_assert
                                                expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+19]..[1179,50766+47])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+20]..[1179,50766+42])
                                                    Pexp_ident "Static_exception.equal" (middle_end/flambda/inline_and_simplify.ml[1179,50766+20]..[1179,50766+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+43]..[1179,50766+44])
                                                        Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1179,50766+43]..[1179,50766+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1179,50766+45]..[1179,50766+46])
                                                        Pexp_ident "j" (middle_end/flambda/inline_and_simplify.ml[1179,50766+45]..[1179,50766+46])
                                                  ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1180,50815+12]..[1186,51051+34])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1180,50815+16]..[1180,50815+23])
                                                      Ppat_var "handler" (middle_end/flambda/inline_and_simplify.ml[1180,50815+16]..[1180,50815+23])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1181,50841+14]..[1183,50956+33])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1181,50841+14]..[1181,50841+29])
                                                        Pexp_ident "List.fold_left2" (middle_end/flambda/inline_and_simplify.ml[1181,50841+14]..[1181,50841+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1181,50841+30]..[1182,50892+63])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1181,50841+35]..[1181,50841+39])
                                                              Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1181,50841+35]..[1181,50841+39])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1181,50841+40]..[1182,50892+62]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1181,50841+40]..[1181,50841+43])
                                                                Ppat_var "var" (middle_end/flambda/inline_and_simplify.ml[1181,50841+40]..[1181,50841+43])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1181,50841+44]..[1182,50892+62]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1181,50841+44]..[1181,50841+47])
                                                                  Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1181,50841+44]..[1181,50841+47])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+18]..[1182,50892+62])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+18]..[1182,50892+36])
                                                                    Pexp_ident "Flambda.create_let" (middle_end/flambda/inline_and_simplify.ml[1182,50892+18]..[1182,50892+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+37]..[1182,50892+40])
Pexp_ident "var" (middle_end/flambda/inline_and_simplify.ml[1182,50892+37]..[1182,50892+40])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+41]..[1182,50892+57])
Pexp_construct "Expr" (middle_end/flambda/inline_and_simplify.ml[1182,50892+42]..[1182,50892+46])
Some
  expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+47]..[1182,50892+56])
    Pexp_construct "Var" (middle_end/flambda/inline_and_simplify.ml[1182,50892+48]..[1182,50892+51])
    Some
      expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+52]..[1182,50892+55])
        Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1182,50892+52]..[1182,50892+55])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1182,50892+58]..[1182,50892+62])
Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1182,50892+58]..[1182,50892+62])
                                                                  ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1183,50956+16]..[1183,50956+23])
                                                            Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1183,50956+16]..[1183,50956+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1183,50956+24]..[1183,50956+28])
                                                            Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[1183,50956+24]..[1183,50956+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1183,50956+29]..[1183,50956+33])
                                                            Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1183,50956+29]..[1183,50956+33])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1185,51005+12]..[1186,51051+34])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1185,51005+16]..[1185,51005+17])
                                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1185,51005+16]..[1185,51005+17])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1185,51005+20]..[1185,51005+42])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1185,51005+20]..[1185,51005+38])
                                                          Pexp_ident "R.exit_scope_catch" (middle_end/flambda/inline_and_simplify.ml[1185,51005+20]..[1185,51005+38])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1185,51005+39]..[1185,51005+40])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1185,51005+39]..[1185,51005+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1185,51005+41]..[1185,51005+42])
                                                              Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1185,51005+41]..[1185,51005+42])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1186,51051+12]..[1186,51051+34])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1186,51051+12]..[1186,51051+20])
                                                      Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1186,51051+12]..[1186,51051+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1186,51051+21]..[1186,51051+24])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1186,51051+21]..[1186,51051+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1186,51051+25]..[1186,51051+26])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1186,51051+25]..[1186,51051+26])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1186,51051+27]..[1186,51051+34])
                                                          Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1186,51051+27]..[1186,51051+34])
                                                    ]
                                          <case>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1187,51086+12]..[1187,51086+13])
                                              Ppat_any
                                            expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+12]..[1199,51603+40])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1188,51103+16]..[1188,51103+24])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1188,51103+16]..[1188,51103+20])
                                                        Ppat_var "vars" (middle_end/flambda/inline_and_simplify.ml[1188,51103+16]..[1188,51103+20])
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1188,51103+22]..[1188,51103+24])
                                                        Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1188,51103+22]..[1188,51103+24])
                                                    ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+27]..[1188,51103+76])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+27]..[1188,51103+52])
                                                      Pexp_ident "Freshening.add_variables'" (middle_end/flambda/inline_and_simplify.ml[1188,51103+27]..[1188,51103+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+53]..[1188,51103+71])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+54]..[1188,51103+66])
                                                            Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1188,51103+54]..[1188,51103+66])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+67]..[1188,51103+70])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1188,51103+67]..[1188,51103+70])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1188,51103+72]..[1188,51103+76])
                                                          Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[1188,51103+72]..[1188,51103+76])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1189,51183+12]..[1199,51603+40])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1189,51183+16]..[1189,51183+22])
                                                      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1189,51183+16]..[1189,51183+22])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1189,51183+25]..[1189,51183+35])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1189,51183+25]..[1189,51183+33])
                                                        Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1189,51183+25]..[1189,51183+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1189,51183+34]..[1189,51183+35])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1189,51183+34]..[1189,51183+35])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1190,51222+12]..[1199,51603+40])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1190,51222+16]..[1190,51222+19])
                                                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1190,51222+16]..[1190,51222+19])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1191,51244+14]..[1193,51344+46])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1191,51244+14]..[1191,51244+28])
                                                          Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1191,51244+14]..[1191,51244+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1191,51244+29]..[1192,51288+55])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1191,51244+34]..[1191,51244+37])
                                                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1191,51244+34]..[1191,51244+37])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1191,51244+38]..[1192,51288+54]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1191,51244+38]..[1191,51244+40])
                                                                  Ppat_var "id" (middle_end/flambda/inline_and_simplify.ml[1191,51244+38]..[1191,51244+40])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+18]..[1192,51288+54])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+18]..[1192,51288+23])
                                                                    Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1192,51288+18]..[1192,51288+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+24]..[1192,51288+27])
Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1192,51288+24]..[1192,51288+27])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+28]..[1192,51288+30])
Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1192,51288+28]..[1192,51288+30])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+31]..[1192,51288+54])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+32]..[1192,51288+47])
  Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1192,51288+32]..[1192,51288+47])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[1192,51288+48]..[1192,51288+53])
      Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1192,51288+48]..[1192,51288+53])
      None
]
                                                                  ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1193,51344+16]..[1193,51344+41])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1193,51344+17]..[1193,51344+33])
                                                                Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1193,51344+17]..[1193,51344+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1193,51344+34]..[1193,51344+37])
                                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1193,51344+34]..[1193,51344+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1193,51344+38]..[1193,51344+40])
                                                                    Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1193,51344+38]..[1193,51344+40])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1193,51344+42]..[1193,51344+46])
                                                              Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[1193,51344+42]..[1193,51344+46])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1195,51406+12]..[1199,51603+40])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1195,51406+16]..[1195,51406+19])
                                                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1195,51406+16]..[1195,51406+19])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1195,51406+22]..[1195,51406+41])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1195,51406+22]..[1195,51406+37])
                                                            Pexp_ident "E.inside_branch" (middle_end/flambda/inline_and_simplify.ml[1195,51406+22]..[1195,51406+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1195,51406+38]..[1195,51406+41])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1195,51406+38]..[1195,51406+41])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+12]..[1199,51603+40])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1196,51451+16]..[1196,51451+26])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1196,51451+16]..[1196,51451+23])
                                                                Ppat_var "handler" (middle_end/flambda/inline_and_simplify.ml[1196,51451+16]..[1196,51451+23])
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1196,51451+25]..[1196,51451+26])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1196,51451+25]..[1196,51451+26])
                                                            ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+29]..[1196,51451+51])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+29]..[1196,51451+37])
                                                              Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1196,51451+29]..[1196,51451+37])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+38]..[1196,51451+41])
                                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1196,51451+38]..[1196,51451+41])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+42]..[1196,51451+43])
                                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1196,51451+42]..[1196,51451+43])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1196,51451+44]..[1196,51451+51])
                                                                  Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1196,51451+44]..[1196,51451+51])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1197,51506+12]..[1199,51603+40])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1197,51506+16]..[1197,51506+17])
                                                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1197,51506+16]..[1197,51506+17])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1197,51506+20]..[1197,51506+42])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1197,51506+20]..[1197,51506+38])
                                                                Pexp_ident "R.exit_scope_catch" (middle_end/flambda/inline_and_simplify.ml[1197,51506+20]..[1197,51506+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1197,51506+39]..[1197,51506+40])
                                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1197,51506+39]..[1197,51506+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1197,51506+41]..[1197,51506+42])
                                                                    Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1197,51506+41]..[1197,51506+42])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+12]..[1199,51603+40])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+12]..[1198,51552+49])
                                                              Pexp_construct "Static_catch" (middle_end/flambda/inline_and_simplify.ml[1198,51552+12]..[1198,51552+24])
                                                              Some
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+25]..[1198,51552+49])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+26]..[1198,51552+27])
                                                                      Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1198,51552+26]..[1198,51552+27])
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+29]..[1198,51552+33])
                                                                      Pexp_ident "vars" (middle_end/flambda/inline_and_simplify.ml[1198,51552+29]..[1198,51552+33])
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+35]..[1198,51552+39])
                                                                      Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1198,51552+35]..[1198,51552+39])
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1198,51552+41]..[1198,51552+48])
                                                                      Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1198,51552+41]..[1198,51552+48])
                                                                  ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1199,51603+14]..[1199,51603+40])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1199,51603+14]..[1199,51603+27])
                                                                Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1199,51603+14]..[1199,51603+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1199,51603+28]..[1199,51603+29])
                                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1199,51603+28]..[1199,51603+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1199,51603+30]..[1199,51603+33])
                                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1199,51603+30]..[1199,51603+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1199,51603+34]..[1199,51603+40])
                                                                    Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1199,51603+34]..[1199,51603+40])
                                                              ]
                                                          ]
                                        ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1202,51664+4]..[1202,51664+32])
                        Ppat_construct "Try_with" (middle_end/flambda/inline_and_simplify.ml[1202,51664+4]..[1202,51664+12])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1202,51664+13]..[1202,51664+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1202,51664+14]..[1202,51664+18])
                                Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1202,51664+14]..[1202,51664+18])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1202,51664+20]..[1202,51664+22])
                                Ppat_var "id" (middle_end/flambda/inline_and_simplify.ml[1202,51664+20]..[1202,51664+22])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1202,51664+24]..[1202,51664+31])
                                Ppat_var "handler" (middle_end/flambda/inline_and_simplify.ml[1202,51664+24]..[1202,51664+31])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+4]..[1208,51967+63])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1203,51700+8]..[1203,51700+15])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1203,51700+8]..[1203,51700+12])
                                  Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1203,51700+8]..[1203,51700+12])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1203,51700+14]..[1203,51700+15])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1203,51700+14]..[1203,51700+15])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+18]..[1203,51700+37])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+18]..[1203,51700+26])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1203,51700+18]..[1203,51700+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+27]..[1203,51700+30])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1203,51700+27]..[1203,51700+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+31]..[1203,51700+32])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1203,51700+31]..[1203,51700+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1203,51700+33]..[1203,51700+37])
                                    Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1203,51700+33]..[1203,51700+37])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+4]..[1208,51967+63])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1204,51741+8]..[1204,51741+14])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1204,51741+8]..[1204,51741+10])
                                    Ppat_var "id" (middle_end/flambda/inline_and_simplify.ml[1204,51741+8]..[1204,51741+10])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1204,51741+12]..[1204,51741+14])
                                    Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1204,51741+12]..[1204,51741+14])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+17]..[1204,51741+62])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+17]..[1204,51741+40])
                                  Pexp_ident "Freshening.add_variable" (middle_end/flambda/inline_and_simplify.ml[1204,51741+17]..[1204,51741+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+41]..[1204,51741+59])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+42]..[1204,51741+54])
                                        Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1204,51741+42]..[1204,51741+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+55]..[1204,51741+58])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1204,51741+55]..[1204,51741+58])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1204,51741+60]..[1204,51741+62])
                                      Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1204,51741+60]..[1204,51741+62])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+4]..[1208,51967+63])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1205,51807+8]..[1205,51807+11])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1205,51807+8]..[1205,51807+11])
                                expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+14]..[1205,51807+72])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+14]..[1205,51807+19])
                                    Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1205,51807+14]..[1205,51807+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+20]..[1205,51807+45])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+21]..[1205,51807+37])
                                          Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1205,51807+21]..[1205,51807+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+38]..[1205,51807+41])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1205,51807+38]..[1205,51807+41])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+42]..[1205,51807+44])
                                              Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1205,51807+42]..[1205,51807+44])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+46]..[1205,51807+48])
                                        Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1205,51807+46]..[1205,51807+48])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+49]..[1205,51807+72])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+50]..[1205,51807+65])
                                          Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1205,51807+50]..[1205,51807+65])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1205,51807+66]..[1205,51807+71])
                                              Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1205,51807+66]..[1205,51807+71])
                                              None
                                        ]
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1206,51883+4]..[1208,51967+63])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1206,51883+8]..[1206,51883+11])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1206,51883+8]..[1206,51883+11])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1206,51883+14]..[1206,51883+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1206,51883+14]..[1206,51883+29])
                                      Pexp_ident "E.inside_branch" (middle_end/flambda/inline_and_simplify.ml[1206,51883+14]..[1206,51883+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1206,51883+30]..[1206,51883+33])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1206,51883+30]..[1206,51883+33])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+4]..[1208,51967+63])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1207,51920+8]..[1207,51920+18])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1207,51920+8]..[1207,51920+15])
                                          Ppat_var "handler" (middle_end/flambda/inline_and_simplify.ml[1207,51920+8]..[1207,51920+15])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1207,51920+17]..[1207,51920+18])
                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1207,51920+17]..[1207,51920+18])
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+21]..[1207,51920+43])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+21]..[1207,51920+29])
                                        Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1207,51920+21]..[1207,51920+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+30]..[1207,51920+33])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1207,51920+30]..[1207,51920+33])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+34]..[1207,51920+35])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1207,51920+34]..[1207,51920+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1207,51920+36]..[1207,51920+43])
                                            Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1207,51920+36]..[1207,51920+43])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+4]..[1208,51967+63])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+4]..[1208,51967+32])
                                      Pexp_construct "Try_with" (middle_end/flambda/inline_and_simplify.ml[1208,51967+4]..[1208,51967+12])
                                      Some
                                        expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+13]..[1208,51967+32])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+14]..[1208,51967+18])
                                              Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1208,51967+14]..[1208,51967+18])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+20]..[1208,51967+22])
                                              Pexp_ident "id" (middle_end/flambda/inline_and_simplify.ml[1208,51967+20]..[1208,51967+22])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+24]..[1208,51967+31])
                                              Pexp_ident "handler" (middle_end/flambda/inline_and_simplify.ml[1208,51967+24]..[1208,51967+31])
                                          ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+34]..[1208,51967+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+34]..[1208,51967+37])
                                        Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1208,51967+34]..[1208,51967+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+38]..[1208,51967+39])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1208,51967+38]..[1208,51967+39])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+40]..[1208,51967+63])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+41]..[1208,51967+56])
                                              Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1208,51967+41]..[1208,51967+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1208,51967+57]..[1208,51967+62])
                                                  Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1208,51967+57]..[1208,51967+62])
                                                  None
                                            ]
                                      ]
                                  ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1209,52031+4]..[1209,52031+35])
                        Ppat_construct "If_then_else" (middle_end/flambda/inline_and_simplify.ml[1209,52031+4]..[1209,52031+16])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1209,52031+17]..[1209,52031+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1209,52031+18]..[1209,52031+21])
                                Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1209,52031+18]..[1209,52031+21])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1209,52031+23]..[1209,52031+27])
                                Ppat_var "ifso" (middle_end/flambda/inline_and_simplify.ml[1209,52031+23]..[1209,52031+27])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1209,52031+29]..[1209,52031+34])
                                Ppat_var "ifnot" (middle_end/flambda/inline_and_simplify.ml[1209,52031+29]..[1209,52031+34])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+4]..[1229,52963+10])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+4]..[1213,52262+26])
                          Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1213,52262+4]..[1213,52262+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+27]..[1213,52262+30])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1213,52262+27]..[1213,52262+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+31]..[1213,52262+34])
                              Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1213,52262+31]..[1213,52262+34])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+38]..[1229,52963+10])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1213,52262+43]..[1213,52262+46])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1213,52262+43]..[1213,52262+46])
                              expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+47]..[1229,52963+9]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1213,52262+47]..[1213,52262+50])
                                  Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1213,52262+47]..[1213,52262+50])
                                expression (middle_end/flambda/inline_and_simplify.ml[1213,52262+51]..[1229,52963+9]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1213,52262+51]..[1213,52262+61])
                                    Ppat_var "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1213,52262+51]..[1213,52262+61])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1214,52327+6]..[1229,52963+9])
                                    Pexp_match
                                    expression (middle_end/flambda/inline_and_simplify.ml[1214,52327+18]..[1214,52327+34])
                                      Pexp_field
                                      expression (middle_end/flambda/inline_and_simplify.ml[1214,52327+18]..[1214,52327+28])
                                        Pexp_ident "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1214,52327+18]..[1214,52327+28])
                                      "descr" (middle_end/flambda/inline_and_simplify.ml[1214,52327+29]..[1214,52327+34])
                                    [
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1215,52367+8]..[1215,52367+19])
                                          Ppat_construct "Value_int" (middle_end/flambda/inline_and_simplify.ml[1215,52367+8]..[1215,52367+17])
                                          Some
                                            []
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1215,52367+18]..[1215,52367+19])
                                              Ppat_constant PConst_int (0,None)
                                        expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+8]..[1217,52475+46])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1216,52428+12]..[1216,52428+20])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1216,52428+12]..[1216,52428+17])
                                                    Ppat_var "ifnot" (middle_end/flambda/inline_and_simplify.ml[1216,52428+12]..[1216,52428+17])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1216,52428+19]..[1216,52428+20])
                                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1216,52428+19]..[1216,52428+20])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+23]..[1216,52428+43])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+23]..[1216,52428+31])
                                                  Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1216,52428+23]..[1216,52428+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+32]..[1216,52428+35])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1216,52428+32]..[1216,52428+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+36]..[1216,52428+37])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1216,52428+36]..[1216,52428+37])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1216,52428+38]..[1216,52428+43])
                                                      Pexp_ident "ifnot" (middle_end/flambda/inline_and_simplify.ml[1216,52428+38]..[1216,52428+43])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+8]..[1217,52475+46])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+8]..[1217,52475+13])
                                                Pexp_ident "ifnot" (middle_end/flambda/inline_and_simplify.ml[1217,52475+8]..[1217,52475+13])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+15]..[1217,52475+46])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+15]..[1217,52475+28])
                                                  Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1217,52475+15]..[1217,52475+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+29]..[1217,52475+30])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1217,52475+29]..[1217,52475+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1217,52475+31]..[1217,52475+46])
                                                      Pexp_ident "B.remove_branch" (middle_end/flambda/inline_and_simplify.ml[1217,52475+31]..[1217,52475+46])
                                                ]
                                            ]
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1218,52522+8]..[1219,52542+21])
                                          Ppat_or
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1218,52522+8]..[1218,52522+19])
                                            Ppat_construct "Value_int" (middle_end/flambda/inline_and_simplify.ml[1218,52522+8]..[1218,52522+17])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1218,52522+18]..[1218,52522+19])
                                                Ppat_any
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1219,52542+8]..[1219,52542+21])
                                            Ppat_construct "Value_block" (middle_end/flambda/inline_and_simplify.ml[1219,52542+8]..[1219,52542+19])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1219,52542+20]..[1219,52542+21])
                                                Ppat_any
                                        expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+8]..[1221,52648+45])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1220,52603+12]..[1220,52603+19])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1220,52603+12]..[1220,52603+16])
                                                    Ppat_var "ifso" (middle_end/flambda/inline_and_simplify.ml[1220,52603+12]..[1220,52603+16])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1220,52603+18]..[1220,52603+19])
                                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1220,52603+18]..[1220,52603+19])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+22]..[1220,52603+41])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+22]..[1220,52603+30])
                                                  Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1220,52603+22]..[1220,52603+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+31]..[1220,52603+34])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1220,52603+31]..[1220,52603+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+35]..[1220,52603+36])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1220,52603+35]..[1220,52603+36])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1220,52603+37]..[1220,52603+41])
                                                      Pexp_ident "ifso" (middle_end/flambda/inline_and_simplify.ml[1220,52603+37]..[1220,52603+41])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+8]..[1221,52648+45])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+8]..[1221,52648+12])
                                                Pexp_ident "ifso" (middle_end/flambda/inline_and_simplify.ml[1221,52648+8]..[1221,52648+12])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+14]..[1221,52648+45])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+14]..[1221,52648+27])
                                                  Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1221,52648+14]..[1221,52648+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+28]..[1221,52648+29])
                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1221,52648+28]..[1221,52648+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1221,52648+30]..[1221,52648+45])
                                                      Pexp_ident "B.remove_branch" (middle_end/flambda/inline_and_simplify.ml[1221,52648+30]..[1221,52648+45])
                                                ]
                                            ]
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1222,52694+8]..[1222,52694+9])
                                          Ppat_any
                                        expression (middle_end/flambda/inline_and_simplify.ml[1223,52707+8]..[1228,52921+41])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1223,52707+12]..[1223,52707+15])
                                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1223,52707+12]..[1223,52707+15])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1223,52707+18]..[1223,52707+37])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1223,52707+18]..[1223,52707+33])
                                                  Pexp_ident "E.inside_branch" (middle_end/flambda/inline_and_simplify.ml[1223,52707+18]..[1223,52707+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1223,52707+34]..[1223,52707+37])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1223,52707+34]..[1223,52707+37])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+8]..[1228,52921+41])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1224,52748+12]..[1224,52748+19])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1224,52748+12]..[1224,52748+16])
                                                      Ppat_var "ifso" (middle_end/flambda/inline_and_simplify.ml[1224,52748+12]..[1224,52748+16])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1224,52748+18]..[1224,52748+19])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1224,52748+18]..[1224,52748+19])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+22]..[1224,52748+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+22]..[1224,52748+30])
                                                    Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1224,52748+22]..[1224,52748+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+31]..[1224,52748+34])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1224,52748+31]..[1224,52748+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+35]..[1224,52748+36])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1224,52748+35]..[1224,52748+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1224,52748+37]..[1224,52748+41])
                                                        Pexp_ident "ifso" (middle_end/flambda/inline_and_simplify.ml[1224,52748+37]..[1224,52748+41])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1225,52793+8]..[1228,52921+41])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1225,52793+12]..[1225,52793+23])
                                                    Ppat_var "ifso_approx" (middle_end/flambda/inline_and_simplify.ml[1225,52793+12]..[1225,52793+23])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1225,52793+26]..[1225,52793+36])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1225,52793+26]..[1225,52793+34])
                                                      Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1225,52793+26]..[1225,52793+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1225,52793+35]..[1225,52793+36])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1225,52793+35]..[1225,52793+36])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+8]..[1228,52921+41])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1226,52833+12]..[1226,52833+20])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1226,52833+12]..[1226,52833+17])
                                                          Ppat_var "ifnot" (middle_end/flambda/inline_and_simplify.ml[1226,52833+12]..[1226,52833+17])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1226,52833+19]..[1226,52833+20])
                                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1226,52833+19]..[1226,52833+20])
                                                      ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+23]..[1226,52833+43])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+23]..[1226,52833+31])
                                                        Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1226,52833+23]..[1226,52833+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+32]..[1226,52833+35])
                                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1226,52833+32]..[1226,52833+35])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+36]..[1226,52833+37])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1226,52833+36]..[1226,52833+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1226,52833+38]..[1226,52833+43])
                                                            Pexp_ident "ifnot" (middle_end/flambda/inline_and_simplify.ml[1226,52833+38]..[1226,52833+43])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+8]..[1228,52921+41])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+8]..[1227,52880+39])
                                                      Pexp_construct "If_then_else" (middle_end/flambda/inline_and_simplify.ml[1227,52880+8]..[1227,52880+20])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+21]..[1227,52880+39])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+22]..[1227,52880+25])
                                                              Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1227,52880+22]..[1227,52880+25])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+27]..[1227,52880+31])
                                                              Pexp_ident "ifso" (middle_end/flambda/inline_and_simplify.ml[1227,52880+27]..[1227,52880+31])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1227,52880+33]..[1227,52880+38])
                                                              Pexp_ident "ifnot" (middle_end/flambda/inline_and_simplify.ml[1227,52880+33]..[1227,52880+38])
                                                          ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1228,52921+10]..[1228,52921+41])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1228,52921+10]..[1228,52921+23])
                                                        Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1228,52921+10]..[1228,52921+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1228,52921+24]..[1228,52921+25])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1228,52921+24]..[1228,52921+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1228,52921+26]..[1228,52921+29])
                                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1228,52921+26]..[1228,52921+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1228,52921+30]..[1228,52921+41])
                                                            Pexp_ident "ifso_approx" (middle_end/flambda/inline_and_simplify.ml[1228,52921+30]..[1228,52921+41])
                                                      ]
                                                  ]
                                    ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1230,52974+4]..[1230,52974+22])
                        Ppat_construct "While" (middle_end/flambda/inline_and_simplify.ml[1230,52974+4]..[1230,52974+9])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1230,52974+10]..[1230,52974+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1230,52974+11]..[1230,52974+15])
                                Ppat_var "cond" (middle_end/flambda/inline_and_simplify.ml[1230,52974+11]..[1230,52974+15])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1230,52974+17]..[1230,52974+21])
                                Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1230,52974+17]..[1230,52974+21])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+4]..[1233,53082+53])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1231,53000+8]..[1231,53000+15])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1231,53000+8]..[1231,53000+12])
                                  Ppat_var "cond" (middle_end/flambda/inline_and_simplify.ml[1231,53000+8]..[1231,53000+12])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1231,53000+14]..[1231,53000+15])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1231,53000+14]..[1231,53000+15])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+18]..[1231,53000+37])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+18]..[1231,53000+26])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1231,53000+18]..[1231,53000+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+27]..[1231,53000+30])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1231,53000+27]..[1231,53000+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+31]..[1231,53000+32])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1231,53000+31]..[1231,53000+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1231,53000+33]..[1231,53000+37])
                                    Pexp_ident "cond" (middle_end/flambda/inline_and_simplify.ml[1231,53000+33]..[1231,53000+37])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+4]..[1233,53082+53])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1232,53041+8]..[1232,53041+15])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1232,53041+8]..[1232,53041+12])
                                    Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1232,53041+8]..[1232,53041+12])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1232,53041+14]..[1232,53041+15])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1232,53041+14]..[1232,53041+15])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+18]..[1232,53041+37])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+18]..[1232,53041+26])
                                  Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1232,53041+18]..[1232,53041+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+27]..[1232,53041+30])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1232,53041+27]..[1232,53041+30])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+31]..[1232,53041+32])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1232,53041+31]..[1232,53041+32])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1232,53041+33]..[1232,53041+37])
                                      Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1232,53041+33]..[1232,53041+37])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+4]..[1233,53082+53])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+4]..[1233,53082+22])
                                Pexp_construct "While" (middle_end/flambda/inline_and_simplify.ml[1233,53082+4]..[1233,53082+9])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+10]..[1233,53082+22])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+11]..[1233,53082+15])
                                        Pexp_ident "cond" (middle_end/flambda/inline_and_simplify.ml[1233,53082+11]..[1233,53082+15])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+17]..[1233,53082+21])
                                        Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1233,53082+17]..[1233,53082+21])
                                    ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+24]..[1233,53082+53])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+24]..[1233,53082+27])
                                  Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1233,53082+24]..[1233,53082+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+28]..[1233,53082+29])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1233,53082+28]..[1233,53082+29])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+30]..[1233,53082+53])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+31]..[1233,53082+46])
                                        Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1233,53082+31]..[1233,53082+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1233,53082+47]..[1233,53082+52])
                                            Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1233,53082+47]..[1233,53082+52])
                                            None
                                      ]
                                ]
                            ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+4]..[1234,53136+40])
                        Ppat_construct "Send" (middle_end/flambda/inline_and_simplify.ml[1234,53136+4]..[1234,53136+8])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+9]..[1234,53136+40])
                            Ppat_record Closed
                            [
                              "kind" (middle_end/flambda/inline_and_simplify.ml[1234,53136+11]..[1234,53136+15]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+11]..[1234,53136+15])
                                  Ppat_var "kind" (middle_end/flambda/inline_and_simplify.ml[1234,53136+11]..[1234,53136+15])
                              "meth" (middle_end/flambda/inline_and_simplify.ml[1234,53136+17]..[1234,53136+21]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+17]..[1234,53136+21])
                                  Ppat_var "meth" (middle_end/flambda/inline_and_simplify.ml[1234,53136+17]..[1234,53136+21])
                              "obj" (middle_end/flambda/inline_and_simplify.ml[1234,53136+23]..[1234,53136+26]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+23]..[1234,53136+26])
                                  Ppat_var "obj" (middle_end/flambda/inline_and_simplify.ml[1234,53136+23]..[1234,53136+26])
                              "args" (middle_end/flambda/inline_and_simplify.ml[1234,53136+28]..[1234,53136+32]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+28]..[1234,53136+32])
                                  Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1234,53136+28]..[1234,53136+32])
                              "dbg" (middle_end/flambda/inline_and_simplify.ml[1234,53136+34]..[1234,53136+37]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1234,53136+34]..[1234,53136+37])
                                  Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[1234,53136+34]..[1234,53136+37])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1235,53180+4]..[1240,53490+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1235,53180+8]..[1235,53180+11])
                              Ppat_var "dbg" (middle_end/flambda/inline_and_simplify.ml[1235,53180+8]..[1235,53180+11])
                            expression (middle_end/flambda/inline_and_simplify.ml[1235,53180+14]..[1235,53180+46])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1235,53180+14]..[1235,53180+37])
                                Pexp_ident "E.add_inlined_debuginfo" (middle_end/flambda/inline_and_simplify.ml[1235,53180+14]..[1235,53180+37])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1235,53180+38]..[1235,53180+41])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1235,53180+38]..[1235,53180+41])
                                <arg>
                                Labelled "dbg"
                                  expression (middle_end/flambda/inline_and_simplify.ml[1235,53180+43]..[1235,53180+46])
                                    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1235,53180+43]..[1235,53180+46])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+4]..[1240,53490+44])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+4]..[1236,53230+26])
                            Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1236,53230+4]..[1236,53230+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+27]..[1236,53230+30])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1236,53230+27]..[1236,53230+30])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+31]..[1236,53230+35])
                                Pexp_ident "meth" (middle_end/flambda/inline_and_simplify.ml[1236,53230+31]..[1236,53230+35])
                            <arg>
                            Labelled "f"
                              expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+39]..[1240,53490+44])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1236,53230+44]..[1236,53230+47])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1236,53230+44]..[1236,53230+47])
                                expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+48]..[1240,53490+43]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1236,53230+48]..[1236,53230+52])
                                    Ppat_var "meth" (middle_end/flambda/inline_and_simplify.ml[1236,53230+48]..[1236,53230+52])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1236,53230+53]..[1240,53490+43]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1236,53230+53]..[1236,53230+65])
                                      Ppat_var "_meth_approx" (middle_end/flambda/inline_and_simplify.ml[1236,53230+53]..[1236,53230+65])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+6]..[1240,53490+43])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+6]..[1237,53299+28])
                                        Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1237,53299+6]..[1237,53299+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+29]..[1237,53299+32])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1237,53299+29]..[1237,53299+32])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+33]..[1237,53299+36])
                                            Pexp_ident "obj" (middle_end/flambda/inline_and_simplify.ml[1237,53299+33]..[1237,53299+36])
                                        <arg>
                                        Labelled "f"
                                          expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+40]..[1240,53490+43])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1237,53299+45]..[1237,53299+48])
                                              Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1237,53299+45]..[1237,53299+48])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+49]..[1240,53490+42]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1237,53299+49]..[1237,53299+52])
                                                Ppat_var "obj" (middle_end/flambda/inline_and_simplify.ml[1237,53299+49]..[1237,53299+52])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1237,53299+53]..[1240,53490+42]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1237,53299+53]..[1237,53299+64])
                                                  Ppat_var "_obj_approx" (middle_end/flambda/inline_and_simplify.ml[1237,53299+53]..[1237,53299+64])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+8]..[1240,53490+42])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+8]..[1238,53367+31])
                                                    Pexp_ident "simplify_free_variables" (middle_end/flambda/inline_and_simplify.ml[1238,53367+8]..[1238,53367+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+32]..[1238,53367+35])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1238,53367+32]..[1238,53367+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+36]..[1238,53367+40])
                                                        Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1238,53367+36]..[1238,53367+40])
                                                    <arg>
                                                    Labelled "f"
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+44]..[1240,53490+42])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1238,53367+49]..[1238,53367+53])
                                                          Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[1238,53367+49]..[1238,53367+53])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+54]..[1240,53490+41]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1238,53367+54]..[1238,53367+58])
                                                            Ppat_var "args" (middle_end/flambda/inline_and_simplify.ml[1238,53367+54]..[1238,53367+58])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1238,53367+59]..[1240,53490+41]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1238,53367+59]..[1238,53367+71])
                                                              Ppat_var "_args_approx" (middle_end/flambda/inline_and_simplify.ml[1238,53367+59]..[1238,53367+71])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+10]..[1240,53490+41])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+10]..[1239,53442+46])
                                                                  Pexp_construct "Send" (middle_end/flambda/inline_and_simplify.ml[1239,53442+10]..[1239,53442+14])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+15]..[1239,53442+46])
                                                                      Pexp_record
                                                                      [
"kind" (middle_end/flambda/inline_and_simplify.ml[1239,53442+17]..[1239,53442+21]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+17]..[1239,53442+21])
    Pexp_ident "kind" (middle_end/flambda/inline_and_simplify.ml[1239,53442+17]..[1239,53442+21])
"meth" (middle_end/flambda/inline_and_simplify.ml[1239,53442+23]..[1239,53442+27]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+23]..[1239,53442+27])
    Pexp_ident "meth" (middle_end/flambda/inline_and_simplify.ml[1239,53442+23]..[1239,53442+27])
"obj" (middle_end/flambda/inline_and_simplify.ml[1239,53442+29]..[1239,53442+32]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+29]..[1239,53442+32])
    Pexp_ident "obj" (middle_end/flambda/inline_and_simplify.ml[1239,53442+29]..[1239,53442+32])
"args" (middle_end/flambda/inline_and_simplify.ml[1239,53442+34]..[1239,53442+38]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+34]..[1239,53442+38])
    Pexp_ident "args" (middle_end/flambda/inline_and_simplify.ml[1239,53442+34]..[1239,53442+38])
"dbg" (middle_end/flambda/inline_and_simplify.ml[1239,53442+40]..[1239,53442+43]) ghost
  expression (middle_end/flambda/inline_and_simplify.ml[1239,53442+40]..[1239,53442+43])
    Pexp_ident "dbg" (middle_end/flambda/inline_and_simplify.ml[1239,53442+40]..[1239,53442+43])
                                                                      ]
                                                                      None
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+12]..[1240,53490+41])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+12]..[1240,53490+15])
                                                                    Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1240,53490+12]..[1240,53490+15])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+16]..[1240,53490+17])
Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1240,53490+16]..[1240,53490+17])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+18]..[1240,53490+41])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+19]..[1240,53490+34])
  Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1240,53490+19]..[1240,53490+34])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[1240,53490+35]..[1240,53490+40])
      Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1240,53490+35]..[1240,53490+40])
      None
]
                                                                  ]
                                                              ]
                                                  ]
                                      ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+4]..[1241,53535+61])
                        Ppat_construct "For" (middle_end/flambda/inline_and_simplify.ml[1241,53535+4]..[1241,53535+7])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+8]..[1241,53535+61])
                            Ppat_record Closed
                            [
                              "bound_var" (middle_end/flambda/inline_and_simplify.ml[1241,53535+10]..[1241,53535+19]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+10]..[1241,53535+19])
                                  Ppat_var "bound_var" (middle_end/flambda/inline_and_simplify.ml[1241,53535+10]..[1241,53535+19])
                              "from_value" (middle_end/flambda/inline_and_simplify.ml[1241,53535+21]..[1241,53535+31]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+21]..[1241,53535+31])
                                  Ppat_var "from_value" (middle_end/flambda/inline_and_simplify.ml[1241,53535+21]..[1241,53535+31])
                              "to_value" (middle_end/flambda/inline_and_simplify.ml[1241,53535+33]..[1241,53535+41]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+33]..[1241,53535+41])
                                  Ppat_var "to_value" (middle_end/flambda/inline_and_simplify.ml[1241,53535+33]..[1241,53535+41])
                              "direction" (middle_end/flambda/inline_and_simplify.ml[1241,53535+43]..[1241,53535+52]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+43]..[1241,53535+52])
                                  Ppat_var "direction" (middle_end/flambda/inline_and_simplify.ml[1241,53535+43]..[1241,53535+52])
                              "body" (middle_end/flambda/inline_and_simplify.ml[1241,53535+54]..[1241,53535+58]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1241,53535+54]..[1241,53535+58])
                                  Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1241,53535+54]..[1241,53535+58])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+4]..[1253,54081+41])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+4]..[1242,53600+26])
                          Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1242,53600+4]..[1242,53600+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+27]..[1242,53600+30])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1242,53600+27]..[1242,53600+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+31]..[1242,53600+41])
                              Pexp_ident "from_value" (middle_end/flambda/inline_and_simplify.ml[1242,53600+31]..[1242,53600+41])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+45]..[1253,54081+41])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1242,53600+50]..[1242,53600+53])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1242,53600+50]..[1242,53600+53])
                              expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+54]..[1253,54081+40]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1242,53600+54]..[1242,53600+64])
                                  Ppat_var "from_value" (middle_end/flambda/inline_and_simplify.ml[1242,53600+54]..[1242,53600+64])
                                expression (middle_end/flambda/inline_and_simplify.ml[1242,53600+65]..[1253,54081+40]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1242,53600+65]..[1242,53600+72])
                                    Ppat_var "_approx" (middle_end/flambda/inline_and_simplify.ml[1242,53600+65]..[1242,53600+72])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+6]..[1253,54081+40])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+6]..[1243,53676+28])
                                      Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1243,53676+6]..[1243,53676+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+29]..[1243,53676+32])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1243,53676+29]..[1243,53676+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+33]..[1243,53676+41])
                                          Pexp_ident "to_value" (middle_end/flambda/inline_and_simplify.ml[1243,53676+33]..[1243,53676+41])
                                      <arg>
                                      Labelled "f"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+45]..[1253,54081+40])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1243,53676+50]..[1243,53676+53])
                                            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1243,53676+50]..[1243,53676+53])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+54]..[1253,54081+39]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1243,53676+54]..[1243,53676+62])
                                              Ppat_var "to_value" (middle_end/flambda/inline_and_simplify.ml[1243,53676+54]..[1243,53676+62])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1243,53676+63]..[1253,54081+39]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1243,53676+63]..[1243,53676+70])
                                                Ppat_var "_approx" (middle_end/flambda/inline_and_simplify.ml[1243,53676+63]..[1243,53676+70])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1244,53750+8]..[1253,54081+39])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1244,53750+12]..[1244,53750+25])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1244,53750+12]..[1244,53750+21])
                                                          Ppat_var "bound_var" (middle_end/flambda/inline_and_simplify.ml[1244,53750+12]..[1244,53750+21])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1244,53750+23]..[1244,53750+25])
                                                          Ppat_var "sb" (middle_end/flambda/inline_and_simplify.ml[1244,53750+23]..[1244,53750+25])
                                                      ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+10]..[1245,53778+62])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+10]..[1245,53778+33])
                                                        Pexp_ident "Freshening.add_variable" (middle_end/flambda/inline_and_simplify.ml[1245,53778+10]..[1245,53778+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+34]..[1245,53778+52])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+35]..[1245,53778+47])
                                                              Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1245,53778+35]..[1245,53778+47])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+48]..[1245,53778+51])
                                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1245,53778+48]..[1245,53778+51])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1245,53778+53]..[1245,53778+62])
                                                            Pexp_ident "bound_var" (middle_end/flambda/inline_and_simplify.ml[1245,53778+53]..[1245,53778+62])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1247,53852+8]..[1253,54081+39])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1247,53852+12]..[1247,53852+15])
                                                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1247,53852+12]..[1247,53852+15])
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+10]..[1249,53922+35])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+10]..[1248,53870+15])
                                                          Pexp_ident "E.add" (middle_end/flambda/inline_and_simplify.ml[1248,53870+10]..[1248,53870+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+16]..[1248,53870+41])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+17]..[1248,53870+33])
                                                                Pexp_ident "E.set_freshening" (middle_end/flambda/inline_and_simplify.ml[1248,53870+17]..[1248,53870+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+34]..[1248,53870+37])
                                                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1248,53870+34]..[1248,53870+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+38]..[1248,53870+40])
                                                                    Pexp_ident "sb" (middle_end/flambda/inline_and_simplify.ml[1248,53870+38]..[1248,53870+40])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1248,53870+42]..[1248,53870+51])
                                                              Pexp_ident "bound_var" (middle_end/flambda/inline_and_simplify.ml[1248,53870+42]..[1248,53870+51])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1249,53922+12]..[1249,53922+35])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1249,53922+13]..[1249,53922+28])
                                                                Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1249,53922+13]..[1249,53922+28])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1249,53922+29]..[1249,53922+34])
                                                                    Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1249,53922+29]..[1249,53922+34])
                                                                    None
                                                              ]
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+8]..[1253,54081+39])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1251,53969+12]..[1251,53969+19])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1251,53969+12]..[1251,53969+16])
                                                              Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1251,53969+12]..[1251,53969+16])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1251,53969+18]..[1251,53969+19])
                                                              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1251,53969+18]..[1251,53969+19])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+22]..[1251,53969+41])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+22]..[1251,53969+30])
                                                            Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1251,53969+22]..[1251,53969+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+31]..[1251,53969+34])
                                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1251,53969+31]..[1251,53969+34])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+35]..[1251,53969+36])
                                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1251,53969+35]..[1251,53969+36])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1251,53969+37]..[1251,53969+41])
                                                                Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1251,53969+37]..[1251,53969+41])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+8]..[1253,54081+39])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+8]..[1252,54014+65])
                                                          Pexp_construct "For" (middle_end/flambda/inline_and_simplify.ml[1252,54014+8]..[1252,54014+11])
                                                          Some
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+12]..[1252,54014+65])
                                                              Pexp_record
                                                              [
                                                                "bound_var" (middle_end/flambda/inline_and_simplify.ml[1252,54014+14]..[1252,54014+23]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+14]..[1252,54014+23])
                                                                    Pexp_ident "bound_var" (middle_end/flambda/inline_and_simplify.ml[1252,54014+14]..[1252,54014+23])
                                                                "from_value" (middle_end/flambda/inline_and_simplify.ml[1252,54014+25]..[1252,54014+35]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+25]..[1252,54014+35])
                                                                    Pexp_ident "from_value" (middle_end/flambda/inline_and_simplify.ml[1252,54014+25]..[1252,54014+35])
                                                                "to_value" (middle_end/flambda/inline_and_simplify.ml[1252,54014+37]..[1252,54014+45]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+37]..[1252,54014+45])
                                                                    Pexp_ident "to_value" (middle_end/flambda/inline_and_simplify.ml[1252,54014+37]..[1252,54014+45])
                                                                "direction" (middle_end/flambda/inline_and_simplify.ml[1252,54014+47]..[1252,54014+56]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+47]..[1252,54014+56])
                                                                    Pexp_ident "direction" (middle_end/flambda/inline_and_simplify.ml[1252,54014+47]..[1252,54014+56])
                                                                "body" (middle_end/flambda/inline_and_simplify.ml[1252,54014+58]..[1252,54014+62]) ghost
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1252,54014+58]..[1252,54014+62])
                                                                    Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1252,54014+58]..[1252,54014+62])
                                                              ]
                                                              None
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+10]..[1253,54081+39])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+10]..[1253,54081+13])
                                                            Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1253,54081+10]..[1253,54081+13])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+14]..[1253,54081+15])
                                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1253,54081+14]..[1253,54081+15])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+16]..[1253,54081+39])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+17]..[1253,54081+32])
                                                                  Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1253,54081+17]..[1253,54081+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1253,54081+33]..[1253,54081+38])
                                                                      Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1253,54081+33]..[1253,54081+38])
                                                                      None
                                                                ]
                                                          ]
                                                      ]
                                    ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1254,54123+4]..[1254,54123+41])
                        Ppat_construct "Assign" (middle_end/flambda/inline_and_simplify.ml[1254,54123+4]..[1254,54123+10])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1254,54123+11]..[1254,54123+41])
                            Ppat_record Closed
                            [
                              "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1254,54123+13]..[1254,54123+27]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1254,54123+13]..[1254,54123+27])
                                  Ppat_var "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1254,54123+13]..[1254,54123+27])
                              "new_value" (middle_end/flambda/inline_and_simplify.ml[1254,54123+29]..[1254,54123+38]) ghost
                                pattern (middle_end/flambda/inline_and_simplify.ml[1254,54123+29]..[1254,54123+38])
                                  Ppat_var "new_value" (middle_end/flambda/inline_and_simplify.ml[1254,54123+29]..[1254,54123+38])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1257,54298+4]..[1261,54479+75])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1257,54298+8]..[1257,54298+22])
                              Ppat_var "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1257,54298+8]..[1257,54298+22])
                            expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+6]..[1258,54323+73])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+6]..[1258,54323+39])
                                Pexp_ident "Freshening.apply_mutable_variable" (middle_end/flambda/inline_and_simplify.ml[1258,54323+6]..[1258,54323+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+40]..[1258,54323+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+41]..[1258,54323+53])
                                      Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1258,54323+41]..[1258,54323+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+54]..[1258,54323+57])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1258,54323+54]..[1258,54323+57])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1258,54323+59]..[1258,54323+73])
                                    Pexp_ident "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1258,54323+59]..[1258,54323+73])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+4]..[1261,54479+75])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+4]..[1260,54404+26])
                            Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1260,54404+4]..[1260,54404+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+27]..[1260,54404+30])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1260,54404+27]..[1260,54404+30])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+31]..[1260,54404+40])
                                Pexp_ident "new_value" (middle_end/flambda/inline_and_simplify.ml[1260,54404+31]..[1260,54404+40])
                            <arg>
                            Labelled "f"
                              expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+44]..[1261,54479+75])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1260,54404+49]..[1260,54404+53])
                                  Ppat_var "_env" (middle_end/flambda/inline_and_simplify.ml[1260,54404+49]..[1260,54404+53])
                                expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+54]..[1261,54479+74]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1260,54404+54]..[1260,54404+63])
                                    Ppat_var "new_value" (middle_end/flambda/inline_and_simplify.ml[1260,54404+54]..[1260,54404+63])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1260,54404+64]..[1261,54479+74]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1260,54404+64]..[1260,54404+71])
                                      Ppat_var "_approx" (middle_end/flambda/inline_and_simplify.ml[1260,54404+64]..[1260,54404+71])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+6]..[1261,54479+74])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+6]..[1261,54479+43])
                                          Pexp_construct "Assign" (middle_end/flambda/inline_and_simplify.ml[1261,54479+6]..[1261,54479+12])
                                          Some
                                            expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+13]..[1261,54479+43])
                                              Pexp_record
                                              [
                                                "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1261,54479+15]..[1261,54479+29]) ghost
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+15]..[1261,54479+29])
                                                    Pexp_ident "being_assigned" (middle_end/flambda/inline_and_simplify.ml[1261,54479+15]..[1261,54479+29])
                                                "new_value" (middle_end/flambda/inline_and_simplify.ml[1261,54479+31]..[1261,54479+40]) ghost
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+31]..[1261,54479+40])
                                                    Pexp_ident "new_value" (middle_end/flambda/inline_and_simplify.ml[1261,54479+31]..[1261,54479+40])
                                              ]
                                              None
                                        expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+45]..[1261,54479+74])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+45]..[1261,54479+48])
                                            Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1261,54479+45]..[1261,54479+48])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+49]..[1261,54479+50])
                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1261,54479+49]..[1261,54479+50])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+51]..[1261,54479+74])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+52]..[1261,54479+67])
                                                  Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1261,54479+52]..[1261,54479+67])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1261,54479+68]..[1261,54479+73])
                                                      Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1261,54479+68]..[1261,54479+73])
                                                      None
                                                ]
                                          ]
                                      ]
                          ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1262,54555+4]..[1262,54555+20])
                        Ppat_construct "Switch" (middle_end/flambda/inline_and_simplify.ml[1262,54555+4]..[1262,54555+10])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1262,54555+11]..[1262,54555+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1262,54555+12]..[1262,54555+15])
                                Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1262,54555+12]..[1262,54555+15])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1262,54555+17]..[1262,54555+19])
                                Ppat_var "sw" (middle_end/flambda/inline_and_simplify.ml[1262,54555+17]..[1262,54555+19])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+4]..[1336,57668+10])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+4]..[1267,54856+26])
                          Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1267,54856+4]..[1267,54856+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+27]..[1267,54856+30])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1267,54856+27]..[1267,54856+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+31]..[1267,54856+34])
                              Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1267,54856+31]..[1267,54856+34])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+38]..[1336,57668+10])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1267,54856+43]..[1267,54856+46])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1267,54856+43]..[1267,54856+46])
                              expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+47]..[1336,57668+9]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1267,54856+47]..[1267,54856+50])
                                  Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1267,54856+47]..[1267,54856+50])
                                expression (middle_end/flambda/inline_and_simplify.ml[1267,54856+51]..[1336,57668+9]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1267,54856+51]..[1267,54856+61])
                                    Ppat_var "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1267,54856+51]..[1267,54856+61])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1268,54921+6]..[1336,57668+9])
                                    Pexp_let Rec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1268,54921+14]..[1268,54921+29])
                                          Ppat_var "filter_branches" (middle_end/flambda/inline_and_simplify.ml[1268,54921+14]..[1268,54921+29])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1268,54921+30]..[1278,55385+29]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1268,54921+30]..[1268,54921+36])
                                            Ppat_var "filter" (middle_end/flambda/inline_and_simplify.ml[1268,54921+30]..[1268,54921+36])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1268,54921+37]..[1278,55385+29]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1268,54921+37]..[1268,54921+45])
                                              Ppat_var "branches" (middle_end/flambda/inline_and_simplify.ml[1268,54921+37]..[1268,54921+45])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1268,54921+46]..[1278,55385+29]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1268,54921+46]..[1268,54921+65])
                                                Ppat_var "compatible_branches" (middle_end/flambda/inline_and_simplify.ml[1268,54921+46]..[1268,54921+65])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1269,54989+8]..[1278,55385+29])
                                                Pexp_match
                                                expression (middle_end/flambda/inline_and_simplify.ml[1269,54989+14]..[1269,54989+22])
                                                  Pexp_ident "branches" (middle_end/flambda/inline_and_simplify.ml[1269,54989+14]..[1269,54989+22])
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1270,55017+10]..[1270,55017+12])
                                                      Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1270,55017+10]..[1270,55017+12])
                                                      None
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1270,55017+16]..[1270,55017+48])
                                                      Pexp_construct "Can_be_taken" (middle_end/flambda/inline_and_simplify.ml[1270,55017+16]..[1270,55017+28])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1270,55017+29]..[1270,55017+48])
                                                          Pexp_ident "compatible_branches" (middle_end/flambda/inline_and_simplify.ml[1270,55017+29]..[1270,55017+48])
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+10]..[1271,55066+40])
                                                      Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1271,55066+29]..[1271,55066+31])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+10]..[1271,55066+40]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+10]..[1271,55066+28])
                                                              Ppat_alias "branch" (middle_end/flambda/inline_and_simplify.ml[1271,55066+22]..[1271,55066+28])
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+10]..[1271,55066+18])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+11]..[1271,55066+12])
                                                                    Ppat_var "c" (middle_end/flambda/inline_and_simplify.ml[1271,55066+11]..[1271,55066+12])
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+14]..[1271,55066+17])
                                                                    Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1271,55066+14]..[1271,55066+17])
                                                                ]
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1271,55066+32]..[1271,55066+40])
                                                              Ppat_var "branches" (middle_end/flambda/inline_and_simplify.ml[1271,55066+32]..[1271,55066+40])
                                                          ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1272,55110+10]..[1278,55385+29])
                                                      Pexp_match
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1272,55110+16]..[1272,55110+35])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1272,55110+16]..[1272,55110+22])
                                                          Pexp_ident "filter" (middle_end/flambda/inline_and_simplify.ml[1272,55110+16]..[1272,55110+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1272,55110+23]..[1272,55110+33])
                                                              Pexp_ident "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1272,55110+23]..[1272,55110+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1272,55110+34]..[1272,55110+35])
                                                              Pexp_ident "c" (middle_end/flambda/inline_and_simplify.ml[1272,55110+34]..[1272,55110+35])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1273,55151+12]..[1273,55151+29])
                                                            Ppat_construct "A.Cannot_be_taken" (middle_end/flambda/inline_and_simplify.ml[1273,55151+12]..[1273,55151+29])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1274,55184+12]..[1274,55184+63])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1274,55184+12]..[1274,55184+27])
                                                              Pexp_ident "filter_branches" (middle_end/flambda/inline_and_simplify.ml[1274,55184+12]..[1274,55184+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1274,55184+28]..[1274,55184+34])
                                                                  Pexp_ident "filter" (middle_end/flambda/inline_and_simplify.ml[1274,55184+28]..[1274,55184+34])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1274,55184+35]..[1274,55184+43])
                                                                  Pexp_ident "branches" (middle_end/flambda/inline_and_simplify.ml[1274,55184+35]..[1274,55184+43])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1274,55184+44]..[1274,55184+63])
                                                                  Pexp_ident "compatible_branches" (middle_end/flambda/inline_and_simplify.ml[1274,55184+44]..[1274,55184+63])
                                                            ]
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1275,55248+12]..[1275,55248+26])
                                                            Ppat_construct "A.Can_be_taken" (middle_end/flambda/inline_and_simplify.ml[1275,55248+12]..[1275,55248+26])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+12]..[1276,55278+75])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+12]..[1276,55278+27])
                                                              Pexp_ident "filter_branches" (middle_end/flambda/inline_and_simplify.ml[1276,55278+12]..[1276,55278+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+28]..[1276,55278+34])
                                                                  Pexp_ident "filter" (middle_end/flambda/inline_and_simplify.ml[1276,55278+28]..[1276,55278+34])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+35]..[1276,55278+43])
                                                                  Pexp_ident "branches" (middle_end/flambda/inline_and_simplify.ml[1276,55278+35]..[1276,55278+43])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+44]..[1276,55278+75])
                                                                  Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1276,55278+52]..[1276,55278+54])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+45]..[1276,55278+74]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+45]..[1276,55278+51])
  Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1276,55278+45]..[1276,55278+51])
expression (middle_end/flambda/inline_and_simplify.ml[1276,55278+55]..[1276,55278+74])
  Pexp_ident "compatible_branches" (middle_end/flambda/inline_and_simplify.ml[1276,55278+55]..[1276,55278+74])
                                                                      ]
                                                            ]
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1277,55354+12]..[1277,55354+27])
                                                            Ppat_construct "A.Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1277,55354+12]..[1277,55354+27])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1278,55385+12]..[1278,55385+29])
                                                            Pexp_construct "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1278,55385+12]..[1278,55385+25])
                                                            Some
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1278,55385+26]..[1278,55385+29])
                                                                Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1278,55385+26]..[1278,55385+29])
                                                      ]
                                                ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1280,55424+6]..[1336,57668+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1280,55424+10]..[1280,55424+25])
                                            Ppat_var "filtered_consts" (middle_end/flambda/inline_and_simplify.ml[1280,55424+10]..[1280,55424+25])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+8]..[1281,55452+76])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+8]..[1281,55452+23])
                                              Pexp_ident "filter_branches" (middle_end/flambda/inline_and_simplify.ml[1281,55452+8]..[1281,55452+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+24]..[1281,55452+63])
                                                  Pexp_ident "A.potentially_taken_const_switch_branch" (middle_end/flambda/inline_and_simplify.ml[1281,55452+24]..[1281,55452+63])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+64]..[1281,55452+73])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+64]..[1281,55452+66])
                                                    Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1281,55452+64]..[1281,55452+66])
                                                  "consts" (middle_end/flambda/inline_and_simplify.ml[1281,55452+67]..[1281,55452+73])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1281,55452+74]..[1281,55452+76])
                                                  Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1281,55452+74]..[1281,55452+76])
                                                  None
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1283,55538+6]..[1336,57668+9])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1283,55538+10]..[1283,55538+25])
                                              Ppat_var "filtered_blocks" (middle_end/flambda/inline_and_simplify.ml[1283,55538+10]..[1283,55538+25])
                                            expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+8]..[1284,55566+76])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+8]..[1284,55566+23])
                                                Pexp_ident "filter_branches" (middle_end/flambda/inline_and_simplify.ml[1284,55566+8]..[1284,55566+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+24]..[1284,55566+63])
                                                    Pexp_ident "A.potentially_taken_block_switch_branch" (middle_end/flambda/inline_and_simplify.ml[1284,55566+24]..[1284,55566+63])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+64]..[1284,55566+73])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+64]..[1284,55566+66])
                                                      Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1284,55566+64]..[1284,55566+66])
                                                    "blocks" (middle_end/flambda/inline_and_simplify.ml[1284,55566+67]..[1284,55566+73])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1284,55566+74]..[1284,55566+76])
                                                    Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1284,55566+74]..[1284,55566+76])
                                                    None
                                              ]
                                        ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1286,55652+6]..[1336,57668+9])
                                          Pexp_match
                                          expression (middle_end/flambda/inline_and_simplify.ml[1286,55652+18]..[1286,55652+50])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1286,55652+18]..[1286,55652+33])
                                                Pexp_ident "filtered_consts" (middle_end/flambda/inline_and_simplify.ml[1286,55652+18]..[1286,55652+33])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1286,55652+35]..[1286,55652+50])
                                                Pexp_ident "filtered_blocks" (middle_end/flambda/inline_and_simplify.ml[1286,55652+35]..[1286,55652+50])
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1287,55708+8]..[1287,55708+40])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1287,55708+8]..[1287,55708+23])
                                                    Ppat_construct "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1287,55708+8]..[1287,55708+21])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1287,55708+22]..[1287,55708+23])
                                                        Ppat_any
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1287,55708+25]..[1287,55708+40])
                                                    Ppat_construct "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1287,55708+25]..[1287,55708+38])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1287,55708+39]..[1287,55708+40])
                                                        Ppat_any
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1288,55752+8]..[1288,55752+20])
                                                Pexp_assert
                                                expression (middle_end/flambda/inline_and_simplify.ml[1288,55752+15]..[1288,55752+20])
                                                  Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1288,55752+15]..[1288,55752+20])
                                                  None
                                            <case>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1289,55773+8]..[1290,55805+31])
                                                Ppat_or
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1289,55773+8]..[1289,55773+31])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1289,55773+8]..[1289,55773+28])
                                                      Ppat_construct "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1289,55773+8]..[1289,55773+21])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1289,55773+22]..[1289,55773+28])
                                                          Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1289,55773+22]..[1289,55773+28])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1289,55773+30]..[1289,55773+31])
                                                      Ppat_any
                                                  ]
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1290,55805+8]..[1290,55805+31])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1290,55805+8]..[1290,55805+9])
                                                      Ppat_any
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1290,55805+11]..[1290,55805+31])
                                                      Ppat_construct "Must_be_taken" (middle_end/flambda/inline_and_simplify.ml[1290,55805+11]..[1290,55805+24])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1290,55805+25]..[1290,55805+31])
                                                          Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1290,55805+25]..[1290,55805+31])
                                                  ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+8]..[1292,55886+44])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1291,55840+12]..[1291,55840+18])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1291,55840+12]..[1291,55840+15])
                                                          Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1291,55840+12]..[1291,55840+15])
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1291,55840+17]..[1291,55840+18])
                                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1291,55840+17]..[1291,55840+18])
                                                      ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+21]..[1291,55840+42])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+21]..[1291,55840+29])
                                                        Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1291,55840+21]..[1291,55840+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+30]..[1291,55840+33])
                                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1291,55840+30]..[1291,55840+33])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+34]..[1291,55840+35])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1291,55840+34]..[1291,55840+35])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1291,55840+36]..[1291,55840+42])
                                                            Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1291,55840+36]..[1291,55840+42])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+8]..[1292,55886+44])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+8]..[1292,55886+11])
                                                      Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1292,55886+8]..[1292,55886+11])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+13]..[1292,55886+44])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+13]..[1292,55886+26])
                                                        Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1292,55886+13]..[1292,55886+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+27]..[1292,55886+28])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1292,55886+27]..[1292,55886+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1292,55886+29]..[1292,55886+44])
                                                            Pexp_ident "B.remove_branch" (middle_end/flambda/inline_and_simplify.ml[1292,55886+29]..[1292,55886+44])
                                                      ]
                                                  ]
                                            <case>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1293,55931+8]..[1293,55931+48])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1293,55931+8]..[1293,55931+27])
                                                    Ppat_construct "Can_be_taken" (middle_end/flambda/inline_and_simplify.ml[1293,55931+8]..[1293,55931+20])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1293,55931+21]..[1293,55931+27])
                                                        Ppat_var "consts" (middle_end/flambda/inline_and_simplify.ml[1293,55931+21]..[1293,55931+27])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1293,55931+29]..[1293,55931+48])
                                                    Ppat_construct "Can_be_taken" (middle_end/flambda/inline_and_simplify.ml[1293,55931+29]..[1293,55931+41])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1293,55931+42]..[1293,55931+48])
                                                        Ppat_var "blocks" (middle_end/flambda/inline_and_simplify.ml[1293,55931+42]..[1293,55931+48])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+8]..[1335,57638+29])
                                                Pexp_match
                                                expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+14]..[1294,55983+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+14]..[1294,55983+20])
                                                      Pexp_ident "consts" (middle_end/flambda/inline_and_simplify.ml[1294,55983+14]..[1294,55983+20])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+22]..[1294,55983+28])
                                                      Pexp_ident "blocks" (middle_end/flambda/inline_and_simplify.ml[1294,55983+22]..[1294,55983+28])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+30]..[1294,55983+43])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1294,55983+30]..[1294,55983+32])
                                                        Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1294,55983+30]..[1294,55983+32])
                                                      "failaction" (middle_end/flambda/inline_and_simplify.ml[1294,55983+33]..[1294,55983+43])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1295,56032+10]..[1295,56032+22])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1295,56032+10]..[1295,56032+12])
                                                          Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1295,56032+10]..[1295,56032+12])
                                                          None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1295,56032+14]..[1295,56032+16])
                                                          Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1295,56032+14]..[1295,56032+16])
                                                          None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1295,56032+18]..[1295,56032+22])
                                                          Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1295,56032+18]..[1295,56032+22])
                                                          None
                                                      ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+10]..[1308,56620+50])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+10]..[1308,56620+28])
                                                          Pexp_construct "Proved_unreachable" (middle_end/flambda/inline_and_simplify.ml[1308,56620+10]..[1308,56620+28])
                                                          None
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+30]..[1308,56620+50])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+30]..[1308,56620+33])
                                                            Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1308,56620+30]..[1308,56620+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+34]..[1308,56620+35])
                                                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1308,56620+34]..[1308,56620+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1308,56620+36]..[1308,56620+50])
                                                                Pexp_ident "A.value_bottom" (middle_end/flambda/inline_and_simplify.ml[1308,56620+36]..[1308,56620+50])
                                                          ]
                                                      ]
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+10]..[1311,56735+29])
                                                      Ppat_or
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+10]..[1310,56703+31])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+10]..[1309,56671+31])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+10]..[1309,56671+21])
                                                              Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1309,56671+11]..[1309,56671+21]) ghost
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+11]..[1309,56671+21]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+11]..[1309,56671+20])
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+11]..[1309,56671+12])
  Ppat_any
pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+14]..[1309,56671+20])
  Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1309,56671+14]..[1309,56671+20])
                                                                      ]
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+20]..[1309,56671+21]) ghost
                                                                      Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1309,56671+20]..[1309,56671+21]) ghost
                                                                      None
                                                                  ]
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+23]..[1309,56671+25])
                                                              Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1309,56671+23]..[1309,56671+25])
                                                              None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1309,56671+27]..[1309,56671+31])
                                                              Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1309,56671+27]..[1309,56671+31])
                                                              None
                                                          ]
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+10]..[1310,56703+31])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+10]..[1310,56703+12])
                                                              Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1310,56703+10]..[1310,56703+12])
                                                              None
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+14]..[1310,56703+25])
                                                              Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1310,56703+15]..[1310,56703+25]) ghost
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+15]..[1310,56703+25]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+15]..[1310,56703+24])
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+15]..[1310,56703+16])
  Ppat_any
pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+18]..[1310,56703+24])
  Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1310,56703+18]..[1310,56703+24])
                                                                      ]
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+24]..[1310,56703+25]) ghost
                                                                      Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1310,56703+24]..[1310,56703+25]) ghost
                                                                      None
                                                                  ]
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1310,56703+27]..[1310,56703+31])
                                                              Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1310,56703+27]..[1310,56703+31])
                                                              None
                                                          ]
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1311,56735+10]..[1311,56735+29])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1311,56735+10]..[1311,56735+12])
                                                            Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1311,56735+10]..[1311,56735+12])
                                                            None
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1311,56735+14]..[1311,56735+16])
                                                            Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1311,56735+14]..[1311,56735+16])
                                                            None
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1311,56735+18]..[1311,56735+29])
                                                            Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1311,56735+18]..[1311,56735+22])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1311,56735+23]..[1311,56735+29])
                                                                Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1311,56735+23]..[1311,56735+29])
                                                        ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+10]..[1313,56816+46])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1312,56768+14]..[1312,56768+20])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1312,56768+14]..[1312,56768+17])
                                                                Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1312,56768+14]..[1312,56768+17])
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1312,56768+19]..[1312,56768+20])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1312,56768+19]..[1312,56768+20])
                                                            ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+23]..[1312,56768+44])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+23]..[1312,56768+31])
                                                              Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1312,56768+23]..[1312,56768+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+32]..[1312,56768+35])
                                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1312,56768+32]..[1312,56768+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+36]..[1312,56768+37])
                                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1312,56768+36]..[1312,56768+37])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1312,56768+38]..[1312,56768+44])
                                                                  Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1312,56768+38]..[1312,56768+44])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+10]..[1313,56816+46])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+10]..[1313,56816+13])
                                                            Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1313,56816+10]..[1313,56816+13])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+15]..[1313,56816+46])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+15]..[1313,56816+28])
                                                              Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1313,56816+15]..[1313,56816+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+29]..[1313,56816+30])
                                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1313,56816+29]..[1313,56816+30])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1313,56816+31]..[1313,56816+46])
                                                                  Pexp_ident "B.remove_branch" (middle_end/flambda/inline_and_simplify.ml[1313,56816+31]..[1313,56816+46])
                                                            ]
                                                        ]
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1314,56863+10]..[1314,56863+11])
                                                      Ppat_any
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1315,56878+10]..[1335,57638+29])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1315,56878+14]..[1315,56878+17])
                                                            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1315,56878+14]..[1315,56878+17])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1315,56878+20]..[1315,56878+39])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1315,56878+20]..[1315,56878+35])
                                                              Pexp_ident "E.inside_branch" (middle_end/flambda/inline_and_simplify.ml[1315,56878+20]..[1315,56878+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1315,56878+36]..[1315,56878+39])
                                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1315,56878+36]..[1315,56878+39])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1316,56921+10]..[1335,57638+29])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+14]..[1316,56921+15])
                                                              Ppat_var "f" (middle_end/flambda/inline_and_simplify.ml[1316,56921+14]..[1316,56921+15])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1316,56921+16]..[1320,57066+38]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+16]..[1316,56921+22])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+17]..[1316,56921+18])
                                                                    Ppat_var "i" (middle_end/flambda/inline_and_simplify.ml[1316,56921+17]..[1316,56921+18])
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+20]..[1316,56921+21])
                                                                    Ppat_var "v" (middle_end/flambda/inline_and_simplify.ml[1316,56921+20]..[1316,56921+21])
                                                                ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1316,56921+23]..[1320,57066+38]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+23]..[1316,56921+31])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+24]..[1316,56921+27])
                                                                      Ppat_var "acc" (middle_end/flambda/inline_and_simplify.ml[1316,56921+24]..[1316,56921+27])
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1316,56921+29]..[1316,56921+30])
                                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1316,56921+29]..[1316,56921+30])
                                                                  ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1317,56955+12]..[1320,57066+38])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1317,56955+16]..[1317,56955+22])
Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1317,56955+16]..[1317,56955+22])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1317,56955+25]..[1317,56955+35])
Pexp_apply
expression (middle_end/flambda/inline_and_simplify.ml[1317,56955+25]..[1317,56955+33])
  Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1317,56955+25]..[1317,56955+33])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inline_and_simplify.ml[1317,56955+34]..[1317,56955+35])
      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1317,56955+34]..[1317,56955+35])
]
                                                                  ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+12]..[1320,57066+38])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (middle_end/flambda/inline_and_simplify.ml[1318,56994+16]..[1318,56994+22])
  Ppat_tuple
  [
    pattern (middle_end/flambda/inline_and_simplify.ml[1318,56994+16]..[1318,56994+19])
      Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1318,56994+16]..[1318,56994+19])
    pattern (middle_end/flambda/inline_and_simplify.ml[1318,56994+21]..[1318,56994+22])
      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1318,56994+21]..[1318,56994+22])
  ]
expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+25]..[1318,56994+41])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+25]..[1318,56994+33])
    Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1318,56994+25]..[1318,56994+33])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+34]..[1318,56994+37])
        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1318,56994+34]..[1318,56994+37])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+38]..[1318,56994+39])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1318,56994+38]..[1318,56994+39])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1318,56994+40]..[1318,56994+41])
        Pexp_ident "v" (middle_end/flambda/inline_and_simplify.ml[1318,56994+40]..[1318,56994+41])
  ]
                                                                    ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+12]..[1320,57066+38])
                                                                      Pexp_tuple
                                                                      [
expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+12]..[1319,57039+25])
  Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1319,57039+20]..[1319,57039+22])
  Some
    expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+12]..[1319,57039+25]) ghost
      Pexp_tuple
      [
        expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+12]..[1319,57039+20])
          Pexp_tuple
          [
            expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+13]..[1319,57039+14])
              Pexp_ident "i" (middle_end/flambda/inline_and_simplify.ml[1319,57039+13]..[1319,57039+14])
            expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+16]..[1319,57039+19])
              Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1319,57039+16]..[1319,57039+19])
          ]
        expression (middle_end/flambda/inline_and_simplify.ml[1319,57039+22]..[1319,57039+25])
          Pexp_ident "acc" (middle_end/flambda/inline_and_simplify.ml[1319,57039+22]..[1319,57039+25])
      ]
expression (middle_end/flambda/inline_and_simplify.ml[1320,57066+12]..[1320,57066+38])
  Pexp_apply
  expression (middle_end/flambda/inline_and_simplify.ml[1320,57066+12]..[1320,57066+25])
    Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1320,57066+12]..[1320,57066+25])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1320,57066+26]..[1320,57066+27])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1320,57066+26]..[1320,57066+27])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1320,57066+28]..[1320,57066+31])
        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1320,57066+28]..[1320,57066+31])
    <arg>
    Nolabel
      expression (middle_end/flambda/inline_and_simplify.ml[1320,57066+32]..[1320,57066+38])
        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1320,57066+32]..[1320,57066+38])
  ]
                                                                      ]
                                                        ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1322,57118+10]..[1335,57638+29])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1322,57118+14]..[1322,57118+15])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1322,57118+14]..[1322,57118+15])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1322,57118+18]..[1322,57118+47])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1322,57118+18]..[1322,57118+30])
                                                                  Pexp_ident "R.set_approx" (middle_end/flambda/inline_and_simplify.ml[1322,57118+18]..[1322,57118+30])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1322,57118+31]..[1322,57118+32])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1322,57118+31]..[1322,57118+32])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1322,57118+33]..[1322,57118+47])
                                                                      Pexp_ident "A.value_bottom" (middle_end/flambda/inline_and_simplify.ml[1322,57118+33]..[1322,57118+47])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+10]..[1335,57638+29])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1323,57169+14]..[1323,57169+23])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1323,57169+14]..[1323,57169+20])
                                                                      Ppat_var "consts" (middle_end/flambda/inline_and_simplify.ml[1323,57169+14]..[1323,57169+20])
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1323,57169+22]..[1323,57169+23])
                                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1323,57169+22]..[1323,57169+23])
                                                                  ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+26]..[1323,57169+58])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+26]..[1323,57169+41])
                                                                    Pexp_ident "List.fold_right" (middle_end/flambda/inline_and_simplify.ml[1323,57169+26]..[1323,57169+41])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+42]..[1323,57169+43])
Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[1323,57169+42]..[1323,57169+43])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+44]..[1323,57169+50])
Pexp_ident "consts" (middle_end/flambda/inline_and_simplify.ml[1323,57169+44]..[1323,57169+50])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+51]..[1323,57169+58])
Pexp_tuple
[
  expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+52]..[1323,57169+54])
    Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1323,57169+52]..[1323,57169+54])
    None
  expression (middle_end/flambda/inline_and_simplify.ml[1323,57169+56]..[1323,57169+57])
    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1323,57169+56]..[1323,57169+57])
]
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+10]..[1335,57638+29])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1324,57231+14]..[1324,57231+23])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1324,57231+14]..[1324,57231+20])
Ppat_var "blocks" (middle_end/flambda/inline_and_simplify.ml[1324,57231+14]..[1324,57231+20])
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1324,57231+22]..[1324,57231+23])
Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1324,57231+22]..[1324,57231+23])
                                                                    ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+26]..[1324,57231+58])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+26]..[1324,57231+41])
                                                                      Pexp_ident "List.fold_right" (middle_end/flambda/inline_and_simplify.ml[1324,57231+26]..[1324,57231+41])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+42]..[1324,57231+43])
  Pexp_ident "f" (middle_end/flambda/inline_and_simplify.ml[1324,57231+42]..[1324,57231+43])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+44]..[1324,57231+50])
  Pexp_ident "blocks" (middle_end/flambda/inline_and_simplify.ml[1324,57231+44]..[1324,57231+50])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+51]..[1324,57231+58])
  Pexp_tuple
  [
    expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+52]..[1324,57231+54])
      Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1324,57231+52]..[1324,57231+54])
      None
    expression (middle_end/flambda/inline_and_simplify.ml[1324,57231+56]..[1324,57231+57])
      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1324,57231+56]..[1324,57231+57])
  ]
                                                                    ]
                                                              ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1325,57293+10]..[1335,57638+29])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1325,57293+14]..[1325,57293+27])
                                                                      Ppat_tuple
                                                                      [
pattern (middle_end/flambda/inline_and_simplify.ml[1325,57293+14]..[1325,57293+24])
  Ppat_var "failaction" (middle_end/flambda/inline_and_simplify.ml[1325,57293+14]..[1325,57293+24])
pattern (middle_end/flambda/inline_and_simplify.ml[1325,57293+26]..[1325,57293+27])
  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1325,57293+26]..[1325,57293+27])
                                                                      ]
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1326,57323+12]..[1332,57522+40])
                                                                      Pexp_match
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1326,57323+18]..[1326,57323+31])
Pexp_field
expression (middle_end/flambda/inline_and_simplify.ml[1326,57323+18]..[1326,57323+20])
  Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1326,57323+18]..[1326,57323+20])
"failaction" (middle_end/flambda/inline_and_simplify.ml[1326,57323+21]..[1326,57323+31])
                                                                      [
<case>
  pattern (middle_end/flambda/inline_and_simplify.ml[1327,57360+14]..[1327,57360+18])
    Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1327,57360+14]..[1327,57360+18])
    None
  expression (middle_end/flambda/inline_and_simplify.ml[1327,57360+22]..[1327,57360+29])
    Pexp_tuple
    [
      expression (middle_end/flambda/inline_and_simplify.ml[1327,57360+22]..[1327,57360+26])
        Pexp_construct "None" (middle_end/flambda/inline_and_simplify.ml[1327,57360+22]..[1327,57360+26])
        None
      expression (middle_end/flambda/inline_and_simplify.ml[1327,57360+28]..[1327,57360+29])
        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1327,57360+28]..[1327,57360+29])
    ]
<case>
  pattern (middle_end/flambda/inline_and_simplify.ml[1328,57390+14]..[1328,57390+20])
    Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1328,57390+14]..[1328,57390+18])
    Some
      []
      pattern (middle_end/flambda/inline_and_simplify.ml[1328,57390+19]..[1328,57390+20])
        Ppat_var "l" (middle_end/flambda/inline_and_simplify.ml[1328,57390+19]..[1328,57390+20])
  expression (middle_end/flambda/inline_and_simplify.ml[1329,57414+14]..[1332,57522+40])
    Pexp_let Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1329,57414+18]..[1329,57414+24])
          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1329,57414+18]..[1329,57414+24])
        expression (middle_end/flambda/inline_and_simplify.ml[1329,57414+27]..[1329,57414+37])
          Pexp_apply
          expression (middle_end/flambda/inline_and_simplify.ml[1329,57414+27]..[1329,57414+35])
            Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1329,57414+27]..[1329,57414+35])
          [
            <arg>
            Nolabel
              expression (middle_end/flambda/inline_and_simplify.ml[1329,57414+36]..[1329,57414+37])
                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1329,57414+36]..[1329,57414+37])
          ]
    ]
    expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+14]..[1332,57522+40])
      Pexp_let Nonrec
      [
        <def>
          pattern (middle_end/flambda/inline_and_simplify.ml[1330,57455+18]..[1330,57455+22])
            Ppat_tuple
            [
              pattern (middle_end/flambda/inline_and_simplify.ml[1330,57455+18]..[1330,57455+19])
                Ppat_var "l" (middle_end/flambda/inline_and_simplify.ml[1330,57455+18]..[1330,57455+19])
              pattern (middle_end/flambda/inline_and_simplify.ml[1330,57455+21]..[1330,57455+22])
                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1330,57455+21]..[1330,57455+22])
            ]
          expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+25]..[1330,57455+41])
            Pexp_apply
            expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+25]..[1330,57455+33])
              Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1330,57455+25]..[1330,57455+33])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+34]..[1330,57455+37])
                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1330,57455+34]..[1330,57455+37])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+38]..[1330,57455+39])
                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1330,57455+38]..[1330,57455+39])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1330,57455+40]..[1330,57455+41])
                  Pexp_ident "l" (middle_end/flambda/inline_and_simplify.ml[1330,57455+40]..[1330,57455+41])
            ]
      ]
      expression (middle_end/flambda/inline_and_simplify.ml[1331,57500+14]..[1332,57522+40])
        Pexp_tuple
        [
          expression (middle_end/flambda/inline_and_simplify.ml[1331,57500+14]..[1331,57500+20])
            Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1331,57500+14]..[1331,57500+18])
            Some
              expression (middle_end/flambda/inline_and_simplify.ml[1331,57500+19]..[1331,57500+20])
                Pexp_ident "l" (middle_end/flambda/inline_and_simplify.ml[1331,57500+19]..[1331,57500+20])
          expression (middle_end/flambda/inline_and_simplify.ml[1332,57522+14]..[1332,57522+40])
            Pexp_apply
            expression (middle_end/flambda/inline_and_simplify.ml[1332,57522+14]..[1332,57522+27])
              Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1332,57522+14]..[1332,57522+27])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1332,57522+28]..[1332,57522+29])
                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1332,57522+28]..[1332,57522+29])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1332,57522+30]..[1332,57522+33])
                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1332,57522+30]..[1332,57522+33])
              <arg>
              Nolabel
                expression (middle_end/flambda/inline_and_simplify.ml[1332,57522+34]..[1332,57522+40])
                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1332,57522+34]..[1332,57522+40])
            ]
        ]
                                                                      ]
                                                                ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+10]..[1335,57638+29])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1334,57576+14]..[1334,57576+16])
Ppat_var "sw" (middle_end/flambda/inline_and_simplify.ml[1334,57576+14]..[1334,57576+16])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+19]..[1334,57576+58])
Pexp_record
[
  "failaction" (middle_end/flambda/inline_and_simplify.ml[1334,57576+29]..[1334,57576+39]) ghost
    expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+29]..[1334,57576+39])
      Pexp_ident "failaction" (middle_end/flambda/inline_and_simplify.ml[1334,57576+29]..[1334,57576+39])
  "consts" (middle_end/flambda/inline_and_simplify.ml[1334,57576+41]..[1334,57576+47]) ghost
    expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+41]..[1334,57576+47])
      Pexp_ident "consts" (middle_end/flambda/inline_and_simplify.ml[1334,57576+41]..[1334,57576+47])
  "blocks" (middle_end/flambda/inline_and_simplify.ml[1334,57576+49]..[1334,57576+55]) ghost
    expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+49]..[1334,57576+55])
      Pexp_ident "blocks" (middle_end/flambda/inline_and_simplify.ml[1334,57576+49]..[1334,57576+55])
]
Some
  expression (middle_end/flambda/inline_and_simplify.ml[1334,57576+21]..[1334,57576+23])
    Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1334,57576+21]..[1334,57576+23])
                                                                  ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+10]..[1335,57638+29])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+10]..[1335,57638+26])
Pexp_construct "Switch" (middle_end/flambda/inline_and_simplify.ml[1335,57638+10]..[1335,57638+16])
Some
  expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+17]..[1335,57638+26])
    Pexp_tuple
    [
      expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+18]..[1335,57638+21])
        Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1335,57638+18]..[1335,57638+21])
      expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+23]..[1335,57638+25])
        Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1335,57638+23]..[1335,57638+25])
    ]
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1335,57638+28]..[1335,57638+29])
Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1335,57638+28]..[1335,57638+29])
                                                                    ]
                                                ]
                                          ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1337,57679+4]..[1337,57679+32])
                        Ppat_construct "String_switch" (middle_end/flambda/inline_and_simplify.ml[1337,57679+4]..[1337,57679+17])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1337,57679+18]..[1337,57679+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1337,57679+19]..[1337,57679+22])
                                Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1337,57679+19]..[1337,57679+22])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1337,57679+24]..[1337,57679+26])
                                Ppat_var "sw" (middle_end/flambda/inline_and_simplify.ml[1337,57679+24]..[1337,57679+26])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1337,57679+28]..[1337,57679+31])
                                Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1337,57679+28]..[1337,57679+31])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+4]..[1373,58890+48])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+4]..[1338,57715+26])
                          Pexp_ident "simplify_free_variable" (middle_end/flambda/inline_and_simplify.ml[1338,57715+4]..[1338,57715+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+27]..[1338,57715+30])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1338,57715+27]..[1338,57715+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+31]..[1338,57715+34])
                              Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1338,57715+31]..[1338,57715+34])
                          <arg>
                          Labelled "f"
                            expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+38]..[1373,58890+48])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1338,57715+43]..[1338,57715+46])
                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1338,57715+43]..[1338,57715+46])
                              expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+47]..[1373,58890+47]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1338,57715+47]..[1338,57715+50])
                                  Ppat_var "arg" (middle_end/flambda/inline_and_simplify.ml[1338,57715+47]..[1338,57715+50])
                                expression (middle_end/flambda/inline_and_simplify.ml[1338,57715+51]..[1373,58890+47]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1338,57715+51]..[1338,57715+61])
                                    Ppat_var "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1338,57715+51]..[1338,57715+61])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1339,57780+6]..[1373,58890+47])
                                    Pexp_match
                                    expression (middle_end/flambda/inline_and_simplify.ml[1339,57780+12]..[1339,57780+48])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1339,57780+12]..[1339,57780+37])
                                        Pexp_ident "A.check_approx_for_string" (middle_end/flambda/inline_and_simplify.ml[1339,57780+12]..[1339,57780+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1339,57780+38]..[1339,57780+48])
                                            Pexp_ident "arg_approx" (middle_end/flambda/inline_and_simplify.ml[1339,57780+38]..[1339,57780+48])
                                      ]
                                    [
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1340,57834+8]..[1340,57834+12])
                                          Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1340,57834+8]..[1340,57834+12])
                                          None
                                        expression (middle_end/flambda/inline_and_simplify.ml[1341,57850+8]..[1360,58431+67])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1341,57850+12]..[1341,57850+15])
                                                Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1341,57850+12]..[1341,57850+15])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1341,57850+18]..[1341,57850+37])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1341,57850+18]..[1341,57850+33])
                                                  Pexp_ident "E.inside_branch" (middle_end/flambda/inline_and_simplify.ml[1341,57850+18]..[1341,57850+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1341,57850+34]..[1341,57850+37])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1341,57850+34]..[1341,57850+37])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1342,57891+8]..[1360,58431+67])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1342,57891+12]..[1342,57891+17])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1342,57891+12]..[1342,57891+14])
                                                      Ppat_var "sw" (middle_end/flambda/inline_and_simplify.ml[1342,57891+12]..[1342,57891+14])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1342,57891+16]..[1342,57891+17])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1342,57891+16]..[1342,57891+17])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1343,57911+10]..[1349,58143+19])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1343,57911+10]..[1343,57911+25])
                                                    Pexp_ident "List.fold_right" (middle_end/flambda/inline_and_simplify.ml[1343,57911+10]..[1343,57911+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1343,57911+26]..[1347,58084+43])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+31]..[1343,57911+41])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+32]..[1343,57911+35])
                                                              Ppat_var "str" (middle_end/flambda/inline_and_simplify.ml[1343,57911+32]..[1343,57911+35])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+37]..[1343,57911+40])
                                                              Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1343,57911+37]..[1343,57911+40])
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1343,57911+42]..[1347,58084+42]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+42]..[1343,57911+49])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+43]..[1343,57911+45])
                                                                Ppat_var "sw" (middle_end/flambda/inline_and_simplify.ml[1343,57911+43]..[1343,57911+45])
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1343,57911+47]..[1343,57911+48])
                                                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1343,57911+47]..[1343,57911+48])
                                                            ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1344,57964+14]..[1347,58084+42])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1344,57964+18]..[1344,57964+24])
                                                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1344,57964+18]..[1344,57964+24])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1344,57964+27]..[1344,57964+37])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1344,57964+27]..[1344,57964+35])
                                                                    Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1344,57964+27]..[1344,57964+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1344,57964+36]..[1344,57964+37])
Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1344,57964+36]..[1344,57964+37])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+14]..[1347,58084+42])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1345,58005+18]..[1345,58005+24])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1345,58005+18]..[1345,58005+21])
Ppat_var "lam" (middle_end/flambda/inline_and_simplify.ml[1345,58005+18]..[1345,58005+21])
                                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1345,58005+23]..[1345,58005+24])
Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1345,58005+23]..[1345,58005+24])
                                                                    ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+27]..[1345,58005+45])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+27]..[1345,58005+35])
                                                                      Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1345,58005+27]..[1345,58005+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+36]..[1345,58005+39])
  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1345,58005+36]..[1345,58005+39])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+40]..[1345,58005+41])
  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1345,58005+40]..[1345,58005+41])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1345,58005+42]..[1345,58005+45])
  Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1345,58005+42]..[1345,58005+45])
                                                                    ]
                                                              ]
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+14]..[1347,58084+42])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+14]..[1346,58054+28])
                                                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1346,58054+24]..[1346,58054+26])
                                                                    Some
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+14]..[1346,58054+28]) ghost
Pexp_tuple
[
  expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+14]..[1346,58054+24])
    Pexp_tuple
    [
      expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+15]..[1346,58054+18])
        Pexp_ident "str" (middle_end/flambda/inline_and_simplify.ml[1346,58054+15]..[1346,58054+18])
      expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+20]..[1346,58054+23])
        Pexp_ident "lam" (middle_end/flambda/inline_and_simplify.ml[1346,58054+20]..[1346,58054+23])
    ]
  expression (middle_end/flambda/inline_and_simplify.ml[1346,58054+26]..[1346,58054+28])
    Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1346,58054+26]..[1346,58054+28])
]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1347,58084+16]..[1347,58084+42])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1347,58084+16]..[1347,58084+29])
                                                                      Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1347,58084+16]..[1347,58084+29])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1347,58084+30]..[1347,58084+31])
  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1347,58084+30]..[1347,58084+31])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1347,58084+32]..[1347,58084+35])
  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1347,58084+32]..[1347,58084+35])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inline_and_simplify.ml[1347,58084+36]..[1347,58084+42])
  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1347,58084+36]..[1347,58084+42])
                                                                    ]
                                                                ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1348,58128+12]..[1348,58128+14])
                                                        Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1348,58128+12]..[1348,58128+14])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1349,58143+12]..[1349,58143+19])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1349,58143+13]..[1349,58143+15])
                                                            Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1349,58143+13]..[1349,58143+15])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1349,58143+17]..[1349,58143+18])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1349,58143+17]..[1349,58143+18])
                                                        ]
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1351,58174+8]..[1360,58431+67])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1351,58174+12]..[1351,58174+18])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1351,58174+12]..[1351,58174+15])
                                                        Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1351,58174+12]..[1351,58174+15])
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1351,58174+17]..[1351,58174+18])
                                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1351,58174+17]..[1351,58174+18])
                                                    ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1352,58195+10]..[1358,58379+40])
                                                    Pexp_match
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1352,58195+16]..[1352,58195+19])
                                                      Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1352,58195+16]..[1352,58195+19])
                                                    [
                                                      <case>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1353,58220+12]..[1353,58220+16])
                                                          Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1353,58220+12]..[1353,58220+16])
                                                          None
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1353,58220+20]..[1353,58220+26])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1353,58220+20]..[1353,58220+23])
                                                              Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1353,58220+20]..[1353,58220+23])
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1353,58220+25]..[1353,58220+26])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1353,58220+25]..[1353,58220+26])
                                                          ]
                                                      <case>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1354,58247+12]..[1354,58247+20])
                                                          Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1354,58247+12]..[1354,58247+16])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1354,58247+17]..[1354,58247+20])
                                                              Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1354,58247+17]..[1354,58247+20])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1355,58271+12]..[1358,58379+40])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1355,58271+16]..[1355,58271+22])
                                                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1355,58271+16]..[1355,58271+22])
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1355,58271+25]..[1355,58271+35])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1355,58271+25]..[1355,58271+33])
                                                                  Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1355,58271+25]..[1355,58271+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1355,58271+34]..[1355,58271+35])
                                                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1355,58271+34]..[1355,58271+35])
                                                                ]
                                                          ]
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+12]..[1358,58379+40])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/flambda/inline_and_simplify.ml[1356,58310+16]..[1356,58310+22])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1356,58310+16]..[1356,58310+19])
                                                                      Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1356,58310+16]..[1356,58310+19])
                                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1356,58310+21]..[1356,58310+22])
                                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1356,58310+21]..[1356,58310+22])
                                                                  ]
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+25]..[1356,58310+43])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+25]..[1356,58310+33])
                                                                    Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1356,58310+25]..[1356,58310+33])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+34]..[1356,58310+37])
Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1356,58310+34]..[1356,58310+37])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+38]..[1356,58310+39])
Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1356,58310+38]..[1356,58310+39])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1356,58310+40]..[1356,58310+43])
Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1356,58310+40]..[1356,58310+43])
                                                                  ]
                                                            ]
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1357,58357+12]..[1358,58379+40])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1357,58357+12]..[1357,58357+20])
                                                                  Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1357,58357+12]..[1357,58357+16])
                                                                  Some
                                                                    expression (middle_end/flambda/inline_and_simplify.ml[1357,58357+17]..[1357,58357+20])
                                                                      Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1357,58357+17]..[1357,58357+20])
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1358,58379+14]..[1358,58379+40])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1358,58379+14]..[1358,58379+27])
                                                                    Pexp_ident "R.meet_approx" (middle_end/flambda/inline_and_simplify.ml[1358,58379+14]..[1358,58379+27])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1358,58379+28]..[1358,58379+29])
Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1358,58379+28]..[1358,58379+29])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1358,58379+30]..[1358,58379+33])
Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1358,58379+30]..[1358,58379+33])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1358,58379+34]..[1358,58379+40])
Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1358,58379+34]..[1358,58379+40])
                                                                  ]
                                                              ]
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+8]..[1360,58431+67])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+8]..[1360,58431+36])
                                                    Pexp_construct "String_switch" (middle_end/flambda/inline_and_simplify.ml[1360,58431+8]..[1360,58431+21])
                                                    Some
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+22]..[1360,58431+36])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+23]..[1360,58431+26])
                                                            Pexp_ident "arg" (middle_end/flambda/inline_and_simplify.ml[1360,58431+23]..[1360,58431+26])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+28]..[1360,58431+30])
                                                            Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1360,58431+28]..[1360,58431+30])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+32]..[1360,58431+35])
                                                            Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1360,58431+32]..[1360,58431+35])
                                                        ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+38]..[1360,58431+67])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+38]..[1360,58431+41])
                                                      Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1360,58431+38]..[1360,58431+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+42]..[1360,58431+43])
                                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1360,58431+42]..[1360,58431+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+44]..[1360,58431+67])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+45]..[1360,58431+60])
                                                            Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1360,58431+45]..[1360,58431+60])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1360,58431+61]..[1360,58431+66])
                                                                Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1360,58431+61]..[1360,58431+66])
                                                                None
                                                          ]
                                                    ]
                                                ]
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1361,58499+8]..[1361,58499+23])
                                          Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1361,58499+8]..[1361,58499+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1361,58499+13]..[1361,58499+23])
                                              Ppat_var "arg_string" (middle_end/flambda/inline_and_simplify.ml[1361,58499+13]..[1361,58499+23])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1362,58526+8]..[1373,58890+47])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1362,58526+12]..[1362,58526+18])
                                                Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1362,58526+12]..[1362,58526+18])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+10]..[1370,58812+17])
                                                Pexp_match
                                                expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+16]..[1363,58547+74])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+16]..[1363,58547+25])
                                                    Pexp_ident "List.find" (middle_end/flambda/inline_and_simplify.ml[1363,58547+16]..[1363,58547+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+26]..[1363,58547+71])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1363,58547+31]..[1363,58547+39])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1363,58547+32]..[1363,58547+35])
                                                              Ppat_var "str" (middle_end/flambda/inline_and_simplify.ml[1363,58547+32]..[1363,58547+35])
                                                            pattern (middle_end/flambda/inline_and_simplify.ml[1363,58547+37]..[1363,58547+38])
                                                              Ppat_any
                                                          ]
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+43]..[1363,58547+70])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+43]..[1363,58547+55])
                                                            Pexp_ident "String.equal" (middle_end/flambda/inline_and_simplify.ml[1363,58547+43]..[1363,58547+55])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+56]..[1363,58547+59])
                                                                Pexp_ident "str" (middle_end/flambda/inline_and_simplify.ml[1363,58547+56]..[1363,58547+59])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+60]..[1363,58547+70])
                                                                Pexp_ident "arg_string" (middle_end/flambda/inline_and_simplify.ml[1363,58547+60]..[1363,58547+70])
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1363,58547+72]..[1363,58547+74])
                                                        Pexp_ident "sw" (middle_end/flambda/inline_and_simplify.ml[1363,58547+72]..[1363,58547+74])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1364,58627+12]..[1364,58627+23])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1364,58627+13]..[1364,58627+14])
                                                          Ppat_any
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1364,58627+16]..[1364,58627+22])
                                                          Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1364,58627+16]..[1364,58627+22])
                                                      ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1364,58627+27]..[1364,58627+33])
                                                      Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1364,58627+27]..[1364,58627+33])
                                                  <case>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1365,58661+12]..[1365,58661+31])
                                                      Ppat_exception
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1365,58661+22]..[1365,58661+31])
                                                        Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[1365,58661+22]..[1365,58661+31])
                                                        None
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1366,58696+12]..[1370,58812+17])
                                                      Pexp_match
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1366,58696+18]..[1366,58696+21])
                                                        Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1366,58696+18]..[1366,58696+21])
                                                      [
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1367,58723+14]..[1367,58723+18])
                                                            Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1367,58723+14]..[1367,58723+18])
                                                            None
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1368,58745+14]..[1368,58745+40])
                                                            Pexp_construct "Flambda.Proved_unreachable" (middle_end/flambda/inline_and_simplify.ml[1368,58745+14]..[1368,58745+40])
                                                            None
                                                        <case>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1369,58786+14]..[1369,58786+22])
                                                            Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1369,58786+14]..[1369,58786+18])
                                                            Some
                                                              []
                                                              pattern (middle_end/flambda/inline_and_simplify.ml[1369,58786+19]..[1369,58786+22])
                                                                Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1369,58786+19]..[1369,58786+22])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1370,58812+14]..[1370,58812+17])
                                                            Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1370,58812+14]..[1370,58812+17])
                                                      ]
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+8]..[1373,58890+47])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1372,58841+12]..[1372,58841+21])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1372,58841+12]..[1372,58841+18])
                                                      Ppat_var "branch" (middle_end/flambda/inline_and_simplify.ml[1372,58841+12]..[1372,58841+18])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1372,58841+20]..[1372,58841+21])
                                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1372,58841+20]..[1372,58841+21])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+24]..[1372,58841+45])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+24]..[1372,58841+32])
                                                    Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1372,58841+24]..[1372,58841+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+33]..[1372,58841+36])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1372,58841+33]..[1372,58841+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+37]..[1372,58841+38])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1372,58841+37]..[1372,58841+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1372,58841+39]..[1372,58841+45])
                                                        Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1372,58841+39]..[1372,58841+45])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+8]..[1373,58890+47])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+8]..[1373,58890+14])
                                                  Pexp_ident "branch" (middle_end/flambda/inline_and_simplify.ml[1373,58890+8]..[1373,58890+14])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+16]..[1373,58890+47])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+16]..[1373,58890+29])
                                                    Pexp_ident "R.map_benefit" (middle_end/flambda/inline_and_simplify.ml[1373,58890+16]..[1373,58890+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+30]..[1373,58890+31])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1373,58890+30]..[1373,58890+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1373,58890+32]..[1373,58890+47])
                                                        Pexp_ident "B.remove_branch" (middle_end/flambda/inline_and_simplify.ml[1373,58890+32]..[1373,58890+47])
                                                  ]
                                              ]
                                    ]
                        ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1374,58939+4]..[1374,58939+22])
                        Ppat_construct "Proved_unreachable" (middle_end/flambda/inline_and_simplify.ml[1374,58939+4]..[1374,58939+22])
                        None
                      expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+26]..[1374,58939+52])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+26]..[1374,58939+30])
                            Pexp_ident "tree" (middle_end/flambda/inline_and_simplify.ml[1374,58939+26]..[1374,58939+30])
                          expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+32]..[1374,58939+52])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+32]..[1374,58939+35])
                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1374,58939+32]..[1374,58939+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+36]..[1374,58939+37])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1374,58939+36]..[1374,58939+37])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1374,58939+38]..[1374,58939+52])
                                  Pexp_ident "A.value_bottom" (middle_end/flambda/inline_and_simplify.ml[1374,58939+38]..[1374,58939+52])
                            ]
                        ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[1084,46894+40]..[1084,46894+55])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[1084,46894+40]..[1084,46894+49])
                      Ptyp_constr "Flambda.t" (middle_end/flambda/inline_and_simplify.ml[1084,46894+40]..[1084,46894+49])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[1084,46894+52]..[1084,46894+55])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[1084,46894+52]..[1084,46894+55])
                      []
                  ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1376,58993+4]..[1376,58993+17])
          Ppat_var "simplify_list" (middle_end/flambda/inline_and_simplify.ml[1376,58993+4]..[1376,58993+17])
        expression (middle_end/flambda/inline_and_simplify.ml[1376,58993+18]..[1385,59248+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1376,58993+18]..[1376,58993+21])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1376,58993+18]..[1376,58993+21])
          expression (middle_end/flambda/inline_and_simplify.ml[1376,58993+22]..[1385,59248+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1376,58993+22]..[1376,58993+23])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1376,58993+22]..[1376,58993+23])
            expression (middle_end/flambda/inline_and_simplify.ml[1376,58993+24]..[1385,59248+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1376,58993+24]..[1376,58993+25])
                Ppat_var "l" (middle_end/flambda/inline_and_simplify.ml[1376,58993+24]..[1376,58993+25])
              expression (middle_end/flambda/inline_and_simplify.ml[1377,59021+2]..[1385,59248+29])
                Pexp_match
                expression (middle_end/flambda/inline_and_simplify.ml[1377,59021+8]..[1377,59021+9])
                  Pexp_ident "l" (middle_end/flambda/inline_and_simplify.ml[1377,59021+8]..[1377,59021+9])
                [
                  <case>
                    pattern (middle_end/flambda/inline_and_simplify.ml[1378,59036+4]..[1378,59036+6])
                      Ppat_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1378,59036+4]..[1378,59036+6])
                      None
                    expression (middle_end/flambda/inline_and_simplify.ml[1378,59036+10]..[1378,59036+19])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/inline_and_simplify.ml[1378,59036+10]..[1378,59036+12])
                          Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1378,59036+10]..[1378,59036+12])
                          None
                        expression (middle_end/flambda/inline_and_simplify.ml[1378,59036+14]..[1378,59036+16])
                          Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1378,59036+14]..[1378,59036+16])
                          None
                        expression (middle_end/flambda/inline_and_simplify.ml[1378,59036+18]..[1378,59036+19])
                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1378,59036+18]..[1378,59036+19])
                      ]
                  <case>
                    pattern (middle_end/flambda/inline_and_simplify.ml[1379,59056+4]..[1379,59056+8])
                      Ppat_construct "::" (middle_end/flambda/inline_and_simplify.ml[1379,59056+5]..[1379,59056+7])
                      Some
                        []
                        pattern (middle_end/flambda/inline_and_simplify.ml[1379,59056+4]..[1379,59056+8]) ghost
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/inline_and_simplify.ml[1379,59056+4]..[1379,59056+5])
                              Ppat_var "h" (middle_end/flambda/inline_and_simplify.ml[1379,59056+4]..[1379,59056+5])
                            pattern (middle_end/flambda/inline_and_simplify.ml[1379,59056+7]..[1379,59056+8])
                              Ppat_var "t" (middle_end/flambda/inline_and_simplify.ml[1379,59056+7]..[1379,59056+8])
                          ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+4]..[1385,59248+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inline_and_simplify.ml[1380,59068+8]..[1380,59068+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1380,59068+8]..[1380,59068+10])
                                Ppat_var "t'" (middle_end/flambda/inline_and_simplify.ml[1380,59068+8]..[1380,59068+10])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1380,59068+12]..[1380,59068+19])
                                Ppat_var "approxs" (middle_end/flambda/inline_and_simplify.ml[1380,59068+12]..[1380,59068+19])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1380,59068+21]..[1380,59068+22])
                                Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1380,59068+21]..[1380,59068+22])
                            ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+25]..[1380,59068+46])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+25]..[1380,59068+38])
                              Pexp_ident "simplify_list" (middle_end/flambda/inline_and_simplify.ml[1380,59068+25]..[1380,59068+38])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+39]..[1380,59068+42])
                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1380,59068+39]..[1380,59068+42])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+43]..[1380,59068+44])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1380,59068+43]..[1380,59068+44])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1380,59068+45]..[1380,59068+46])
                                  Pexp_ident "t" (middle_end/flambda/inline_and_simplify.ml[1380,59068+45]..[1380,59068+46])
                            ]
                      ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+4]..[1385,59248+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1381,59118+8]..[1381,59118+13])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1381,59118+8]..[1381,59118+10])
                                  Ppat_var "h'" (middle_end/flambda/inline_and_simplify.ml[1381,59118+8]..[1381,59118+10])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1381,59118+12]..[1381,59118+13])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1381,59118+12]..[1381,59118+13])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+16]..[1381,59118+32])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+16]..[1381,59118+24])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1381,59118+16]..[1381,59118+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+25]..[1381,59118+28])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1381,59118+25]..[1381,59118+28])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+29]..[1381,59118+30])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1381,59118+29]..[1381,59118+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1381,59118+31]..[1381,59118+32])
                                    Pexp_ident "h" (middle_end/flambda/inline_and_simplify.ml[1381,59118+31]..[1381,59118+32])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+4]..[1385,59248+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1382,59154+8]..[1382,59154+15])
                                Ppat_var "approxs" (middle_end/flambda/inline_and_simplify.ml[1382,59154+8]..[1382,59154+15])
                              expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+18]..[1382,59154+41])
                                Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1382,59154+31]..[1382,59154+33])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+18]..[1382,59154+41]) ghost
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+18]..[1382,59154+30])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+19]..[1382,59154+27])
                                          Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1382,59154+19]..[1382,59154+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+28]..[1382,59154+29])
                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1382,59154+28]..[1382,59154+29])
                                        ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1382,59154+34]..[1382,59154+41])
                                        Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[1382,59154+34]..[1382,59154+41])
                                    ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+4]..[1385,59248+29])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+7]..[1383,59199+25])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+15]..[1383,59199+17])
                                Pexp_ident "&&" (middle_end/flambda/inline_and_simplify.ml[1383,59199+15]..[1383,59199+17])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+7]..[1383,59199+14])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+10]..[1383,59199+12])
                                      Pexp_ident "==" (middle_end/flambda/inline_and_simplify.ml[1383,59199+10]..[1383,59199+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+7]..[1383,59199+9])
                                          Pexp_ident "t'" (middle_end/flambda/inline_and_simplify.ml[1383,59199+7]..[1383,59199+9])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+13]..[1383,59199+14])
                                          Pexp_ident "t" (middle_end/flambda/inline_and_simplify.ml[1383,59199+13]..[1383,59199+14])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+18]..[1383,59199+25])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+21]..[1383,59199+23])
                                      Pexp_ident "==" (middle_end/flambda/inline_and_simplify.ml[1383,59199+21]..[1383,59199+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+18]..[1383,59199+20])
                                          Pexp_ident "h'" (middle_end/flambda/inline_and_simplify.ml[1383,59199+18]..[1383,59199+20])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1383,59199+24]..[1383,59199+25])
                                          Pexp_ident "h" (middle_end/flambda/inline_and_simplify.ml[1383,59199+24]..[1383,59199+25])
                                    ]
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1384,59225+9]..[1384,59225+22])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/inline_and_simplify.ml[1384,59225+9]..[1384,59225+10])
                                  Pexp_ident "l" (middle_end/flambda/inline_and_simplify.ml[1384,59225+9]..[1384,59225+10])
                                expression (middle_end/flambda/inline_and_simplify.ml[1384,59225+12]..[1384,59225+19])
                                  Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[1384,59225+12]..[1384,59225+19])
                                expression (middle_end/flambda/inline_and_simplify.ml[1384,59225+21]..[1384,59225+22])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1384,59225+21]..[1384,59225+22])
                              ]
                            Some
                              expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+9]..[1385,59248+29])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+9]..[1385,59248+17])
                                    Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1385,59248+12]..[1385,59248+14])
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+9]..[1385,59248+17]) ghost
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+9]..[1385,59248+11])
                                            Pexp_ident "h'" (middle_end/flambda/inline_and_simplify.ml[1385,59248+9]..[1385,59248+11])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+15]..[1385,59248+17])
                                            Pexp_ident "t'" (middle_end/flambda/inline_and_simplify.ml[1385,59248+15]..[1385,59248+17])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+19]..[1385,59248+26])
                                    Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[1385,59248+19]..[1385,59248+26])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1385,59248+28]..[1385,59248+29])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1385,59248+28]..[1385,59248+29])
                                ]
                ]
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1387,59279+4]..[1387,59279+22])
          Ppat_var "duplicate_function" (middle_end/flambda/inline_and_simplify.ml[1387,59279+4]..[1387,59279+22])
        expression (middle_end/flambda/inline_and_simplify.ml[1387,59279+23]..[1432,61209+33]) ghost
          Pexp_fun
          Labelled "env"
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1387,59279+24]..[1387,59279+27])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1387,59279+24]..[1387,59279+27])
          expression (middle_end/flambda/inline_and_simplify.ml[1387,59279+28]..[1432,61209+33]) ghost
            Pexp_fun
            Labelled "set_of_closures"
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1387,59279+30]..[1387,59279+71])
              Ppat_constraint
              pattern (middle_end/flambda/inline_and_simplify.ml[1387,59279+30]..[1387,59279+45])
                Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1387,59279+30]..[1387,59279+45])
              core_type (middle_end/flambda/inline_and_simplify.ml[1387,59279+48]..[1387,59279+71])
                Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1387,59279+48]..[1387,59279+71])
                []
            expression (middle_end/flambda/inline_and_simplify.ml[1388,59352+6]..[1432,61209+33]) ghost
              Pexp_fun
              Labelled "fun_var"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1388,59352+7]..[1388,59352+14])
                Ppat_var "fun_var" (middle_end/flambda/inline_and_simplify.ml[1388,59352+7]..[1388,59352+14])
              expression (middle_end/flambda/inline_and_simplify.ml[1388,59352+15]..[1432,61209+33]) ghost
                Pexp_fun
                Labelled "new_fun_var"
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[1388,59352+16]..[1388,59352+27])
                  Ppat_var "new_fun_var" (middle_end/flambda/inline_and_simplify.ml[1388,59352+16]..[1388,59352+27])
                expression (middle_end/flambda/inline_and_simplify.ml[1389,59382+2]..[1432,61209+33])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1389,59382+6]..[1389,59382+19])
                        Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[1389,59382+6]..[1389,59382+19])
                      expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+4]..[1394,59611+36])
                        Pexp_match
                        expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+10]..[1390,59404+71])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+10]..[1390,59404+27])
                            Pexp_ident "Variable.Map.find" (middle_end/flambda/inline_and_simplify.ml[1390,59404+10]..[1390,59404+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+28]..[1390,59404+35])
                                Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[1390,59404+28]..[1390,59404+35])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+36]..[1390,59404+71])
                                Pexp_field
                                expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+36]..[1390,59404+66])
                                  Pexp_field
                                  expression (middle_end/flambda/inline_and_simplify.ml[1390,59404+36]..[1390,59404+51])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1390,59404+36]..[1390,59404+51])
                                  "function_decls" (middle_end/flambda/inline_and_simplify.ml[1390,59404+52]..[1390,59404+66])
                                "funs" (middle_end/flambda/inline_and_simplify.ml[1390,59404+67]..[1390,59404+71])
                          ]
                        [
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1391,59481+6]..[1391,59481+25])
                              Ppat_exception
                              pattern (middle_end/flambda/inline_and_simplify.ml[1391,59481+16]..[1391,59481+25])
                                Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[1391,59481+16]..[1391,59481+25])
                                None
                            expression (middle_end/flambda/inline_and_simplify.ml[1392,59510+6]..[1393,59580+30])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1392,59510+6]..[1392,59510+23])
                                Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1392,59510+6]..[1392,59510+23])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1392,59510+24]..[1392,59510+69])
                                    Pexp_constant PConst_string("duplicate_function: cannot find function %a",(middle_end/flambda/inline_and_simplify.ml[1392,59510+25]..[1392,59510+68]),None)
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1393,59580+8]..[1393,59580+22])
                                    Pexp_ident "Variable.print" (middle_end/flambda/inline_and_simplify.ml[1393,59580+8]..[1393,59580+22])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1393,59580+23]..[1393,59580+30])
                                    Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[1393,59580+23]..[1393,59580+30])
                              ]
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1394,59611+6]..[1394,59611+19])
                              Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[1394,59611+6]..[1394,59611+19])
                            expression (middle_end/flambda/inline_and_simplify.ml[1394,59611+23]..[1394,59611+36])
                              Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1394,59611+23]..[1394,59611+36])
                        ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+2]..[1432,61209+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1396,59653+6]..[1396,59653+9])
                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1396,59653+6]..[1396,59653+9])
                        expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+12]..[1396,59653+58])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+12]..[1396,59653+33])
                            Pexp_ident "E.activate_freshening" (middle_end/flambda/inline_and_simplify.ml[1396,59653+12]..[1396,59653+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+34]..[1396,59653+58])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+35]..[1396,59653+53])
                                  Pexp_ident "E.set_never_inline" (middle_end/flambda/inline_and_simplify.ml[1396,59653+35]..[1396,59653+53])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1396,59653+54]..[1396,59653+57])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1396,59653+54]..[1396,59653+57])
                                ]
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1397,59715+2]..[1432,61209+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inline_and_simplify.ml[1397,59715+6]..[1398,59792+58])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1397,59715+6]..[1397,59715+15])
                                Ppat_var "free_vars" (middle_end/flambda/inline_and_simplify.ml[1397,59715+6]..[1397,59715+15])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1397,59715+17]..[1397,59715+33])
                                Ppat_var "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1397,59715+17]..[1397,59715+33])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1397,59715+35]..[1397,59715+49])
                                Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[1397,59715+35]..[1397,59715+49])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1397,59715+51]..[1397,59715+75])
                                Ppat_var "parameter_approximations" (middle_end/flambda/inline_and_simplify.ml[1397,59715+51]..[1397,59715+75])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1398,59792+6]..[1398,59792+37])
                                Ppat_var "_internal_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1398,59792+6]..[1398,59792+37])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1398,59792+39]..[1398,59792+58])
                                Ppat_var "set_of_closures_env" (middle_end/flambda/inline_and_simplify.ml[1398,59792+39]..[1398,59792+58])
                            ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1399,59853+4]..[1401,59992+65])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1399,59853+4]..[1399,59853+63])
                              Pexp_ident "Inline_and_simplify_aux.prepare_to_simplify_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1399,59853+4]..[1399,59853+63])
                            [
                              <arg>
                              Labelled "env"
                                expression (middle_end/flambda/inline_and_simplify.ml[1399,59853+65]..[1399,59853+68])
                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1399,59853+65]..[1399,59853+68])
                              <arg>
                              Labelled "set_of_closures"
                                expression (middle_end/flambda/inline_and_simplify.ml[1400,59922+7]..[1400,59922+22])
                                  Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1400,59922+7]..[1400,59922+22])
                              <arg>
                              Labelled "function_decls"
                                expression (middle_end/flambda/inline_and_simplify.ml[1400,59922+39]..[1400,59922+69])
                                  Pexp_field
                                  expression (middle_end/flambda/inline_and_simplify.ml[1400,59922+39]..[1400,59922+54])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1400,59922+39]..[1400,59922+54])
                                  "function_decls" (middle_end/flambda/inline_and_simplify.ml[1400,59922+55]..[1400,59922+69])
                              <arg>
                              Labelled "freshen"
                                expression (middle_end/flambda/inline_and_simplify.ml[1401,59992+15]..[1401,59992+20])
                                  Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1401,59992+15]..[1401,59992+20])
                                  None
                              <arg>
                              Labelled "only_for_function_decl"
                                expression (middle_end/flambda/inline_and_simplify.ml[1401,59992+45]..[1401,59992+65])
                                  Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1401,59992+46]..[1401,59992+50])
                                  Some
                                    expression (middle_end/flambda/inline_and_simplify.ml[1401,59992+51]..[1401,59992+64])
                                      Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1401,59992+51]..[1401,59992+64])
                            ]
                      ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1403,60063+2]..[1432,61209+33])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1403,60063+6]..[1403,60063+19])
                              Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[1403,60063+6]..[1403,60063+19])
                            expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+4]..[1408,60280+36])
                              Pexp_match
                              expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+10]..[1404,60085+55])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+10]..[1404,60085+27])
                                  Pexp_ident "Variable.Map.find" (middle_end/flambda/inline_and_simplify.ml[1404,60085+10]..[1404,60085+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+28]..[1404,60085+35])
                                      Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[1404,60085+28]..[1404,60085+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+36]..[1404,60085+55])
                                      Pexp_field
                                      expression (middle_end/flambda/inline_and_simplify.ml[1404,60085+36]..[1404,60085+50])
                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1404,60085+36]..[1404,60085+50])
                                      "funs" (middle_end/flambda/inline_and_simplify.ml[1404,60085+51]..[1404,60085+55])
                                ]
                              [
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1405,60146+6]..[1405,60146+25])
                                    Ppat_exception
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1405,60146+16]..[1405,60146+25])
                                      Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[1405,60146+16]..[1405,60146+25])
                                      None
                                  expression (middle_end/flambda/inline_and_simplify.ml[1406,60175+6]..[1407,60249+30])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1406,60175+6]..[1406,60175+23])
                                      Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1406,60175+6]..[1406,60175+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1406,60175+24]..[1406,60175+73])
                                          Pexp_constant PConst_string("duplicate_function: cannot find function %a (2)",(middle_end/flambda/inline_and_simplify.ml[1406,60175+25]..[1406,60175+72]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1407,60249+8]..[1407,60249+22])
                                          Pexp_ident "Variable.print" (middle_end/flambda/inline_and_simplify.ml[1407,60249+8]..[1407,60249+22])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1407,60249+23]..[1407,60249+30])
                                          Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[1407,60249+23]..[1407,60249+30])
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1408,60280+6]..[1408,60280+19])
                                    Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[1408,60280+6]..[1408,60280+19])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1408,60280+23]..[1408,60280+36])
                                    Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1408,60280+23]..[1408,60280+36])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1410,60322+2]..[1432,61209+33])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1410,60322+6]..[1410,60322+17])
                                Ppat_var "closure_env" (middle_end/flambda/inline_and_simplify.ml[1410,60322+6]..[1410,60322+17])
                              expression (middle_end/flambda/inline_and_simplify.ml[1411,60342+4]..[1413,60474+26])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1411,60342+4]..[1411,60342+55])
                                  Pexp_ident "Inline_and_simplify_aux.prepare_to_simplify_closure" (middle_end/flambda/inline_and_simplify.ml[1411,60342+4]..[1411,60342+55])
                                [
                                  <arg>
                                  Labelled "function_decl"
                                    expression (middle_end/flambda/inline_and_simplify.ml[1411,60342+57]..[1411,60342+70])
                                      Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1411,60342+57]..[1411,60342+70])
                                  <arg>
                                  Labelled "free_vars"
                                    expression (middle_end/flambda/inline_and_simplify.ml[1412,60413+7]..[1412,60413+16])
                                      Pexp_ident "free_vars" (middle_end/flambda/inline_and_simplify.ml[1412,60413+7]..[1412,60413+16])
                                  <arg>
                                  Labelled "specialised_args"
                                    expression (middle_end/flambda/inline_and_simplify.ml[1412,60413+18]..[1412,60413+34])
                                      Pexp_ident "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1412,60413+18]..[1412,60413+34])
                                  <arg>
                                  Labelled "parameter_approximations"
                                    expression (middle_end/flambda/inline_and_simplify.ml[1412,60413+36]..[1412,60413+60])
                                      Pexp_ident "parameter_approximations" (middle_end/flambda/inline_and_simplify.ml[1412,60413+36]..[1412,60413+60])
                                  <arg>
                                  Labelled "set_of_closures_env"
                                    expression (middle_end/flambda/inline_and_simplify.ml[1413,60474+7]..[1413,60474+26])
                                      Pexp_ident "set_of_closures_env" (middle_end/flambda/inline_and_simplify.ml[1413,60474+7]..[1413,60474+26])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1415,60506+2]..[1432,61209+33])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1415,60506+6]..[1415,60506+14])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1415,60506+6]..[1415,60506+10])
                                      Ppat_var "body" (middle_end/flambda/inline_and_simplify.ml[1415,60506+6]..[1415,60506+10])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1415,60506+12]..[1415,60506+14])
                                      Ppat_var "_r" (middle_end/flambda/inline_and_simplify.ml[1415,60506+12]..[1415,60506+14])
                                  ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1416,60523+4]..[1423,60793+59])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1416,60523+4]..[1416,60523+19])
                                    Pexp_ident "E.enter_closure" (middle_end/flambda/inline_and_simplify.ml[1416,60523+4]..[1416,60523+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1416,60523+20]..[1416,60523+31])
                                        Pexp_ident "closure_env" (middle_end/flambda/inline_and_simplify.ml[1416,60523+20]..[1416,60523+31])
                                    <arg>
                                    Labelled "closure_id"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1417,60555+18]..[1417,60555+43])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1417,60555+19]..[1417,60555+34])
                                          Pexp_ident "Closure_id.wrap" (middle_end/flambda/inline_and_simplify.ml[1417,60555+19]..[1417,60555+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1417,60555+35]..[1417,60555+42])
                                              Pexp_ident "fun_var" (middle_end/flambda/inline_and_simplify.ml[1417,60555+35]..[1417,60555+42])
                                        ]
                                    <arg>
                                    Labelled "inline_inside"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1418,60599+21]..[1418,60599+26])
                                        Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1418,60599+21]..[1418,60599+26])
                                        None
                                    <arg>
                                    Labelled "dbg"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1419,60626+11]..[1419,60626+28])
                                        Pexp_field
                                        expression (middle_end/flambda/inline_and_simplify.ml[1419,60626+11]..[1419,60626+24])
                                          Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1419,60626+11]..[1419,60626+24])
                                        "dbg" (middle_end/flambda/inline_and_simplify.ml[1419,60626+25]..[1419,60626+28])
                                    <arg>
                                    Labelled "f"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1420,60655+9]..[1423,60793+59])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1420,60655+14]..[1420,60655+22])
                                          Ppat_var "body_env" (middle_end/flambda/inline_and_simplify.ml[1420,60655+14]..[1420,60655+22])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1421,60681+8]..[1423,60793+58])
                                          Pexp_sequence
                                          expression (middle_end/flambda/inline_and_simplify.ml[1421,60681+8]..[1422,60734+57])
                                            Pexp_assert
                                            expression (middle_end/flambda/inline_and_simplify.ml[1421,60681+15]..[1422,60734+57])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1421,60681+16]..[1421,60681+52])
                                                Pexp_ident "E.inside_set_of_closures_declaration" (middle_end/flambda/inline_and_simplify.ml[1421,60681+16]..[1421,60681+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1422,60734+10]..[1422,60734+47])
                                                    Pexp_field
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1422,60734+10]..[1422,60734+24])
                                                      Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1422,60734+10]..[1422,60734+24])
                                                    "set_of_closures_origin" (middle_end/flambda/inline_and_simplify.ml[1422,60734+25]..[1422,60734+47])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1422,60734+48]..[1422,60734+56])
                                                    Pexp_ident "body_env" (middle_end/flambda/inline_and_simplify.ml[1422,60734+48]..[1422,60734+56])
                                              ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+8]..[1423,60793+58])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+8]..[1423,60793+16])
                                              Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1423,60793+8]..[1423,60793+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+17]..[1423,60793+25])
                                                  Pexp_ident "body_env" (middle_end/flambda/inline_and_simplify.ml[1423,60793+17]..[1423,60793+25])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+26]..[1423,60793+39])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+27]..[1423,60793+35])
                                                    Pexp_ident "R.create" (middle_end/flambda/inline_and_simplify.ml[1423,60793+27]..[1423,60793+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+36]..[1423,60793+38])
                                                        Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[1423,60793+36]..[1423,60793+38])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+40]..[1423,60793+58])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1423,60793+40]..[1423,60793+53])
                                                    Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1423,60793+40]..[1423,60793+53])
                                                  "body" (middle_end/flambda/inline_and_simplify.ml[1423,60793+54]..[1423,60793+58])
                                            ]
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1425,60858+2]..[1432,61209+33])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1425,60858+6]..[1425,60858+19])
                                    Ppat_var "function_decl" (middle_end/flambda/inline_and_simplify.ml[1425,60858+6]..[1425,60858+19])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1426,60880+4]..[1430,61128+75])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1426,60880+4]..[1426,60880+39])
                                      Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/inline_and_simplify.ml[1426,60880+4]..[1426,60880+39])
                                    [
                                      <arg>
                                      Labelled "params"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1426,60880+48]..[1426,60880+68])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1426,60880+48]..[1426,60880+61])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1426,60880+48]..[1426,60880+61])
                                          "params" (middle_end/flambda/inline_and_simplify.ml[1426,60880+62]..[1426,60880+68])
                                      <arg>
                                      Labelled "body"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1427,60949+7]..[1427,60949+11])
                                          Pexp_ident "body" (middle_end/flambda/inline_and_simplify.ml[1427,60949+7]..[1427,60949+11])
                                      <arg>
                                      Labelled "stub"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1427,60949+18]..[1427,60949+36])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1427,60949+18]..[1427,60949+31])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1427,60949+18]..[1427,60949+31])
                                          "stub" (middle_end/flambda/inline_and_simplify.ml[1427,60949+32]..[1427,60949+36])
                                      <arg>
                                      Labelled "dbg"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1427,60949+42]..[1427,60949+59])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1427,60949+42]..[1427,60949+55])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1427,60949+42]..[1427,60949+55])
                                          "dbg" (middle_end/flambda/inline_and_simplify.ml[1427,60949+56]..[1427,60949+59])
                                      <arg>
                                      Labelled "inline"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1428,61009+14]..[1428,61009+34])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1428,61009+14]..[1428,61009+27])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1428,61009+14]..[1428,61009+27])
                                          "inline" (middle_end/flambda/inline_and_simplify.ml[1428,61009+28]..[1428,61009+34])
                                      <arg>
                                      Labelled "specialise"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1428,61009+47]..[1428,61009+71])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1428,61009+47]..[1428,61009+60])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1428,61009+47]..[1428,61009+60])
                                          "specialise" (middle_end/flambda/inline_and_simplify.ml[1428,61009+61]..[1428,61009+71])
                                      <arg>
                                      Labelled "is_a_functor"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1429,61081+20]..[1429,61081+46])
                                          Pexp_field
                                          expression (middle_end/flambda/inline_and_simplify.ml[1429,61081+20]..[1429,61081+33])
                                            Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1429,61081+20]..[1429,61081+33])
                                          "is_a_functor" (middle_end/flambda/inline_and_simplify.ml[1429,61081+34]..[1429,61081+46])
                                      <arg>
                                      Labelled "closure_origin"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1430,61128+22]..[1430,61128+75])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1430,61128+23]..[1430,61128+44])
                                            Pexp_ident "Closure_origin.create" (middle_end/flambda/inline_and_simplify.ml[1430,61128+23]..[1430,61128+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1430,61128+45]..[1430,61128+74])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1430,61128+46]..[1430,61128+61])
                                                  Pexp_ident "Closure_id.wrap" (middle_end/flambda/inline_and_simplify.ml[1430,61128+46]..[1430,61128+61])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1430,61128+62]..[1430,61128+73])
                                                      Pexp_ident "new_fun_var" (middle_end/flambda/inline_and_simplify.ml[1430,61128+62]..[1430,61128+73])
                                                ]
                                          ]
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1432,61209+2]..[1432,61209+33])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[1432,61209+2]..[1432,61209+15])
                                    Pexp_ident "function_decl" (middle_end/flambda/inline_and_simplify.ml[1432,61209+2]..[1432,61209+15])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1432,61209+17]..[1432,61209+33])
                                    Pexp_ident "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1432,61209+17]..[1432,61209+33])
                                ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1434,61244+0]..[1508,64276+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1434,61244+4]..[1434,61244+34])
          Ppat_var "constant_defining_value_approx" (middle_end/flambda/inline_and_simplify.ml[1434,61244+4]..[1434,61244+34])
        expression (middle_end/flambda/inline_and_simplify.ml[1435,61279+4]..[1508,64276+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1435,61279+4]..[1435,61279+7])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1435,61279+4]..[1435,61279+7])
          expression (middle_end/flambda/inline_and_simplify.ml[1436,61287+4]..[1508,64276+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1436,61287+4]..[1436,61287+61])
              Ppat_constraint
              pattern (middle_end/flambda/inline_and_simplify.ml[1436,61287+5]..[1436,61287+28])
                Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1436,61287+5]..[1436,61287+28])
              core_type (middle_end/flambda/inline_and_simplify.ml[1436,61287+29]..[1436,61287+60])
                Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1436,61287+29]..[1436,61287+60])
                []
            expression (middle_end/flambda/inline_and_simplify.ml[1437,61351+2]..[1508,64276+7])
              Pexp_match
              expression (middle_end/flambda/inline_and_simplify.ml[1437,61351+8]..[1437,61351+31])
                Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1437,61351+8]..[1437,61351+31])
              [
                <case>
                  pattern (middle_end/flambda/inline_and_simplify.ml[1438,61388+4]..[1438,61388+25])
                    Ppat_construct "Allocated_const" (middle_end/flambda/inline_and_simplify.ml[1438,61388+4]..[1438,61388+19])
                    Some
                      []
                      pattern (middle_end/flambda/inline_and_simplify.ml[1438,61388+20]..[1438,61388+25])
                        Ppat_var "const" (middle_end/flambda/inline_and_simplify.ml[1438,61388+20]..[1438,61388+25])
                  expression (middle_end/flambda/inline_and_simplify.ml[1439,61417+4]..[1439,61417+36])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[1439,61417+4]..[1439,61417+30])
                      Pexp_ident "approx_for_allocated_const" (middle_end/flambda/inline_and_simplify.ml[1439,61417+4]..[1439,61417+30])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[1439,61417+31]..[1439,61417+36])
                          Pexp_ident "const" (middle_end/flambda/inline_and_simplify.ml[1439,61417+31]..[1439,61417+36])
                    ]
                <case>
                  pattern (middle_end/flambda/inline_and_simplify.ml[1440,61454+4]..[1440,61454+23])
                    Ppat_construct "Block" (middle_end/flambda/inline_and_simplify.ml[1440,61454+4]..[1440,61454+9])
                    Some
                      []
                      pattern (middle_end/flambda/inline_and_simplify.ml[1440,61454+10]..[1440,61454+23])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[1440,61454+11]..[1440,61454+14])
                            Ppat_var "tag" (middle_end/flambda/inline_and_simplify.ml[1440,61454+11]..[1440,61454+14])
                          pattern (middle_end/flambda/inline_and_simplify.ml[1440,61454+16]..[1440,61454+22])
                            Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1440,61454+16]..[1440,61454+22])
                        ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1441,61481+4]..[1452,61807+44])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1441,61481+8]..[1441,61481+14])
                          Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1441,61481+8]..[1441,61481+14])
                        expression (middle_end/flambda/inline_and_simplify.ml[1442,61498+6]..[1450,61785+14])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1442,61498+6]..[1442,61498+14])
                            Pexp_ident "List.map" (middle_end/flambda/inline_and_simplify.ml[1442,61498+6]..[1442,61498+14])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1443,61513+8]..[1449,61732+52])
                                Pexp_function
                                [
                                  <case>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1444,61531+12]..[1444,61531+30])
                                      Ppat_construct "Flambda.Symbol" (middle_end/flambda/inline_and_simplify.ml[1444,61531+12]..[1444,61531+26])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1444,61531+27]..[1444,61531+30])
                                          Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[1444,61531+27]..[1444,61531+30])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1444,61531+34]..[1448,61716+15])
                                      Pexp_match
                                      expression (middle_end/flambda/inline_and_simplify.ml[1445,61571+20]..[1445,61571+45])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1445,61571+20]..[1445,61571+37])
                                          Pexp_ident "E.find_symbol_opt" (middle_end/flambda/inline_and_simplify.ml[1445,61571+20]..[1445,61571+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1445,61571+38]..[1445,61571+41])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1445,61571+38]..[1445,61571+41])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1445,61571+42]..[1445,61571+45])
                                              Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[1445,61571+42]..[1445,61571+45])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1446,61622+16]..[1446,61622+27])
                                            Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1446,61622+16]..[1446,61622+20])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1446,61622+21]..[1446,61622+27])
                                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1446,61622+21]..[1446,61622+27])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1446,61622+31]..[1446,61622+37])
                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1446,61622+31]..[1446,61622+37])
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1447,61660+16]..[1447,61660+20])
                                            Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1447,61660+16]..[1447,61660+20])
                                            None
                                          expression (middle_end/flambda/inline_and_simplify.ml[1447,61660+24]..[1447,61660+55])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1447,61660+24]..[1447,61660+42])
                                              Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[1447,61660+24]..[1447,61660+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1447,61660+43]..[1447,61660+55])
                                                  Pexp_construct "Symbol" (middle_end/flambda/inline_and_simplify.ml[1447,61660+44]..[1447,61660+50])
                                                  Some
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1447,61660+51]..[1447,61660+54])
                                                      Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[1447,61660+51]..[1447,61660+54])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1449,61732+12]..[1449,61732+29])
                                      Ppat_construct "Flambda.Const" (middle_end/flambda/inline_and_simplify.ml[1449,61732+12]..[1449,61732+25])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1449,61732+26]..[1449,61732+29])
                                          Ppat_var "cst" (middle_end/flambda/inline_and_simplify.ml[1449,61732+26]..[1449,61732+29])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1449,61732+33]..[1449,61732+51])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1449,61732+33]..[1449,61732+47])
                                        Pexp_ident "simplify_const" (middle_end/flambda/inline_and_simplify.ml[1449,61732+33]..[1449,61732+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1449,61732+48]..[1449,61732+51])
                                            Pexp_ident "cst" (middle_end/flambda/inline_and_simplify.ml[1449,61732+48]..[1449,61732+51])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1450,61785+8]..[1450,61785+14])
                                Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1450,61785+8]..[1450,61785+14])
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+4]..[1452,61807+44])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+4]..[1452,61807+17])
                        Pexp_ident "A.value_block" (middle_end/flambda/inline_and_simplify.ml[1452,61807+4]..[1452,61807+17])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+18]..[1452,61807+21])
                            Pexp_ident "tag" (middle_end/flambda/inline_and_simplify.ml[1452,61807+18]..[1452,61807+21])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+22]..[1452,61807+44])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+23]..[1452,61807+36])
                              Pexp_ident "Array.of_list" (middle_end/flambda/inline_and_simplify.ml[1452,61807+23]..[1452,61807+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1452,61807+37]..[1452,61807+43])
                                  Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1452,61807+37]..[1452,61807+43])
                            ]
                      ]
                <case>
                  pattern (middle_end/flambda/inline_and_simplify.ml[1453,61852+4]..[1453,61852+67])
                    Ppat_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1453,61852+4]..[1453,61852+19])
                    Some
                      []
                      pattern (middle_end/flambda/inline_and_simplify.ml[1453,61852+20]..[1453,61852+67])
                        Ppat_record Closed
                        [
                          "function_decls" (middle_end/flambda/inline_and_simplify.ml[1453,61852+22]..[1453,61852+36]) ghost
                            pattern (middle_end/flambda/inline_and_simplify.ml[1453,61852+22]..[1453,61852+36])
                              Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[1453,61852+22]..[1453,61852+36])
                          "free_vars" (middle_end/flambda/inline_and_simplify.ml[1453,61852+38]..[1453,61852+47]) ghost
                            pattern (middle_end/flambda/inline_and_simplify.ml[1453,61852+38]..[1453,61852+47])
                              Ppat_var "free_vars" (middle_end/flambda/inline_and_simplify.ml[1453,61852+38]..[1453,61852+47])
                          "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1453,61852+49]..[1453,61852+65]) ghost
                            pattern (middle_end/flambda/inline_and_simplify.ml[1453,61852+49]..[1453,61852+65])
                              Ppat_var "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1453,61852+49]..[1453,61852+65])
                        ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+4]..[1485,63177+49])
                    Pexp_sequence
                    expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+4]..[1457,62128+50])
                      Pexp_assert
                      expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+10]..[1457,62128+50])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+11]..[1457,62128+30])
                          Pexp_ident "Freshening.is_empty" (middle_end/flambda/inline_and_simplify.ml[1457,62128+11]..[1457,62128+30])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+31]..[1457,62128+49])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+32]..[1457,62128+44])
                                Pexp_ident "E.freshening" (middle_end/flambda/inline_and_simplify.ml[1457,62128+32]..[1457,62128+44])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1457,62128+45]..[1457,62128+48])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1457,62128+45]..[1457,62128+48])
                              ]
                        ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1458,62180+4]..[1485,63177+49])
                      Pexp_sequence
                      expression (middle_end/flambda/inline_and_simplify.ml[1458,62180+4]..[1458,62180+43])
                        Pexp_assert
                        expression (middle_end/flambda/inline_and_simplify.ml[1458,62180+10]..[1458,62180+43])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1458,62180+11]..[1458,62180+32])
                            Pexp_ident "Variable.Map.is_empty" (middle_end/flambda/inline_and_simplify.ml[1458,62180+11]..[1458,62180+32])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1458,62180+33]..[1458,62180+42])
                                Pexp_ident "free_vars" (middle_end/flambda/inline_and_simplify.ml[1458,62180+33]..[1458,62180+42])
                          ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1459,62225+4]..[1485,63177+49])
                        Pexp_sequence
                        expression (middle_end/flambda/inline_and_simplify.ml[1459,62225+4]..[1459,62225+50])
                          Pexp_assert
                          expression (middle_end/flambda/inline_and_simplify.ml[1459,62225+10]..[1459,62225+50])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1459,62225+11]..[1459,62225+32])
                              Pexp_ident "Variable.Map.is_empty" (middle_end/flambda/inline_and_simplify.ml[1459,62225+11]..[1459,62225+32])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1459,62225+33]..[1459,62225+49])
                                  Pexp_ident "specialised_args" (middle_end/flambda/inline_and_simplify.ml[1459,62225+33]..[1459,62225+49])
                            ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1460,62277+4]..[1485,63177+49])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1460,62277+8]..[1460,62277+24])
                                Ppat_var "invariant_params" (middle_end/flambda/inline_and_simplify.ml[1460,62277+8]..[1460,62277+24])
                              expression (middle_end/flambda/inline_and_simplify.ml[1461,62304+6]..[1462,62378+33])
                                Pexp_lazy
                                expression (middle_end/flambda/inline_and_simplify.ml[1461,62304+11]..[1462,62378+33])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1461,62304+12]..[1461,62304+58])
                                    Pexp_ident "Invariant_params.invariant_params_in_recursion" (middle_end/flambda/inline_and_simplify.ml[1461,62304+12]..[1461,62304+58])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1461,62304+59]..[1461,62304+73])
                                        Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1461,62304+59]..[1461,62304+73])
                                    <arg>
                                    Labelled "backend"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1462,62378+17]..[1462,62378+32])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1462,62378+18]..[1462,62378+27])
                                          Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[1462,62378+18]..[1462,62378+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1462,62378+28]..[1462,62378+31])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1462,62378+28]..[1462,62378+31])
                                        ]
                                  ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1464,62419+4]..[1485,63177+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1464,62419+8]..[1464,62419+17])
                                  Ppat_var "recursive" (middle_end/flambda/inline_and_simplify.ml[1464,62419+8]..[1464,62419+17])
                                expression (middle_end/flambda/inline_and_simplify.ml[1465,62439+6]..[1466,62516+33])
                                  Pexp_lazy
                                  expression (middle_end/flambda/inline_and_simplify.ml[1465,62439+11]..[1466,62516+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1465,62439+12]..[1465,62439+61])
                                      Pexp_ident "Find_recursive_functions.in_function_declarations" (middle_end/flambda/inline_and_simplify.ml[1465,62439+12]..[1465,62439+61])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1465,62439+62]..[1465,62439+76])
                                          Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1465,62439+62]..[1465,62439+76])
                                      <arg>
                                      Labelled "backend"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1466,62516+17]..[1466,62516+32])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1466,62516+18]..[1466,62516+27])
                                            Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[1466,62516+18]..[1466,62516+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1466,62516+28]..[1466,62516+31])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1466,62516+28]..[1466,62516+31])
                                          ]
                                    ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1468,62557+4]..[1485,63177+49])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1468,62557+8]..[1468,62557+29])
                                    Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1468,62557+8]..[1468,62557+29])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1469,62589+6]..[1483,63117+52])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1469,62589+10]..[1469,62589+19])
                                          Ppat_var "keep_body" (middle_end/flambda/inline_and_simplify.ml[1469,62589+10]..[1469,62589+19])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1470,62611+8]..[1471,62659+68])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1470,62611+8]..[1470,62611+47])
                                            Pexp_ident "Inline_and_simplify_aux.keep_body_check" (middle_end/flambda/inline_and_simplify.ml[1470,62611+8]..[1470,62611+47])
                                          [
                                            <arg>
                                            Labelled "is_classic_mode"
                                              expression (middle_end/flambda/inline_and_simplify.ml[1471,62659+27]..[1471,62659+57])
                                                Pexp_field
                                                expression (middle_end/flambda/inline_and_simplify.ml[1471,62659+27]..[1471,62659+41])
                                                  Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1471,62659+27]..[1471,62659+41])
                                                "is_classic_mode" (middle_end/flambda/inline_and_simplify.ml[1471,62659+42]..[1471,62659+57])
                                            <arg>
                                            Labelled "recursive"
                                              expression (middle_end/flambda/inline_and_simplify.ml[1471,62659+59]..[1471,62659+68])
                                                Pexp_ident "recursive" (middle_end/flambda/inline_and_simplify.ml[1471,62659+59]..[1471,62659+68])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1473,62737+6]..[1483,63117+52])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1473,62737+10]..[1473,62737+24])
                                            Ppat_var "function_decls" (middle_end/flambda/inline_and_simplify.ml[1473,62737+10]..[1473,62737+24])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1474,62764+8]..[1474,62764+64])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1474,62764+8]..[1474,62764+38])
                                              Pexp_ident "A.function_declarations_approx" (middle_end/flambda/inline_and_simplify.ml[1474,62764+8]..[1474,62764+38])
                                            [
                                              <arg>
                                              Labelled "keep_body"
                                                expression (middle_end/flambda/inline_and_simplify.ml[1474,62764+40]..[1474,62764+49])
                                                  Pexp_ident "keep_body" (middle_end/flambda/inline_and_simplify.ml[1474,62764+40]..[1474,62764+49])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1474,62764+50]..[1474,62764+64])
                                                  Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1474,62764+50]..[1474,62764+64])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inline_and_simplify.ml[1476,62838+6]..[1483,63117+52])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1476,62838+6]..[1476,62838+36])
                                          Pexp_ident "A.create_value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1476,62838+6]..[1476,62838+36])
                                        [
                                          <arg>
                                          Labelled "function_decls"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1476,62838+38]..[1476,62838+52])
                                              Pexp_ident "function_decls" (middle_end/flambda/inline_and_simplify.ml[1476,62838+38]..[1476,62838+52])
                                          <arg>
                                          Labelled "bound_vars"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1477,62891+20]..[1477,62891+48])
                                              Pexp_ident "Var_within_closure.Map.empty" (middle_end/flambda/inline_and_simplify.ml[1477,62891+20]..[1477,62891+48])
                                          <arg>
                                          Labelled "invariant_params"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1478,62940+9]..[1478,62940+25])
                                              Pexp_ident "invariant_params" (middle_end/flambda/inline_and_simplify.ml[1478,62940+9]..[1478,62940+25])
                                          <arg>
                                          Labelled "recursive"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1479,62966+9]..[1479,62966+18])
                                              Pexp_ident "recursive" (middle_end/flambda/inline_and_simplify.ml[1479,62966+9]..[1479,62966+18])
                                          <arg>
                                          Labelled "specialised_args"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1480,62985+26]..[1480,62985+44])
                                              Pexp_ident "Variable.Map.empty" (middle_end/flambda/inline_and_simplify.ml[1480,62985+26]..[1480,62985+44])
                                          <arg>
                                          Labelled "free_vars"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1481,63030+19]..[1481,63030+37])
                                              Pexp_ident "Variable.Map.empty" (middle_end/flambda/inline_and_simplify.ml[1481,63030+19]..[1481,63030+37])
                                          <arg>
                                          Labelled "freshening"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1482,63068+20]..[1482,63068+48])
                                              Pexp_ident "Freshening.Project_var.empty" (middle_end/flambda/inline_and_simplify.ml[1482,63068+20]..[1482,63068+48])
                                          <arg>
                                          Labelled "direct_call_surrogates"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1483,63117+32]..[1483,63117+52])
                                              Pexp_ident "Closure_id.Map.empty" (middle_end/flambda/inline_and_simplify.ml[1483,63117+32]..[1483,63117+52])
                                        ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1485,63177+4]..[1485,63177+49])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1485,63177+4]..[1485,63177+27])
                                  Pexp_ident "A.value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1485,63177+4]..[1485,63177+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1485,63177+28]..[1485,63177+49])
                                      Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1485,63177+28]..[1485,63177+49])
                                ]
                <case>
                  pattern (middle_end/flambda/inline_and_simplify.ml[1486,63227+4]..[1486,63227+56])
                    Ppat_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[1486,63227+4]..[1486,63227+19])
                    Some
                      []
                      pattern (middle_end/flambda/inline_and_simplify.ml[1486,63227+20]..[1486,63227+56])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[1486,63227+21]..[1486,63227+43])
                            Ppat_var "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[1486,63227+21]..[1486,63227+43])
                          pattern (middle_end/flambda/inline_and_simplify.ml[1486,63227+45]..[1486,63227+55])
                            Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[1486,63227+45]..[1486,63227+55])
                        ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1486,63227+60]..[1508,64276+7])
                    Pexp_match
                    expression (middle_end/flambda/inline_and_simplify.ml[1487,63293+12]..[1487,63293+56])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[1487,63293+12]..[1487,63293+29])
                        Pexp_ident "E.find_symbol_opt" (middle_end/flambda/inline_and_simplify.ml[1487,63293+12]..[1487,63293+29])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1487,63293+30]..[1487,63293+33])
                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1487,63293+30]..[1487,63293+33])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1487,63293+34]..[1487,63293+56])
                            Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[1487,63293+34]..[1487,63293+56])
                      ]
                    [
                      <case>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1488,63355+8]..[1488,63355+12])
                          Ppat_construct "None" (middle_end/flambda/inline_and_simplify.ml[1488,63355+8]..[1488,63355+12])
                          None
                        expression (middle_end/flambda/inline_and_simplify.ml[1489,63371+8]..[1489,63371+58])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1489,63371+8]..[1489,63371+26])
                            Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[1489,63371+8]..[1489,63371+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1489,63371+27]..[1489,63371+58])
                                Pexp_construct "Symbol" (middle_end/flambda/inline_and_simplify.ml[1489,63371+28]..[1489,63371+34])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[1489,63371+35]..[1489,63371+57])
                                    Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[1489,63371+35]..[1489,63371+57])
                          ]
                      <case>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1490,63430+8]..[1490,63430+35])
                          Ppat_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1490,63430+8]..[1490,63430+12])
                          Some
                            []
                            pattern (middle_end/flambda/inline_and_simplify.ml[1490,63430+13]..[1490,63430+35])
                              Ppat_var "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[1490,63430+13]..[1490,63430+35])
                        expression (middle_end/flambda/inline_and_simplify.ml[1491,63469+8]..[1507,64202+73])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1491,63469+12]..[1491,63469+26])
                                Ppat_var "checked_approx" (middle_end/flambda/inline_and_simplify.ml[1491,63469+12]..[1491,63469+26])
                              expression (middle_end/flambda/inline_and_simplify.ml[1492,63498+10]..[1492,63498+67])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1492,63498+10]..[1492,63498+44])
                                  Pexp_ident "A.check_approx_for_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1492,63498+10]..[1492,63498+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1492,63498+45]..[1492,63498+67])
                                      Pexp_ident "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[1492,63498+45]..[1492,63498+67])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1494,63577+8]..[1507,64202+73])
                            Pexp_match
                            expression (middle_end/flambda/inline_and_simplify.ml[1494,63577+14]..[1494,63577+28])
                              Pexp_ident "checked_approx" (middle_end/flambda/inline_and_simplify.ml[1494,63577+14]..[1494,63577+28])
                            [
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1495,63611+10]..[1495,63611+39])
                                  Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[1495,63611+10]..[1495,63611+12])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1495,63611+13]..[1495,63611+39])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1495,63611+14]..[1495,63611+15])
                                          Ppat_any
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1495,63611+17]..[1495,63611+38])
                                          Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1495,63611+17]..[1495,63611+38])
                                      ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1496,63654+10]..[1499,63770+58])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1496,63654+14]..[1496,63654+24])
                                        Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[1496,63654+14]..[1496,63654+24])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1497,63681+12]..[1497,63681+75])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1497,63681+12]..[1497,63681+42])
                                          Pexp_ident "A.freshen_and_check_closure_id" (middle_end/flambda/inline_and_simplify.ml[1497,63681+12]..[1497,63681+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1497,63681+43]..[1497,63681+64])
                                              Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1497,63681+43]..[1497,63681+64])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1497,63681+65]..[1497,63681+75])
                                              Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[1497,63681+65]..[1497,63681+75])
                                        ]
                                  ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1499,63770+10]..[1499,63770+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1499,63770+10]..[1499,63770+25])
                                      Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[1499,63770+10]..[1499,63770+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1499,63770+26]..[1499,63770+47])
                                          Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1499,63770+26]..[1499,63770+47])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1499,63770+48]..[1499,63770+58])
                                          Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[1499,63770+48]..[1499,63770+58])
                                    ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1500,63829+10]..[1500,63829+24])
                                  Ppat_construct "Unresolved" (middle_end/flambda/inline_and_simplify.ml[1500,63829+10]..[1500,63829+20])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1500,63829+21]..[1500,63829+24])
                                      Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[1500,63829+21]..[1500,63829+24])
                                expression (middle_end/flambda/inline_and_simplify.ml[1500,63829+28]..[1500,63829+50])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1500,63829+28]..[1500,63829+46])
                                    Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[1500,63829+28]..[1500,63829+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1500,63829+47]..[1500,63829+50])
                                        Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[1500,63829+47]..[1500,63829+50])
                                  ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1501,63880+10]..[1501,63880+17])
                                  Ppat_construct "Unknown" (middle_end/flambda/inline_and_simplify.ml[1501,63880+10]..[1501,63880+17])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[1501,63880+21]..[1501,63880+42])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1501,63880+21]..[1501,63880+36])
                                    Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1501,63880+21]..[1501,63880+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1501,63880+37]..[1501,63880+42])
                                        Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1501,63880+37]..[1501,63880+42])
                                        None
                                  ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1502,63923+10]..[1502,63923+51])
                                  Ppat_construct "Unknown_because_of_unresolved_value" (middle_end/flambda/inline_and_simplify.ml[1502,63923+10]..[1502,63923+45])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1502,63923+46]..[1502,63923+51])
                                      Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[1502,63923+46]..[1502,63923+51])
                                expression (middle_end/flambda/inline_and_simplify.ml[1503,63978+10]..[1503,63978+50])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1503,63978+10]..[1503,63978+25])
                                    Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1503,63978+10]..[1503,63978+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1503,63978+26]..[1503,63978+50])
                                        Pexp_construct "Unresolved_value" (middle_end/flambda/inline_and_simplify.ml[1503,63978+27]..[1503,63978+43])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[1503,63978+44]..[1503,63978+49])
                                            Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[1503,63978+44]..[1503,63978+49])
                                  ]
                              <case>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1504,64029+10]..[1504,64029+15])
                                  Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[1504,64029+10]..[1504,64029+15])
                                  None
                                expression (middle_end/flambda/inline_and_simplify.ml[1505,64048+10]..[1507,64202+73])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1505,64048+10]..[1505,64048+27])
                                    Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1505,64048+10]..[1505,64048+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1505,64048+28]..[1506,64121+80])
                                        Pexp_constant PConst_string("Wrong approximation for [Project_closure] when being used as a [constant_defining_value]: %a",(middle_end/flambda/inline_and_simplify.ml[1505,64048+29]..[1506,64121+79]),None)
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1507,64202+12]..[1507,64202+49])
                                        Pexp_ident "Flambda.print_constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1507,64202+12]..[1507,64202+49])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1507,64202+50]..[1507,64202+73])
                                        Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1507,64202+50]..[1507,64202+73])
                                  ]
                            ]
                    ]
              ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1511,64345+0]..[1533,65098+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1511,64345+4]..[1511,64345+32])
          Ppat_var "define_let_rec_symbol_approx" (middle_end/flambda/inline_and_simplify.ml[1511,64345+4]..[1511,64345+32])
        expression (middle_end/flambda/inline_and_simplify.ml[1511,64345+33]..[1533,65098+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1511,64345+33]..[1511,64345+41])
            Ppat_var "orig_env" (middle_end/flambda/inline_and_simplify.ml[1511,64345+33]..[1511,64345+41])
          expression (middle_end/flambda/inline_and_simplify.ml[1511,64345+42]..[1533,65098+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1511,64345+42]..[1511,64345+46])
              Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1511,64345+42]..[1511,64345+46])
            expression (middle_end/flambda/inline_and_simplify.ml[1513,64448+2]..[1533,65098+17])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/inline_and_simplify.ml[1513,64448+6]..[1513,64448+14])
                    Ppat_var "init_env" (middle_end/flambda/inline_and_simplify.ml[1513,64448+6]..[1513,64448+14])
                  expression (middle_end/flambda/inline_and_simplify.ml[1514,64465+4]..[1516,64596+19])
                    Pexp_apply
                    expression (middle_end/flambda/inline_and_simplify.ml[1514,64465+4]..[1514,64465+18])
                      Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1514,64465+4]..[1514,64465+18])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[1514,64465+19]..[1515,64517+78])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inline_and_simplify.ml[1514,64465+24]..[1514,64465+36])
                            Ppat_var "building_env" (middle_end/flambda/inline_and_simplify.ml[1514,64465+24]..[1514,64465+36])
                          expression (middle_end/flambda/inline_and_simplify.ml[1514,64465+37]..[1515,64517+77]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[1514,64465+37]..[1514,64465+48])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1514,64465+38]..[1514,64465+44])
                                  Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1514,64465+38]..[1514,64465+44])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1514,64465+46]..[1514,64465+47])
                                  Ppat_any
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+8]..[1515,64517+77])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+8]..[1515,64517+20])
                                Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1515,64517+8]..[1515,64517+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+21]..[1515,64517+33])
                                    Pexp_ident "building_env" (middle_end/flambda/inline_and_simplify.ml[1515,64517+21]..[1515,64517+33])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+34]..[1515,64517+40])
                                    Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1515,64517+34]..[1515,64517+40])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+41]..[1515,64517+77])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+42]..[1515,64517+60])
                                      Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[1515,64517+42]..[1515,64517+60])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+61]..[1515,64517+76])
                                          Pexp_construct "Symbol" (middle_end/flambda/inline_and_simplify.ml[1515,64517+62]..[1515,64517+68])
                                          Some
                                            expression (middle_end/flambda/inline_and_simplify.ml[1515,64517+69]..[1515,64517+75])
                                              Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1515,64517+69]..[1515,64517+75])
                                    ]
                              ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[1516,64596+6]..[1516,64596+14])
                          Pexp_ident "orig_env" (middle_end/flambda/inline_and_simplify.ml[1516,64596+6]..[1516,64596+14])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inline_and_simplify.ml[1516,64596+15]..[1516,64596+19])
                          Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1516,64596+15]..[1516,64596+19])
                    ]
              ]
              expression (middle_end/flambda/inline_and_simplify.ml[1518,64621+2]..[1533,65098+17])
                Pexp_let Rec
                [
                  <def>
                    pattern (middle_end/flambda/inline_and_simplify.ml[1518,64621+10]..[1518,64621+14])
                      Ppat_var "loop" (middle_end/flambda/inline_and_simplify.ml[1518,64621+10]..[1518,64621+14])
                    expression (middle_end/flambda/inline_and_simplify.ml[1518,64621+15]..[1531,65068+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inline_and_simplify.ml[1518,64621+15]..[1518,64621+20])
                        Ppat_var "times" (middle_end/flambda/inline_and_simplify.ml[1518,64621+15]..[1518,64621+20])
                      expression (middle_end/flambda/inline_and_simplify.ml[1518,64621+21]..[1531,65068+24]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[1518,64621+21]..[1518,64621+31])
                          Ppat_var "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1518,64621+21]..[1518,64621+31])
                        expression (middle_end/flambda/inline_and_simplify.ml[1519,64655+4]..[1531,65068+24])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/inline_and_simplify.ml[1519,64655+7]..[1519,64655+17])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1519,64655+13]..[1519,64655+15])
                              Pexp_ident "<=" (middle_end/flambda/inline_and_simplify.ml[1519,64655+13]..[1519,64655+15])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1519,64655+7]..[1519,64655+12])
                                  Pexp_ident "times" (middle_end/flambda/inline_and_simplify.ml[1519,64655+7]..[1519,64655+12])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1519,64655+16]..[1519,64655+17])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1520,64678+6]..[1520,64678+16])
                            Pexp_ident "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1520,64678+6]..[1520,64678+16])
                          Some
                            expression (middle_end/flambda/inline_and_simplify.ml[1522,64704+6]..[1531,65068+24])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1522,64704+10]..[1522,64704+13])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1522,64704+10]..[1522,64704+13])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1523,64720+8]..[1529,65035+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1523,64720+8]..[1523,64720+22])
                                      Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1523,64720+8]..[1523,64720+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1523,64720+23]..[1528,64982+52])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1523,64720+28]..[1523,64720+40])
                                            Ppat_var "building_env" (middle_end/flambda/inline_and_simplify.ml[1523,64720+28]..[1523,64720+40])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1523,64720+41]..[1528,64982+51]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1523,64720+41]..[1523,64720+74])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1523,64720+42]..[1523,64720+48])
                                                  Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1523,64720+42]..[1523,64720+48])
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1523,64720+50]..[1523,64720+73])
                                                  Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1523,64720+50]..[1523,64720+73])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1524,64798+12]..[1528,64982+51])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1524,64798+16]..[1524,64798+22])
                                                    Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1524,64798+16]..[1524,64798+22])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1525,64823+14]..[1525,64823+79])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1525,64823+14]..[1525,64823+44])
                                                      Pexp_ident "constant_defining_value_approx" (middle_end/flambda/inline_and_simplify.ml[1525,64823+14]..[1525,64823+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1525,64823+45]..[1525,64823+55])
                                                          Pexp_ident "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1525,64823+45]..[1525,64823+55])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1525,64823+56]..[1525,64823+79])
                                                          Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1525,64823+56]..[1525,64823+79])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1527,64918+12]..[1528,64982+51])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1527,64918+16]..[1527,64918+22])
                                                      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1527,64918+16]..[1527,64918+22])
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1527,64918+25]..[1527,64918+60])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1527,64918+25]..[1527,64918+46])
                                                        Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1527,64918+25]..[1527,64918+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1527,64918+47]..[1527,64918+53])
                                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1527,64918+47]..[1527,64918+53])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1527,64918+54]..[1527,64918+60])
                                                            Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1527,64918+54]..[1527,64918+60])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1528,64982+12]..[1528,64982+51])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1528,64982+12]..[1528,64982+24])
                                                    Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1528,64982+12]..[1528,64982+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1528,64982+25]..[1528,64982+37])
                                                        Pexp_ident "building_env" (middle_end/flambda/inline_and_simplify.ml[1528,64982+25]..[1528,64982+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1528,64982+38]..[1528,64982+44])
                                                        Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1528,64982+38]..[1528,64982+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1528,64982+45]..[1528,64982+51])
                                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1528,64982+45]..[1528,64982+51])
                                                  ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1529,65035+10]..[1529,65035+18])
                                          Pexp_ident "orig_env" (middle_end/flambda/inline_and_simplify.ml[1529,65035+10]..[1529,65035+18])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1529,65035+19]..[1529,65035+23])
                                          Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1529,65035+19]..[1529,65035+23])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+6]..[1531,65068+24])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+6]..[1531,65068+10])
                                  Pexp_ident "loop" (middle_end/flambda/inline_and_simplify.ml[1531,65068+6]..[1531,65068+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+11]..[1531,65068+20])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+17]..[1531,65068+18])
                                        Pexp_ident "-" (middle_end/flambda/inline_and_simplify.ml[1531,65068+17]..[1531,65068+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+12]..[1531,65068+17])
                                            Pexp_ident "times" (middle_end/flambda/inline_and_simplify.ml[1531,65068+12]..[1531,65068+17])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+18]..[1531,65068+19])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1531,65068+21]..[1531,65068+24])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1531,65068+21]..[1531,65068+24])
                                ]
                ]
                expression (middle_end/flambda/inline_and_simplify.ml[1533,65098+2]..[1533,65098+17])
                  Pexp_apply
                  expression (middle_end/flambda/inline_and_simplify.ml[1533,65098+2]..[1533,65098+6])
                    Pexp_ident "loop" (middle_end/flambda/inline_and_simplify.ml[1533,65098+2]..[1533,65098+6])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[1533,65098+7]..[1533,65098+8])
                        Pexp_constant PConst_int (2,None)
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inline_and_simplify.ml[1533,65098+9]..[1533,65098+17])
                        Pexp_ident "init_env" (middle_end/flambda/inline_and_simplify.ml[1533,65098+9]..[1533,65098+17])
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1535,65117+0]..[1587,67409+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1535,65117+4]..[1535,65117+36])
          Ppat_var "simplify_constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1535,65117+4]..[1535,65117+36])
        expression (middle_end/flambda/inline_and_simplify.ml[1536,65154+4]..[1587,67409+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1536,65154+4]..[1536,65154+7])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1536,65154+4]..[1536,65154+7])
          expression (middle_end/flambda/inline_and_simplify.ml[1536,65154+8]..[1587,67409+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1536,65154+8]..[1536,65154+9])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1536,65154+8]..[1536,65154+9])
            expression (middle_end/flambda/inline_and_simplify.ml[1536,65154+10]..[1587,67409+36]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1536,65154+10]..[1536,65154+16])
                Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1536,65154+10]..[1536,65154+16])
              expression (middle_end/flambda/inline_and_simplify.ml[1537,65171+4]..[1587,67409+36]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[1537,65171+4]..[1537,65171+61])
                  Ppat_constraint
                  pattern (middle_end/flambda/inline_and_simplify.ml[1537,65171+5]..[1537,65171+28])
                    Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1537,65171+5]..[1537,65171+28])
                  core_type (middle_end/flambda/inline_and_simplify.ml[1537,65171+29]..[1537,65171+60])
                    Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1537,65171+29]..[1537,65171+60])
                    []
                expression (middle_end/flambda/inline_and_simplify.ml[1538,65235+2]..[1587,67409+36])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1538,65235+6]..[1538,65235+40])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[1538,65235+6]..[1538,65235+7])
                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1538,65235+6]..[1538,65235+7])
                          pattern (middle_end/flambda/inline_and_simplify.ml[1538,65235+9]..[1538,65235+32])
                            Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1538,65235+9]..[1538,65235+32])
                          pattern (middle_end/flambda/inline_and_simplify.ml[1538,65235+34]..[1538,65235+40])
                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1538,65235+34]..[1538,65235+40])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1539,65278+4]..[1583,67275+48])
                        Pexp_match
                        expression (middle_end/flambda/inline_and_simplify.ml[1539,65278+10]..[1539,65278+33])
                          Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1539,65278+10]..[1539,65278+33])
                        [
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1541,65393+6]..[1541,65393+27])
                              Ppat_construct "Allocated_const" (middle_end/flambda/inline_and_simplify.ml[1541,65393+6]..[1541,65393+21])
                              Some
                                []
                                pattern (middle_end/flambda/inline_and_simplify.ml[1541,65393+22]..[1541,65393+27])
                                  Ppat_var "const" (middle_end/flambda/inline_and_simplify.ml[1541,65393+22]..[1541,65393+27])
                            expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+6]..[1542,65424+66])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+6]..[1542,65424+7])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1542,65424+6]..[1542,65424+7])
                                expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+9]..[1542,65424+32])
                                  Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1542,65424+9]..[1542,65424+32])
                                expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+34]..[1542,65424+66])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+34]..[1542,65424+60])
                                    Pexp_ident "approx_for_allocated_const" (middle_end/flambda/inline_and_simplify.ml[1542,65424+34]..[1542,65424+60])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1542,65424+61]..[1542,65424+66])
                                        Pexp_ident "const" (middle_end/flambda/inline_and_simplify.ml[1542,65424+61]..[1542,65424+66])
                                  ]
                              ]
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1543,65491+6]..[1543,65491+25])
                              Ppat_construct "Block" (middle_end/flambda/inline_and_simplify.ml[1543,65491+6]..[1543,65491+11])
                              Some
                                []
                                pattern (middle_end/flambda/inline_and_simplify.ml[1543,65491+12]..[1543,65491+25])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1543,65491+13]..[1543,65491+16])
                                      Ppat_var "tag" (middle_end/flambda/inline_and_simplify.ml[1543,65491+13]..[1543,65491+16])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1543,65491+18]..[1543,65491+24])
                                      Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1543,65491+18]..[1543,65491+24])
                                  ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1544,65520+6]..[1550,65711+74])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1544,65520+10]..[1544,65520+16])
                                    Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1544,65520+10]..[1544,65520+16])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1544,65520+19]..[1548,65685+16])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1544,65520+19]..[1544,65520+27])
                                      Pexp_ident "List.map" (middle_end/flambda/inline_and_simplify.ml[1544,65520+19]..[1544,65520+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1545,65548+10]..[1547,65630+54])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1546,65568+14]..[1546,65568+32])
                                                Ppat_construct "Flambda.Symbol" (middle_end/flambda/inline_and_simplify.ml[1546,65568+14]..[1546,65568+28])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1546,65568+29]..[1546,65568+32])
                                                    Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[1546,65568+29]..[1546,65568+32])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1546,65568+36]..[1546,65568+61])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1546,65568+36]..[1546,65568+53])
                                                  Pexp_ident "E.find_symbol_exn" (middle_end/flambda/inline_and_simplify.ml[1546,65568+36]..[1546,65568+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1546,65568+54]..[1546,65568+57])
                                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1546,65568+54]..[1546,65568+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1546,65568+58]..[1546,65568+61])
                                                      Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[1546,65568+58]..[1546,65568+61])
                                                ]
                                            <case>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1547,65630+14]..[1547,65630+31])
                                                Ppat_construct "Flambda.Const" (middle_end/flambda/inline_and_simplify.ml[1547,65630+14]..[1547,65630+27])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1547,65630+28]..[1547,65630+31])
                                                    Ppat_var "cst" (middle_end/flambda/inline_and_simplify.ml[1547,65630+28]..[1547,65630+31])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1547,65630+35]..[1547,65630+53])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1547,65630+35]..[1547,65630+49])
                                                  Pexp_ident "simplify_const" (middle_end/flambda/inline_and_simplify.ml[1547,65630+35]..[1547,65630+49])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1547,65630+50]..[1547,65630+53])
                                                      Pexp_ident "cst" (middle_end/flambda/inline_and_simplify.ml[1547,65630+50]..[1547,65630+53])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1548,65685+10]..[1548,65685+16])
                                          Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1548,65685+10]..[1548,65685+16])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+6]..[1550,65711+74])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+6]..[1550,65711+7])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1550,65711+6]..[1550,65711+7])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+9]..[1550,65711+32])
                                    Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1550,65711+9]..[1550,65711+32])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+34]..[1550,65711+74])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+34]..[1550,65711+47])
                                      Pexp_ident "A.value_block" (middle_end/flambda/inline_and_simplify.ml[1550,65711+34]..[1550,65711+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+48]..[1550,65711+51])
                                          Pexp_ident "tag" (middle_end/flambda/inline_and_simplify.ml[1550,65711+48]..[1550,65711+51])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+52]..[1550,65711+74])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+53]..[1550,65711+66])
                                            Pexp_ident "Array.of_list" (middle_end/flambda/inline_and_simplify.ml[1550,65711+53]..[1550,65711+66])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1550,65711+67]..[1550,65711+73])
                                                Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1550,65711+67]..[1550,65711+73])
                                          ]
                                    ]
                                ]
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1551,65786+6]..[1551,65786+37])
                              Ppat_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1551,65786+6]..[1551,65786+21])
                              Some
                                []
                                pattern (middle_end/flambda/inline_and_simplify.ml[1551,65786+22]..[1551,65786+37])
                                  Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1551,65786+22]..[1551,65786+37])
                            expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+6]..[1561,66268+18])
                              Pexp_sequence
                              expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+6]..[1556,66069+9])
                                Pexp_ifthenelse
                                expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+9]..[1552,65827+61])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+57]..[1552,65827+59])
                                    Pexp_ident "<>" (middle_end/flambda/inline_and_simplify.ml[1552,65827+57]..[1552,65827+59])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+9]..[1552,65827+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+9]..[1552,65827+30])
                                          Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/inline_and_simplify.ml[1552,65827+9]..[1552,65827+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+31]..[1552,65827+56])
                                              Pexp_field
                                              expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+31]..[1552,65827+46])
                                                Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1552,65827+31]..[1552,65827+46])
                                              "free_vars" (middle_end/flambda/inline_and_simplify.ml[1552,65827+47]..[1552,65827+56])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+60]..[1552,65827+61])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1552,65827+67]..[1556,66069+9])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1553,65900+8]..[1553,65900+25])
                                    Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1553,65900+8]..[1553,65900+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1553,65900+26]..[1554,65974+38])
                                        Pexp_constant PConst_string("Set of closures bound by [Let_symbol] is not closed: %a",(middle_end/flambda/inline_and_simplify.ml[1553,65900+27]..[1554,65974+37]),None)
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1555,66013+10]..[1555,66013+39])
                                        Pexp_ident "Flambda.print_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1555,66013+10]..[1555,66013+39])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1555,66013+40]..[1555,66013+55])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1555,66013+40]..[1555,66013+55])
                                  ]
                                None
                              expression (middle_end/flambda/inline_and_simplify.ml[1557,66080+6]..[1561,66268+18])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1557,66080+10]..[1557,66080+41])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1557,66080+10]..[1557,66080+25])
                                          Ppat_var "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1557,66080+10]..[1557,66080+25])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1557,66080+27]..[1557,66080+28])
                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1557,66080+27]..[1557,66080+28])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1557,66080+30]..[1557,66080+41])
                                          Ppat_var "_freshening" (middle_end/flambda/inline_and_simplify.ml[1557,66080+30]..[1557,66080+41])
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1558,66124+8]..[1558,66124+54])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1558,66124+8]..[1558,66124+32])
                                        Pexp_ident "simplify_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1558,66124+8]..[1558,66124+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1558,66124+33]..[1558,66124+36])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1558,66124+33]..[1558,66124+36])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1558,66124+37]..[1558,66124+38])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1558,66124+37]..[1558,66124+38])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1558,66124+39]..[1558,66124+54])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1558,66124+39]..[1558,66124+54])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1560,66188+6]..[1561,66268+18])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1560,66188+6]..[1560,66188+7])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1560,66188+6]..[1560,66188+7])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1560,66188+9]..[1560,66188+78])
                                      Pexp_constraint
                                      expression (middle_end/flambda/inline_and_simplify.ml[1560,66188+10]..[1560,66188+43])
                                        Pexp_construct "Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1560,66188+11]..[1560,66188+26])
                                        Some
                                          expression (middle_end/flambda/inline_and_simplify.ml[1560,66188+27]..[1560,66188+42])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1560,66188+27]..[1560,66188+42])
                                      core_type (middle_end/flambda/inline_and_simplify.ml[1560,66188+46]..[1560,66188+77])
                                        Ptyp_constr "Flambda.constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1560,66188+46]..[1560,66188+77])
                                        []
                                    expression (middle_end/flambda/inline_and_simplify.ml[1561,66268+8]..[1561,66268+18])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1561,66268+8]..[1561,66268+16])
                                        Pexp_ident "R.approx" (middle_end/flambda/inline_and_simplify.ml[1561,66268+8]..[1561,66268+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1561,66268+17]..[1561,66268+18])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1561,66268+17]..[1561,66268+18])
                                      ]
                                  ]
                          <case>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1562,66287+6]..[1562,66287+58])
                              Ppat_construct "Project_closure" (middle_end/flambda/inline_and_simplify.ml[1562,66287+6]..[1562,66287+21])
                              Some
                                []
                                pattern (middle_end/flambda/inline_and_simplify.ml[1562,66287+22]..[1562,66287+58])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1562,66287+23]..[1562,66287+45])
                                      Ppat_var "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[1562,66287+23]..[1562,66287+45])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1562,66287+47]..[1562,66287+57])
                                      Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[1562,66287+47]..[1562,66287+57])
                                  ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1564,66400+6]..[1583,67275+48])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1564,66400+10]..[1564,66400+32])
                                    Ppat_var "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[1564,66400+10]..[1564,66400+32])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1565,66435+8]..[1565,66435+52])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1565,66435+8]..[1565,66435+25])
                                      Pexp_ident "E.find_symbol_exn" (middle_end/flambda/inline_and_simplify.ml[1565,66435+8]..[1565,66435+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1565,66435+26]..[1565,66435+29])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1565,66435+26]..[1565,66435+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1565,66435+30]..[1565,66435+52])
                                          Pexp_ident "set_of_closures_symbol" (middle_end/flambda/inline_and_simplify.ml[1565,66435+30]..[1565,66435+52])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1567,66497+6]..[1583,67275+48])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1567,66497+10]..[1567,66497+24])
                                      Ppat_var "closure_approx" (middle_end/flambda/inline_and_simplify.ml[1567,66497+10]..[1567,66497+24])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1568,66524+8]..[1581,67192+73])
                                      Pexp_match
                                      expression (middle_end/flambda/inline_and_simplify.ml[1568,66524+14]..[1568,66524+71])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1568,66524+14]..[1568,66524+48])
                                          Pexp_ident "A.check_approx_for_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1568,66524+14]..[1568,66524+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1568,66524+49]..[1568,66524+71])
                                              Pexp_ident "set_of_closures_approx" (middle_end/flambda/inline_and_simplify.ml[1568,66524+49]..[1568,66524+71])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1569,66601+10]..[1569,66601+39])
                                            Ppat_construct "Ok" (middle_end/flambda/inline_and_simplify.ml[1569,66601+10]..[1569,66601+12])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1569,66601+13]..[1569,66601+39])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1569,66601+14]..[1569,66601+15])
                                                    Ppat_any
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1569,66601+17]..[1569,66601+38])
                                                    Ppat_var "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1569,66601+17]..[1569,66601+38])
                                                ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1570,66644+10]..[1573,66760+58])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1570,66644+14]..[1570,66644+24])
                                                  Ppat_var "closure_id" (middle_end/flambda/inline_and_simplify.ml[1570,66644+14]..[1570,66644+24])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1571,66671+12]..[1571,66671+75])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1571,66671+12]..[1571,66671+42])
                                                    Pexp_ident "A.freshen_and_check_closure_id" (middle_end/flambda/inline_and_simplify.ml[1571,66671+12]..[1571,66671+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1571,66671+43]..[1571,66671+64])
                                                        Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1571,66671+43]..[1571,66671+64])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1571,66671+65]..[1571,66671+75])
                                                        Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[1571,66671+65]..[1571,66671+75])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1573,66760+10]..[1573,66760+58])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1573,66760+10]..[1573,66760+25])
                                                Pexp_ident "A.value_closure" (middle_end/flambda/inline_and_simplify.ml[1573,66760+10]..[1573,66760+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1573,66760+26]..[1573,66760+47])
                                                    Pexp_ident "value_set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1573,66760+26]..[1573,66760+47])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1573,66760+48]..[1573,66760+58])
                                                    Pexp_ident "closure_id" (middle_end/flambda/inline_and_simplify.ml[1573,66760+48]..[1573,66760+58])
                                              ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1574,66819+10]..[1574,66819+24])
                                            Ppat_construct "Unresolved" (middle_end/flambda/inline_and_simplify.ml[1574,66819+10]..[1574,66819+20])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1574,66819+21]..[1574,66819+24])
                                                Ppat_var "sym" (middle_end/flambda/inline_and_simplify.ml[1574,66819+21]..[1574,66819+24])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1574,66819+28]..[1574,66819+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1574,66819+28]..[1574,66819+46])
                                              Pexp_ident "A.value_unresolved" (middle_end/flambda/inline_and_simplify.ml[1574,66819+28]..[1574,66819+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1574,66819+47]..[1574,66819+50])
                                                  Pexp_ident "sym" (middle_end/flambda/inline_and_simplify.ml[1574,66819+47]..[1574,66819+50])
                                            ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1575,66870+10]..[1575,66870+17])
                                            Ppat_construct "Unknown" (middle_end/flambda/inline_and_simplify.ml[1575,66870+10]..[1575,66870+17])
                                            None
                                          expression (middle_end/flambda/inline_and_simplify.ml[1575,66870+21]..[1575,66870+42])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1575,66870+21]..[1575,66870+36])
                                              Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1575,66870+21]..[1575,66870+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1575,66870+37]..[1575,66870+42])
                                                  Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1575,66870+37]..[1575,66870+42])
                                                  None
                                            ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1576,66913+10]..[1576,66913+51])
                                            Ppat_construct "Unknown_because_of_unresolved_value" (middle_end/flambda/inline_and_simplify.ml[1576,66913+10]..[1576,66913+45])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1576,66913+46]..[1576,66913+51])
                                                Ppat_var "value" (middle_end/flambda/inline_and_simplify.ml[1576,66913+46]..[1576,66913+51])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1577,66968+10]..[1577,66968+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1577,66968+10]..[1577,66968+25])
                                              Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1577,66968+10]..[1577,66968+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1577,66968+26]..[1577,66968+50])
                                                  Pexp_construct "Unresolved_value" (middle_end/flambda/inline_and_simplify.ml[1577,66968+27]..[1577,66968+43])
                                                  Some
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1577,66968+44]..[1577,66968+49])
                                                      Pexp_ident "value" (middle_end/flambda/inline_and_simplify.ml[1577,66968+44]..[1577,66968+49])
                                            ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1578,67019+10]..[1578,67019+15])
                                            Ppat_construct "Wrong" (middle_end/flambda/inline_and_simplify.ml[1578,67019+10]..[1578,67019+15])
                                            None
                                          expression (middle_end/flambda/inline_and_simplify.ml[1579,67038+10]..[1581,67192+73])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1579,67038+10]..[1579,67038+27])
                                              Pexp_ident "Misc.fatal_errorf" (middle_end/flambda/inline_and_simplify.ml[1579,67038+10]..[1579,67038+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1579,67038+28]..[1580,67111+80])
                                                  Pexp_constant PConst_string("Wrong approximation for [Project_closure] when being used as a [constant_defining_value]: %a",(middle_end/flambda/inline_and_simplify.ml[1579,67038+29]..[1580,67111+79]),None)
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1581,67192+12]..[1581,67192+49])
                                                  Pexp_ident "Flambda.print_constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1581,67192+12]..[1581,67192+49])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1581,67192+50]..[1581,67192+73])
                                                  Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1581,67192+50]..[1581,67192+73])
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1583,67275+6]..[1583,67275+48])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1583,67275+6]..[1583,67275+7])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1583,67275+6]..[1583,67275+7])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1583,67275+9]..[1583,67275+32])
                                      Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1583,67275+9]..[1583,67275+32])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1583,67275+34]..[1583,67275+48])
                                      Pexp_ident "closure_approx" (middle_end/flambda/inline_and_simplify.ml[1583,67275+34]..[1583,67275+48])
                                  ]
                        ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1585,67329+2]..[1587,67409+36])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1585,67329+6]..[1585,67329+12])
                          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1585,67329+6]..[1585,67329+12])
                        expression (middle_end/flambda/inline_and_simplify.ml[1585,67329+15]..[1585,67329+50])
                          Pexp_apply
                          expression (middle_end/flambda/inline_and_simplify.ml[1585,67329+15]..[1585,67329+36])
                            Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1585,67329+15]..[1585,67329+36])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1585,67329+37]..[1585,67329+43])
                                Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1585,67329+37]..[1585,67329+43])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inline_and_simplify.ml[1585,67329+44]..[1585,67329+50])
                                Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1585,67329+44]..[1585,67329+50])
                          ]
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1586,67383+2]..[1587,67409+36])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inline_and_simplify.ml[1586,67383+6]..[1586,67383+7])
                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1586,67383+6]..[1586,67383+7])
                          expression (middle_end/flambda/inline_and_simplify.ml[1586,67383+10]..[1586,67383+22])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1586,67383+10]..[1586,67383+13])
                              Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1586,67383+10]..[1586,67383+13])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1586,67383+14]..[1586,67383+15])
                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1586,67383+14]..[1586,67383+15])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1586,67383+16]..[1586,67383+22])
                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1586,67383+16]..[1586,67383+22])
                            ]
                      ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1587,67409+2]..[1587,67409+36])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inline_and_simplify.ml[1587,67409+2]..[1587,67409+3])
                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1587,67409+2]..[1587,67409+3])
                          expression (middle_end/flambda/inline_and_simplify.ml[1587,67409+5]..[1587,67409+28])
                            Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1587,67409+5]..[1587,67409+28])
                          expression (middle_end/flambda/inline_and_simplify.ml[1587,67409+30]..[1587,67409+36])
                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1587,67409+30]..[1587,67409+36])
                        ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1589,67447+0]..[1639,69623+27])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1589,67447+8]..[1589,67447+29])
          Ppat_var "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1589,67447+8]..[1589,67447+29])
        expression (middle_end/flambda/inline_and_simplify.ml[1589,67447+30]..[1639,69623+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1589,67447+30]..[1589,67447+33])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1589,67447+30]..[1589,67447+33])
          expression (middle_end/flambda/inline_and_simplify.ml[1589,67447+34]..[1639,69623+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1589,67447+34]..[1589,67447+35])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1589,67447+34]..[1589,67447+35])
            expression (middle_end/flambda/inline_and_simplify.ml[1589,67447+36]..[1639,69623+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1589,67447+36]..[1589,67447+68])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[1589,67447+37]..[1589,67447+44])
                  Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1589,67447+37]..[1589,67447+44])
                core_type (middle_end/flambda/inline_and_simplify.ml[1589,67447+47]..[1589,67447+67])
                  Ptyp_constr "Flambda.program_body" (middle_end/flambda/inline_and_simplify.ml[1589,67447+47]..[1589,67447+67])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[1590,67516+2]..[1639,69623+27])
                Pexp_constraint
                expression (middle_end/flambda/inline_and_simplify.ml[1591,67549+2]..[1639,69623+27])
                  Pexp_match
                  expression (middle_end/flambda/inline_and_simplify.ml[1591,67549+8]..[1591,67549+15])
                    Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1591,67549+8]..[1591,67549+15])
                  [
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1592,67570+4]..[1592,67570+34])
                        Ppat_construct "Let_rec_symbol" (middle_end/flambda/inline_and_simplify.ml[1592,67570+4]..[1592,67570+18])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1592,67570+19]..[1592,67570+34])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1592,67570+20]..[1592,67570+24])
                                Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1592,67570+20]..[1592,67570+24])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1592,67570+26]..[1592,67570+33])
                                Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1592,67570+26]..[1592,67570+33])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1593,67608+4]..[1618,68599+66])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1593,67608+8]..[1593,67608+40])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1593,67608+8]..[1593,67608+28])
                                  Ppat_var "set_of_closures_defs" (middle_end/flambda/inline_and_simplify.ml[1593,67608+8]..[1593,67608+28])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1593,67608+30]..[1593,67608+40])
                                  Ppat_var "other_defs" (middle_end/flambda/inline_and_simplify.ml[1593,67608+30]..[1593,67608+40])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1594,67651+6]..[1598,67765+12])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1594,67651+6]..[1594,67651+20])
                                Pexp_ident "List.partition" (middle_end/flambda/inline_and_simplify.ml[1594,67651+6]..[1594,67651+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1595,67672+8]..[1597,67741+23])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1596,67690+12]..[1596,67690+42])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1596,67690+13]..[1596,67690+14])
                                              Ppat_any
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1596,67690+16]..[1596,67690+41])
                                              Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/inline_and_simplify.ml[1596,67690+16]..[1596,67690+39])
                                              Some
                                                []
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1596,67690+40]..[1596,67690+41])
                                                  Ppat_any
                                          ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1596,67690+46]..[1596,67690+50])
                                          Pexp_construct "true" (middle_end/flambda/inline_and_simplify.ml[1596,67690+46]..[1596,67690+50])
                                          None
                                      <case>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1597,67741+12]..[1597,67741+13])
                                          Ppat_any
                                        expression (middle_end/flambda/inline_and_simplify.ml[1597,67741+17]..[1597,67741+22])
                                          Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1597,67741+17]..[1597,67741+22])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1598,67765+8]..[1598,67765+12])
                                    Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1598,67765+8]..[1598,67765+12])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1599,67781+4]..[1618,68599+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1599,67781+8]..[1599,67781+20])
                                Ppat_var "process_defs" (middle_end/flambda/inline_and_simplify.ml[1599,67781+8]..[1599,67781+20])
                              expression (middle_end/flambda/inline_and_simplify.ml[1599,67781+21]..[1607,68182+25]) ghost
                                Pexp_fun
                                Labelled "lookup_env"
                                None
                                pattern (middle_end/flambda/inline_and_simplify.ml[1599,67781+22]..[1599,67781+32])
                                  Ppat_var "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1599,67781+22]..[1599,67781+32])
                                expression (middle_end/flambda/inline_and_simplify.ml[1599,67781+33]..[1607,68182+25]) ghost
                                  Pexp_fun
                                  Labelled "env"
                                  None
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1599,67781+34]..[1599,67781+37])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1599,67781+34]..[1599,67781+37])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1599,67781+38]..[1607,68182+25]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1599,67781+38]..[1599,67781+39])
                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1599,67781+38]..[1599,67781+39])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1599,67781+40]..[1607,68182+25]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1599,67781+40]..[1599,67781+44])
                                        Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1599,67781+40]..[1599,67781+44])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1600,67828+6]..[1607,68182+25])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1600,67828+6]..[1600,67828+20])
                                          Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1600,67828+6]..[1600,67828+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1600,67828+21]..[1606,68132+49])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+26]..[1600,67828+49])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+27]..[1600,67828+39])
                                                    Ppat_var "building_env" (middle_end/flambda/inline_and_simplify.ml[1600,67828+27]..[1600,67828+39])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+41]..[1600,67828+42])
                                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1600,67828+41]..[1600,67828+42])
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+44]..[1600,67828+48])
                                                    Ppat_var "defs" (middle_end/flambda/inline_and_simplify.ml[1600,67828+44]..[1600,67828+48])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1600,67828+50]..[1606,68132+48]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+50]..[1600,67828+63])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+51]..[1600,67828+57])
                                                      Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1600,67828+51]..[1600,67828+57])
                                                    pattern (middle_end/flambda/inline_and_simplify.ml[1600,67828+59]..[1600,67828+62])
                                                      Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1600,67828+59]..[1600,67828+62])
                                                  ]
                                                expression (middle_end/flambda/inline_and_simplify.ml[1601,67895+8]..[1606,68132+48])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/inline_and_simplify.ml[1601,67895+12]..[1601,67895+26])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1601,67895+12]..[1601,67895+13])
                                                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1601,67895+12]..[1601,67895+13])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1601,67895+15]..[1601,67895+18])
                                                            Ppat_var "def" (middle_end/flambda/inline_and_simplify.ml[1601,67895+15]..[1601,67895+18])
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1601,67895+20]..[1601,67895+26])
                                                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1601,67895+20]..[1601,67895+26])
                                                        ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+10]..[1602,67924+66])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+10]..[1602,67924+42])
                                                          Pexp_ident "simplify_constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1602,67924+10]..[1602,67924+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+43]..[1602,67924+53])
                                                              Pexp_ident "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1602,67924+43]..[1602,67924+53])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+54]..[1602,67924+55])
                                                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1602,67924+54]..[1602,67924+55])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+56]..[1602,67924+62])
                                                              Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1602,67924+56]..[1602,67924+62])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1602,67924+63]..[1602,67924+66])
                                                              Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1602,67924+63]..[1602,67924+66])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1604,68002+8]..[1606,68132+48])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/inline_and_simplify.ml[1604,68002+12]..[1604,68002+18])
                                                          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1604,68002+12]..[1604,68002+18])
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1604,68002+21]..[1604,68002+56])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1604,68002+21]..[1604,68002+42])
                                                            Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1604,68002+21]..[1604,68002+42])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1604,68002+43]..[1604,68002+49])
                                                                Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1604,68002+43]..[1604,68002+49])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1604,68002+50]..[1604,68002+56])
                                                                Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1604,68002+50]..[1604,68002+56])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+8]..[1606,68132+48])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/inline_and_simplify.ml[1605,68062+12]..[1605,68062+24])
                                                            Ppat_var "building_env" (middle_end/flambda/inline_and_simplify.ml[1605,68062+12]..[1605,68062+24])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+27]..[1605,68062+66])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+27]..[1605,68062+39])
                                                              Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1605,68062+27]..[1605,68062+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+40]..[1605,68062+52])
                                                                  Pexp_ident "building_env" (middle_end/flambda/inline_and_simplify.ml[1605,68062+40]..[1605,68062+52])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+53]..[1605,68062+59])
                                                                  Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1605,68062+53]..[1605,68062+59])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inline_and_simplify.ml[1605,68062+60]..[1605,68062+66])
                                                                  Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1605,68062+60]..[1605,68062+66])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+8]..[1606,68132+48])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+9]..[1606,68132+21])
                                                            Pexp_ident "building_env" (middle_end/flambda/inline_and_simplify.ml[1606,68132+9]..[1606,68132+21])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+23]..[1606,68132+24])
                                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1606,68132+23]..[1606,68132+24])
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+26]..[1606,68132+47])
                                                            Pexp_construct "::" (middle_end/flambda/inline_and_simplify.ml[1606,68132+40]..[1606,68132+42])
                                                            Some
                                                              expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+26]..[1606,68132+47]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+26]..[1606,68132+39])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+27]..[1606,68132+33])
Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1606,68132+27]..[1606,68132+33])
                                                                      expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+35]..[1606,68132+38])
Pexp_ident "def" (middle_end/flambda/inline_and_simplify.ml[1606,68132+35]..[1606,68132+38])
                                                                    ]
                                                                  expression (middle_end/flambda/inline_and_simplify.ml[1606,68132+43]..[1606,68132+47])
                                                                    Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1606,68132+43]..[1606,68132+47])
                                                                ]
                                                        ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1607,68182+8]..[1607,68182+20])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inline_and_simplify.ml[1607,68182+9]..[1607,68182+12])
                                                  Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1607,68182+9]..[1607,68182+12])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1607,68182+14]..[1607,68182+15])
                                                  Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1607,68182+14]..[1607,68182+15])
                                                expression (middle_end/flambda/inline_and_simplify.ml[1607,68182+17]..[1607,68182+19])
                                                  Pexp_construct "[]" (middle_end/flambda/inline_and_simplify.ml[1607,68182+17]..[1607,68182+19])
                                                  None
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1607,68182+21]..[1607,68182+25])
                                              Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1607,68182+21]..[1607,68182+25])
                                        ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1609,68215+4]..[1618,68599+66])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1609,68215+8]..[1609,68215+36])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1609,68215+8]..[1609,68215+11])
                                      Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1609,68215+8]..[1609,68215+11])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1609,68215+13]..[1609,68215+14])
                                      Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1609,68215+13]..[1609,68215+14])
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1609,68215+16]..[1609,68215+36])
                                      Ppat_var "set_of_closures_defs" (middle_end/flambda/inline_and_simplify.ml[1609,68215+16]..[1609,68215+36])
                                  ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1610,68254+6]..[1611,68318+58])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1610,68254+10]..[1610,68254+20])
                                        Ppat_var "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1610,68254+10]..[1610,68254+20])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1610,68254+23]..[1610,68254+60])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1610,68254+23]..[1610,68254+51])
                                          Pexp_ident "define_let_rec_symbol_approx" (middle_end/flambda/inline_and_simplify.ml[1610,68254+23]..[1610,68254+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1610,68254+52]..[1610,68254+55])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1610,68254+52]..[1610,68254+55])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1610,68254+56]..[1610,68254+60])
                                              Pexp_ident "defs" (middle_end/flambda/inline_and_simplify.ml[1610,68254+56]..[1610,68254+60])
                                        ]
                                  ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+6]..[1611,68318+58])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+6]..[1611,68318+18])
                                      Pexp_ident "process_defs" (middle_end/flambda/inline_and_simplify.ml[1611,68318+6]..[1611,68318+18])
                                    [
                                      <arg>
                                      Labelled "lookup_env"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+20]..[1611,68318+30])
                                          Pexp_ident "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1611,68318+20]..[1611,68318+30])
                                      <arg>
                                      Labelled "env"
                                        expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+32]..[1611,68318+35])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1611,68318+32]..[1611,68318+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+36]..[1611,68318+37])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1611,68318+36]..[1611,68318+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1611,68318+38]..[1611,68318+58])
                                          Pexp_ident "set_of_closures_defs" (middle_end/flambda/inline_and_simplify.ml[1611,68318+38]..[1611,68318+58])
                                    ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1613,68384+4]..[1618,68599+66])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1613,68384+8]..[1613,68384+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1613,68384+8]..[1613,68384+11])
                                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1613,68384+8]..[1613,68384+11])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1613,68384+13]..[1613,68384+14])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1613,68384+13]..[1613,68384+14])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1613,68384+16]..[1613,68384+26])
                                        Ppat_var "other_defs" (middle_end/flambda/inline_and_simplify.ml[1613,68384+16]..[1613,68384+26])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1614,68413+6]..[1615,68483+48])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1614,68413+10]..[1614,68413+20])
                                          Ppat_var "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1614,68413+10]..[1614,68413+20])
                                        expression (middle_end/flambda/inline_and_simplify.ml[1614,68413+23]..[1614,68413+66])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1614,68413+23]..[1614,68413+51])
                                            Pexp_ident "define_let_rec_symbol_approx" (middle_end/flambda/inline_and_simplify.ml[1614,68413+23]..[1614,68413+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1614,68413+52]..[1614,68413+55])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1614,68413+52]..[1614,68413+55])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1614,68413+56]..[1614,68413+66])
                                                Pexp_ident "other_defs" (middle_end/flambda/inline_and_simplify.ml[1614,68413+56]..[1614,68413+66])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+6]..[1615,68483+48])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+6]..[1615,68483+18])
                                        Pexp_ident "process_defs" (middle_end/flambda/inline_and_simplify.ml[1615,68483+6]..[1615,68483+18])
                                      [
                                        <arg>
                                        Labelled "lookup_env"
                                          expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+20]..[1615,68483+30])
                                            Pexp_ident "lookup_env" (middle_end/flambda/inline_and_simplify.ml[1615,68483+20]..[1615,68483+30])
                                        <arg>
                                        Labelled "env"
                                          expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+32]..[1615,68483+35])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1615,68483+32]..[1615,68483+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+36]..[1615,68483+37])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1615,68483+36]..[1615,68483+37])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1615,68483+38]..[1615,68483+48])
                                            Pexp_ident "other_defs" (middle_end/flambda/inline_and_simplify.ml[1615,68483+38]..[1615,68483+48])
                                      ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+4]..[1618,68599+66])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1617,68539+8]..[1617,68539+18])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1617,68539+8]..[1617,68539+15])
                                          Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1617,68539+8]..[1617,68539+15])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1617,68539+17]..[1617,68539+18])
                                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1617,68539+17]..[1617,68539+18])
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+21]..[1617,68539+56])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+21]..[1617,68539+42])
                                        Pexp_ident "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1617,68539+21]..[1617,68539+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+43]..[1617,68539+46])
                                            Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1617,68539+43]..[1617,68539+46])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+47]..[1617,68539+48])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1617,68539+47]..[1617,68539+48])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1617,68539+49]..[1617,68539+56])
                                            Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1617,68539+49]..[1617,68539+56])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+4]..[1618,68599+66])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+4]..[1618,68599+63])
                                      Pexp_construct "Let_rec_symbol" (middle_end/flambda/inline_and_simplify.ml[1618,68599+4]..[1618,68599+18])
                                      Some
                                        expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+19]..[1618,68599+63])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+20]..[1618,68599+53])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+41]..[1618,68599+42])
                                                Pexp_ident "@" (middle_end/flambda/inline_and_simplify.ml[1618,68599+41]..[1618,68599+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+20]..[1618,68599+40])
                                                    Pexp_ident "set_of_closures_defs" (middle_end/flambda/inline_and_simplify.ml[1618,68599+20]..[1618,68599+40])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+43]..[1618,68599+53])
                                                    Pexp_ident "other_defs" (middle_end/flambda/inline_and_simplify.ml[1618,68599+43]..[1618,68599+53])
                                              ]
                                            expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+55]..[1618,68599+62])
                                              Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1618,68599+55]..[1618,68599+62])
                                          ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1618,68599+65]..[1618,68599+66])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1618,68599+65]..[1618,68599+66])
                                  ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1619,68666+4]..[1619,68666+57])
                        Ppat_construct "Let_symbol" (middle_end/flambda/inline_and_simplify.ml[1619,68666+4]..[1619,68666+14])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1619,68666+15]..[1619,68666+57])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1619,68666+16]..[1619,68666+22])
                                Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1619,68666+16]..[1619,68666+22])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1619,68666+24]..[1619,68666+47])
                                Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1619,68666+24]..[1619,68666+47])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1619,68666+49]..[1619,68666+56])
                                Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1619,68666+49]..[1619,68666+56])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1620,68727+4]..[1626,69019+60])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1620,68727+8]..[1620,68727+42])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1620,68727+8]..[1620,68727+9])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1620,68727+8]..[1620,68727+9])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1620,68727+11]..[1620,68727+34])
                                  Ppat_var "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1620,68727+11]..[1620,68727+34])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1620,68727+36]..[1620,68727+42])
                                  Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1620,68727+36]..[1620,68727+42])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+6]..[1621,68772+75])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+6]..[1621,68772+38])
                                Pexp_ident "simplify_constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1621,68772+6]..[1621,68772+38])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+39]..[1621,68772+42])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1621,68772+39]..[1621,68772+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+43]..[1621,68772+44])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1621,68772+43]..[1621,68772+44])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+45]..[1621,68772+51])
                                    Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1621,68772+45]..[1621,68772+51])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1621,68772+52]..[1621,68772+75])
                                    Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1621,68772+52]..[1621,68772+75])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1623,68855+4]..[1626,69019+60])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1623,68855+8]..[1623,68855+14])
                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1623,68855+8]..[1623,68855+14])
                              expression (middle_end/flambda/inline_and_simplify.ml[1623,68855+17]..[1623,68855+52])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1623,68855+17]..[1623,68855+38])
                                  Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1623,68855+17]..[1623,68855+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1623,68855+39]..[1623,68855+45])
                                      Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1623,68855+39]..[1623,68855+45])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1623,68855+46]..[1623,68855+52])
                                      Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1623,68855+46]..[1623,68855+52])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+4]..[1626,69019+60])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1624,68911+8]..[1624,68911+11])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1624,68911+8]..[1624,68911+11])
                                expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+14]..[1624,68911+44])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+14]..[1624,68911+26])
                                    Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1624,68911+14]..[1624,68911+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+27]..[1624,68911+30])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1624,68911+27]..[1624,68911+30])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+31]..[1624,68911+37])
                                        Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1624,68911+31]..[1624,68911+37])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1624,68911+38]..[1624,68911+44])
                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1624,68911+38]..[1624,68911+44])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+4]..[1626,69019+60])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1625,68959+8]..[1625,68959+18])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1625,68959+8]..[1625,68959+15])
                                        Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1625,68959+8]..[1625,68959+15])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1625,68959+17]..[1625,68959+18])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1625,68959+17]..[1625,68959+18])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+21]..[1625,68959+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+21]..[1625,68959+42])
                                      Pexp_ident "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1625,68959+21]..[1625,68959+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+43]..[1625,68959+46])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1625,68959+43]..[1625,68959+46])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+47]..[1625,68959+48])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1625,68959+47]..[1625,68959+48])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1625,68959+49]..[1625,68959+56])
                                          Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1625,68959+49]..[1625,68959+56])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+4]..[1626,69019+60])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+4]..[1626,69019+57])
                                    Pexp_construct "Let_symbol" (middle_end/flambda/inline_and_simplify.ml[1626,69019+4]..[1626,69019+14])
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+15]..[1626,69019+57])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+16]..[1626,69019+22])
                                            Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1626,69019+16]..[1626,69019+22])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+24]..[1626,69019+47])
                                            Pexp_ident "constant_defining_value" (middle_end/flambda/inline_and_simplify.ml[1626,69019+24]..[1626,69019+47])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+49]..[1626,69019+56])
                                            Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1626,69019+49]..[1626,69019+56])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1626,69019+59]..[1626,69019+60])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1626,69019+59]..[1626,69019+60])
                                ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+4]..[1627,69080+52])
                        Ppat_construct "Initialize_symbol" (middle_end/flambda/inline_and_simplify.ml[1627,69080+4]..[1627,69080+21])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+22]..[1627,69080+52])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+23]..[1627,69080+29])
                                Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1627,69080+23]..[1627,69080+29])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+31]..[1627,69080+34])
                                Ppat_var "tag" (middle_end/flambda/inline_and_simplify.ml[1627,69080+31]..[1627,69080+34])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+36]..[1627,69080+42])
                                Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1627,69080+36]..[1627,69080+42])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1627,69080+44]..[1627,69080+51])
                                Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1627,69080+44]..[1627,69080+51])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+4]..[1634,69406+55])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1628,69136+8]..[1628,69136+26])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1628,69136+8]..[1628,69136+14])
                                  Ppat_var "fields" (middle_end/flambda/inline_and_simplify.ml[1628,69136+8]..[1628,69136+14])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1628,69136+16]..[1628,69136+23])
                                  Ppat_var "approxs" (middle_end/flambda/inline_and_simplify.ml[1628,69136+16]..[1628,69136+23])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1628,69136+25]..[1628,69136+26])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1628,69136+25]..[1628,69136+26])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+29]..[1628,69136+55])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+29]..[1628,69136+42])
                                Pexp_ident "simplify_list" (middle_end/flambda/inline_and_simplify.ml[1628,69136+29]..[1628,69136+42])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+43]..[1628,69136+46])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1628,69136+43]..[1628,69136+46])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+47]..[1628,69136+48])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1628,69136+47]..[1628,69136+48])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1628,69136+49]..[1628,69136+55])
                                    Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1628,69136+49]..[1628,69136+55])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1629,69195+4]..[1634,69406+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1629,69195+8]..[1629,69195+14])
                                Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1629,69195+8]..[1629,69195+14])
                              expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+6]..[1630,69212+78])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+6]..[1630,69212+27])
                                  Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1630,69212+6]..[1630,69212+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+28]..[1630,69212+71])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+29]..[1630,69212+42])
                                        Pexp_ident "A.value_block" (middle_end/flambda/inline_and_simplify.ml[1630,69212+29]..[1630,69212+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+43]..[1630,69212+46])
                                            Pexp_ident "tag" (middle_end/flambda/inline_and_simplify.ml[1630,69212+43]..[1630,69212+46])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+47]..[1630,69212+70])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+48]..[1630,69212+61])
                                              Pexp_ident "Array.of_list" (middle_end/flambda/inline_and_simplify.ml[1630,69212+48]..[1630,69212+61])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+62]..[1630,69212+69])
                                                  Pexp_ident "approxs" (middle_end/flambda/inline_and_simplify.ml[1630,69212+62]..[1630,69212+69])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1630,69212+72]..[1630,69212+78])
                                      Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1630,69212+72]..[1630,69212+78])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+4]..[1634,69406+55])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1632,69298+8]..[1632,69298+11])
                                  Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1632,69298+8]..[1632,69298+11])
                                expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+14]..[1632,69298+44])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+14]..[1632,69298+26])
                                    Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1632,69298+14]..[1632,69298+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+27]..[1632,69298+30])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1632,69298+27]..[1632,69298+30])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+31]..[1632,69298+37])
                                        Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1632,69298+31]..[1632,69298+37])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1632,69298+38]..[1632,69298+44])
                                        Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1632,69298+38]..[1632,69298+44])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+4]..[1634,69406+55])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1633,69346+8]..[1633,69346+18])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1633,69346+8]..[1633,69346+15])
                                        Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1633,69346+8]..[1633,69346+15])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1633,69346+17]..[1633,69346+18])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1633,69346+17]..[1633,69346+18])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+21]..[1633,69346+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+21]..[1633,69346+42])
                                      Pexp_ident "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1633,69346+21]..[1633,69346+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+43]..[1633,69346+46])
                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1633,69346+43]..[1633,69346+46])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+47]..[1633,69346+48])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1633,69346+47]..[1633,69346+48])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1633,69346+49]..[1633,69346+56])
                                          Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1633,69346+49]..[1633,69346+56])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+4]..[1634,69406+55])
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+4]..[1634,69406+52])
                                    Pexp_construct "Initialize_symbol" (middle_end/flambda/inline_and_simplify.ml[1634,69406+4]..[1634,69406+21])
                                    Some
                                      expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+22]..[1634,69406+52])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+23]..[1634,69406+29])
                                            Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1634,69406+23]..[1634,69406+29])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+31]..[1634,69406+34])
                                            Pexp_ident "tag" (middle_end/flambda/inline_and_simplify.ml[1634,69406+31]..[1634,69406+34])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+36]..[1634,69406+42])
                                            Pexp_ident "fields" (middle_end/flambda/inline_and_simplify.ml[1634,69406+36]..[1634,69406+42])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+44]..[1634,69406+51])
                                            Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1634,69406+44]..[1634,69406+51])
                                        ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1634,69406+54]..[1634,69406+55])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1634,69406+54]..[1634,69406+55])
                                ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1635,69462+4]..[1635,69462+26])
                        Ppat_construct "Effect" (middle_end/flambda/inline_and_simplify.ml[1635,69462+4]..[1635,69462+10])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1635,69462+11]..[1635,69462+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inline_and_simplify.ml[1635,69462+12]..[1635,69462+16])
                                Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[1635,69462+12]..[1635,69462+16])
                              pattern (middle_end/flambda/inline_and_simplify.ml[1635,69462+18]..[1635,69462+25])
                                Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1635,69462+18]..[1635,69462+25])
                            ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+4]..[1638,69593+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1636,69492+8]..[1636,69492+15])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/inline_and_simplify.ml[1636,69492+8]..[1636,69492+12])
                                  Ppat_var "expr" (middle_end/flambda/inline_and_simplify.ml[1636,69492+8]..[1636,69492+12])
                                pattern (middle_end/flambda/inline_and_simplify.ml[1636,69492+14]..[1636,69492+15])
                                  Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1636,69492+14]..[1636,69492+15])
                              ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+18]..[1636,69492+37])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+18]..[1636,69492+26])
                                Pexp_ident "simplify" (middle_end/flambda/inline_and_simplify.ml[1636,69492+18]..[1636,69492+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+27]..[1636,69492+30])
                                    Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1636,69492+27]..[1636,69492+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+31]..[1636,69492+32])
                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1636,69492+31]..[1636,69492+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1636,69492+33]..[1636,69492+37])
                                    Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[1636,69492+33]..[1636,69492+37])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+4]..[1638,69593+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inline_and_simplify.ml[1637,69533+8]..[1637,69533+18])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1637,69533+8]..[1637,69533+15])
                                    Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1637,69533+8]..[1637,69533+15])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1637,69533+17]..[1637,69533+18])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1637,69533+17]..[1637,69533+18])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+21]..[1637,69533+56])
                                Pexp_apply
                                expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+21]..[1637,69533+42])
                                  Pexp_ident "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1637,69533+21]..[1637,69533+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+43]..[1637,69533+46])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1637,69533+43]..[1637,69533+46])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+47]..[1637,69533+48])
                                      Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1637,69533+47]..[1637,69533+48])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inline_and_simplify.ml[1637,69533+49]..[1637,69533+56])
                                      Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1637,69533+49]..[1637,69533+56])
                                ]
                          ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+4]..[1638,69593+29])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+4]..[1638,69593+26])
                                Pexp_construct "Effect" (middle_end/flambda/inline_and_simplify.ml[1638,69593+4]..[1638,69593+10])
                                Some
                                  expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+11]..[1638,69593+26])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+12]..[1638,69593+16])
                                        Pexp_ident "expr" (middle_end/flambda/inline_and_simplify.ml[1638,69593+12]..[1638,69593+16])
                                      expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+18]..[1638,69593+25])
                                        Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1638,69593+18]..[1638,69593+25])
                                    ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1638,69593+28]..[1638,69593+29])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1638,69593+28]..[1638,69593+29])
                            ]
                    <case>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1639,69623+4]..[1639,69623+12])
                        Ppat_construct "End" (middle_end/flambda/inline_and_simplify.ml[1639,69623+4]..[1639,69623+7])
                        Some
                          []
                          pattern (middle_end/flambda/inline_and_simplify.ml[1639,69623+8]..[1639,69623+12])
                            Ppat_var "root" (middle_end/flambda/inline_and_simplify.ml[1639,69623+8]..[1639,69623+12])
                      expression (middle_end/flambda/inline_and_simplify.ml[1639,69623+16]..[1639,69623+27])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inline_and_simplify.ml[1639,69623+16]..[1639,69623+24])
                            Pexp_construct "End" (middle_end/flambda/inline_and_simplify.ml[1639,69623+16]..[1639,69623+19])
                            Some
                              expression (middle_end/flambda/inline_and_simplify.ml[1639,69623+20]..[1639,69623+24])
                                Pexp_ident "root" (middle_end/flambda/inline_and_simplify.ml[1639,69623+20]..[1639,69623+24])
                          expression (middle_end/flambda/inline_and_simplify.ml[1639,69623+26]..[1639,69623+27])
                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1639,69623+26]..[1639,69623+27])
                        ]
                  ]
                core_type (middle_end/flambda/inline_and_simplify.ml[1590,67516+4]..[1590,67516+30])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/inline_and_simplify.ml[1590,67516+4]..[1590,67516+24])
                      Ptyp_constr "Flambda.program_body" (middle_end/flambda/inline_and_simplify.ml[1590,67516+4]..[1590,67516+24])
                      []
                    core_type (middle_end/flambda/inline_and_simplify.ml[1590,67516+27]..[1590,67516+30])
                      Ptyp_constr "R.t" (middle_end/flambda/inline_and_simplify.ml[1590,67516+27]..[1590,67516+30])
                      []
                  ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1641,69652+0]..[1660,70456+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1641,69652+4]..[1641,69652+20])
          Ppat_var "simplify_program" (middle_end/flambda/inline_and_simplify.ml[1641,69652+4]..[1641,69652+20])
        expression (middle_end/flambda/inline_and_simplify.ml[1641,69652+21]..[1660,70456+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1641,69652+21]..[1641,69652+24])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1641,69652+21]..[1641,69652+24])
          expression (middle_end/flambda/inline_and_simplify.ml[1641,69652+25]..[1660,70456+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1641,69652+25]..[1641,69652+26])
              Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1641,69652+25]..[1641,69652+26])
            expression (middle_end/flambda/inline_and_simplify.ml[1641,69652+27]..[1660,70456+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1641,69652+27]..[1641,69652+54])
                Ppat_constraint
                pattern (middle_end/flambda/inline_and_simplify.ml[1641,69652+28]..[1641,69652+35])
                  Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1641,69652+28]..[1641,69652+35])
                core_type (middle_end/flambda/inline_and_simplify.ml[1641,69652+38]..[1641,69652+53])
                  Ptyp_constr "Flambda.program" (middle_end/flambda/inline_and_simplify.ml[1641,69652+38]..[1641,69652+53])
                  []
              expression (middle_end/flambda/inline_and_simplify.ml[1642,69709+2]..[1660,70456+12])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/inline_and_simplify.ml[1642,69709+6]..[1642,69709+12])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/inline_and_simplify.ml[1642,69709+6]..[1642,69709+9])
                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1642,69709+6]..[1642,69709+9])
                        pattern (middle_end/flambda/inline_and_simplify.ml[1642,69709+11]..[1642,69709+12])
                          Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1642,69709+11]..[1642,69709+12])
                      ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1643,69724+4]..[1656,70310+14])
                      Pexp_apply
                      expression (middle_end/flambda/inline_and_simplify.ml[1643,69724+4]..[1643,69724+19])
                        Pexp_ident "Symbol.Set.fold" (middle_end/flambda/inline_and_simplify.ml[1643,69724+4]..[1643,69724+19])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1643,69724+20]..[1654,70252+26])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inline_and_simplify.ml[1643,69724+25]..[1643,69724+31])
                              Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1643,69724+25]..[1643,69724+31])
                            expression (middle_end/flambda/inline_and_simplify.ml[1643,69724+32]..[1654,70252+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inline_and_simplify.ml[1643,69724+32]..[1643,69724+40])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1643,69724+33]..[1643,69724+36])
                                    Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1643,69724+33]..[1643,69724+36])
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1643,69724+38]..[1643,69724+39])
                                    Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1643,69724+38]..[1643,69724+39])
                                ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1644,69768+8]..[1654,70252+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1644,69768+12]..[1644,69768+23])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1644,69768+12]..[1644,69768+15])
                                          Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1644,69768+12]..[1644,69768+15])
                                        pattern (middle_end/flambda/inline_and_simplify.ml[1644,69768+17]..[1644,69768+23])
                                          Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1644,69768+17]..[1644,69768+23])
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1645,69794+10]..[1652,70207+33])
                                      Pexp_match
                                      expression (middle_end/flambda/inline_and_simplify.ml[1645,69794+16]..[1645,69794+44])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1645,69794+16]..[1645,69794+33])
                                          Pexp_ident "E.find_symbol_exn" (middle_end/flambda/inline_and_simplify.ml[1645,69794+16]..[1645,69794+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1645,69794+34]..[1645,69794+37])
                                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1645,69794+34]..[1645,69794+37])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1645,69794+38]..[1645,69794+44])
                                              Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1645,69794+38]..[1645,69794+44])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1646,69844+12]..[1646,69844+31])
                                            Ppat_exception
                                            pattern (middle_end/flambda/inline_and_simplify.ml[1646,69844+22]..[1646,69844+31])
                                              Ppat_construct "Not_found" (middle_end/flambda/inline_and_simplify.ml[1646,69844+22]..[1646,69844+31])
                                              None
                                          expression (middle_end/flambda/inline_and_simplify.ml[1647,69879+12]..[1651,70156+50])
                                            Pexp_letmodule "Backend" (middle_end/flambda/inline_and_simplify.ml[1647,69879+23]..[1647,69879+30])
                                            module_expr (middle_end/flambda/inline_and_simplify.ml[1647,69879+33]..[1647,69879+71])
                                              Pmod_unpack
                                              expression (middle_end/flambda/inline_and_simplify.ml[1647,69879+38]..[1647,69879+70]) ghost
                                                Pexp_constraint
                                                expression (middle_end/flambda/inline_and_simplify.ml[1647,69879+38]..[1647,69879+53])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1647,69879+39]..[1647,69879+48])
                                                    Pexp_ident "E.backend" (middle_end/flambda/inline_and_simplify.ml[1647,69879+39]..[1647,69879+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1647,69879+49]..[1647,69879+52])
                                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1647,69879+49]..[1647,69879+52])
                                                  ]
                                                core_type (middle_end/flambda/inline_and_simplify.ml[1647,69879+56]..[1647,69879+70])
                                                  Ptyp_package "Backend_intf.S" (middle_end/flambda/inline_and_simplify.ml[1647,69879+56]..[1647,69879+70])
                                                  []
                                            expression (middle_end/flambda/inline_and_simplify.ml[1650,70099+12]..[1651,70156+50])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/inline_and_simplify.ml[1650,70099+16]..[1650,70099+22])
                                                    Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1650,70099+16]..[1650,70099+22])
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1650,70099+25]..[1650,70099+53])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1650,70099+25]..[1650,70099+46])
                                                      Pexp_ident "Backend.import_symbol" (middle_end/flambda/inline_and_simplify.ml[1650,70099+25]..[1650,70099+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1650,70099+47]..[1650,70099+53])
                                                          Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1650,70099+47]..[1650,70099+53])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+12]..[1651,70156+50])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+12]..[1651,70156+42])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+12]..[1651,70156+24])
                                                      Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1651,70156+12]..[1651,70156+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+25]..[1651,70156+28])
                                                          Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1651,70156+25]..[1651,70156+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+29]..[1651,70156+35])
                                                          Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1651,70156+29]..[1651,70156+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+36]..[1651,70156+42])
                                                          Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1651,70156+36]..[1651,70156+42])
                                                    ]
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1651,70156+44]..[1651,70156+50])
                                                    Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1651,70156+44]..[1651,70156+50])
                                                ]
                                        <case>
                                          pattern (middle_end/flambda/inline_and_simplify.ml[1652,70207+12]..[1652,70207+18])
                                            Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1652,70207+12]..[1652,70207+18])
                                          expression (middle_end/flambda/inline_and_simplify.ml[1652,70207+22]..[1652,70207+33])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1652,70207+22]..[1652,70207+25])
                                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1652,70207+22]..[1652,70207+25])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1652,70207+27]..[1652,70207+33])
                                                Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1652,70207+27]..[1652,70207+33])
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+8]..[1654,70252+25])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+8]..[1654,70252+11])
                                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1654,70252+8]..[1654,70252+11])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+13]..[1654,70252+25])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+13]..[1654,70252+16])
                                        Pexp_ident "ret" (middle_end/flambda/inline_and_simplify.ml[1654,70252+13]..[1654,70252+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+17]..[1654,70252+18])
                                            Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1654,70252+17]..[1654,70252+18])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1654,70252+19]..[1654,70252+25])
                                            Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1654,70252+19]..[1654,70252+25])
                                      ]
                                  ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1655,70279+6]..[1655,70279+30])
                            Pexp_field
                            expression (middle_end/flambda/inline_and_simplify.ml[1655,70279+6]..[1655,70279+13])
                              Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1655,70279+6]..[1655,70279+13])
                            "imported_symbols" (middle_end/flambda/inline_and_simplify.ml[1655,70279+14]..[1655,70279+30])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inline_and_simplify.ml[1656,70310+6]..[1656,70310+14])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inline_and_simplify.ml[1656,70310+7]..[1656,70310+10])
                                Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1656,70310+7]..[1656,70310+10])
                              expression (middle_end/flambda/inline_and_simplify.ml[1656,70310+12]..[1656,70310+13])
                                Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1656,70310+12]..[1656,70310+13])
                            ]
                      ]
                ]
                expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+2]..[1660,70456+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inline_and_simplify.ml[1658,70330+6]..[1658,70330+21])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inline_and_simplify.ml[1658,70330+6]..[1658,70330+18])
                            Ppat_var "program_body" (middle_end/flambda/inline_and_simplify.ml[1658,70330+6]..[1658,70330+18])
                          pattern (middle_end/flambda/inline_and_simplify.ml[1658,70330+20]..[1658,70330+21])
                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1658,70330+20]..[1658,70330+21])
                        ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+24]..[1658,70330+72])
                        Pexp_apply
                        expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+24]..[1658,70330+45])
                          Pexp_ident "simplify_program_body" (middle_end/flambda/inline_and_simplify.ml[1658,70330+24]..[1658,70330+45])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+46]..[1658,70330+49])
                              Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1658,70330+46]..[1658,70330+49])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+50]..[1658,70330+51])
                              Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1658,70330+50]..[1658,70330+51])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+52]..[1658,70330+72])
                              Pexp_field
                              expression (middle_end/flambda/inline_and_simplify.ml[1658,70330+52]..[1658,70330+59])
                                Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1658,70330+52]..[1658,70330+59])
                              "program_body" (middle_end/flambda/inline_and_simplify.ml[1658,70330+60]..[1658,70330+72])
                        ]
                  ]
                  expression (middle_end/flambda/inline_and_simplify.ml[1659,70406+2]..[1660,70456+12])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inline_and_simplify.ml[1659,70406+6]..[1659,70406+13])
                          Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1659,70406+6]..[1659,70406+13])
                        expression (middle_end/flambda/inline_and_simplify.ml[1659,70406+16]..[1659,70406+46])
                          Pexp_record
                          [
                            "program_body" (middle_end/flambda/inline_and_simplify.ml[1659,70406+31]..[1659,70406+43]) ghost
                              expression (middle_end/flambda/inline_and_simplify.ml[1659,70406+31]..[1659,70406+43])
                                Pexp_ident "program_body" (middle_end/flambda/inline_and_simplify.ml[1659,70406+31]..[1659,70406+43])
                          ]
                          Some
                            expression (middle_end/flambda/inline_and_simplify.ml[1659,70406+18]..[1659,70406+25])
                              Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1659,70406+18]..[1659,70406+25])
                    ]
                    expression (middle_end/flambda/inline_and_simplify.ml[1660,70456+2]..[1660,70456+12])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/inline_and_simplify.ml[1660,70456+2]..[1660,70456+9])
                          Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1660,70456+2]..[1660,70456+9])
                        expression (middle_end/flambda/inline_and_simplify.ml[1660,70456+11]..[1660,70456+12])
                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1660,70456+11]..[1660,70456+12])
                      ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1662,70470+0]..[1676,71016+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1662,70470+4]..[1662,70470+34])
          Ppat_var "add_predef_exns_to_environment" (middle_end/flambda/inline_and_simplify.ml[1662,70470+4]..[1662,70470+34])
        expression (middle_end/flambda/inline_and_simplify.ml[1662,70470+35]..[1676,71016+26]) ghost
          Pexp_fun
          Labelled "env"
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1662,70470+36]..[1662,70470+39])
            Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1662,70470+36]..[1662,70470+39])
          expression (middle_end/flambda/inline_and_simplify.ml[1662,70470+40]..[1676,71016+26]) ghost
            Pexp_fun
            Labelled "backend"
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1662,70470+41]..[1662,70470+48])
              Ppat_var "backend" (middle_end/flambda/inline_and_simplify.ml[1662,70470+41]..[1662,70470+48])
            expression (middle_end/flambda/inline_and_simplify.ml[1663,70521+2]..[1676,71016+26])
              Pexp_letmodule "Backend" (middle_end/flambda/inline_and_simplify.ml[1663,70521+13]..[1663,70521+20])
              module_expr (middle_end/flambda/inline_and_simplify.ml[1663,70521+23]..[1663,70521+53])
                Pmod_unpack
                expression (middle_end/flambda/inline_and_simplify.ml[1663,70521+28]..[1663,70521+52]) ghost
                  Pexp_constraint
                  expression (middle_end/flambda/inline_and_simplify.ml[1663,70521+28]..[1663,70521+35])
                    Pexp_ident "backend" (middle_end/flambda/inline_and_simplify.ml[1663,70521+28]..[1663,70521+35])
                  core_type (middle_end/flambda/inline_and_simplify.ml[1663,70521+38]..[1663,70521+52])
                    Ptyp_package "Backend_intf.S" (middle_end/flambda/inline_and_simplify.ml[1663,70521+38]..[1663,70521+52])
                    []
              expression (middle_end/flambda/inline_and_simplify.ml[1664,70578+2]..[1676,71016+26])
                Pexp_apply
                expression (middle_end/flambda/inline_and_simplify.ml[1664,70578+2]..[1664,70578+16])
                  Pexp_ident "List.fold_left" (middle_end/flambda/inline_and_simplify.ml[1664,70578+2]..[1664,70578+16])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[1664,70578+17]..[1674,70939+68])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inline_and_simplify.ml[1664,70578+22]..[1664,70578+25])
                        Ppat_var "env" (middle_end/flambda/inline_and_simplify.ml[1664,70578+22]..[1664,70578+25])
                      expression (middle_end/flambda/inline_and_simplify.ml[1664,70578+26]..[1674,70939+67]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inline_and_simplify.ml[1664,70578+26]..[1664,70578+36])
                          Ppat_var "predef_exn" (middle_end/flambda/inline_and_simplify.ml[1664,70578+26]..[1664,70578+36])
                        expression (middle_end/flambda/inline_and_simplify.ml[1665,70618+6]..[1674,70939+67])
                          Pexp_sequence
                          expression (middle_end/flambda/inline_and_simplify.ml[1665,70618+6]..[1665,70618+41])
                            Pexp_assert
                            expression (middle_end/flambda/inline_and_simplify.ml[1665,70618+13]..[1665,70618+41])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1665,70618+14]..[1665,70618+29])
                                Pexp_ident "Ident.is_predef" (middle_end/flambda/inline_and_simplify.ml[1665,70618+14]..[1665,70618+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1665,70618+30]..[1665,70618+40])
                                    Pexp_ident "predef_exn" (middle_end/flambda/inline_and_simplify.ml[1665,70618+30]..[1665,70618+40])
                              ]
                          expression (middle_end/flambda/inline_and_simplify.ml[1666,70661+6]..[1674,70939+67])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1666,70661+10]..[1666,70661+16])
                                  Ppat_var "symbol" (middle_end/flambda/inline_and_simplify.ml[1666,70661+10]..[1666,70661+16])
                                expression (middle_end/flambda/inline_and_simplify.ml[1666,70661+19]..[1666,70661+56])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1666,70661+19]..[1666,70661+45])
                                    Pexp_ident "Backend.symbol_for_global'" (middle_end/flambda/inline_and_simplify.ml[1666,70661+19]..[1666,70661+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1666,70661+46]..[1666,70661+56])
                                        Pexp_ident "predef_exn" (middle_end/flambda/inline_and_simplify.ml[1666,70661+46]..[1666,70661+56])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1667,70721+6]..[1674,70939+67])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1667,70721+10]..[1667,70721+14])
                                    Ppat_var "name" (middle_end/flambda/inline_and_simplify.ml[1667,70721+10]..[1667,70721+14])
                                  expression (middle_end/flambda/inline_and_simplify.ml[1667,70721+17]..[1667,70721+38])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1667,70721+17]..[1667,70721+27])
                                      Pexp_ident "Ident.name" (middle_end/flambda/inline_and_simplify.ml[1667,70721+17]..[1667,70721+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1667,70721+28]..[1667,70721+38])
                                          Pexp_ident "predef_exn" (middle_end/flambda/inline_and_simplify.ml[1667,70721+28]..[1667,70721+38])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1668,70763+6]..[1674,70939+67])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1668,70763+10]..[1668,70763+16])
                                      Ppat_var "approx" (middle_end/flambda/inline_and_simplify.ml[1668,70763+10]..[1668,70763+16])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1669,70782+8]..[1672,70917+12])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1669,70782+8]..[1669,70782+21])
                                        Pexp_ident "A.value_block" (middle_end/flambda/inline_and_simplify.ml[1669,70782+8]..[1669,70782+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1669,70782+22]..[1669,70782+36])
                                            Pexp_ident "Tag.object_tag" (middle_end/flambda/inline_and_simplify.ml[1669,70782+22]..[1669,70782+36])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+10]..[1672,70917+12])
                                            Pexp_array
                                            [
                                              expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+13]..[1670,70819+60])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+13]..[1670,70819+27])
                                                  Pexp_ident "A.value_string" (middle_end/flambda/inline_and_simplify.ml[1670,70819+13]..[1670,70819+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+28]..[1670,70819+48])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+29]..[1670,70819+42])
                                                        Pexp_ident "String.length" (middle_end/flambda/inline_and_simplify.ml[1670,70819+29]..[1670,70819+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+43]..[1670,70819+47])
                                                            Pexp_ident "name" (middle_end/flambda/inline_and_simplify.ml[1670,70819+43]..[1670,70819+47])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+49]..[1670,70819+60])
                                                      Pexp_construct "Some" (middle_end/flambda/inline_and_simplify.ml[1670,70819+50]..[1670,70819+54])
                                                      Some
                                                        expression (middle_end/flambda/inline_and_simplify.ml[1670,70819+55]..[1670,70819+59])
                                                          Pexp_ident "name" (middle_end/flambda/inline_and_simplify.ml[1670,70819+55]..[1670,70819+59])
                                                ]
                                              expression (middle_end/flambda/inline_and_simplify.ml[1671,70881+13]..[1671,70881+34])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1671,70881+13]..[1671,70881+28])
                                                  Pexp_ident "A.value_unknown" (middle_end/flambda/inline_and_simplify.ml[1671,70881+13]..[1671,70881+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1671,70881+29]..[1671,70881+34])
                                                      Pexp_construct "Other" (middle_end/flambda/inline_and_simplify.ml[1671,70881+29]..[1671,70881+34])
                                                      None
                                                ]
                                            ]
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+6]..[1674,70939+67])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+6]..[1674,70939+18])
                                    Pexp_ident "E.add_symbol" (middle_end/flambda/inline_and_simplify.ml[1674,70939+6]..[1674,70939+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+19]..[1674,70939+22])
                                        Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1674,70939+19]..[1674,70939+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+23]..[1674,70939+29])
                                        Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1674,70939+23]..[1674,70939+29])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+30]..[1674,70939+67])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+31]..[1674,70939+52])
                                          Pexp_ident "A.augment_with_symbol" (middle_end/flambda/inline_and_simplify.ml[1674,70939+31]..[1674,70939+52])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+53]..[1674,70939+59])
                                              Pexp_ident "approx" (middle_end/flambda/inline_and_simplify.ml[1674,70939+53]..[1674,70939+59])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1674,70939+60]..[1674,70939+66])
                                              Pexp_ident "symbol" (middle_end/flambda/inline_and_simplify.ml[1674,70939+60]..[1674,70939+66])
                                        ]
                                  ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[1675,71008+4]..[1675,71008+7])
                      Pexp_ident "env" (middle_end/flambda/inline_and_simplify.ml[1675,71008+4]..[1675,71008+7])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inline_and_simplify.ml[1676,71016+4]..[1676,71016+26])
                      Pexp_ident "Predef.all_predef_exns" (middle_end/flambda/inline_and_simplify.ml[1676,71016+4]..[1676,71016+26])
                ]
    ]
  structure_item (middle_end/flambda/inline_and_simplify.ml[1678,71044+0]..[1701,72057+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+4]..[1678,71044+7])
          Ppat_var "run" (middle_end/flambda/inline_and_simplify.ml[1678,71044+4]..[1678,71044+7])
        expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+8]..[1701,72057+8]) ghost
          Pexp_fun
          Labelled "never_inline"
          None
          pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+9]..[1678,71044+21])
            Ppat_var "never_inline" (middle_end/flambda/inline_and_simplify.ml[1678,71044+9]..[1678,71044+21])
          expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+22]..[1701,72057+8]) ghost
            Pexp_fun
            Labelled "backend"
            None
            pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+23]..[1678,71044+30])
              Ppat_var "backend" (middle_end/flambda/inline_and_simplify.ml[1678,71044+23]..[1678,71044+30])
            expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+31]..[1701,72057+8]) ghost
              Pexp_fun
              Labelled "prefixname"
              None
              pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+32]..[1678,71044+42])
                Ppat_var "prefixname" (middle_end/flambda/inline_and_simplify.ml[1678,71044+32]..[1678,71044+42])
              expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+43]..[1701,72057+8]) ghost
                Pexp_fun
                Labelled "round"
                None
                pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+44]..[1678,71044+49])
                  Ppat_var "round" (middle_end/flambda/inline_and_simplify.ml[1678,71044+44]..[1678,71044+49])
                expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+50]..[1701,72057+8]) ghost
                  Pexp_fun
                  Labelled "ppf_dump"
                  None
                  pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+51]..[1678,71044+59])
                    Ppat_var "ppf_dump" (middle_end/flambda/inline_and_simplify.ml[1678,71044+51]..[1678,71044+59])
                  expression (middle_end/flambda/inline_and_simplify.ml[1678,71044+60]..[1701,72057+8]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inline_and_simplify.ml[1678,71044+60]..[1678,71044+67])
                      Ppat_var "program" (middle_end/flambda/inline_and_simplify.ml[1678,71044+60]..[1678,71044+67])
                    expression (middle_end/flambda/inline_and_simplify.ml[1679,71114+2]..[1701,72057+8])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inline_and_simplify.ml[1679,71114+6]..[1679,71114+7])
                            Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1679,71114+6]..[1679,71114+7])
                          expression (middle_end/flambda/inline_and_simplify.ml[1679,71114+10]..[1679,71114+21])
                            Pexp_apply
                            expression (middle_end/flambda/inline_and_simplify.ml[1679,71114+10]..[1679,71114+18])
                              Pexp_ident "R.create" (middle_end/flambda/inline_and_simplify.ml[1679,71114+10]..[1679,71114+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inline_and_simplify.ml[1679,71114+19]..[1679,71114+21])
                                  Pexp_construct "()" (middle_end/flambda/inline_and_simplify.ml[1679,71114+19]..[1679,71114+21])
                                  None
                            ]
                      ]
                      expression (middle_end/flambda/inline_and_simplify.ml[1680,71139+2]..[1701,72057+8])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inline_and_simplify.ml[1680,71139+6]..[1680,71139+12])
                              Ppat_var "report" (middle_end/flambda/inline_and_simplify.ml[1680,71139+6]..[1680,71139+12])
                            expression (middle_end/flambda/inline_and_simplify.ml[1680,71139+15]..[1680,71139+39])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1680,71139+15]..[1680,71139+16])
                                Pexp_ident "!" (middle_end/flambda/inline_and_simplify.ml[1680,71139+15]..[1680,71139+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1680,71139+16]..[1680,71139+39])
                                    Pexp_ident "Clflags.inlining_report" (middle_end/flambda/inline_and_simplify.ml[1680,71139+16]..[1680,71139+39])
                              ]
                        ]
                        expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+2]..[1701,72057+8])
                          Pexp_sequence
                          expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+2]..[1681,71182+55])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+5]..[1681,71182+17])
                              Pexp_ident "never_inline" (middle_end/flambda/inline_and_simplify.ml[1681,71182+5]..[1681,71182+17])
                            expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+23]..[1681,71182+55])
                              Pexp_apply
                              expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+47]..[1681,71182+49])
                                Pexp_ident ":=" (middle_end/flambda/inline_and_simplify.ml[1681,71182+47]..[1681,71182+49])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+23]..[1681,71182+46])
                                    Pexp_ident "Clflags.inlining_report" (middle_end/flambda/inline_and_simplify.ml[1681,71182+23]..[1681,71182+46])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inline_and_simplify.ml[1681,71182+50]..[1681,71182+55])
                                    Pexp_construct "false" (middle_end/flambda/inline_and_simplify.ml[1681,71182+50]..[1681,71182+55])
                                    None
                              ]
                            None
                          expression (middle_end/flambda/inline_and_simplify.ml[1682,71239+2]..[1701,72057+8])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inline_and_simplify.ml[1682,71239+6]..[1682,71239+17])
                                  Ppat_var "initial_env" (middle_end/flambda/inline_and_simplify.ml[1682,71239+6]..[1682,71239+17])
                                expression (middle_end/flambda/inline_and_simplify.ml[1683,71259+4]..[1685,71356+14])
                                  Pexp_apply
                                  expression (middle_end/flambda/inline_and_simplify.ml[1683,71259+4]..[1683,71259+34])
                                    Pexp_ident "add_predef_exns_to_environment" (middle_end/flambda/inline_and_simplify.ml[1683,71259+4]..[1683,71259+34])
                                  [
                                    <arg>
                                    Labelled "env"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+11]..[1684,71294+61])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+12]..[1684,71294+20])
                                          Pexp_ident "E.create" (middle_end/flambda/inline_and_simplify.ml[1684,71294+12]..[1684,71294+20])
                                        [
                                          <arg>
                                          Labelled "never_inline"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+22]..[1684,71294+34])
                                              Pexp_ident "never_inline" (middle_end/flambda/inline_and_simplify.ml[1684,71294+22]..[1684,71294+34])
                                          <arg>
                                          Labelled "backend"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+36]..[1684,71294+43])
                                              Pexp_ident "backend" (middle_end/flambda/inline_and_simplify.ml[1684,71294+36]..[1684,71294+43])
                                          <arg>
                                          Labelled "round"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+45]..[1684,71294+50])
                                              Pexp_ident "round" (middle_end/flambda/inline_and_simplify.ml[1684,71294+45]..[1684,71294+50])
                                          <arg>
                                          Labelled "ppf_dump"
                                            expression (middle_end/flambda/inline_and_simplify.ml[1684,71294+52]..[1684,71294+60])
                                              Pexp_ident "ppf_dump" (middle_end/flambda/inline_and_simplify.ml[1684,71294+52]..[1684,71294+60])
                                        ]
                                    <arg>
                                    Labelled "backend"
                                      expression (middle_end/flambda/inline_and_simplify.ml[1685,71356+7]..[1685,71356+14])
                                        Pexp_ident "backend" (middle_end/flambda/inline_and_simplify.ml[1685,71356+7]..[1685,71356+14])
                                  ]
                            ]
                            expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+2]..[1701,72057+8])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inline_and_simplify.ml[1687,71376+6]..[1687,71376+15])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1687,71376+6]..[1687,71376+12])
                                        Ppat_var "result" (middle_end/flambda/inline_and_simplify.ml[1687,71376+6]..[1687,71376+12])
                                      pattern (middle_end/flambda/inline_and_simplify.ml[1687,71376+14]..[1687,71376+15])
                                        Ppat_var "r" (middle_end/flambda/inline_and_simplify.ml[1687,71376+14]..[1687,71376+15])
                                    ]
                                  expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+18]..[1687,71376+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+18]..[1687,71376+34])
                                      Pexp_ident "simplify_program" (middle_end/flambda/inline_and_simplify.ml[1687,71376+18]..[1687,71376+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+35]..[1687,71376+46])
                                          Pexp_ident "initial_env" (middle_end/flambda/inline_and_simplify.ml[1687,71376+35]..[1687,71376+46])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+47]..[1687,71376+48])
                                          Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1687,71376+47]..[1687,71376+48])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inline_and_simplify.ml[1687,71376+49]..[1687,71376+56])
                                          Pexp_ident "program" (middle_end/flambda/inline_and_simplify.ml[1687,71376+49]..[1687,71376+56])
                                    ]
                              ]
                              expression (middle_end/flambda/inline_and_simplify.ml[1688,71436+2]..[1701,72057+8])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inline_and_simplify.ml[1688,71436+6]..[1688,71436+12])
                                      Ppat_var "result" (middle_end/flambda/inline_and_simplify.ml[1688,71436+6]..[1688,71436+12])
                                    expression (middle_end/flambda/inline_and_simplify.ml[1688,71436+15]..[1688,71436+67])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1688,71436+15]..[1688,71436+60])
                                        Pexp_ident "Flambda_utils.introduce_needed_import_symbols" (middle_end/flambda/inline_and_simplify.ml[1688,71436+15]..[1688,71436+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1688,71436+61]..[1688,71436+67])
                                            Pexp_ident "result" (middle_end/flambda/inline_and_simplify.ml[1688,71436+61]..[1688,71436+67])
                                      ]
                                ]
                                expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+2]..[1701,72057+8])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+2]..[1694,71766+5])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+5]..[1689,71507+69])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+5]..[1689,71507+8])
                                        Pexp_ident "not" (middle_end/flambda/inline_and_simplify.ml[1689,71507+5]..[1689,71507+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+9]..[1689,71507+69])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+10]..[1689,71507+39])
                                              Pexp_ident "Static_exception.Set.is_empty" (middle_end/flambda/inline_and_simplify.ml[1689,71507+10]..[1689,71507+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+40]..[1689,71507+68])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+41]..[1689,71507+65])
                                                    Pexp_ident "R.used_static_exceptions" (middle_end/flambda/inline_and_simplify.ml[1689,71507+41]..[1689,71507+65])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1689,71507+66]..[1689,71507+67])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1689,71507+66]..[1689,71507+67])
                                                  ]
                                            ]
                                      ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1690,71577+7]..[1694,71766+5])
                                      Pexp_apply
                                      expression (middle_end/flambda/inline_and_simplify.ml[1691,71590+4]..[1691,71590+20])
                                        Pexp_ident "Misc.fatal_error" (middle_end/flambda/inline_and_simplify.ml[1691,71590+4]..[1691,71590+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inline_and_simplify.ml[1691,71590+21]..[1693,71730+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1691,71590+22]..[1691,71590+37])
                                              Pexp_ident "Format.asprintf" (middle_end/flambda/inline_and_simplify.ml[1691,71590+22]..[1691,71590+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1691,71590+38]..[1691,71590+77])
                                                  Pexp_constant PConst_string("Remaining static exceptions: %a@.%a@.",(middle_end/flambda/inline_and_simplify.ml[1691,71590+39]..[1691,71590+76]),None)
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1692,71668+6]..[1692,71668+32])
                                                  Pexp_ident "Static_exception.Set.print" (middle_end/flambda/inline_and_simplify.ml[1692,71668+6]..[1692,71668+32])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1692,71668+33]..[1692,71668+61])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1692,71668+34]..[1692,71668+58])
                                                    Pexp_ident "R.used_static_exceptions" (middle_end/flambda/inline_and_simplify.ml[1692,71668+34]..[1692,71668+58])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inline_and_simplify.ml[1692,71668+59]..[1692,71668+60])
                                                        Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1692,71668+59]..[1692,71668+60])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1693,71730+6]..[1693,71730+27])
                                                  Pexp_ident "Flambda.print_program" (middle_end/flambda/inline_and_simplify.ml[1693,71730+6]..[1693,71730+27])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inline_and_simplify.ml[1693,71730+28]..[1693,71730+34])
                                                  Pexp_ident "result" (middle_end/flambda/inline_and_simplify.ml[1693,71730+28]..[1693,71730+34])
                                            ]
                                      ]
                                    None
                                  expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+2]..[1701,72057+8])
                                    Pexp_sequence
                                    expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+2]..[1695,71773+69])
                                      Pexp_assert
                                      expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+9]..[1695,71773+69])
                                        Pexp_apply
                                        expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+10]..[1695,71773+39])
                                          Pexp_ident "Static_exception.Set.is_empty" (middle_end/flambda/inline_and_simplify.ml[1695,71773+10]..[1695,71773+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+40]..[1695,71773+68])
                                              Pexp_apply
                                              expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+41]..[1695,71773+65])
                                                Pexp_ident "R.used_static_exceptions" (middle_end/flambda/inline_and_simplify.ml[1695,71773+41]..[1695,71773+65])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inline_and_simplify.ml[1695,71773+66]..[1695,71773+67])
                                                    Pexp_ident "r" (middle_end/flambda/inline_and_simplify.ml[1695,71773+66]..[1695,71773+67])
                                              ]
                                        ]
                                    expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+2]..[1701,72057+8])
                                      Pexp_sequence
                                      expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+2]..[1699,72013+5])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+5]..[1696,71844+29])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+5]..[1696,71844+6])
                                            Pexp_ident "!" (middle_end/flambda/inline_and_simplify.ml[1696,71844+5]..[1696,71844+6])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+6]..[1696,71844+29])
                                                Pexp_ident "Clflags.inlining_report" (middle_end/flambda/inline_and_simplify.ml[1696,71844+6]..[1696,71844+29])
                                          ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1696,71844+35]..[1699,72013+5])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inline_and_simplify.ml[1697,71885+8]..[1697,71885+21])
                                                Ppat_var "output_prefix" (middle_end/flambda/inline_and_simplify.ml[1697,71885+8]..[1697,71885+21])
                                              expression (middle_end/flambda/inline_and_simplify.ml[1697,71885+24]..[1697,71885+63])
                                                Pexp_apply
                                                expression (middle_end/flambda/inline_and_simplify.ml[1697,71885+24]..[1697,71885+38])
                                                  Pexp_ident "Printf.sprintf" (middle_end/flambda/inline_and_simplify.ml[1697,71885+24]..[1697,71885+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1697,71885+39]..[1697,71885+46])
                                                      Pexp_constant PConst_string("%s.%d",(middle_end/flambda/inline_and_simplify.ml[1697,71885+40]..[1697,71885+45]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1697,71885+47]..[1697,71885+57])
                                                      Pexp_ident "prefixname" (middle_end/flambda/inline_and_simplify.ml[1697,71885+47]..[1697,71885+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inline_and_simplify.ml[1697,71885+58]..[1697,71885+63])
                                                      Pexp_ident "round" (middle_end/flambda/inline_and_simplify.ml[1697,71885+58]..[1697,71885+63])
                                                ]
                                          ]
                                          expression (middle_end/flambda/inline_and_simplify.ml[1698,71952+4]..[1698,71952+60])
                                            Pexp_apply
                                            expression (middle_end/flambda/inline_and_simplify.ml[1698,71952+4]..[1698,71952+45])
                                              Pexp_ident "Inlining_stats.save_then_forget_decisions" (middle_end/flambda/inline_and_simplify.ml[1698,71952+4]..[1698,71952+45])
                                            [
                                              <arg>
                                              Labelled "output_prefix"
                                                expression (middle_end/flambda/inline_and_simplify.ml[1698,71952+47]..[1698,71952+60])
                                                  Pexp_ident "output_prefix" (middle_end/flambda/inline_and_simplify.ml[1698,71952+47]..[1698,71952+60])
                                            ]
                                        None
                                      expression (middle_end/flambda/inline_and_simplify.ml[1700,72020+2]..[1701,72057+8])
                                        Pexp_sequence
                                        expression (middle_end/flambda/inline_and_simplify.ml[1700,72020+2]..[1700,72020+35])
                                          Pexp_apply
                                          expression (middle_end/flambda/inline_and_simplify.ml[1700,72020+26]..[1700,72020+28])
                                            Pexp_ident ":=" (middle_end/flambda/inline_and_simplify.ml[1700,72020+26]..[1700,72020+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1700,72020+2]..[1700,72020+25])
                                                Pexp_ident "Clflags.inlining_report" (middle_end/flambda/inline_and_simplify.ml[1700,72020+2]..[1700,72020+25])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inline_and_simplify.ml[1700,72020+29]..[1700,72020+35])
                                                Pexp_ident "report" (middle_end/flambda/inline_and_simplify.ml[1700,72020+29]..[1700,72020+35])
                                          ]
                                        expression (middle_end/flambda/inline_and_simplify.ml[1701,72057+2]..[1701,72057+8])
                                          Pexp_ident "result" (middle_end/flambda/inline_and_simplify.ml[1701,72057+2]..[1701,72057+8])
    ]
]

