[
  structure_item (file_formats/linear_format.ml[19,1297+0]..[21,1348+30])
    Pstr_type Rec
    [
      type_declaration "linear_item_info" (file_formats/linear_format.ml[19,1297+5]..[19,1297+21]) (file_formats/linear_format.ml[19,1297+0]..[21,1348+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/linear_format.ml[20,1321+2]..[20,1321+26])
                "Func" (file_formats/linear_format.ml[20,1321+4]..[20,1321+8])
                [
                  core_type (file_formats/linear_format.ml[20,1321+12]..[20,1321+26])
                    Ptyp_constr "Linear.fundecl" (file_formats/linear_format.ml[20,1321+12]..[20,1321+26])
                    []
                ]
                None
              (file_formats/linear_format.ml[21,1348+2]..[21,1348+30])
                "Data" (file_formats/linear_format.ml[21,1348+4]..[21,1348+8])
                [
                  core_type (file_formats/linear_format.ml[21,1348+12]..[21,1348+30])
                    Ptyp_constr "list" (file_formats/linear_format.ml[21,1348+26]..[21,1348+30])
                    [
                      core_type (file_formats/linear_format.ml[21,1348+12]..[21,1348+25])
                        Ptyp_constr "Cmm.data_item" (file_formats/linear_format.ml[21,1348+12]..[21,1348+25])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/linear_format.ml[23,1380+0]..[28,1520+3])
    Pstr_type Rec
    [
      type_declaration "linear_unit_info" (file_formats/linear_format.ml[23,1380+5]..[23,1380+21]) (file_formats/linear_format.ml[23,1380+0]..[28,1520+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (file_formats/linear_format.ml[25,1408+4]..[25,1408+31])
                Mutable
                "unit_name" (file_formats/linear_format.ml[25,1408+12]..[25,1408+21])                core_type (file_formats/linear_format.ml[25,1408+24]..[25,1408+30])
                  Ptyp_constr "string" (file_formats/linear_format.ml[25,1408+24]..[25,1408+30])
                  []
              (file_formats/linear_format.ml[26,1440+4]..[26,1440+42])
                Mutable
                "items" (file_formats/linear_format.ml[26,1440+12]..[26,1440+17])                core_type (file_formats/linear_format.ml[26,1440+20]..[26,1440+41])
                  Ptyp_constr "list" (file_formats/linear_format.ml[26,1440+37]..[26,1440+41])
                  [
                    core_type (file_formats/linear_format.ml[26,1440+20]..[26,1440+36])
                      Ptyp_constr "linear_item_info" (file_formats/linear_format.ml[26,1440+20]..[26,1440+36])
                      []
                  ]
              (file_formats/linear_format.ml[27,1483+4]..[27,1483+36])
                Mutable
                "for_pack" (file_formats/linear_format.ml[27,1483+12]..[27,1483+20])                core_type (file_formats/linear_format.ml[27,1483+23]..[27,1483+36])
                  Ptyp_constr "option" (file_formats/linear_format.ml[27,1483+30]..[27,1483+36])
                  [
                    core_type (file_formats/linear_format.ml[27,1483+23]..[27,1483+29])
                      Ptyp_constr "string" (file_formats/linear_format.ml[27,1483+23]..[27,1483+29])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/linear_format.ml[30,1525+0]..[34,1617+28])
    Pstr_type Rec
    [
      type_declaration "error" (file_formats/linear_format.ml[30,1525+5]..[30,1525+10]) (file_formats/linear_format.ml[30,1525+0]..[34,1617+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/linear_format.ml[31,1538+2]..[31,1538+26])
                "Wrong_format" (file_formats/linear_format.ml[31,1538+4]..[31,1538+16])
                [
                  core_type (file_formats/linear_format.ml[31,1538+20]..[31,1538+26])
                    Ptyp_constr "string" (file_formats/linear_format.ml[31,1538+20]..[31,1538+26])
                    []
                ]
                None
              (file_formats/linear_format.ml[32,1565+2]..[32,1565+27])
                "Wrong_version" (file_formats/linear_format.ml[32,1565+4]..[32,1565+17])
                [
                  core_type (file_formats/linear_format.ml[32,1565+21]..[32,1565+27])
                    Ptyp_constr "string" (file_formats/linear_format.ml[32,1565+21]..[32,1565+27])
                    []
                ]
                None
              (file_formats/linear_format.ml[33,1593+2]..[33,1593+23])
                "Corrupted" (file_formats/linear_format.ml[33,1593+4]..[33,1593+13])
                [
                  core_type (file_formats/linear_format.ml[33,1593+17]..[33,1593+23])
                    Ptyp_constr "string" (file_formats/linear_format.ml[33,1593+17]..[33,1593+23])
                    []
                ]
                None
              (file_formats/linear_format.ml[34,1617+2]..[34,1617+28])
                "Marshal_failed" (file_formats/linear_format.ml[34,1617+4]..[34,1617+18])
                [
                  core_type (file_formats/linear_format.ml[34,1617+22]..[34,1617+28])
                    Ptyp_constr "string" (file_formats/linear_format.ml[34,1617+22]..[34,1617+28])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/linear_format.ml[36,1647+0]..[36,1647+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (file_formats/linear_format.ml[36,1647+0]..[36,1647+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (file_formats/linear_format.ml[36,1647+19]..[36,1647+24])
                  Ptyp_constr "error" (file_formats/linear_format.ml[36,1647+19]..[36,1647+24])
                  []
              ]
              None
  structure_item (file_formats/linear_format.ml[38,1673+0]..[51,2152+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/linear_format.ml[38,1673+4]..[38,1673+8])
          Ppat_var "save" (file_formats/linear_format.ml[38,1673+4]..[38,1673+8])
        expression (file_formats/linear_format.ml[38,1673+9]..[51,2152+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/linear_format.ml[38,1673+9]..[38,1673+17])
            Ppat_var "filename" (file_formats/linear_format.ml[38,1673+9]..[38,1673+17])
          expression (file_formats/linear_format.ml[38,1673+18]..[51,2152+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (file_formats/linear_format.ml[38,1673+18]..[38,1673+34])
              Ppat_var "linear_unit_info" (file_formats/linear_format.ml[38,1673+18]..[38,1673+34])
            expression (file_formats/linear_format.ml[39,1710+2]..[51,2152+70])
              Pexp_let Nonrec
              [
                <def>
                  pattern (file_formats/linear_format.ml[39,1710+6]..[39,1710+8])
                    Ppat_var "ch" (file_formats/linear_format.ml[39,1710+6]..[39,1710+8])
                  expression (file_formats/linear_format.ml[39,1710+11]..[39,1710+32])
                    Pexp_apply
                    expression (file_formats/linear_format.ml[39,1710+11]..[39,1710+23])
                      Pexp_ident "open_out_bin" (file_formats/linear_format.ml[39,1710+11]..[39,1710+23])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/linear_format.ml[39,1710+24]..[39,1710+32])
                          Pexp_ident "filename" (file_formats/linear_format.ml[39,1710+24]..[39,1710+32])
                    ]
              ]
              expression (file_formats/linear_format.ml[40,1746+2]..[51,2152+70])
                Pexp_apply
                expression (file_formats/linear_format.ml[40,1746+2]..[40,1746+18])
                  Pexp_ident "Misc.try_finally" (file_formats/linear_format.ml[40,1746+2]..[40,1746+18])
                [
                  <arg>
                  Nolabel
                    expression (file_formats/linear_format.ml[40,1746+19]..[49,2111+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (file_formats/linear_format.ml[40,1746+24]..[40,1746+26])
                        Ppat_construct "()" (file_formats/linear_format.ml[40,1746+24]..[40,1746+26])
                        None
                      expression (file_formats/linear_format.ml[41,1776+4]..[48,2087+23])
                        Pexp_sequence
                        expression (file_formats/linear_format.ml[41,1776+4]..[41,1776+47])
                          Pexp_apply
                          expression (file_formats/linear_format.ml[41,1776+4]..[41,1776+17])
                            Pexp_ident "output_string" (file_formats/linear_format.ml[41,1776+4]..[41,1776+17])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/linear_format.ml[41,1776+18]..[41,1776+20])
                                Pexp_ident "ch" (file_formats/linear_format.ml[41,1776+18]..[41,1776+20])
                            <arg>
                            Nolabel
                              expression (file_formats/linear_format.ml[41,1776+21]..[41,1776+47])
                                Pexp_ident "Config.linear_magic_number" (file_formats/linear_format.ml[41,1776+21]..[41,1776+47])
                          ]
                        expression (file_formats/linear_format.ml[42,1825+4]..[48,2087+23])
                          Pexp_sequence
                          expression (file_formats/linear_format.ml[42,1825+4]..[42,1825+36])
                            Pexp_apply
                            expression (file_formats/linear_format.ml[42,1825+4]..[42,1825+16])
                              Pexp_ident "output_value" (file_formats/linear_format.ml[42,1825+4]..[42,1825+16])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/linear_format.ml[42,1825+17]..[42,1825+19])
                                  Pexp_ident "ch" (file_formats/linear_format.ml[42,1825+17]..[42,1825+19])
                              <arg>
                              Nolabel
                                expression (file_formats/linear_format.ml[42,1825+20]..[42,1825+36])
                                  Pexp_ident "linear_unit_info" (file_formats/linear_format.ml[42,1825+20]..[42,1825+36])
                            ]
                          expression (file_formats/linear_format.ml[44,1927+4]..[48,2087+23])
                            Pexp_sequence
                            expression (file_formats/linear_format.ml[44,1927+4]..[44,1927+38])
                              Pexp_apply
                              expression (file_formats/linear_format.ml[44,1927+4]..[44,1927+16])
                                Pexp_ident "output_value" (file_formats/linear_format.ml[44,1927+4]..[44,1927+16])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/linear_format.ml[44,1927+17]..[44,1927+19])
                                    Pexp_ident "ch" (file_formats/linear_format.ml[44,1927+17]..[44,1927+19])
                                <arg>
                                Nolabel
                                  expression (file_formats/linear_format.ml[44,1927+20]..[44,1927+38])
                                    Pexp_apply
                                    expression (file_formats/linear_format.ml[44,1927+21]..[44,1927+34])
                                      Pexp_ident "Cmm.cur_label" (file_formats/linear_format.ml[44,1927+21]..[44,1927+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/linear_format.ml[44,1927+35]..[44,1927+37])
                                          Pexp_construct "()" (file_formats/linear_format.ml[44,1927+35]..[44,1927+37])
                                          None
                                    ]
                              ]
                            expression (file_formats/linear_format.ml[46,2035+4]..[48,2087+23])
                              Pexp_sequence
                              expression (file_formats/linear_format.ml[46,2035+4]..[46,2035+12])
                                Pexp_apply
                                expression (file_formats/linear_format.ml[46,2035+4]..[46,2035+9])
                                  Pexp_ident "flush" (file_formats/linear_format.ml[46,2035+4]..[46,2035+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/linear_format.ml[46,2035+10]..[46,2035+12])
                                      Pexp_ident "ch" (file_formats/linear_format.ml[46,2035+10]..[46,2035+12])
                                ]
                              expression (file_formats/linear_format.ml[47,2049+4]..[48,2087+23])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (file_formats/linear_format.ml[47,2049+8]..[47,2049+11])
                                      Ppat_var "crc" (file_formats/linear_format.ml[47,2049+8]..[47,2049+11])
                                    expression (file_formats/linear_format.ml[47,2049+14]..[47,2049+34])
                                      Pexp_apply
                                      expression (file_formats/linear_format.ml[47,2049+14]..[47,2049+25])
                                        Pexp_ident "Digest.file" (file_formats/linear_format.ml[47,2049+14]..[47,2049+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[47,2049+26]..[47,2049+34])
                                            Pexp_ident "filename" (file_formats/linear_format.ml[47,2049+26]..[47,2049+34])
                                      ]
                                ]
                                expression (file_formats/linear_format.ml[48,2087+4]..[48,2087+23])
                                  Pexp_apply
                                  expression (file_formats/linear_format.ml[48,2087+4]..[48,2087+16])
                                    Pexp_ident "output_value" (file_formats/linear_format.ml[48,2087+4]..[48,2087+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/linear_format.ml[48,2087+17]..[48,2087+19])
                                        Pexp_ident "ch" (file_formats/linear_format.ml[48,2087+17]..[48,2087+19])
                                    <arg>
                                    Nolabel
                                      expression (file_formats/linear_format.ml[48,2087+20]..[48,2087+23])
                                        Pexp_ident "crc" (file_formats/linear_format.ml[48,2087+20]..[48,2087+23])
                                  ]
                  <arg>
                  Labelled "always"
                    expression (file_formats/linear_format.ml[50,2115+12]..[50,2115+36])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (file_formats/linear_format.ml[50,2115+17]..[50,2115+19])
                        Ppat_construct "()" (file_formats/linear_format.ml[50,2115+17]..[50,2115+19])
                        None
                      expression (file_formats/linear_format.ml[50,2115+23]..[50,2115+35])
                        Pexp_apply
                        expression (file_formats/linear_format.ml[50,2115+23]..[50,2115+32])
                          Pexp_ident "close_out" (file_formats/linear_format.ml[50,2115+23]..[50,2115+32])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/linear_format.ml[50,2115+33]..[50,2115+35])
                              Pexp_ident "ch" (file_formats/linear_format.ml[50,2115+33]..[50,2115+35])
                        ]
                  <arg>
                  Labelled "exceptionally"
                    expression (file_formats/linear_format.ml[51,2152+19]..[51,2152+70])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (file_formats/linear_format.ml[51,2152+24]..[51,2152+26])
                        Ppat_construct "()" (file_formats/linear_format.ml[51,2152+24]..[51,2152+26])
                        None
                      expression (file_formats/linear_format.ml[51,2152+30]..[51,2152+69])
                        Pexp_apply
                        expression (file_formats/linear_format.ml[51,2152+30]..[51,2152+35])
                          Pexp_ident "raise" (file_formats/linear_format.ml[51,2152+30]..[51,2152+35])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/linear_format.ml[51,2152+36]..[51,2152+69])
                              Pexp_construct "Error" (file_formats/linear_format.ml[51,2152+37]..[51,2152+42])
                              Some
                                expression (file_formats/linear_format.ml[51,2152+43]..[51,2152+68])
                                  Pexp_construct "Marshal_failed" (file_formats/linear_format.ml[51,2152+44]..[51,2152+58])
                                  Some
                                    expression (file_formats/linear_format.ml[51,2152+59]..[51,2152+67])
                                      Pexp_ident "filename" (file_formats/linear_format.ml[51,2152+59]..[51,2152+67])
                        ]
                ]
    ]
  structure_item (file_formats/linear_format.ml[53,2224+0]..[75,3079+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/linear_format.ml[53,2224+4]..[53,2224+11])
          Ppat_var "restore" (file_formats/linear_format.ml[53,2224+4]..[53,2224+11])
        expression (file_formats/linear_format.ml[53,2224+12]..[75,3079+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/linear_format.ml[53,2224+12]..[53,2224+20])
            Ppat_var "filename" (file_formats/linear_format.ml[53,2224+12]..[53,2224+20])
          expression (file_formats/linear_format.ml[54,2247+2]..[75,3079+35])
            Pexp_let Nonrec
            [
              <def>
                pattern (file_formats/linear_format.ml[54,2247+6]..[54,2247+8])
                  Ppat_var "ic" (file_formats/linear_format.ml[54,2247+6]..[54,2247+8])
                expression (file_formats/linear_format.ml[54,2247+11]..[54,2247+31])
                  Pexp_apply
                  expression (file_formats/linear_format.ml[54,2247+11]..[54,2247+22])
                    Pexp_ident "open_in_bin" (file_formats/linear_format.ml[54,2247+11]..[54,2247+22])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[54,2247+23]..[54,2247+31])
                        Pexp_ident "filename" (file_formats/linear_format.ml[54,2247+23]..[54,2247+31])
                  ]
            ]
            expression (file_formats/linear_format.ml[55,2282+2]..[75,3079+35])
              Pexp_apply
              expression (file_formats/linear_format.ml[55,2282+2]..[55,2282+18])
                Pexp_ident "Misc.try_finally" (file_formats/linear_format.ml[55,2282+2]..[55,2282+18])
              [
                <arg>
                Nolabel
                  expression (file_formats/linear_format.ml[56,2301+4]..[74,3073+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (file_formats/linear_format.ml[56,2301+9]..[56,2301+11])
                      Ppat_construct "()" (file_formats/linear_format.ml[56,2301+9]..[56,2301+11])
                      None
                    expression (file_formats/linear_format.ml[57,2316+7]..[73,3026+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (file_formats/linear_format.ml[57,2316+11]..[57,2316+16])
                            Ppat_var "magic" (file_formats/linear_format.ml[57,2316+11]..[57,2316+16])
                          expression (file_formats/linear_format.ml[57,2316+19]..[57,2316+45])
                            Pexp_ident "Config.linear_magic_number" (file_formats/linear_format.ml[57,2316+19]..[57,2316+45])
                      ]
                      expression (file_formats/linear_format.ml[58,2365+7]..[73,3026+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (file_formats/linear_format.ml[58,2365+11]..[58,2365+17])
                              Ppat_var "buffer" (file_formats/linear_format.ml[58,2365+11]..[58,2365+17])
                            expression (file_formats/linear_format.ml[58,2365+20]..[58,2365+64])
                              Pexp_apply
                              expression (file_formats/linear_format.ml[58,2365+20]..[58,2365+39])
                                Pexp_ident "really_input_string" (file_formats/linear_format.ml[58,2365+20]..[58,2365+39])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/linear_format.ml[58,2365+40]..[58,2365+42])
                                    Pexp_ident "ic" (file_formats/linear_format.ml[58,2365+40]..[58,2365+42])
                                <arg>
                                Nolabel
                                  expression (file_formats/linear_format.ml[58,2365+43]..[58,2365+64])
                                    Pexp_apply
                                    expression (file_formats/linear_format.ml[58,2365+44]..[58,2365+57])
                                      Pexp_ident "String.length" (file_formats/linear_format.ml[58,2365+44]..[58,2365+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/linear_format.ml[58,2365+58]..[58,2365+63])
                                          Pexp_ident "magic" (file_formats/linear_format.ml[58,2365+58]..[58,2365+63])
                                    ]
                              ]
                        ]
                        expression (file_formats/linear_format.ml[59,2433+7]..[73,3026+46])
                          Pexp_ifthenelse
                          expression (file_formats/linear_format.ml[59,2433+10]..[59,2433+35])
                            Pexp_apply
                            expression (file_formats/linear_format.ml[59,2433+10]..[59,2433+22])
                              Pexp_ident "String.equal" (file_formats/linear_format.ml[59,2433+10]..[59,2433+22])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/linear_format.ml[59,2433+23]..[59,2433+29])
                                  Pexp_ident "buffer" (file_formats/linear_format.ml[59,2433+23]..[59,2433+29])
                              <arg>
                              Nolabel
                                expression (file_formats/linear_format.ml[59,2433+30]..[59,2433+35])
                                  Pexp_ident "magic" (file_formats/linear_format.ml[59,2433+30]..[59,2433+35])
                            ]
                          expression (file_formats/linear_format.ml[59,2433+41]..[69,2890+10])
                            Pexp_try
                            expression (file_formats/linear_format.ml[61,2493+11]..[66,2740+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (file_formats/linear_format.ml[61,2493+15]..[61,2493+31])
                                    Ppat_var "linear_unit_info" (file_formats/linear_format.ml[61,2493+15]..[61,2493+31])
                                  expression (file_formats/linear_format.ml[61,2493+34]..[61,2493+69])
                                    Pexp_constraint
                                    expression (file_formats/linear_format.ml[61,2493+35]..[61,2493+49])
                                      Pexp_apply
                                      expression (file_formats/linear_format.ml[61,2493+35]..[61,2493+46])
                                        Pexp_ident "input_value" (file_formats/linear_format.ml[61,2493+35]..[61,2493+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[61,2493+47]..[61,2493+49])
                                            Pexp_ident "ic" (file_formats/linear_format.ml[61,2493+47]..[61,2493+49])
                                      ]
                                    core_type (file_formats/linear_format.ml[61,2493+52]..[61,2493+68])
                                      Ptyp_constr "linear_unit_info" (file_formats/linear_format.ml[61,2493+52]..[61,2493+68])
                                      []
                              ]
                              expression (file_formats/linear_format.ml[62,2566+11]..[66,2740+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (file_formats/linear_format.ml[62,2566+15]..[62,2566+25])
                                      Ppat_var "last_label" (file_formats/linear_format.ml[62,2566+15]..[62,2566+25])
                                    expression (file_formats/linear_format.ml[62,2566+28]..[62,2566+56])
                                      Pexp_constraint
                                      expression (file_formats/linear_format.ml[62,2566+29]..[62,2566+43])
                                        Pexp_apply
                                        expression (file_formats/linear_format.ml[62,2566+29]..[62,2566+40])
                                          Pexp_ident "input_value" (file_formats/linear_format.ml[62,2566+29]..[62,2566+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (file_formats/linear_format.ml[62,2566+41]..[62,2566+43])
                                              Pexp_ident "ic" (file_formats/linear_format.ml[62,2566+41]..[62,2566+43])
                                        ]
                                      core_type (file_formats/linear_format.ml[62,2566+46]..[62,2566+55])
                                        Ptyp_constr "Cmm.label" (file_formats/linear_format.ml[62,2566+46]..[62,2566+55])
                                        []
                                ]
                                expression (file_formats/linear_format.ml[63,2626+11]..[66,2740+32])
                                  Pexp_sequence
                                  expression (file_formats/linear_format.ml[63,2626+11]..[63,2626+23])
                                    Pexp_apply
                                    expression (file_formats/linear_format.ml[63,2626+11]..[63,2626+20])
                                      Pexp_ident "Cmm.reset" (file_formats/linear_format.ml[63,2626+11]..[63,2626+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/linear_format.ml[63,2626+21]..[63,2626+23])
                                          Pexp_construct "()" (file_formats/linear_format.ml[63,2626+21]..[63,2626+23])
                                          None
                                    ]
                                  expression (file_formats/linear_format.ml[64,2651+11]..[66,2740+32])
                                    Pexp_sequence
                                    expression (file_formats/linear_format.ml[64,2651+11]..[64,2651+35])
                                      Pexp_apply
                                      expression (file_formats/linear_format.ml[64,2651+11]..[64,2651+24])
                                        Pexp_ident "Cmm.set_label" (file_formats/linear_format.ml[64,2651+11]..[64,2651+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[64,2651+25]..[64,2651+35])
                                            Pexp_ident "last_label" (file_formats/linear_format.ml[64,2651+25]..[64,2651+35])
                                      ]
                                    expression (file_formats/linear_format.ml[65,2688+11]..[66,2740+32])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (file_formats/linear_format.ml[65,2688+15]..[65,2688+18])
                                            Ppat_var "crc" (file_formats/linear_format.ml[65,2688+15]..[65,2688+18])
                                          expression (file_formats/linear_format.ml[65,2688+21]..[65,2688+48])
                                            Pexp_constraint
                                            expression (file_formats/linear_format.ml[65,2688+22]..[65,2688+36])
                                              Pexp_apply
                                              expression (file_formats/linear_format.ml[65,2688+22]..[65,2688+33])
                                                Pexp_ident "input_value" (file_formats/linear_format.ml[65,2688+22]..[65,2688+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (file_formats/linear_format.ml[65,2688+34]..[65,2688+36])
                                                    Pexp_ident "ic" (file_formats/linear_format.ml[65,2688+34]..[65,2688+36])
                                              ]
                                            core_type (file_formats/linear_format.ml[65,2688+39]..[65,2688+47])
                                              Ptyp_constr "Digest.t" (file_formats/linear_format.ml[65,2688+39]..[65,2688+47])
                                              []
                                      ]
                                      expression (file_formats/linear_format.ml[66,2740+11]..[66,2740+32])
                                        Pexp_tuple
                                        [
                                          expression (file_formats/linear_format.ml[66,2740+11]..[66,2740+27])
                                            Pexp_ident "linear_unit_info" (file_formats/linear_format.ml[66,2740+11]..[66,2740+27])
                                          expression (file_formats/linear_format.ml[66,2740+29]..[66,2740+32])
                                            Pexp_ident "crc" (file_formats/linear_format.ml[66,2740+29]..[66,2740+32])
                                        ]
                            [
                              <case>
                                pattern (file_formats/linear_format.ml[67,2773+14]..[67,2773+37])
                                  Ppat_or
                                  pattern (file_formats/linear_format.ml[67,2773+14]..[67,2773+25])
                                    Ppat_construct "End_of_file" (file_formats/linear_format.ml[67,2773+14]..[67,2773+25])
                                    None
                                  pattern (file_formats/linear_format.ml[67,2773+28]..[67,2773+37])
                                    Ppat_construct "Failure" (file_formats/linear_format.ml[67,2773+28]..[67,2773+35])
                                    Some
                                      []
                                      pattern (file_formats/linear_format.ml[67,2773+36]..[67,2773+37])
                                        Ppat_any
                                expression (file_formats/linear_format.ml[67,2773+41]..[67,2773+75])
                                  Pexp_apply
                                  expression (file_formats/linear_format.ml[67,2773+41]..[67,2773+46])
                                    Pexp_ident "raise" (file_formats/linear_format.ml[67,2773+41]..[67,2773+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/linear_format.ml[67,2773+47]..[67,2773+75])
                                        Pexp_construct "Error" (file_formats/linear_format.ml[67,2773+48]..[67,2773+53])
                                        Some
                                          expression (file_formats/linear_format.ml[67,2773+54]..[67,2773+74])
                                            Pexp_construct "Corrupted" (file_formats/linear_format.ml[67,2773+55]..[67,2773+64])
                                            Some
                                              expression (file_formats/linear_format.ml[67,2773+65]..[67,2773+73])
                                                Pexp_ident "filename" (file_formats/linear_format.ml[67,2773+65]..[67,2773+73])
                                  ]
                              <case>
                                pattern (file_formats/linear_format.ml[68,2849+14]..[68,2849+21])
                                  Ppat_construct "Error" (file_formats/linear_format.ml[68,2849+14]..[68,2849+19])
                                  Some
                                    []
                                    pattern (file_formats/linear_format.ml[68,2849+20]..[68,2849+21])
                                      Ppat_var "e" (file_formats/linear_format.ml[68,2849+20]..[68,2849+21])
                                expression (file_formats/linear_format.ml[68,2849+25]..[68,2849+40])
                                  Pexp_apply
                                  expression (file_formats/linear_format.ml[68,2849+25]..[68,2849+30])
                                    Pexp_ident "raise" (file_formats/linear_format.ml[68,2849+25]..[68,2849+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/linear_format.ml[68,2849+31]..[68,2849+40])
                                        Pexp_construct "Error" (file_formats/linear_format.ml[68,2849+32]..[68,2849+37])
                                        Some
                                          expression (file_formats/linear_format.ml[68,2849+38]..[68,2849+39])
                                            Pexp_ident "e" (file_formats/linear_format.ml[68,2849+38]..[68,2849+39])
                                  ]
                            ]
                          Some
                            expression (file_formats/linear_format.ml[70,2901+12]..[73,3026+46])
                              Pexp_ifthenelse
                              expression (file_formats/linear_format.ml[70,2901+15]..[70,2901+59])
                                Pexp_apply
                                expression (file_formats/linear_format.ml[70,2901+37]..[70,2901+38])
                                  Pexp_ident "=" (file_formats/linear_format.ml[70,2901+37]..[70,2901+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/linear_format.ml[70,2901+15]..[70,2901+36])
                                      Pexp_apply
                                      expression (file_formats/linear_format.ml[70,2901+15]..[70,2901+25])
                                        Pexp_ident "String.sub" (file_formats/linear_format.ml[70,2901+15]..[70,2901+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+26]..[70,2901+32])
                                            Pexp_ident "buffer" (file_formats/linear_format.ml[70,2901+26]..[70,2901+32])
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+33]..[70,2901+34])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+35]..[70,2901+36])
                                            Pexp_constant PConst_int (9,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (file_formats/linear_format.ml[70,2901+39]..[70,2901+59])
                                      Pexp_apply
                                      expression (file_formats/linear_format.ml[70,2901+39]..[70,2901+49])
                                        Pexp_ident "String.sub" (file_formats/linear_format.ml[70,2901+39]..[70,2901+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+50]..[70,2901+55])
                                            Pexp_ident "magic" (file_formats/linear_format.ml[70,2901+50]..[70,2901+55])
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+56]..[70,2901+57])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (file_formats/linear_format.ml[70,2901+58]..[70,2901+59])
                                            Pexp_constant PConst_int (9,None)
                                      ]
                                ]
                              expression (file_formats/linear_format.ml[71,2966+9]..[71,2966+47])
                                Pexp_apply
                                expression (file_formats/linear_format.ml[71,2966+9]..[71,2966+14])
                                  Pexp_ident "raise" (file_formats/linear_format.ml[71,2966+9]..[71,2966+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/linear_format.ml[71,2966+15]..[71,2966+47])
                                      Pexp_construct "Error" (file_formats/linear_format.ml[71,2966+16]..[71,2966+21])
                                      Some
                                        expression (file_formats/linear_format.ml[71,2966+22]..[71,2966+46])
                                          Pexp_construct "Wrong_version" (file_formats/linear_format.ml[71,2966+23]..[71,2966+36])
                                          Some
                                            expression (file_formats/linear_format.ml[71,2966+37]..[71,2966+45])
                                              Pexp_ident "filename" (file_formats/linear_format.ml[71,2966+37]..[71,2966+45])
                                ]
                              Some
                                expression (file_formats/linear_format.ml[73,3026+9]..[73,3026+46])
                                  Pexp_apply
                                  expression (file_formats/linear_format.ml[73,3026+9]..[73,3026+14])
                                    Pexp_ident "raise" (file_formats/linear_format.ml[73,3026+9]..[73,3026+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (file_formats/linear_format.ml[73,3026+15]..[73,3026+46])
                                        Pexp_construct "Error" (file_formats/linear_format.ml[73,3026+16]..[73,3026+21])
                                        Some
                                          expression (file_formats/linear_format.ml[73,3026+22]..[73,3026+45])
                                            Pexp_construct "Wrong_format" (file_formats/linear_format.ml[73,3026+23]..[73,3026+35])
                                            Some
                                              expression (file_formats/linear_format.ml[73,3026+36]..[73,3026+44])
                                                Pexp_ident "filename" (file_formats/linear_format.ml[73,3026+36]..[73,3026+44])
                                  ]
                <arg>
                Labelled "always"
                  expression (file_formats/linear_format.ml[75,3079+12]..[75,3079+35])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (file_formats/linear_format.ml[75,3079+17]..[75,3079+19])
                      Ppat_construct "()" (file_formats/linear_format.ml[75,3079+17]..[75,3079+19])
                      None
                    expression (file_formats/linear_format.ml[75,3079+23]..[75,3079+34])
                      Pexp_apply
                      expression (file_formats/linear_format.ml[75,3079+23]..[75,3079+31])
                        Pexp_ident "close_in" (file_formats/linear_format.ml[75,3079+23]..[75,3079+31])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/linear_format.ml[75,3079+32]..[75,3079+34])
                            Pexp_ident "ic" (file_formats/linear_format.ml[75,3079+32]..[75,3079+34])
                      ]
              ]
    ]
  structure_item (file_formats/linear_format.ml[79,3136+0]..[79,3136+11])
    Pstr_open Fresh
    module_expr (file_formats/linear_format.ml[79,3136+5]..[79,3136+11])
      Pmod_ident "Format" (file_formats/linear_format.ml[79,3136+5]..[79,3136+11])
  structure_item (file_formats/linear_format.ml[81,3149+0]..[94,3660+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/linear_format.ml[81,3149+4]..[81,3149+16])
          Ppat_var "report_error" (file_formats/linear_format.ml[81,3149+4]..[81,3149+16])
        expression (file_formats/linear_format.ml[81,3149+17]..[94,3660+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/linear_format.ml[81,3149+17]..[81,3149+20])
            Ppat_var "ppf" (file_formats/linear_format.ml[81,3149+17]..[81,3149+20])
          expression (file_formats/linear_format.ml[81,3149+23]..[94,3660+40])
            Pexp_function
            [
              <case>
                pattern (file_formats/linear_format.ml[82,3181+4]..[82,3181+25])
                  Ppat_construct "Wrong_format" (file_formats/linear_format.ml[82,3181+4]..[82,3181+16])
                  Some
                    []
                    pattern (file_formats/linear_format.ml[82,3181+17]..[82,3181+25])
                      Ppat_var "filename" (file_formats/linear_format.ml[82,3181+17]..[82,3181+25])
                expression (file_formats/linear_format.ml[83,3210+6]..[84,3275+40])
                  Pexp_apply
                  expression (file_formats/linear_format.ml[83,3210+6]..[83,3210+13])
                    Pexp_ident "fprintf" (file_formats/linear_format.ml[83,3210+6]..[83,3210+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[83,3210+14]..[83,3210+17])
                        Pexp_ident "ppf" (file_formats/linear_format.ml[83,3210+14]..[83,3210+17])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[83,3210+18]..[83,3210+64])
                        Pexp_constant PConst_string("Expected Linear format. Incompatible file %a",(file_formats/linear_format.ml[83,3210+19]..[83,3210+63]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[84,3275+8]..[84,3275+31])
                        Pexp_ident "Location.print_filename" (file_formats/linear_format.ml[84,3275+8]..[84,3275+31])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[84,3275+32]..[84,3275+40])
                        Pexp_ident "filename" (file_formats/linear_format.ml[84,3275+32]..[84,3275+40])
                  ]
              <case>
                pattern (file_formats/linear_format.ml[85,3316+4]..[85,3316+26])
                  Ppat_construct "Wrong_version" (file_formats/linear_format.ml[85,3316+4]..[85,3316+17])
                  Some
                    []
                    pattern (file_formats/linear_format.ml[85,3316+18]..[85,3316+26])
                      Ppat_var "filename" (file_formats/linear_format.ml[85,3316+18]..[85,3316+26])
                expression (file_formats/linear_format.ml[86,3346+6]..[88,3423+40])
                  Pexp_apply
                  expression (file_formats/linear_format.ml[86,3346+6]..[86,3346+13])
                    Pexp_ident "fprintf" (file_formats/linear_format.ml[86,3346+6]..[86,3346+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[86,3346+14]..[86,3346+17])
                        Pexp_ident "ppf" (file_formats/linear_format.ml[86,3346+14]..[86,3346+17])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[87,3364+8]..[87,3364+58])
                        Pexp_constant PConst_string("%a@ is not compatible with this version of OCaml",(file_formats/linear_format.ml[87,3364+9]..[87,3364+57]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[88,3423+8]..[88,3423+31])
                        Pexp_ident "Location.print_filename" (file_formats/linear_format.ml[88,3423+8]..[88,3423+31])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[88,3423+32]..[88,3423+40])
                        Pexp_ident "filename" (file_formats/linear_format.ml[88,3423+32]..[88,3423+40])
                  ]
              <case>
                pattern (file_formats/linear_format.ml[89,3464+4]..[89,3464+22])
                  Ppat_construct "Corrupted" (file_formats/linear_format.ml[89,3464+4]..[89,3464+13])
                  Some
                    []
                    pattern (file_formats/linear_format.ml[89,3464+14]..[89,3464+22])
                      Ppat_var "filename" (file_formats/linear_format.ml[89,3464+14]..[89,3464+22])
                expression (file_formats/linear_format.ml[90,3490+6]..[91,3531+40])
                  Pexp_apply
                  expression (file_formats/linear_format.ml[90,3490+6]..[90,3490+13])
                    Pexp_ident "fprintf" (file_formats/linear_format.ml[90,3490+6]..[90,3490+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[90,3490+14]..[90,3490+17])
                        Pexp_ident "ppf" (file_formats/linear_format.ml[90,3490+14]..[90,3490+17])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[90,3490+18]..[90,3490+40])
                        Pexp_constant PConst_string("Corrupted format@ %a",(file_formats/linear_format.ml[90,3490+19]..[90,3490+39]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[91,3531+8]..[91,3531+31])
                        Pexp_ident "Location.print_filename" (file_formats/linear_format.ml[91,3531+8]..[91,3531+31])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[91,3531+32]..[91,3531+40])
                        Pexp_ident "filename" (file_formats/linear_format.ml[91,3531+32]..[91,3531+40])
                  ]
              <case>
                pattern (file_formats/linear_format.ml[92,3572+4]..[92,3572+27])
                  Ppat_construct "Marshal_failed" (file_formats/linear_format.ml[92,3572+4]..[92,3572+18])
                  Some
                    []
                    pattern (file_formats/linear_format.ml[92,3572+19]..[92,3572+27])
                      Ppat_var "filename" (file_formats/linear_format.ml[92,3572+19]..[92,3572+27])
                expression (file_formats/linear_format.ml[93,3603+6]..[94,3660+40])
                  Pexp_apply
                  expression (file_formats/linear_format.ml[93,3603+6]..[93,3603+13])
                    Pexp_ident "fprintf" (file_formats/linear_format.ml[93,3603+6]..[93,3603+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[93,3603+14]..[93,3603+17])
                        Pexp_ident "ppf" (file_formats/linear_format.ml[93,3603+14]..[93,3603+17])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[93,3603+18]..[93,3603+56])
                        Pexp_constant PConst_string("Failed to marshal Linear to file@ %a",(file_formats/linear_format.ml[93,3603+19]..[93,3603+55]),None)
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[94,3660+8]..[94,3660+31])
                        Pexp_ident "Location.print_filename" (file_formats/linear_format.ml[94,3660+8]..[94,3660+31])
                    <arg>
                    Nolabel
                      expression (file_formats/linear_format.ml[94,3660+32]..[94,3660+40])
                        Pexp_ident "filename" (file_formats/linear_format.ml[94,3660+32]..[94,3660+40])
                  ]
            ]
    ]
  structure_item (file_formats/linear_format.ml[96,3702+0]..[101,3852+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/linear_format.ml[96,3702+4]..[96,3702+6])
          Ppat_construct "()" (file_formats/linear_format.ml[96,3702+4]..[96,3702+6])
          None
        expression (file_formats/linear_format.ml[97,3711+2]..[101,3852+5])
          Pexp_apply
          expression (file_formats/linear_format.ml[97,3711+2]..[97,3711+32])
            Pexp_ident "Location.register_error_of_exn" (file_formats/linear_format.ml[97,3711+2]..[97,3711+32])
          [
            <arg>
            Nolabel
              expression (file_formats/linear_format.ml[98,3744+4]..[101,3852+5])
                Pexp_function
                [
                  <case>
                    pattern (file_formats/linear_format.ml[99,3758+8]..[99,3758+17])
                      Ppat_construct "Error" (file_formats/linear_format.ml[99,3758+8]..[99,3758+13])
                      Some
                        []
                        pattern (file_formats/linear_format.ml[99,3758+14]..[99,3758+17])
                          Ppat_var "err" (file_formats/linear_format.ml[99,3758+14]..[99,3758+17])
                    expression (file_formats/linear_format.ml[99,3758+21]..[99,3758+75])
                      Pexp_construct "Some" (file_formats/linear_format.ml[99,3758+21]..[99,3758+25])
                      Some
                        expression (file_formats/linear_format.ml[99,3758+26]..[99,3758+75])
                          Pexp_apply
                          expression (file_formats/linear_format.ml[99,3758+27]..[99,3758+57])
                            Pexp_ident "Location.error_of_printer_file" (file_formats/linear_format.ml[99,3758+27]..[99,3758+57])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/linear_format.ml[99,3758+58]..[99,3758+70])
                                Pexp_ident "report_error" (file_formats/linear_format.ml[99,3758+58]..[99,3758+70])
                            <arg>
                            Nolabel
                              expression (file_formats/linear_format.ml[99,3758+71]..[99,3758+74])
                                Pexp_ident "err" (file_formats/linear_format.ml[99,3758+71]..[99,3758+74])
                          ]
                  <case>
                    pattern (file_formats/linear_format.ml[100,3834+8]..[100,3834+9])
                      Ppat_any
                    expression (file_formats/linear_format.ml[100,3834+13]..[100,3834+17])
                      Pexp_construct "None" (file_formats/linear_format.ml[100,3834+13]..[100,3834+17])
                      None
                ]
          ]
    ]
]

